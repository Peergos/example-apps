function peergoslib(){
  var $wnd_0 = window, $doc_0 = document, gwtOnLoad_0, bodyDone, base = '', metaProps = {}, values = [], providers = [], answers = [], softPermutationId = 0, onLoadErrorFunc, propertyErrorFunc;
  if (!$wnd_0.__gwt_stylesLoaded) {
    $wnd_0.__gwt_stylesLoaded = {};
  }
  if (!$wnd_0.__gwt_scriptsLoaded) {
    $wnd_0.__gwt_scriptsLoaded = {};
  }
  function isHostedMode(){
    var result = false;
    try {
      var query = $wnd_0.location.search;
      return (query.indexOf('gwt.codesvr=') != -1 || (query.indexOf('gwt.hosted=') != -1 || $wnd_0.external && $wnd_0.external.gwtOnLoad)) && query.indexOf('gwt.hybrid') == -1;
    }
     catch (e) {
    }
    isHostedMode = function(){
      return result;
    }
    ;
    return result;
  }

  function maybeStartModule(){
    if (gwtOnLoad_0 && bodyDone) {
      gwtOnLoad_0(onLoadErrorFunc, 'peergoslib', base, softPermutationId);
    }
  }

  function computeScriptBase(){
    var thisScript, markerId = '__gwt_marker_peergoslib', markerScript;
    $doc_0.write('<script id="' + markerId + '"><\/script>');
    markerScript = $doc_0.getElementById(markerId);
    thisScript = markerScript && markerScript.previousSibling;
    while (thisScript && thisScript.tagName != 'SCRIPT') {
      thisScript = thisScript.previousSibling;
    }
    function getDirectoryOfFile(path){
      var hashIndex = path.lastIndexOf('#');
      if (hashIndex == -1) {
        hashIndex = path.length;
      }
      var queryIndex = path.indexOf('?');
      if (queryIndex == -1) {
        queryIndex = path.length;
      }
      var slashIndex = path.lastIndexOf('/', Math.min(queryIndex, hashIndex));
      return slashIndex >= 0?path.substring(0, slashIndex + 1):'';
    }

    ;
    if (thisScript && thisScript.src) {
      base = getDirectoryOfFile(thisScript.src);
    }
    if (base == '') {
      var baseElements = $doc_0.getElementsByTagName('base');
      if (baseElements.length > 0) {
        base = baseElements[baseElements.length - 1].href;
      }
       else {
        base = getDirectoryOfFile($doc_0.location.href);
      }
    }
     else if (base.match(/^\w+:\/\//)) {
    }
     else {
      var img = $doc_0.createElement('img');
      img.src = base + 'clear.cache.gif';
      base = getDirectoryOfFile(img.src);
    }
    if (markerScript) {
      markerScript.parentNode.removeChild(markerScript);
    }
  }

  function processMetas(){
    var metas = document.getElementsByTagName('meta');
    for (var i = 0, n = metas.length; i < n; ++i) {
      var meta = metas[i], name_0 = meta.getAttribute('name'), content_0;
      if (name_0) {
        if (name_0 == 'gwt:property') {
          content_0 = meta.getAttribute('content');
          if (content_0) {
            var value_0, eq = content_0.indexOf('=');
            if (eq >= 0) {
              name_0 = content_0.substring(0, eq);
              value_0 = content_0.substring(eq + 1);
            }
             else {
              name_0 = content_0;
              value_0 = '';
            }
            metaProps[name_0] = value_0;
          }
        }
         else if (name_0 == 'gwt:onPropertyErrorFn') {
          content_0 = meta.getAttribute('content');
          if (content_0) {
            try {
              propertyErrorFunc = eval(content_0);
            }
             catch (e) {
              alert('Bad handler "' + content_0 + '" for "gwt:onPropertyErrorFn"');
            }
          }
        }
         else if (name_0 == 'gwt:onLoadErrorFn') {
          content_0 = meta.getAttribute('content');
          if (content_0) {
            try {
              onLoadErrorFunc = eval(content_0);
            }
             catch (e) {
              alert('Bad handler "' + content_0 + '" for "gwt:onLoadErrorFn"');
            }
          }
        }
      }
    }
  }

  __gwt_isKnownPropertyValue = function(propName, propValue){
    return propValue in values[propName];
  }
  ;
  __gwt_getMetaProperty = function(name_0){
    var value_0 = metaProps[name_0];
    return value_0 == null?null:value_0;
  }
  ;
  peergoslib.onScriptLoad = function(gwtOnLoadFunc){
    peergoslib = null;
    gwtOnLoad_0 = gwtOnLoadFunc;
    maybeStartModule();
  }
  ;
  if (isHostedMode()) {
    alert('Single-script hosted mode not yet implemented. See issue ' + 'http://code.google.com/p/google-web-toolkit/issues/detail?id=2079');
    return;
  }
  computeScriptBase();
  processMetas();
  try {
    var strongName;
    strongName = 'D0AC015DA939FA31881FF7113E132854';
    var idx = strongName.indexOf(':');
    if (idx != -1) {
      softPermutationId = Number(strongName.substring(idx + 1));
    }
  }
   catch (e) {
    return;
  }
  var onBodyDoneTimerId;
  function onBodyDone(){
    if (!bodyDone) {
      bodyDone = true;
      maybeStartModule();
      if ($doc_0.removeEventListener) {
        $doc_0.removeEventListener('DOMContentLoaded', onBodyDone, false);
      }
      if (onBodyDoneTimerId) {
        clearInterval(onBodyDoneTimerId);
      }
    }
  }

  if ($doc_0.addEventListener) {
    $doc_0.addEventListener('DOMContentLoaded', function(){
      onBodyDone();
    }
    , false);
  }
  var onBodyDoneTimerId = setInterval(function(){
    if (/loaded|complete/.test($doc_0.readyState)) {
      onBodyDone();
    }
  }
  , 50);
}

peergoslib();
(function () {var $gwt_version = "2.8.3";var $wnd = window;var $doc = $wnd.document;var $moduleName, $moduleBase;var $stats = $wnd.__gwtStatsEvent ? function(a) {$wnd.__gwtStatsEvent(a)} : null;var $strongName = 'D0AC015DA939FA31881FF7113E132854';var $intern_0 = {4:1, 5:1}, $intern_1 = 2147483647, $intern_2 = -17592186044416, $intern_3 = 17592186044416, $intern_4 = 4194304, $intern_5 = 1048575, $intern_6 = {4:1, 51:1, 33:1}, $intern_7 = {4:1, 51:1, 35:1, 33:1}, $intern_8 = -2147483648, $intern_9 = {4:1, 265:1}, $intern_10 = 524288, $intern_11 = 1048576, $intern_12 = 1023, $intern_13 = 2147483648, $intern_14 = {4:1, 51:1, 56:1, 35:1, 33:1}, $intern_15 = 4096, $intern_16 = 16384, $intern_17 = {4:1, 5:1, 30:1}, $intern_18 = {4:1}, $intern_19 = 65536, $intern_20 = 65535, $intern_21 = 10000, $intern_22 = {3:1}, $intern_23 = {54:1, 17:1}, $intern_24 = {68:1}, $intern_25 = 1229, $intern_26 = {54:1, 47:1}, $intern_27 = {4:1, 54:1, 17:1, 450:1}, $intern_28 = {11:1, 4:1}, $intern_29 = {15:1, 4:1}, $intern_30 = {4:1, 68:1}, $intern_31 = {4:1, 54:1, 47:1}, $intern_32 = {46:1}, $intern_33 = {4:1, 14:1, 5:1}, $intern_34 = {31:1}, $intern_35 = {118:1, 296:1, 147:1}, $intern_36 = 4194303, $intern_37 = 1000000000, $intern_38 = {4:1, 142:1, 33:1}, $intern_39 = {183:1, 118:1}, $intern_40 = {183:1, 297:1, 236:1, 118:1}, $intern_41 = 2147483639, $intern_42 = {62:1, 4:1, 51:1, 33:1}, $intern_43 = 4294967296, $intern_44 = 1.52587890625E-5, $intern_45 = {l:4194303, m:4194303, h:524287}, $intern_46 = 1073741824, $intern_47 = 4294967295, $intern_48 = {57:1, 213:1}, $intern_49 = 1000, $intern_50 = 1000000, $intern_51 = 86400, $intern_52 = 3600000000000, $intern_53 = 60000000000, $intern_54 = {40:1}, $intern_55 = 16777619, $intern_56 = {4:1, 54:1, 17:1}, $intern_57 = {108:1}, $intern_58 = 15525485, $intern_59 = 5.960464477539063E-8, $intern_60 = 16777216, $intern_61 = {4:1, 57:1, 52:1, 208:1}, $intern_62 = {4:1, 57:1, 52:1, 140:1}, $intern_63 = {4:1, 5:1, 1203:1}, $intern_64 = {118:1, 296:1}, $intern_65 = 1024, $intern_66 = 32768, $intern_67 = {7:1}, $intern_68 = {4:1, 5:1, 181:1}, $intern_69 = {4:1, 5:1, 263:1}, $intern_70 = 5242880, $intern_71 = {4:1, 57:1, 52:1, 120:1}, $intern_72 = 1.7976931348623157E308;
var _, prototypesByTypeId_0, initFnList_0, permutationId = -1;
function setGwtProperty(propertyName, propertyValue){
  typeof window === 'object' && typeof window['$gwt'] === 'object' && (window['$gwt'][propertyName] = propertyValue);
}

function gwtOnLoad_0(errFn, modName, modBase, softPermutationId){
  ensureModuleInit();
  var initFnList = initFnList_0;
  $moduleName = modName;
  $moduleBase = modBase;
  permutationId = softPermutationId;
  function initializeModules(){
    for (var i = 0; i < initFnList.length; i++) {
      initFnList[i]();
    }
  }

  if (errFn) {
    try {
      $entry(initializeModules)();
    }
     catch (e) {
      errFn(modName, e);
    }
  }
   else {
    $entry(initializeModules)();
  }
}

function ensureModuleInit(){
  initFnList_0 == null && (initFnList_0 = []);
}

function addInitFunctions(){
  ensureModuleInit();
  var initFnList = initFnList_0;
  for (var i = 0; i < arguments.length; i++) {
    initFnList.push(arguments[i]);
  }
}

function typeMarkerFn(){
}

function toString_5(object){
  var number;
  if (Array.isArray(object) && object.typeMarker === typeMarkerFn) {
    return $getName(getClass__Ljava_lang_Class___devirtual$(object)) + '@' + (number = hashCode__I__devirtual$(object) >>> 0 , number.toString(16));
  }
  return object.toString();
}

function provide(namespace, optCtor){
  var cur = $wnd;
  if (namespace === '') {
    return cur;
  }
  var parts = namespace.split('.');
  !(parts[0] in cur) && cur.execScript && cur.execScript('var ' + parts[0]);
  if (optCtor) {
    var clazz = optCtor.prototype.___clazz;
    clazz.jsConstructor = optCtor;
  }
  for (var part; parts.length && (part = parts.shift());) {
    cur = cur[part] = cur[part] || !parts.length && optCtor || {};
  }
  return cur;
}

function portableObjCreate(obj){
  function F(){
  }

  ;
  F.prototype = obj || {};
  return new F;
}

function makeLambdaFunction(samMethod, ctor, ctorArguments){
  var lambda = function(){
    return samMethod.apply(lambda, arguments);
  }
  ;
  ctor.apply(lambda, ctorArguments);
  return lambda;
}

function emptyMethod(){
}

function defineClass(typeId, superTypeIdOrPrototype, castableTypeMap){
  var prototypesByTypeId = prototypesByTypeId_0, superPrototype;
  var prototype_0 = prototypesByTypeId[typeId];
  var clazz = prototype_0 instanceof Array?prototype_0[0]:null;
  if (prototype_0 && !clazz) {
    _ = prototype_0;
  }
   else {
    _ = (superPrototype = superTypeIdOrPrototype && superTypeIdOrPrototype.prototype , !superPrototype && (superPrototype = prototypesByTypeId_0[superTypeIdOrPrototype]) , portableObjCreate(superPrototype));
    _.castableTypeMap = castableTypeMap;
    !superTypeIdOrPrototype && (_.typeMarker = typeMarkerFn);
    prototypesByTypeId[typeId] = _;
  }
  for (var i = 3; i < arguments.length; ++i) {
    arguments[i].prototype = _;
  }
  clazz && (_.___clazz = clazz);
}

function bootstrap(){
  prototypesByTypeId_0 = {};
  !Array.isArray && (Array.isArray = function(vArg){
    return Object.prototype.toString.call(vArg) === '[object Array]';
  }
  );
  function now_0(){
    return (new Date).getTime();
  }

  !Date.now && (Date.now = now_0);
}

$wnd.goog = $wnd.goog || {};
$wnd.goog.global = $wnd.goog.global || $wnd;
bootstrap();
function $equals(this$static, other){
  return maskUndefined(this$static) === maskUndefined(other);
}

function $toString(this$static){
  var number;
  return $getName(getClass__Ljava_lang_Class___devirtual$(this$static)) + '@' + (number = hashCode__I__devirtual$(this$static) >>> 0 , number.toString(16));
}

function Object_0(){
}

function equals_Ljava_lang_Object__Z__devirtual$(this$static, other){
  return instanceOfString(this$static)?$equals_0(this$static, other):instanceOfDouble(this$static)?(checkCriticalNotNull(this$static) , maskUndefined(this$static) === maskUndefined(other)):instanceOfBoolean(this$static)?(checkCriticalNotNull(this$static) , maskUndefined(this$static) === maskUndefined(other)):hasJavaObjectVirtualDispatch(this$static)?this$static.equals_0(other):isJavaArray(this$static)?$equals(this$static, other):!!this$static && !!this$static.equals?this$static.equals(other):maskUndefined(this$static) === maskUndefined(other);
}

function getClass__Ljava_lang_Class___devirtual$(this$static){
  return instanceOfString(this$static)?Ljava_lang_String_2_classLit:instanceOfDouble(this$static)?Ljava_lang_Double_2_classLit:instanceOfBoolean(this$static)?Ljava_lang_Boolean_2_classLit:hasJavaObjectVirtualDispatch(this$static)?this$static.___clazz:isJavaArray(this$static)?this$static.___clazz:this$static.___clazz || Array.isArray(this$static) && getClassLiteralForArray(Lcom_google_gwt_core_client_JavaScriptObject_2_classLit, 1) || Lcom_google_gwt_core_client_JavaScriptObject_2_classLit;
}

function hashCode__I__devirtual$(this$static){
  return instanceOfString(this$static)?getHashCode_1(this$static):instanceOfDouble(this$static)?round_int((checkCriticalNotNull(this$static) , this$static)):instanceOfBoolean(this$static)?(checkCriticalNotNull(this$static) , this$static)?1231:1237:hasJavaObjectVirtualDispatch(this$static)?this$static.hashCode_1():isJavaArray(this$static)?getHashCode_0(this$static):!!this$static && !!this$static.hashCode?this$static.hashCode():getHashCode_0(this$static);
}

defineClass(1, null, {}, Object_0);
_.equals_0 = function equals(other){
  return $equals(this, other);
}
;
_.getClass_0 = function getClass_0(){
  return this.___clazz;
}
;
_.hashCode_1 = function hashCode_0(){
  return getHashCode_0(this);
}
;
_.toString_0 = function toString_1(){
  return $toString(this);
}
;
_.equals = function(other){
  return this.equals_0(other);
}
;
_.hashCode = function(){
  return this.hashCode_1();
}
;
_.toString = function(){
  return this.toString_0();
}
;
function $clinit_StackTraceCreator(){
  $clinit_StackTraceCreator = emptyMethod;
  var c, enforceLegacy;
  enforceLegacy = !supportsErrorStack();
  c = new StackTraceCreator$CollectorModernNoSourceMap;
  collector_1 = enforceLegacy?new StackTraceCreator$CollectorLegacy:c;
}

function captureStackTrace(error){
  $clinit_StackTraceCreator();
  collector_1.collect(error);
}

function dropInternalFrames(stackTrace){
  var dropFrameUntilFnName, dropFrameUntilFnName2, i, numberOfFramesToSearch;
  dropFrameUntilFnName = 'captureStackTrace';
  dropFrameUntilFnName2 = 'initializeBackingError';
  numberOfFramesToSearch = $wnd.Math.min(stackTrace.length, 5);
  for (i = numberOfFramesToSearch - 1; i >= 0; i--) {
    if ($equals_0(stackTrace[i].methodName, dropFrameUntilFnName) || $equals_0(stackTrace[i].methodName, dropFrameUntilFnName2)) {
      stackTrace.length >= i + 1 && stackTrace.splice(0, i + 1);
      break;
    }
  }
  return stackTrace;
}

function extractFunctionName(fnName){
  var fnRE = /function(?:\s+([\w$]+))?\s*\(/;
  var match_0 = fnRE.exec(fnName);
  return match_0 && match_0[1] || 'anonymous';
}

function parseInt_0(number){
  $clinit_StackTraceCreator();
  return parseInt(number) || -1;
}

function split_1(t){
  $clinit_StackTraceCreator();
  var e = t.backingJsObject;
  if (e && e.stack) {
    var stack_0 = e.stack;
    var toString_0 = e + '\n';
    stack_0.substring(0, toString_0.length) == toString_0 && (stack_0 = stack_0.substring(toString_0.length));
    return stack_0.split('\n');
  }
  return [];
}

function supportsErrorStack(){
  if (Error.stackTraceLimit > 0) {
    $wnd.Error.stackTraceLimit = Error.stackTraceLimit = 64;
    return true;
  }
  return 'stack' in new Error;
}

var collector_1;
defineClass(1235, 1, {});
function StackTraceCreator$CollectorLegacy(){
}

defineClass(925, 1235, {}, StackTraceCreator$CollectorLegacy);
_.collect = function collect_0(error){
  var seen = {}, name_1;
  var fnStack = [];
  error['fnStack'] = fnStack;
  var callee = arguments.callee.caller;
  while (callee) {
    var name_0 = ($clinit_StackTraceCreator() , callee.name || (callee.name = extractFunctionName(callee.toString())));
    fnStack.push(name_0);
    var keyName = ':' + name_0;
    var withThisName = seen[keyName];
    if (withThisName) {
      var i, j;
      for (i = 0 , j = withThisName.length; i < j; i++) {
        if (withThisName[i] === callee) {
          return;
        }
      }
    }
    (withThisName || (seen[keyName] = [])).push(callee);
    callee = callee.caller;
  }
}
;
_.getStackTrace = function getStackTrace(t){
  var i, length_0, stack_0, stackTrace;
  stack_0 = ($clinit_StackTraceCreator() , t && t['fnStack']?t['fnStack']:[]);
  length_0 = stack_0.length;
  stackTrace = initUnidimensionalArray(Ljava_lang_StackTraceElement_2_classLit, $intern_0, 164, length_0, 0, 1);
  for (i = 0; i < length_0; i++) {
    stackTrace[i] = new StackTraceElement(stack_0[i], null, -1);
  }
  return stackTrace;
}
;
function $parse(this$static, stString){
  var closeParen, col, endFileUrlIndex, fileName, index_0, lastColonIndex, line, location_0, toReturn;
  location_0 = '';
  if (stString.length == 0) {
    return this$static.createSte('Unknown', 'anonymous', -1, -1);
  }
  toReturn = $trim(stString);
  $equals_0(toReturn.substr(0, 3), 'at ') && (toReturn = toReturn.substr(3));
  toReturn = toReturn.replace(/\[.*?\]/g, '');
  index_0 = toReturn.indexOf('(');
  if (index_0 == -1) {
    index_0 = toReturn.indexOf('@');
    if (index_0 == -1) {
      location_0 = toReturn;
      toReturn = '';
    }
     else {
      location_0 = $trim(toReturn.substr(index_0 + 1));
      toReturn = $trim(toReturn.substr(0, index_0));
    }
  }
   else {
    closeParen = toReturn.indexOf(')', index_0);
    location_0 = toReturn.substr(index_0 + 1, closeParen - (index_0 + 1));
    toReturn = $trim(toReturn.substr(0, index_0));
  }
  index_0 = $indexOf(toReturn, fromCodePoint(46));
  index_0 != -1 && (toReturn = toReturn.substr(index_0 + 1));
  (toReturn.length == 0 || $equals_0(toReturn, 'Anonymous function')) && (toReturn = 'anonymous');
  lastColonIndex = $lastIndexOf(location_0, fromCodePoint(58));
  endFileUrlIndex = $lastIndexOf_0(location_0, fromCodePoint(58), lastColonIndex - 1);
  line = -1;
  col = -1;
  fileName = 'Unknown';
  if (lastColonIndex != -1 && endFileUrlIndex != -1) {
    fileName = location_0.substr(0, endFileUrlIndex);
    line = parseInt_0(location_0.substr(endFileUrlIndex + 1, lastColonIndex - (endFileUrlIndex + 1)));
    col = parseInt_0(location_0.substr(lastColonIndex + 1));
  }
  return this$static.createSte(fileName, toReturn, line, col);
}

defineClass(1236, 1235, {});
_.collect = function collect_1(error){
}
;
_.createSte = function createSte(fileName, method, line, col){
  return new StackTraceElement(method, fileName + '@' + col, line < 0?-1:line);
}
;
_.getStackTrace = function getStackTrace_0(t){
  var addIndex, i, length_0, stack_0, stackTrace, ste;
  stack_0 = split_1(t);
  stackTrace = initUnidimensionalArray(Ljava_lang_StackTraceElement_2_classLit, $intern_0, 164, 0, 0, 1);
  addIndex = 0;
  length_0 = stack_0.length;
  if (length_0 == 0) {
    return stackTrace;
  }
  ste = $parse(this, stack_0[0]);
  $equals_0(ste.methodName, 'anonymous') || (stackTrace[addIndex++] = ste);
  for (i = 1; i < length_0; i++) {
    stackTrace[addIndex++] = $parse(this, stack_0[i]);
  }
  return stackTrace;
}
;
function StackTraceCreator$CollectorModernNoSourceMap(){
}

defineClass(926, 1236, {}, StackTraceCreator$CollectorModernNoSourceMap);
_.createSte = function createSte_0(fileName, method, line, col){
  return new StackTraceElement(method, fileName, -1);
}
;
function canSet(array, value_0){
  var elementTypeCategory;
  switch (getElementTypeCategory(array)) {
    case 6:
      return instanceOfString(value_0);
    case 7:
      return instanceOfDouble(value_0);
    case 8:
      return instanceOfBoolean(value_0);
    case 3:
      return Array.isArray(value_0) && (elementTypeCategory = getElementTypeCategory(value_0) , !(elementTypeCategory >= 14 && elementTypeCategory <= 16));
    case 11:
      return value_0 != null && isFunction(value_0);
    case 12:
      return value_0 != null && (typeof value_0 === 'object' || typeof value_0 == 'function');
    case 0:
      return canCast(value_0, array.__elementTypeId$);
    case 2:
      return isJsObjectOrFunction(value_0) && !(value_0.typeMarker === typeMarkerFn);
    case 1:
      return isJsObjectOrFunction(value_0) && !(value_0.typeMarker === typeMarkerFn) || canCast(value_0, array.__elementTypeId$);
    default:return true;
  }
}

function getClassLiteralForArray(clazz, dimensions){
  return getClassLiteralForArray_0(clazz, dimensions);
}

function getElementTypeCategory(array){
  return array.__elementTypeCategory$ == null?10:array.__elementTypeCategory$;
}

function initMultidimensionalArray(leafClassLiteral, castableTypeMapExprs, elementTypeIds, leafElementTypeCategory, dimExprs, count){
  return initMultidimensionalArray_0(leafClassLiteral, castableTypeMapExprs, elementTypeIds, leafElementTypeCategory, dimExprs, 0, count);
}

function initMultidimensionalArray_0(leafClassLiteral, castableTypeMapExprs, elementTypeIds, leafElementTypeCategory, dimExprs, index_0, count){
  var elementTypeCategory, i, isLastDimension, length_0, result;
  length_0 = dimExprs[index_0];
  isLastDimension = index_0 == count - 1;
  elementTypeCategory = isLastDimension?leafElementTypeCategory:0;
  result = initializeArrayElementsWithDefaults(isLastDimension, leafClassLiteral, elementTypeCategory, length_0);
  leafElementTypeCategory != 10 && stampJavaTypeInfo(getClassLiteralForArray(leafClassLiteral, count - index_0), castableTypeMapExprs[index_0], elementTypeIds[index_0], elementTypeCategory, result);
  if (!isLastDimension) {
    ++index_0;
    for (i = 0; i < length_0; ++i) {
      result[i] = initMultidimensionalArray_0(leafClassLiteral, castableTypeMapExprs, elementTypeIds, leafElementTypeCategory, dimExprs, index_0, count);
    }
  }
  return result;
}

function initUnidimensionalArray(leafClassLiteral, castableTypeMap, elementTypeId, length_0, elementTypeCategory, dimensions){
  var result;
  result = initializeArrayElementsWithDefaults(elementTypeCategory != 0, leafClassLiteral, elementTypeCategory, length_0);
  elementTypeCategory != 10 && stampJavaTypeInfo(getClassLiteralForArray(leafClassLiteral, dimensions), castableTypeMap, elementTypeId, elementTypeCategory, result);
  return result;
}

function initializeArrayElementsWithDefaults(isLastDimension, arrayClass, elementTypeCategory, length_0){
  var result;
  if (isLastDimension && !!window.ArrayBuffer) {
    result = null;
    ($equals_0(arrayClass.compoundName, 'Byte') || $equals_0(arrayClass.compoundName, 'byte')) && (result = new Int8Array(length_0));
    if (result) {
      return result;
    }
  }
  return initializeArrayElementsWithDefaultsOrig(elementTypeCategory, length_0);
}

function initializeArrayElementsWithDefaultsOrig(elementTypeCategory, length_0){
  var array = new Array(length_0);
  var initValue;
  switch (elementTypeCategory) {
    case 14:
    case 15:
      initValue = 0;
      break;
    case 16:
      initValue = false;
      break;
    default:return array;
  }
  for (var i = 0; i < length_0; ++i) {
    array[i] = initValue;
  }
  return array;
}

function isJavaArray(src_0){
  return Array.isArray(src_0) && src_0.typeMarker === typeMarkerFn;
}

function setCheck(array, index_0, value_0){
  checkCriticalArrayType(value_0 == null || canSet(array, value_0));
  return array[index_0] = value_0;
}

function stampJavaTypeInfo(arrayClass, castableTypeMap, elementTypeId, elementTypeCategory, array){
  array.___clazz = arrayClass;
  array.castableTypeMap = castableTypeMap;
  array.typeMarker = typeMarkerFn;
  array.__elementTypeId$ = elementTypeId;
  array.__elementTypeCategory$ = elementTypeCategory;
  return array;
}

function stampJavaTypeInfo_0(array, referenceType){
  getElementTypeCategory(referenceType) != 10 && stampJavaTypeInfo(getClass__Ljava_lang_Class___devirtual$(referenceType), referenceType.castableTypeMap, referenceType.__elementTypeId$, getElementTypeCategory(referenceType), array);
  return array;
}

function canCast(src_0, dstId){
  if (instanceOfString(src_0)) {
    return !!stringCastMap[dstId];
  }
   else if (src_0.castableTypeMap) {
    return !!src_0.castableTypeMap[dstId];
  }
   else if (instanceOfDouble(src_0)) {
    return !!doubleCastMap[dstId];
  }
   else if (instanceOfBoolean(src_0)) {
    return !!booleanCastMap[dstId];
  }
  return false;
}

function castTo(src_0, dstId){
  checkCriticalType(src_0 == null || canCast(src_0, dstId));
  return src_0;
}

function castToArray(src_0){
  var elementTypeCategory;
  checkCriticalType(src_0 == null || Array.isArray(src_0) && (elementTypeCategory = getElementTypeCategory(src_0) , !(elementTypeCategory >= 14 && elementTypeCategory <= 16)));
  return src_0;
}

function castToBoolean(src_0){
  checkCriticalType(src_0 == null || instanceOfBoolean(src_0));
  return src_0;
}

function castToFunction(src_0){
  checkCriticalType(src_0 == null || isFunction(src_0));
  return src_0;
}

function castToJso(src_0){
  checkCriticalType(src_0 == null || isJsObjectOrFunction(src_0) && !(src_0.typeMarker === typeMarkerFn));
  return src_0;
}

function castToString(src_0){
  checkCriticalType(src_0 == null || instanceOfString(src_0));
  return src_0;
}

function charToString(x_0){
  return String.fromCharCode(x_0);
}

function hasJavaObjectVirtualDispatch(src_0){
  return !Array.isArray(src_0) && src_0.typeMarker === typeMarkerFn;
}

function instanceOf(src_0, dstId){
  return src_0 != null && canCast(src_0, dstId);
}

function instanceOfBoolean(src_0){
  return typeof src_0 === 'boolean';
}

function instanceOfDouble(src_0){
  return typeof src_0 === 'number';
}

function instanceOfJso(src_0){
  return src_0 != null && isJsObjectOrFunction(src_0) && !(src_0.typeMarker === typeMarkerFn);
}

function instanceOfNative(src_0, jsType){
  return src_0 && jsType && src_0 instanceof jsType;
}

function instanceOfString(src_0){
  return typeof src_0 === 'string';
}

function isFunction(src_0){
  return typeof src_0 === 'function';
}

function isJsObjectOrFunction(src_0){
  return typeof src_0 === 'object' || typeof src_0 === 'function';
}

function maskUndefined(src_0){
  return src_0 == null?null:src_0;
}

function round_int(x_0){
  return Math.max(Math.min(x_0, $intern_1), -2147483648) | 0;
}

var booleanCastMap, doubleCastMap, stringCastMap;
function toJava(e){
  var javaException;
  if (instanceOf(e, 33)) {
    return e;
  }
  javaException = e && e.__java$exception;
  if (!javaException) {
    javaException = new JavaScriptException(e);
    captureStackTrace(javaException);
  }
  return javaException;
}

function toJs(t){
  return t.backingJsObject;
}

function add_1(a, b){
  var result;
  if (isSmallLong0(a) && isSmallLong0(b)) {
    result = a + b;
    if ($intern_2 < result && result < $intern_3) {
      return result;
    }
  }
  return createLongEmul(add_0(isSmallLong0(a)?toBigLong(a):a, isSmallLong0(b)?toBigLong(b):b));
}

function and_0(a, b){
  return createLongEmul(and(isSmallLong0(a)?toBigLong(a):a, isSmallLong0(b)?toBigLong(b):b));
}

function compare_1(a, b){
  var result;
  if (isSmallLong0(a) && isSmallLong0(b)) {
    result = a - b;
    if (!isNaN(result)) {
      return result;
    }
  }
  return compare_0(isSmallLong0(a)?toBigLong(a):a, isSmallLong0(b)?toBigLong(b):b);
}

function createLongEmul(big_0){
  var a2;
  a2 = big_0.h;
  if (a2 == 0) {
    return big_0.l + big_0.m * $intern_4;
  }
  if (a2 == $intern_5) {
    return big_0.l + big_0.m * $intern_4 - $intern_3;
  }
  return big_0;
}

function div(a, b){
  var result;
  if (isSmallLong0(a) && isSmallLong0(b)) {
    result = a / b;
    if ($intern_2 < result && result < $intern_3) {
      return result < 0?$wnd.Math.ceil(result):$wnd.Math.floor(result);
    }
  }
  return createLongEmul(divMod(isSmallLong0(a)?toBigLong(a):a, isSmallLong0(b)?toBigLong(b):b, false));
}

function eq(a, b){
  return compare_1(a, b) == 0;
}

function fromDouble_0(value_0){
  if ($intern_2 < value_0 && value_0 < $intern_3) {
    return value_0 < 0?$wnd.Math.ceil(value_0):$wnd.Math.floor(value_0);
  }
  return createLongEmul(fromDouble(value_0));
}

function gt(a, b){
  return compare_1(a, b) > 0;
}

function gte_0(a, b){
  return compare_1(a, b) >= 0;
}

function isSmallLong0(value_0){
  return typeof value_0 === 'number';
}

function lt(a, b){
  return compare_1(a, b) < 0;
}

function lte(a, b){
  return compare_1(a, b) <= 0;
}

function mod_0(a, b){
  var result;
  if (isSmallLong0(a) && isSmallLong0(b)) {
    result = a % b;
    if ($intern_2 < result && result < $intern_3) {
      return result;
    }
  }
  return createLongEmul((divMod(isSmallLong0(a)?toBigLong(a):a, isSmallLong0(b)?toBigLong(b):b, true) , remainder_0));
}

function mul_0(a, b){
  var result;
  if (isSmallLong0(a) && isSmallLong0(b)) {
    result = a * b;
    if ($intern_2 < result && result < $intern_3) {
      return result;
    }
  }
  return createLongEmul(mul(isSmallLong0(a)?toBigLong(a):a, isSmallLong0(b)?toBigLong(b):b));
}

function neg_0(a){
  var result;
  if (isSmallLong0(a)) {
    result = 0 - a;
    if (!isNaN(result)) {
      return result;
    }
  }
  return createLongEmul(neg(a));
}

function neq(a, b){
  return compare_1(a, b) != 0;
}

function or_0(a, b){
  return createLongEmul(or(isSmallLong0(a)?toBigLong(a):a, isSmallLong0(b)?toBigLong(b):b));
}

function shl_0(a, n){
  return createLongEmul(shl(isSmallLong0(a)?toBigLong(a):a, n));
}

function shr_0(a, n){
  return createLongEmul(shr(isSmallLong0(a)?toBigLong(a):a, n));
}

function shru_0(a, n){
  return createLongEmul(shru(isSmallLong0(a)?toBigLong(a):a, n));
}

function sub_1(a, b){
  var result;
  if (isSmallLong0(a) && isSmallLong0(b)) {
    result = a - b;
    if ($intern_2 < result && result < $intern_3) {
      return result;
    }
  }
  return createLongEmul(sub_0(isSmallLong0(a)?toBigLong(a):a, isSmallLong0(b)?toBigLong(b):b));
}

function toBigLong(longValue){
  var a0, a1, a3, value_0;
  value_0 = longValue;
  a3 = 0;
  if (value_0 < 0) {
    value_0 += $intern_3;
    a3 = $intern_5;
  }
  a1 = round_int(value_0 / $intern_4);
  a0 = round_int(value_0 - a1 * $intern_4);
  return create0(a0, a1, a3);
}

function toDouble_0(a){
  var d;
  if (isSmallLong0(a)) {
    d = a;
    return d == -0.?0:d;
  }
  return toDouble(a);
}

function toInt_0(a){
  if (isSmallLong0(a)) {
    return a | 0;
  }
  return toInt(a);
}

function toString_4(a){
  if (isSmallLong0(a)) {
    return '' + a;
  }
  return toString_3(a);
}

function xor_0(a, b){
  return createLongEmul(xor(isSmallLong0(a)?toBigLong(a):a, isSmallLong0(b)?toBigLong(b):b));
}

function $isInstance(instance){
  var type_0;
  if (instance == null) {
    return false;
  }
  type_0 = typeof(instance);
  return $equals_0(type_0, 'boolean') || $equals_0(type_0, 'number') || $equals_0(type_0, 'string') || instance.$implements__java_io_Serializable || Array.isArray(instance);
}

function $$init(this$static){
  this$static.stackTrace = initUnidimensionalArray(Ljava_lang_StackTraceElement_2_classLit, $intern_0, 164, 0, 0, 1);
}

function $addSuppressed(this$static, exception){
  checkCriticalNotNull_0(exception, 'Cannot suppress a null exception.');
  checkCriticalArgument_0(exception != this$static, 'Exception can not suppress itself.');
  if (this$static.disableSuppression) {
    return;
  }
  this$static.suppressedExceptions == null?(this$static.suppressedExceptions = stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Throwable_2_classLit, 1), $intern_0, 33, 0, [exception])):(this$static.suppressedExceptions[this$static.suppressedExceptions.length] = exception);
}

function $linkBack(this$static, error){
  if (error instanceof Object) {
    try {
      error.__java$exception = this$static;
      if (navigator.userAgent.toLowerCase().indexOf('msie') != -1 && $doc.documentMode < 9) {
        return;
      }
      var throwable = this$static;
      Object.defineProperties(error, {cause:{get:function(){
        var cause = throwable.getCause();
        return cause && cause.getBackingJsObject();
      }
      }, suppressed:{get:function(){
        return throwable.getBackingSuppressed();
      }
      }});
    }
     catch (ignored) {
    }
  }
}

function $printStackTraceImpl(this$static, out, prefix, ident){
  var t, t$array, t$index, t$max, theCause;
  out.println_0(ident + prefix + this$static);
  $printStackTraceItems(this$static, out, ident);
  for (t$array = (this$static.suppressedExceptions == null && (this$static.suppressedExceptions = initUnidimensionalArray(Ljava_lang_Throwable_2_classLit, $intern_0, 33, 0, 0, 1)) , this$static.suppressedExceptions) , t$index = 0 , t$max = t$array.length; t$index < t$max; ++t$index) {
    t = t$array[t$index];
    $printStackTraceImpl(t, out, 'Suppressed: ', '\t' + ident);
  }
  theCause = this$static.cause_0;
  !!theCause && $printStackTraceImpl(theCause, out, 'Caused by: ', ident);
}

function $printStackTraceItems(this$static, out, ident){
  var element, element$array, element$index, element$max, stackTrace;
  for (element$array = (this$static.stackTrace == null && (this$static.stackTrace = ($clinit_StackTraceCreator() , stackTrace = collector_1.getStackTrace(this$static) , dropInternalFrames(stackTrace))) , this$static.stackTrace) , element$index = 0 , element$max = element$array.length; element$index < element$max; ++element$index) {
    element = element$array[element$index];
    out.println_0(ident + '\tat ' + element);
  }
}

function $setBackingJsObject(this$static, backingJsObject){
  this$static.backingJsObject = backingJsObject;
  $linkBack(this$static, backingJsObject);
}

function $setStackTrace(this$static, stackTrace){
  var copy, i, length_0;
  length_0 = stackTrace.length;
  copy = initUnidimensionalArray(Ljava_lang_StackTraceElement_2_classLit, $intern_0, 164, length_0, 0, 1);
  for (i = 0; i < length_0; ++i) {
    copy[i] = castTo(checkNotNull(stackTrace[i]), 164);
  }
  this$static.stackTrace = copy;
}

function $toString_0(this$static, message){
  var className;
  className = $getName(this$static.___clazz);
  return message == null?className:className + ': ' + message;
}

function Throwable(){
  $$init(this);
  this.fillInStackTrace();
  this.initializeBackingError();
}

function Throwable_0(message){
  $$init(this);
  this.detailMessage = message;
  this.fillInStackTrace();
  this.initializeBackingError();
}

function Throwable_1(message, cause){
  $$init(this);
  this.cause_0 = cause;
  this.detailMessage = message;
  this.fillInStackTrace();
  this.initializeBackingError();
}

function fixIE(e){
  if (!('stack' in e)) {
    try {
      throw e;
    }
     catch (ignored) {
    }
  }
  return e;
}

function of_0(e){
  var throwable;
  if (e != null) {
    throwable = e.__java$exception;
    if (throwable) {
      return throwable;
    }
  }
  return instanceOfNative(e, TypeError)?new NullPointerException_0(e):new JsException(e);
}

defineClass(33, 1, {4:1, 33:1});
_.createError = function createError(msg){
  return new Error(msg);
}
;
_.fillInStackTrace = function fillInStackTrace(){
  if (this.writableStackTrace) {
    this.backingJsObject !== '__noinit__' && this.initializeBackingError();
    this.stackTrace = null;
  }
  return this;
}
;
_.getBackingJsObject = function getBackingJsObject(){
  return this.backingJsObject;
}
;
_.getBackingSuppressed = function getBackingSuppressed(){
  return $toArray_2($map_0(stream_5((this.suppressedExceptions == null && (this.suppressedExceptions = initUnidimensionalArray(Ljava_lang_Throwable_2_classLit, $intern_0, 33, 0, 0, 1)) , this.suppressedExceptions)), makeLambdaFunction(Throwable$lambda$0$Type.prototype.apply_0, Throwable$lambda$0$Type, [])), new StreamImpl$0methodref$lambda$2$Type);
}
;
_.getCause = function getCause(){
  return this.cause_0;
}
;
_.getMessage = function getMessage(){
  return this.detailMessage;
}
;
_.initializeBackingError = function initializeBackingError(){
  $setBackingJsObject(this, fixIE(this.createError($toString_0(this, this.detailMessage))));
  captureStackTrace(this);
}
;
_.toString_0 = function toString_2(){
  return $toString_0(this, this.getMessage());
}
;
_.backingJsObject = '__noinit__';
_.disableSuppression = false;
_.writableStackTrace = true;
function Exception(){
  Throwable.call(this);
}

function Exception_0(message){
  Throwable_0.call(this, message);
}

function Exception_1(message, cause){
  Throwable_1.call(this, message, cause);
}

function Exception_2(cause){
  $$init(this);
  this.detailMessage = !cause?null:$toString_0(cause, cause.getMessage());
  this.cause_0 = cause;
  this.fillInStackTrace();
  this.initializeBackingError();
}

defineClass(51, 33, $intern_6, Exception_0);
function RuntimeException(){
  Exception.call(this);
}

function RuntimeException_0(message){
  Exception_0.call(this, message);
}

function RuntimeException_1(message, cause){
  Exception_1.call(this, message, cause);
}

function RuntimeException_2(cause){
  Exception_2.call(this, cause);
}

defineClass(35, 51, $intern_7, RuntimeException_0, RuntimeException_1, RuntimeException_2);
function IndexOutOfBoundsException(){
  RuntimeException.call(this);
}

function IndexOutOfBoundsException_0(message){
  RuntimeException_0.call(this, message);
}

defineClass(146, 35, $intern_7, IndexOutOfBoundsException, IndexOutOfBoundsException_0);
function ArrayIndexOutOfBoundsException(){
  IndexOutOfBoundsException.call(this);
}

function ArrayIndexOutOfBoundsException_0(msg){
  IndexOutOfBoundsException_0.call(this, msg);
}

defineClass(235, 146, {4:1, 235:1, 51:1, 35:1, 33:1}, ArrayIndexOutOfBoundsException, ArrayIndexOutOfBoundsException_0);
function ArrayStoreException(){
  RuntimeException.call(this);
}

function ArrayStoreException_0(message){
  RuntimeException_0.call(this, message);
}

defineClass(528, 35, $intern_7, ArrayStoreException, ArrayStoreException_0);
function $isInstance_3(instance){
  var type_0;
  type_0 = typeof(instance);
  if ($equals_0(type_0, 'boolean') || $equals_0(type_0, 'number') || $equals_0(type_0, 'string')) {
    return true;
  }
  return instance != null && instance.$implements__java_lang_Comparable;
}

function $clinit_Boolean(){
  $clinit_Boolean = emptyMethod;
  FALSE = false;
  TRUE = true;
}

function $booleanValue(this$static){
  return checkCriticalNotNull(this$static) , this$static;
}

function $compareTo(this$static, b){
  return compare_2((checkCriticalNotNull(this$static) , this$static), (checkCriticalNotNull(b) , b));
}

function $isInstance_0(instance){
  $clinit_Boolean();
  return $equals_0('boolean', typeof(instance));
}

function compare_2(x_0, y_0){
  $clinit_Boolean();
  return x_0 == y_0?0:x_0?1:-1;
}

function compareTo_Ljava_lang_Object__I__devirtual$(this$static, other){
  $clinit_Boolean();
  return instanceOfString(this$static)?$compareTo_5(this$static, castToString(other)):instanceOfDouble(this$static)?$compareTo_1(this$static, (checkCriticalType(other == null || instanceOfDouble(other)) , other)):instanceOfBoolean(this$static)?$compareTo(this$static, castToBoolean(other)):this$static.compareTo_0(other);
}

booleanCastMap = {4:1, 557:1, 57:1};
var FALSE, TRUE;
function $isInstance_1(instance){
  if ($equals_0(typeof(instance), 'string')) {
    return true;
  }
  return instance != null && instance.$implements__java_lang_CharSequence;
}

function $ensureNamesAreInitialized(this$static){
  if (this$static.typeName != null) {
    return;
  }
  initializeNames(this$static);
}

function $getName(this$static){
  $ensureNamesAreInitialized(this$static);
  return this$static.typeName;
}

function Class(){
  ++nextSequentialId;
  this.typeName = null;
  this.simpleName = null;
  this.packageName = null;
  this.compoundName = null;
  this.canonicalName = null;
  this.typeId = null;
  this.arrayLiterals = null;
}

function createClassObject(packageName, compoundClassName){
  var clazz;
  clazz = new Class;
  clazz.packageName = packageName;
  clazz.compoundName = compoundClassName;
  return clazz;
}

function createForClass(packageName, compoundClassName, typeId){
  var clazz;
  clazz = createClassObject(packageName, compoundClassName);
  maybeSetClassLiteral(typeId, clazz);
  return clazz;
}

function createForEnum(packageName, compoundClassName, typeId, enumConstantsFunc){
  var clazz;
  clazz = createClassObject(packageName, compoundClassName);
  maybeSetClassLiteral(typeId, clazz);
  clazz.modifiers = enumConstantsFunc?8:0;
  clazz.enumConstantsFunc = enumConstantsFunc;
  return clazz;
}

function createForInterface(packageName, compoundClassName){
  var clazz;
  clazz = createClassObject(packageName, compoundClassName);
  clazz.modifiers = 2;
  return clazz;
}

function createForPrimitive(className, primitiveTypeId){
  var clazz;
  clazz = createClassObject('', className);
  clazz.typeId = primitiveTypeId;
  clazz.modifiers = 1;
  return clazz;
}

function getClassLiteralForArray_0(leafClass, dimensions){
  var arrayLiterals = leafClass.arrayLiterals = leafClass.arrayLiterals || [];
  return arrayLiterals[dimensions] || (arrayLiterals[dimensions] = leafClass.createClassLiteralForArray(dimensions));
}

function getPrototypeForClass(clazz){
  if (clazz.isPrimitive()) {
    return null;
  }
  var typeId = clazz.typeId;
  return prototypesByTypeId_0[typeId];
}

function initializeNames(clazz){
  if (clazz.isArray_0()) {
    var componentType = clazz.componentType;
    componentType.isPrimitive()?(clazz.typeName = '[' + componentType.typeId):!componentType.isArray_0()?(clazz.typeName = '[L' + componentType.getName_0() + ';'):(clazz.typeName = '[' + componentType.getName_0());
    clazz.canonicalName = componentType.getCanonicalName() + '[]';
    clazz.simpleName = componentType.getSimpleName() + '[]';
    return;
  }
  var packageName = clazz.packageName;
  var compoundName = clazz.compoundName;
  compoundName = compoundName.split('/');
  clazz.typeName = join_1('.', [packageName, join_1('$', compoundName)]);
  clazz.canonicalName = join_1('.', [packageName, join_1('.', compoundName)]);
  clazz.simpleName = compoundName[compoundName.length - 1];
}

function join_1(separator, strings){
  var i = 0;
  while (!strings[i] || strings[i] == '') {
    i++;
  }
  var result = strings[i++];
  for (; i < strings.length; i++) {
    if (!strings[i] || strings[i] == '') {
      continue;
    }
    result += separator + strings[i];
  }
  return result;
}

function maybeSetClassLiteral(typeId, clazz){
  var proto;
  if (!typeId) {
    return;
  }
  clazz.typeId = typeId;
  var prototype_0 = getPrototypeForClass(clazz);
  if (!prototype_0) {
    prototypesByTypeId_0[typeId] = [clazz];
    return;
  }
  prototype_0.___clazz = clazz;
}

defineClass(452, 1, {}, Class);
_.createClassLiteralForArray = function createClassLiteralForArray(dimensions){
  var clazz;
  clazz = new Class;
  clazz.modifiers = 4;
  dimensions > 1?(clazz.componentType = getClassLiteralForArray_0(this, dimensions - 1)):(clazz.componentType = this);
  return clazz;
}
;
_.getCanonicalName = function getCanonicalName(){
  $ensureNamesAreInitialized(this);
  return this.canonicalName;
}
;
_.getName_0 = function getName(){
  return $getName(this);
}
;
_.getSimpleName = function getSimpleName(){
  $ensureNamesAreInitialized(this);
  return this.simpleName;
}
;
_.isArray_0 = function isArray(){
  return (this.modifiers & 4) != 0;
}
;
_.isPrimitive = function isPrimitive(){
  return (this.modifiers & 1) != 0;
}
;
_.toString_0 = function toString_9(){
  return ((this.modifiers & 2) != 0?'interface ':(this.modifiers & 1) != 0?'':'class ') + ($ensureNamesAreInitialized(this) , this.typeName);
}
;
_.modifiers = 0;
var nextSequentialId = 1;
function ClassCastException(){
  RuntimeException_0.call(this, null);
}

defineClass(923, 35, $intern_7, ClassCastException);
function $isInstance_2(instance){
  if (instance == null) {
    return false;
  }
  return instance.$implements__java_lang_Cloneable || Array.isArray(instance);
}

function $isInstance_4(instance){
  return $equals_0('number', typeof(instance)) || instanceOfNative(instance, $wnd.java.lang.Number$impl);
}

function __parseAndValidateDouble(s){
  floatRegex == null && (floatRegex = new RegExp('^\\s*[+-]?(NaN|Infinity|((\\d+\\.?\\d*)|(\\.\\d+))([eE][+-]?\\d+)?[dDfF]?)\\s*$'));
  if (!floatRegex.test(s)) {
    throw toJs(new NumberFormatException('For input string: "' + s + '"'));
  }
  return parseFloat(s);
}

function __parseAndValidateInt(s, radix){
  var i, isTooLow, length_0, startIndex, toReturn;
  if (s == null) {
    throw toJs(new NumberFormatException('null'));
  }
  if (radix < 2 || radix > 36) {
    throw toJs(new NumberFormatException('radix ' + radix + ' out of range'));
  }
  length_0 = s.length;
  startIndex = length_0 > 0 && (checkCriticalStringElementIndex(0, s.length) , s.charCodeAt(0) == 45 || (checkCriticalStringElementIndex(0, s.length) , s.charCodeAt(0) == 43))?1:0;
  for (i = startIndex; i < length_0; i++) {
    if (digit_0((checkCriticalStringElementIndex(i, s.length) , s.charCodeAt(i)), radix) == -1) {
      throw toJs(new NumberFormatException('For input string: "' + s + '"'));
    }
  }
  toReturn = parseInt(s, radix);
  isTooLow = toReturn < $intern_8;
  if (isNaN(toReturn)) {
    throw toJs(new NumberFormatException('For input string: "' + s + '"'));
  }
   else if (isTooLow || toReturn > $intern_1) {
    throw toJs(new NumberFormatException('For input string: "' + s + '"'));
  }
  return toReturn;
}

function __parseAndValidateLong(s){
  var c, firstTime, head, i, length_0, maxDigits, minValue, negative, orig, radixPower, toReturn;
  if (s == null) {
    throw toJs(new NumberFormatException('null'));
  }
  orig = s;
  length_0 = s.length;
  negative = false;
  if (length_0 > 0) {
    c = (checkCriticalStringElementIndex(0, s.length) , s.charCodeAt(0));
    if (c == 45 || c == 43) {
      s = s.substr(1);
      --length_0;
      negative = c == 45;
    }
  }
  if (length_0 == 0) {
    throw toJs(new NumberFormatException('For input string: "' + orig + '"'));
  }
  while (s.length > 0 && (checkCriticalStringElementIndex(0, s.length) , s.charCodeAt(0) == 48)) {
    s = s.substr(1);
    --length_0;
  }
  if (length_0 > ($clinit_Number$__ParseLong() , maxLengthForRadix)[10]) {
    throw toJs(new NumberFormatException('For input string: "' + orig + '"'));
  }
  for (i = 0; i < length_0; i++) {
    if (digit_0((checkCriticalStringElementIndex(i, s.length) , s.charCodeAt(i)), 10) == -1) {
      throw toJs(new NumberFormatException('For input string: "' + orig + '"'));
    }
  }
  toReturn = 0;
  maxDigits = maxDigitsForRadix[10];
  radixPower = maxDigitsRadixPower[10];
  minValue = neg_0(maxValueForRadix[10]);
  firstTime = true;
  head = length_0 % maxDigits;
  if (head > 0) {
    toReturn = -parseInt(s.substr(0, head), 10);
    s = s.substr(head);
    length_0 -= head;
    firstTime = false;
  }
  while (length_0 >= maxDigits) {
    head = parseInt(s.substr(0, maxDigits), 10);
    s = s.substr(maxDigits);
    length_0 -= maxDigits;
    if (firstTime) {
      firstTime = false;
    }
     else {
      if (compare_1(toReturn, minValue) < 0) {
        throw toJs(new NumberFormatException('For input string: "' + orig + '"'));
      }
      toReturn = mul_0(toReturn, radixPower);
    }
    toReturn = sub_1(toReturn, head);
  }
  if (compare_1(toReturn, 0) > 0) {
    throw toJs(new NumberFormatException('For input string: "' + orig + '"'));
  }
  if (!negative) {
    toReturn = neg_0(toReturn);
    if (compare_1(toReturn, 0) < 0) {
      throw toJs(new NumberFormatException('For input string: "' + orig + '"'));
    }
  }
  return toReturn;
}

defineClass(265, 1, $intern_9);
var floatRegex;
function $compareTo_1(this$static, b){
  return compare_3((checkCriticalNotNull(this$static) , this$static), (checkCriticalNotNull(b) , b));
}

function $isInstance_5(instance){
  return $equals_0('number', typeof(instance));
}

function compare_3(x_0, y_0){
  if (x_0 < y_0) {
    return -1;
  }
  if (x_0 > y_0) {
    return 1;
  }
  if (x_0 == y_0) {
    return x_0 == 0?compare_3(1 / x_0, 1 / y_0):0;
  }
  return isNaN(x_0)?isNaN(y_0)?0:1:-1;
}

function doubleToLongBits(value_0){
  var bit, exp_0, i, ihi, ilo, negative;
  if (isNaN(value_0)) {
    return {l:0, m:0, h:524160};
  }
  negative = false;
  if (value_0 == 0) {
    return 1 / value_0 == -Infinity?{l:0, m:0, h:$intern_10}:0;
  }
  if (value_0 < 0) {
    negative = true;
    value_0 = -value_0;
  }
  if (!isNaN(value_0) && !isFinite(value_0)) {
    return negative?{l:0, m:0, h:1048320}:{l:0, m:0, h:524032};
  }
  exp_0 = 0;
  if (value_0 < 1) {
    bit = 512;
    for (i = 0; i < 10; ++i , bit >>= 1) {
      if (value_0 < ($clinit_Double$PowersTable() , invPowers)[i] && exp_0 - bit >= -1023) {
        value_0 *= powers[i];
        exp_0 -= bit;
      }
    }
    if (value_0 < 1 && exp_0 - 1 >= -1023) {
      value_0 *= 2;
      --exp_0;
    }
  }
   else if (value_0 >= 2) {
    bit = 512;
    for (i = 0; i < 10; ++i , bit >>= 1) {
      if (value_0 >= ($clinit_Double$PowersTable() , powers)[i]) {
        value_0 *= invPowers[i];
        exp_0 += bit;
      }
    }
  }
  exp_0 > -1023?(value_0 -= 1):(value_0 *= 0.5);
  ihi = fromDouble_0(value_0 * $intern_11);
  value_0 -= toDouble_0(ihi) * 9.5367431640625E-7;
  ilo = fromDouble_0(value_0 * 4503599627370496);
  ihi = or_0(ihi, exp_0 + $intern_12 << 20);
  negative && (ihi = or_0(ihi, $intern_13));
  return or_0(shl_0(ihi, 32), ilo);
}

doubleCastMap = {4:1, 57:1, 558:1, 265:1};
function $compareTo_2(this$static, other){
  return this$static.ordinal_0 - other.ordinal_0;
}

function $name(this$static){
  return this$static.name_0 != null?this$static.name_0:'' + this$static.ordinal_0;
}

function Enum(name_0, ordinal){
  this.name_0 = name_0;
  this.ordinal_0 = ordinal;
}

function createValueOfMap(enumConstants){
  var result, value_0, value$array, value$index, value$max;
  result = {};
  for (value$array = enumConstants , value$index = 0 , value$max = value$array.length; value$index < value$max; ++value$index) {
    value_0 = value$array[value$index];
    result[':' + (value_0.name_0 != null?value_0.name_0:'' + value_0.ordinal_0)] = value_0;
  }
  return result;
}

function valueOf_0(map_0, name_0){
  var result;
  checkCriticalNotNull(name_0);
  result = map_0[':' + name_0];
  checkCriticalArgument_1(!!result, 'Enum constant undefined: %s', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [name_0]));
  return result;
}

defineClass(52, 1, {4:1, 57:1, 52:1});
_.compareTo_0 = function compareTo_1(other){
  return $compareTo_2(this, castTo(other, 52));
}
;
_.compareTo = function compareTo_0(other){
  return this.ordinal_0 - other.ordinal_0;
}
;
_.equals = function equals_1(other){
  return this === other;
}
;
_.equals_0 = function(other){
  return this.equals(other);
}
;
_.hashCode = function hashCode_2(){
  return getHashCode_0(this);
}
;
_.hashCode_1 = function(){
  return this.hashCode();
}
;
_.name = function name_4(){
  return $name(this);
}
;
_.ordinal = function ordinal_0(){
  return this.ordinal_0;
}
;
_.toString = function toString_10(){
  return this.name_0 != null?this.name_0:'' + this.ordinal_0;
}
;
_.toString_0 = function(){
  return this.toString();
}
;
_.ordinal_0 = 0;
function IllegalArgumentException(){
  RuntimeException.call(this);
}

function IllegalArgumentException_0(message){
  RuntimeException_0.call(this, message);
}

defineClass(56, 35, $intern_14, IllegalArgumentException, IllegalArgumentException_0);
function IllegalStateException(){
  RuntimeException.call(this);
}

function IllegalStateException_0(s){
  RuntimeException_0.call(this, s);
}

function IllegalStateException_1(cause){
  RuntimeException_2.call(this, cause);
}

defineClass(10, 35, $intern_7, IllegalStateException, IllegalStateException_0, IllegalStateException_1);
function $compareTo_3(this$static, b){
  return compare_4(this$static.value_0, b.value_0);
}

function Integer(value_0){
  this.value_0 = value_0;
}

function bitCount(x_0){
  x_0 -= x_0 >> 1 & 1431655765;
  x_0 = (x_0 >> 2 & 858993459) + (x_0 & 858993459);
  x_0 = (x_0 >> 4) + x_0 & 252645135;
  x_0 += x_0 >> 8;
  x_0 += x_0 >> 16;
  return x_0 & 63;
}

function compare_4(x_0, y_0){
  return x_0 < y_0?-1:x_0 > y_0?1:0;
}

function numberOfLeadingZeros_0(i){
  var m, n, y_0;
  if (i < 0) {
    return 0;
  }
   else if (i == 0) {
    return 32;
  }
   else {
    y_0 = -(i >> 16);
    m = y_0 >> 16 & 16;
    n = 16 - m;
    i = i >> m;
    y_0 = i - 256;
    m = y_0 >> 16 & 8;
    n += m;
    i <<= m;
    y_0 = i - $intern_15;
    m = y_0 >> 16 & 4;
    n += m;
    i <<= m;
    y_0 = i - $intern_16;
    m = y_0 >> 16 & 2;
    n += m;
    i <<= m;
    y_0 = i >> 14;
    m = y_0 & ~(y_0 >> 1);
    return n + 2 - m;
  }
}

function numberOfTrailingZeros(i){
  var r, rtn;
  if (i == 0) {
    return 32;
  }
   else {
    rtn = 0;
    for (r = 1; (r & i) == 0; r <<= 1) {
      ++rtn;
    }
    return rtn;
  }
}

function toString_12(value_0, radix){
  var number;
  if (radix == 10 || radix < 2 || radix > 36) {
    return '' + value_0;
  }
  return number = value_0 , number.toString(radix);
}

function valueOf_1(i){
  var rebase, result;
  if (i > -129 && i < 128) {
    rebase = i + 128;
    result = ($clinit_Integer$BoxedValues() , boxedValues_0)[rebase];
    !result && (result = boxedValues_0[rebase] = new Integer(i));
    return result;
  }
  return new Integer(i);
}

defineClass(100, 265, {4:1, 57:1, 100:1, 265:1}, Integer);
_.compareTo_0 = function compareTo_2(b){
  return $compareTo_3(this, castTo(b, 100));
}
;
_.equals_0 = function equals_2(o){
  return instanceOf(o, 100) && castTo(o, 100).value_0 == this.value_0;
}
;
_.hashCode_1 = function hashCode_3(){
  return this.value_0;
}
;
_.toString_0 = function toString_11(){
  return '' + this.value_0;
}
;
_.value_0 = 0;
function $forEach(this$static, action){
  var t, t$iterator;
  checkCriticalNotNull(action);
  for (t$iterator = this$static.iterator(); t$iterator.hasNext_0();) {
    t = t$iterator.next_1();
    action.accept(t);
  }
}

function JsException(backingJsObject){
  $$init(this);
  this.fillInStackTrace();
  this.backingJsObject = backingJsObject;
  $linkBack(this, backingJsObject);
  this.detailMessage = backingJsObject == null?'null':toString_5(backingJsObject);
}

defineClass(293, 35, $intern_7, JsException);
function max_1(y_0){
  return compare_1(0, y_0) > 0?0:y_0;
}

function min_1(x_0, y_0){
  return compare_1(x_0, y_0) < 0?x_0:y_0;
}

defineClass(3636, 1, {});
function NullPointerException(){
  RuntimeException.call(this);
}

function NullPointerException_0(typeError){
  JsException.call(this, typeError);
}

function NullPointerException_1(message){
  RuntimeException_0.call(this, message);
}

defineClass(165, 293, $intern_7, NullPointerException, NullPointerException_0, NullPointerException_1);
_.createError = function createError_0(msg){
  return new TypeError(msg);
}
;
function $charAt(this$static, index_0){
  checkCriticalStringElementIndex(index_0, this$static.length);
  return this$static.charCodeAt(index_0);
}

function $compareTo_5(this$static, other){
  var a, b;
  a = (checkCriticalNotNull(this$static) , this$static);
  b = (checkCriticalNotNull(other) , other);
  return a == b?0:a < b?-1:1;
}

function $compareToIgnoreCase(this$static, other){
  return $compareTo_5(this$static.toLowerCase(), other.toLowerCase());
}

function $create(bytes){
  return $create_0(bytes, 0, bytes.length, ($clinit_EmulatedCharset() , UTF_8_0));
}

function $create_0(bytes, ofs, len, charset){
  return valueOf_4(charset.decodeString(bytes, ofs, len));
}

function $create_1(bytes){
  return $create_0(bytes, 0, bytes.length, getCharset('UTF-8'));
}

function $endsWith(this$static, suffix){
  var suffixlength;
  suffixlength = suffix.length;
  return $equals_0(this$static.substr(this$static.length - suffixlength, suffixlength), suffix);
}

function $equals_0(this$static, other){
  return checkCriticalNotNull(this$static) , maskUndefined(this$static) === maskUndefined(other);
}

function $getBytes(this$static, charset){
  return charset.getBytes(this$static);
}

function $getChars0(this$static, srcBegin, srcEnd, dst, dstBegin){
  while (srcBegin < srcEnd) {
    dst[dstBegin++] = $charAt(this$static, srcBegin++);
  }
}

function $indexOf(this$static, str){
  return this$static.indexOf(str);
}

function $isInstance_6(instance){
  return $equals_0('string', typeof(instance));
}

function $lastIndexOf(this$static, str){
  return this$static.lastIndexOf(str);
}

function $lastIndexOf_0(this$static, str, start_0){
  return this$static.lastIndexOf(str, start_0);
}

function $regionMatches(this$static, toffset, other, len){
  var left, right;
  checkCriticalNotNull(other);
  if (toffset < 0) {
    return false;
  }
  if (toffset + len > this$static.length || len > other.length) {
    return false;
  }
  if (len <= 0) {
    return true;
  }
  left = this$static.substr(toffset, len);
  right = other.substr(0, len);
  return $equals_0(left, right);
}

function $replace(this$static){
  var hex, number, regex, replace;
  hex = (number = 92 >>> 0 , number.toString(16));
  regex = '\\u' + $substring('0000', hex.length) + hex;
  replace = String.fromCharCode(47);
  return this$static.replace(new RegExp(regex, 'g'), replace);
}

function $replaceAll(this$static, regex, replace){
  replace = translateReplaceString(replace);
  return this$static.replace(new RegExp(regex, 'g'), replace);
}

function $split(this$static, regex){
  var compiled, count, lastNonEmpty, lastTrail, matchIndex, matchObj, out, trail;
  compiled = new RegExp(regex, 'g');
  out = initUnidimensionalArray(Ljava_lang_String_2_classLit, $intern_17, 2, 0, 6, 1);
  count = 0;
  trail = this$static;
  lastTrail = null;
  while (true) {
    matchObj = compiled.exec(trail);
    if (matchObj == null || trail == '') {
      out[count] = trail;
      break;
    }
     else {
      matchIndex = matchObj.index;
      out[count] = trail.substr(0, matchIndex);
      trail = $substring_0(trail, matchIndex + matchObj[0].length, trail.length);
      compiled.lastIndex = 0;
      if (lastTrail == trail) {
        out[count] = trail.substr(0, 1);
        trail = trail.substr(1);
      }
      lastTrail = trail;
      ++count;
    }
  }
  if (this$static.length > 0) {
    lastNonEmpty = out.length;
    while (lastNonEmpty > 0 && out[lastNonEmpty - 1] == '') {
      --lastNonEmpty;
    }
    lastNonEmpty < out.length && (out.length = lastNonEmpty);
  }
  return out;
}

function $startsWith(this$static, prefix){
  return $equals_0(this$static.substr(0, prefix.length), prefix);
}

function $substring(this$static, beginIndex){
  return this$static.substr(beginIndex);
}

function $substring_0(this$static, beginIndex, endIndex){
  return this$static.substr(beginIndex, endIndex - beginIndex);
}

function $toCharArray(this$static){
  var charArr, n;
  n = this$static.length;
  charArr = initUnidimensionalArray(C_classLit, $intern_18, 8, n, 15, 1);
  $getChars0(this$static, 0, n, charArr, 0);
  return charArr;
}

function $trim(this$static){
  var end, length_0, start_0;
  length_0 = this$static.length;
  start_0 = 0;
  while (start_0 < length_0 && (checkCriticalStringElementIndex(start_0, this$static.length) , this$static.charCodeAt(start_0) <= 32)) {
    ++start_0;
  }
  end = length_0;
  while (end > start_0 && (checkCriticalStringElementIndex(end - 1, this$static.length) , this$static.charCodeAt(end - 1) <= 32)) {
    --end;
  }
  return start_0 > 0 || end < length_0?this$static.substr(start_0, end - start_0):this$static;
}

function fromCharCode(array){
  return String.fromCharCode.apply(null, array);
}

function fromCodePoint(codePoint){
  var hiSurrogate, loSurrogate;
  if (codePoint >= $intern_19) {
    hiSurrogate = 55296 + (codePoint - $intern_19 >> 10 & $intern_12) & $intern_20;
    loSurrogate = 56320 + (codePoint - $intern_19 & $intern_12) & $intern_20;
    return String.fromCharCode(hiSurrogate) + ('' + String.fromCharCode(loSurrogate));
  }
   else {
    return String.fromCharCode(codePoint & $intern_20);
  }
}

function getCharset(charsetName){
  try {
    return forName(charsetName);
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 385)) {
      throw toJs(new UnsupportedEncodingException(charsetName));
    }
     else 
      throw toJs($e0);
  }
}

function join_2(elements){
  var e, e$iterator, joiner;
  joiner = new StringJoiner;
  for (e$iterator = elements.iterator(); e$iterator.hasNext_0();) {
    e = castTo(e$iterator.next_1(), 294);
    !joiner.builder?(joiner.builder = new StringBuilder_1(joiner.prefix)):$append_4(joiner.builder, joiner.delimiter);
    $append_1(joiner.builder, e);
  }
  return !joiner.builder?joiner.emptyValue:joiner.suffix.length == 0?joiner.builder.string:joiner.builder.string + ('' + joiner.suffix);
}

function translateReplaceString(replaceStr){
  var pos;
  pos = 0;
  while (0 <= (pos = replaceStr.indexOf('\\', pos))) {
    checkCriticalStringElementIndex(pos + 1, replaceStr.length);
    replaceStr.charCodeAt(pos + 1) == 36?(replaceStr = replaceStr.substr(0, pos) + '$' + $substring(replaceStr, ++pos)):(replaceStr = replaceStr.substr(0, pos) + ('' + $substring(replaceStr, ++pos)));
  }
  return replaceStr;
}

function valueOf_3(x_0){
  return x_0 == null?'null':toString_5(x_0);
}

function valueOf_4(x_0){
  return valueOf_5(x_0, 0, x_0.length);
}

function valueOf_5(x_0, offset, count){
  var batchEnd, batchStart, end, s;
  end = offset + count;
  checkCriticalStringBounds(offset, end, x_0.length);
  s = '';
  for (batchStart = offset; batchStart < end;) {
    batchEnd = $wnd.Math.min(batchStart + $intern_21, end);
    s += fromCharCode(x_0.slice(batchStart, batchEnd));
    batchStart = batchEnd;
  }
  return s;
}

stringCastMap = {4:1, 294:1, 57:1, 2:1};
function StringIndexOutOfBoundsException(message){
  IndexOutOfBoundsException_0.call(this, message);
}

defineClass(514, 146, $intern_7, StringIndexOutOfBoundsException);
function Throwable$lambda$0$Type(){
}

defineClass(1337, $wnd.Function, $intern_22, Throwable$lambda$0$Type);
_.apply_0 = function apply_1(arg0){
  return castTo(arg0, 33).backingJsObject;
}
;
function UnsupportedOperationException(){
  RuntimeException.call(this);
}

function UnsupportedOperationException_0(message){
  RuntimeException_0.call(this, message);
}

defineClass(106, 35, $intern_7, UnsupportedOperationException, UnsupportedOperationException_0);
function $addAll(this$static, c){
  var changed, e, e$iterator;
  checkCriticalNotNull(c);
  changed = false;
  for (e$iterator = c.iterator(); e$iterator.hasNext_0();) {
    e = e$iterator.next_1();
    changed = changed | this$static.add(e);
  }
  return changed;
}

function $advanceToFind(this$static, o, remove){
  var e, iter;
  for (iter = this$static.iterator(); iter.hasNext_0();) {
    e = iter.next_1();
    if (maskUndefined(o) === maskUndefined(e) || o != null && equals_Ljava_lang_Object__Z__devirtual$(o, e)) {
      remove && iter.remove_0();
      return true;
    }
  }
  return false;
}

function $clear(this$static){
  var iter;
  for (iter = this$static.iterator(); iter.hasNext_0();) {
    iter.next_1();
    iter.remove_0();
  }
}

function $containsAll(this$static, c){
  var e, e$iterator;
  checkCriticalNotNull(c);
  for (e$iterator = c.iterator(); e$iterator.hasNext_0();) {
    e = e$iterator.next_1();
    if (!this$static.contains(e)) {
      return false;
    }
  }
  return true;
}

function $retainAll(this$static, c){
  var changed, iter, o;
  checkCriticalNotNull(c);
  changed = false;
  for (iter = this$static.iterator(); iter.hasNext_0();) {
    o = iter.next_1();
    if (!c.contains(o)) {
      iter.remove_0();
      changed = true;
    }
  }
  return changed;
}

function $toString_4(this$static){
  var e, e$iterator, joiner;
  joiner = new StringJoiner_0(', ', '[', ']');
  for (e$iterator = this$static.iterator(); e$iterator.hasNext_0();) {
    e = e$iterator.next_1();
    $add_3(joiner, e === this$static?'(this Collection)':e == null?'null':toString_5(e));
  }
  return !joiner.builder?joiner.emptyValue:joiner.suffix.length == 0?joiner.builder.string:joiner.builder.string + ('' + joiner.suffix);
}

defineClass(1228, 1, {54:1});
_.forEach = function forEach(action){
  $forEach(this, action);
}
;
_.spliterator_0 = function spliterator_0(){
  return new Spliterators$IteratorSpliterator(this, 0);
}
;
_.stream = function stream_0(){
  return new StreamImpl(null, this.spliterator_0());
}
;
_.add = function add_5(o){
  throw toJs(new UnsupportedOperationException_0('Add not supported on this collection'));
}
;
_.addAll = function addAll(c){
  return $addAll(this, c);
}
;
_.clear = function clear_0(){
  $clear(this);
}
;
_.contains = function contains(o){
  return $advanceToFind(this, o, false);
}
;
_.containsAll = function containsAll(c){
  return $containsAll(this, c);
}
;
_.isEmpty = function isEmpty(){
  return this.size() == 0;
}
;
_.remove = function remove_0(o){
  return $advanceToFind(this, o, true);
}
;
_.removeAll = function removeAll(c){
  var changed, iter, o;
  checkCriticalNotNull(c);
  changed = false;
  for (iter = this.iterator(); iter.hasNext_0();) {
    o = iter.next_1();
    if (c.contains(o)) {
      iter.remove_0();
      changed = true;
    }
  }
  return changed;
}
;
_.retainAll = function retainAll(c){
  return $retainAll(this, c);
}
;
_.toArray = function toArray(){
  return this.toArray_0(initUnidimensionalArray(Ljava_lang_Object_2_classLit, $intern_0, 1, this.size(), 5, 1));
}
;
_.toArray_0 = function toArray_0(a){
  var i, it, result, size_0;
  size_0 = this.size();
  a.length < size_0 && (a = stampJavaTypeInfo_1(new Array(size_0), a));
  result = a;
  it = this.iterator();
  for (i = 0; i < size_0; ++i) {
    setCheck(result, i, it.next_1());
  }
  a.length > size_0 && setCheck(a, size_0, null);
  return a;
}
;
_.toString_0 = function toString_22(){
  return $toString_4(this);
}
;
function $indexOf_0(this$static, toFind){
  var i, n;
  for (i = 0 , n = this$static.size(); i < n; ++i) {
    if (equals_28(toFind, this$static.getAtIndex(i))) {
      return i;
    }
  }
  return -1;
}

defineClass(1237, 1228, $intern_23);
_.spliterator_0 = function spliterator_2(){
  return new Spliterators$IteratorSpliterator(this, 16);
}
;
_.addAtIndex = function add_6(index_0, element){
  throw toJs(new UnsupportedOperationException_0('Add not supported on this list'));
}
;
_.add = function add_7(obj){
  this.addAtIndex(this.size(), obj);
  return true;
}
;
_.addAllAtIndex = function addAll_0(index_0, c){
  var changed, e, e$iterator;
  checkCriticalNotNull(c);
  changed = false;
  for (e$iterator = c.iterator(); e$iterator.hasNext_0();) {
    e = e$iterator.next_1();
    this.addAtIndex(index_0++, e);
    changed = true;
  }
  return changed;
}
;
_.clear = function clear_4(){
  this.removeRange(0, this.size());
}
;
_.equals_0 = function equals_13(o){
  var elem, elem$iterator, elemOther, iterOther, other;
  if (o === this) {
    return true;
  }
  if (!instanceOf(o, 17)) {
    return false;
  }
  other = castTo(o, 17);
  if (this.size() != other.size()) {
    return false;
  }
  iterOther = other.iterator();
  for (elem$iterator = this.iterator(); elem$iterator.hasNext_0();) {
    elem = elem$iterator.next_1();
    elemOther = iterOther.next_1();
    if (!(maskUndefined(elem) === maskUndefined(elemOther) || elem != null && equals_Ljava_lang_Object__Z__devirtual$(elem, elemOther))) {
      return false;
    }
  }
  return true;
}
;
_.hashCode_1 = function hashCode_14(){
  return hashCode_22(this);
}
;
_.indexOf = function indexOf(toFind){
  return $indexOf_0(this, toFind);
}
;
_.iterator = function iterator_1(){
  return new AbstractList$IteratorImpl(this);
}
;
_.lastIndexOf = function lastIndexOf(toFind){
  var i;
  for (i = this.size() - 1; i > -1; --i) {
    if (equals_28(toFind, this.getAtIndex(i))) {
      return i;
    }
  }
  return -1;
}
;
_.listIterator = function listIterator(from){
  return new AbstractList$ListIteratorImpl(this, from);
}
;
_.removeAtIndex = function remove_5(index_0){
  throw toJs(new UnsupportedOperationException_0('Remove not supported on this list'));
}
;
_.removeRange = function removeRange(fromIndex, endIndex){
  var i, iter;
  iter = this.listIterator(fromIndex);
  for (i = fromIndex; i < endIndex; ++i) {
    iter.next_1();
    iter.remove_0();
  }
}
;
_.setAtIndex = function set_2(index_0, o){
  throw toJs(new UnsupportedOperationException_0('Set not supported on this list'));
}
;
_.subList = function subList(fromIndex, toIndex){
  return new AbstractList$SubList(this, fromIndex, toIndex);
}
;
function $forEachRemaining(this$static, consumer){
  checkCriticalNotNull(consumer);
  while (this$static.hasNext_0()) {
    consumer.accept(this$static.next_1());
  }
}

function $hasNext(this$static){
  return this$static.i < this$static.this$01_0.size();
}

function $next(this$static){
  checkCriticalElement(this$static.i < this$static.this$01_0.size());
  return this$static.this$01_0.getAtIndex(this$static.last = this$static.i++);
}

function $remove_0(this$static){
  checkCriticalState(this$static.last != -1);
  this$static.this$01_0.removeAtIndex(this$static.last);
  this$static.i = this$static.last;
  this$static.last = -1;
}

function AbstractList$IteratorImpl(this$0){
  this.this$01_0 = this$0;
}

defineClass(411, 1, {}, AbstractList$IteratorImpl);
_.forEachRemaining = function forEachRemaining_0(consumer){
  $forEachRemaining(this, consumer);
}
;
_.hasNext_0 = function hasNext_0(){
  return $hasNext(this);
}
;
_.next_1 = function next_3(){
  return $next(this);
}
;
_.remove_0 = function remove_6(){
  $remove_0(this);
}
;
_.i = 0;
_.last = -1;
function AbstractList$ListIteratorImpl(this$0, start_0){
  this.this$01 = this$0;
  AbstractList$IteratorImpl.call(this, this$0);
  checkCriticalPositionIndex(start_0, this$0.size());
  this.i = start_0;
}

defineClass(482, 411, {}, AbstractList$ListIteratorImpl);
_.remove_0 = function remove_7(){
  $remove_0(this);
}
;
_.add_0 = function add_8(o){
  this.this$01.addAtIndex(this.i, o);
  ++this.i;
  this.last = -1;
}
;
_.set_1 = function set_3(o){
  checkCriticalState(this.last != -1);
  this.this$01.setAtIndex(this.last, o);
}
;
function AbstractList$SubList(wrapped, fromIndex, toIndex){
  checkCriticalPositionIndexes(fromIndex, toIndex, wrapped.size());
  this.wrapped = wrapped;
  this.fromIndex = fromIndex;
  this.size_0 = toIndex - fromIndex;
}

defineClass(483, 1237, $intern_23, AbstractList$SubList);
_.addAtIndex = function add_9(index_0, element){
  checkCriticalPositionIndex(index_0, this.size_0);
  this.wrapped.addAtIndex(this.fromIndex + index_0, element);
  ++this.size_0;
}
;
_.getAtIndex = function get_3(index_0){
  checkCriticalElementIndex(index_0, this.size_0);
  return this.wrapped.getAtIndex(this.fromIndex + index_0);
}
;
_.removeAtIndex = function remove_8(index_0){
  var result;
  checkCriticalElementIndex(index_0, this.size_0);
  result = this.wrapped.removeAtIndex(this.fromIndex + index_0);
  --this.size_0;
  return result;
}
;
_.setAtIndex = function set_4(index_0, element){
  checkCriticalElementIndex(index_0, this.size_0);
  return this.wrapped.setAtIndex(this.fromIndex + index_0, element);
}
;
_.size = function size_7(){
  return this.size_0;
}
;
_.fromIndex = 0;
_.size_0 = 0;
function $computeIfAbsent(this$static, key, remappingFunction){
  var value_0;
  checkCriticalNotNull(remappingFunction);
  value_0 = this$static.get(key);
  if (value_0 == null) {
    value_0 = remappingFunction(key);
    value_0 != null && this$static.put(key, value_0);
  }
  return value_0;
}

function $forEach_1(this$static, consumer){
  var entry, entry$iterator;
  checkCriticalNotNull(consumer);
  for (entry$iterator = this$static.entrySet_0().iterator(); entry$iterator.hasNext_0();) {
    entry = castTo(entry$iterator.next_1(), 40);
    $accept_2(consumer, entry.getKey(), entry.getValue());
  }
}

function $merge(this$static, key, value_0, remappingFunction){
  var currentValue, newValue;
  checkCriticalNotNull(remappingFunction);
  checkCriticalNotNull(value_0);
  currentValue = this$static.get(key);
  newValue = currentValue == null?value_0:remappingFunction.apply_1(currentValue, value_0);
  newValue == null?this$static.remove(key):this$static.put(key, newValue);
  return newValue;
}

function $containsEntry(this$static, entry){
  var key, ourValue, value_0;
  key = entry.getKey();
  value_0 = entry.getValue();
  ourValue = this$static.get(key);
  if (!(maskUndefined(value_0) === maskUndefined(ourValue) || value_0 != null && equals_Ljava_lang_Object__Z__devirtual$(value_0, ourValue))) {
    return false;
  }
  if (ourValue == null && !this$static.containsKey(key)) {
    return false;
  }
  return true;
}

function $equals_4(this$static, obj){
  var entry, entry$iterator, otherMap;
  if (maskUndefined(obj) === maskUndefined(this$static)) {
    return true;
  }
  if (!instanceOf(obj, 68)) {
    return false;
  }
  otherMap = castTo(obj, 68);
  if (this$static.size() != otherMap.size()) {
    return false;
  }
  for (entry$iterator = otherMap.entrySet_0().iterator(); entry$iterator.hasNext_0();) {
    entry = castTo(entry$iterator.next_1(), 40);
    if (!this$static.containsEntry(entry)) {
      return false;
    }
  }
  return true;
}

function $getOrDefault(this$static, key, defaultValue){
  var currentValue;
  return currentValue = this$static.get(key) , currentValue == null && !this$static.containsKey(key)?defaultValue:currentValue;
}

function $implFindEntry(this$static, key, remove){
  var entry, iter, k;
  for (iter = this$static.entrySet_0().iterator(); iter.hasNext_0();) {
    entry = castTo(iter.next_1(), 40);
    k = entry.getKey();
    if (maskUndefined(key) === maskUndefined(k) || key != null && equals_Ljava_lang_Object__Z__devirtual$(key, k)) {
      if (remove) {
        entry = new AbstractMap$SimpleEntry(entry.getKey(), entry.getValue());
        iter.remove_0();
      }
      return entry;
    }
  }
  return null;
}

function $putAll(this$static, map_0){
  var e, e$iterator;
  checkCriticalNotNull(map_0);
  for (e$iterator = map_0.entrySet_0().iterator(); e$iterator.hasNext_0();) {
    e = castTo(e$iterator.next_1(), 40);
    this$static.put(e.getKey(), e.getValue());
  }
}

function $putIfAbsent(this$static, key, value_0){
  var currentValue;
  return currentValue = this$static.get(key) , currentValue != null?currentValue:this$static.put(key, value_0);
}

function $toString_5(this$static, o){
  return o === this$static?'(this Map)':o == null?'null':toString_5(o);
}

function getEntryValueOrNull(entry){
  return !entry?null:entry.getValue();
}

defineClass(1227, 1, $intern_24);
_.forEach_0 = function forEach_0(consumer){
  $forEach_1(this, consumer);
}
;
_.getOrDefault = function getOrDefault(key, defaultValue){
  return $getOrDefault(this, key, defaultValue);
}
;
_.merge = function merge_0(key, value_0, remappingFunction){
  return $merge(this, key, value_0, remappingFunction);
}
;
_.putIfAbsent = function putIfAbsent(key, value_0){
  return $putIfAbsent(this, key, value_0);
}
;
_.replace = function replace_0(key, value_0){
  return this.containsKey(key)?this.put(key, value_0):null;
}
;
_.clear = function clear_1(){
  this.entrySet_0().clear();
}
;
_.containsEntry = function containsEntry(entry){
  return $containsEntry(this, entry);
}
;
_.containsKey = function containsKey(key){
  return !!$implFindEntry(this, key, false);
}
;
_.containsValue = function containsValue(value_0){
  var entry, entry$iterator, v;
  for (entry$iterator = this.entrySet_0().iterator(); entry$iterator.hasNext_0();) {
    entry = castTo(entry$iterator.next_1(), 40);
    v = entry.getValue();
    if (maskUndefined(value_0) === maskUndefined(v) || value_0 != null && equals_Ljava_lang_Object__Z__devirtual$(value_0, v)) {
      return true;
    }
  }
  return false;
}
;
_.equals_0 = function equals_11(obj){
  return $equals_4(this, obj);
}
;
_.get = function get_1(key){
  return getEntryValueOrNull($implFindEntry(this, key, false));
}
;
_.hashCode_1 = function hashCode_12(){
  return hashCode_21(this.entrySet_0());
}
;
_.isEmpty = function isEmpty_0(){
  return this.size() == 0;
}
;
_.keySet = function keySet(){
  return new AbstractMap$1(this);
}
;
_.put = function put(key, value_0){
  throw toJs(new UnsupportedOperationException_0('Put not supported on this map'));
}
;
_.putAll = function putAll(map_0){
  $putAll(this, map_0);
}
;
_.remove = function remove_1(key){
  return getEntryValueOrNull($implFindEntry(this, key, true));
}
;
_.size = function size_2(){
  return this.entrySet_0().size();
}
;
_.toString_0 = function toString_23(){
  var entry, entry$iterator, joiner;
  joiner = new StringJoiner_0(', ', '{', '}');
  for (entry$iterator = this.entrySet_0().iterator(); entry$iterator.hasNext_0();) {
    entry = castTo(entry$iterator.next_1(), 40);
    $add_3(joiner, $toString_5(this, entry.getKey()) + '=' + $toString_5(this, entry.getValue()));
  }
  return !joiner.builder?joiner.emptyValue:joiner.suffix.length == 0?joiner.builder.string:joiner.builder.string + ('' + joiner.suffix);
}
;
_.values = function values_1(){
  return new AbstractMap$2(this);
}
;
defineClass($intern_25, 1228, $intern_26);
_.spliterator_0 = function spliterator_1(){
  return new Spliterators$IteratorSpliterator(this, 1);
}
;
_.equals_0 = function equals_12(o){
  var other;
  if (o === this) {
    return true;
  }
  if (!instanceOf(o, 47)) {
    return false;
  }
  other = castTo(o, 47);
  if (other.size() != this.size()) {
    return false;
  }
  return $containsAll(this, other);
}
;
_.hashCode_1 = function hashCode_13(){
  return hashCode_21(this);
}
;
_.removeAll = function removeAll_0(c){
  var iter, o, o$iterator, size_0;
  checkCriticalNotNull(c);
  size_0 = this.size();
  if (size_0 < c.size()) {
    for (iter = this.iterator(); iter.hasNext_0();) {
      o = iter.next_1();
      c.contains(o) && iter.remove_0();
    }
  }
   else {
    for (o$iterator = c.iterator(); o$iterator.hasNext_0();) {
      o = o$iterator.next_1();
      this.remove(o);
    }
  }
  return size_0 != this.size();
}
;
function AbstractMap$1(this$0){
  this.this$01 = this$0;
}

defineClass(354, $intern_25, $intern_26, AbstractMap$1);
_.clear = function clear_5(){
  this.this$01.clear();
}
;
_.contains = function contains_1(key){
  return this.this$01.containsKey(key);
}
;
_.iterator = function iterator_2(){
  var outerIter;
  return outerIter = this.this$01.entrySet_0().iterator() , new AbstractMap$1$1(outerIter);
}
;
_.remove = function remove_9(key){
  if (this.this$01.containsKey(key)) {
    this.this$01.remove(key);
    return true;
  }
  return false;
}
;
_.size = function size_8(){
  return this.this$01.size();
}
;
function AbstractMap$1$1(val$outerIter){
  this.val$outerIter2 = val$outerIter;
}

defineClass(475, 1, {}, AbstractMap$1$1);
_.forEachRemaining = function forEachRemaining_1(consumer){
  $forEachRemaining(this, consumer);
}
;
_.hasNext_0 = function hasNext_1(){
  return this.val$outerIter2.hasNext_0();
}
;
_.next_1 = function next_4(){
  var entry;
  entry = castTo(this.val$outerIter2.next_1(), 40);
  return entry.getKey();
}
;
_.remove_0 = function remove_10(){
  this.val$outerIter2.remove_0();
}
;
function AbstractMap$2(this$0){
  this.this$01 = this$0;
}

defineClass(169, 1228, {54:1}, AbstractMap$2);
_.clear = function clear_6(){
  this.this$01.clear();
}
;
_.contains = function contains_2(value_0){
  return this.this$01.containsValue(value_0);
}
;
_.iterator = function iterator_3(){
  var outerIter;
  outerIter = this.this$01.entrySet_0().iterator();
  return new AbstractMap$2$1(outerIter);
}
;
_.size = function size_9(){
  return this.this$01.size();
}
;
function AbstractMap$2$1(val$outerIter){
  this.val$outerIter2 = val$outerIter;
}

defineClass(901, 1, {}, AbstractMap$2$1);
_.forEachRemaining = function forEachRemaining_2(consumer){
  $forEachRemaining(this, consumer);
}
;
_.hasNext_0 = function hasNext_2(){
  return this.val$outerIter2.hasNext_0();
}
;
_.next_1 = function next_5(){
  var entry;
  entry = castTo(this.val$outerIter2.next_1(), 40);
  return entry.getValue();
}
;
_.remove_0 = function remove_11(){
  this.val$outerIter2.remove_0();
}
;
function $setValue(this$static, value_0){
  var oldValue;
  oldValue = this$static.value_0;
  this$static.value_0 = value_0;
  return oldValue;
}

defineClass(309, 1, {309:1, 40:1});
_.equals_0 = function equals_14(other){
  var entry;
  if (!instanceOf(other, 40)) {
    return false;
  }
  entry = castTo(other, 40);
  return equals_28(this.key, entry.getKey()) && equals_28(this.value_0, entry.getValue());
}
;
_.getKey = function getKey(){
  return this.key;
}
;
_.getValue = function getValue(){
  return this.value_0;
}
;
_.hashCode_1 = function hashCode_15(){
  return hashCode_27(this.key) ^ hashCode_27(this.value_0);
}
;
_.setValue = function setValue(value_0){
  return $setValue(this, value_0);
}
;
_.toString_0 = function toString_24(){
  return this.key + '=' + this.value_0;
}
;
function AbstractMap$SimpleEntry(key, value_0){
  this.key = key;
  this.value_0 = value_0;
}

defineClass(248, 309, {309:1, 248:1, 40:1}, AbstractMap$SimpleEntry);
function $$init_0(this$static){
  this$static.array = initUnidimensionalArray(Ljava_lang_Object_2_classLit, $intern_0, 1, 0, 5, 1);
}

function $add(this$static, o){
  this$static.array[this$static.array.length] = o;
  return true;
}

function $addAll_0(this$static, c){
  var cArray, len;
  cArray = c.toArray();
  len = cArray.length;
  if (len == 0) {
    return false;
  }
  insertTo_0(this$static.array, this$static.array.length, cArray);
  return true;
}

function $forEach_0(this$static, consumer){
  var e, e$array, e$index, e$max;
  checkCriticalNotNull(consumer);
  for (e$array = this$static.array , e$index = 0 , e$max = e$array.length; e$index < e$max; ++e$index) {
    e = e$array[e$index];
    consumer.accept(e);
  }
}

function $get_1(this$static, index_0){
  checkCriticalElementIndex(index_0, this$static.array.length);
  return this$static.array[index_0];
}

function $indexOf_1(this$static, o, index_0){
  for (; index_0 < this$static.array.length; ++index_0) {
    if (equals_28(o, this$static.array[index_0])) {
      return index_0;
    }
  }
  return -1;
}

function $lastIndexOf_1(this$static, o, index_0){
  for (; index_0 >= 0; --index_0) {
    if (equals_28(o, this$static.array[index_0])) {
      return index_0;
    }
  }
  return -1;
}

function $remove_1(this$static, index_0){
  var previous;
  previous = (checkCriticalElementIndex(index_0, this$static.array.length) , this$static.array[index_0]);
  removeFrom(this$static.array, index_0, 1);
  return previous;
}

function $set_0(this$static, index_0, o){
  var previous;
  previous = (checkCriticalElementIndex(index_0, this$static.array.length) , this$static.array[index_0]);
  this$static.array[index_0] = o;
  return previous;
}

function $sort(this$static, c){
  sort_0(this$static.array, this$static.array.length, c);
}

function $toArray(this$static, out){
  var i, size_0;
  size_0 = this$static.array.length;
  out.length < size_0 && (out = stampJavaTypeInfo_1(new Array(size_0), out));
  for (i = 0; i < size_0; ++i) {
    setCheck(out, i, this$static.array[i]);
  }
  out.length > size_0 && setCheck(out, size_0, null);
  return out;
}

function ArrayList(){
  $$init_0(this);
}

function ArrayList_0(initialCapacity){
  $$init_0(this);
  checkCriticalArgument_0(initialCapacity >= 0, 'Initial capacity must not be negative');
}

function ArrayList_1(c){
  $$init_0(this);
  insertTo_0(this.array, 0, c.toArray());
}

defineClass(49, 1237, $intern_27, ArrayList, ArrayList_0, ArrayList_1);
_.addAtIndex = function add_11(index_0, o){
  checkCriticalPositionIndex(index_0, this.array.length);
  insertTo(this.array, index_0, o);
}
;
_.add = function add_12(o){
  return $add(this, o);
}
;
_.addAllAtIndex = function addAll_2(index_0, c){
  var cArray, len;
  checkCriticalPositionIndex(index_0, this.array.length);
  cArray = c.toArray();
  len = cArray.length;
  if (len == 0) {
    return false;
  }
  insertTo_0(this.array, index_0, cArray);
  return true;
}
;
_.addAll = function addAll_3(c){
  return $addAll_0(this, c);
}
;
_.clear = function clear_8(){
  this.array = initUnidimensionalArray(Ljava_lang_Object_2_classLit, $intern_0, 1, 0, 5, 1);
}
;
_.contains = function contains_5(o){
  return $indexOf_1(this, o, 0) != -1;
}
;
_.forEach = function forEach_1(consumer){
  $forEach_0(this, consumer);
}
;
_.getAtIndex = function get_6(index_0){
  return $get_1(this, index_0);
}
;
_.indexOf = function indexOf_0(o){
  return $indexOf_1(this, o, 0);
}
;
_.isEmpty = function isEmpty_1(){
  return this.array.length == 0;
}
;
_.iterator = function iterator_7(){
  return new ArrayList$1(this);
}
;
_.lastIndexOf = function lastIndexOf_0(o){
  return $lastIndexOf_1(this, o, this.array.length - 1);
}
;
_.removeAtIndex = function remove_16(index_0){
  return $remove_1(this, index_0);
}
;
_.remove = function remove_17(o){
  var i;
  i = $indexOf_1(this, o, 0);
  if (i == -1) {
    return false;
  }
  checkCriticalElementIndex(i, this.array.length);
  removeFrom(this.array, i, 1);
  return true;
}
;
_.removeRange = function removeRange_0(fromIndex, endIndex){
  var count;
  checkCriticalPositionIndexes(fromIndex, endIndex, this.array.length);
  count = endIndex - fromIndex;
  removeFrom(this.array, fromIndex, count);
}
;
_.setAtIndex = function set_6(index_0, o){
  return $set_0(this, index_0, o);
}
;
_.size = function size_12(){
  return this.array.length;
}
;
_.toArray = function toArray_1(){
  return clone(this.array, this.array.length);
}
;
_.toArray_0 = function toArray_2(out){
  return $toArray(this, out);
}
;
function $next_0(this$static){
  checkCriticalElement(this$static.i < this$static.this$01.array.length);
  this$static.last = this$static.i++;
  return this$static.this$01.array[this$static.last];
}

function ArrayList$1(this$0){
  this.this$01 = this$0;
}

defineClass(225, 1, {}, ArrayList$1);
_.forEachRemaining = function forEachRemaining_4(consumer){
  $forEachRemaining(this, consumer);
}
;
_.hasNext_0 = function hasNext_4(){
  return this.i < this.this$01.array.length;
}
;
_.next_1 = function next_8(){
  return $next_0(this);
}
;
_.remove_0 = function remove_18(){
  checkCriticalState(this.last != -1);
  $remove_1(this.this$01, this.i = this.last);
  this.last = -1;
}
;
_.i = 0;
_.last = -1;
function checkCopyOfRange(original, from, to){
  var len;
  checkCriticalArgument_1(from <= to, '%s > %s', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [valueOf_1(from), valueOf_1(to)]));
  len = original.length;
  checkCriticalArrayBounds_0(from, from, len);
}

function copyObjectArray(original, from, to){
  var copy, result;
  copy = (result = original.slice(from, to) , stampJavaTypeInfo_0(result, original));
  copy.length = to - from;
  return copy;
}

function copyOf(original, newLength){
  checkCriticalArraySize(newLength);
  return copyPrimitiveByteArray(original, initUnidimensionalArray(B_classLit, $intern_28, 8, newLength, 15, 1), 0, newLength);
}

function copyOf_0(original, newLength){
  checkCriticalArraySize(newLength);
  return copyPrimitiveArray(original, initUnidimensionalArray(I_classLit, $intern_29, 8, newLength, 15, 1), newLength);
}

function copyOf_1(original, newLength){
  checkCriticalArraySize(newLength);
  return copyObjectArray(original, 0, newLength);
}

function copyOfRange(original, from, to){
  checkCopyOfRange(original, from, to);
  return copyPrimitiveByteArray(original, initUnidimensionalArray(B_classLit, $intern_28, 8, to - from, 15, 1), from, to);
}

function copyOfRange_0(original, from, to){
  checkCopyOfRange(original, from, to);
  return copyObjectArray(original, from, to);
}

function copyPrimitiveArray(original, copy, to){
  var copyLen, len;
  len = original.length;
  copyLen = $wnd.Math.min(to, len);
  copy_0(original, 0, copy, 0, copyLen, true);
  nativeArraycopy(original, 0, copy, 0, copyLen);
  return copy;
}

function copyPrimitiveByteArray(original, copy, from, to){
  var copyLen, len;
  len = original.length;
  copyLen = $wnd.Math.min(to, len) - from;
  nativeArraycopy(original, from, copy, 0, copyLen);
  return copy;
}

function equals_16(array1, array2){
  var i;
  if (maskUndefined(array1) === maskUndefined(array2)) {
    return true;
  }
  if (array1 == null || array2 == null) {
    return false;
  }
  if (array1.length != array2.length) {
    return false;
  }
  for (i = 0; i < array1.length; ++i) {
    if (array1[i] != array2[i]) {
      return false;
    }
  }
  return true;
}

function equals_17(array1, array2){
  var i;
  if (maskUndefined(array1) === maskUndefined(array2)) {
    return true;
  }
  if (array1 == null || array2 == null) {
    return false;
  }
  if (array1.length != array2.length) {
    return false;
  }
  for (i = 0; i < array1.length; ++i) {
    if (array1[i] != array2[i]) {
      return false;
    }
  }
  return true;
}

function equals_18(array1, array2){
  var i, val1, val2;
  if (maskUndefined(array1) === maskUndefined(array2)) {
    return true;
  }
  if (array1 == null || array2 == null) {
    return false;
  }
  if (array1.length != array2.length) {
    return false;
  }
  for (i = 0; i < array1.length; ++i) {
    val1 = array1[i];
    val2 = array2[i];
    if (!(maskUndefined(val1) === maskUndefined(val2) || val1 != null && equals_Ljava_lang_Object__Z__devirtual$(val1, val2))) {
      return false;
    }
  }
  return true;
}

function fill(a){
  fill0(a, a.length, 0);
}

function fill_0(a, val){
  fill0_0(a, 0, a.length, val);
}

function fill_1(a, fromIndex){
  checkCriticalArrayBounds_0(fromIndex, 64, a.length);
  fill0_0(a, fromIndex, 64, 0);
}

function fill0(a, toIndex, val){
  var i;
  for (i = 0; i < toIndex; ++i) {
    a[i] = val;
  }
}

function fill0_0(a, fromIndex, toIndex, val){
  var i;
  for (i = fromIndex; i < toIndex; ++i) {
    a[i] = val;
  }
}

function hashCode_17(a){
  var e, e$array, e$index, e$max, hashCode;
  if (a == null) {
    return 0;
  }
  hashCode = 1;
  for (e$array = a , e$index = 0 , e$max = e$array.length; e$index < e$max; ++e$index) {
    e = e$array[e$index];
    hashCode = 31 * hashCode + e;
    hashCode = hashCode | 0;
  }
  return hashCode;
}

function hashCode_18(a){
  var e, e$array, e$index, e$max, hashCode;
  if (a == null) {
    return 0;
  }
  hashCode = 1;
  for (e$array = a , e$index = 0 , e$max = e$array.length; e$index < e$max; ++e$index) {
    e = e$array[e$index];
    hashCode = 31 * hashCode + e;
    hashCode = hashCode | 0;
  }
  return hashCode;
}

function hashCode_19(a){
  var e, e$array, e$index, e$max, hashCode;
  if (a == null) {
    return 0;
  }
  hashCode = 1;
  for (e$array = a , e$index = 0 , e$max = e$array.length; e$index < e$max; ++e$index) {
    e = e$array[e$index];
    hashCode = 31 * hashCode + (e != null?hashCode__I__devirtual$(e):0);
    hashCode = hashCode | 0;
  }
  return hashCode;
}

function insertionSort(array, low, high, comp){
  var i, j, t;
  for (i = low + 1; i < high; ++i) {
    for (j = i; j > low && comp.compare_0(array[j - 1], array[j]) > 0; --j) {
      t = array[j];
      setCheck(array, j, array[j - 1]);
      setCheck(array, j - 1, t);
    }
  }
}

function merge_1(src_0, srcLow, srcMid, srcHigh, dest, destLow, destHigh, comp){
  var topIdx;
  topIdx = srcMid;
  while (destLow < destHigh) {
    topIdx >= srcHigh || srcLow < srcMid && comp.compare_0(src_0[srcLow], src_0[topIdx]) <= 0?setCheck(dest, destLow++, src_0[srcLow++]):setCheck(dest, destLow++, src_0[topIdx++]);
  }
}

function mergeSort(x_0, fromIndex, toIndex, comp){
  var temp;
  comp = ($clinit_Comparators() , !comp?INTERNAL_NATURAL_ORDER:comp);
  temp = x_0.slice(fromIndex, toIndex);
  mergeSort_0(temp, x_0, fromIndex, toIndex, -fromIndex, comp);
}

function mergeSort_0(temp, array, low, high, ofs, comp){
  var length_0, tempHigh, tempLow, tempMid;
  length_0 = high - low;
  if (length_0 < 7) {
    insertionSort(array, low, high, comp);
    return;
  }
  tempLow = low + ofs;
  tempHigh = high + ofs;
  tempMid = tempLow + (tempHigh - tempLow >> 1);
  mergeSort_0(array, temp, tempLow, tempMid, -ofs, comp);
  mergeSort_0(array, temp, tempMid, tempHigh, -ofs, comp);
  if (comp.compare_0(temp[tempMid - 1], temp[tempMid]) <= 0) {
    while (low < high) {
      setCheck(array, low++, temp[tempLow++]);
    }
    return;
  }
  merge_1(temp, tempLow, tempMid, tempHigh, array, low, high, comp);
}

function nativeArraycopy(src_0, srcOfs, dest, destOfs, len){
  dest.set(src_0.slice(srcOfs, srcOfs + len), destOfs);
}

function sort_0(x_0, toIndex, c){
  checkCriticalArrayBounds_0(0, toIndex, x_0.length);
  mergeSort(x_0, 0, toIndex, c);
}

function sort_1(x_0, c){
  mergeSort(x_0, 0, x_0.length, c);
}

function spliterator_4(array, endExclusive){
  return checkCriticalArrayBounds(endExclusive, array.length) , new Spliterators$IntArraySpliterator(array, endExclusive);
}

function spliterator_5(array, endExclusive){
  return checkCriticalArrayBounds(endExclusive, array.length) , new Spliterators$ArraySpliterator(array, endExclusive);
}

function stream_4(array){
  return new IntStreamImpl(null, spliterator_4(array, array.length));
}

function stream_5(array){
  return new StreamImpl(null, spliterator_5(array, array.length));
}

function stream_6(array, endExclusive){
  return new StreamImpl(null, (checkCriticalArrayBounds(endExclusive, array.length) , new Spliterators$ArraySpliterator(array, endExclusive)));
}

function $clinit_Collections(){
  $clinit_Collections = emptyMethod;
  EMPTY_LIST = new Collections$EmptyList;
  EMPTY_MAP = new Collections$EmptyMap;
  EMPTY_SET = new Collections$EmptySet;
}

function hashCode_21(collection){
  $clinit_Collections();
  var e, e$iterator, hashCode;
  hashCode = 0;
  for (e$iterator = collection.iterator(); e$iterator.hasNext_0();) {
    e = e$iterator.next_1();
    hashCode = hashCode + (e != null?hashCode__I__devirtual$(e):0);
    hashCode = hashCode | 0;
  }
  return hashCode;
}

function hashCode_22(list){
  $clinit_Collections();
  var e, e$iterator, hashCode;
  hashCode = 1;
  for (e$iterator = list.iterator(); e$iterator.hasNext_0();) {
    e = e$iterator.next_1();
    hashCode = 31 * hashCode + (e != null?hashCode__I__devirtual$(e):0);
    hashCode = hashCode | 0;
  }
  return hashCode;
}

function singleton(o){
  $clinit_Collections();
  var set_0;
  set_0 = new HashSet_0;
  $put(set_0.map_0, o, set_0);
  return new Collections$UnmodifiableSet(set_0);
}

function singletonMap(key, value_0){
  $clinit_Collections();
  var map_0;
  map_0 = new HashMap_0(1);
  $put_3(map_0.hashCodeMap, key, value_0);
  return new Collections$UnmodifiableMap(map_0);
}

var EMPTY_LIST, EMPTY_MAP, EMPTY_SET;
function Collections$EmptyList(){
}

defineClass(933, 1237, $intern_27, Collections$EmptyList);
_.contains = function contains_7(object){
  return false;
}
;
_.getAtIndex = function get_8(location_0){
  return checkCriticalElementIndex(location_0, 0) , null;
}
;
_.iterator = function iterator_8(){
  return $clinit_Collections() , $clinit_Collections$EmptyListIterator() , INSTANCE_0;
}
;
_.size = function size_14(){
  return 0;
}
;
function $clinit_Collections$EmptyListIterator(){
  $clinit_Collections$EmptyListIterator = emptyMethod;
  INSTANCE_0 = new Collections$EmptyListIterator;
}

function $next_1(){
  throw toJs(new NoSuchElementException);
}

function Collections$EmptyListIterator(){
}

defineClass(934, 1, {}, Collections$EmptyListIterator);
_.forEachRemaining = function forEachRemaining_5(consumer){
  $forEachRemaining(this, consumer);
}
;
_.add_0 = function add_13(o){
  throw toJs(new UnsupportedOperationException);
}
;
_.hasNext_0 = function hasNext_5(){
  return false;
}
;
_.next_1 = function next_9(){
  return $next_1();
}
;
_.remove_0 = function remove_19(){
  throw toJs(new IllegalStateException);
}
;
_.set_1 = function set_8(o){
  throw toJs(new IllegalStateException);
}
;
var INSTANCE_0;
function Collections$EmptyMap(){
}

defineClass(936, 1227, $intern_30, Collections$EmptyMap);
_.containsKey = function containsKey_2(key){
  return false;
}
;
_.containsValue = function containsValue_1(value_0){
  return false;
}
;
_.entrySet_0 = function entrySet_1(){
  return $clinit_Collections() , EMPTY_SET;
}
;
_.get = function get_9(key){
  return null;
}
;
_.keySet = function keySet_1(){
  return $clinit_Collections() , EMPTY_SET;
}
;
_.size = function size_15(){
  return 0;
}
;
_.values = function values_2(){
  return $clinit_Collections() , EMPTY_LIST;
}
;
function Collections$EmptySet(){
}

defineClass(935, $intern_25, $intern_31, Collections$EmptySet);
_.contains = function contains_8(object){
  return false;
}
;
_.iterator = function iterator_9(){
  return $clinit_Collections() , $clinit_Collections$EmptyListIterator() , INSTANCE_0;
}
;
_.size = function size_16(){
  return 0;
}
;
function NoSuchElementException(){
  RuntimeException.call(this);
}

defineClass(254, 35, {4:1, 51:1, 35:1, 33:1, 254:1}, NoSuchElementException);
function equals_28(a, b){
  return maskUndefined(a) === maskUndefined(b) || a != null && equals_Ljava_lang_Object__Z__devirtual$(a, b);
}

function hashCode_27(o){
  return o != null?hashCode__I__devirtual$(o):0;
}

function requireNonNull(obj){
  if (obj == null) {
    throw toJs(new NullPointerException);
  }
  return obj;
}

function $forEachRemaining_0(this$static, consumer){
  while (this$static.tryAdvance(consumer))
  ;
}

function checkCriticalArrayBounds(end, length_0){
  if (0 > end || end > length_0) {
    throw toJs(new ArrayIndexOutOfBoundsException_0('fromIndex: 0, toIndex: ' + end + ', length: ' + length_0));
  }
}

function Spliterators$BaseSpliterator(size_0, characteristics){
  this.sizeEstimate = size_0;
  this.characteristics = (characteristics & 64) != 0?characteristics | $intern_16:characteristics;
}

defineClass(387, 1, {});
_.forEachRemaining = function forEachRemaining_15(consumer){
  $forEachRemaining_0(this, consumer);
}
;
_.hasCharacteristics = function hasCharacteristics_0(characteristics){
  return (this.characteristics & characteristics) != 0;
}
;
_.characteristics_0 = function characteristics_1(){
  return this.characteristics;
}
;
_.estimateSize_0 = function estimateSize_0(){
  return this.sizeEstimate;
}
;
_.characteristics = 0;
_.sizeEstimate = 0;
function Spliterators$AbstractSpliterator(size_0, characteristics){
  Spliterators$BaseSpliterator.call(this, size_0, characteristics);
}

defineClass(200, 387, {});
function $forEachRemaining_2(this$static, consumer){
  checkCriticalNotNull(consumer);
  while (this$static.index_0 < this$static.limit) {
    this$static.consume(consumer, this$static.index_0++);
  }
}

function $tryAdvance_0(this$static, consumer){
  checkCriticalNotNull(consumer);
  if (this$static.index_0 < this$static.limit) {
    this$static.consume(consumer, this$static.index_0++);
    return true;
  }
  return false;
}

function Spliterators$BaseArraySpliterator(limit){
  this.index_0 = 0;
  this.limit = limit;
  this.characteristics = 17488;
}

defineClass(455, 1, {});
_.forEachRemaining = function forEachRemaining_20(consumer){
  $forEachRemaining_0(this, consumer);
}
;
_.hasCharacteristics = function hasCharacteristics_1(characteristics){
  return (this.characteristics & characteristics) != 0;
}
;
_.characteristics_0 = function characteristics_2(){
  return this.characteristics;
}
;
_.estimateSize_0 = function estimateSize_1(){
  return this.limit - this.index_0;
}
;
_.characteristics = 0;
_.index_0 = 0;
_.limit = 0;
function $consume(this$static, consumer, index_0){
  consumer.accept(this$static.array[index_0]);
}

function Spliterators$ArraySpliterator(array, limit){
  Spliterators$BaseArraySpliterator.call(this, limit);
  this.array = array;
}

defineClass(456, 455, {}, Spliterators$ArraySpliterator);
_.consume = function consume(consumer, index_0){
  $consume(this, castTo(consumer, 46), index_0);
}
;
_.forEachRemaining = function forEachRemaining_21(consumer){
  $forEachRemaining_2(this, consumer);
}
;
_.tryAdvance = function tryAdvance_2(consumer){
  return $tryAdvance_0(this, consumer);
}
;
function $lambda$0(this$static, after_1, t_1){
  this$static.accept(t_1);
  after_1.accept(t_1);
}

function Consumer$lambda$0$Type($$outer_0, after_1){
  this.$$outer_0 = $$outer_0;
  this.after_1 = after_1;
}

defineClass(45, 1, $intern_32, Consumer$lambda$0$Type);
_.accept = function accept_9(t){
  $lambda$0(this.$$outer_0, this.after_1, t);
}
;
_.andThen = function andThen_1(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
function Function$lambda$0$Type(){
}

defineClass(1338, $wnd.Function, $intern_22, Function$lambda$0$Type);
_.apply_0 = function apply_4(t){
  return t;
}
;
function of_3(supplier, accumulator, combiner, finisher, characteristics){
  checkCriticalNotNull(supplier);
  checkCriticalNotNull(accumulator);
  checkCriticalNotNull(combiner);
  checkCriticalNotNull(finisher);
  checkCriticalNotNull(characteristics);
  return new CollectorImpl(supplier, accumulator, combiner, finisher);
}

function of_4(supplier, accumulator, combiner, characteristics){
  checkCriticalNotNull(supplier);
  checkCriticalNotNull(accumulator);
  checkCriticalNotNull(combiner);
  checkCriticalNotNull(characteristics);
  return new CollectorImpl(supplier, accumulator, combiner, makeLambdaFunction(Function$lambda$0$Type.prototype.apply_0, Function$lambda$0$Type, []));
}

function $clinit_Collector$Characteristics(){
  $clinit_Collector$Characteristics = emptyMethod;
  CONCURRENT = new Collector$Characteristics('CONCURRENT', 0);
  IDENTITY_FINISH = new Collector$Characteristics('IDENTITY_FINISH', 1);
  UNORDERED = new Collector$Characteristics('UNORDERED', 2);
}

function Collector$Characteristics(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_6(){
  $clinit_Collector$Characteristics();
  return stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [CONCURRENT, IDENTITY_FINISH, UNORDERED]);
}

defineClass(16, 52, {4:1, 57:1, 52:1, 16:1}, Collector$Characteristics);
var CONCURRENT, IDENTITY_FINISH, UNORDERED;
function CollectorImpl(supplier, accumulator, combiner, finisher){
  this.supplier = supplier;
  this.accumulator = accumulator;
  $clinit_Collections();
  this.combiner = combiner;
  this.finisher = finisher;
}

defineClass(520, 1, {}, CollectorImpl);
function Collectors$20methodref$add$Type(){
}

defineClass(22, 1, {}, Collectors$20methodref$add$Type);
_.accept_2 = function accept_10(arg0, arg1){
  castTo(arg0, 54).add(arg1);
}
;
function Collectors$21methodref$ctor$Type(){
}

defineClass(24, 1, {}, Collectors$21methodref$ctor$Type);
_.get_0 = function get_17(){
  return new ArrayList;
}
;
function Collectors$lambda$42$Type(){
}

defineClass(23, 1, $intern_34, Collectors$lambda$42$Type);
_.apply_1 = function apply_10(arg0, arg1){
  return castTo(arg0, 54).addAll(castTo(arg1, 54)) , castTo(arg0, 54);
}
;
function $close(this$static){
  if (!this$static.root) {
    this$static.terminated = true;
    $runClosers(this$static);
  }
   else {
    this$static.root.close_0();
  }
}

function $onClose(this$static, closeHandler){
  !this$static.root?$add(this$static.onClose, closeHandler):$onClose(this$static.root, closeHandler);
  return this$static;
}

function $runClosers(this$static){
  var e, i, size_0, suppressed, throwables;
  throwables = new ArrayList;
  $forEach_0(this$static.onClose, new TerminatableStream$lambda$0$Type(throwables));
  this$static.onClose.array = initUnidimensionalArray(Ljava_lang_Object_2_classLit, $intern_0, 1, 0, 5, 1);
  if (throwables.array.length != 0) {
    e = (checkCriticalElementIndex(0, throwables.array.length) , castTo(throwables.array[0], 33));
    for (i = 1 , size_0 = throwables.array.length; i < size_0; ++i) {
      suppressed = (checkCriticalElementIndex(i, throwables.array.length) , castTo(throwables.array[i], 33));
      suppressed != e && $addSuppressed(e, suppressed);
    }
    if (instanceOf(e, 35)) {
      throw toJs(castTo(e, 35));
    }
    if (instanceOf(e, 142)) {
      throw toJs(castTo(e, 142));
    }
  }
}

function $terminate(this$static){
  if (!this$static.root) {
    $throwIfTerminated(this$static);
    this$static.terminated = true;
  }
   else {
    $terminate(this$static.root);
  }
}

function $throwIfTerminated(this$static){
  if (this$static.root) {
    $throwIfTerminated(this$static.root);
  }
   else if (this$static.terminated) {
    throw toJs(new IllegalStateException_0("Stream already terminated, can't be modified or used"));
  }
}

function TerminatableStream(previous){
  if (!previous) {
    this.root = null;
    this.onClose = new ArrayList;
  }
   else {
    this.root = previous;
    this.onClose = null;
  }
}

function lambda$0(throwables_0, runnable_1){
  var e;
  try {
    runnable_1.run();
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 33)) {
      e = $e0;
      throwables_0.array[throwables_0.array.length] = e;
    }
     else 
      throw toJs($e0);
  }
}

defineClass(284, 1, {});
_.close_0 = function close_0(){
  $close(this);
}
;
_.terminated = false;
function concat(a, b){
  var result, spliterator, spliteratorOfStreams;
  spliteratorOfStreams = new Spliterators$IteratorSpliterator(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Stream_2_classLit, 1), $intern_0, 147, 0, [a, b])), 16);
  spliterator = new Stream$2(spliteratorOfStreams);
  result = new StreamImpl(null, spliterator);
  return castTo(castTo(castTo($onClose(result, new Stream$0methodref$close$Type(a)), 296), 147).onClose_0(new Stream$1methodref$close$Type(b)), 147);
}

function of_5(values){
  return new StreamImpl(null, spliterator_5(values, values.length));
}

function $clinit_StreamImpl(){
  $clinit_StreamImpl = emptyMethod;
  NULL_CONSUMER = new StreamImpl$lambda$0$Type;
}

function $anyMatch(this$static, predicate){
  return ($throwIfTerminated(this$static) , $spliterator(new StreamImpl(this$static, new StreamImpl$FilterSpliterator(predicate, this$static.spliterator)))).tryAdvance(NULL_CONSUMER);
}

function $collect_0(this$static, collector){
  return collector.finisher.call(null, $reduce(this$static, collector.supplier.get_0(), new StreamImpl$lambda$4$Type(collector)));
}

function $filter(this$static, predicate){
  $throwIfTerminated(this$static);
  return new StreamImpl(this$static, new StreamImpl$FilterSpliterator(predicate, this$static.spliterator));
}

function $findFirst(this$static){
  var holder;
  $terminate(this$static);
  holder = new StreamImpl$ValueConsumer;
  if (this$static.spliterator.tryAdvance(holder)) {
    return $clinit_Optional() , new Optional(checkCriticalNotNull(holder.value_0));
  }
  return $clinit_Optional() , $clinit_Optional() , EMPTY;
}

function $flatMap_0(this$static, mapper){
  var flatMapSpliterator, spliteratorOfStreams;
  $throwIfTerminated(this$static);
  spliteratorOfStreams = new StreamImpl$MapToObjSpliterator(mapper, this$static.spliterator);
  flatMapSpliterator = new StreamImpl$1(spliteratorOfStreams);
  return new StreamImpl(this$static, flatMapSpliterator);
}

function $forEach_2(this$static, action){
  $terminate(this$static);
  this$static.spliterator.forEachRemaining(action);
}

function $limit(this$static, maxSize){
  $throwIfTerminated(this$static);
  checkCriticalState_0(compare_1(maxSize, 0) >= 0, 'maxSize may not be negative');
  return new StreamImpl(this$static, new StreamImpl$LimitSpliterator(maxSize, this$static.spliterator));
}

function $map_0(this$static, mapper){
  $throwIfTerminated(this$static);
  return new StreamImpl(this$static, new StreamImpl$MapToObjSpliterator(mapper, this$static.spliterator));
}

function $mapToInt(this$static, mapper){
  $throwIfTerminated(this$static);
  return new IntStreamImpl(this$static, new StreamImpl$MapToIntSpliterator(mapper, this$static.spliterator));
}

function $parallel(this$static){
  return $throwIfTerminated(this$static) , this$static;
}

function $reduce(this$static, identity, accumulator){
  var consumer;
  $terminate(this$static);
  consumer = new StreamImpl$ValueConsumer;
  consumer.value_0 = identity;
  this$static.spliterator.forEachRemaining(new StreamImpl$lambda$5$Type(consumer, accumulator));
  return consumer.value_0;
}

function $reduce_0(this$static, identity, accumulator){
  return $reduce(this$static, identity, accumulator);
}

function $reduce_1(this$static, accumulator){
  var consumer;
  consumer = new StreamImpl$ValueConsumer;
  if (!this$static.spliterator.tryAdvance(consumer)) {
    $terminate(this$static);
    return $clinit_Optional() , $clinit_Optional() , EMPTY;
  }
  return $clinit_Optional() , new Optional(checkCriticalNotNull($reduce_0(this$static, consumer.value_0, accumulator)));
}

function $skip_0(this$static, n){
  $throwIfTerminated(this$static);
  checkCriticalState_0(compare_1(n, 0) >= 0, 'n may not be negative');
  if (compare_1(n, 0) == 0) {
    return this$static;
  }
  return new StreamImpl(this$static, new StreamImpl$SkipSpliterator(n, this$static.spliterator));
}

function $sorted(this$static){
  var c;
  $throwIfTerminated(this$static);
  c = ($clinit_Comparators() , $clinit_Comparators() , NATURAL_ORDER);
  return $sorted_0(this$static, c);
}

function $sorted_0(this$static, comparator){
  var sortedSpliterator;
  $throwIfTerminated(this$static);
  sortedSpliterator = new StreamImpl$5(this$static, this$static.spliterator.estimateSize_0(), this$static.spliterator.characteristics_0() | 4, comparator);
  return new StreamImpl(this$static, sortedSpliterator);
}

function $spliterator(this$static){
  $terminate(this$static);
  return this$static.spliterator;
}

function $toArray_2(this$static, generator){
  var collected;
  collected = castTo($collect_0(this$static, of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  return collected.toArray_0($apply(collected.size()));
}

function StreamImpl(prev, spliterator){
  $clinit_StreamImpl();
  TerminatableStream.call(this, prev);
  this.spliterator = spliterator;
}

function lambda$4(collector_0, a_1, t_2){
  $clinit_StreamImpl();
  collector_0.accumulator.accept_2(a_1, t_2);
  return a_1;
}

function lambda$5(consumer_0, accumulator_1, item_2){
  $clinit_StreamImpl();
  $accept_0(consumer_0, accumulator_1.apply_1(consumer_0.value_0, item_2));
}

defineClass(26, 284, $intern_35, StreamImpl);
_.close_0 = function close_5(){
  $close(this);
}
;
_.onClose_0 = function onClose_3(arg0){
  return $onClose(this, arg0);
}
;
_.parallel = function parallel_7(){
  return $parallel(this);
}
;
_.collect_0 = function collect_2(collector){
  return $collect_0(this, collector);
}
;
_.map_1 = function map_2(mapper){
  return $map_0(this, mapper);
}
;
_.reduce = function reduce(identity, accumulator, combiner){
  return $reduce(this, identity, accumulator);
}
;
_.spliterator_0 = function spliterator_18(){
  return $spliterator(this);
}
;
var NULL_CONSUMER;
function $apply(arg0){
  return $clinit_StreamImpl() , initUnidimensionalArray(Ljava_lang_Object_2_classLit, $intern_0, 1, arg0, 5, 1);
}

function StreamImpl$0methodref$lambda$2$Type(){
}

defineClass(547, 1, {}, StreamImpl$0methodref$lambda$2$Type);
_.apply_2 = function apply_18(arg0){
  return $apply(arg0);
}
;
function $lambda$0_5(this$static, action_1, u_1){
  action_1.accept(this$static.map_0.call(null, u_1));
}

function $tryAdvance_6(this$static, action){
  return this$static.original.tryAdvance(new StreamImpl$MapToObjSpliterator$lambda$0$Type(this$static, action));
}

function StreamImpl$MapToObjSpliterator(map_0, original){
  Spliterators$AbstractSpliterator.call(this, original.estimateSize_0(), original.characteristics_0() & -6);
  checkCriticalNotNull(map_0);
  this.map_0 = map_0;
  this.original = original;
}

defineClass(515, 200, {}, StreamImpl$MapToObjSpliterator);
_.tryAdvance = function tryAdvance_20(action){
  return $tryAdvance_6(this, action);
}
;
function StreamImpl$MapToObjSpliterator$lambda$0$Type($$outer_0, action_1){
  this.$$outer_0 = $$outer_0;
  this.action_1 = action_1;
}

defineClass(1068, 1, $intern_32, StreamImpl$MapToObjSpliterator$lambda$0$Type);
_.accept = function accept_25(arg0){
  $lambda$0_5(this.$$outer_0, this.action_1, arg0);
}
;
_.andThen = function andThen_7(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
function $accept_0(this$static, value_0){
  this$static.value_0 = value_0;
}

function StreamImpl$ValueConsumer(){
}

defineClass(426, 1, $intern_32, StreamImpl$ValueConsumer);
_.andThen = function andThen_9(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
_.accept = function accept_27(value_0){
  $accept_0(this, value_0);
}
;
function StreamImpl$lambda$0$Type(){
}

defineClass(1072, 1, $intern_32, StreamImpl$lambda$0$Type);
_.accept = function accept_28(arg0){
  $clinit_StreamImpl();
}
;
_.andThen = function andThen_10(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
function StreamImpl$lambda$4$Type(collector_0){
  this.collector_0 = collector_0;
}

defineClass(1073, 1, $intern_34, StreamImpl$lambda$4$Type);
_.apply_1 = function apply_19(arg0, arg1){
  return lambda$4(this.collector_0, arg0, arg1);
}
;
function StreamImpl$lambda$5$Type(consumer_0, accumulator_1){
  this.consumer_0 = consumer_0;
  this.accumulator_1 = accumulator_1;
}

defineClass(1074, 1, $intern_32, StreamImpl$lambda$5$Type);
_.accept = function accept_29(arg0){
  lambda$5(this.consumer_0, this.accumulator_1, arg0);
}
;
_.andThen = function andThen_11(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
function clone(array, toIndex){
  var result;
  result = array.slice(0, toIndex);
  return stampJavaTypeInfo_0(result, array);
}

function copy_0(src_0, srcOfs, dest, destOfs, len, overwrite){
  var batchEnd, batchStart, destArray, end, spliceArgs;
  if (maskUndefined(src_0) === maskUndefined(dest)) {
    src_0 = src_0.slice(srcOfs, srcOfs + len);
    srcOfs = 0;
  }
  destArray = dest;
  for (batchStart = srcOfs , end = srcOfs + len; batchStart < end;) {
    batchEnd = $wnd.Math.min(batchStart + $intern_21, end);
    len = batchEnd - batchStart;
    spliceArgs = src_0.slice(batchStart, batchEnd);
    spliceArgs.splice(0, 0, destOfs, overwrite?len:0);
    Array.prototype.splice.apply(destArray, spliceArgs);
    batchStart = batchEnd;
    destOfs += len;
  }
}

function createFrom(array, length_0){
  return stampJavaTypeInfo_1(new Array(length_0), array);
}

function insertTo(array, index_0, value_0){
  array.splice(index_0, 0, value_0);
}

function insertTo_0(array, index_0, values){
  copy_0(values, 0, array, index_0, values.length, false);
}

function removeFrom(array, index_0, deleteCount){
  array.splice(index_0, deleteCount);
}

defineClass(3638, 1, {});
function stampJavaTypeInfo_1(array, referenceType){
  return stampJavaTypeInfo_0(array, referenceType);
}

function checkCriticalArgument(expression){
  if (!expression) {
    throw toJs(new IllegalArgumentException);
  }
}

function checkCriticalArgument_0(expression, errorMessage){
  if (!expression) {
    throw toJs(new IllegalArgumentException_0(errorMessage));
  }
}

function checkCriticalArgument_1(expression, errorMessageTemplate, errorMessageArgs){
  if (!expression) {
    throw toJs(new IllegalArgumentException_0(format_0(errorMessageTemplate, errorMessageArgs)));
  }
}

function checkCriticalArithmetic(expression){
  if (!expression) {
    throw toJs(new ArithmeticException);
  }
}

function checkCriticalArrayBounds_0(start_0, end, length_0){
  if (start_0 > end) {
    throw toJs(new IllegalArgumentException_0('fromIndex: ' + start_0 + ' > toIndex: ' + end));
  }
  if (start_0 < 0 || end > length_0) {
    throw toJs(new ArrayIndexOutOfBoundsException_0('fromIndex: ' + start_0 + ', toIndex: ' + end + ', length: ' + length_0));
  }
}

function checkCriticalArraySize(size_0){
  if (size_0 < 0) {
    throw toJs(new NegativeArraySizeException('Negative array size: ' + size_0));
  }
}

function checkCriticalArrayType(expression){
  if (!expression) {
    throw toJs(new ArrayStoreException);
  }
}

function checkCriticalArrayType_0(expression, errorMessage){
  if (!expression) {
    throw toJs(new ArrayStoreException_0(errorMessage));
  }
}

function checkCriticalElement(expression){
  if (!expression) {
    throw toJs(new NoSuchElementException);
  }
}

function checkCriticalElementIndex(index_0, size_0){
  if (index_0 < 0 || index_0 >= size_0) {
    throw toJs(new IndexOutOfBoundsException_0('Index: ' + index_0 + ', Size: ' + size_0));
  }
}

function checkCriticalNotNull(reference){
  if (reference == null) {
    throw toJs(new NullPointerException);
  }
  return reference;
}

function checkCriticalNotNull_0(reference, errorMessage){
  if (reference == null) {
    throw toJs(new NullPointerException_1(errorMessage));
  }
}

function checkCriticalPositionIndex(index_0, size_0){
  if (index_0 < 0 || index_0 > size_0) {
    throw toJs(new IndexOutOfBoundsException_0('Index: ' + index_0 + ', Size: ' + size_0));
  }
}

function checkCriticalPositionIndexes(start_0, end, size_0){
  if (start_0 < 0 || end > size_0) {
    throw toJs(new IndexOutOfBoundsException_0('fromIndex: ' + start_0 + ', toIndex: ' + end + ', size: ' + size_0));
  }
  if (start_0 > end) {
    throw toJs(new IllegalArgumentException_0('fromIndex: ' + start_0 + ' > toIndex: ' + end));
  }
}

function checkCriticalState(expression){
  if (!expression) {
    throw toJs(new IllegalStateException);
  }
}

function checkCriticalState_0(expression, errorMessage){
  if (!expression) {
    throw toJs(new IllegalStateException_0(errorMessage));
  }
}

function checkCriticalStringBounds(start_0, end, length_0){
  if (start_0 < 0 || end > length_0 || end < start_0) {
    throw toJs(new StringIndexOutOfBoundsException('fromIndex: ' + start_0 + ', toIndex: ' + end + ', length: ' + length_0));
  }
}

function checkCriticalStringElementIndex(index_0, size_0){
  if (index_0 < 0 || index_0 >= size_0) {
    throw toJs(new StringIndexOutOfBoundsException('Index: ' + index_0 + ', Size: ' + size_0));
  }
}

function checkCriticalType(expression){
  if (!expression) {
    throw toJs(new ClassCastException);
  }
}

function checkNotNull(reference){
  checkCriticalNotNull(reference);
  return reference;
}

function format_0(template, args){
  var builder, i, placeholderStart, templateStart;
  template = template == null?'null':template;
  builder = new StringBuilder_0;
  templateStart = 0;
  i = 0;
  while (i < args.length) {
    placeholderStart = template.indexOf('%s', templateStart);
    if (placeholderStart == -1) {
      break;
    }
    $append_4(builder, template.substr(templateStart, placeholderStart - templateStart));
    $append_3(builder, args[i++]);
    templateStart = placeholderStart + 2;
  }
  $append_4(builder, template.substr(templateStart));
  if (i < args.length) {
    builder.string += ' [';
    $append_3(builder, args[i++]);
    while (i < args.length) {
      builder.string += ', ';
      $append_3(builder, args[i++]);
    }
    builder.string += ']';
  }
  return builder.string;
}

defineClass(3634, 1, {});
function getHashCode_0(o){
  return o.$H || (o.$H = ++nextHashId);
}

var nextHashId = 0;
function $clinit_StringHashCache(){
  $clinit_StringHashCache = emptyMethod;
  back_0 = new Object_0;
  front = new Object_0;
}

function compute(str){
  var hashCode, i, n, nBatch;
  hashCode = 0;
  n = str.length;
  nBatch = n - 4;
  i = 0;
  while (i < nBatch) {
    hashCode = (checkCriticalStringElementIndex(i + 3, str.length) , str.charCodeAt(i + 3) + (checkCriticalStringElementIndex(i + 2, str.length) , 31 * (str.charCodeAt(i + 2) + (checkCriticalStringElementIndex(i + 1, str.length) , 31 * (str.charCodeAt(i + 1) + (checkCriticalStringElementIndex(i, str.length) , 31 * (str.charCodeAt(i) + 31 * hashCode)))))));
    hashCode = hashCode | 0;
    i += 4;
  }
  while (i < n) {
    hashCode = hashCode * 31 + $charAt(str, i++);
  }
  hashCode = hashCode | 0;
  return hashCode;
}

function getHashCode_1(str){
  $clinit_StringHashCache();
  var hashCode, key, result;
  key = ':' + str;
  result = front[key];
  if (result != null) {
    return round_int((checkCriticalNotNull(result) , result));
  }
  result = back_0[key];
  hashCode = result == null?compute(str):round_int((checkCriticalNotNull(result) , result));
  increment();
  front[key] = hashCode;
  return hashCode;
}

function increment(){
  if (count_0 == 256) {
    back_0 = front;
    front = new Object_0;
    count_0 = 0;
  }
  ++count_0;
}

var back_0, count_0 = 0, front;
var Ljava_lang_Object_2_classLit = createForClass('java.lang', 'Object', 1);
var Lcom_google_gwt_core_client_JavaScriptObject_2_classLit = createForClass('com.google.gwt.core.client', 'JavaScriptObject$', 0);
var Lcom_google_gwt_core_client_impl_StackTraceCreator$Collector_2_classLit = createForClass('com.google.gwt.core.client.impl', 'StackTraceCreator/Collector', 1235);
var Lcom_google_gwt_core_client_impl_StackTraceCreator$CollectorLegacy_2_classLit = createForClass('com.google.gwt.core.client.impl', 'StackTraceCreator/CollectorLegacy', 925);
var Lcom_google_gwt_core_client_impl_StackTraceCreator$CollectorModern_2_classLit = createForClass('com.google.gwt.core.client.impl', 'StackTraceCreator/CollectorModern', 1236);
var Lcom_google_gwt_core_client_impl_StackTraceCreator$CollectorModernNoSourceMap_2_classLit = createForClass('com.google.gwt.core.client.impl', 'StackTraceCreator/CollectorModernNoSourceMap', 926);
var Ljava_lang_Throwable_2_classLit = createForClass('java.lang', 'Throwable', 33);
var Ljava_lang_Exception_2_classLit = createForClass('java.lang', 'Exception', 51);
var Ljava_lang_RuntimeException_2_classLit = createForClass('java.lang', 'RuntimeException', 35);
var Ljava_lang_IndexOutOfBoundsException_2_classLit = createForClass('java.lang', 'IndexOutOfBoundsException', 146);
var Ljava_lang_ArrayIndexOutOfBoundsException_2_classLit = createForClass('java.lang', 'ArrayIndexOutOfBoundsException', 235);
var Ljava_lang_ArrayStoreException_2_classLit = createForClass('java.lang', 'ArrayStoreException', 528);
var Ljava_lang_Boolean_2_classLit = createForClass('java.lang', 'Boolean', 557);
var Ljava_lang_Class_2_classLit = createForClass('java.lang', 'Class', 452);
var Ljava_lang_ClassCastException_2_classLit = createForClass('java.lang', 'ClassCastException', 923);
var Ljava_lang_Number_2_classLit = createForClass('java.lang', 'Number', 265);
var Ljava_lang_Double_2_classLit = createForClass('java.lang', 'Double', 558);
var Ljava_lang_Enum_2_classLit = createForClass('java.lang', 'Enum', 52);
var Ljava_lang_IllegalArgumentException_2_classLit = createForClass('java.lang', 'IllegalArgumentException', 56);
var Ljava_lang_IllegalStateException_2_classLit = createForClass('java.lang', 'IllegalStateException', 10);
var Ljava_lang_Integer_2_classLit = createForClass('java.lang', 'Integer', 100);
var Ljava_lang_JsException_2_classLit = createForClass('java.lang', 'JsException', 293);
var Ljava_lang_NullPointerException_2_classLit = createForClass('java.lang', 'NullPointerException', 165);
var Ljava_lang_String_2_classLit = createForClass('java.lang', 'String', 2);
var Ljava_lang_StringIndexOutOfBoundsException_2_classLit = createForClass('java.lang', 'StringIndexOutOfBoundsException', 514);
var Ljava_lang_UnsupportedOperationException_2_classLit = createForClass('java.lang', 'UnsupportedOperationException', 106);
var Ljava_util_AbstractCollection_2_classLit = createForClass('java.util', 'AbstractCollection', 1228);
var Ljava_util_List_2_classLit = createForInterface('java.util', 'List');
var Ljava_util_AbstractList_2_classLit = createForClass('java.util', 'AbstractList', 1237);
var Ljava_util_AbstractList$IteratorImpl_2_classLit = createForClass('java.util', 'AbstractList/IteratorImpl', 411);
var Ljava_util_AbstractList$ListIteratorImpl_2_classLit = createForClass('java.util', 'AbstractList/ListIteratorImpl', 482);
var Ljava_util_AbstractList$SubList_2_classLit = createForClass('java.util', 'AbstractList/SubList', 483);
var Ljava_util_AbstractMap_2_classLit = createForClass('java.util', 'AbstractMap', 1227);
var Ljava_util_AbstractSet_2_classLit = createForClass('java.util', 'AbstractSet', $intern_25);
var Ljava_util_AbstractMap$1_2_classLit = createForClass('java.util', 'AbstractMap/1', 354);
var Ljava_util_AbstractMap$1$1_2_classLit = createForClass('java.util', 'AbstractMap/1/1', 475);
var Ljava_util_AbstractMap$2_2_classLit = createForClass('java.util', 'AbstractMap/2', 169);
var Ljava_util_AbstractMap$2$1_2_classLit = createForClass('java.util', 'AbstractMap/2/1', 901);
var Ljava_util_AbstractMap$AbstractEntry_2_classLit = createForClass('java.util', 'AbstractMap/AbstractEntry', 309);
var Ljava_util_AbstractMap$SimpleEntry_2_classLit = createForClass('java.util', 'AbstractMap/SimpleEntry', 248);
var Ljava_util_ArrayList_2_classLit = createForClass('java.util', 'ArrayList', 49);
var Ljava_util_ArrayList$1_2_classLit = createForClass('java.util', 'ArrayList/1', 225);
var Ljava_util_Collections$EmptyList_2_classLit = createForClass('java.util', 'Collections/EmptyList', 933);
var Ljava_util_Collections$EmptyListIterator_2_classLit = createForClass('java.util', 'Collections/EmptyListIterator', 934);
var Ljava_util_Collections$EmptyMap_2_classLit = createForClass('java.util', 'Collections/EmptyMap', 936);
var Ljava_util_Collections$EmptySet_2_classLit = createForClass('java.util', 'Collections/EmptySet', 935);
var Ljava_util_NoSuchElementException_2_classLit = createForClass('java.util', 'NoSuchElementException', 254);
var Ljava_util_Spliterators$BaseSpliterator_2_classLit = createForClass('java.util', 'Spliterators/BaseSpliterator', 387);
var Ljava_util_Spliterators$AbstractSpliterator_2_classLit = createForClass('java.util', 'Spliterators/AbstractSpliterator', 200);
var Ljava_util_Spliterators$BaseArraySpliterator_2_classLit = createForClass('java.util', 'Spliterators/BaseArraySpliterator', 455);
var Ljava_util_Spliterators$ArraySpliterator_2_classLit = createForClass('java.util', 'Spliterators/ArraySpliterator', 456);
var Ljava_util_function_Consumer$lambda$0$Type_2_classLit = createForClass('java.util.function', 'Consumer/lambda$0$Type', 45);
var Ljava_util_stream_Collector$Characteristics_2_classLit = createForEnum('java.util.stream', 'Collector/Characteristics', 16, values_6);
var Ljava_util_stream_CollectorImpl_2_classLit = createForClass('java.util.stream', 'CollectorImpl', 520);
var Ljava_util_stream_Collectors$20methodref$add$Type_2_classLit = createForClass('java.util.stream', 'Collectors/20methodref$add$Type', 22);
var Ljava_util_stream_Collectors$21methodref$ctor$Type_2_classLit = createForClass('java.util.stream', 'Collectors/21methodref$ctor$Type', 24);
var Ljava_util_stream_Collectors$lambda$42$Type_2_classLit = createForClass('java.util.stream', 'Collectors/lambda$42$Type', 23);
var Ljava_util_stream_TerminatableStream_2_classLit = createForClass('java.util.stream', 'TerminatableStream', 284);
var Ljava_util_stream_Stream_2_classLit = createForInterface('java.util.stream', 'Stream');
var Ljava_util_stream_StreamImpl_2_classLit = createForClass('java.util.stream', 'StreamImpl', 26);
var Ljava_util_stream_StreamImpl$0methodref$lambda$2$Type_2_classLit = createForClass('java.util.stream', 'StreamImpl/0methodref$lambda$2$Type', 547);
var Ljava_util_stream_StreamImpl$MapToObjSpliterator_2_classLit = createForClass('java.util.stream', 'StreamImpl/MapToObjSpliterator', 515);
var Ljava_util_stream_StreamImpl$MapToObjSpliterator$lambda$0$Type_2_classLit = createForClass('java.util.stream', 'StreamImpl/MapToObjSpliterator/lambda$0$Type', 1068);
var Ljava_util_stream_StreamImpl$ValueConsumer_2_classLit = createForClass('java.util.stream', 'StreamImpl/ValueConsumer', 426);
var Ljava_util_stream_StreamImpl$lambda$0$Type_2_classLit = createForClass('java.util.stream', 'StreamImpl/lambda$0$Type', 1072);
var Ljava_util_stream_StreamImpl$lambda$4$Type_2_classLit = createForClass('java.util.stream', 'StreamImpl/lambda$4$Type', 1073);
var Ljava_util_stream_StreamImpl$lambda$5$Type_2_classLit = createForClass('java.util.stream', 'StreamImpl/lambda$5$Type', 1074);
function $clinit_Base64Coder(){
  $clinit_Base64Coder = emptyMethod;
  regularMap = new Base64Coder$CharMap(43, 47);
  new Base64Coder$CharMap(45, 95);
}

function decode(in_0){
  $clinit_Base64Coder();
  return decode_0(in_0, in_0.length, regularMap.decodingMap);
}

function decode_0(in_0, iLen, inverseCharMap){
  var b0, b1, b2, b3, i0, i1, i2, i3, iEnd, ip, o0, o1, o2, oLen, op, out;
  if (iLen % 4 != 0) {
    throw toJs(new IllegalArgumentException_0('Length of Base64 encoded input string is not a multiple of 4.'));
  }
  while (iLen > 0 && in_0[iLen - 1] == 61) {
    --iLen;
  }
  oLen = iLen * 3 / 4 | 0;
  out = initUnidimensionalArray(B_classLit, $intern_28, 8, oLen, 15, 1);
  ip = 0;
  iEnd = iLen;
  op = 0;
  while (ip < iEnd) {
    i0 = in_0[ip++];
    i1 = in_0[ip++];
    i2 = ip < iEnd?in_0[ip++]:65;
    i3 = ip < iEnd?in_0[ip++]:65;
    if (i0 > 127 || i1 > 127 || i2 > 127 || i3 > 127) {
      throw toJs(new IllegalArgumentException_0('Illegal character in Base64 encoded data.'));
    }
    b0 = inverseCharMap[i0];
    b1 = inverseCharMap[i1];
    b2 = inverseCharMap[i2];
    b3 = inverseCharMap[i3];
    if (b0 < 0 || b1 < 0 || b2 < 0 || b3 < 0) {
      throw toJs(new IllegalArgumentException_0('Illegal character in Base64 encoded data.'));
    }
    o0 = b0 << 2 | b1 >>> 4;
    o1 = (b1 & 15) << 4 | b2 >>> 2;
    o2 = (b2 & 3) << 6 | b3;
    out[op++] = o0 << 24 >> 24;
    op < oLen && (out[op++] = o1 << 24 >> 24);
    op < oLen && (out[op++] = o2 << 24 >> 24);
  }
  return out;
}

function encode(in_0, iLen, charMap){
  var i0, i1, i2, iEnd, ip, o0, o1, o2, o3, oDataLen, oLen, op, out;
  oDataLen = (iLen * 4 + 2) / 3 | 0;
  oLen = ((iLen + 2) / 3 | 0) * 4;
  out = initUnidimensionalArray(C_classLit, $intern_18, 8, oLen, 15, 1);
  ip = 0;
  iEnd = iLen;
  op = 0;
  while (ip < iEnd) {
    i0 = in_0[ip++] & 255;
    i1 = ip < iEnd?in_0[ip++] & 255:0;
    i2 = ip < iEnd?in_0[ip++] & 255:0;
    o0 = i0 >>> 2;
    o1 = (i0 & 3) << 4 | i1 >>> 4;
    o2 = (i1 & 15) << 2 | i2 >>> 6;
    o3 = i2 & 63;
    out[op++] = charMap[o0];
    out[op++] = charMap[o1];
    out[op] = op < oDataLen?charMap[o2]:61;
    ++op;
    out[op] = op < oDataLen?charMap[o3]:61;
    ++op;
  }
  return out;
}

function encode_0(in_0, charMap){
  $clinit_Base64Coder();
  return encode(in_0, in_0.length, charMap);
}

var regularMap;
function Base64Coder$CharMap(char63, char64){
  var c, c0, c1, i;
  this.encodingMap = initUnidimensionalArray(C_classLit, $intern_18, 8, 64, 15, 1);
  this.decodingMap = initUnidimensionalArray(B_classLit, $intern_28, 8, 128, 15, 1);
  i = 0;
  for (c0 = 65; c0 <= 90; c0++) {
    this.encodingMap[i++] = c0;
  }
  for (c1 = 97; c1 <= 122; c1++) {
    this.encodingMap[i++] = c1;
  }
  for (c = 48; c <= 57; c++) {
    this.encodingMap[i++] = c;
  }
  this.encodingMap[i++] = char63;
  this.encodingMap[i++] = char64;
  for (i = 0; i < this.decodingMap.length; i++) {
    this.decodingMap[i] = -1;
  }
  for (i = 0; i < 64; i++) {
    this.decodingMap[this.encodingMap[i]] = i << 24 >> 24;
  }
}

defineClass(517, 1, {}, Base64Coder$CharMap);
var Lcom_badlogic_gdx_utils_Base64Coder$CharMap_2_classLit = createForClass('com.badlogic.gdx.utils', 'Base64Coder/CharMap', 517);
defineClass(1064, 293, $intern_7);
var Lcom_google_gwt_core_client_impl_JavaScriptExceptionBase_2_classLit = createForClass('com.google.gwt.core.client.impl', 'JavaScriptExceptionBase', 1064);
function $clinit_JavaScriptException(){
  $clinit_JavaScriptException = emptyMethod;
  NOT_SET = new Object_0;
}

function $ensureInit(this$static){
  var exception;
  if (this$static.message_0 == null) {
    exception = maskUndefined(this$static.e) === maskUndefined(NOT_SET)?null:this$static.e;
    this$static.name_0 = exception == null?'null':instanceOfJso(exception)?getExceptionName0(castToJso(exception)):instanceOfString(exception)?'String':$getName(getClass__Ljava_lang_Class___devirtual$(exception));
    this$static.description = this$static.description + ': ' + (instanceOfJso(exception)?getExceptionDescription0(castToJso(exception)):exception + '');
    this$static.message_0 = '(' + this$static.name_0 + ') ' + this$static.description;
  }
}

function JavaScriptException(e){
  $clinit_JavaScriptException();
  JsException.call(this, e);
  this.description = '';
  this.e = e;
  this.description = '';
}

function getExceptionDescription0(e){
  return e == null?null:e.message;
}

function getExceptionName0(e){
  return e == null?null:e.name;
}

defineClass(323, 1064, {323:1, 4:1, 51:1, 35:1, 33:1}, JavaScriptException);
_.getMessage = function getMessage_0(){
  $ensureInit(this);
  return this.message_0;
}
;
_.getThrown = function getThrown(){
  return maskUndefined(this.e) === maskUndefined(NOT_SET)?null:this.e;
}
;
var NOT_SET;
var Lcom_google_gwt_core_client_JavaScriptException_2_classLit = createForClass('com.google.gwt.core.client', 'JavaScriptException', 323);
function now_2(){
  if (Date.now) {
    return Date.now();
  }
  return (new Date).getTime();
}

defineClass(1210, 1, {});
var Lcom_google_gwt_core_client_Scheduler_2_classLit = createForClass('com.google.gwt.core.client', 'Scheduler', 1210);
function $clinit_Impl(){
  $clinit_Impl = emptyMethod;
  !!($clinit_StackTraceCreator() , collector_1);
}

function apply_0(jsFunction, thisObj, args){
  return jsFunction.apply(thisObj, args);
  var __0;
}

function enter(){
  var now_0;
  if (entryDepth != 0) {
    now_0 = now_2();
    if (now_0 - watchdogEntryDepthLastScheduled > 2000) {
      watchdogEntryDepthLastScheduled = now_0;
      watchdogEntryDepthTimerId = $wnd.setTimeout(watchdogEntryDepthRun, 10);
    }
  }
  if (entryDepth++ == 0) {
    $flushEntryCommands(($clinit_SchedulerImpl() , INSTANCE));
    return true;
  }
  return false;
}

function entry_7(jsFunction){
  $clinit_Impl();
  return function(){
    return entry0(jsFunction, this, arguments);
    var __0;
  }
  ;
}

function entry0(jsFunction, thisObj, args){
  var initialEntry;
  initialEntry = enter();
  try {
    return apply_0(jsFunction, thisObj, args);
  }
   finally {
    exit(initialEntry);
  }
}

function exit(initialEntry){
  initialEntry && $flushFinallyCommands(($clinit_SchedulerImpl() , INSTANCE));
  --entryDepth;
  if (initialEntry) {
    if (watchdogEntryDepthTimerId != -1) {
      watchdogEntryDepthCancel(watchdogEntryDepthTimerId);
      watchdogEntryDepthTimerId = -1;
    }
  }
}

function reportToBrowser(e){
  $clinit_Impl();
  $wnd.setTimeout(function(){
    throw e;
  }
  , 0);
}

function watchdogEntryDepthCancel(timerId){
  $wnd.clearTimeout(timerId);
}

function watchdogEntryDepthRun(){
  entryDepth != 0 && (entryDepth = 0);
  watchdogEntryDepthTimerId = -1;
}

var entryDepth = 0, watchdogEntryDepthLastScheduled = 0, watchdogEntryDepthTimerId = -1;
function $clinit_SchedulerImpl(){
  $clinit_SchedulerImpl = emptyMethod;
  INSTANCE = new SchedulerImpl;
}

function $flushEntryCommands(this$static){
  var oldQueue, rescheduled;
  if (this$static.entryCommands) {
    rescheduled = null;
    do {
      oldQueue = this$static.entryCommands;
      this$static.entryCommands = null;
      rescheduled = runScheduledTasks(oldQueue, rescheduled);
    }
     while (this$static.entryCommands);
    this$static.entryCommands = rescheduled;
  }
}

function $flushFinallyCommands(this$static){
  var oldQueue, rescheduled;
  if (this$static.finallyCommands) {
    rescheduled = null;
    do {
      oldQueue = this$static.finallyCommands;
      this$static.finallyCommands = null;
      rescheduled = runScheduledTasks(oldQueue, rescheduled);
    }
     while (this$static.finallyCommands);
    this$static.finallyCommands = rescheduled;
  }
}

function SchedulerImpl(){
}

function push_0(queue, task){
  !queue && (queue = []);
  queue[queue.length] = task;
  return queue;
}

function runScheduledTasks(tasks, rescheduled){
  var e, i, j, t;
  for (i = 0 , j = tasks.length; i < j; i++) {
    t = tasks[i];
    try {
      t[1]?t[0].$_nullMethod() && (rescheduled = push_0(rescheduled, t)):t[0].$_nullMethod();
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 33)) {
        e = $e0;
        $clinit_Impl();
        reportToBrowser(instanceOf(e, 323)?castTo(e, 323).getThrown():e);
      }
       else 
        throw toJs($e0);
    }
  }
  return rescheduled;
}

defineClass(1139, 1210, {}, SchedulerImpl);
var INSTANCE;
var Lcom_google_gwt_core_client_impl_SchedulerImpl_2_classLit = createForClass('com.google.gwt.core.client.impl', 'SchedulerImpl', 1139);
function create(value_0){
  var a0, a1, a2;
  a0 = value_0 & $intern_36;
  a1 = value_0 >> 22 & $intern_36;
  a2 = value_0 < 0?$intern_5:0;
  return create0(a0, a1, a2);
}

function create_0(a){
  return create0(a.l, a.m, a.h);
}

function create0(l, m, h){
  return {l:l, m:m, h:h};
}

function divMod(a, b, computeRemainder){
  var aIsCopy, aIsMinValue, aIsNegative, bpower, c, negative;
  if (b.l == 0 && b.m == 0 && b.h == 0) {
    throw toJs(new ArithmeticException_0);
  }
  if (a.l == 0 && a.m == 0 && a.h == 0) {
    computeRemainder && (remainder_0 = create0(0, 0, 0));
    return create0(0, 0, 0);
  }
  if (b.h == $intern_10 && b.m == 0 && b.l == 0) {
    return divModByMinValue(a, computeRemainder);
  }
  negative = false;
  if (b.h >> 19 != 0) {
    b = neg(b);
    negative = !negative;
  }
  bpower = powerOfTwo(b);
  aIsNegative = false;
  aIsMinValue = false;
  aIsCopy = false;
  if (a.h == $intern_10 && a.m == 0 && a.l == 0) {
    aIsMinValue = true;
    aIsNegative = true;
    if (bpower == -1) {
      a = create_0(($clinit_BigLongLib$Const() , MAX_VALUE));
      aIsCopy = true;
      negative = !negative;
    }
     else {
      c = shr(a, bpower);
      negative && negate(c);
      computeRemainder && (remainder_0 = create0(0, 0, 0));
      return c;
    }
  }
   else if (a.h >> 19 != 0) {
    aIsNegative = true;
    a = neg(a);
    aIsCopy = true;
    negative = !negative;
  }
  if (bpower != -1) {
    return divModByShift(a, bpower, negative, aIsNegative, computeRemainder);
  }
  if (compare_0(a, b) < 0) {
    computeRemainder && (aIsNegative?(remainder_0 = neg(a)):(remainder_0 = create0(a.l, a.m, a.h)));
    return create0(0, 0, 0);
  }
  return divModHelper(aIsCopy?a:create0(a.l, a.m, a.h), b, negative, aIsNegative, aIsMinValue, computeRemainder);
}

function divModByMinValue(a, computeRemainder){
  if (a.h == $intern_10 && a.m == 0 && a.l == 0) {
    computeRemainder && (remainder_0 = create0(0, 0, 0));
    return create_0(($clinit_BigLongLib$Const() , ONE));
  }
  computeRemainder && (remainder_0 = create0(a.l, a.m, a.h));
  return create0(0, 0, 0);
}

function divModByShift(a, bpower, negative, aIsNegative, computeRemainder){
  var c;
  c = shr(a, bpower);
  negative && negate(c);
  if (computeRemainder) {
    a = maskRight(a, bpower);
    aIsNegative?(remainder_0 = neg(a)):(remainder_0 = create0(a.l, a.m, a.h));
  }
  return c;
}

function divModHelper(a, b, negative, aIsNegative, aIsMinValue, computeRemainder){
  var bshift, gte, quotient, shift_0, a1, a2, a0;
  shift_0 = numberOfLeadingZeros(b) - numberOfLeadingZeros(a);
  bshift = shl(b, shift_0);
  quotient = create0(0, 0, 0);
  while (shift_0 >= 0) {
    gte = trialSubtract(a, bshift);
    if (gte) {
      shift_0 < 22?(quotient.l |= 1 << shift_0 , undefined):shift_0 < 44?(quotient.m |= 1 << shift_0 - 22 , undefined):(quotient.h |= 1 << shift_0 - 44 , undefined);
      if (a.l == 0 && a.m == 0 && a.h == 0) {
        break;
      }
    }
    a1 = bshift.m;
    a2 = bshift.h;
    a0 = bshift.l;
    bshift.h = a2 >>> 1;
    bshift.m = a1 >>> 1 | (a2 & 1) << 21;
    bshift.l = a0 >>> 1 | (a1 & 1) << 21;
    --shift_0;
  }
  negative && negate(quotient);
  if (computeRemainder) {
    if (aIsNegative) {
      remainder_0 = neg(a);
      aIsMinValue && (remainder_0 = sub_0(remainder_0, ($clinit_BigLongLib$Const() , ONE)));
    }
     else {
      remainder_0 = create0(a.l, a.m, a.h);
    }
  }
  return quotient;
}

function maskRight(a, bits){
  var b0, b1, b2;
  if (bits <= 22) {
    b0 = a.l & (1 << bits) - 1;
    b1 = b2 = 0;
  }
   else if (bits <= 44) {
    b0 = a.l;
    b1 = a.m & (1 << bits - 22) - 1;
    b2 = 0;
  }
   else {
    b0 = a.l;
    b1 = a.m;
    b2 = a.h & (1 << bits - 44) - 1;
  }
  return create0(b0, b1, b2);
}

function negate(a){
  var neg0, neg1, neg2;
  neg0 = ~a.l + 1 & $intern_36;
  neg1 = ~a.m + (neg0 == 0?1:0) & $intern_36;
  neg2 = ~a.h + (neg0 == 0 && neg1 == 0?1:0) & $intern_5;
  a.l = neg0;
  a.m = neg1;
  a.h = neg2;
}

function numberOfLeadingZeros(a){
  var b1, b2;
  b2 = numberOfLeadingZeros_0(a.h);
  if (b2 == 32) {
    b1 = numberOfLeadingZeros_0(a.m);
    return b1 == 32?numberOfLeadingZeros_0(a.l) + 32:b1 + 20 - 10;
  }
   else {
    return b2 - 12;
  }
}

function powerOfTwo(a){
  var h, l, m;
  l = a.l;
  if ((l & l - 1) != 0) {
    return -1;
  }
  m = a.m;
  if ((m & m - 1) != 0) {
    return -1;
  }
  h = a.h;
  if ((h & h - 1) != 0) {
    return -1;
  }
  if (h == 0 && m == 0 && l == 0) {
    return -1;
  }
  if (h == 0 && m == 0 && l != 0) {
    return numberOfTrailingZeros(l);
  }
  if (h == 0 && m != 0 && l == 0) {
    return numberOfTrailingZeros(m) + 22;
  }
  if (h != 0 && m == 0 && l == 0) {
    return numberOfTrailingZeros(h) + 44;
  }
  return -1;
}

function toDoubleHelper(a){
  return a.l + a.m * $intern_4 + a.h * $intern_3;
}

function trialSubtract(a, b){
  var sum0, sum1, sum2;
  sum2 = a.h - b.h;
  if (sum2 < 0) {
    return false;
  }
  sum0 = a.l - b.l;
  sum1 = a.m - b.m + (sum0 >> 22);
  sum2 += sum1 >> 22;
  if (sum2 < 0) {
    return false;
  }
  a.l = sum0 & $intern_36;
  a.m = sum1 & $intern_36;
  a.h = sum2 & $intern_5;
  return true;
}

var remainder_0;
function add_0(a, b){
  var sum0, sum1, sum2;
  sum0 = a.l + b.l;
  sum1 = a.m + b.m + (sum0 >> 22);
  sum2 = a.h + b.h + (sum1 >> 22);
  return create0(sum0 & $intern_36, sum1 & $intern_36, sum2 & $intern_5);
}

function and(a, b){
  return create0(a.l & b.l, a.m & b.m, a.h & b.h);
}

function compare_0(a, b){
  var a0, a1, a2, b0, b1, b2, signA, signB;
  signA = a.h >> 19;
  signB = b.h >> 19;
  if (signA != signB) {
    return signB - signA;
  }
  a2 = a.h;
  b2 = b.h;
  if (a2 != b2) {
    return a2 - b2;
  }
  a1 = a.m;
  b1 = b.m;
  if (a1 != b1) {
    return a1 - b1;
  }
  a0 = a.l;
  b0 = b.l;
  return a0 - b0;
}

function fromDouble(value_0){
  var a0, a1, a2, negative, result;
  if (isNaN(value_0)) {
    return $clinit_BigLongLib$Const() , ZERO;
  }
  if (value_0 < -9223372036854775808) {
    return $clinit_BigLongLib$Const() , MIN_VALUE;
  }
  if (value_0 >= 9223372036854775807) {
    return $clinit_BigLongLib$Const() , MAX_VALUE;
  }
  negative = false;
  if (value_0 < 0) {
    negative = true;
    value_0 = -value_0;
  }
  a2 = 0;
  if (value_0 >= $intern_3) {
    a2 = round_int(value_0 / $intern_3);
    value_0 -= a2 * $intern_3;
  }
  a1 = 0;
  if (value_0 >= $intern_4) {
    a1 = round_int(value_0 / $intern_4);
    value_0 -= a1 * $intern_4;
  }
  a0 = round_int(value_0);
  result = create0(a0, a1, a2);
  negative && negate(result);
  return result;
}

function mul(a, b){
  var a0, a1, a2, a3, a4, b0, b1, b2, b3, b4, c0, c00, c01, c1, c10, c11, c12, c13, c2, c22, c23, c24, p0, p1, p2, p3, p4;
  a0 = a.l & 8191;
  a1 = a.l >> 13 | (a.m & 15) << 9;
  a2 = a.m >> 4 & 8191;
  a3 = a.m >> 17 | (a.h & 255) << 5;
  a4 = (a.h & 1048320) >> 8;
  b0 = b.l & 8191;
  b1 = b.l >> 13 | (b.m & 15) << 9;
  b2 = b.m >> 4 & 8191;
  b3 = b.m >> 17 | (b.h & 255) << 5;
  b4 = (b.h & 1048320) >> 8;
  p0 = a0 * b0;
  p1 = a1 * b0;
  p2 = a2 * b0;
  p3 = a3 * b0;
  p4 = a4 * b0;
  if (b1 != 0) {
    p1 += a0 * b1;
    p2 += a1 * b1;
    p3 += a2 * b1;
    p4 += a3 * b1;
  }
  if (b2 != 0) {
    p2 += a0 * b2;
    p3 += a1 * b2;
    p4 += a2 * b2;
  }
  if (b3 != 0) {
    p3 += a0 * b3;
    p4 += a1 * b3;
  }
  b4 != 0 && (p4 += a0 * b4);
  c00 = p0 & $intern_36;
  c01 = (p1 & 511) << 13;
  c0 = c00 + c01;
  c10 = p0 >> 22;
  c11 = p1 >> 9;
  c12 = (p2 & 262143) << 4;
  c13 = (p3 & 31) << 17;
  c1 = c10 + c11 + c12 + c13;
  c22 = p2 >> 18;
  c23 = p3 >> 5;
  c24 = (p4 & 4095) << 8;
  c2 = c22 + c23 + c24;
  c1 += c0 >> 22;
  c0 &= $intern_36;
  c2 += c1 >> 22;
  c1 &= $intern_36;
  c2 &= $intern_5;
  return create0(c0, c1, c2);
}

function neg(a){
  var neg0, neg1, neg2;
  neg0 = ~a.l + 1 & $intern_36;
  neg1 = ~a.m + (neg0 == 0?1:0) & $intern_36;
  neg2 = ~a.h + (neg0 == 0 && neg1 == 0?1:0) & $intern_5;
  return create0(neg0, neg1, neg2);
}

function or(a, b){
  return create0(a.l | b.l, a.m | b.m, a.h | b.h);
}

function shl(a, n){
  var res0, res1, res2;
  n &= 63;
  if (n < 22) {
    res0 = a.l << n;
    res1 = a.m << n | a.l >> 22 - n;
    res2 = a.h << n | a.m >> 22 - n;
  }
   else if (n < 44) {
    res0 = 0;
    res1 = a.l << n - 22;
    res2 = a.m << n - 22 | a.l >> 44 - n;
  }
   else {
    res0 = 0;
    res1 = 0;
    res2 = a.l << n - 44;
  }
  return create0(res0 & $intern_36, res1 & $intern_36, res2 & $intern_5);
}

function shr(a, n){
  var a2, negative, res0, res1, res2;
  n &= 63;
  a2 = a.h;
  negative = (a2 & $intern_10) != 0;
  negative && (a2 |= -1048576);
  if (n < 22) {
    res2 = a2 >> n;
    res1 = a.m >> n | a2 << 22 - n;
    res0 = a.l >> n | a.m << 22 - n;
  }
   else if (n < 44) {
    res2 = negative?$intern_5:0;
    res1 = a2 >> n - 22;
    res0 = a.m >> n - 22 | a2 << 44 - n;
  }
   else {
    res2 = negative?$intern_5:0;
    res1 = negative?$intern_36:0;
    res0 = a2 >> n - 44;
  }
  return create0(res0 & $intern_36, res1 & $intern_36, res2 & $intern_5);
}

function shru(a, n){
  var a2, res0, res1, res2;
  n &= 63;
  a2 = a.h & $intern_5;
  if (n < 22) {
    res2 = a2 >>> n;
    res1 = a.m >> n | a2 << 22 - n;
    res0 = a.l >> n | a.m << 22 - n;
  }
   else if (n < 44) {
    res2 = 0;
    res1 = a2 >>> n - 22;
    res0 = a.m >> n - 22 | a.h << 44 - n;
  }
   else {
    res2 = 0;
    res1 = 0;
    res0 = a2 >>> n - 44;
  }
  return create0(res0 & $intern_36, res1 & $intern_36, res2 & $intern_5);
}

function sub_0(a, b){
  var sum0, sum1, sum2;
  sum0 = a.l - b.l;
  sum1 = a.m - b.m + (sum0 >> 22);
  sum2 = a.h - b.h + (sum1 >> 22);
  return create0(sum0 & $intern_36, sum1 & $intern_36, sum2 & $intern_5);
}

function toDouble(a){
  if (compare_0(a, ($clinit_BigLongLib$Const() , ZERO)) < 0) {
    return -toDoubleHelper(neg(a));
  }
  return a.l + a.m * $intern_4 + a.h * $intern_3;
}

function toInt(a){
  return a.l | a.m << 22;
}

function toString_3(a){
  var digits, rem, res, tenPowerLong, zeroesNeeded;
  if (a.l == 0 && a.m == 0 && a.h == 0) {
    return '0';
  }
  if (a.h == $intern_10 && a.m == 0 && a.l == 0) {
    return '-9223372036854775808';
  }
  if (a.h >> 19 != 0) {
    return '-' + toString_3(neg(a));
  }
  rem = a;
  res = '';
  while (!(rem.l == 0 && rem.m == 0 && rem.h == 0)) {
    tenPowerLong = create($intern_37);
    rem = divMod(rem, tenPowerLong, true);
    digits = '' + toInt(remainder_0);
    if (!(rem.l == 0 && rem.m == 0 && rem.h == 0)) {
      zeroesNeeded = 9 - digits.length;
      for (; zeroesNeeded > 0; zeroesNeeded--) {
        digits = '0' + digits;
      }
    }
    res = digits + res;
  }
  return res;
}

function xor(a, b){
  return create0(a.l ^ b.l, a.m ^ b.m, a.h ^ b.h);
}

function $clinit_BigLongLib$Const(){
  $clinit_BigLongLib$Const = emptyMethod;
  MAX_VALUE = create0($intern_36, $intern_36, 524287);
  MIN_VALUE = create0(0, 0, $intern_10);
  ONE = create(1);
  create(2);
  ZERO = create(0);
}

var MAX_VALUE, MIN_VALUE, ONE, ZERO;
function init(){
  $wnd.setTimeout($entry(assertCompileTimeUserAgent));
  setOut(new ConsolePrintStream);
  setErr(new ConsolePrintStream);
}

function assertCompileTimeUserAgent(){
  var runtimeValue;
  runtimeValue = $getRuntimeValue();
  if (!$equals_0('safari', runtimeValue)) {
    throw toJs(new UserAgentAsserter$UserAgentAssertionError(runtimeValue));
  }
}

function Error_0(){
  Throwable.call(this);
}

function Error_1(message){
  Throwable_0.call(this, message);
}

function Error_2(message, cause){
  Throwable_1.call(this, message, cause);
}

defineClass(142, 33, $intern_38, Error_1);
var Ljava_lang_Error_2_classLit = createForClass('java.lang', 'Error', 142);
defineClass(141, 142, $intern_38);
var Ljava_lang_AssertionError_2_classLit = createForClass('java.lang', 'AssertionError', 141);
function UserAgentAsserter$UserAgentAssertionError(runtimeValue){
  Error_2.call(this, 'Possible problem with your *.gwt.xml module file.\nThe compile time user.agent value (safari) does not match the runtime user.agent value (' + runtimeValue + ').\n' + 'Expect more errors.' == null?'null':toString_5('Possible problem with your *.gwt.xml module file.\nThe compile time user.agent value (safari) does not match the runtime user.agent value (' + runtimeValue + ').\n' + 'Expect more errors.'), instanceOf('Possible problem with your *.gwt.xml module file.\nThe compile time user.agent value (safari) does not match the runtime user.agent value (' + runtimeValue + ').\n' + 'Expect more errors.', 33)?castTo('Possible problem with your *.gwt.xml module file.\nThe compile time user.agent value (safari) does not match the runtime user.agent value (' + runtimeValue + ').\n' + 'Expect more errors.', 33):null);
}

defineClass(546, 141, $intern_38, UserAgentAsserter$UserAgentAssertionError);
var Lcom_google_gwt_useragent_client_UserAgentAsserter$UserAgentAssertionError_2_classLit = createForClass('com.google.gwt.useragent.client', 'UserAgentAsserter/UserAgentAssertionError', 546);
function $getRuntimeValue(){
  var ua = navigator.userAgent.toLowerCase();
  var docMode = $doc.documentMode;
  if (function(){
    return ua.indexOf('webkit') != -1;
  }
  ())
    return 'safari';
  if (function(){
    return ua.indexOf('msie') != -1 && docMode >= 10 && docMode < 11;
  }
  ())
    return 'ie10';
  if (function(){
    return ua.indexOf('msie') != -1 && docMode >= 9 && docMode < 11;
  }
  ())
    return 'ie9';
  if (function(){
    return ua.indexOf('msie') != -1 && docMode >= 8 && docMode < 11;
  }
  ())
    return 'ie8';
  if (function(){
    return ua.indexOf('gecko') != -1 || docMode >= 11;
  }
  ())
    return 'gecko1_8';
  return 'unknown';
}

defineClass(1224, 1, $intern_39);
_.read_0 = function read_0(buffer, byteOffset, byteCount){
  var c, e, i;
  checkCriticalNotNull(buffer);
  checkOffsetAndCount(buffer.length, byteOffset, byteCount);
  for (i = 0; i < byteCount; ++i) {
    try {
      if ((c = this.read()) == -1) {
        return i == 0?-1:i;
      }
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 62)) {
        e = $e0;
        if (i != 0) {
          return i;
        }
        throw toJs(e);
      }
       else 
        throw toJs($e0);
    }
    buffer[byteOffset + i] = c << 24 >> 24;
  }
  return byteCount;
}
;
var Ljava_io_InputStream_2_classLit = createForClass('java.io', 'InputStream', 1224);
function $read(this$static){
  return this$static.pos < this$static.count?this$static.buf[this$static.pos++] & 255:-1;
}

function $read_0(this$static, b, off, len){
  var avail;
  if (b == null) {
    throw toJs(new NullPointerException);
  }
   else if (off < 0 || len < 0 || len > b.length - off) {
    throw toJs(new IndexOutOfBoundsException);
  }
  if (this$static.pos >= this$static.count) {
    return -1;
  }
  avail = this$static.count - this$static.pos;
  len > avail && (len = avail);
  if (len <= 0) {
    return 0;
  }
  arraycopy(this$static.buf, this$static.pos, b, off, len);
  this$static.pos += len;
  return len;
}

function $skip(this$static, n){
  var k;
  k = this$static.count - this$static.pos;
  compare_1(n, k) < 0 && (k = compare_1(n, 0) < 0?0:n);
  this$static.pos = toInt_0(add_1(this$static.pos, k));
  return k;
}

function ByteArrayInputStream(buf){
  this.buf = buf;
  this.pos = 0;
  this.count = buf.length;
}

defineClass(59, 1224, $intern_39, ByteArrayInputStream);
_.read = function read_1(){
  return $read(this);
}
;
_.read_0 = function read_2(b, off, len){
  return $read_0(this, b, off, len);
}
;
_.count = 0;
_.pos = 0;
var Ljava_io_ByteArrayInputStream_2_classLit = createForClass('java.io', 'ByteArrayInputStream', 59);
function $write(this$static, buffer){
  checkCriticalNotNull(buffer);
  this$static.write_2(buffer, 0, buffer.length);
}

function $write_0(this$static, buffer, offset, count){
  var i;
  checkCriticalNotNull(buffer);
  checkOffsetAndCount(buffer.length, offset, count);
  for (i = offset; i < offset + count; i++) {
    this$static.write_0(buffer[i]);
  }
}

defineClass(236, 1, $intern_40);
_.write_1 = function write_0(buffer){
  $write(this, buffer);
}
;
_.write_2 = function write_1(buffer, offset, count){
  $write_0(this, buffer, offset, count);
}
;
var Ljava_io_OutputStream_2_classLit = createForClass('java.io', 'OutputStream', 236);
function $grow(this$static, required){
  var current, newBuf, newSize;
  current = this$static.buf.length;
  newSize = current << 1;
  newSize - required < 0 && (newSize = required);
  newSize - $intern_41 > 0 && (newSize = hugeCapacity(required));
  newBuf = initUnidimensionalArray(B_classLit, $intern_28, 8, newSize, 15, 1);
  arraycopy(this$static.buf, 0, newBuf, 0, this$static.count);
  this$static.buf = newBuf;
}

function $toByteArray(this$static){
  var result;
  result = initUnidimensionalArray(B_classLit, $intern_28, 8, this$static.count, 15, 1);
  arraycopy(this$static.buf, 0, result, 0, this$static.count);
  return result;
}

function $write_1(this$static, b){
  this$static.buf.length == this$static.count && $grow(this$static, this$static.count + 1);
  this$static.buf[this$static.count++] = b << 24 >> 24;
}

function $write_2(this$static, b, off, len){
  if (off < 0 || off > b.length || len < 0 || off + len - b.length > 0) {
    throw toJs(new IndexOutOfBoundsException);
  }
  this$static.count + len > this$static.buf.length && $grow(this$static, this$static.count + len);
  arraycopy(b, off, this$static.buf, this$static.count, len);
  this$static.count += len;
}

function ByteArrayOutputStream(){
  this.buf = initUnidimensionalArray(B_classLit, $intern_28, 8, 16, 15, 1);
}

function hugeCapacity(size_0){
  if (size_0 < 0) {
    throw toJs(new OutOfMemoryError);
  }
   else {
    return size_0 > $intern_41?$intern_1:$intern_41;
  }
}

defineClass(101, 236, {101:1, 183:1, 297:1, 236:1, 118:1}, ByteArrayOutputStream);
_.toString_0 = function toString_6(){
  return $create_0(this.buf, 0, this.count, ($clinit_EmulatedCharset() , UTF_8_0));
}
;
_.write_0 = function write_2(b){
  $write_1(this, b);
}
;
_.write_2 = function write_3(b, off, len){
  $write_2(this, b, off, len);
}
;
_.count = 0;
var Ljava_io_ByteArrayOutputStream_2_classLit = createForClass('java.io', 'ByteArrayOutputStream', 101);
function $readByte(this$static){
  var i;
  i = $read(this$static.is);
  if (i == -1) {
    throw toJs(new EOFException);
  }
  return i << 24 >> 24;
}

function $readFully(this$static, b, off, len){
  var count;
  while (len > 0) {
    count = $read_0(this$static.is, b, off, len);
    if (count <= 0) {
      throw toJs(new EOFException);
    }
    off += count;
    len -= count;
  }
}

function $readInt(this$static){
  var a, b, c, d;
  a = $read(this$static.is);
  b = $read(this$static.is);
  c = $read(this$static.is);
  d = $readUnsignedByte(this$static);
  return a << 24 | b << 16 | c << 8 | d;
}

function $readLong(this$static){
  var a, b;
  a = $readInt(this$static);
  b = $readInt(this$static) & -1;
  return or_0(shl_0(a, 32), b);
}

function $readUnsignedByte(this$static){
  var i;
  i = $read(this$static.is);
  if (i == -1) {
    throw toJs(new EOFException);
  }
  return i;
}

function DataInputStream(is){
  this.is = is;
}

defineClass(173, 1224, $intern_39, DataInputStream);
_.read = function read_3(){
  return $read(this.is);
}
;
var Ljava_io_DataInputStream_2_classLit = createForClass('java.io', 'DataInputStream', 173);
function $write_3(this$static, buffer){
  checkCriticalNotNull(buffer);
  $write_0(this$static, buffer, 0, buffer.length);
}

function $writeInt(this$static, v){
  $write_1(this$static.os, v >> 24);
  $write_1(this$static.os, v >> 16);
  $write_1(this$static.os, v >> 8);
  $write_1(this$static.os, v);
}

function DataOutputStream(os){
  this.os = os;
}

defineClass(212, 236, $intern_40, DataOutputStream);
_.write_1 = function write_5(buffer){
  $write_3(this, buffer);
}
;
_.write_2 = function write_6(buffer, offset, count){
  $write_0(this, buffer, offset, count);
}
;
_.write_0 = function write_4(b){
  $write_1(this.os, b);
}
;
var Ljava_io_DataOutputStream_2_classLit = createForClass('java.io', 'DataOutputStream', 212);
function IOException(message){
  Exception_0.call(this, message);
}

defineClass(62, 51, $intern_42, IOException);
var Ljava_io_IOException_2_classLit = createForClass('java.io', 'IOException', 62);
function EOFException(){
  Exception.call(this);
}

defineClass(224, 62, $intern_42, EOFException);
var Ljava_io_EOFException_2_classLit = createForClass('java.io', 'EOFException', 224);
defineClass(1094, 1224, $intern_39);
_.read = function read_4(){
  return this.in_0.read();
}
;
_.read_0 = function read_5(buffer, byteOffset, byteCount){
  return this.in_0.read_0(buffer, byteOffset, byteCount);
}
;
var Ljava_io_FilterInputStream_2_classLit = createForClass('java.io', 'FilterInputStream', 1094);
defineClass(457, 236, $intern_40);
_.write_0 = function write_7(oneByte){
  $write_1(this.out, oneByte);
}
;
_.write_2 = function write_8(buffer, offset, length_0){
  var i;
  checkCriticalNotNull(buffer);
  checkOffsetAndCount(buffer.length, offset, length_0);
  for (i = 0; i < length_0; i++) {
    this.write_0(buffer[offset + i]);
  }
}
;
var Ljava_io_FilterOutputStream_2_classLit = createForClass('java.io', 'FilterOutputStream', 457);
function checkOffsetAndCount(length_0, offset, count){
  if (offset < 0 || count < 0 || offset + count > length_0) {
    throw toJs(new IndexOutOfBoundsException);
  }
}

function PrintStream(){
  this.out = null;
}

defineClass(390, 457, $intern_40, PrintStream);
_.println = function println(){
}
;
_.println_0 = function println_0(s){
}
;
var Ljava_io_PrintStream_2_classLit = createForClass('java.io', 'PrintStream', 390);
function $read_1(this$static){
  if (this$static.pos < this$static.buf.length)
    return this$static.buf[this$static.pos++] & 255;
  return this$static.in_0.read();
}

function $read_2(this$static, b, off, len){
  var numBytes;
  numBytes = $wnd.Math.min(this$static.buf.length - this$static.pos, len);
  if (numBytes > 0) {
    arraycopy(this$static.buf, this$static.pos, b, off, numBytes);
    this$static.pos += numBytes;
    len -= numBytes;
    off += numBytes;
  }
  if (len > 0) {
    len = this$static.in_0.read_0(b, off, len);
    if (len == -1)
      return numBytes > 0?numBytes:-1;
    numBytes += len;
  }
  return numBytes;
}

function $unread(this$static, b){
  if (this$static.pos <= 0)
    throw toJs(new IOException('Insufficient space in pushback buffer'));
  this$static.buf[--this$static.pos] = b << 24 >> 24;
}

function PushbackInputStream(in_0){
  this.in_0 = in_0;
  this.buf = initUnidimensionalArray(B_classLit, $intern_28, 8, 1, 15, 1);
  this.pos = this.buf.length;
}

defineClass(522, 1094, $intern_39, PushbackInputStream);
_.read = function read_6(){
  return $read_1(this);
}
;
_.read_0 = function read_8(b, off, len){
  return $read_2(this, b, off, len);
}
;
_.pos = 0;
var Ljava_io_PushbackInputStream_2_classLit = createForClass('java.io', 'PushbackInputStream', 522);
function UnsupportedEncodingException(s){
  IOException.call(this, s);
}

defineClass(136, 62, {62:1, 4:1, 136:1, 51:1, 33:1}, UnsupportedEncodingException);
var Ljava_io_UnsupportedEncodingException_2_classLit = createForClass('java.io', 'UnsupportedEncodingException', 136);
function $replace0(this$static, start_0, end, toInsert){
  this$static.string = $substring_0(this$static.string, 0, start_0) + ('' + toInsert) + $substring(this$static.string, end);
}

function $setLength(this$static){
  var oldLength;
  oldLength = this$static.string.length;
  0 < oldLength?(this$static.string = this$static.string.substr(0, 0)):0 > oldLength && (this$static.string += valueOf_4(initUnidimensionalArray(C_classLit, $intern_18, 8, -oldLength, 15, 1)));
}

function AbstractStringBuilder(string){
  this.string = string;
}

defineClass(264, 1, {264:1, 294:1});
_.toString_0 = function toString_7(){
  return this.string;
}
;
var Ljava_lang_AbstractStringBuilder_2_classLit = createForClass('java.lang', 'AbstractStringBuilder', 264);
function ArithmeticException(){
  RuntimeException.call(this);
}

function ArithmeticException_0(){
  RuntimeException_0.call(this, 'divide by zero');
}

defineClass(431, 35, $intern_7, ArithmeticException, ArithmeticException_0);
var Ljava_lang_ArithmeticException_2_classLit = createForClass('java.lang', 'ArithmeticException', 431);
function $compareTo_0(this$static, c){
  return this$static.value_0 - c.value_0;
}

function Character(value_0){
  this.value_0 = value_0;
}

function codePointAt(cs, index_0, limit){
  var hiSurrogate, loSurrogate;
  hiSurrogate = $charAt(cs, index_0++);
  if (hiSurrogate >= 55296 && hiSurrogate <= 56319 && index_0 < limit && isLowSurrogate(loSurrogate = (checkCriticalStringElementIndex(index_0, cs.length) , cs.charCodeAt(index_0)))) {
    return $intern_19 + ((hiSurrogate & $intern_12) << 10) + (loSurrogate & $intern_12);
  }
  return hiSurrogate;
}

function digit_0(c, radix){
  if (radix < 2 || radix > 36) {
    return -1;
  }
  if (c >= 48 && c < 48 + $wnd.Math.min(radix, 10)) {
    return c - 48;
  }
  if (c >= 97 && c < radix + 97 - 10) {
    return c - 97 + 10;
  }
  if (c >= 65 && c < radix + 65 - 10) {
    return c - 65 + 10;
  }
  return -1;
}

function forDigit(digit){
  var overBaseTen;
  overBaseTen = digit - 10;
  return (overBaseTen < 0?48 + digit:97 + overBaseTen) & $intern_20;
}

function forDigit_0(digit){
  var overBaseTen;
  if (digit < 0 || digit >= 36) {
    return 0;
  }
  return overBaseTen = digit - 10 , (overBaseTen < 0?48 + digit:97 + overBaseTen) & $intern_20;
}

function isDigit(c){
  digitRegex == null && (digitRegex = new RegExp('\\d'));
  return digitRegex.test(String.fromCharCode(c));
}

function isLowSurrogate(ch_0){
  return ch_0 >= 56320 && ch_0 <= 57343;
}

function isWhitespace(ch_0){
  whitespaceRegex == null && (whitespaceRegex = new RegExp('[\\u1680\\u180E\\u2000-\\u2006\\u2008-\\u200A\\u2028\\u2029\\u205F\\u3000\\uFEFF]|[\\t-\\r ]|[\\x1C-\\x1F]'));
  return whitespaceRegex.test(ch_0);
}

function toChars(codePoint, dst, dstIndex){
  checkCriticalArgument(codePoint >= 0 && codePoint <= 1114111);
  if (codePoint >= $intern_19) {
    dst[dstIndex++] = 55296 + (codePoint - $intern_19 >> 10 & $intern_12) & $intern_20;
    dst[dstIndex] = 56320 + (codePoint - $intern_19 & $intern_12) & $intern_20;
    return 2;
  }
   else {
    dst[dstIndex] = codePoint & $intern_20;
    return 1;
  }
}

function valueOf(c){
  var result;
  if (c < 128) {
    result = ($clinit_Character$BoxedValues() , boxedValues)[c];
    !result && (result = boxedValues[c] = new Character(c));
    return result;
  }
  return new Character(c);
}

defineClass(237, 1, {4:1, 237:1, 57:1}, Character);
_.compareTo_0 = function compareTo(c){
  return $compareTo_0(this, castTo(c, 237));
}
;
_.equals_0 = function equals_0(o){
  return instanceOf(o, 237) && castTo(o, 237).value_0 == this.value_0;
}
;
_.hashCode_1 = function hashCode_1(){
  return this.value_0;
}
;
_.toString_0 = function toString_8(){
  return String.fromCharCode(this.value_0);
}
;
_.value_0 = 0;
var digitRegex, whitespaceRegex;
var Ljava_lang_Character_2_classLit = createForClass('java.lang', 'Character', 237);
function $clinit_Character$BoxedValues(){
  $clinit_Character$BoxedValues = emptyMethod;
  boxedValues = initUnidimensionalArray(Ljava_lang_Character_2_classLit, $intern_0, 237, 128, 0, 1);
}

var boxedValues;
function $clinit_Double$PowersTable(){
  $clinit_Double$PowersTable = emptyMethod;
  powers = stampJavaTypeInfo(getClassLiteralForArray(D_classLit, 1), $intern_18, 8, 15, [1.3407807929942597E154, 1.157920892373162E77, 3.402823669209385E38, 1.8446744073709552E19, $intern_43, $intern_19, 256, 16, 4, 2]);
  invPowers = stampJavaTypeInfo(getClassLiteralForArray(D_classLit, 1), $intern_18, 8, 15, [7.458340731200207E-155, 8.636168555094445E-78, 2.938735877055719E-39, 5.421010862427522E-20, 2.3283064365386963E-10, $intern_44, 0.00390625, 0.0625, 0.25, 0.5]);
}

var invPowers, powers;
function floatToIntBits(value_0){
  var bits, exp_0, l, mantissa, negative;
  if (isNaN(value_0)) {
    return 2143289344;
  }
  if (value_0 == 0) {
    return 1 / value_0 == -Infinity?$intern_8:0;
  }
  negative = false;
  if (value_0 < 0) {
    negative = true;
    value_0 = -value_0;
  }
  if (!isNaN(value_0) && !isFinite(value_0)) {
    return negative?-8388608:2139095040;
  }
  l = doubleToLongBits(value_0);
  exp_0 = toInt_0(sub_1(and_0(shr_0(l, 52), 2047), $intern_12));
  mantissa = toInt_0(shr_0(and_0(l, {l:$intern_36, m:$intern_36, h:255}), 29));
  if (exp_0 <= -127) {
    mantissa = (8388608 | mantissa) >> -127 - exp_0 + 1;
    exp_0 = -127;
  }
  bits = negative?$intern_13:0;
  bits = or_0(bits, exp_0 + 127 << 23);
  bits = or_0(bits, mantissa);
  return toInt_0(bits);
}

function $clinit_Integer$BoxedValues(){
  $clinit_Integer$BoxedValues = emptyMethod;
  boxedValues_0 = initUnidimensionalArray(Ljava_lang_Integer_2_classLit, $intern_0, 100, 256, 0, 1);
}

var boxedValues_0;
function InternalError_0(){
  Error_0.call(this);
}

function InternalError_1(){
  Error_1.call(this, "Can't deflate all input?");
}

defineClass(433, 142, $intern_38, InternalError_0, InternalError_1);
var Ljava_lang_InternalError_2_classLit = createForClass('java.lang', 'InternalError', 433);
function $compareTo_4(this$static, b){
  return compare_5(this$static.value_0, b.value_0);
}

function Long(value_0){
  this.value_0 = value_0;
}

function compare_5(x_0, y_0){
  return compare_1(x_0, y_0) < 0?-1:compare_1(x_0, y_0) > 0?1:0;
}

function toPowerOfTwoUnsignedString(value_0){
  var buf, pos;
  if (compare_1($intern_8, value_0) <= 0 && compare_1(value_0, $intern_1) <= 0) {
    return toString_12(toInt_0(value_0), 16);
  }
  buf = initUnidimensionalArray(C_classLit, $intern_18, 8, 17, 15, 1);
  pos = 17;
  do {
    buf[--pos] = forDigit(toInt_0(value_0) & 15);
    value_0 = shru_0(value_0, 4);
  }
   while (compare_1(value_0, 0) != 0);
  return valueOf_5(buf, pos, 17 - pos);
}

function toString_14(value_0){
  var buf, cursor, intValue, negative, q;
  intValue = toInt_0(value_0);
  if (compare_1(intValue, value_0) == 0) {
    return toString_12(intValue, 36);
  }
  negative = compare_1(value_0, 0) < 0;
  negative || (value_0 = neg_0(value_0));
  buf = initUnidimensionalArray(C_classLit, $intern_18, 8, 23, 15, 1);
  cursor = 23;
  do {
    q = div(value_0, 36);
    buf[--cursor] = forDigit(toInt_0(sub_1(mul_0(36, q), value_0)));
    value_0 = q;
  }
   while (compare_1(value_0, 0) != 0);
  negative && (buf[--cursor] = 45);
  return valueOf_5(buf, cursor, 23 - cursor);
}

function valueOf_2(i){
  var rebase, result;
  if (compare_1(i, -129) > 0 && compare_1(i, 128) < 0) {
    rebase = toInt_0(i) + 128;
    result = ($clinit_Long$BoxedValues() , boxedValues_1)[rebase];
    !result && (result = boxedValues_1[rebase] = new Long(i));
    return result;
  }
  return new Long(i);
}

defineClass(69, 265, {4:1, 57:1, 69:1, 265:1}, Long);
_.compareTo_0 = function compareTo_3(b){
  return $compareTo_4(this, castTo(b, 69));
}
;
_.equals_0 = function equals_3(o){
  return instanceOf(o, 69) && eq(castTo(o, 69).value_0, this.value_0);
}
;
_.hashCode_1 = function hashCode_4(){
  return toInt_0(this.value_0);
}
;
_.toString_0 = function toString_13(){
  return '' + toString_4(this.value_0);
}
;
_.value_0 = 0;
var Ljava_lang_Long_2_classLit = createForClass('java.lang', 'Long', 69);
function $clinit_Long$BoxedValues(){
  $clinit_Long$BoxedValues = emptyMethod;
  boxedValues_1 = initUnidimensionalArray(Ljava_lang_Long_2_classLit, $intern_0, 69, 256, 0, 1);
}

var boxedValues_1;
function NegativeArraySizeException(message){
  RuntimeException_0.call(this, message);
}

defineClass(1125, 35, $intern_7, NegativeArraySizeException);
var Ljava_lang_NegativeArraySizeException_2_classLit = createForClass('java.lang', 'NegativeArraySizeException', 1125);
function $clinit_Number$__ParseLong(){
  $clinit_Number$__ParseLong = emptyMethod;
  var i;
  maxDigitsForRadix = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [-1, -1, 30, 19, 15, 13, 11, 11, 10, 9, 9, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5]);
  maxDigitsRadixPower = initUnidimensionalArray(I_classLit, $intern_29, 8, 37, 15, 1);
  maxLengthForRadix = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [-1, -1, 63, 40, 32, 28, 25, 23, 21, 20, 19, 19, 18, 18, 17, 17, 16, 16, 16, 15, 15, 15, 15, 14, 14, 14, 14, 14, 14, 13, 13, 13, 13, 13, 13, 13, 13]);
  maxValueForRadix = initUnidimensionalArray(J_classLit, $intern_18, 8, 37, 14, 1);
  for (i = 2; i <= 36; i++) {
    maxDigitsRadixPower[i] = round_int($wnd.Math.pow(i, maxDigitsForRadix[i]));
    maxValueForRadix[i] = div($intern_45, maxDigitsRadixPower[i]);
  }
}

var maxDigitsForRadix, maxDigitsRadixPower, maxLengthForRadix, maxValueForRadix;
function NumberFormatException(message){
  IllegalArgumentException_0.call(this, message);
}

defineClass(149, 56, $intern_14, NumberFormatException);
var Ljava_lang_NumberFormatException_2_classLit = createForClass('java.lang', 'NumberFormatException', 149);
function OutOfMemoryError(){
  Error_0.call(this);
}

defineClass(1138, 142, $intern_38, OutOfMemoryError);
var Ljava_lang_OutOfMemoryError_2_classLit = createForClass('java.lang', 'OutOfMemoryError', 1138);
function StackTraceElement(methodName, fileName, lineNumber){
  this.className = 'Unknown';
  this.methodName = methodName;
  this.fileName = fileName;
  this.lineNumber = lineNumber;
}

defineClass(164, 1, {4:1, 164:1}, StackTraceElement);
_.equals_0 = function equals_4(other){
  var st;
  if (instanceOf(other, 164)) {
    st = castTo(other, 164);
    return this.lineNumber == st.lineNumber && this.methodName == st.methodName && this.className == st.className && this.fileName == st.fileName;
  }
  return false;
}
;
_.hashCode_1 = function hashCode_5(){
  return hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [valueOf_1(this.lineNumber), this.className, this.methodName, this.fileName]));
}
;
_.toString_0 = function toString_15(){
  return this.className + '.' + this.methodName + '(' + (this.fileName != null?this.fileName:'Unknown Source') + (this.lineNumber >= 0?':' + this.lineNumber:'') + ')';
}
;
_.lineNumber = 0;
var Ljava_lang_StackTraceElement_2_classLit = createForClass('java.lang', 'StackTraceElement', 164);
function $append(this$static, x_0){
  this$static.string += String.fromCharCode(x_0);
  return this$static;
}

function $append_0(this$static, x_0){
  this$static.string += x_0;
  return this$static;
}

function $append_1(this$static, x_0){
  this$static.string += '' + x_0;
  return this$static;
}

function $append_2(this$static, x_0, start_0, end){
  this$static.string += '' + $substring_0(!x_0?'null':x_0.string, start_0, end);
  return this$static;
}

function $append_3(this$static, x_0){
  this$static.string += '' + x_0;
  return this$static;
}

function $append_4(this$static, x_0){
  this$static.string += '' + x_0;
  return this$static;
}

function $deleteCharAt(this$static, start_0){
  this$static.string = $substring_0(this$static.string, 0, start_0) + '' + $substring(this$static.string, start_0 + 1);
  return this$static;
}

function StringBuilder(){
  AbstractStringBuilder.call(this, '');
}

function StringBuilder_0(){
  AbstractStringBuilder.call(this, '');
}

function StringBuilder_1(s){
  AbstractStringBuilder.call(this, (checkCriticalNotNull(s) , s));
}

defineClass(94, 264, {264:1, 294:1, 94:1}, StringBuilder, StringBuilder_0, StringBuilder_1);
var Ljava_lang_StringBuilder_2_classLit = createForClass('java.lang', 'StringBuilder', 94);
function $clinit_System(){
  $clinit_System = emptyMethod;
  err_0 = new PrintStream;
  out_0 = new PrintStream;
}

function arraycopy(src_0, srcOfs, dest, destOfs, len){
  $clinit_System();
  var destArray, destComp, destEnd, destType, destlen, srcArray, srcComp, srcType, srclen;
  checkCriticalNotNull_0(src_0, 'src');
  checkCriticalNotNull_0(dest, 'dest');
  srcType = getClass__Ljava_lang_Class___devirtual$(src_0);
  destType = getClass__Ljava_lang_Class___devirtual$(dest);
  checkCriticalArrayType_0((srcType.modifiers & 4) != 0, 'srcType is not an array');
  checkCriticalArrayType_0((destType.modifiers & 4) != 0, 'destType is not an array');
  srcComp = srcType.componentType;
  destComp = destType.componentType;
  checkCriticalArrayType_0((srcComp.modifiers & 1) != 0?srcComp == destComp:(destComp.modifiers & 1) == 0, "Array types don't match");
  srclen = src_0.length;
  destlen = dest.length;
  if (srcOfs < 0 || destOfs < 0 || len < 0 || srcOfs + len > srclen || destOfs + len > destlen) {
    throw toJs(new IndexOutOfBoundsException);
  }
  if ((srcComp.modifiers & 1) == 0 && srcType != destType) {
    srcArray = castToArray(src_0);
    destArray = castToArray(dest);
    if (maskUndefined(src_0) === maskUndefined(dest) && srcOfs < destOfs) {
      srcOfs += len;
      for (destEnd = destOfs + len; destEnd-- > destOfs;) {
        setCheck(destArray, destEnd, srcArray[--srcOfs]);
      }
    }
     else {
      for (destEnd = destOfs + len; destOfs < destEnd;) {
        setCheck(destArray, destOfs++, srcArray[srcOfs++]);
      }
    }
  }
   else 
    len > 0 && ($equals_0(srcComp.compoundName, 'Byte') || $equals_0(srcComp.compoundName, 'byte')?(dest.set(src_0.slice(srcOfs, srcOfs + len), destOfs) , undefined):copy_0(src_0, srcOfs, dest, destOfs, len, true));
}

function setErr(err){
  $clinit_System();
  err_0 = err;
}

function setOut(out){
  $clinit_System();
  out_0 = out;
}

defineClass(3643, 1, {});
var err_0, out_0;
function $set(this$static, value_0){
  this$static.value_0 = value_0;
}

function ThreadLocal(){
}

defineClass(1124, 1, {}, ThreadLocal);
var Ljava_lang_ThreadLocal_2_classLit = createForClass('java.lang', 'ThreadLocal', 1124);
function $clinit_BigInteger(){
  $clinit_BigInteger = emptyMethod;
  var i;
  ONE_0 = new BigInteger(1, 1);
  TEN = new BigInteger(1, 10);
  ZERO_0 = new BigInteger(0, 0);
  MINUS_ONE = new BigInteger(-1, 1);
  SMALL_VALUES = stampJavaTypeInfo(getClassLiteralForArray(Ljava_math_BigInteger_2_classLit, 1), $intern_0, 79, 0, [ZERO_0, ONE_0, new BigInteger(1, 2), new BigInteger(1, 3), new BigInteger(1, 4), new BigInteger(1, 5), new BigInteger(1, 6), new BigInteger(1, 7), new BigInteger(1, 8), new BigInteger(1, 9), TEN]);
  TWO_POWS = initUnidimensionalArray(Ljava_math_BigInteger_2_classLit, $intern_0, 79, 32, 0, 1);
  for (i = 0; i < TWO_POWS.length; i++) {
    TWO_POWS[i] = valueOf_6(shl_0(1, i));
  }
}

function $compareTo_6(this$static, val){
  if (this$static.sign > val.sign) {
    return 1;
  }
  if (this$static.sign < val.sign) {
    return -1;
  }
  if (this$static.numberLength > val.numberLength) {
    return this$static.sign;
  }
  if (this$static.numberLength < val.numberLength) {
    return -val.sign;
  }
  return this$static.sign * compareArrays(this$static.digits, val.digits, this$static.numberLength);
}

function $cutOffLeadingZeroes(this$static){
  while (this$static.numberLength > 0 && this$static.digits[--this$static.numberLength] == 0)
  ;
  this$static.digits[this$static.numberLength++] == 0 && (this$static.sign = 0);
}

function $equalsArrays(this$static, b){
  var i;
  for (i = this$static.numberLength - 1; i >= 0 && this$static.digits[i] == b[i]; i--)
  ;
  return i < 0;
}

function $getFirstNonzeroDigit(this$static){
  var i;
  if (this$static.firstNonzeroDigit == -2) {
    if (this$static.sign == 0) {
      i = -1;
    }
     else {
      for (i = 0; this$static.digits[i] == 0; i++)
      ;
    }
    this$static.firstNonzeroDigit = i;
  }
  return this$static.firstNonzeroDigit;
}

function $multiply(this$static, val){
  if (val.sign == 0) {
    return ZERO_0;
  }
  if (this$static.sign == 0) {
    return ZERO_0;
  }
  return $clinit_Multiplication() , karatsuba(this$static, val);
}

function $putBytesPositiveToIntegers(this$static, byteValues){
  var bytesLen, highBytes, i, j;
  bytesLen = byteValues.length;
  highBytes = bytesLen & 3;
  this$static.numberLength = (bytesLen >> 2) + (highBytes == 0?0:1);
  this$static.digits = initUnidimensionalArray(I_classLit, $intern_29, 8, this$static.numberLength, 15, 1);
  i = 0;
  while (bytesLen > highBytes) {
    this$static.digits[i++] = byteValues[--bytesLen] & 255 | (byteValues[--bytesLen] & 255) << 8 | (byteValues[--bytesLen] & 255) << 16 | (byteValues[--bytesLen] & 255) << 24;
  }
  for (j = 0; j < bytesLen; j++) {
    this$static.digits[i] = this$static.digits[i] << 8 | byteValues[j] & 255;
  }
}

function $shiftLeft(this$static, n){
  if (n == 0 || this$static.sign == 0) {
    return this$static;
  }
  return n > 0?shiftLeft(this$static, n):shiftRight(this$static, -n);
}

function $shiftRight(this$static, n){
  if (n == 0 || this$static.sign == 0) {
    return this$static;
  }
  return n > 0?shiftRight(this$static, n):shiftLeft(this$static, -n);
}

function $toByteArray_0(this$static){
  var bitLen, bytes, bytesInInteger, bytesLen, digit, digitIndex, firstByteNumber, hB, highBytes, i, i0, iThis, temp;
  if (this$static.sign == 0) {
    return stampJavaTypeInfo(getClassLiteralForArray(B_classLit, 1), $intern_28, 8, 15, [0]);
  }
  temp = this$static;
  bitLen = bitLength_0(this$static);
  iThis = $getFirstNonzeroDigit(this$static);
  bytesLen = (bitLen >> 3) + 1;
  bytes = initUnidimensionalArray(B_classLit, $intern_28, 8, bytesLen, 15, 1);
  firstByteNumber = 0;
  digitIndex = 0;
  bytesInInteger = 4;
  if (bytesLen - (this$static.numberLength << 2) == 1) {
    bytes[0] = (this$static.sign < 0?-1:0) << 24 >> 24;
    highBytes = 4;
    ++firstByteNumber;
  }
   else {
    hB = bytesLen & 3;
    highBytes = hB == 0?4:hB;
  }
  digitIndex = iThis;
  bytesLen -= iThis << 2;
  if (this$static.sign < 0) {
    digit = -temp.digits[digitIndex];
    ++digitIndex;
    digitIndex == this$static.numberLength && (bytesInInteger = highBytes);
    for (i0 = 0; i0 < bytesInInteger; ++i0 , digit >>= 8) {
      bytes[--bytesLen] = digit << 24 >> 24;
    }
    while (bytesLen > firstByteNumber) {
      digit = ~temp.digits[digitIndex];
      ++digitIndex;
      digitIndex == this$static.numberLength && (bytesInInteger = highBytes);
      for (i = 0; i < bytesInInteger; ++i , digit >>= 8) {
        bytes[--bytesLen] = digit << 24 >> 24;
      }
    }
  }
   else {
    while (bytesLen > firstByteNumber) {
      digit = temp.digits[digitIndex];
      ++digitIndex;
      digitIndex == this$static.numberLength && (bytesInInteger = highBytes);
      for (i = 0; i < bytesInInteger; ++i , digit >>= 8) {
        bytes[--bytesLen] = digit << 24 >> 24;
      }
    }
  }
  return bytes;
}

function BigInteger(sign, value_0){
  $clinit_BigInteger();
  this.sign = sign;
  this.numberLength = 1;
  this.digits = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [value_0]);
}

function BigInteger_0(sign, numberLength, digits){
  $clinit_BigInteger();
  this.sign = sign;
  this.numberLength = numberLength;
  this.digits = digits;
}

function BigInteger_1(sign, val){
  this.sign = sign;
  if (eq(and_0(val, -4294967296), 0)) {
    this.numberLength = 1;
    this.digits = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [toInt_0(val)]);
  }
   else {
    this.numberLength = 2;
    this.digits = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [toInt_0(val), toInt_0(shr_0(val, 32))]);
  }
}

function BigInteger_2(magnitude){
  $clinit_BigInteger();
  checkCriticalNotNull(magnitude);
  if (magnitude.length == 0) {
    this.sign = 0;
    this.numberLength = 1;
    this.digits = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [0]);
  }
   else {
    this.sign = 1;
    $putBytesPositiveToIntegers(this, magnitude);
    $cutOffLeadingZeroes(this);
  }
}

function BigInteger_3(val){
  $clinit_BigInteger();
  checkCriticalNotNull(val);
  if (val.length == 0) {
    throw toJs(new NumberFormatException('Zero length BigInteger'));
  }
  setFromString(this, val);
}

function setFromString(bi, val){
  var bigRadix, bigRadixDigit, bigRadixDigitsLength, charsPerInt, digitIndex, digits, endChar, newDigit, numberLength, sign, startChar, stringLength, substrEnd, substrStart, topChars;
  stringLength = val.length;
  endChar = stringLength;
  checkCriticalStringElementIndex(0, val.length);
  if (val.charCodeAt(0) == 45) {
    sign = -1;
    startChar = 1;
    --stringLength;
  }
   else {
    sign = 1;
    startChar = 0;
  }
  charsPerInt = ($clinit_Conversion() , digitFitInInt)[36];
  bigRadixDigitsLength = stringLength / charsPerInt | 0;
  topChars = stringLength % charsPerInt;
  topChars != 0 && ++bigRadixDigitsLength;
  digits = initUnidimensionalArray(I_classLit, $intern_29, 8, bigRadixDigitsLength, 15, 1);
  bigRadix = bigRadices[34];
  digitIndex = 0;
  substrEnd = startChar + (topChars == 0?charsPerInt:topChars);
  for (substrStart = startChar; substrStart < endChar; substrStart = substrEnd , substrEnd = substrStart + charsPerInt) {
    bigRadixDigit = __parseAndValidateInt(val.substr(substrStart, substrEnd - substrStart), 36);
    newDigit = ($clinit_Multiplication() , multiplyByInt(digits, digits, digitIndex, bigRadix));
    newDigit += inplaceAdd(digits, digitIndex, bigRadixDigit);
    digits[digitIndex++] = newDigit;
  }
  numberLength = digitIndex;
  bi.sign = sign;
  bi.numberLength = numberLength;
  bi.digits = digits;
  $cutOffLeadingZeroes(bi);
}

function valueOf_6(val){
  $clinit_BigInteger();
  if (compare_1(val, 0) < 0) {
    if (compare_1(val, -1) != 0) {
      return new BigInteger_1(-1, neg_0(val));
    }
    return MINUS_ONE;
  }
   else 
    return compare_1(val, 10) <= 0?SMALL_VALUES[toInt_0(val)]:new BigInteger_1(1, val);
}

defineClass(79, 265, {4:1, 57:1, 265:1, 79:1}, BigInteger, BigInteger_0, BigInteger_1, BigInteger_2, BigInteger_3);
_.compareTo_0 = function compareTo_4(val){
  return $compareTo_6(this, castTo(val, 79));
}
;
_.equals_0 = function equals_5(x_0){
  var x1;
  if (this === x_0) {
    return true;
  }
  if (instanceOf(x_0, 79)) {
    x1 = castTo(x_0, 79);
    return this.sign == x1.sign && this.numberLength == x1.numberLength && $equalsArrays(this, x1.digits);
  }
  return false;
}
;
_.hashCode_1 = function hashCode_6(){
  var i;
  if (this.hashCode_0 != 0) {
    return this.hashCode_0;
  }
  for (i = 0; i < this.digits.length; i++) {
    this.hashCode_0 = this.hashCode_0 * 33 + (this.digits[i] & -1);
  }
  this.hashCode_0 = this.hashCode_0 * this.sign;
  return this.hashCode_0;
}
;
_.toString_0 = function toString_16(){
  return toDecimalScaledString(this, 0);
}
;
_.firstNonzeroDigit = -2;
_.hashCode_0 = 0;
_.numberLength = 0;
_.sign = 0;
var MINUS_ONE, ONE_0, SMALL_VALUES, TEN, TWO_POWS, ZERO_0;
var Ljava_math_BigInteger_2_classLit = createForClass('java.math', 'BigInteger', 79);
function bitLength_0(val){
  var bLength, highDigit, i;
  if (val.sign == 0) {
    return 0;
  }
  bLength = val.numberLength << 5;
  highDigit = val.digits[val.numberLength - 1];
  if (val.sign < 0) {
    i = $getFirstNonzeroDigit(val);
    if (i == val.numberLength - 1) {
      --highDigit;
      highDigit = highDigit | 0;
    }
  }
  bLength -= numberOfLeadingZeros_0(highDigit);
  return bLength;
}

function shiftLeft(source, count){
  var intCount, resDigits, resLength, result;
  intCount = count >> 5;
  count &= 31;
  resLength = source.numberLength + intCount + (count == 0?0:1);
  resDigits = initUnidimensionalArray(I_classLit, $intern_29, 8, resLength, 15, 1);
  shiftLeft_0(resDigits, source.digits, intCount, count);
  result = new BigInteger_0(source.sign, resLength, resDigits);
  $cutOffLeadingZeroes(result);
  return result;
}

function shiftLeft_0(result, source, intCount, count){
  var i, i0, rightShiftCount;
  if (count == 0) {
    arraycopy(source, 0, result, intCount, result.length - intCount);
  }
   else {
    rightShiftCount = 32 - count;
    result[result.length - 1] = 0;
    for (i0 = result.length - 1; i0 > intCount; i0--) {
      result[i0] |= source[i0 - intCount - 1] >>> rightShiftCount;
      result[i0 - 1] = source[i0 - intCount - 1] << count;
    }
  }
  for (i = 0; i < intCount; i++) {
    result[i] = 0;
  }
}

function shiftLeftOneBit(result, source, srcLen){
  var carry, i, val;
  carry = 0;
  for (i = 0; i < srcLen; i++) {
    val = source[i];
    result[i] = val << 1 | carry;
    carry = val >>> 31;
  }
  carry != 0 && (result[srcLen] = carry);
}

function shiftRight(source, count){
  var i, intCount, resDigits, resLength, result;
  intCount = count >> 5;
  count &= 31;
  if (intCount >= source.numberLength) {
    return source.sign < 0?($clinit_BigInteger() , MINUS_ONE):($clinit_BigInteger() , ZERO_0);
  }
  resLength = source.numberLength - intCount;
  resDigits = initUnidimensionalArray(I_classLit, $intern_29, 8, resLength + 1, 15, 1);
  shiftRight_0(resDigits, resLength, source.digits, intCount, count);
  if (source.sign < 0) {
    for (i = 0; i < intCount && source.digits[i] == 0; i++)
    ;
    if (i < intCount || count > 0 && source.digits[i] << 32 - count != 0) {
      for (i = 0; i < resLength && resDigits[i] == -1; i++) {
        resDigits[i] = 0;
      }
      i == resLength && ++resLength;
      ++resDigits[i];
    }
  }
  result = new BigInteger_0(source.sign, resLength, resDigits);
  $cutOffLeadingZeroes(result);
  return result;
}

function shiftRight_0(result, resultLen, source, intCount, count){
  var allZero, i, leftShiftCount;
  allZero = true;
  for (i = 0; i < intCount; i++) {
    allZero = allZero & source[i] == 0;
  }
  if (count == 0) {
    arraycopy(source, intCount, result, 0, resultLen);
    i = resultLen;
  }
   else {
    leftShiftCount = 32 - count;
    allZero = allZero & source[i] << leftShiftCount == 0;
    for (i = 0; i < resultLen - 1; i++) {
      result[i] = source[i + intCount] >>> count | source[i + intCount + 1] << leftShiftCount;
    }
    result[i] = source[i + intCount] >>> count;
    ++i;
  }
  return allZero;
}

function $clinit_Conversion(){
  $clinit_Conversion = emptyMethod;
  bigRadices = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [$intern_8, 1162261467, $intern_46, 1220703125, 362797056, 1977326743, $intern_46, 387420489, $intern_37, 214358881, 429981696, 815730721, 1475789056, 170859375, 268435456, 410338673, 612220032, 893871739, 1280000000, 1801088541, 113379904, 148035889, 191102976, 244140625, 308915776, 387420489, 481890304, 594823321, 729000000, 887503681, $intern_46, 1291467969, 1544804416, 1838265625, 60466176]);
  digitFitInInt = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [-1, -1, 31, 19, 15, 13, 11, 11, 10, 9, 9, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5]);
}

function bigInteger2String(val){
  $clinit_Conversion();
  var bigRadix, bitsForRadixDigit, charsPerInt, currentChar, delta, digits, highDigit, i, numberLength, previous, resDigit, resLengthInChars, result, sign, temp, tempLen, v;
  sign = val.sign;
  numberLength = val.numberLength;
  digits = val.digits;
  if (sign == 0) {
    return '0';
  }
  if (numberLength == 1) {
    highDigit = digits[numberLength - 1];
    v = and_0(highDigit, $intern_47);
    sign < 0 && (v = neg_0(v));
    return toString_14(v);
  }
  bitsForRadixDigit = $wnd.Math.log(36) / $wnd.Math.log(2);
  resLengthInChars = round_int(bitLength_0(val.sign < 0?new BigInteger_0(1, val.numberLength, val.digits):val) / bitsForRadixDigit + (sign < 0?1:0)) + 1;
  result = initUnidimensionalArray(C_classLit, $intern_18, 8, resLengthInChars, 15, 1);
  currentChar = resLengthInChars;
  temp = initUnidimensionalArray(I_classLit, $intern_29, 8, numberLength, 15, 1);
  arraycopy(digits, 0, temp, 0, numberLength);
  tempLen = numberLength;
  charsPerInt = digitFitInInt[36];
  bigRadix = bigRadices[34];
  while (true) {
    resDigit = divideArrayByInt(temp, temp, tempLen, bigRadix);
    previous = currentChar;
    do {
      result[--currentChar] = forDigit_0(resDigit % 36);
    }
     while ((resDigit = resDigit / 36 | 0) != 0 && currentChar != 0);
    delta = charsPerInt - previous + currentChar;
    for (i = 0; i < delta && currentChar > 0; i++) {
      result[--currentChar] = 48;
    }
    for (i = tempLen - 1; i > 0 && temp[i] == 0; i--)
    ;
    tempLen = i + 1;
    if (tempLen == 1 && temp[0] == 0) {
      break;
    }
  }
  while (result[currentChar] == 48) {
    ++currentChar;
  }
  sign == -1 && (result[--currentChar] = 45);
  return valueOf_5(result, currentChar, resLengthInChars - currentChar);
}

function divideLongByBillion(a){
  var aPos, quot, rem;
  if (compare_1(a, 0) >= 0) {
    quot = div(a, $intern_37);
    rem = mod_0(a, $intern_37);
  }
   else {
    aPos = shru_0(a, 1);
    quot = div(aPos, 500000000);
    rem = mod_0(aPos, 500000000);
    rem = add_1(shl_0(rem, 1), and_0(a, 1));
  }
  return or_0(shl_0(rem, 32), and_0(quot, $intern_47));
}

function toDecimalScaledString(val, scale){
  $clinit_Conversion();
  var currentChar, delta, digits, endPoint, exponent, highDigit, i, i1, insertPoint, j, j0, negNumber, numberLength, prev, previous, res, resDigit, resLengthInChars, result, result1, result10, result11, sign, startPoint, temp, temp1, tempLen, v;
  sign = val.sign;
  numberLength = val.numberLength;
  digits = val.digits;
  if (sign == 0) {
    switch (scale) {
      case 0:
        return '0';
      case 1:
        return '0.0';
      case 2:
        return '0.00';
      case 3:
        return '0.000';
      case 4:
        return '0.0000';
      case 5:
        return '0.00000';
      case 6:
        return '0.000000';
      default:result10 = new StringBuilder;
        scale < 0?(result10.string += '0E+' , result10):(result10.string += '0E' , result10);
        result10.string += -scale;
        return result10.string;
    }
  }
  resLengthInChars = numberLength * 10 + 1 + 7;
  result = initUnidimensionalArray(C_classLit, $intern_18, 8, resLengthInChars + 1, 15, 1);
  currentChar = resLengthInChars;
  if (numberLength == 1) {
    highDigit = digits[0];
    if (highDigit < 0) {
      v = and_0(highDigit, $intern_47);
      do {
        prev = v;
        v = div(v, 10);
        result[--currentChar] = 48 + toInt_0(sub_1(prev, mul_0(v, 10))) & $intern_20;
      }
       while (compare_1(v, 0) != 0);
    }
     else {
      v = highDigit;
      do {
        prev = v;
        v = v / 10 | 0;
        result[--currentChar] = 48 + (prev - v * 10) & $intern_20;
      }
       while (v != 0);
    }
  }
   else {
    temp = initUnidimensionalArray(I_classLit, $intern_29, 8, numberLength, 15, 1);
    tempLen = numberLength;
    arraycopy(digits, 0, temp, 0, tempLen);
    BIG_LOOP: while (true) {
      result11 = 0;
      for (i1 = tempLen - 1; i1 >= 0; i1--) {
        temp1 = add_1(shl_0(result11, 32), and_0(temp[i1], $intern_47));
        res = divideLongByBillion(temp1);
        temp[i1] = toInt_0(res);
        result11 = toInt_0(shr_0(res, 32));
      }
      resDigit = toInt_0(result11);
      previous = currentChar;
      do {
        result[--currentChar] = 48 + resDigit % 10 & $intern_20;
      }
       while ((resDigit = resDigit / 10 | 0) != 0 && currentChar != 0);
      delta = 9 - previous + currentChar;
      for (i = 0; i < delta && currentChar > 0; i++) {
        result[--currentChar] = 48;
      }
      j = tempLen - 1;
      for (; temp[j] == 0; j--) {
        if (j == 0) {
          break BIG_LOOP;
        }
      }
      tempLen = j + 1;
    }
    while (result[currentChar] == 48) {
      ++currentChar;
    }
  }
  negNumber = sign < 0;
  exponent = resLengthInChars - currentChar - scale - 1;
  if (scale == 0) {
    negNumber && (result[--currentChar] = 45);
    return valueOf_5(result, currentChar, resLengthInChars - currentChar);
  }
  if (scale > 0 && exponent >= -6) {
    if (exponent >= 0) {
      insertPoint = currentChar + exponent;
      for (j0 = resLengthInChars - 1; j0 >= insertPoint; j0--) {
        result[j0 + 1] = result[j0];
      }
      result[++insertPoint] = 46;
      negNumber && (result[--currentChar] = 45);
      return valueOf_5(result, currentChar, resLengthInChars - currentChar + 1);
    }
    for (j = 2; j < -exponent + 1; j++) {
      result[--currentChar] = 48;
    }
    result[--currentChar] = 46;
    result[--currentChar] = 48;
    negNumber && (result[--currentChar] = 45);
    return valueOf_5(result, currentChar, resLengthInChars - currentChar);
  }
  startPoint = currentChar + 1;
  endPoint = resLengthInChars;
  result1 = new StringBuilder_0;
  negNumber && (result1.string += '-' , result1);
  if (endPoint - startPoint >= 1) {
    $append(result1, result[currentChar]);
    result1.string += '.';
    result1.string += valueOf_5(result, currentChar + 1, resLengthInChars - currentChar - 1);
  }
   else {
    result1.string += valueOf_5(result, currentChar, resLengthInChars - currentChar);
  }
  result1.string += 'E';
  exponent > 0 && (result1.string += '+' , result1);
  result1.string += '' + exponent;
  return result1.string;
}

var bigRadices, digitFitInInt;
function divideArrayByInt(dest, src_0, srcLength, divisor){
  var aPos, bLong, bPos, i, quot, rem, temp;
  rem = 0;
  bLong = and_0(divisor, $intern_47);
  for (i = srcLength - 1; i >= 0; i--) {
    temp = or_0(shl_0(rem, 32), and_0(src_0[i], $intern_47));
    if (compare_1(temp, 0) >= 0) {
      quot = div(temp, bLong);
      rem = mod_0(temp, bLong);
    }
     else {
      aPos = shru_0(temp, 1);
      bPos = divisor >>> 1;
      quot = div(aPos, bPos);
      rem = mod_0(aPos, bPos);
      rem = add_1(shl_0(rem, 1), and_0(temp, 1));
      if ((divisor & 1) != 0) {
        if (compare_1(quot, rem) <= 0) {
          rem = sub_1(rem, quot);
        }
         else {
          if (lte(sub_1(quot, rem), bLong)) {
            rem = add_1(rem, sub_1(bLong, quot));
            quot = sub_1(quot, 1);
          }
           else {
            rem = add_1(rem, sub_1(shl_0(bLong, 1), quot));
            quot = sub_1(quot, 2);
          }
        }
      }
    }
    dest[i] = toInt_0(and_0(quot, $intern_47));
  }
  return toInt_0(rem);
}

function add_2(op1, op2){
  var a, b, cmp, op1Len, op1Sign, op2Len, op2Sign, res, res0, resDigits, resSign, valueHi, valueLo;
  op1Sign = op1.sign;
  op2Sign = op2.sign;
  if (op1Sign == 0) {
    return op2;
  }
  if (op2Sign == 0) {
    return op1;
  }
  op1Len = op1.numberLength;
  op2Len = op2.numberLength;
  if (op1Len + op2Len == 2) {
    a = and_0(op1.digits[0], $intern_47);
    b = and_0(op2.digits[0], $intern_47);
    if (op1Sign == op2Sign) {
      res0 = add_1(a, b);
      valueLo = toInt_0(res0);
      valueHi = toInt_0(shru_0(res0, 32));
      return valueHi == 0?new BigInteger(op1Sign, valueLo):new BigInteger_0(op1Sign, 2, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [valueLo, valueHi]));
    }
    return valueOf_6(op1Sign < 0?sub_1(b, a):sub_1(a, b));
  }
   else if (op1Sign == op2Sign) {
    resSign = op1Sign;
    resDigits = op1Len >= op2Len?add_3(op1.digits, op1Len, op2.digits, op2Len):add_3(op2.digits, op2Len, op1.digits, op1Len);
  }
   else {
    cmp = op1Len != op2Len?op1Len > op2Len?1:-1:compareArrays(op1.digits, op2.digits, op1Len);
    if (cmp == 0) {
      return $clinit_BigInteger() , ZERO_0;
    }
    if (cmp == 1) {
      resSign = op1Sign;
      resDigits = subtract_0(op1.digits, op1Len, op2.digits, op2Len);
    }
     else {
      resSign = op2Sign;
      resDigits = subtract_0(op2.digits, op2Len, op1.digits, op1Len);
    }
  }
  res = new BigInteger_0(resSign, resDigits.length, resDigits);
  $cutOffLeadingZeroes(res);
  return res;
}

function add_3(a, aSize, b, bSize){
  var res;
  res = initUnidimensionalArray(I_classLit, $intern_29, 8, aSize + 1, 15, 1);
  add_4(res, a, aSize, b, bSize);
  return res;
}

function add_4(res, a, aSize, b, bSize){
  var carry, i;
  carry = add_1(and_0(a[0], $intern_47), and_0(b[0], $intern_47));
  res[0] = toInt_0(carry);
  carry = shr_0(carry, 32);
  if (aSize >= bSize) {
    for (i = 1; i < bSize; i++) {
      carry = add_1(carry, add_1(and_0(a[i], $intern_47), and_0(b[i], $intern_47)));
      res[i] = toInt_0(carry);
      carry = shr_0(carry, 32);
    }
    for (; i < aSize; i++) {
      carry = add_1(carry, and_0(a[i], $intern_47));
      res[i] = toInt_0(carry);
      carry = shr_0(carry, 32);
    }
  }
   else {
    for (i = 1; i < aSize; i++) {
      carry = add_1(carry, add_1(and_0(a[i], $intern_47), and_0(b[i], $intern_47)));
      res[i] = toInt_0(carry);
      carry = shr_0(carry, 32);
    }
    for (; i < bSize; i++) {
      carry = add_1(carry, and_0(b[i], $intern_47));
      res[i] = toInt_0(carry);
      carry = shr_0(carry, 32);
    }
  }
  compare_1(carry, 0) != 0 && (res[i] = toInt_0(carry));
}

function compareArrays(a, b, size_0){
  var i;
  for (i = size_0 - 1; i >= 0 && a[i] == b[i]; i--)
  ;
  return i < 0?0:lt(and_0(a[i], $intern_47), and_0(b[i], $intern_47))?-1:1;
}

function inplaceAdd(a, aSize, addend){
  var carry, i;
  carry = and_0(addend, $intern_47);
  for (i = 0; compare_1(carry, 0) != 0 && i < aSize; i++) {
    carry = add_1(carry, and_0(a[i], $intern_47));
    a[i] = toInt_0(carry);
    carry = shr_0(carry, 32);
  }
  return toInt_0(carry);
}

function subtract(op1, op2){
  var a, b, cmp, op1Len, op1Sign, op2Len, op2Sign, res, resDigits, resSign;
  op1Sign = op1.sign;
  op2Sign = op2.sign;
  if (op2Sign == 0) {
    return op1;
  }
  if (op1Sign == 0) {
    return op2.sign == 0?op2:new BigInteger_0(-op2.sign, op2.numberLength, op2.digits);
  }
  op1Len = op1.numberLength;
  op2Len = op2.numberLength;
  if (op1Len + op2Len == 2) {
    a = and_0(op1.digits[0], $intern_47);
    b = and_0(op2.digits[0], $intern_47);
    op1Sign < 0 && (a = neg_0(a));
    op2Sign < 0 && (b = neg_0(b));
    return valueOf_6(sub_1(a, b));
  }
  cmp = op1Len != op2Len?op1Len > op2Len?1:-1:compareArrays(op1.digits, op2.digits, op1Len);
  if (cmp == -1) {
    resSign = -op2Sign;
    resDigits = op1Sign == op2Sign?subtract_0(op2.digits, op2Len, op1.digits, op1Len):add_3(op2.digits, op2Len, op1.digits, op1Len);
  }
   else {
    resSign = op1Sign;
    if (op1Sign == op2Sign) {
      if (cmp == 0) {
        return $clinit_BigInteger() , ZERO_0;
      }
      resDigits = subtract_0(op1.digits, op1Len, op2.digits, op2Len);
    }
     else {
      resDigits = add_3(op1.digits, op1Len, op2.digits, op2Len);
    }
  }
  res = new BigInteger_0(resSign, resDigits.length, resDigits);
  $cutOffLeadingZeroes(res);
  return res;
}

function subtract_0(a, aSize, b, bSize){
  var res;
  res = initUnidimensionalArray(I_classLit, $intern_29, 8, aSize, 15, 1);
  subtract_1(res, a, aSize, b, bSize);
  return res;
}

function subtract_1(res, a, aSize, b, bSize){
  var borrow, i;
  borrow = 0;
  for (i = 0; i < bSize; i++) {
    borrow = add_1(borrow, sub_1(and_0(a[i], $intern_47), and_0(b[i], $intern_47)));
    res[i] = toInt_0(borrow);
    borrow = shr_0(borrow, 32);
  }
  for (; i < aSize; i++) {
    borrow = add_1(borrow, and_0(a[i], $intern_47));
    res[i] = toInt_0(borrow);
    borrow = shr_0(borrow, 32);
  }
}

function $clinit_Multiplication(){
  $clinit_Multiplication = emptyMethod;
  var fivePow, i;
  bigFivePows = initUnidimensionalArray(Ljava_math_BigInteger_2_classLit, $intern_0, 79, 32, 0, 1);
  bigTenPows = initUnidimensionalArray(Ljava_math_BigInteger_2_classLit, $intern_0, 79, 32, 0, 1);
  fivePow = 1;
  for (i = 0; i <= 18; i++) {
    bigFivePows[i] = valueOf_6(fivePow);
    bigTenPows[i] = valueOf_6(shl_0(fivePow, i));
    fivePow = mul_0(fivePow, 5);
  }
  for (; i < bigTenPows.length; i++) {
    bigFivePows[i] = $multiply(bigFivePows[i - 1], bigFivePows[1]);
    bigTenPows[i] = $multiply(bigTenPows[i - 1], ($clinit_BigInteger() , TEN));
  }
}

function karatsuba(op1, op2){
  $clinit_Multiplication();
  var lower, lowerOp1, lowerOp2, middle, ndiv2, temp, upper, upperOp1, upperOp2;
  if (op2.numberLength > op1.numberLength) {
    temp = op1;
    op1 = op2;
    op2 = temp;
  }
  if (op2.numberLength < 63) {
    return multiplyPAP(op1, op2);
  }
  ndiv2 = (op1.numberLength & -2) << 4;
  upperOp1 = $shiftRight(op1, ndiv2);
  upperOp2 = $shiftRight(op2, ndiv2);
  lowerOp1 = subtract(op1, $shiftLeft(upperOp1, ndiv2));
  lowerOp2 = subtract(op2, $shiftLeft(upperOp2, ndiv2));
  upper = karatsuba(upperOp1, upperOp2);
  lower = karatsuba(lowerOp1, lowerOp2);
  middle = karatsuba(subtract(upperOp1, lowerOp1), subtract(lowerOp2, upperOp2));
  middle = add_2(add_2(middle, upper), lower);
  middle = $shiftLeft(middle, ndiv2);
  upper = $shiftLeft(upper, ndiv2 << 1);
  return add_2(add_2(upper, middle), lower);
}

function multArraysPAP(aDigits, aLen, bDigits, bLen, resDigits){
  if (aLen == 0 || bLen == 0) {
    return;
  }
  aLen == 1?(resDigits[bLen] = multiplyByInt(resDigits, bDigits, bLen, aDigits[0])):bLen == 1?(resDigits[aLen] = multiplyByInt(resDigits, aDigits, aLen, bDigits[0])):multPAP(aDigits, bDigits, resDigits, aLen, bLen);
}

function multPAP(a, b, t, aLen, bLen){
  var aI, carry, i, j;
  if (maskUndefined(a) === maskUndefined(b) && aLen == bLen) {
    square(a, aLen, t);
    return;
  }
  for (i = 0; i < aLen; i++) {
    carry = 0;
    aI = a[i];
    for (j = 0; j < bLen; j++) {
      carry = add_1(add_1(mul_0(and_0(aI, $intern_47), and_0(b[j], $intern_47)), and_0(t[i + j], $intern_47)), and_0(toInt_0(carry), $intern_47));
      t[i + j] = toInt_0(carry);
      carry = shru_0(carry, 32);
    }
    t[i + bLen] = toInt_0(carry);
  }
}

function multiplyByInt(res, a, aSize, factor){
  $clinit_Multiplication();
  var carry, i;
  carry = 0;
  for (i = 0; i < aSize; i++) {
    carry = add_1(mul_0(and_0(a[i], $intern_47), and_0(factor, $intern_47)), and_0(toInt_0(carry), $intern_47));
    res[i] = toInt_0(carry);
    carry = shru_0(carry, 32);
  }
  return toInt_0(carry);
}

function multiplyPAP(a, b){
  var aDigits, aLen, bDigits, bLen, resDigits, resLength, resSign, result, val, valueHi, valueLo;
  aLen = a.numberLength;
  bLen = b.numberLength;
  resLength = aLen + bLen;
  resSign = a.sign != b.sign?-1:1;
  if (resLength == 2) {
    val = mul_0(and_0(a.digits[0], $intern_47), and_0(b.digits[0], $intern_47));
    valueLo = toInt_0(val);
    valueHi = toInt_0(shru_0(val, 32));
    return valueHi == 0?new BigInteger(resSign, valueLo):new BigInteger_0(resSign, 2, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [valueLo, valueHi]));
  }
  aDigits = a.digits;
  bDigits = b.digits;
  resDigits = initUnidimensionalArray(I_classLit, $intern_29, 8, resLength, 15, 1);
  multArraysPAP(aDigits, aLen, bDigits, bLen, resDigits);
  result = new BigInteger_0(resSign, resLength, resDigits);
  $cutOffLeadingZeroes(result);
  return result;
}

function square(a, aLen, res){
  var carry, i, i0, index_0, j;
  for (i0 = 0; i0 < aLen; i0++) {
    carry = 0;
    for (j = i0 + 1; j < aLen; j++) {
      carry = add_1(add_1(mul_0(and_0(a[i0], $intern_47), and_0(a[j], $intern_47)), and_0(res[i0 + j], $intern_47)), and_0(toInt_0(carry), $intern_47));
      res[i0 + j] = toInt_0(carry);
      carry = shru_0(carry, 32);
    }
    res[i0 + aLen] = toInt_0(carry);
  }
  shiftLeftOneBit(res, res, aLen << 1);
  carry = 0;
  for (i = 0 , index_0 = 0; i < aLen; ++i , index_0++) {
    carry = add_1(add_1(mul_0(and_0(a[i], $intern_47), and_0(a[i], $intern_47)), and_0(res[index_0], $intern_47)), and_0(toInt_0(carry), $intern_47));
    res[index_0] = toInt_0(carry);
    carry = shru_0(carry, 32);
    ++index_0;
    carry = add_1(carry, and_0(res[index_0], $intern_47));
    res[index_0] = toInt_0(carry);
    carry = shru_0(carry, 32);
  }
  return res;
}

var bigFivePows, bigTenPows;
defineClass(559, 62, $intern_42);
var Ljava_net_SocketException_2_classLit = createForClass('java.net', 'SocketException', 559);
function ConnectException(msg){
  IOException.call(this, msg);
}

defineClass(391, 559, {62:1, 4:1, 51:1, 33:1, 391:1}, ConnectException);
var Ljava_net_ConnectException_2_classLit = createForClass('java.net', 'ConnectException', 391);
function convert(s, buf){
  var bytes, j;
  bytes = $getBytes(s, getCharset('UTF-8'));
  for (j = 0; j < bytes.length; j++) {
    buf.string += '%';
    $append(buf, $charAt('0123456789ABCDEF', (bytes[j] & 240) >> 4));
    $append(buf, $charAt('0123456789ABCDEF', bytes[j] & 15));
  }
}

function encode_1(s){
  var buf, ch_0, i, start_0;
  if (s == null) {
    throw toJs(new NullPointerException);
  }
  getCharset('UTF-8').getBytes('');
  buf = new StringBuilder_0;
  start_0 = -1;
  for (i = 0; i < s.length; i++) {
    ch_0 = (checkCriticalStringElementIndex(i, s.length) , s.charCodeAt(i));
    if (ch_0 >= 97 && ch_0 <= 122 || ch_0 >= 65 && ch_0 <= 90 || ch_0 >= 48 && ch_0 <= 57 || $indexOf(' .-*_', fromCodePoint(ch_0)) > -1) {
      if (start_0 >= 0) {
        convert(s.substr(start_0, i - start_0), buf);
        start_0 = -1;
      }
      ch_0 != 32?(buf.string += String.fromCharCode(ch_0) , buf):(buf.string += '+' , buf);
    }
     else {
      start_0 < 0 && (start_0 = i);
    }
  }
  start_0 >= 0 && convert($substring_0(s, start_0, s.length), buf);
  return buf.string;
}

function $compareTo_7(this$static, that){
  return $compareToIgnoreCase(this$static.name_0, that.name_0);
}

function forName(charsetName){
  checkCriticalArgument_0(charsetName != null, 'Null charset name');
  charsetName = charsetName.toUpperCase();
  if ($equals_0(($clinit_EmulatedCharset() , ISO_8859_1).name_0, charsetName)) {
    return ISO_8859_1;
  }
   else if ($equals_0(ISO_LATIN_1.name_0, charsetName)) {
    return ISO_LATIN_1;
  }
   else if ($equals_0(UTF_8_0.name_0, charsetName)) {
    return UTF_8_0;
  }
  if ((new RegExp('^[A-Za-z0-9][\\w-:\\.\\+]*$')).test(charsetName)) {
    throw toJs(new UnsupportedCharsetException(charsetName));
  }
   else {
    throw toJs(new IllegalCharsetNameException(charsetName));
  }
}

defineClass(213, 1, $intern_48);
_.compareTo_0 = function compareTo_5(that){
  return $compareTo_7(this, castTo(that, 213));
}
;
_.equals_0 = function equals_6(o){
  var that;
  if (o === this) {
    return true;
  }
  if (!instanceOf(o, 213)) {
    return false;
  }
  that = castTo(o, 213);
  return $equals_0(this.name_0, that.name_0);
}
;
_.hashCode_1 = function hashCode_7(){
  return getHashCode_1(this.name_0);
}
;
_.toString_0 = function toString_17(){
  return this.name_0;
}
;
var Ljava_nio_charset_Charset_2_classLit = createForClass('java.nio.charset', 'Charset', 213);
function IllegalCharsetNameException(charsetName){
  IllegalArgumentException_0.call(this, charsetName == null?'null':charsetName);
}

defineClass(556, 56, $intern_14, IllegalCharsetNameException);
var Ljava_nio_charset_IllegalCharsetNameException_2_classLit = createForClass('java.nio.charset', 'IllegalCharsetNameException', 556);
function $clinit_StandardCharsets(){
  $clinit_StandardCharsets = emptyMethod;
  $clinit_EmulatedCharset();
  UTF_8 = UTF_8_0;
}

var UTF_8;
function UnsupportedCharsetException(charsetName){
  IllegalArgumentException_0.call(this, charsetName == null?'null':charsetName);
}

defineClass(385, 56, {4:1, 51:1, 56:1, 35:1, 33:1, 385:1}, UnsupportedCharsetException);
var Ljava_nio_charset_UnsupportedCharsetException_2_classLit = createForClass('java.nio.charset', 'UnsupportedCharsetException', 385);
function $equals_1(this$static, o){
  var path;
  if (maskUndefined(this$static) === maskUndefined(o))
    return true;
  if (o == null || Ljava_nio_file_Path_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  path = castTo(o, 95);
  return this$static.pathString == path.pathString;
}

function $getFileName(this$static){
  var filename, idx;
  idx = this$static.pathString.lastIndexOf('/');
  if (idx == -1) {
    return new Path_0(this$static.pathString);
  }
  filename = $substring(this$static.pathString, idx + 1);
  return new Path_0(filename);
}

function $getName_0(this$static, index_0){
  var parts, withoutLeadingSlash;
  if (index_0 < 0) {
    throw toJs(new IllegalArgumentException);
  }
  withoutLeadingSlash = $startsWith(this$static.pathString, '/')?this$static.pathString.substr(1):this$static.pathString;
  parts = $split(withoutLeadingSlash, '/');
  if (index_0 >= parts.length) {
    throw toJs(new IllegalArgumentException);
  }
  return new Path_0(parts[index_0]);
}

function $getNameCount(this$static){
  var withoutLeadingSlash;
  if (this$static.pathString.length == 0) {
    return 1;
  }
  withoutLeadingSlash = $startsWith(this$static.pathString, '/')?this$static.pathString.substr(1):this$static.pathString;
  return 1 + withoutLeadingSlash.length - $replaceAll(withoutLeadingSlash, '\\/', '').length;
}

function $getParent(this$static){
  var index_0, name_0;
  index_0 = this$static.pathString.lastIndexOf('/');
  if (index_0 == -1) {
    return null;
  }
   else if (index_0 == 0) {
    name_0 = $substring(this$static.pathString, index_0);
    if ($equals_0(name_0, '/')) {
      return null;
    }
    return new Path_0('/');
  }
   else {
    return new Path_0($substring_0(this$static.pathString, 0, index_0));
  }
}

function $resolve(this$static, other){
  if ($equals_0(other.substr(0, 1), '/')) {
    return new Path_0(other);
  }
  if ($endsWith(this$static.pathString, '/'))
    return new Path_0(this$static.pathString + ('' + other));
  return new Path_0(this$static.pathString + '/' + other);
}

function $subpath(this$static, from, to){
  var i, parts, sb, withoutLeadingSlash;
  if (from < 0) {
    throw toJs(new IllegalArgumentException);
  }
  withoutLeadingSlash = $startsWith(this$static.pathString, '/')?this$static.pathString.substr(1):this$static.pathString;
  parts = $split(withoutLeadingSlash, '/');
  if (to > parts.length) {
    throw toJs(new IllegalArgumentException);
  }
  sb = new StringBuilder;
  for (i = from; i < to; i++) {
    sb.string += '' + parts[i];
    i < to - 1 && (sb.string += '/' , sb);
  }
  return new Path_0(sb.string);
}

function Path_0(pathString){
  this.pathString = pathString;
}

function of_1(name_0, rest){
  if (rest.length == 0)
    return new Path_0(name_0);
  return new Path_0(name_0 + '/' + castToString($collect_0(new StreamImpl(null, spliterator_5(rest, rest.length)), of_3(new Collectors$lambda$15$Type('/', ''), new Collectors$9methodref$add$Type, new Collectors$10methodref$merge$Type, makeLambdaFunction(Collectors$11methodref$toString$Type.prototype.apply_0, Collectors$11methodref$toString$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [])))));
}

defineClass(95, 1, {95:1}, Path_0);
_.equals_0 = function equals_7(o){
  return $equals_1(this, o);
}
;
_.hashCode_1 = function hashCode_8(){
  return hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.pathString]));
}
;
_.toString_0 = function toString_18(){
  return this.pathString;
}
;
var Ljava_nio_file_Path_2_classLit = createForClass('java.nio.file', 'Path', 95);
function get_0(firstPath){
  var $i, pathString;
  pathString = initUnidimensionalArray(Ljava_lang_String_2_classLit, $intern_17, 2, arguments.length - 1, 6, 1);
  for ($i = 0; $i < arguments.length - 1; $i++) {
    pathString[$i] = arguments[$i + 1];
  }
  if (firstPath == null) {
    throw toJs(new IllegalArgumentException_0('Paths.get() does not support null path'));
  }
  if ($equals_0(firstPath, '')) {
    return new Path_0('');
  }
  return new Path_0(castToString(concat(new StreamImpl(null, new Spliterators$IteratorSpliterator(singleton(firstPath), 1)), stream_6(pathString, pathString.length)).collect_0(of_3(new Collectors$lambda$15$Type('/', ''), new Collectors$9methodref$add$Type, new Collectors$10methodref$merge$Type, makeLambdaFunction(Collectors$11methodref$toString$Type.prototype.apply_0, Collectors$11methodref$toString$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [])))));
}

defineClass(1221, 1, {});
var Ljava_nio_file_Paths_2_classLit = createForClass('java.nio.file', 'Paths', 1221);
defineClass(1245, 1, {});
var Ljava_security_MessageDigestSpi_2_classLit = createForClass('java.security', 'MessageDigestSpi', 1245);
defineClass(1246, 1245, {});
var Ljava_security_MessageDigest_2_classLit = createForClass('java.security', 'MessageDigest', 1246);
function $clinit_SHA256Digest(){
  $clinit_SHA256Digest = emptyMethod;
  K = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [1116352408, 1899447441, -1245643825, -373957723, 961987163, 1508970993, -1841331548, -1424204075, -670586216, 310598401, 607225278, 1426881987, 1925078388, -2132889090, -1680079193, -1046744716, -459576895, -272742522, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, -1740746414, -1473132947, -1341970488, -1084653625, -958395405, -710438585, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, -2117940946, -1838011259, -1564481375, -1474664885, -1035236496, -949202525, -778901479, -694614492, -200395387, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, -2067236844, -1933114872, -1866530822, -1538233109, -1090935817, -965641998]);
  H = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [1779033703, -1150833019, 1013904242, -1521486534, 1359893119, -1694144372, 528734635, 1541459225]);
}

function $computeBlock(this$static){
  var a, b, c, d, e, f, g, h, t, t0, t1, t2;
  for (t0 = 16; t0 < this$static.blockBuffer.length; t0++) {
    this$static.blockBuffer[t0] = $sigma1(this$static.blockBuffer[t0 - 2]) + this$static.blockBuffer[t0 - 7] + $sigma0(this$static.blockBuffer[t0 - 15]) + this$static.blockBuffer[t0 - 16] & -1;
  }
  a = this$static.hash_0[0];
  b = this$static.hash_0[1];
  c = this$static.hash_0[2];
  d = this$static.hash_0[3];
  e = this$static.hash_0[4];
  f = this$static.hash_0[5];
  g = this$static.hash_0[6];
  h = this$static.hash_0[7];
  for (t = 0; t < 64; t++) {
    t1 = h + ((e >>> 6 | e << 26 & -1) ^ (e >>> 11 | e << 21 & -1) ^ (e >>> 25 | e << 7 & -1)) + ((e & f ^ ~e & g) & -1) + K[t] + this$static.blockBuffer[t];
    t2 = ((a >>> 2 | a << 30 & -1) ^ (a >>> 13 | a << 19 & -1) ^ (a >>> 22 | a << 10 & -1)) + (a & b ^ a & c ^ b & c);
    h = g;
    g = f;
    f = e;
    e = d + t1 & -1;
    d = c;
    c = b;
    b = a;
    a = t1 + t2 & -1;
  }
  this$static.hash_0[0] = a + this$static.hash_0[0] & -1;
  this$static.hash_0[1] = b + this$static.hash_0[1] & -1;
  this$static.hash_0[2] = c + this$static.hash_0[2] & -1;
  this$static.hash_0[3] = d + this$static.hash_0[3] & -1;
  this$static.hash_0[4] = e + this$static.hash_0[4] & -1;
  this$static.hash_0[5] = f + this$static.hash_0[5] & -1;
  this$static.hash_0[6] = g + this$static.hash_0[6] & -1;
  this$static.hash_0[7] = h + this$static.hash_0[7] & -1;
  this$static.blockOff = 0;
}

function $doPadding(this$static){
  var length_0;
  length_0 = shl_0(this$static.byteCounter, 3);
  $engineUpdate(this$static, -128);
  while (this$static.wordOff != 0) {
    $engineUpdate(this$static, 0);
  }
  fill_1(this$static.blockBuffer, this$static.blockOff);
  if (this$static.blockOff > 14) {
    $computeBlock(this$static);
    fill_0(this$static.blockBuffer, 0);
  }
  this$static.blockBuffer[14] = toInt_0(shru_0(length_0, 32));
  this$static.blockBuffer[15] = toInt_0(length_0) & -1;
  $computeBlock(this$static);
}

function $engineDigest(this$static){
  var i, result;
  $doPadding(this$static);
  result = initUnidimensionalArray(B_classLit, $intern_28, 8, 32, 15, 1);
  for (i = 0; i < 8; i++) {
    $int2bytes(this$static.hash_0[i], result, i * 4);
  }
  $engineReset(this$static);
  return result;
}

function $engineReset(this$static){
  arraycopy(H, 0, this$static.hash_0, 0, 8);
  fill(this$static.wordBuffer);
  fill_0(this$static.blockBuffer, 0);
  this$static.wordOff = 0;
  this$static.blockOff = 0;
  this$static.byteCounter = 0;
}

function $engineUpdate(this$static, input_0){
  this$static.wordBuffer[this$static.wordOff] = input_0;
  ++this$static.wordOff;
  this$static.byteCounter = add_1(this$static.byteCounter, 1);
  if (this$static.wordOff == 4) {
    this$static.blockBuffer[this$static.blockOff] = (this$static.wordBuffer[0] & 255) << 24 | (this$static.wordBuffer[1] & 255) << 16 | (this$static.wordBuffer[2] & 255) << 8 | this$static.wordBuffer[3] & 255;
    ++this$static.blockOff;
    this$static.blockOff == 16 && $computeBlock(this$static);
    this$static.wordOff = 0;
  }
}

function $engineUpdate_0(this$static, input_0, len){
  var i;
  for (i = 0; i < len; i++) {
    $engineUpdate(this$static, input_0[i]);
  }
}

function $int2bytes(input_0, output, outOff){
  output[outOff] = (input_0 >>> 24 & 255) << 24 >> 24;
  output[outOff + 1] = (input_0 >>> 16 & 255) << 24 >> 24;
  output[outOff + 2] = (input_0 >>> 8 & 255) << 24 >> 24;
  output[outOff + 3] = (input_0 & 255) << 24 >> 24;
}

function $sigma0(x_0){
  return (x_0 >>> 7 | x_0 << 25 & -1) ^ (x_0 >>> 18 | x_0 << 14 & -1) ^ x_0 >>> 3;
}

function $sigma1(x_0){
  return (x_0 >>> 17 | x_0 << 15 & -1) ^ (x_0 >>> 19 | x_0 << 13 & -1) ^ x_0 >>> 10;
}

function SHA256Digest(){
  $clinit_SHA256Digest();
  this.hash_0 = initUnidimensionalArray(I_classLit, $intern_29, 8, 8, 15, 1);
  this.wordBuffer = initUnidimensionalArray(B_classLit, $intern_28, 8, 4, 15, 1);
  this.blockBuffer = initUnidimensionalArray(I_classLit, $intern_29, 8, 64, 15, 1);
  $engineReset(this);
}

defineClass(1183, 1246, {}, SHA256Digest);
_.blockOff = 0;
_.byteCounter = 0;
_.wordOff = 0;
var H, K;
var Ljava_security_SHA256Digest_2_classLit = createForClass('java.security', 'SHA256Digest', 1183);
function DateTimeException(){
  RuntimeException_0.call(this, 'Instant exceeds minimum or maximum instant');
}

defineClass(1153, 35, $intern_7, DateTimeException);
var Ljava_time_DateTimeException_2_classLit = createForClass('java.time', 'DateTimeException', 1153);
function $clinit_Instant(){
  $clinit_Instant = emptyMethod;
  EPOCH = new Instant(0, 0);
}

function Instant(epochSecond, nanos){
  this.seconds = epochSecond;
  this.nanos = nanos;
}

function create_1(seconds, nanoOfSecond){
  if (eq(or_0(seconds, nanoOfSecond), 0)) {
    return EPOCH;
  }
  if (lt(seconds, {l:2364416, m:802897, h:1046782}) || gt(seconds, {l:1407231, m:3361770, h:1793})) {
    throw toJs(new DateTimeException);
  }
  return new Instant(seconds, nanoOfSecond);
}

function ofEpochMilli(epochMilli){
  $clinit_Instant();
  var mos, secs;
  secs = (checkCriticalArithmetic(true) , gte_0(xor_0(epochMilli, $intern_49), 0)?div(epochMilli, $intern_49):sub_1(div(add_1(epochMilli, 1), $intern_49), 1));
  mos = (checkCriticalArithmetic(true) , toInt_0(mod_0(add_1(mod_0(epochMilli, $intern_49), $intern_49), $intern_49)));
  return create_1(secs, mos * $intern_50);
}

defineClass(521, 1, {}, Instant);
_.nanos = 0;
_.seconds = 0;
var EPOCH;
var Ljava_time_Instant_2_classLit = createForClass('java.time', 'Instant', 521);
function $clinit_LocalDate(){
  $clinit_LocalDate = emptyMethod;
  MAX = new LocalDate(999999999, 12, 31);
  MIN = new LocalDate(-999999999, 1, 1);
}

function $compareTo_8(this$static, otherDate){
  var cmp;
  cmp = this$static.year - otherDate.year;
  if (cmp == 0) {
    cmp = this$static.month - otherDate.month;
    cmp == 0 && (cmp = this$static.day - otherDate.day);
  }
  return cmp;
}

function $equals_2(this$static, obj){
  if (maskUndefined(this$static) === maskUndefined(obj)) {
    return true;
  }
  if (instanceOf(obj, 189)) {
    return $compareTo_8(this$static, castTo(obj, 189)) == 0;
  }
  return false;
}

function $hashCode(this$static){
  var dayValue, monthValue, yearValue;
  yearValue = this$static.year;
  monthValue = this$static.month;
  dayValue = this$static.day;
  return yearValue & -2048 ^ (yearValue << 11) + (monthValue << 6) + dayValue;
}

function $plusMonths(this$static, monthsToAdd){
  var calcMonths, monthCount, newMonth, newYear;
  if (compare_1(monthsToAdd, 0) == 0) {
    return this$static;
  }
  monthCount = add_1(mul_0(this$static.year, 12), this$static.month - 1);
  calcMonths = add_1(monthCount, monthsToAdd);
  newYear = (checkCriticalArithmetic(true) , toInt_0(gte_0(xor_0(calcMonths, 12), 0)?div(calcMonths, 12):sub_1(div(add_1(calcMonths, 1), 12), 1)));
  newMonth = (checkCriticalArithmetic(true) , toInt_0(mod_0(add_1(mod_0(calcMonths, 12), 12), 12)) + 1);
  return resolvePreviousValid(newYear, newMonth, this$static.day);
}

function $toEpochDay(this$static){
  var m, total, y_0;
  y_0 = this$static.year;
  m = this$static.month;
  total = 0;
  total = add_1(total, mul_0(365, y_0));
  compare_1(y_0, 0) >= 0?(total = add_1(total, add_1(sub_1(div(add_1(y_0, 3), 4), div(add_1(y_0, 99), 100)), div(add_1(y_0, 399), 400)))):(total = sub_1(total, add_1(sub_1(div(y_0, -4), div(y_0, -100)), div(y_0, -400))));
  total = add_1(total, div(sub_1(mul_0(367, m), 362), 12));
  total = add_1(total, this$static.day - 1);
  if (compare_1(m, 2) > 0) {
    total = sub_1(total, 1);
    isLeapYear(this$static.year) || (total = sub_1(total, 1));
  }
  return sub_1(total, 719528);
}

function $toString_1(this$static){
  var absYear, buf, dayValue, monthValue, yearValue;
  yearValue = this$static.year;
  monthValue = this$static.month;
  dayValue = this$static.day;
  absYear = $wnd.Math.abs(yearValue);
  buf = new StringBuilder_0;
  if (absYear < $intern_49) {
    yearValue < 0?$deleteCharAt((buf.string += yearValue - $intern_21 , buf), 1):$deleteCharAt((buf.string += yearValue + $intern_21 , buf), 0);
  }
   else {
    yearValue > 9999 && (buf.string += '+' , buf);
    buf.string += yearValue;
  }
  return $append_0($append_4($append_0((buf.string += monthValue < 10?'-0':'-' , buf), monthValue), dayValue < 10?'-0':'-'), dayValue).string;
}

function LocalDate(year, month, dayOfMonth){
  this.year = year;
  this.month = month << 16 >> 16;
  this.day = dayOfMonth << 16 >> 16;
}

function isLeapYear(prolepticYear){
  return eq(and_0(prolepticYear, 3), 0) && (neq(mod_0(prolepticYear, 100), 0) || eq(mod_0(prolepticYear, 400), 0));
}

function now_3(){
  $clinit_LocalDate();
  var epochDay, epochSec, now_0, offset;
  now_0 = ofEpochMilli(($clinit_System() , fromDouble_0(Date.now())));
  offset = ($clinit_ZoneOffset() , UTC_0);
  epochSec = add_1(now_0.seconds, offset.totalSeconds);
  epochDay = (checkCriticalArithmetic(true) , gte_0(xor_0(epochSec, $intern_51), 0)?div(epochSec, $intern_51):sub_1(div(add_1(epochSec, 1), $intern_51), 1));
  return ofEpochDay(epochDay);
}

function ofEpochDay(epochDay){
  $clinit_LocalDate();
  var adjust, adjustCycles, dom, doyEst, marchDoy0, marchMonth0, month, year, yearEst, zeroDay;
  zeroDay = add_1(epochDay, 719528);
  zeroDay = sub_1(zeroDay, 60);
  adjust = 0;
  if (compare_1(zeroDay, 0) < 0) {
    adjustCycles = sub_1(div(add_1(zeroDay, 1), 146097), 1);
    adjust = mul_0(adjustCycles, 400);
    zeroDay = add_1(zeroDay, mul_0(neg_0(adjustCycles), 146097));
  }
  yearEst = div(add_1(mul_0(400, zeroDay), 591), 146097);
  doyEst = sub_1(zeroDay, add_1(sub_1(add_1(mul_0(365, yearEst), div(yearEst, 4)), div(yearEst, 100)), div(yearEst, 400)));
  if (compare_1(doyEst, 0) < 0) {
    yearEst = sub_1(yearEst, 1);
    doyEst = sub_1(zeroDay, add_1(sub_1(add_1(mul_0(365, yearEst), div(yearEst, 4)), div(yearEst, 100)), div(yearEst, 400)));
  }
  yearEst = add_1(yearEst, adjust);
  marchDoy0 = toInt_0(doyEst);
  marchMonth0 = (marchDoy0 * 5 + 2) / 153 | 0;
  month = (marchMonth0 + 2) % 12 + 1;
  dom = marchDoy0 - ((marchMonth0 * 306 + 5) / 10 | 0) + 1;
  yearEst = add_1(yearEst, marchMonth0 / 10 | 0);
  year = toInt_0(yearEst);
  return new LocalDate(year, month, dom);
}

function parse_0(text_0){
  $clinit_LocalDate();
  var dayOfMonth, dayOfMonth0, month, month0, parts, trimmed, year, year0;
  try {
    if ($trim(text_0).length == 10) {
      trimmed = $trim(text_0);
      year0 = valueOf_1(__parseAndValidateInt(trimmed.substr(0, 4), 10)).value_0;
      month0 = valueOf_1(__parseAndValidateInt(trimmed.substr(5, 2), 10)).value_0;
      dayOfMonth0 = valueOf_1(__parseAndValidateInt(trimmed.substr(8, 2), 10)).value_0;
      return new LocalDate(year0, month0, dayOfMonth0);
    }
    parts = $split($trim(text_0), '-');
    year = valueOf_1(__parseAndValidateInt(parts[0], 10)).value_0;
    month = valueOf_1(__parseAndValidateInt(parts[1], 10)).value_0;
    dayOfMonth = valueOf_1(__parseAndValidateInt(parts[2], 10)).value_0;
    return new LocalDate(year, month, dayOfMonth);
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 51)) {
      throw toJs(new IllegalStateException_0('Unable to parse:' + text_0));
    }
     else 
      throw toJs($e0);
  }
}

function resolvePreviousValid(year, month, day){
  switch (month) {
    case 2:
      day = $wnd.Math.min(day, eq(and_0(year, 3), 0) && (neq(mod_0(year, 100), 0) || eq(mod_0(year, 400), 0))?29:28);
      break;
    case 4:
    case 6:
    case 9:
    case 11:
      day = $wnd.Math.min(day, 30);
  }
  return new LocalDate(year, month, day);
}

defineClass(189, 1, {57:1, 189:1}, LocalDate);
_.compareTo_0 = function compareTo_6(otherDate){
  return $compareTo_8(this, castTo(otherDate, 189));
}
;
_.equals_0 = function equals_8(obj){
  return $equals_2(this, obj);
}
;
_.hashCode_1 = function hashCode_9(){
  return $hashCode(this);
}
;
_.toString_0 = function toString_19(){
  return $toString_1(this);
}
;
_.day = 0;
_.month = 0;
_.year = 0;
var MAX, MIN;
var Ljava_time_LocalDate_2_classLit = createForClass('java.time', 'LocalDate', 189);
function $clinit_LocalDateTime(){
  $clinit_LocalDateTime = emptyMethod;
  MIN_0 = new LocalDateTime(($clinit_LocalDate() , MIN), ($clinit_LocalTime() , MIN_1));
}

function $compareTo_9(this$static, other){
  var cmp;
  cmp = $compareTo_8(this$static.date, other.date);
  cmp == 0 && (cmp = $compareTo_10(this$static.time, other.time));
  return cmp;
}

function $toEpochSecond(this$static, offset){
  var epochDay, secs;
  epochDay = $toEpochDay(this$static.date);
  secs = add_1(mul_0(epochDay, $intern_51), $toSecondOfDay(this$static.time));
  secs = sub_1(secs, offset.totalSeconds);
  return secs;
}

function $toString_2(this$static){
  return $toString_1(this$static.date) + 'T' + $toString_3(this$static.time);
}

function LocalDateTime(date, time){
  this.date = date;
  this.time = time;
}

function now_4(){
  $clinit_LocalDateTime();
  var now_0, offset;
  now_0 = ofEpochMilli(($clinit_System() , fromDouble_0(Date.now())));
  offset = ($clinit_ZoneOffset() , UTC_0);
  return ofEpochSecond(now_0.seconds, now_0.nanos, offset);
}

function ofEpochSecond(epochSecond, nanoOfSecond, offset){
  $clinit_LocalDateTime();
  var date, localEpochDay, localSecond, secsOfDay, time;
  localSecond = add_1(epochSecond, offset.totalSeconds);
  localEpochDay = (checkCriticalArithmetic(true) , gte_0(xor_0(localSecond, $intern_51), 0)?div(localSecond, $intern_51):sub_1(div(add_1(localSecond, 1), $intern_51), 1));
  secsOfDay = (checkCriticalArithmetic(true) , toInt_0(mod_0(add_1(mod_0(localSecond, $intern_51), $intern_51), $intern_51)));
  date = ofEpochDay(localEpochDay);
  time = ofNanoOfDay(add_1(mul_0(secsOfDay, $intern_37), nanoOfSecond));
  return new LocalDateTime(date, time);
}

defineClass(201, 1, {57:1, 201:1}, LocalDateTime);
_.compareTo_0 = function compareTo_7(other){
  return $compareTo_9(this, castTo(other, 201));
}
;
_.compareTo = function compareTo_8(other){
  return $compareTo_9(this, other);
}
;
_.equals_0 = function equals_9(obj){
  var other;
  if (this === obj) {
    return true;
  }
  if (instanceOf(obj, 201)) {
    other = castTo(obj, 201);
    return $equals_2(this.date, other.date) && $equals_3(this.time, other.time);
  }
  return false;
}
;
_.hashCode_1 = function hashCode_10(){
  var nod;
  return $hashCode(this.date) ^ (nod = $toNanoOfDay(this.time) , toInt_0(xor_0(nod, shru_0(nod, 32))));
}
;
_.toEpochSecond = function toEpochSecond(offset){
  return $toEpochSecond(this, offset);
}
;
_.toString_0 = function toString_20(){
  return $toString_2(this);
}
;
var MIN_0;
var Ljava_time_LocalDateTime_2_classLit = createForClass('java.time', 'LocalDateTime', 201);
function $clinit_LocalTime(){
  $clinit_LocalTime = emptyMethod;
  var i;
  HOURS = initUnidimensionalArray(Ljava_time_LocalTime_2_classLit, $intern_0, 228, 24, 0, 1);
  for (i = 0; i < HOURS.length; i++) {
    HOURS[i] = new LocalTime(i, 0, 0, 0);
  }
  MIN_1 = HOURS[0];
  new LocalTime(23, 59, 59, 999999999);
}

function $compareTo_10(this$static, other){
  var cmp;
  cmp = compare_4(this$static.hour, other.hour);
  if (cmp == 0) {
    cmp = compare_4(this$static.minute, other.minute);
    if (cmp == 0) {
      cmp = compare_4(this$static.second, other.second);
      cmp == 0 && (cmp = compare_4(this$static.nano, other.nano));
    }
  }
  return cmp;
}

function $equals_3(this$static, obj){
  var other;
  if (maskUndefined(this$static) === maskUndefined(obj)) {
    return true;
  }
  if (instanceOf(obj, 228)) {
    other = castTo(obj, 228);
    return this$static.hour == other.hour && this$static.minute == other.minute && this$static.second == other.second && this$static.nano == other.nano;
  }
  return false;
}

function $toNanoOfDay(this$static){
  var total;
  total = mul_0(this$static.hour, $intern_52);
  total = add_1(total, mul_0(this$static.minute, $intern_53));
  total = add_1(total, mul_0(this$static.second, $intern_37));
  total = add_1(total, this$static.nano);
  return total;
}

function $toSecondOfDay(this$static){
  var total;
  total = this$static.hour * 3600;
  total += this$static.minute * 60;
  total += this$static.second;
  return total;
}

function $toString_3(this$static){
  var sb;
  sb = new StringBuilder;
  this$static.hour < 10 && (sb.string += '0' , sb);
  $append_0(sb, this$static.hour);
  sb.string += ':';
  this$static.minute < 10 && (sb.string += '0' , sb);
  $append_0(sb, this$static.minute);
  sb.string += ':';
  this$static.second < 10 && (sb.string += '0' , sb);
  $append_0(sb, this$static.second);
  return sb.string;
}

function LocalTime(hour, minute, second, nanoOfSecond){
  this.hour = hour << 24 >> 24;
  this.minute = minute << 24 >> 24;
  this.second = second << 24 >> 24;
  this.nano = nanoOfSecond;
}

function create_2(hour, minute, second, nanoOfSecond){
  if ((minute | second | nanoOfSecond) == 0) {
    return HOURS[hour];
  }
  return new LocalTime(hour, minute, second, nanoOfSecond);
}

function ofNanoOfDay(nanoOfDay){
  $clinit_LocalTime();
  var hours, minutes, seconds;
  hours = toInt_0(div(nanoOfDay, $intern_52));
  nanoOfDay = sub_1(nanoOfDay, mul_0(hours, $intern_52));
  minutes = toInt_0(div(nanoOfDay, $intern_53));
  nanoOfDay = sub_1(nanoOfDay, mul_0(minutes, $intern_53));
  seconds = toInt_0(div(nanoOfDay, $intern_37));
  nanoOfDay = sub_1(nanoOfDay, mul_0(seconds, $intern_37));
  return create_2(hours, minutes, seconds, toInt_0(nanoOfDay));
}

defineClass(228, 1, {57:1, 228:1}, LocalTime);
_.compareTo_0 = function compareTo_9(other){
  return $compareTo_10(this, castTo(other, 228));
}
;
_.equals_0 = function equals_10(obj){
  return $equals_3(this, obj);
}
;
_.hashCode_1 = function hashCode_11(){
  var nod;
  return nod = $toNanoOfDay(this) , toInt_0(xor_0(nod, shru_0(nod, 32)));
}
;
_.toString_0 = function toString_21(){
  return $toString_3(this);
}
;
_.hour = 0;
_.minute = 0;
_.nano = 0;
_.second = 0;
var HOURS, MIN_1;
var Ljava_time_LocalTime_2_classLit = createForClass('java.time', 'LocalTime', 228);
defineClass(1239, 1, {});
var Ljava_time_ZoneId_2_classLit = createForClass('java.time', 'ZoneId', 1239);
function $clinit_ZoneOffset(){
  $clinit_ZoneOffset = emptyMethod;
  UTC_0 = new ZoneOffset;
}

function ZoneOffset(){
  this.totalSeconds = 0;
}

defineClass(1022, 1239, {}, ZoneOffset);
_.totalSeconds = 0;
var UTC_0;
var Ljava_time_ZoneOffset_2_classLit = createForClass('java.time', 'ZoneOffset', 1022);
function $containsKey(this$static, key){
  return instanceOfString(key)?key == null?!!$getEntry(this$static.hashCodeMap, null):$contains_2(this$static.stringMap, key):!!$getEntry(this$static.hashCodeMap, key);
}

function $containsValue(this$static, value_0){
  return $containsValue_0(this$static, value_0, this$static.stringMap) || $containsValue_0(this$static, value_0, this$static.hashCodeMap);
}

function $containsValue_0(this$static, value_0, entries){
  var entry, entry$iterator;
  for (entry$iterator = entries.iterator(); entry$iterator.hasNext_0();) {
    entry = castTo(entry$iterator.next_1(), 40);
    if (this$static.equals_1(value_0, entry.getValue())) {
      return true;
    }
  }
  return false;
}

function $get(this$static, key){
  return instanceOfString(key)?$getStringValue(this$static, key):getEntryValueOrNull($getEntry(this$static.hashCodeMap, key));
}

function $getStringValue(this$static, key){
  return key == null?getEntryValueOrNull($getEntry(this$static.hashCodeMap, null)):$get_4(this$static.stringMap, key);
}

function $put(this$static, key, value_0){
  return instanceOfString(key)?$putStringValue(this$static, key, value_0):$put_3(this$static.hashCodeMap, key, value_0);
}

function $putStringValue(this$static, key, value_0){
  return key == null?$put_3(this$static.hashCodeMap, null, value_0):$put_4(this$static.stringMap, key, value_0);
}

function $remove(this$static, key){
  return instanceOfString(key)?$removeStringValue(this$static, key):$remove_5(this$static.hashCodeMap, key);
}

function $removeStringValue(this$static, key){
  return key == null?$remove_5(this$static.hashCodeMap, null):$remove_6(this$static.stringMap, key);
}

function $reset(this$static){
  this$static.hashCodeMap = new InternalHashCodeMap(this$static);
  this$static.stringMap = new InternalStringMap(this$static);
  structureChanged(this$static);
}

function $size(this$static){
  return this$static.hashCodeMap.size_0 + this$static.stringMap.size_0;
}

function AbstractHashMap(ignored, alsoIgnored){
  checkCriticalArgument_0(ignored >= 0, 'Negative initial capacity');
  checkCriticalArgument_0(alsoIgnored >= 0, 'Non-positive load factor');
  $reset(this);
}

defineClass(308, 1227, $intern_24);
_.clear = function clear_2(){
  $reset(this);
}
;
_.containsKey = function containsKey_0(key){
  return $containsKey(this, key);
}
;
_.containsValue = function containsValue_0(value_0){
  return $containsValue(this, value_0);
}
;
_.entrySet_0 = function entrySet(){
  return new AbstractHashMap$EntrySet(this);
}
;
_.get = function get_2(key){
  return $get(this, key);
}
;
_.put = function put_0(key, value_0){
  return $put(this, key, value_0);
}
;
_.remove = function remove_2(key){
  return $remove(this, key);
}
;
_.size = function size_3(){
  return $size(this);
}
;
var Ljava_util_AbstractHashMap_2_classLit = createForClass('java.util', 'AbstractHashMap', 308);
function $contains(this$static, o){
  if (instanceOf(o, 40)) {
    return $containsEntry(this$static.this$01, castTo(o, 40));
  }
  return false;
}

function AbstractHashMap$EntrySet(this$0){
  this.this$01 = this$0;
}

defineClass(196, $intern_25, $intern_26, AbstractHashMap$EntrySet);
_.clear = function clear_3(){
  this.this$01.clear();
}
;
_.contains = function contains_0(o){
  return $contains(this, o);
}
;
_.iterator = function iterator_0(){
  return new AbstractHashMap$EntrySetIterator(this.this$01);
}
;
_.remove = function remove_3(entry){
  var key;
  if ($contains(this, entry)) {
    key = castTo(entry, 40).getKey();
    this.this$01.remove(key);
    return true;
  }
  return false;
}
;
_.size = function size_4(){
  return this.this$01.size();
}
;
var Ljava_util_AbstractHashMap$EntrySet_2_classLit = createForClass('java.util', 'AbstractHashMap/EntrySet', 196);
function $computeHasNext(this$static){
  if (this$static.current.hasNext_0()) {
    return true;
  }
  if (this$static.current != this$static.stringMapEntries) {
    return false;
  }
  this$static.current = new InternalHashCodeMap$1(this$static.this$01.hashCodeMap);
  return this$static.current.hasNext_0();
}

function AbstractHashMap$EntrySetIterator(this$0){
  this.this$01 = this$0;
  this.stringMapEntries = new InternalStringMap$1(this.this$01.stringMap);
  this.current = this.stringMapEntries;
  this.hasNext = $computeHasNext(this);
  this.$modCount = this$0.$modCount;
}

defineClass(900, 1, {}, AbstractHashMap$EntrySetIterator);
_.forEachRemaining = function forEachRemaining(consumer){
  $forEachRemaining(this, consumer);
}
;
_.next_1 = function next_2(){
  var rv;
  return checkStructuralChange(this.this$01, this) , checkCriticalElement(this.hasNext) , this.last = this.current , rv = castTo(this.current.next_1(), 40) , this.hasNext = $computeHasNext(this) , rv;
}
;
_.hasNext_0 = function hasNext(){
  return this.hasNext;
}
;
_.remove_0 = function remove_4(){
  checkCriticalState(!!this.last);
  checkStructuralChange(this.this$01, this);
  this.last.remove_0();
  this.last = null;
  this.hasNext = $computeHasNext(this);
  recordLastKnownStructure(this.this$01, this);
}
;
_.hasNext = false;
var Ljava_util_AbstractHashMap$EntrySetIterator_2_classLit = createForClass('java.util', 'AbstractHashMap/EntrySetIterator', 900);
defineClass(1241, 1, $intern_54);
_.equals_0 = function equals_15(other){
  var entry;
  if (!instanceOf(other, 40)) {
    return false;
  }
  entry = castTo(other, 40);
  return equals_28(this.getKey(), entry.getKey()) && equals_28(this.getValue(), entry.getValue());
}
;
_.hashCode_1 = function hashCode_16(){
  return hashCode_27(this.getKey()) ^ hashCode_27(this.getValue());
}
;
_.toString_0 = function toString_25(){
  return this.getKey() + '=' + this.getValue();
}
;
var Ljava_util_AbstractMapEntry_2_classLit = createForClass('java.util', 'AbstractMapEntry', 1241);
function $containsEntry_0(this$static, entry){
  var key, lookupEntry;
  key = entry.getKey();
  lookupEntry = $getEntry_0(this$static, key);
  return !!lookupEntry && equals_28(lookupEntry.value_0, entry.getValue());
}

function $containsKey_0(this$static, k){
  var key;
  key = k;
  return !!$getEntry_0(this$static, key);
}

function $get_0(this$static, k){
  var key;
  key = k;
  return getEntryValueOrNull($getEntry_0(this$static, key));
}

defineClass(1238, 1227, {68:1, 39:1});
_.containsEntry = function containsEntry_0(entry){
  return $containsEntry_0(this, entry);
}
;
_.containsKey = function containsKey_1(k){
  return $containsKey_0(this, k);
}
;
_.entrySet_0 = function entrySet_0(){
  return new AbstractNavigableMap$EntrySet(this);
}
;
_.get = function get_4(k){
  return $get_0(this, k);
}
;
_.keySet = function keySet_0(){
  return new AbstractNavigableMap$NavigableKeySet(this);
}
;
var Ljava_util_AbstractNavigableMap_2_classLit = createForClass('java.util', 'AbstractNavigableMap', 1238);
function AbstractNavigableMap$EntrySet(this$0){
  this.this$01_0 = this$0;
}

defineClass(488, $intern_25, $intern_26, AbstractNavigableMap$EntrySet);
_.contains = function contains_3(o){
  return instanceOf(o, 40) && $containsEntry_0(this.this$01_0, castTo(o, 40));
}
;
_.iterator = function iterator_4(){
  return new TreeMap$EntryIterator(this.this$01_0);
}
;
_.remove = function remove_12(o){
  var entry;
  if (instanceOf(o, 40)) {
    entry = castTo(o, 40);
    return $removeEntry(this.this$01_0, entry);
  }
  return false;
}
;
_.size = function size_10(){
  return this.this$01_0.size_0;
}
;
var Ljava_util_AbstractNavigableMap$EntrySet_2_classLit = createForClass('java.util', 'AbstractNavigableMap/EntrySet', 488);
function AbstractNavigableMap$NavigableKeySet(map_0){
  this.map_0 = map_0;
}

defineClass(417, $intern_25, $intern_26, AbstractNavigableMap$NavigableKeySet);
_.spliterator_0 = function spliterator_3(){
  return new SortedSet$1(this);
}
;
_.clear = function clear_7(){
  $clear_3(this.map_0);
}
;
_.contains = function contains_4(o){
  return $containsKey_0(this.map_0, o);
}
;
_.iterator = function iterator_5(){
  var entryIterator;
  return entryIterator = new TreeMap$EntryIterator((new TreeMap$EntrySet(this.map_0)).this$01_0) , new AbstractNavigableMap$NavigableKeySet$1(entryIterator);
}
;
_.remove = function remove_13(o){
  if ($containsKey_0(this.map_0, o)) {
    $remove_9(this.map_0, o);
    return true;
  }
  return false;
}
;
_.size = function size_11(){
  return this.map_0.size_0;
}
;
var Ljava_util_AbstractNavigableMap$NavigableKeySet_2_classLit = createForClass('java.util', 'AbstractNavigableMap/NavigableKeySet', 417);
function AbstractNavigableMap$NavigableKeySet$1(val$entryIterator){
  this.val$entryIterator2 = val$entryIterator;
}

defineClass(489, 1, {}, AbstractNavigableMap$NavigableKeySet$1);
_.forEachRemaining = function forEachRemaining_3(consumer){
  $forEachRemaining(this, consumer);
}
;
_.hasNext_0 = function hasNext_3(){
  return $hasNext(this.val$entryIterator2.iter);
}
;
_.next_1 = function next_6(){
  var entry;
  entry = $next_5(this.val$entryIterator2);
  return entry.getKey();
}
;
_.remove_0 = function remove_14(){
  $remove_10(this.val$entryIterator2);
}
;
var Ljava_util_AbstractNavigableMap$NavigableKeySet$1_2_classLit = createForClass('java.util', 'AbstractNavigableMap/NavigableKeySet/1', 489);
defineClass(1244, 1237, $intern_23);
_.addAtIndex = function add_10(index_0, element){
  var iter;
  iter = this.listIterator(index_0);
  iter.add_0(element);
}
;
_.addAllAtIndex = function addAll_1(index_0, c){
  var e, e$iterator, iter, modified;
  checkCriticalNotNull(c);
  modified = false;
  iter = this.listIterator(index_0);
  for (e$iterator = c.iterator(); e$iterator.hasNext_0();) {
    e = e$iterator.next_1();
    iter.add_0(e);
    modified = true;
  }
  return modified;
}
;
_.getAtIndex = function get_5(index_0){
  var iter;
  iter = this.listIterator(index_0);
  try {
    return iter.next_1();
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 254)) {
      throw toJs(new IndexOutOfBoundsException_0("Can't get element " + index_0));
    }
     else 
      throw toJs($e0);
  }
}
;
_.iterator = function iterator_6(){
  return $listIterator(this, 0);
}
;
_.removeAtIndex = function remove_15(index_0){
  var iter, old;
  iter = this.listIterator(index_0);
  try {
    old = iter.next_1();
    iter.remove_0();
    return old;
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 254)) {
      throw toJs(new IndexOutOfBoundsException_0("Can't remove element " + index_0));
    }
     else 
      throw toJs($e0);
  }
}
;
_.setAtIndex = function set_5(index_0, element){
  var iter, old;
  iter = this.listIterator(index_0);
  try {
    old = iter.next_1();
    iter.set_1(element);
    return old;
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 254)) {
      throw toJs(new IndexOutOfBoundsException_0("Can't set element " + index_0));
    }
     else 
      throw toJs($e0);
  }
}
;
var Ljava_util_AbstractSequentialList_2_classLit = createForClass('java.util', 'AbstractSequentialList', 1244);
function Arrays$0methodref$compare$Type(){
}

defineClass(3021, $wnd.Function, {}, Arrays$0methodref$compare$Type);
_.compare = function compare_6(d1, d2){
  return compare_3(d1, d2);
}
;
function $toArray_0(this$static, out){
  var i, size_0;
  size_0 = this$static.array.length;
  out.length < size_0 && (out = stampJavaTypeInfo_1(new Array(size_0), out));
  for (i = 0; i < size_0; ++i) {
    setCheck(out, i, this$static.array[i]);
  }
  out.length > size_0 && setCheck(out, size_0, null);
  return out;
}

function Arrays$ArrayList(array){
  checkCriticalNotNull(array);
  this.array = array;
}

defineClass(36, 1237, $intern_27, Arrays$ArrayList);
_.contains = function contains_6(o){
  return $indexOf_0(this, o) != -1;
}
;
_.forEach = function forEach_2(consumer){
  var e, e$array, e$index, e$max;
  checkCriticalNotNull(consumer);
  for (e$array = this.array , e$index = 0 , e$max = e$array.length; e$index < e$max; ++e$index) {
    e = e$array[e$index];
    consumer.accept(e);
  }
}
;
_.getAtIndex = function get_7(index_0){
  return checkCriticalElementIndex(index_0, this.array.length) , this.array[index_0];
}
;
_.setAtIndex = function set_7(index_0, value_0){
  var was;
  was = (checkCriticalElementIndex(index_0, this.array.length) , this.array[index_0]);
  setCheck(this.array, index_0, value_0);
  return was;
}
;
_.size = function size_13(){
  return this.array.length;
}
;
_.toArray = function toArray_3(){
  return $toArray_0(this, initUnidimensionalArray(Ljava_lang_Object_2_classLit, $intern_0, 1, this.array.length, 5, 1));
}
;
_.toArray_0 = function toArray_4(out){
  return $toArray_0(this, out);
}
;
var Ljava_util_Arrays$ArrayList_2_classLit = createForClass('java.util', 'Arrays/ArrayList', 36);
function $encode(src_0){
  var base64, str;
  base64 = ($clinit_Base64Coder() , encode_0(src_0, regularMap.encodingMap));
  str = valueOf_5(base64, 0, base64.length);
  return $getBytes(str, ($clinit_EmulatedCharset() , UTF_8_0));
}

function $encodeToString(src_0){
  var base64;
  base64 = ($clinit_Base64Coder() , encode_0(src_0, regularMap.encodingMap));
  return valueOf_5(base64, 0, base64.length);
}

function $clear_0(this$static, bitIndex){
  var index_0, word;
  checkIndex(bitIndex);
  index_0 = bitIndex / 31 | 0;
  if (index_0 >= this$static.array.length) {
    return;
  }
  word = this$static.array[index_0] | 0;
  word != 0 && (this$static.array[index_0] = word & ~(1 << bitIndex % 31) & $intern_1);
}

function $equals_5(this$static, obj){
  var index_0, lastIndex, other;
  if (maskUndefined(this$static) === maskUndefined(obj)) {
    return true;
  }
  if (!instanceOf(obj, 180)) {
    return false;
  }
  other = castTo(obj, 180);
  lastIndex = lastSetWordIndex(this$static.array);
  if (lastIndex != lastSetWordIndex(other.array)) {
    return false;
  }
  for (index_0 = 0; index_0 <= lastIndex; index_0++) {
    if ((this$static.array[index_0] | 0) != (other.array[index_0] | 0)) {
      return false;
    }
  }
  return true;
}

function $get_2(this$static, bitIndex){
  var index_0;
  checkIndex(bitIndex);
  index_0 = bitIndex / 31 | 0;
  return index_0 < this$static.array.length && ((this$static.array[index_0] | 0) >>> bitIndex % 31 & 1) == 1;
}

function $length(this$static){
  var lastIndex, word;
  lastIndex = lastSetWordIndex(this$static.array);
  if (lastIndex == -1) {
    return 0;
  }
  word = this$static.array[lastIndex] | 0;
  return lastIndex * 31 + (32 - numberOfLeadingZeros_0(word));
}

function $nextSetBit(this$static, fromIndex){
  var index_0, length_0, word;
  checkIndex(fromIndex);
  index_0 = fromIndex / 31 | 0;
  length_0 = this$static.array.length;
  if (index_0 >= length_0) {
    return -1;
  }
  word = (this$static.array[index_0] | 0) & $intern_1 << fromIndex % 31;
  while (word == 0) {
    if (++index_0 >= length_0) {
      return -1;
    }
    word = this$static.array[index_0] | 0;
  }
  return index_0 * 31 + numberOfTrailingZeros(word);
}

function $set_1(this$static, bitIndex){
  var index_0;
  checkIndex(bitIndex);
  index_0 = bitIndex / 31 | 0;
  maybeGrowArrayToIndex(this$static.array, index_0);
  this$static.array[index_0] = this$static.array[index_0] | 0 | 1 << bitIndex % 31;
}

function $toByteArray_1(this$static){
  var bitOffset, bytes, i, nbits, nbytes;
  nbits = $length(this$static);
  nbytes = nbits / 8 | 0;
  nbits % 8 != 0 && ++nbytes;
  bytes = initUnidimensionalArray(B_classLit, $intern_28, 8, nbytes, 15, 1);
  bitOffset = 0;
  for (i = 0; i < nbytes; i++) {
    bytes[i] = getByte(this$static.array, bitOffset);
    bitOffset += 8;
  }
  return bytes;
}

function BitSet(){
  this.array = initUnidimensionalArray(I_classLit, $intern_29, 8, 0, 15, 1);
}

function BitSet_0(array){
  this.array = array;
}

function addByte(words, bits, bitIndex){
  var bitOffset, first, second, wordIndex;
  if (bits != 0) {
    wordIndex = bitIndex / 31 | 0;
    bitOffset = bitIndex % 31;
    first = (bits & 255) << bitOffset & $intern_1;
    first != 0 && (words[wordIndex] = words[wordIndex] | 0 | first);
    second = bitOffset == 0?0:(bits & 255) >>> 31 - bitOffset;
    second != 0 && (words[wordIndex + 1] = words[wordIndex + 1] | 0 | second);
  }
}

function checkIndex(bitIndex){
  if (bitIndex < 0) {
    throw toJs(new IndexOutOfBoundsException_0('bitIndex < 0: ' + bitIndex));
  }
}

function getByte(words, bitIndex){
  var b, bitOffset, leftBits, word, wordIndex;
  wordIndex = bitIndex / 31 | 0;
  if (wordIndex >= words.length) {
    return 0;
  }
  bitOffset = bitIndex % 31;
  word = words[wordIndex] | 0;
  b = word >>> bitOffset;
  leftBits = -23 + bitOffset;
  if (leftBits > 0 && wordIndex + 1 < words.length) {
    word = words[wordIndex + 1] | 0;
    if (word != 0) {
      word &= ~($intern_1 << leftBits);
      word <<= 8 - leftBits;
      b |= word;
    }
  }
  return (b & 255) << 24 >> 24;
}

function lastSetWordIndex(array){
  var i;
  i = array.length - 1;
  for (; i >= 0 && (array[i] | 0) == 0; --i)
  ;
  return i;
}

function maybeGrowArrayToIndex(array, newMaxIndex){
  var newLength;
  newLength = newMaxIndex + 1;
  newLength > array.length && (array.length = newLength);
}

function valueOf_7(words){
  var array, bitIndex, i, len;
  len = words.length;
  while (len > 0 && words[len - 1] == 0) {
    --len;
  }
  array = initUnidimensionalArray(I_classLit, $intern_29, 8, len * 8, 15, 1);
  bitIndex = 0;
  for (i = 0; i < len; i++) {
    addByte(array, words[i], bitIndex);
    bitIndex += 8;
  }
  return new BitSet_0(array);
}

defineClass(180, 1, {180:1}, BitSet, BitSet_0);
_.equals_0 = function equals_19(obj){
  return $equals_5(this, obj);
}
;
_.hashCode_1 = function hashCode_20(){
  var hash, i, lastIndex, value_0;
  lastIndex = lastSetWordIndex(this.array);
  hash = -2128831035 ^ lastIndex;
  for (i = 0; i <= lastIndex; i++) {
    value_0 = this.array[i] | 0;
    hash = hash * $intern_55 & -1 ^ value_0 & 255;
    hash = hash * $intern_55 & -1 ^ value_0 >>> 8 & 255;
    hash = hash * $intern_55 & -1 ^ value_0 >>> 16 & 255;
    hash = hash * $intern_55 & -1 ^ value_0 >>> 24;
  }
  return hash;
}
;
_.toString_0 = function toString_26(){
  var next, sb;
  if ($length(this) == 0) {
    return '{}';
  }
  sb = new StringBuilder_1('{');
  next = $nextSetBit(this, 0);
  sb.string += next;
  while ((next = $nextSetBit(this, next + 1)) != -1) {
    sb.string += ', ';
    sb.string += next;
  }
  sb.string += '}';
  return sb.string;
}
;
var Ljava_util_BitSet_2_classLit = createForClass('java.util', 'BitSet', 180);
function Collections$SingletonList(element){
  this.element = element;
}

defineClass(84, 1237, $intern_56, Collections$SingletonList);
_.contains = function contains_9(item_0){
  return equals_28(this.element, item_0);
}
;
_.getAtIndex = function get_10(index_0){
  checkCriticalElementIndex(index_0, 1);
  return this.element;
}
;
_.size = function size_17(){
  return 1;
}
;
var Ljava_util_Collections$SingletonList_2_classLit = createForClass('java.util', 'Collections/SingletonList', 84);
function Collections$UnmodifiableCollection(coll){
  this.coll = coll;
}

defineClass(412, 1, {54:1}, Collections$UnmodifiableCollection);
_.forEach = function forEach_3(action){
  $forEach(this, action);
}
;
_.spliterator_0 = function spliterator_6(){
  return new Spliterators$IteratorSpliterator(this, 0);
}
;
_.stream = function stream_8(){
  return new StreamImpl(null, this.spliterator_0());
}
;
_.add = function add_14(o){
  throw toJs(new UnsupportedOperationException);
}
;
_.addAll = function addAll_4(c){
  throw toJs(new UnsupportedOperationException);
}
;
_.clear = function clear_9(){
  throw toJs(new UnsupportedOperationException);
}
;
_.contains = function contains_10(o){
  return this.coll.contains(o);
}
;
_.containsAll = function containsAll_0(c){
  return this.coll.containsAll(c);
}
;
_.isEmpty = function isEmpty_2(){
  return this.coll.isEmpty();
}
;
_.iterator = function iterator_10(){
  return new Collections$UnmodifiableCollectionIterator(this.coll.iterator());
}
;
_.remove = function remove_20(o){
  throw toJs(new UnsupportedOperationException);
}
;
_.removeAll = function removeAll_1(c){
  throw toJs(new UnsupportedOperationException);
}
;
_.retainAll = function retainAll_0(c){
  throw toJs(new UnsupportedOperationException);
}
;
_.size = function size_18(){
  return this.coll.size();
}
;
_.toArray = function toArray_5(){
  return this.coll.toArray();
}
;
_.toArray_0 = function toArray_6(a){
  return this.coll.toArray_0(a);
}
;
_.toString_0 = function toString_27(){
  return toString_5(this.coll);
}
;
var Ljava_util_Collections$UnmodifiableCollection_2_classLit = createForClass('java.util', 'Collections/UnmodifiableCollection', 412);
function $remove_2(){
  throw toJs(new UnsupportedOperationException);
}

function Collections$UnmodifiableCollectionIterator(it){
  this.it = it;
}

defineClass(938, 1, {}, Collections$UnmodifiableCollectionIterator);
_.forEachRemaining = function forEachRemaining_6(consumer){
  $forEachRemaining(this, consumer);
}
;
_.hasNext_0 = function hasNext_6(){
  return this.it.hasNext_0();
}
;
_.next_1 = function next_11(){
  return this.it.next_1();
}
;
_.remove_0 = function remove_21(){
  $remove_2();
}
;
var Ljava_util_Collections$UnmodifiableCollectionIterator_2_classLit = createForClass('java.util', 'Collections/UnmodifiableCollectionIterator', 938);
function Collections$UnmodifiableList(list){
  Collections$UnmodifiableCollection.call(this, list);
  this.list = list;
}

defineClass(413, 412, $intern_23, Collections$UnmodifiableList);
_.spliterator_0 = function spliterator_7(){
  return new Spliterators$IteratorSpliterator(this, 16);
}
;
_.addAtIndex = function add_15(index_0, element){
  throw toJs(new UnsupportedOperationException);
}
;
_.addAllAtIndex = function addAll_5(index_0, c){
  throw toJs(new UnsupportedOperationException);
}
;
_.equals_0 = function equals_20(o){
  return equals_Ljava_lang_Object__Z__devirtual$(this.list, o);
}
;
_.getAtIndex = function get_11(index_0){
  return this.list.getAtIndex(index_0);
}
;
_.hashCode_1 = function hashCode_23(){
  return hashCode__I__devirtual$(this.list);
}
;
_.indexOf = function indexOf_1(o){
  return this.list.indexOf(o);
}
;
_.isEmpty = function isEmpty_3(){
  return this.list.isEmpty();
}
;
_.lastIndexOf = function lastIndexOf_1(o){
  return this.list.lastIndexOf(o);
}
;
_.removeAtIndex = function remove_22(index_0){
  throw toJs(new UnsupportedOperationException);
}
;
_.setAtIndex = function set_9(index_0, element){
  throw toJs(new UnsupportedOperationException);
}
;
_.subList = function subList_0(fromIndex, toIndex){
  return new Collections$UnmodifiableList(this.list.subList(fromIndex, toIndex));
}
;
var Ljava_util_Collections$UnmodifiableList_2_classLit = createForClass('java.util', 'Collections/UnmodifiableList', 413);
function $containsKey_1(this$static, key){
  return this$static.map_0.containsKey(key);
}

function $entrySet(this$static){
  !this$static.entrySet && (this$static.entrySet = new Collections$UnmodifiableMap$UnmodifiableEntrySet(this$static.map_0.entrySet_0()));
  return this$static.entrySet;
}

function $get_3(this$static, key){
  return this$static.map_0.get(key);
}

function $getOrDefault_0(this$static, key, defaultValue){
  var currentValue;
  return currentValue = this$static.map_0.get(key) , currentValue == null && !this$static.map_0.containsKey(key)?defaultValue:currentValue;
}

function $keySet(this$static){
  !this$static.keySet_0 && (this$static.keySet_0 = new Collections$UnmodifiableSet(this$static.map_0.keySet()));
  return this$static.keySet_0;
}

function $put_0(){
  throw toJs(new UnsupportedOperationException);
}

function $values(this$static){
  !this$static.values_0 && (this$static.values_0 = new Collections$UnmodifiableCollection(this$static.map_0.values()));
  return this$static.values_0;
}

function Collections$UnmodifiableMap(map_0){
  this.map_0 = map_0;
}

defineClass(275, 1, $intern_24, Collections$UnmodifiableMap);
_.forEach_0 = function forEach_4(consumer){
  $forEach_1(this, consumer);
}
;
_.getOrDefault = function getOrDefault_0(key, defaultValue){
  return $getOrDefault_0(this, key, defaultValue);
}
;
_.merge = function merge_2(key, value_0, remappingFunction){
  return $merge(this, key, value_0, remappingFunction);
}
;
_.putIfAbsent = function putIfAbsent_0(key, value_0){
  var currentValue;
  return currentValue = this.map_0.get(key) , currentValue != null?currentValue:$put_0();
}
;
_.replace = function replace_1(key, value_0){
  return this.map_0.containsKey(key)?$put_0():null;
}
;
_.clear = function clear_10(){
  throw toJs(new UnsupportedOperationException);
}
;
_.containsKey = function containsKey_3(key){
  return $containsKey_1(this, key);
}
;
_.containsValue = function containsValue_2(val){
  return this.map_0.containsValue(val);
}
;
_.entrySet_0 = function entrySet_2(){
  return $entrySet(this);
}
;
_.equals_0 = function equals_21(o){
  return equals_Ljava_lang_Object__Z__devirtual$(this.map_0, o);
}
;
_.get = function get_12(key){
  return $get_3(this, key);
}
;
_.hashCode_1 = function hashCode_24(){
  return hashCode__I__devirtual$(this.map_0);
}
;
_.isEmpty = function isEmpty_4(){
  return this.map_0.isEmpty();
}
;
_.keySet = function keySet_2(){
  return $keySet(this);
}
;
_.put = function put_1(key, value_0){
  return $put_0();
}
;
_.putAll = function putAll_0(t){
  throw toJs(new UnsupportedOperationException);
}
;
_.remove = function remove_23(key){
  throw toJs(new UnsupportedOperationException);
}
;
_.size = function size_19(){
  return this.map_0.size();
}
;
_.toString_0 = function toString_28(){
  return toString_5(this.map_0);
}
;
_.values = function values_3(){
  return $values(this);
}
;
var Ljava_util_Collections$UnmodifiableMap_2_classLit = createForClass('java.util', 'Collections/UnmodifiableMap', 275);
function Collections$UnmodifiableSet(set_0){
  Collections$UnmodifiableCollection.call(this, set_0);
}

defineClass(414, 412, $intern_26, Collections$UnmodifiableSet);
_.spliterator_0 = function spliterator_8(){
  return new Spliterators$IteratorSpliterator(this, 1);
}
;
_.equals_0 = function equals_22(o){
  return equals_Ljava_lang_Object__Z__devirtual$(this.coll, o);
}
;
_.hashCode_1 = function hashCode_25(){
  return hashCode__I__devirtual$(this.coll);
}
;
var Ljava_util_Collections$UnmodifiableSet_2_classLit = createForClass('java.util', 'Collections/UnmodifiableSet', 414);
function $wrap(array, size_0){
  var i;
  for (i = 0; i < size_0; ++i) {
    setCheck(array, i, new Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry(castTo(array[i], 40)));
  }
}

function Collections$UnmodifiableMap$UnmodifiableEntrySet(s){
  Collections$UnmodifiableSet.call(this, s);
}

defineClass(487, 414, $intern_26, Collections$UnmodifiableMap$UnmodifiableEntrySet);
_.contains = function contains_11(o){
  return this.coll.contains(o);
}
;
_.containsAll = function containsAll_1(o){
  return this.coll.containsAll(o);
}
;
_.iterator = function iterator_11(){
  var it;
  return it = this.coll.iterator() , new Collections$UnmodifiableMap$UnmodifiableEntrySet$1(it);
}
;
_.toArray = function toArray_7(){
  var array;
  array = this.coll.toArray();
  $wrap(array, array.length);
  return array;
}
;
_.toArray_0 = function toArray_8(a){
  var result;
  result = this.coll.toArray_0(a);
  $wrap(result, this.coll.size());
  return result;
}
;
var Ljava_util_Collections$UnmodifiableMap$UnmodifiableEntrySet_2_classLit = createForClass('java.util', 'Collections/UnmodifiableMap/UnmodifiableEntrySet', 487);
function Collections$UnmodifiableMap$UnmodifiableEntrySet$1(val$it){
  this.val$it2 = val$it;
}

defineClass(415, 1, {}, Collections$UnmodifiableMap$UnmodifiableEntrySet$1);
_.forEachRemaining = function forEachRemaining_7(consumer){
  $forEachRemaining(this, consumer);
}
;
_.next_1 = function next_12(){
  return new Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry(castTo(this.val$it2.next_1(), 40));
}
;
_.hasNext_0 = function hasNext_7(){
  return this.val$it2.hasNext_0();
}
;
_.remove_0 = function remove_24(){
  throw toJs(new UnsupportedOperationException);
}
;
var Ljava_util_Collections$UnmodifiableMap$UnmodifiableEntrySet$1_2_classLit = createForClass('java.util', 'Collections/UnmodifiableMap/UnmodifiableEntrySet/1', 415);
function Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry(entry){
  this.entry = entry;
}

defineClass(359, 1, $intern_54, Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry);
_.equals_0 = function equals_23(o){
  return this.entry.equals_0(o);
}
;
_.getKey = function getKey_0(){
  return this.entry.getKey();
}
;
_.getValue = function getValue_0(){
  return this.entry.getValue();
}
;
_.hashCode_1 = function hashCode_26(){
  return this.entry.hashCode_1();
}
;
_.setValue = function setValue_0(value_0){
  throw toJs(new UnsupportedOperationException);
}
;
_.toString_0 = function toString_29(){
  return toString_5(this.entry);
}
;
var Ljava_util_Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry_2_classLit = createForClass('java.util', 'Collections/UnmodifiableMap/UnmodifiableEntrySet/UnmodifiableEntry', 359);
function Collections$UnmodifiableRandomAccessList(list){
  Collections$UnmodifiableList.call(this, list);
}

defineClass(937, 413, {54:1, 17:1, 450:1}, Collections$UnmodifiableRandomAccessList);
var Ljava_util_Collections$UnmodifiableRandomAccessList_2_classLit = createForClass('java.util', 'Collections/UnmodifiableRandomAccessList', 937);
function comparing(keyExtractor, keyComparator){
  checkCriticalNotNull(keyExtractor);
  checkCriticalNotNull(keyComparator);
  return new Comparator$lambda$1$Type(keyComparator, keyExtractor);
}

function lambda$1(keyComparator_0, keyExtractor_1, a_2, b_3){
  return $compare_0(keyExtractor_1(a_2), keyExtractor_1(b_3));
}

function Comparator$lambda$1$Type(keyComparator_0, keyExtractor_1){
  this.keyComparator_0 = keyComparator_0;
  this.keyExtractor_1 = keyExtractor_1;
}

defineClass(554, 1, $intern_18, Comparator$lambda$1$Type);
_.compare_0 = function compare_7(a, b){
  return lambda$1(this.keyComparator_0, this.keyExtractor_1, a, b);
}
;
_.equals_0 = function equals_24(other){
  return this === other;
}
;
var Ljava_util_Comparator$lambda$1$Type_2_classLit = createForClass('java.util', 'Comparator/lambda$1$Type', 554);
function Comparator$lambda$4$Type(){
}

defineClass(555, 1, $intern_18, Comparator$lambda$4$Type);
_.compare_0 = function compare_8(a, b){
  return compare_5(($clinit_FileWrapper() , castTo(a, 339).length_0), castTo(b, 339).length_0);
}
;
_.equals_0 = function equals_25(other){
  return this === other;
}
;
var Ljava_util_Comparator$lambda$4$Type_2_classLit = createForClass('java.util', 'Comparator/lambda$4$Type', 555);
function $clinit_Comparators(){
  $clinit_Comparators = emptyMethod;
  INTERNAL_NATURAL_ORDER = new Comparators$NaturalOrderComparator;
  NATURAL_ORDER = new Comparators$NaturalOrderComparator;
}

function naturalOrderToNull(cmp){
  $clinit_Comparators();
  return cmp == INTERNAL_NATURAL_ORDER?null:cmp;
}

var INTERNAL_NATURAL_ORDER, NATURAL_ORDER;
function $compare(a, b){
  return checkCriticalNotNull(a) , compareTo_Ljava_lang_Object__I__devirtual$(a, (checkCriticalNotNull(b) , b));
}

function $compare_0(a, b){
  return $compare(castTo(a, 57), castTo(b, 57));
}

function Comparators$NaturalOrderComparator(){
}

defineClass(523, 1, $intern_18, Comparators$NaturalOrderComparator);
_.compare_0 = function compare_9(a, b){
  return $compare_0(a, b);
}
;
_.equals_0 = function equals_26(other){
  return this === other;
}
;
var Ljava_util_Comparators$NaturalOrderComparator_2_classLit = createForClass('java.util', 'Comparators/NaturalOrderComparator', 523);
function checkStructuralChange(host, iterator){
  if (iterator.$modCount != host.$modCount) {
    throw toJs(new ConcurrentModificationException);
  }
}

function recordLastKnownStructure(host, iterator){
  iterator.$modCount = host.$modCount;
}

function structureChanged(host){
  var modCount, modCountable;
  modCountable = host;
  modCount = modCountable.$modCount | 0;
  modCountable.$modCount = modCount + 1;
}

function ConcurrentModificationException(){
  RuntimeException.call(this);
}

defineClass(1161, 35, $intern_7, ConcurrentModificationException);
var Ljava_util_ConcurrentModificationException_2_classLit = createForClass('java.util', 'ConcurrentModificationException', 1161);
function $clear_1(this$static){
  $clear(this$static.keySet_0);
  this$static.values_0 = initUnidimensionalArray(Ljava_lang_Object_2_classLit, $intern_0, 1, this$static.values_0.length, 5, 1);
}

function $put_1(this$static, key, value_0){
  $add_0(this$static.keySet_0, key);
  return $set_2(this$static, key.ordinal_0, value_0);
}

function $put_2(this$static, key, value_0){
  return $put_1(this$static, castTo(key, 52), value_0);
}

function $remove_3(this$static, key){
  return $remove_4(this$static.keySet_0, key)?$set_2(this$static, castTo(key, 52).ordinal_0, null):null;
}

function $set_2(this$static, ordinal, value_0){
  var was;
  was = this$static.values_0[ordinal];
  this$static.values_0[ordinal] = value_0;
  return was;
}

function EnumMap(type_0){
  var all;
  this.keySet_0 = (all = castTo(type_0.enumConstantsFunc && type_0.enumConstantsFunc(), 14) , new EnumSet$EnumSetImpl(all, castTo(createFrom(all, all.length), 14)));
  this.values_0 = initUnidimensionalArray(Ljava_lang_Object_2_classLit, $intern_0, 1, this.keySet_0.all.length, 5, 1);
}

defineClass(1131, 1227, $intern_24, EnumMap);
_.put = function put_2(key, value_0){
  return $put_2(this, key, value_0);
}
;
_.clear = function clear_11(){
  $clear_1(this);
}
;
_.containsKey = function containsKey_4(key){
  return $contains_1(this.keySet_0, key);
}
;
_.containsValue = function containsValue_3(value_0){
  var key, key$iterator;
  for (key$iterator = new EnumSet$EnumSetImpl$IteratorImpl(this.keySet_0); key$iterator.i < key$iterator.this$11.all.length;) {
    key = $next_2(key$iterator);
    if (equals_28(value_0, this.values_0[key.ordinal_0])) {
      return true;
    }
  }
  return false;
}
;
_.entrySet_0 = function entrySet_3(){
  return new EnumMap$EntrySet(this);
}
;
_.get = function get_13(k){
  return $contains_1(this.keySet_0, k)?this.values_0[castTo(k, 52).ordinal_0]:null;
}
;
_.remove = function remove_25(key){
  return $remove_3(this, key);
}
;
_.size = function size_20(){
  return this.keySet_0.size_0;
}
;
var Ljava_util_EnumMap_2_classLit = createForClass('java.util', 'EnumMap', 1131);
function $contains_0(this$static, o){
  if (instanceOf(o, 40)) {
    return $containsEntry(this$static.this$01, castTo(o, 40));
  }
  return false;
}

function EnumMap$EntrySet(this$0){
  this.this$01 = this$0;
}

defineClass(1132, $intern_25, $intern_26, EnumMap$EntrySet);
_.clear = function clear_12(){
  $clear_1(this.this$01);
}
;
_.contains = function contains_12(o){
  return $contains_0(this, o);
}
;
_.iterator = function iterator_12(){
  return new EnumMap$EntrySetIterator(this.this$01);
}
;
_.remove = function remove_26(entry){
  var key;
  if ($contains_0(this, entry)) {
    key = castTo(entry, 40).getKey();
    $remove_3(this.this$01, key);
    return true;
  }
  return false;
}
;
_.size = function size_21(){
  return this.this$01.keySet_0.size_0;
}
;
var Ljava_util_EnumMap$EntrySet_2_classLit = createForClass('java.util', 'EnumMap/EntrySet', 1132);
function EnumMap$EntrySetIterator(this$0){
  this.this$01 = this$0;
  this.it = new EnumSet$EnumSetImpl$IteratorImpl(this.this$01.keySet_0);
}

defineClass(1133, 1, {}, EnumMap$EntrySetIterator);
_.forEachRemaining = function forEachRemaining_8(consumer){
  $forEachRemaining(this, consumer);
}
;
_.next_1 = function next_13(){
  return this.key = $next_2(this.it) , new EnumMap$MapEntry(this.this$01, this.key);
}
;
_.hasNext_0 = function hasNext_8(){
  return $hasNext_0(this.it);
}
;
_.remove_0 = function remove_27(){
  checkCriticalState(!!this.key);
  $remove_3(this.this$01, this.key);
  this.key = null;
}
;
var Ljava_util_EnumMap$EntrySetIterator_2_classLit = createForClass('java.util', 'EnumMap/EntrySetIterator', 1133);
function EnumMap$MapEntry(this$0, key){
  this.this$01 = this$0;
  this.key = key;
}

defineClass(1134, 1241, $intern_54, EnumMap$MapEntry);
_.getKey = function getKey_1(){
  return this.key;
}
;
_.getValue = function getValue_1(){
  return this.this$01.values_0[this.key.ordinal_0];
}
;
_.setValue = function setValue_1(value_0){
  return $set_2(this.this$01, this.key.ordinal_0, value_0);
}
;
var Ljava_util_EnumMap$MapEntry_2_classLit = createForClass('java.util', 'EnumMap/MapEntry', 1134);
defineClass(1243, $intern_25, $intern_26);
var Ljava_util_EnumSet_2_classLit = createForClass('java.util', 'EnumSet', 1243);
function $add_0(this$static, e){
  var ordinal;
  checkCriticalNotNull(e);
  ordinal = e.ordinal_0;
  if (!this$static.set_0[ordinal]) {
    setCheck(this$static.set_0, ordinal, e);
    ++this$static.size_0;
    return true;
  }
  return false;
}

function $contains_1(this$static, o){
  return instanceOf(o, 52) && $containsEnum(this$static, castTo(o, 52));
}

function $containsEnum(this$static, e){
  return !!e && this$static.set_0[e.ordinal_0] == e;
}

function $remove_4(this$static, o){
  return instanceOf(o, 52) && $removeEnum(this$static, castTo(o, 52));
}

function $removeEnum(this$static, e){
  if (!!e && this$static.set_0[e.ordinal_0] == e) {
    setCheck(this$static.set_0, e.ordinal_0, null);
    --this$static.size_0;
    return true;
  }
  return false;
}

function EnumSet$EnumSetImpl(all, set_0){
  this.all = all;
  this.set_0 = set_0;
  this.size_0 = 0;
}

defineClass(1157, 1243, $intern_26, EnumSet$EnumSetImpl);
_.add = function add_16(e){
  return $add_0(this, castTo(e, 52));
}
;
_.contains = function contains_13(o){
  return $contains_1(this, o);
}
;
_.iterator = function iterator_13(){
  return new EnumSet$EnumSetImpl$IteratorImpl(this);
}
;
_.remove = function remove_28(o){
  return $remove_4(this, o);
}
;
_.size = function size_22(){
  return this.size_0;
}
;
_.size_0 = 0;
var Ljava_util_EnumSet$EnumSetImpl_2_classLit = createForClass('java.util', 'EnumSet/EnumSetImpl', 1157);
function $findNext(this$static){
  var c;
  ++this$static.i;
  for (c = this$static.this$11.all.length; this$static.i < c; ++this$static.i) {
    if (this$static.this$11.set_0[this$static.i]) {
      return;
    }
  }
}

function $hasNext_0(this$static){
  return this$static.i < this$static.this$11.all.length;
}

function $next_2(this$static){
  checkCriticalElement(this$static.i < this$static.this$11.all.length);
  this$static.last = this$static.i;
  $findNext(this$static);
  return this$static.this$11.set_0[this$static.last];
}

function EnumSet$EnumSetImpl$IteratorImpl(this$1){
  this.this$11 = this$1;
  $findNext(this);
}

defineClass(435, 1, {}, EnumSet$EnumSetImpl$IteratorImpl);
_.forEachRemaining = function forEachRemaining_9(consumer){
  $forEachRemaining(this, consumer);
}
;
_.next_1 = function next_14(){
  return $next_2(this);
}
;
_.hasNext_0 = function hasNext_9(){
  return $hasNext_0(this);
}
;
_.remove_0 = function remove_29(){
  checkCriticalState(this.last != -1);
  setCheck(this.this$11.set_0, this.last, null);
  --this.this$11.size_0;
  this.last = -1;
}
;
_.i = -1;
_.last = -1;
var Ljava_util_EnumSet$EnumSetImpl$IteratorImpl_2_classLit = createForClass('java.util', 'EnumSet/EnumSetImpl/IteratorImpl', 435);
function HashMap(){
  $reset(this);
}

function HashMap_0(ignored){
  AbstractHashMap.call(this, ignored, 0);
}

function HashMap_1(toBeCopied){
  $reset(this);
  $putAll(this, toBeCopied);
}

defineClass(50, 308, $intern_30, HashMap, HashMap_0, HashMap_1);
_.equals_1 = function equals_27(value1, value2){
  return maskUndefined(value1) === maskUndefined(value2) || value1 != null && equals_Ljava_lang_Object__Z__devirtual$(value1, value2);
}
;
_.getHashCode = function getHashCode(key){
  var hashCode;
  hashCode = hashCode__I__devirtual$(key);
  return hashCode | 0;
}
;
var Ljava_util_HashMap_2_classLit = createForClass('java.util', 'HashMap', 50);
function $add_1(this$static, o){
  var old;
  old = $put(this$static.map_0, o, this$static);
  return old == null;
}

function HashSet(){
  this.map_0 = new HashMap;
}

function HashSet_0(){
  this.map_0 = new HashMap_0(1);
}

function HashSet_1(c){
  this.map_0 = new HashMap_0(c.size());
  $addAll(this, c);
}

defineClass(77, $intern_25, {4:1, 54:1, 77:1, 47:1}, HashSet, HashSet_0, HashSet_1);
_.add = function add_17(o){
  return $add_1(this, o);
}
;
_.clear = function clear_13(){
  $reset(this.map_0);
}
;
_.contains = function contains_14(o){
  return $containsKey(this.map_0, o);
}
;
_.isEmpty = function isEmpty_5(){
  return $size(this.map_0) == 0;
}
;
_.iterator = function iterator_14(){
  var outerIter;
  return outerIter = (new AbstractMap$1(this.map_0)).this$01.entrySet_0().iterator() , new AbstractMap$1$1(outerIter);
}
;
_.remove = function remove_30(o){
  return $remove(this.map_0, o) != null;
}
;
_.size = function size_23(){
  return $size(this.map_0);
}
;
var Ljava_util_HashSet_2_classLit = createForClass('java.util', 'HashSet', 77);
function $accept(this$static, value_0){
  this$static.count = add_1(this$static.count, 1);
  this$static.min_0 = $wnd.Math.min(this$static.min_0, value_0);
  this$static.max_0 = $wnd.Math.max(this$static.max_0, value_0);
  this$static.sum = add_1(this$static.sum, value_0);
}

function IntSummaryStatistics(){
}

defineClass(1154, 1, $intern_57, IntSummaryStatistics);
_.accept_0 = function accept_0(value_0){
  $accept(this, value_0);
}
;
_.toString_0 = function toString_30(){
  return 'IntSummaryStatistics[count = ' + toString_4(this.count) + ', avg = ' + (gt(this.count, 0)?toDouble_0(this.sum) / toDouble_0(this.count):0) + ', min = ' + this.min_0 + ', max = ' + this.max_0 + ', sum = ' + toString_4(this.sum) + ']';
}
;
_.count = 0;
_.max_0 = $intern_8;
_.min_0 = $intern_1;
_.sum = 0;
var Ljava_util_IntSummaryStatistics_2_classLit = createForClass('java.util', 'IntSummaryStatistics', 1154);
function $findEntryInChain(this$static, key, chain){
  var entry, entry$array, entry$index, entry$max;
  for (entry$array = chain , entry$index = 0 , entry$max = entry$array.length; entry$index < entry$max; ++entry$index) {
    entry = entry$array[entry$index];
    if (this$static.host.equals_1(key, entry.getKey())) {
      return entry;
    }
  }
  return null;
}

function $getChainOrEmpty(this$static, hashCode){
  var chain;
  chain = this$static.backingMap.get(hashCode);
  return chain == null?new Array:chain;
}

function $getEntry(this$static, key){
  return $findEntryInChain(this$static, key, $getChainOrEmpty(this$static, key == null?0:this$static.host.getHashCode(key)));
}

function $put_3(this$static, key, value_0){
  var chain, chain0, entry, hashCode;
  hashCode = key == null?0:this$static.host.getHashCode(key);
  chain0 = (chain = this$static.backingMap.get(hashCode) , chain == null?new Array:chain);
  if (chain0.length == 0) {
    this$static.backingMap.set(hashCode, chain0);
  }
   else {
    entry = $findEntryInChain(this$static, key, chain0);
    if (entry) {
      return entry.setValue(value_0);
    }
  }
  setCheck(chain0, chain0.length, new AbstractMap$SimpleEntry(key, value_0));
  ++this$static.size_0;
  structureChanged(this$static.host);
  return null;
}

function $remove_5(this$static, key){
  var chain, chain0, entry, hashCode, i;
  hashCode = key == null?0:this$static.host.getHashCode(key);
  chain0 = (chain = this$static.backingMap.get(hashCode) , chain == null?new Array:chain);
  for (i = 0; i < chain0.length; i++) {
    entry = chain0[i];
    if (this$static.host.equals_1(key, entry.getKey())) {
      if (chain0.length == 1) {
        chain0.length = 0;
        $delete(this$static.backingMap, hashCode);
      }
       else {
        chain0.splice(i, 1);
      }
      --this$static.size_0;
      structureChanged(this$static.host);
      return entry.getValue();
    }
  }
  return null;
}

function InternalHashCodeMap(host){
  this.backingMap = newJsMap();
  this.host = host;
}

defineClass(1093, 1, {}, InternalHashCodeMap);
_.forEach = function forEach_5(action){
  $forEach(this, action);
}
;
_.iterator = function iterator_15(){
  return new InternalHashCodeMap$1(this);
}
;
_.size_0 = 0;
var Ljava_util_InternalHashCodeMap_2_classLit = createForClass('java.util', 'InternalHashCodeMap', 1093);
function InternalHashCodeMap$1(this$0){
  this.this$01 = this$0;
  this.chains = this.this$01.backingMap.entries();
  this.chain = new Array;
}

defineClass(519, 1, {}, InternalHashCodeMap$1);
_.forEachRemaining = function forEachRemaining_10(consumer){
  $forEachRemaining(this, consumer);
}
;
_.next_1 = function next_15(){
  return this.lastEntry = this.chain[this.itemIndex++] , this.lastEntry;
}
;
_.hasNext_0 = function hasNext_10(){
  var current;
  if (this.itemIndex < this.chain.length) {
    return true;
  }
  current = this.chains.next();
  if (!current.done) {
    this.chain = current.value[1];
    this.itemIndex = 0;
    return true;
  }
  return false;
}
;
_.remove_0 = function remove_31(){
  $remove_5(this.this$01, this.lastEntry.getKey());
  this.itemIndex != 0 && --this.itemIndex;
}
;
_.itemIndex = 0;
_.lastEntry = null;
var Ljava_util_InternalHashCodeMap$1_2_classLit = createForClass('java.util', 'InternalHashCodeMap/1', 519);
function $delete(this$static, key){
  var fn;
  fn = this$static['delete'];
  fn.call(this$static, key);
}

function $delete_0(this$static, key){
  var fn;
  fn = this$static['delete'];
  fn.call(this$static, key);
}

function $clinit_InternalJsMapFactory(){
  $clinit_InternalJsMapFactory = emptyMethod;
  jsMapCtor = getJsMapConstructor();
}

function canHandleObjectCreateAndProto(){
  if (!Object.create || !Object.getOwnPropertyNames) {
    return false;
  }
  var protoField = '__proto__';
  var map_0 = Object.create(null);
  if (map_0[protoField] !== undefined) {
    return false;
  }
  var keys_0 = Object.getOwnPropertyNames(map_0);
  if (keys_0.length != 0) {
    return false;
  }
  map_0[protoField] = 42;
  if (map_0[protoField] !== 42) {
    return false;
  }
  if (Object.getOwnPropertyNames(map_0).length == 0) {
    return false;
  }
  return true;
}

function getJsMapConstructor(){
  function isCorrectIterationProtocol(){
    try {
      return (new Map).entries().next().done;
    }
     catch (e) {
      return false;
    }
  }

  if (typeof Map === 'function' && Map.prototype.entries && isCorrectIterationProtocol()) {
    return Map;
  }
   else {
    return getJsMapPolyFill();
  }
}

function getJsMapPolyFill(){
  function Stringmap(){
    this.obj = this.createObject();
  }

  ;
  Stringmap.prototype.createObject = function(key){
    return Object.create(null);
  }
  ;
  Stringmap.prototype.get = function(key){
    return this.obj[key];
  }
  ;
  Stringmap.prototype.set = function(key, value_0){
    this.obj[key] = value_0;
  }
  ;
  Stringmap.prototype['delete'] = function(key){
    delete this.obj[key];
  }
  ;
  Stringmap.prototype.keys = function(){
    return Object.getOwnPropertyNames(this.obj);
  }
  ;
  Stringmap.prototype.entries = function(){
    var keys_0 = this.keys();
    var map_0 = this;
    var nextIndex = 0;
    return {next:function(){
      if (nextIndex >= keys_0.length)
        return {done:true};
      var key = keys_0[nextIndex++];
      return {value:[key, map_0.get(key)], done:false};
    }
    };
  }
  ;
  if (!canHandleObjectCreateAndProto()) {
    Stringmap.prototype.createObject = function(){
      return {};
    }
    ;
    Stringmap.prototype.get = function(key){
      return this.obj[':' + key];
    }
    ;
    Stringmap.prototype.set = function(key, value_0){
      this.obj[':' + key] = value_0;
    }
    ;
    Stringmap.prototype['delete'] = function(key){
      delete this.obj[':' + key];
    }
    ;
    Stringmap.prototype.keys = function(){
      var result = [];
      for (var key in this.obj) {
        key.charCodeAt(0) == 58 && result.push(key.substring(1));
      }
      return result;
    }
    ;
  }
  return Stringmap;
}

function newJsMap(){
  $clinit_InternalJsMapFactory();
  return new jsMapCtor;
}

var jsMapCtor;
function $contains_2(this$static, key){
  return !(this$static.backingMap.get(key) === undefined);
}

function $get_4(this$static, key){
  return this$static.backingMap.get(key);
}

function $put_4(this$static, key, value_0){
  var oldValue;
  oldValue = this$static.backingMap.get(key);
  this$static.backingMap.set(key, value_0 === undefined?null:value_0);
  if (oldValue === undefined) {
    ++this$static.size_0;
    structureChanged(this$static.host);
  }
   else {
    ++this$static.valueMod;
  }
  return oldValue;
}

function $remove_6(this$static, key){
  var value_0;
  value_0 = this$static.backingMap.get(key);
  if (value_0 === undefined) {
    ++this$static.valueMod;
  }
   else {
    $delete_0(this$static.backingMap, key);
    --this$static.size_0;
    structureChanged(this$static.host);
  }
  return value_0;
}

function InternalStringMap(host){
  this.backingMap = newJsMap();
  this.host = host;
}

defineClass(1080, 1, {}, InternalStringMap);
_.forEach = function forEach_6(action){
  $forEach(this, action);
}
;
_.iterator = function iterator_16(){
  return new InternalStringMap$1(this);
}
;
_.size_0 = 0;
_.valueMod = 0;
var Ljava_util_InternalStringMap_2_classLit = createForClass('java.util', 'InternalStringMap', 1080);
function InternalStringMap$1(this$0){
  this.this$01 = this$0;
  this.entries_0 = this.this$01.backingMap.entries();
  this.current = this.entries_0.next();
}

defineClass(518, 1, {}, InternalStringMap$1);
_.forEachRemaining = function forEachRemaining_11(consumer){
  $forEachRemaining(this, consumer);
}
;
_.next_1 = function next_16(){
  return this.last = this.current , this.current = this.entries_0.next() , new InternalStringMap$2(this.this$01, this.last, this.this$01.valueMod);
}
;
_.hasNext_0 = function hasNext_11(){
  return !this.current.done;
}
;
_.remove_0 = function remove_32(){
  $remove_6(this.this$01, this.last.value[0]);
}
;
var Ljava_util_InternalStringMap$1_2_classLit = createForClass('java.util', 'InternalStringMap/1', 518);
function InternalStringMap$2(this$0, val$entry, val$lastValueMod){
  this.this$01 = this$0;
  this.val$entry2 = val$entry;
  this.val$lastValueMod3 = val$lastValueMod;
}

defineClass(1081, 1241, $intern_54, InternalStringMap$2);
_.getKey = function getKey_2(){
  return this.val$entry2.value[0];
}
;
_.getValue = function getValue_2(){
  if (this.this$01.valueMod != this.val$lastValueMod3) {
    return $get_4(this.this$01, this.val$entry2.value[0]);
  }
  return this.val$entry2.value[1];
}
;
_.setValue = function setValue_2(object){
  return $put_4(this.this$01, this.val$entry2.value[0], object);
}
;
_.val$lastValueMod3 = 0;
var Ljava_util_InternalStringMap$2_2_classLit = createForClass('java.util', 'InternalStringMap/2', 1081);
function $$init_1(this$static){
  this$static.head = new LinkedHashMap$ChainEntry(this$static);
  this$static.map_0 = new HashMap;
}

function $clear_2(this$static){
  $reset(this$static.map_0);
  this$static.head.prev = this$static.head;
  this$static.head.next_0 = this$static.head;
}

function $containsKey_2(this$static, key){
  return $containsKey(this$static.map_0, key);
}

function $get_5(this$static, key){
  var entry;
  entry = castTo($get(this$static.map_0, key), 249);
  if (entry) {
    $recordAccess(this$static, entry);
    return entry.value_0;
  }
  return null;
}

function $put_5(this$static, key, value_0){
  var eldest, newEntry, old, oldValue;
  old = castTo($get(this$static.map_0, key), 249);
  if (!old) {
    newEntry = new LinkedHashMap$ChainEntry_0(this$static, key, value_0);
    $put(this$static.map_0, key, newEntry);
    $addToEnd(newEntry);
    eldest = this$static.head.next_0;
    if (this$static.removeEldestEntry(eldest)) {
      $remove_8(eldest);
      $remove(this$static.map_0, eldest.key);
    }
    return null;
  }
   else {
    oldValue = $setValue(old, value_0);
    $recordAccess(this$static, old);
    return oldValue;
  }
}

function $recordAccess(this$static, entry){
  if (this$static.accessOrder) {
    $remove_8(entry);
    $addToEnd(entry);
  }
}

function $remove_7(this$static, key){
  var entry;
  entry = castTo($remove(this$static.map_0, key), 249);
  if (entry) {
    $remove_8(entry);
    return entry.value_0;
  }
  return null;
}

function LinkedHashMap(){
  HashMap.call(this);
  $$init_1(this);
  this.head.prev = this.head;
  this.head.next_0 = this.head;
}

defineClass(273, 50, $intern_30, LinkedHashMap);
_.clear = function clear_14(){
  $clear_2(this);
}
;
_.containsKey = function containsKey_5(key){
  return $containsKey_2(this, key);
}
;
_.containsValue = function containsValue_4(value_0){
  var node;
  node = this.head.next_0;
  while (node != this.head) {
    if (equals_28(node.value_0, value_0)) {
      return true;
    }
    node = node.next_0;
  }
  return false;
}
;
_.entrySet_0 = function entrySet_4(){
  return new LinkedHashMap$EntrySet(this);
}
;
_.get = function get_14(key){
  return $get_5(this, key);
}
;
_.put = function put_3(key, value_0){
  return $put_5(this, key, value_0);
}
;
_.remove = function remove_33(key){
  return $remove_7(this, key);
}
;
_.removeEldestEntry = function removeEldestEntry(eldest){
  return false;
}
;
_.size = function size_24(){
  return $size(this.map_0);
}
;
_.accessOrder = false;
var Ljava_util_LinkedHashMap_2_classLit = createForClass('java.util', 'LinkedHashMap', 273);
function $addToEnd(this$static){
  var tail;
  tail = this$static.this$01.head.prev;
  this$static.prev = tail;
  this$static.next_0 = this$static.this$01.head;
  tail.next_0 = this$static.this$01.head.prev = this$static;
}

function $remove_8(this$static){
  this$static.next_0.prev = this$static.prev;
  this$static.prev.next_0 = this$static.next_0;
  this$static.next_0 = this$static.prev = null;
}

function LinkedHashMap$ChainEntry(this$0){
  LinkedHashMap$ChainEntry_0.call(this, this$0, null, null);
}

function LinkedHashMap$ChainEntry_0(this$0, key, value_0){
  this.this$01 = this$0;
  AbstractMap$SimpleEntry.call(this, key, value_0);
}

defineClass(249, 248, {309:1, 248:1, 249:1, 40:1}, LinkedHashMap$ChainEntry, LinkedHashMap$ChainEntry_0);
var Ljava_util_LinkedHashMap$ChainEntry_2_classLit = createForClass('java.util', 'LinkedHashMap/ChainEntry', 249);
function $contains_3(this$static, o){
  if (instanceOf(o, 40)) {
    return $containsEntry(this$static.this$01, castTo(o, 40));
  }
  return false;
}

function LinkedHashMap$EntrySet(this$0){
  this.this$01 = this$0;
}

defineClass(353, $intern_25, $intern_26, LinkedHashMap$EntrySet);
_.clear = function clear_15(){
  $clear_2(this.this$01);
}
;
_.contains = function contains_15(o){
  return $contains_3(this, o);
}
;
_.iterator = function iterator_17(){
  return new LinkedHashMap$EntrySet$EntryIterator(this);
}
;
_.remove = function remove_34(entry){
  var key;
  if ($contains_3(this, entry)) {
    key = castTo(entry, 40).getKey();
    $remove_7(this.this$01, key);
    return true;
  }
  return false;
}
;
_.size = function size_25(){
  return $size(this.this$01.map_0);
}
;
var Ljava_util_LinkedHashMap$EntrySet_2_classLit = createForClass('java.util', 'LinkedHashMap/EntrySet', 353);
function $next_3(this$static){
  checkStructuralChange(this$static.this$11.this$01.map_0, this$static);
  checkCriticalElement(this$static.next_0 != this$static.this$11.this$01.head);
  this$static.last = this$static.next_0;
  this$static.next_0 = this$static.next_0.next_0;
  return this$static.last;
}

function LinkedHashMap$EntrySet$EntryIterator(this$1){
  this.this$11 = this$1;
  this.next_0 = this$1.this$01.head.next_0;
  recordLastKnownStructure(this$1.this$01.map_0, this);
}

defineClass(407, 1, {}, LinkedHashMap$EntrySet$EntryIterator);
_.forEachRemaining = function forEachRemaining_12(consumer){
  $forEachRemaining(this, consumer);
}
;
_.next_1 = function next_17(){
  return $next_3(this);
}
;
_.hasNext_0 = function hasNext_12(){
  return this.next_0 != this.this$11.this$01.head;
}
;
_.remove_0 = function remove_35(){
  checkCriticalState(!!this.last);
  checkStructuralChange(this.this$11.this$01.map_0, this);
  $remove_8(this.last);
  $remove(this.this$11.this$01.map_0, this.last.key);
  recordLastKnownStructure(this.this$11.this$01.map_0, this);
  this.last = null;
}
;
var Ljava_util_LinkedHashMap$EntrySet$EntryIterator_2_classLit = createForClass('java.util', 'LinkedHashMap/EntrySet/EntryIterator', 407);
function $add_2(this$static, o){
  $addNode(this$static, o, this$static.tail.prev, this$static.tail);
  return true;
}

function $addNode(this$static, o, prev, next){
  var node;
  node = new LinkedList$Node;
  node.value_0 = o;
  node.prev = prev;
  node.next_0 = next;
  next.prev = prev.next_0 = node;
  ++this$static.size_0;
}

function $listIterator(this$static, index_0){
  var i, node;
  checkCriticalPositionIndex(index_0, this$static.size_0);
  if (index_0 >= this$static.size_0 >> 1) {
    node = this$static.tail;
    for (i = this$static.size_0; i > index_0; --i) {
      node = node.prev;
    }
  }
   else {
    node = this$static.header.next_0;
    for (i = 0; i < index_0; ++i) {
      node = node.next_0;
    }
  }
  return new LinkedList$ListIteratorImpl(this$static, index_0, node);
}

function $poll(this$static){
  return this$static.size_0 == 0?null:(checkCriticalElement(this$static.size_0 != 0) , $removeNode(this$static, this$static.header.next_0));
}

function $removeNode(this$static, node){
  var oldValue;
  oldValue = node.value_0;
  node.next_0.prev = node.prev;
  node.prev.next_0 = node.next_0;
  node.next_0 = node.prev = null;
  node.value_0 = null;
  --this$static.size_0;
  return oldValue;
}

function $reset_0(this$static){
  this$static.header.next_0 = this$static.tail;
  this$static.tail.prev = this$static.header;
  this$static.header.prev = this$static.tail.next_0 = null;
  this$static.size_0 = 0;
}

function LinkedList(){
  this.header = new LinkedList$Node;
  this.tail = new LinkedList$Node;
  $reset_0(this);
}

defineClass(373, 1244, $intern_56, LinkedList);
_.add = function add_18(o){
  return $add_2(this, o);
}
;
_.clear = function clear_16(){
  $reset_0(this);
}
;
_.listIterator = function listIterator_0(index_0){
  return $listIterator(this, index_0);
}
;
_.size = function size_26(){
  return this.size_0;
}
;
_.size_0 = 0;
var Ljava_util_LinkedList_2_classLit = createForClass('java.util', 'LinkedList', 373);
function $next_4(this$static){
  checkCriticalElement(this$static.currentNode != this$static.this$01.tail);
  this$static.lastNode = this$static.currentNode;
  this$static.currentNode = this$static.currentNode.next_0;
  ++this$static.currentIndex;
  return this$static.lastNode.value_0;
}

function LinkedList$ListIteratorImpl(this$0, index_0, startNode){
  this.this$01 = this$0;
  this.currentNode = startNode;
  this.currentIndex = index_0;
}

defineClass(1160, 1, {}, LinkedList$ListIteratorImpl);
_.forEachRemaining = function forEachRemaining_13(consumer){
  $forEachRemaining(this, consumer);
}
;
_.add_0 = function add_19(o){
  $addNode(this.this$01, o, this.currentNode.prev, this.currentNode);
  ++this.currentIndex;
  this.lastNode = null;
}
;
_.hasNext_0 = function hasNext_13(){
  return this.currentNode != this.this$01.tail;
}
;
_.next_1 = function next_18(){
  return $next_4(this);
}
;
_.remove_0 = function remove_36(){
  var nextNode;
  checkCriticalState(!!this.lastNode);
  nextNode = this.lastNode.next_0;
  $removeNode(this.this$01, this.lastNode);
  this.currentNode == this.lastNode?(this.currentNode = nextNode):--this.currentIndex;
  this.lastNode = null;
}
;
_.set_1 = function set_10(o){
  checkCriticalState(!!this.lastNode);
  this.lastNode.value_0 = o;
}
;
_.currentIndex = 0;
_.lastNode = null;
var Ljava_util_LinkedList$ListIteratorImpl_2_classLit = createForClass('java.util', 'LinkedList/ListIteratorImpl', 1160);
function LinkedList$Node(){
}

defineClass(436, 1, {}, LinkedList$Node);
var Ljava_util_LinkedList$Node_2_classLit = createForClass('java.util', 'LinkedList/Node', 436);
function $clinit_Optional(){
  $clinit_Optional = emptyMethod;
  EMPTY = new Optional(null);
}

function $equals_6(this$static, obj){
  var other;
  if (maskUndefined(obj) === maskUndefined(this$static)) {
    return true;
  }
  if (!instanceOf(obj, 12)) {
    return false;
  }
  other = castTo(obj, 12);
  return equals_28(this$static.ref, other.ref);
}

function $flatMap(this$static, mapper){
  checkCriticalNotNull(mapper);
  if (this$static.ref != null) {
    return castTo(checkNotNull(castTo(mapper(this$static.ref), 12)), 12);
  }
  return EMPTY;
}

function $get_6(this$static){
  checkCriticalElement(this$static.ref != null);
  return this$static.ref;
}

function $ifPresent(this$static, consumer){
  this$static.ref != null && consumer.accept(this$static.ref);
}

function $map(this$static, mapper){
  checkCriticalNotNull(mapper);
  if (this$static.ref != null) {
    return ofNullable(mapper(this$static.ref));
  }
  return EMPTY;
}

function $or(this$static, supplier){
  var r;
  requireNonNull(supplier);
  if (this$static.ref != null) {
    return this$static;
  }
   else {
    r = castTo(supplier.get_0(), 12);
    return castTo(requireNonNull(r), 12);
  }
}

function $orElse(this$static, other){
  return this$static.ref != null?this$static.ref:other;
}

function $orElseGet(this$static, other){
  return this$static.ref != null?this$static.ref:other.get_0();
}

function $orElseThrow(this$static, exceptionSupplier){
  if (this$static.ref != null) {
    return this$static.ref;
  }
  throw toJs(castTo(exceptionSupplier.get_0(), 33));
}

function $stream(this$static){
  return this$static.ref != null?new StreamImpl(null, new Spliterators$IteratorSpliterator(singleton(this$static.ref), 1)):new StreamImpl$Empty(null);
}

function Optional(ref){
  $clinit_Optional();
  this.ref = ref;
}

function empty_2(){
  $clinit_Optional();
  return EMPTY;
}

function of_2(value_0){
  $clinit_Optional();
  return new Optional(checkCriticalNotNull(value_0));
}

function ofNullable(value_0){
  $clinit_Optional();
  return value_0 == null?EMPTY:new Optional(checkCriticalNotNull(value_0));
}

defineClass(12, 1, {12:1}, Optional);
_.equals_0 = function equals_29(obj){
  return $equals_6(this, obj);
}
;
_.get = function get_15(){
  return $get_6(this);
}
;
_.hashCode_1 = function hashCode_28(){
  return hashCode_27(this.ref);
}
;
_.isEmpty = function isEmpty_6(){
  return this.ref == null;
}
;
_.isPresent = function isPresent(){
  return this.ref != null;
}
;
_.toString_0 = function toString_31(){
  return this.ref != null?'Optional.of(' + valueOf_3(this.ref) + ')':'Optional.empty()';
}
;
var EMPTY;
var Ljava_util_Optional_2_classLit = createForClass('java.util', 'Optional', 12);
function $clinit_Random(){
  $clinit_Random = emptyMethod;
  var i, i0, twoToTheXMinus24Tmp, twoToTheXMinus48Tmp;
  twoToTheXMinus24 = initUnidimensionalArray(D_classLit, $intern_18, 8, 25, 15, 1);
  twoToTheXMinus48 = initUnidimensionalArray(D_classLit, $intern_18, 8, 33, 15, 1);
  twoToTheXMinus48Tmp = $intern_44;
  for (i0 = 32; i0 >= 0; i0--) {
    twoToTheXMinus48[i0] = twoToTheXMinus48Tmp;
    twoToTheXMinus48Tmp *= 0.5;
  }
  twoToTheXMinus24Tmp = 1;
  for (i = 24; i >= 0; i--) {
    twoToTheXMinus24[i] = twoToTheXMinus24Tmp;
    twoToTheXMinus24Tmp *= 0.5;
  }
}

function $nextInt(this$static, n){
  var bits, val;
  checkCriticalArgument(n > 0);
  if ((n & -n) == n) {
    return round_int(n * $nextInternal(this$static) * 4.656612873077393E-10);
  }
  do {
    bits = $nextInternal(this$static);
    val = bits % n;
  }
   while (bits - val + (n - 1) < 0);
  return round_int(val);
}

function $nextInternal(this$static){
  var carry, dval, h, hi, l, lo;
  hi = this$static.seedhi * $intern_58 + this$static.seedlo * 1502;
  lo = this$static.seedlo * $intern_58 + 11;
  carry = $wnd.Math.floor(lo * $intern_59);
  hi += carry;
  lo -= carry * $intern_60;
  hi %= $intern_60;
  this$static.seedhi = hi;
  this$static.seedlo = lo;
  h = this$static.seedhi * 128;
  l = $wnd.Math.floor(this$static.seedlo * twoToTheXMinus48[31]);
  dval = h + l;
  dval >= $intern_13 && (dval -= $intern_43);
  return dval;
}

function Random(){
  $clinit_Random();
  var hi, lo, seed;
  seed = uniqueSeed++ + Date.now();
  hi = round_int($wnd.Math.floor(seed * $intern_59)) & 16777215;
  lo = round_int(seed - hi * $intern_60);
  this.seedhi = hi ^ 1502;
  this.seedlo = lo ^ $intern_58;
}

function Random_0(){
  $clinit_Random();
  this.seedhi = 1502;
  this.seedlo = 15525484;
}

defineClass(429, 1, {}, Random, Random_0);
_.seedhi = 0;
_.seedlo = 0;
var twoToTheXMinus24, twoToTheXMinus48, uniqueSeed = 0;
var Ljava_util_Random_2_classLit = createForClass('java.util', 'Random', 429);
function $initIterator(this$static){
  if (!this$static.it) {
    this$static.it = this$static.collection.iterator();
    this$static.estimateSize = this$static.collection.size();
  }
}

function $tryAdvance(this$static, consumer){
  checkCriticalNotNull(consumer);
  $initIterator(this$static);
  if (this$static.it.hasNext_0()) {
    consumer.accept(this$static.it.next_1());
    return true;
  }
  return false;
}

function Spliterators$IteratorSpliterator(collection, characteristics){
  this.collection = (checkCriticalNotNull(collection) , collection);
  this.characteristics = (characteristics & $intern_15) == 0?characteristics | 64 | $intern_16:characteristics;
}

defineClass(28, 1, {}, Spliterators$IteratorSpliterator);
_.hasCharacteristics = function hasCharacteristics(characteristics){
  return (this.characteristics & characteristics) != 0;
}
;
_.characteristics_0 = function characteristics_0(){
  return this.characteristics;
}
;
_.estimateSize_0 = function estimateSize(){
  $initIterator(this);
  return this.estimateSize;
}
;
_.forEachRemaining = function forEachRemaining_14(consumer){
  $initIterator(this);
  this.it.forEachRemaining(consumer);
}
;
_.tryAdvance = function tryAdvance(consumer){
  return $tryAdvance(this, consumer);
}
;
_.characteristics = 0;
_.estimateSize = 0;
var Ljava_util_Spliterators$IteratorSpliterator_2_classLit = createForClass('java.util', 'Spliterators/IteratorSpliterator', 28);
function SortedSet$1($anonymous0){
  Spliterators$IteratorSpliterator.call(this, $anonymous0, 21);
}

defineClass(276, 28, {}, SortedSet$1);
var Ljava_util_SortedSet$1_2_classLit = createForClass('java.util', 'SortedSet/1', 276);
function $forEachRemaining_1(this$static, consumer){
  while (this$static.tryAdvance_0(consumer))
  ;
}

function Spliterator$OfInt$2methodref$accept$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(337, 1, $intern_57, Spliterator$OfInt$2methodref$accept$Type);
_.accept_0 = function accept_1(arg0){
  this.$$outer_0.accept(valueOf_1(arg0));
}
;
var Ljava_util_Spliterator$OfInt$2methodref$accept$Type_2_classLit = createForClass('java.util', 'Spliterator/OfInt/2methodref$accept$Type', 337);
function Spliterator$OfInt$3methodref$accept$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(338, 1, $intern_57, Spliterator$OfInt$3methodref$accept$Type);
_.accept_0 = function accept_2(arg0){
  this.$$outer_0.accept(valueOf_1(arg0));
}
;
var Ljava_util_Spliterator$OfInt$3methodref$accept$Type_2_classLit = createForClass('java.util', 'Spliterator/OfInt/3methodref$accept$Type', 338);
function Spliterator$OfLong$4methodref$accept$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(388, 1, {148:1}, Spliterator$OfLong$4methodref$accept$Type);
_.accept_1 = function accept_5(arg0){
  this.$$outer_0.accept(valueOf_2(arg0));
}
;
var Ljava_util_Spliterator$OfLong$4methodref$accept$Type_2_classLit = createForClass('java.util', 'Spliterator/OfLong/4methodref$accept$Type', 388);
function Spliterator$OfLong$5methodref$accept$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(389, 1, {148:1}, Spliterator$OfLong$5methodref$accept$Type);
_.accept_1 = function accept_6(arg0){
  this.$$outer_0.accept(valueOf_2(arg0));
}
;
var Ljava_util_Spliterator$OfLong$5methodref$accept$Type_2_classLit = createForClass('java.util', 'Spliterator/OfLong/5methodref$accept$Type', 389);
function Spliterators$AbstractIntSpliterator(size_0, characteristics){
  Spliterators$BaseSpliterator.call(this, size_0, characteristics);
}

defineClass(454, 387, {});
_.forEachRemaining_0 = function forEachRemaining_16(consumer){
  $forEachRemaining_1(this, consumer);
}
;
_.forEachRemaining = function forEachRemaining_17(consumer){
  instanceOf(consumer, 108)?$forEachRemaining_1(this, castTo(consumer, 108)):$forEachRemaining_1(this, new Spliterator$OfInt$3methodref$accept$Type(consumer));
}
;
_.tryAdvance = function tryAdvance_0(consumer){
  return instanceOf(consumer, 108)?this.tryAdvance_0(castTo(consumer, 108)):this.tryAdvance_0(new Spliterator$OfInt$2methodref$accept$Type(consumer));
}
;
var Ljava_util_Spliterators$AbstractIntSpliterator_2_classLit = createForClass('java.util', 'Spliterators/AbstractIntSpliterator', 454);
defineClass(549, 387, {});
_.forEachRemaining_0 = function forEachRemaining_18(consumer){
  $forEachRemaining_1(this, consumer);
}
;
_.forEachRemaining = function forEachRemaining_19(consumer){
  instanceOf(consumer, 148)?$forEachRemaining_1(this, castTo(consumer, 148)):$forEachRemaining_1(this, new Spliterator$OfLong$5methodref$accept$Type(consumer));
}
;
_.tryAdvance = function tryAdvance_1(consumer){
  return instanceOf(consumer, 148)?$tryAdvance_4(this, castTo(consumer, 148)):$tryAdvance_4(this, new Spliterator$OfLong$4methodref$accept$Type(consumer));
}
;
var Ljava_util_Spliterators$AbstractLongSpliterator_2_classLit = createForClass('java.util', 'Spliterators/AbstractLongSpliterator', 549);
function $clinit_Spliterators$EmptySpliterator(){
  $clinit_Spliterators$EmptySpliterator = emptyMethod;
  OF_REF = new Spliterators$EmptySpliterator$OfRef;
  $clinit_Spliterators$EmptySpliterator();
  OF_INT = new Spliterators$EmptySpliterator$OfInt;
  OF_LONG = new Spliterators$EmptySpliterator$OfLong;
}

defineClass(1211, 1, {});
_.forEachRemaining = function forEachRemaining_22(consumer){
  $forEachRemaining_0(this, consumer);
}
;
_.hasCharacteristics = function hasCharacteristics_2(characteristics){
  return (16448 & characteristics) != 0;
}
;
_.characteristics_0 = function characteristics_3(){
  return 16448;
}
;
_.estimateSize_0 = function estimateSize_2(){
  return 0;
}
;
var OF_INT, OF_LONG, OF_REF;
var Ljava_util_Spliterators$EmptySpliterator_2_classLit = createForClass('java.util', 'Spliterators/EmptySpliterator', 1211);
function $forEachRemaining_3(consumer){
  checkCriticalNotNull(consumer);
}

function $tryAdvance_1(consumer){
  return checkCriticalNotNull(consumer) , false;
}

function Spliterators$EmptySpliterator$OfInt(){
}

defineClass(551, 1211, {}, Spliterators$EmptySpliterator$OfInt);
_.forEachRemaining_0 = function forEachRemaining_23(consumer){
  $forEachRemaining_3(consumer);
}
;
_.forEachRemaining = function forEachRemaining_24(consumer){
  instanceOf(consumer, 108)?$forEachRemaining_3(castTo(consumer, 108)):$forEachRemaining_3(new Spliterator$OfInt$3methodref$accept$Type(consumer));
}
;
_.tryAdvance_0 = function tryAdvance_3(consumer){
  return $tryAdvance_1(consumer);
}
;
_.tryAdvance = function tryAdvance_4(consumer){
  return instanceOf(consumer, 108)?$tryAdvance_1(castTo(consumer, 108)):$tryAdvance_1(new Spliterator$OfInt$2methodref$accept$Type(consumer));
}
;
var Ljava_util_Spliterators$EmptySpliterator$OfInt_2_classLit = createForClass('java.util', 'Spliterators/EmptySpliterator/OfInt', 551);
function $forEachRemaining_4(consumer){
  checkCriticalNotNull(consumer);
}

function $tryAdvance_2(consumer){
  return checkCriticalNotNull(consumer) , false;
}

function Spliterators$EmptySpliterator$OfLong(){
}

defineClass(552, 1211, {}, Spliterators$EmptySpliterator$OfLong);
_.forEachRemaining_0 = function forEachRemaining_25(consumer){
  $forEachRemaining_4(consumer);
}
;
_.forEachRemaining = function forEachRemaining_26(consumer){
  instanceOf(consumer, 148)?$forEachRemaining_4(castTo(consumer, 148)):$forEachRemaining_4(new Spliterator$OfLong$5methodref$accept$Type(consumer));
}
;
_.tryAdvance_0 = function tryAdvance_5(consumer){
  return $tryAdvance_2(consumer);
}
;
_.tryAdvance = function tryAdvance_6(consumer){
  return instanceOf(consumer, 148)?$tryAdvance_2(castTo(consumer, 148)):$tryAdvance_2(new Spliterator$OfLong$4methodref$accept$Type(consumer));
}
;
var Ljava_util_Spliterators$EmptySpliterator$OfLong_2_classLit = createForClass('java.util', 'Spliterators/EmptySpliterator/OfLong', 552);
function Spliterators$EmptySpliterator$OfRef(){
}

defineClass(550, 1211, {}, Spliterators$EmptySpliterator$OfRef);
_.forEachRemaining = function forEachRemaining_27(consumer){
  checkCriticalNotNull(consumer);
}
;
_.tryAdvance = function tryAdvance_7(consumer){
  return checkCriticalNotNull(consumer) , false;
}
;
var Ljava_util_Spliterators$EmptySpliterator$OfRef_2_classLit = createForClass('java.util', 'Spliterators/EmptySpliterator/OfRef', 550);
function $consume_0(this$static, consumer, index_0){
  consumer.accept_0(this$static.array[index_0]);
}

function Spliterators$IntArraySpliterator(array, limit){
  Spliterators$BaseArraySpliterator.call(this, limit);
  this.array = array;
}

defineClass(553, 455, {}, Spliterators$IntArraySpliterator);
_.consume = function consume_0(consumer, index_0){
  $consume_0(this, castTo(consumer, 108), index_0);
}
;
_.forEachRemaining_0 = function forEachRemaining_28(consumer){
  $forEachRemaining_2(this, consumer);
}
;
_.forEachRemaining = function forEachRemaining_29(consumer){
  instanceOf(consumer, 108)?$forEachRemaining_2(this, castTo(consumer, 108)):$forEachRemaining_2(this, new Spliterator$OfInt$3methodref$accept$Type(consumer));
}
;
_.tryAdvance_0 = function tryAdvance_8(consumer){
  return $tryAdvance_0(this, consumer);
}
;
_.tryAdvance = function tryAdvance_9(consumer){
  return instanceOf(consumer, 108)?$tryAdvance_0(this, castTo(consumer, 108)):$tryAdvance_0(this, new Spliterator$OfInt$2methodref$accept$Type(consumer));
}
;
var Ljava_util_Spliterators$IntArraySpliterator_2_classLit = createForClass('java.util', 'Spliterators/IntArraySpliterator', 553);
function $add_3(this$static, newElement){
  !this$static.builder?(this$static.builder = new StringBuilder_1(this$static.prefix)):$append_4(this$static.builder, this$static.delimiter);
  $append_1(this$static.builder, newElement);
  return this$static;
}

function $merge_0(this$static, other){
  var otherLength;
  if (other.builder) {
    otherLength = other.builder.string.length;
    !this$static.builder?(this$static.builder = new StringBuilder_1(this$static.prefix)):$append_4(this$static.builder, this$static.delimiter);
    $append_2(this$static.builder, other.builder, other.prefix.length, otherLength);
  }
  return this$static;
}

function $toString_6(this$static){
  return !this$static.builder?this$static.emptyValue:this$static.suffix.length == 0?this$static.builder.string:this$static.builder.string + ('' + this$static.suffix);
}

function StringJoiner(){
  StringJoiner_0.call(this, '/', '', '');
}

function StringJoiner_0(delimiter, prefix, suffix){
  this.delimiter = (checkCriticalNotNull(delimiter) , delimiter);
  this.prefix = (checkCriticalNotNull(prefix) , prefix);
  this.suffix = (checkCriticalNotNull(suffix) , suffix);
  this.emptyValue = this.prefix + ('' + this.suffix);
}

defineClass(182, 1, {182:1}, StringJoiner, StringJoiner_0);
_.toString_0 = function toString_32(){
  return $toString_6(this);
}
;
var Ljava_util_StringJoiner_2_classLit = createForClass('java.util', 'StringJoiner', 182);
function $clear_3(this$static){
  this$static.root = null;
  this$static.size_0 = 0;
}

function $getEntry_0(this$static, key){
  var c, childNum, tree;
  tree = this$static.root;
  while (tree) {
    c = this$static.cmp.compare_0(key, tree.key);
    if (c == 0) {
      return tree;
    }
    childNum = c < 0?0:1;
    tree = tree.child[childNum];
  }
  return null;
}

function $inOrderAdd(this$static, list, type_0, current, fromKey, fromInclusive, toKey, toInclusive){
  var leftNode, rightNode;
  if (!current) {
    return;
  }
  leftNode = current.child[0];
  !!leftNode && $inOrderAdd(this$static, list, type_0, leftNode, fromKey, fromInclusive, toKey, toInclusive);
  $inRange(this$static, type_0, current.key, fromKey, fromInclusive, toKey, toInclusive) && list.add(current);
  rightNode = current.child[1];
  !!rightNode && $inOrderAdd(this$static, list, type_0, rightNode, fromKey, fromInclusive, toKey, toInclusive);
}

function $inRange(this$static, type_0, key, fromKey, fromInclusive, toKey, toInclusive){
  var compare, compare0;
  if (type_0.fromKeyValid() && (compare0 = this$static.cmp.compare_0(key, fromKey) , compare0 < 0 || !fromInclusive && compare0 == 0)) {
    return false;
  }
  if (type_0.toKeyValid() && (compare = this$static.cmp.compare_0(key, toKey) , compare > 0 || !toInclusive && compare == 0)) {
    return false;
  }
  return true;
}

function $insert(this$static, tree, newNode, state){
  var c, childNum;
  if (!tree) {
    return newNode;
  }
   else {
    c = this$static.cmp.compare_0(newNode.key, tree.key);
    if (c == 0) {
      state.value_0 = $setValue(tree, newNode.value_0);
      state.found = true;
      return tree;
    }
    childNum = c < 0?0:1;
    tree.child[childNum] = $insert(this$static, tree.child[childNum], newNode, state);
    if ($isRed(tree.child[childNum])) {
      if ($isRed(tree.child[1 - childNum])) {
        tree.isRed = true;
        tree.child[0].isRed = false;
        tree.child[1].isRed = false;
      }
       else {
        $isRed(tree.child[childNum].child[childNum])?(tree = $rotateSingle(tree, 1 - childNum)):$isRed(tree.child[childNum].child[1 - childNum]) && (tree = $rotateDouble(tree, 1 - childNum));
      }
    }
  }
  return tree;
}

function $isRed(node){
  return !!node && node.isRed;
}

function $put_6(this$static, key, value_0){
  var node, state;
  node = new TreeMap$Node(key, value_0);
  state = new TreeMap$State;
  this$static.root = $insert(this$static, this$static.root, node, state);
  state.found || ++this$static.size_0;
  this$static.root.isRed = false;
  return state.value_0;
}

function $remove_9(this$static, k){
  var key, state;
  key = k;
  state = new TreeMap$State;
  $removeWithState(this$static, key, state);
  return state.value_0;
}

function $removeEntry(this$static, entry){
  var state;
  state = new TreeMap$State;
  state.matchValue = true;
  state.value_0 = entry.getValue();
  return $removeWithState(this$static, entry.getKey(), state);
}

function $removeWithState(this$static, key, state){
  var c, dir_0, dir2, found, grandparent, head, last, newNode, node, parent_0, sibling;
  if (!this$static.root) {
    return false;
  }
  found = null;
  parent_0 = null;
  head = new TreeMap$Node(null, null);
  dir_0 = 1;
  head.child[1] = this$static.root;
  node = head;
  while (node.child[dir_0]) {
    last = dir_0;
    grandparent = parent_0;
    parent_0 = node;
    node = node.child[dir_0];
    c = this$static.cmp.compare_0(key, node.key);
    dir_0 = c < 0?0:1;
    c == 0 && (!state.matchValue || equals_28(node.value_0, state.value_0)) && (found = node);
    if (!(!!node && node.isRed) && !$isRed(node.child[dir_0])) {
      if ($isRed(node.child[1 - dir_0])) {
        parent_0 = parent_0.child[last] = $rotateSingle(node, dir_0);
      }
       else if (!$isRed(node.child[1 - dir_0])) {
        sibling = parent_0.child[1 - last];
        if (sibling) {
          if (!$isRed(sibling.child[1 - last]) && !$isRed(sibling.child[last])) {
            parent_0.isRed = false;
            sibling.isRed = true;
            node.isRed = true;
          }
           else {
            dir2 = grandparent.child[1] == parent_0?1:0;
            $isRed(sibling.child[last])?(grandparent.child[dir2] = $rotateDouble(parent_0, last)):$isRed(sibling.child[1 - last]) && (grandparent.child[dir2] = $rotateSingle(parent_0, last));
            node.isRed = grandparent.child[dir2].isRed = true;
            grandparent.child[dir2].child[0].isRed = false;
            grandparent.child[dir2].child[1].isRed = false;
          }
        }
      }
    }
  }
  if (found) {
    state.found = true;
    state.value_0 = found.value_0;
    if (node != found) {
      newNode = new TreeMap$Node(node.key, node.value_0);
      $replaceNode(this$static, head, found, newNode);
      parent_0 == found && (parent_0 = newNode);
    }
    parent_0.child[parent_0.child[1] == node?1:0] = node.child[!node.child[0]?1:0];
    --this$static.size_0;
  }
  this$static.root = head.child[1];
  !!this$static.root && (this$static.root.isRed = false);
  return state.found;
}

function $replaceNode(this$static, head, node, newNode){
  var direction, parent_0;
  parent_0 = head;
  direction = parent_0.key == null || this$static.cmp.compare_0(node.key, parent_0.key) > 0?1:0;
  while (parent_0.child[direction] != node) {
    parent_0 = parent_0.child[direction];
    direction = this$static.cmp.compare_0(node.key, parent_0.key) > 0?1:0;
  }
  parent_0.child[direction] = newNode;
  newNode.isRed = node.isRed;
  newNode.child[0] = node.child[0];
  newNode.child[1] = node.child[1];
  node.child[0] = null;
  node.child[1] = null;
}

function $rotateDouble(tree, rotateDirection){
  var otherChildDir;
  otherChildDir = 1 - rotateDirection;
  tree.child[otherChildDir] = $rotateSingle(tree.child[otherChildDir], otherChildDir);
  return $rotateSingle(tree, rotateDirection);
}

function $rotateSingle(tree, rotateDirection){
  var otherChildDir, save;
  otherChildDir = 1 - rotateDirection;
  save = tree.child[otherChildDir];
  tree.child[otherChildDir] = save.child[rotateDirection];
  save.child[rotateDirection] = tree;
  tree.isRed = true;
  save.isRed = false;
  return save;
}

function TreeMap(){
  TreeMap_0.call(this, null);
}

function TreeMap_0(c){
  this.root = null;
  this.cmp = ($clinit_Comparators() , !c?INTERNAL_NATURAL_ORDER:c);
}

function TreeMap_1(map_0){
  TreeMap.call(this);
  $putAll(this, map_0);
}

function TreeMap_2(map_0){
  TreeMap_0.call(this, (checkCriticalNotNull(map_0) , naturalOrderToNull(map_0.cmp)));
  $putAll(this, map_0);
}

defineClass(32, 1238, {4:1, 68:1, 39:1}, TreeMap, TreeMap_0, TreeMap_1, TreeMap_2);
_.clear = function clear_17(){
  $clear_3(this);
}
;
_.entrySet_0 = function entrySet_5(){
  return new TreeMap$EntrySet(this);
}
;
_.put = function put_4(key, value_0){
  return $put_6(this, key, value_0);
}
;
_.remove = function remove_37(k){
  return $remove_9(this, k);
}
;
_.size = function size_27(){
  return this.size_0;
}
;
_.size_0 = 0;
var Ljava_util_TreeMap_2_classLit = createForClass('java.util', 'TreeMap', 32);
function $next_5(this$static){
  return this$static.last = castTo($next(this$static.iter), 40);
}

function $remove_10(this$static){
  $remove_0(this$static.iter);
  $removeEntry(this$static.this$01, this$static.last);
  this$static.last = null;
}

function TreeMap$EntryIterator(this$0){
  TreeMap$EntryIterator_0.call(this, this$0, ($clinit_TreeMap$SubMapType() , All));
}

function TreeMap$EntryIterator_0(this$0, type_0){
  var list;
  this.this$01 = this$0;
  list = new ArrayList;
  $inOrderAdd(this$0, list, type_0, this$0.root, null, false, null, false);
  this.iter = new AbstractList$ListIteratorImpl(list, 0);
}

defineClass(197, 1, {}, TreeMap$EntryIterator);
_.forEachRemaining = function forEachRemaining_30(consumer){
  $forEachRemaining(this, consumer);
}
;
_.next_1 = function next_19(){
  return $next_5(this);
}
;
_.hasNext_0 = function hasNext_14(){
  return $hasNext(this.iter);
}
;
_.remove_0 = function remove_38(){
  $remove_10(this);
}
;
var Ljava_util_TreeMap$EntryIterator_2_classLit = createForClass('java.util', 'TreeMap/EntryIterator', 197);
function TreeMap$EntrySet(this$0){
  this.this$01 = this$0;
  AbstractNavigableMap$EntrySet.call(this, this$0);
}

defineClass(34, 488, $intern_26, TreeMap$EntrySet);
_.clear = function clear_18(){
  $clear_3(this.this$01);
}
;
var Ljava_util_TreeMap$EntrySet_2_classLit = createForClass('java.util', 'TreeMap/EntrySet', 34);
function TreeMap$Node(key, value_0){
  AbstractMap$SimpleEntry.call(this, key, value_0);
  this.child = initUnidimensionalArray(Ljava_util_TreeMap$Node_2_classLit, $intern_0, 277, 2, 0, 1);
  this.isRed = true;
}

defineClass(277, 248, {309:1, 248:1, 40:1, 277:1}, TreeMap$Node);
_.isRed = false;
var Ljava_util_TreeMap$Node_2_classLit = createForClass('java.util', 'TreeMap/Node', 277);
function TreeMap$State(){
}

defineClass(416, 1, {}, TreeMap$State);
_.toString_0 = function toString_33(){
  return 'State: mv=' + this.matchValue + ' value=' + this.value_0 + ' done=' + this.done_0 + ' found=' + this.found;
}
;
_.done_0 = false;
_.found = false;
_.matchValue = false;
var Ljava_util_TreeMap$State_2_classLit = createForClass('java.util', 'TreeMap/State', 416);
function $clinit_TreeMap$SubMapType(){
  $clinit_TreeMap$SubMapType = emptyMethod;
  All = new TreeMap$SubMapType('All', 0);
  Head = new TreeMap$SubMapType$1;
  Range_0 = new TreeMap$SubMapType$2;
  Tail = new TreeMap$SubMapType$3;
}

function TreeMap$SubMapType(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_4(){
  $clinit_TreeMap$SubMapType();
  return stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_TreeMap$SubMapType_2_classLit, 1), $intern_33, 208, 0, [All, Head, Range_0, Tail]);
}

defineClass(208, 52, $intern_61, TreeMap$SubMapType);
_.fromKeyValid = function fromKeyValid(){
  return false;
}
;
_.toKeyValid = function toKeyValid(){
  return false;
}
;
var All, Head, Range_0, Tail;
var Ljava_util_TreeMap$SubMapType_2_classLit = createForEnum('java.util', 'TreeMap/SubMapType', 208, values_4);
function TreeMap$SubMapType$1(){
  TreeMap$SubMapType.call(this, 'Head', 1);
}

defineClass(939, 208, $intern_61, TreeMap$SubMapType$1);
_.toKeyValid = function toKeyValid_0(){
  return true;
}
;
var Ljava_util_TreeMap$SubMapType$1_2_classLit = createForEnum('java.util', 'TreeMap/SubMapType/1', 939, null);
function TreeMap$SubMapType$2(){
  TreeMap$SubMapType.call(this, 'Range', 2);
}

defineClass(940, 208, $intern_61, TreeMap$SubMapType$2);
_.fromKeyValid = function fromKeyValid_0(){
  return true;
}
;
_.toKeyValid = function toKeyValid_1(){
  return true;
}
;
var Ljava_util_TreeMap$SubMapType$2_2_classLit = createForEnum('java.util', 'TreeMap/SubMapType/2', 940, null);
function TreeMap$SubMapType$3(){
  TreeMap$SubMapType.call(this, 'Tail', 3);
}

defineClass(941, 208, $intern_61, TreeMap$SubMapType$3);
_.fromKeyValid = function fromKeyValid_1(){
  return true;
}
;
var Ljava_util_TreeMap$SubMapType$3_2_classLit = createForEnum('java.util', 'TreeMap/SubMapType/3', 941, null);
function $contains_4(this$static, o){
  return $containsKey_0(this$static.map_0, o);
}

function TreeSet(c){
  this.map_0 = new TreeMap;
  $addAll(this, c);
}

function TreeSet_0(c){
  this.map_0 = new TreeMap_0(c);
}

defineClass(362, $intern_25, $intern_31, TreeSet, TreeSet_0);
_.spliterator_0 = function spliterator_9(){
  return new SortedSet$1(this);
}
;
_.add = function add_20(o){
  return $put_6(this.map_0, o, ($clinit_Boolean() , FALSE)) == null;
}
;
_.clear = function clear_19(){
  $clear_3(this.map_0);
}
;
_.contains = function contains_16(o){
  return $contains_4(this, o);
}
;
_.iterator = function iterator_18(){
  var entryIterator;
  return entryIterator = new TreeMap$EntryIterator((new TreeMap$EntrySet((new AbstractNavigableMap$NavigableKeySet(this.map_0)).map_0)).this$01_0) , new AbstractNavigableMap$NavigableKeySet$1(entryIterator);
}
;
_.remove = function remove_39(o){
  return $remove_9(this.map_0, o) != null;
}
;
_.size = function size_28(){
  return this.map_0.size_0;
}
;
var Ljava_util_TreeSet_2_classLit = createForClass('java.util', 'TreeSet', 362);
function $clinit_UUID(){
  $clinit_UUID = emptyMethod;
  CHARS = $toCharArray('0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz');
}

function UUID(uuid){
  $clinit_UUID();
  this.uuid = uuid;
}

function uuid_1(){
  $clinit_UUID();
  var i, r, uuid;
  uuid = initUnidimensionalArray(C_classLit, $intern_18, 8, 36, 15, 1);
  uuid[8] = uuid[13] = uuid[18] = uuid[23] = 45;
  uuid[14] = 52;
  for (i = 0; i < 36; i++) {
    if (uuid[i] == 0) {
      r = round_int($wnd.Math.random() * 16);
      uuid[i] = CHARS[i == 19?r & 3 | 8:r & 15];
    }
  }
  return valueOf_5(uuid, 0, uuid.length);
}

defineClass(317, 1, {}, UUID);
_.toString_0 = function toString_34(){
  return this.uuid;
}
;
var CHARS;
var Ljava_util_UUID_2_classLit = createForClass('java.util', 'UUID', 317);
function $complete(this$static, value_0){
  var function_0, future, i, i0, i1, i2, t;
  this$static.value_0 = value_0;
  this$static.isDone = true;
  for (i0 = 0; i0 < this$static.applies.array.length; i0++) {
    function_0 = castToFunction($get_1(this$static.applies, i0));
    future = castTo($get_1(this$static.applyFutures, i0), 6);
    try {
      $complete(future, function_0(value_0));
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 33)) {
        t = $e0;
        $completeExceptionally(future, t);
      }
       else 
        throw toJs($e0);
    }
  }
  for (i1 = 0; i1 < this$static.consumers.array.length; i1++) {
    function_0 = castTo($get_1(this$static.consumers, i1), 46);
    future = castTo($get_1(this$static.consumeFutures, i1), 6);
    try {
      function_0.accept(value_0);
      $complete(future, null);
    }
     catch ($e1) {
      $e1 = toJava($e1);
      if (instanceOf($e1, 33)) {
        t = $e1;
        $completeExceptionally(future, t);
      }
       else 
        throw toJs($e1);
    }
  }
  for (i2 = 0; i2 < this$static.composers.array.length; i2++) {
    function_0 = castToFunction($get_1(this$static.composers, i2));
    future = castTo($get_1(this$static.composeFutures, i2), 6);
    try {
      $exceptionally($thenAccept(castTo(function_0(value_0), 87), new CompletableFuture$lambda$2$Type(future)), makeLambdaFunction(CompletableFuture$lambda$3$Type.prototype.apply_0, CompletableFuture$lambda$3$Type, [future]));
    }
     catch ($e2) {
      $e2 = toJava($e2);
      if (instanceOf($e2, 33)) {
        t = $e2;
        $completeExceptionally(future, t);
      }
       else 
        throw toJs($e2);
    }
  }
  for (i = 0; i < this$static.errors.array.length; i++) {
    future = castTo($get_1(this$static.errorFutures, i), 6);
    castToFunction($get_1(this$static.errors, i));
    try {
      $complete(future, value_0);
    }
     catch ($e3) {
      $e3 = toJava($e3);
      if (instanceOf($e3, 33)) {
        t = $e3;
        $completeExceptionally(future, t);
      }
       else 
        throw toJs($e3);
    }
  }
  this$static.errors.array = initUnidimensionalArray(Ljava_lang_Object_2_classLit, $intern_0, 1, 0, 5, 1);
  this$static.errorFutures.array = initUnidimensionalArray(Ljava_lang_Object_2_classLit, $intern_0, 1, 0, 5, 1);
  this$static.composers.array = initUnidimensionalArray(Ljava_lang_Object_2_classLit, $intern_0, 1, 0, 5, 1);
  this$static.composeFutures.array = initUnidimensionalArray(Ljava_lang_Object_2_classLit, $intern_0, 1, 0, 5, 1);
  this$static.consumers.array = initUnidimensionalArray(Ljava_lang_Object_2_classLit, $intern_0, 1, 0, 5, 1);
  this$static.consumeFutures.array = initUnidimensionalArray(Ljava_lang_Object_2_classLit, $intern_0, 1, 0, 5, 1);
  this$static.applies.array = initUnidimensionalArray(Ljava_lang_Object_2_classLit, $intern_0, 1, 0, 5, 1);
  this$static.applyFutures.array = initUnidimensionalArray(Ljava_lang_Object_2_classLit, $intern_0, 1, 0, 5, 1);
  return true;
}

function $completeExceptionally(this$static, err){
  this$static.reason = err;
  this$static.isDone = true;
  $execute(($clinit_ForkJoinPool() , $clinit_ForkJoinPool() , instance_0), new CompletableFuture$lambda$4$Type(this$static, err));
  return true;
}

function $exceptionally(this$static, handler){
  var fut, t;
  if (this$static.isDone) {
    if (this$static.isDone && !!this$static.reason) {
      try {
        return new CompletableFuture_0(handler(this$static.reason));
      }
       catch ($e0) {
        $e0 = toJava($e0);
        if (instanceOf($e0, 33)) {
          t = $e0;
          fut = new CompletableFuture;
          $completeExceptionally(fut, t);
          return fut;
        }
         else 
          throw toJs($e0);
      }
    }
     else {
      return this$static;
    }
  }
   else {
    fut = new CompletableFuture;
    $add(this$static.errorFutures, fut);
    $add(this$static.errors, handler);
    return fut;
  }
}

function $join(){
  throw toJs(new IllegalStateException_0('Illegal synchronous call!'));
}

function $lambda$4(this$static, err_1){
  var function_0, future, i, i0, i1, i2, t;
  for (i0 = 0; i0 < this$static.applies.array.length; i0++) {
    future = castTo($get_1(this$static.applyFutures, i0), 6);
    try {
      $completeExceptionally(future, err_1);
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 33)) {
        t = $e0;
        $completeExceptionally(future, t);
      }
       else 
        throw toJs($e0);
    }
  }
  for (i1 = 0; i1 < this$static.consumers.array.length; i1++) {
    future = castTo($get_1(this$static.consumeFutures, i1), 6);
    try {
      $completeExceptionally(future, err_1);
    }
     catch ($e1) {
      $e1 = toJava($e1);
      if (instanceOf($e1, 33)) {
        t = $e1;
        $completeExceptionally(future, t);
      }
       else 
        throw toJs($e1);
    }
  }
  for (i2 = 0; i2 < this$static.composers.array.length; i2++) {
    future = castTo($get_1(this$static.composeFutures, i2), 6);
    try {
      $completeExceptionally(future, err_1);
    }
     catch ($e2) {
      $e2 = toJava($e2);
      if (instanceOf($e2, 33)) {
        t = $e2;
        $completeExceptionally(future, t);
      }
       else 
        throw toJs($e2);
    }
  }
  for (i = 0; i < this$static.errors.array.length; i++) {
    future = castTo($get_1(this$static.errorFutures, i), 6);
    function_0 = castToFunction($get_1(this$static.errors, i));
    try {
      $complete(future, function_0(err_1));
    }
     catch ($e3) {
      $e3 = toJava($e3);
      if (instanceOf($e3, 33)) {
        t = $e3;
        $completeExceptionally(future, t);
      }
       else 
        throw toJs($e3);
    }
  }
  this$static.errors.array = initUnidimensionalArray(Ljava_lang_Object_2_classLit, $intern_0, 1, 0, 5, 1);
  this$static.errorFutures.array = initUnidimensionalArray(Ljava_lang_Object_2_classLit, $intern_0, 1, 0, 5, 1);
  this$static.composers.array = initUnidimensionalArray(Ljava_lang_Object_2_classLit, $intern_0, 1, 0, 5, 1);
  this$static.composeFutures.array = initUnidimensionalArray(Ljava_lang_Object_2_classLit, $intern_0, 1, 0, 5, 1);
  this$static.consumers.array = initUnidimensionalArray(Ljava_lang_Object_2_classLit, $intern_0, 1, 0, 5, 1);
  this$static.consumeFutures.array = initUnidimensionalArray(Ljava_lang_Object_2_classLit, $intern_0, 1, 0, 5, 1);
  this$static.applies.array = initUnidimensionalArray(Ljava_lang_Object_2_classLit, $intern_0, 1, 0, 5, 1);
  this$static.applyFutures.array = initUnidimensionalArray(Ljava_lang_Object_2_classLit, $intern_0, 1, 0, 5, 1);
}

function $thenAccept(this$static, action){
  var fut, t;
  fut = new CompletableFuture;
  if (this$static.isDone) {
    if (this$static.reason) {
      $completeExceptionally(fut, this$static.reason);
    }
     else {
      try {
        action.accept(this$static.value_0);
        $complete(fut, null);
      }
       catch ($e0) {
        $e0 = toJava($e0);
        if (instanceOf($e0, 33)) {
          t = $e0;
          $completeExceptionally(fut, t);
        }
         else 
          throw toJs($e0);
      }
    }
  }
   else {
    $add(this$static.consumeFutures, fut);
    $add(this$static.consumers, action);
  }
  return fut;
}

function $thenApply(this$static, fn){
  var fut, t;
  fut = new CompletableFuture;
  if (this$static.isDone) {
    if (this$static.reason) {
      $completeExceptionally(fut, this$static.reason);
    }
     else {
      try {
        $complete(fut, fn(this$static.value_0));
      }
       catch ($e0) {
        $e0 = toJava($e0);
        if (instanceOf($e0, 33)) {
          t = $e0;
          $completeExceptionally(fut, t);
        }
         else 
          throw toJs($e0);
      }
    }
  }
   else {
    $add(this$static.applyFutures, fut);
    $add(this$static.applies, fn);
  }
  return fut;
}

function $thenCompose(this$static, fn){
  var fut, t;
  fut = new CompletableFuture;
  if (this$static.isDone) {
    if (this$static.reason) {
      $completeExceptionally(fut, this$static.reason);
    }
     else {
      try {
        $exceptionally($thenAccept(castTo(fn(this$static.value_0), 87), new CompletableFuture$0methodref$complete$Type(fut)), makeLambdaFunction(CompletableFuture$lambda$1$Type.prototype.apply_0, CompletableFuture$lambda$1$Type, [fut]));
      }
       catch ($e0) {
        $e0 = toJava($e0);
        if (instanceOf($e0, 33)) {
          t = $e0;
          $completeExceptionally(fut, t);
        }
         else 
          throw toJs($e0);
      }
    }
  }
   else {
    $add(this$static.composeFutures, fut);
    $add(this$static.composers, fn);
  }
  return fut;
}

function CompletableFuture(){
  CompletableFuture_1.call(this, null, false);
}

function CompletableFuture_0(value_0){
  CompletableFuture_1.call(this, value_0, true);
}

function CompletableFuture_1(value_0, isDone){
  this.consumers = new ArrayList;
  this.consumeFutures = new ArrayList;
  this.applies = new ArrayList;
  this.applyFutures = new ArrayList;
  this.composers = new ArrayList;
  this.composeFutures = new ArrayList;
  this.errors = new ArrayList;
  this.errorFutures = new ArrayList;
  this.value_0 = value_0;
  this.reason = null;
  this.isDone = isDone;
}

defineClass(6, 1, {6:1, 87:1, 1345:1}, CompletableFuture, CompletableFuture_0);
_.complete = function complete(value_0){
  return $complete(this, value_0);
}
;
_.completeExceptionally = function completeExceptionally(err){
  return $completeExceptionally(this, err);
}
;
_.exceptionally = function exceptionally(handler){
  return $exceptionally(this, handler);
}
;
_.thenApply = function thenApply(fn){
  return $thenApply(this, fn);
}
;
_.thenCompose = function thenCompose(fn){
  return $thenCompose(this, fn);
}
;
_.isDone = false;
var Ljava_util_concurrent_CompletableFuture_2_classLit = createForClass('java.util.concurrent', 'CompletableFuture', 6);
function CompletableFuture$0methodref$complete$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(568, 1, $intern_32, CompletableFuture$0methodref$complete$Type);
_.accept = function accept_7(arg0){
  $complete(this.$$outer_0, arg0);
}
;
_.andThen = function andThen(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Ljava_util_concurrent_CompletableFuture$0methodref$complete$Type_2_classLit = createForClass('java.util.concurrent', 'CompletableFuture/0methodref$complete$Type', 568);
function CompletableFuture$lambda$1$Type(fut_0){
  this.fut_0 = fut_0;
}

defineClass(1343, $wnd.Function, $intern_22, CompletableFuture$lambda$1$Type);
_.apply_0 = function apply_2(arg0){
  return $completeExceptionally(this.fut_0, castTo(arg0, 33)) , null;
}
;
function CompletableFuture$lambda$2$Type(future_0){
  this.future_0 = future_0;
}

defineClass(569, 1, $intern_32, CompletableFuture$lambda$2$Type);
_.accept = function accept_8(arg0){
  $complete(this.future_0, arg0);
}
;
_.andThen = function andThen_0(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Ljava_util_concurrent_CompletableFuture$lambda$2$Type_2_classLit = createForClass('java.util.concurrent', 'CompletableFuture/lambda$2$Type', 569);
function CompletableFuture$lambda$3$Type(future_0){
  this.future_0 = future_0;
}

defineClass(1344, $wnd.Function, $intern_22, CompletableFuture$lambda$3$Type);
_.apply_0 = function apply_3(arg0){
  return $completeExceptionally(this.future_0, castTo(arg0, 33)) , null;
}
;
function CompletableFuture$lambda$4$Type($$outer_0, err_1){
  this.$$outer_0 = $$outer_0;
  this.err_1 = err_1;
}

defineClass(570, 1, {}, CompletableFuture$lambda$4$Type);
_.run = function run(){
  $lambda$4(this.$$outer_0, this.err_1);
}
;
var Ljava_util_concurrent_CompletableFuture$lambda$4$Type_2_classLit = createForClass('java.util.concurrent', 'CompletableFuture/lambda$4$Type', 570);
function $containsKey_3(this$static, key){
  if (key == null) {
    throw toJs(new NullPointerException);
  }
  return $containsKey(this$static.backingMap, key);
}

function $get_7(this$static, key){
  if (key == null) {
    throw toJs(new NullPointerException);
  }
  return $get(this$static.backingMap, key);
}

function $put_7(this$static, key, value_0){
  if (key == null || value_0 == null) {
    throw toJs(new NullPointerException);
  }
  return $put(this$static.backingMap, key, value_0);
}

function $remove_11(this$static, key){
  if (key == null) {
    throw toJs(new NullPointerException);
  }
  return $remove(this$static.backingMap, key);
}

function ConcurrentHashMap(){
  this.backingMap = new HashMap;
}

defineClass(428, 1227, $intern_24, ConcurrentHashMap);
_.containsKey = function containsKey_6(key){
  return $containsKey_3(this, key);
}
;
_.containsValue = function containsValue_5(value_0){
  if (value_0 == null) {
    throw toJs(new NullPointerException);
  }
  return $containsValue(this.backingMap, value_0);
}
;
_.entrySet_0 = function entrySet_6(){
  return new AbstractHashMap$EntrySet(this.backingMap);
}
;
_.get = function get_16(key){
  return $get_7(this, key);
}
;
_.put = function put_6(key, value_0){
  return $put_7(this, key, value_0);
}
;
_.putIfAbsent = function putIfAbsent_1(key, value_0){
  return $containsKey_3(this, key)?$get_7(this, key):$put_7(this, key, value_0);
}
;
_.remove = function remove_40(key){
  return $remove_11(this, key);
}
;
_.replace = function replace_2(key, value_0){
  if (value_0 == null) {
    throw toJs(new NullPointerException);
  }
   else 
    return $containsKey_3(this, key)?$put_7(this, key, value_0):null;
}
;
var Ljava_util_concurrent_ConcurrentHashMap_2_classLit = createForClass('java.util.concurrent', 'ConcurrentHashMap', 428);
function $clinit_ForkJoinPool(){
  $clinit_ForkJoinPool = emptyMethod;
  instance_0 = new ForkJoinPool(new $wnd.ForkJoinJS.JSForkJoinPool);
}

function $execute(this$static, task){
  this$static.pool.execute(task);
}

function ForkJoinPool(pool){
  this.pool = pool;
}

defineClass(922, 1, {}, ForkJoinPool);
var instance_0;
var Ljava_util_concurrent_ForkJoinPool_2_classLit = createForClass('java.util.concurrent', 'ForkJoinPool', 922);
function $schedule(this$static, callable, delay, unit){
  if (unit != ($clinit_TimeUnit() , MILLISECONDS)) {
    throw toJs(new Error_1('only milliseconds supported'));
  }
  if (compare_1(delay, 0) < 0 || compare_1(delay, $intern_1) > 0) {
    throw toJs(new Error_1('invalid delay'));
  }
  this$static.scheduler.callAfterDelay(new ScheduledThreadPoolExecutor$CallableWrapper(callable), toInt_0(delay));
  return null;
}

function ScheduledThreadPoolExecutor(){
  this.scheduler = new $wnd.callback.NativeJSScheduler;
}

defineClass(525, 1, {}, ScheduledThreadPoolExecutor);
var Ljava_util_concurrent_ScheduledThreadPoolExecutor_2_classLit = createForClass('java.util.concurrent', 'ScheduledThreadPoolExecutor', 525);
function ScheduledThreadPoolExecutor$CallableWrapper(callable){
  this.callable = callable;
}

defineClass(1096, 1, {}, ScheduledThreadPoolExecutor$CallableWrapper);
_.call = function call_0(){
  this.callable.call_0();
}
;
var Ljava_util_concurrent_ScheduledThreadPoolExecutor$CallableWrapper_2_classLit = createForClass('java.util.concurrent', 'ScheduledThreadPoolExecutor/CallableWrapper', 1096);
function $clinit_TimeUnit(){
  $clinit_TimeUnit = emptyMethod;
  NANOSECONDS = new TimeUnit$1;
  MICROSECONDS = new TimeUnit$2;
  MILLISECONDS = new TimeUnit$3;
  SECONDS = new TimeUnit$4;
  MINUTES = new TimeUnit$5;
  HOURS_0 = new TimeUnit$6;
  DAYS = new TimeUnit$7;
}

function TimeUnit(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_5(){
  $clinit_TimeUnit();
  return stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_concurrent_TimeUnit_2_classLit, 1), $intern_33, 140, 0, [NANOSECONDS, MICROSECONDS, MILLISECONDS, SECONDS, MINUTES, HOURS_0, DAYS]);
}

defineClass(140, 52, $intern_62);
var DAYS, HOURS_0, MICROSECONDS, MILLISECONDS, MINUTES, NANOSECONDS, SECONDS;
var Ljava_util_concurrent_TimeUnit_2_classLit = createForEnum('java.util.concurrent', 'TimeUnit', 140, values_5);
function TimeUnit$1(){
  TimeUnit.call(this, 'NANOSECONDS', 0);
}

defineClass(1167, 140, $intern_62, TimeUnit$1);
var Ljava_util_concurrent_TimeUnit$1_2_classLit = createForEnum('java.util.concurrent', 'TimeUnit/1', 1167, null);
function TimeUnit$2(){
  TimeUnit.call(this, 'MICROSECONDS', 1);
}

defineClass(1168, 140, $intern_62, TimeUnit$2);
var Ljava_util_concurrent_TimeUnit$2_2_classLit = createForEnum('java.util.concurrent', 'TimeUnit/2', 1168, null);
function TimeUnit$3(){
  TimeUnit.call(this, 'MILLISECONDS', 2);
}

defineClass(1169, 140, $intern_62, TimeUnit$3);
var Ljava_util_concurrent_TimeUnit$3_2_classLit = createForEnum('java.util.concurrent', 'TimeUnit/3', 1169, null);
function TimeUnit$4(){
  TimeUnit.call(this, 'SECONDS', 3);
}

defineClass(1170, 140, $intern_62, TimeUnit$4);
var Ljava_util_concurrent_TimeUnit$4_2_classLit = createForEnum('java.util.concurrent', 'TimeUnit/4', 1170, null);
function TimeUnit$5(){
  TimeUnit.call(this, 'MINUTES', 4);
}

defineClass(1171, 140, $intern_62, TimeUnit$5);
var Ljava_util_concurrent_TimeUnit$5_2_classLit = createForEnum('java.util.concurrent', 'TimeUnit/5', 1171, null);
function TimeUnit$6(){
  TimeUnit.call(this, 'HOURS', 5);
}

defineClass(1172, 140, $intern_62, TimeUnit$6);
var Ljava_util_concurrent_TimeUnit$6_2_classLit = createForEnum('java.util.concurrent', 'TimeUnit/6', 1172, null);
function TimeUnit$7(){
  TimeUnit.call(this, 'DAYS', 6);
}

defineClass(1173, 140, $intern_62, TimeUnit$7);
var Ljava_util_concurrent_TimeUnit$7_2_classLit = createForEnum('java.util.concurrent', 'TimeUnit/7', 1173, null);
function $set_3(this$static, newValue){
  this$static.value_0 = newValue;
}

function AtomicBoolean(){
}

function AtomicBoolean_0(){
  this.value_0 = true;
}

defineClass(471, 1, $intern_18, AtomicBoolean, AtomicBoolean_0);
_.toString_0 = function toString_35(){
  return $clinit_Boolean() , '' + this.value_0;
}
;
_.value_0 = false;
var Ljava_util_concurrent_atomic_AtomicBoolean_2_classLit = createForClass('java.util.concurrent.atomic', 'AtomicBoolean', 471);
function AtomicLong(initialValue){
  this.value_0 = initialValue;
}

defineClass(859, 265, $intern_9, AtomicLong);
_.toString_0 = function toString_36(){
  return '' + toString_4(this.value_0);
}
;
_.value_0 = 0;
var Ljava_util_concurrent_atomic_AtomicLong_2_classLit = createForClass('java.util.concurrent.atomic', 'AtomicLong', 859);
function Predicate$lambda$2$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(392, 1, {}, Predicate$lambda$2$Type);
_.test_0 = function test_0(t){
  return !$test(t);
}
;
var Ljava_util_function_Predicate$lambda$2$Type_2_classLit = createForClass('java.util.function', 'Predicate/lambda$2$Type', 392);
defineClass(343, 1, {343:1});
var Ljava_util_logging_Handler_2_classLit = createForClass('java.util.logging', 'Handler', 343);
function $clinit_Level(){
  $clinit_Level = emptyMethod;
  INFO = new Level$LevelInfo;
  SEVERE = new Level$LevelSevere;
  WARNING = new Level$LevelWarning;
}

defineClass(1240, 1, $intern_18);
_.getName_0 = function getName_0(){
  return 'DUMMY';
}
;
_.intValue = function intValue_0(){
  return -1;
}
;
_.toString_0 = function toString_37(){
  return this.getName_0();
}
;
var INFO, SEVERE, WARNING;
var Ljava_util_logging_Level_2_classLit = createForClass('java.util.logging', 'Level', 1240);
function Level$LevelInfo(){
}

defineClass(1038, 1240, $intern_18, Level$LevelInfo);
_.getName_0 = function getName_1(){
  return 'INFO';
}
;
_.intValue = function intValue_1(){
  return 800;
}
;
var Ljava_util_logging_Level$LevelInfo_2_classLit = createForClass('java.util.logging', 'Level/LevelInfo', 1038);
function Level$LevelSevere(){
}

defineClass(1039, 1240, $intern_18, Level$LevelSevere);
_.getName_0 = function getName_2(){
  return 'SEVERE';
}
;
_.intValue = function intValue_2(){
  return $intern_49;
}
;
var Ljava_util_logging_Level$LevelSevere_2_classLit = createForClass('java.util.logging', 'Level/LevelSevere', 1039);
function Level$LevelWarning(){
}

defineClass(1040, 1240, $intern_18, Level$LevelWarning);
_.getName_0 = function getName_3(){
  return 'WARNING';
}
;
_.intValue = function intValue_3(){
  return 900;
}
;
var Ljava_util_logging_Level$LevelWarning_2_classLit = createForClass('java.util.logging', 'Level/LevelWarning', 1040);
function $addLoggerImpl(this$static, logger){
  (($clinit_Logger() , LOGGING_OFF)?null:logger.name_0).length == 0 && $addHandler(logger, new SimpleConsoleLogHandler);
  $putStringValue(this$static.loggerMap, LOGGING_OFF?null:logger.name_0, logger);
}

function $ensureLogger(this$static, name_0){
  var logger, newLogger, name_1, parentName;
  logger = castTo($getStringValue(this$static.loggerMap, name_0), 300);
  if (!logger) {
    newLogger = new Logger(name_0);
    name_1 = ($clinit_Logger() , LOGGING_OFF)?null:newLogger.name_0;
    parentName = $substring_0(name_1, 0, $wnd.Math.max(0, $lastIndexOf(name_1, fromCodePoint(46))));
    $setParent(newLogger, $ensureLogger(this$static, parentName));
    (LOGGING_OFF?null:newLogger.name_0).length == 0 && $addHandler(newLogger, new SimpleConsoleLogHandler);
    $putStringValue(this$static.loggerMap, LOGGING_OFF?null:newLogger.name_0, newLogger);
    return newLogger;
  }
  return logger;
}

function LogManager(){
  this.loggerMap = new HashMap;
}

function getLogManager(){
  var rootLogger;
  if (!singleton_0) {
    singleton_0 = new LogManager;
    rootLogger = new Logger('');
    $setLevel(rootLogger, ($clinit_Level() , INFO));
    $addLoggerImpl(singleton_0, rootLogger);
  }
  return singleton_0;
}

defineClass(1095, 1, {}, LogManager);
var singleton_0;
var Ljava_util_logging_LogManager_2_classLit = createForClass('java.util.logging', 'LogManager', 1095);
function LogRecord(level, msg){
  this.level = level;
  this.msg = msg;
  $clinit_System();
  fromDouble_0(Date.now());
}

defineClass(1109, 1, $intern_18, LogRecord);
_.thrown = null;
var Ljava_util_logging_LogRecord_2_classLit = createForClass('java.util.logging', 'LogRecord', 1109);
function $clinit_Logger(){
  $clinit_Logger = emptyMethod;
  LOGGING_OFF = true;
  ALL_ENABLED = false;
  INFO_ENABLED = false;
  WARNING_ENABLED = false;
  SEVERE_ENABLED = false;
}

function $actuallyLog(this$static, record){
  var handler$array, handler$array0, handler$index, handler$index0, handler$max, handler$max0, logger;
  for (handler$array0 = $getHandlers(this$static) , handler$index0 = 0 , handler$max0 = handler$array0.length; handler$index0 < handler$max0; ++handler$index0) {
    $publish(record);
  }
  logger = !LOGGING_OFF && this$static.useParentHandlers?LOGGING_OFF?null:this$static.parent_0:null;
  while (logger) {
    for (handler$array = $getHandlers(logger) , handler$index = 0 , handler$max = handler$array.length; handler$index < handler$max; ++handler$index) {
      $publish(record);
    }
    logger = !LOGGING_OFF && logger.useParentHandlers?LOGGING_OFF?null:logger.parent_0:null;
  }
}

function $addHandler(this$static, handler){
  if (LOGGING_OFF) {
    return;
  }
  $add(this$static.handlers, handler);
}

function $getEffectiveLevel(this$static){
  var effectiveLevel, logger;
  if (this$static.level) {
    return this$static.level;
  }
  logger = LOGGING_OFF?null:this$static.parent_0;
  while (logger) {
    effectiveLevel = LOGGING_OFF?null:logger.level;
    if (effectiveLevel) {
      return effectiveLevel;
    }
    logger = LOGGING_OFF?null:logger.parent_0;
  }
  return $clinit_Level() , INFO;
}

function $getHandlers(this$static){
  if (LOGGING_OFF) {
    return initUnidimensionalArray(Ljava_util_logging_Handler_2_classLit, $intern_63, 343, 0, 0, 1);
  }
  return castTo($toArray(this$static.handlers, initUnidimensionalArray(Ljava_util_logging_Handler_2_classLit, $intern_63, 343, this$static.handlers.array.length, 0, 1)), 1203);
}

function $info(this$static, msg){
  if (!INFO_ENABLED) {
    return;
  }
  $log(this$static, ($clinit_Level() , INFO), msg, null);
}

function $log(this$static, level, msg, thrown){
  var record;
  (ALL_ENABLED?level.intValue() >= ($getEffectiveLevel(this$static) , 800):INFO_ENABLED?level.intValue() >= ($clinit_Level() , 800):WARNING_ENABLED?level.intValue() >= ($clinit_Level() , 900):SEVERE_ENABLED && level.intValue() >= ($clinit_Level() , $intern_49)) && (record = new LogRecord(level, msg) , record.thrown = thrown , $actuallyLog(this$static, record) , undefined);
}

function $setLevel(this$static, newLevel){
  if (LOGGING_OFF) {
    return;
  }
  this$static.level = newLevel;
}

function $setParent(this$static, newParent){
  if (LOGGING_OFF) {
    return;
  }
  !!newParent && (this$static.parent_0 = newParent);
}

function $severe(this$static, msg){
  if (!SEVERE_ENABLED) {
    return;
  }
  $log(this$static, ($clinit_Level() , SEVERE), msg, null);
}

function Logger(name_0){
  $clinit_Logger();
  if (LOGGING_OFF) {
    return;
  }
  this.name_0 = name_0;
  this.useParentHandlers = true;
  this.handlers = new ArrayList;
}

function getLogger(){
  $clinit_Logger();
  if (LOGGING_OFF) {
    return new Logger(null);
  }
  return $ensureLogger(getLogManager(), 'global');
}

defineClass(300, 1, {300:1}, Logger);
_.useParentHandlers = false;
var ALL_ENABLED = false, INFO_ENABLED = false, LOGGING_OFF = false, SEVERE_ENABLED = false, WARNING_ENABLED = false;
var Ljava_util_logging_Logger_2_classLit = createForClass('java.util.logging', 'Logger', 300);
function $publish(record){
  var console_0, level, val;
  console_0 = $equals_0(typeof(console_0), 'undefined')?null:new ConsoleLogger;
  if (!console_0) {
    return;
  }
  $clinit_Level();
  if ($intern_8 > record.level.intValue()) {
    return;
  }
  level = (val = record.level.intValue() , val >= $intern_49?'error':val >= 900?'warn':val >= 800?'info':'log');
  $log_0(level, record.msg);
  !!record.thrown && $log_1(console_0, level, record.thrown, 'Exception: ', true);
}

function SimpleConsoleLogHandler(){
}

defineClass(530, 343, {343:1}, SimpleConsoleLogHandler);
var Ljava_util_logging_SimpleConsoleLogHandler_2_classLit = createForClass('java.util.logging', 'SimpleConsoleLogHandler', 530);
function addAll_6(collection, items){
  collection.addAll(items);
  return collection;
}

function groupingBy(downstream){
  return groupingBy0(new Collectors$lambda$6$Type, downstream);
}

function groupingBy0(supplier, downstream){
  return of_3(supplier, new Collectors$lambda$7$Type, new Collectors$lambda$8$Type, makeLambdaFunction(Collectors$lambda$9$Type.prototype.apply_0, Collectors$lambda$9$Type, [downstream]), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, []));
}

function lambda$44(){
  throw toJs(new IllegalStateException_0("Can't assign multiple values to the same key"));
}

function lambda$46(keyMapper_0, valueMapper_1, mergeFunction_2, map_3, item_4){
  var key, newValue;
  key = keyMapper_0(item_4);
  newValue = valueMapper_1(item_4);
  map_3.containsKey(key)?map_3.put(key, mergeFunction_2.apply_1(map_3.get(key), newValue)):map_3.put(key, newValue);
}

function lambda$47(mergeFunction_0, m1_1, m2_2){
  return mergeAll(m1_1, m2_2, mergeFunction_0);
}

function lambda$7(m_1, o_2){
  var k, l;
  k = castTo($get_6(castTo(castTo(o_2, 203).right, 178).parent), 177).path;
  l = castTo(m_1.get(k), 17);
  if (!l) {
    l = new ArrayList;
    m_1.put(k, l);
  }
  l.add(o_2);
}

function lambda$9(downstream_1, m_2){
  var entry, entry$iterator, result;
  result = new HashMap;
  for (entry$iterator = m_2.entrySet_0().iterator(); entry$iterator.hasNext_0();) {
    entry = castTo(entry$iterator.next_1(), 40);
    $put(result, entry.getKey(), streamAndCollect(downstream_1, castTo(entry.getValue(), 17)));
  }
  return result;
}

function mergeAll(m1, m2, mergeFunction){
  var entry, entry$iterator;
  for (entry$iterator = m2.entrySet_0().iterator(); entry$iterator.hasNext_0();) {
    entry = castTo(entry$iterator.next_1(), 40);
    m1.merge(entry.getKey(), entry.getValue(), mergeFunction);
  }
  return m1;
}

function streamAndCollect(downstream, list){
  var a, t, t$iterator;
  a = downstream.supplier.get_0();
  for (t$iterator = list.iterator(); t$iterator.hasNext_0();) {
    t = t$iterator.next_1();
    downstream.accumulator.accept_2(a, t);
  }
  return downstream.finisher.call(null, a);
}

function toMap(keyMapper, valueMapper, mergeFunction, mapSupplier){
  return of_4(mapSupplier, new Collectors$lambda$46$Type(keyMapper, valueMapper, mergeFunction), new Collectors$lambda$47$Type(mergeFunction), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]));
}

function Collectors$10methodref$merge$Type(){
}

defineClass(125, 1, $intern_34, Collectors$10methodref$merge$Type);
_.apply_1 = function apply_5(arg0, arg1){
  return $merge_0(castTo(arg0, 182), castTo(arg1, 182));
}
;
var Ljava_util_stream_Collectors$10methodref$merge$Type_2_classLit = createForClass('java.util.stream', 'Collectors/10methodref$merge$Type', 125);
function Collectors$11methodref$toString$Type(){
}

defineClass(135, $wnd.Function, $intern_22, Collectors$11methodref$toString$Type);
_.apply_0 = function apply_6(arg0){
  return $toString_6(castTo(arg0, 182));
}
;
function Collectors$22methodref$ctor$Type(){
}

defineClass(130, 1, {}, Collectors$22methodref$ctor$Type);
_.get_0 = function get_18(){
  return new HashMap;
}
;
var Ljava_util_stream_Collectors$22methodref$ctor$Type_2_classLit = createForClass('java.util.stream', 'Collectors/22methodref$ctor$Type', 130);
function Collectors$23methodref$ctor$Type(){
}

defineClass(64, 1, {}, Collectors$23methodref$ctor$Type);
_.get_0 = function get_19(){
  return new HashSet;
}
;
var Ljava_util_stream_Collectors$23methodref$ctor$Type_2_classLit = createForClass('java.util.stream', 'Collectors/23methodref$ctor$Type', 64);
function Collectors$24methodref$add$Type(){
}

defineClass(65, 1, {}, Collectors$24methodref$add$Type);
_.accept_2 = function accept_11(arg0, arg1){
  $add_1(castTo(arg0, 77), arg1);
}
;
var Ljava_util_stream_Collectors$24methodref$add$Type_2_classLit = createForClass('java.util.stream', 'Collectors/24methodref$add$Type', 65);
function Collectors$4methodref$addAll$Type(){
}

defineClass(929, 1, $intern_34, Collectors$4methodref$addAll$Type);
_.apply_1 = function apply_7(arg0, arg1){
  return addAll_6(castTo(arg0, 17), castTo(arg1, 54));
}
;
var Ljava_util_stream_Collectors$4methodref$addAll$Type_2_classLit = createForClass('java.util.stream', 'Collectors/4methodref$addAll$Type', 929);
function Collectors$5methodref$ctor$Type(){
}

defineClass(484, 1, {}, Collectors$5methodref$ctor$Type);
_.get_0 = function get_20(){
  return new StringBuilder;
}
;
var Ljava_util_stream_Collectors$5methodref$ctor$Type_2_classLit = createForClass('java.util.stream', 'Collectors/5methodref$ctor$Type', 484);
function Collectors$6methodref$append$Type(){
}

defineClass(485, 1, {}, Collectors$6methodref$append$Type);
_.accept_2 = function accept_12(arg0, arg1){
  $append_1(castTo(arg0, 94), castTo(arg1, 294));
}
;
var Ljava_util_stream_Collectors$6methodref$append$Type_2_classLit = createForClass('java.util.stream', 'Collectors/6methodref$append$Type', 485);
function Collectors$7methodref$append$Type(){
}

defineClass(486, 1, $intern_34, Collectors$7methodref$append$Type);
_.apply_1 = function apply_8(arg0, arg1){
  return $append_1(castTo(arg0, 94), castTo(arg1, 294));
}
;
var Ljava_util_stream_Collectors$7methodref$append$Type_2_classLit = createForClass('java.util.stream', 'Collectors/7methodref$append$Type', 486);
function Collectors$8methodref$toString$Type(){
}

defineClass(1291, $wnd.Function, $intern_22, Collectors$8methodref$toString$Type);
_.apply_0 = function apply_9(arg0){
  return castTo(arg0, 264).string;
}
;
function Collectors$9methodref$add$Type(){
}

defineClass(124, 1, {}, Collectors$9methodref$add$Type);
_.accept_2 = function accept_13(arg0, arg1){
  $add_3(castTo(arg0, 182), castTo(arg1, 294));
}
;
var Ljava_util_stream_Collectors$9methodref$add$Type_2_classLit = createForClass('java.util.stream', 'Collectors/9methodref$add$Type', 124);
function Collectors$lambda$15$Type(delimiter_0, prefix_1){
  this.delimiter_0 = delimiter_0;
  this.prefix_1 = prefix_1;
  this.suffix_2 = '';
}

defineClass(123, 1, {}, Collectors$lambda$15$Type);
_.get_0 = function get_21(){
  return new StringJoiner_0(this.delimiter_0, this.prefix_1, this.suffix_2);
}
;
var Ljava_util_stream_Collectors$lambda$15$Type_2_classLit = createForClass('java.util.stream', 'Collectors/lambda$15$Type', 123);
function Collectors$lambda$44$Type(){
}

defineClass(129, 1, $intern_34, Collectors$lambda$44$Type);
_.apply_1 = function apply_11(arg0, arg1){
  return lambda$44();
}
;
var Ljava_util_stream_Collectors$lambda$44$Type_2_classLit = createForClass('java.util.stream', 'Collectors/lambda$44$Type', 129);
function Collectors$lambda$46$Type(keyMapper_0, valueMapper_1, mergeFunction_2){
  this.keyMapper_0 = keyMapper_0;
  this.valueMapper_1 = valueMapper_1;
  this.mergeFunction_2 = mergeFunction_2;
}

defineClass(931, 1, {}, Collectors$lambda$46$Type);
_.accept_2 = function accept_14(arg0, arg1){
  lambda$46(this.keyMapper_0, this.valueMapper_1, this.mergeFunction_2, arg0, arg1);
}
;
var Ljava_util_stream_Collectors$lambda$46$Type_2_classLit = createForClass('java.util.stream', 'Collectors/lambda$46$Type', 931);
function Collectors$lambda$47$Type(mergeFunction_0){
  this.mergeFunction_0 = mergeFunction_0;
}

defineClass(932, 1, $intern_34, Collectors$lambda$47$Type);
_.apply_1 = function apply_12(arg0, arg1){
  return lambda$47(this.mergeFunction_0, arg0, arg1);
}
;
var Ljava_util_stream_Collectors$lambda$47$Type_2_classLit = createForClass('java.util.stream', 'Collectors/lambda$47$Type', 932);
function Collectors$lambda$50$Type(){
}

defineClass(66, 1, $intern_34, Collectors$lambda$50$Type);
_.apply_1 = function apply_13(arg0, arg1){
  return $addAll(castTo(arg0, 77), castTo(arg1, 77)) , castTo(arg0, 77);
}
;
var Ljava_util_stream_Collectors$lambda$50$Type_2_classLit = createForClass('java.util.stream', 'Collectors/lambda$50$Type', 66);
function Collectors$lambda$51$Type(){
}

defineClass(67, $wnd.Function, $intern_22, Collectors$lambda$51$Type);
_.apply_0 = function apply_14(arg0){
  return castTo(arg0, 77);
}
;
function Collectors$lambda$6$Type(){
}

defineClass(927, 1, {}, Collectors$lambda$6$Type);
_.get_0 = function get_22(){
  return new LinkedHashMap;
}
;
var Ljava_util_stream_Collectors$lambda$6$Type_2_classLit = createForClass('java.util.stream', 'Collectors/lambda$6$Type', 927);
function Collectors$lambda$7$Type(){
}

defineClass(928, 1, {}, Collectors$lambda$7$Type);
_.accept_2 = function accept_15(arg0, arg1){
  lambda$7(arg0, arg1);
}
;
var Ljava_util_stream_Collectors$lambda$7$Type_2_classLit = createForClass('java.util.stream', 'Collectors/lambda$7$Type', 928);
function Collectors$lambda$8$Type(){
}

defineClass(930, 1, $intern_34, Collectors$lambda$8$Type);
_.apply_1 = function apply_15(arg0, arg1){
  return mergeAll(castTo(arg0, 68), castTo(arg1, 68), new Collectors$4methodref$addAll$Type);
}
;
var Ljava_util_stream_Collectors$lambda$8$Type_2_classLit = createForClass('java.util.stream', 'Collectors/lambda$8$Type', 930);
function Collectors$lambda$9$Type(downstream_1){
  this.downstream_1 = downstream_1;
}

defineClass(3022, $wnd.Function, $intern_22, Collectors$lambda$9$Type);
_.apply_0 = function apply_16(arg0){
  return lambda$9(this.downstream_1, arg0);
}
;
function range_0(startInclusive, endExclusive){
  if (startInclusive >= endExclusive) {
    return new IntStreamImpl$Empty;
  }
  return rangeClosed(startInclusive, endExclusive - 1);
}

function rangeClosed(startInclusive, endInclusive){
  var count, spliterator;
  if (startInclusive > endInclusive) {
    return new IntStreamImpl$Empty;
  }
  count = endInclusive - startInclusive + 1;
  spliterator = new IntStream$5(count, startInclusive, endInclusive);
  return new IntStreamImpl(null, spliterator);
}

function $tryAdvance_3(this$static, action){
  if (this$static.next_0 <= this$static.val$endInclusive5) {
    action.accept_0(this$static.next_0++);
    return true;
  }
  return false;
}

function IntStream$5($anonymous0, val$startInclusive, val$endInclusive){
  this.val$startInclusive4 = val$startInclusive;
  this.val$endInclusive5 = val$endInclusive;
  Spliterators$AbstractIntSpliterator.call(this, $anonymous0, 17493);
  this.next_0 = this.val$startInclusive4;
}

defineClass(548, 454, {}, IntStream$5);
_.tryAdvance_0 = function tryAdvance_10(action){
  return $tryAdvance_3(this, castTo(action, 108));
}
;
_.next_0 = 0;
_.val$endInclusive5 = 0;
_.val$startInclusive4 = 0;
var Ljava_util_stream_IntStream$5_2_classLit = createForClass('java.util.stream', 'IntStream/5', 548);
function $collect(this$static){
  var acc;
  $terminate(this$static);
  acc = new IntSummaryStatistics;
  this$static.spliterator.forEachRemaining_0(new IntStreamImpl$lambda$4$Type(acc));
  return acc;
}

function $mapToObj(this$static, mapper){
  $throwIfTerminated(this$static);
  return new StreamImpl(this$static, new IntStreamImpl$MapToObjSpliterator(mapper, this$static.spliterator));
}

function $toArray_1(this$static){
  var entries;
  $terminate(this$static);
  entries = initUnidimensionalArray(I_classLit, $intern_29, 8, 0, 15, 1);
  this$static.spliterator.forEachRemaining_0(new IntStreamImpl$lambda$6$Type(entries));
  return entries;
}

function IntStreamImpl(previous, spliterator){
  TerminatableStream.call(this, previous);
  this.spliterator = spliterator;
}

function lambda$6(entries_0, value_1){
  return entries_0[entries_0.length] = value_1;
}

defineClass(386, 284, $intern_64, IntStreamImpl);
_.close_0 = function close_1(){
  $close(this);
}
;
_.onClose_0 = function onClose(arg0){
  return $onClose(this, arg0);
}
;
_.parallel = function parallel(){
  return $throwIfTerminated(this) , this;
}
;
_.spliterator_0 = function spliterator_11(){
  return $terminate(this) , this.spliterator;
}
;
_.mapToObj = function mapToObj(mapper){
  return $mapToObj(this, mapper);
}
;
_.parallel_0 = function parallel_0(){
  return $throwIfTerminated(this) , this;
}
;
_.spliterator_1 = function spliterator_10(){
  return $terminate(this) , this.spliterator;
}
;
var Ljava_util_stream_IntStreamImpl_2_classLit = createForClass('java.util.stream', 'IntStreamImpl', 386);
function IntStreamImpl$3methodref$valueOf$Type(){
}

defineClass(1101, 1, {}, IntStreamImpl$3methodref$valueOf$Type);
_.apply_2 = function apply_17(arg0){
  return valueOf_1(arg0);
}
;
var Ljava_util_stream_IntStreamImpl$3methodref$valueOf$Type_2_classLit = createForClass('java.util.stream', 'IntStreamImpl/3methodref$valueOf$Type', 1101);
function IntStreamImpl$Empty(){
  TerminatableStream.call(this, null);
}

defineClass(453, 284, $intern_64, IntStreamImpl$Empty);
_.close_0 = function close_2(){
  $close(this);
}
;
_.onClose_0 = function onClose_0(arg0){
  return $onClose(this, arg0);
}
;
_.parallel = function parallel_1(){
  return $throwIfTerminated(this) , this;
}
;
_.spliterator_0 = function spliterator_13(){
  return $terminate(this) , $clinit_Spliterators$EmptySpliterator() , OF_INT;
}
;
_.mapToObj = function mapToObj_0(mapper){
  $throwIfTerminated(this);
  return new StreamImpl$Empty(this);
}
;
_.parallel_0 = function parallel_2(){
  return $throwIfTerminated(this) , this;
}
;
_.spliterator_1 = function spliterator_12(){
  return $terminate(this) , $clinit_Spliterators$EmptySpliterator() , OF_INT;
}
;
var Ljava_util_stream_IntStreamImpl$Empty_2_classLit = createForClass('java.util.stream', 'IntStreamImpl/Empty', 453);
function $lambda$0_0(this$static, action_1, u_1){
  action_1.accept(this$static.map_0.apply_2(u_1));
}

function IntStreamImpl$MapToObjSpliterator(map_0, original){
  Spliterators$AbstractSpliterator.call(this, original.estimateSize_0(), original.characteristics_0() & -6);
  checkCriticalNotNull(map_0);
  this.map_0 = map_0;
  this.original = original;
}

defineClass(1097, 200, {}, IntStreamImpl$MapToObjSpliterator);
_.tryAdvance = function tryAdvance_11(action){
  return this.original.tryAdvance_0(new IntStreamImpl$MapToObjSpliterator$lambda$0$Type(this, action));
}
;
var Ljava_util_stream_IntStreamImpl$MapToObjSpliterator_2_classLit = createForClass('java.util.stream', 'IntStreamImpl/MapToObjSpliterator', 1097);
function IntStreamImpl$MapToObjSpliterator$lambda$0$Type($$outer_0, action_1){
  this.$$outer_0 = $$outer_0;
  this.action_1 = action_1;
}

defineClass(1098, 1, $intern_57, IntStreamImpl$MapToObjSpliterator$lambda$0$Type);
_.accept_0 = function accept_16(arg0){
  $lambda$0_0(this.$$outer_0, this.action_1, arg0);
}
;
var Ljava_util_stream_IntStreamImpl$MapToObjSpliterator$lambda$0$Type_2_classLit = createForClass('java.util.stream', 'IntStreamImpl/MapToObjSpliterator/lambda$0$Type', 1098);
function IntStreamImpl$lambda$4$Type(acc_1){
  this.acc_1 = acc_1;
}

defineClass(1099, 1, $intern_57, IntStreamImpl$lambda$4$Type);
_.accept_0 = function accept_17(arg0){
  $accept(this.acc_1, arg0);
}
;
var Ljava_util_stream_IntStreamImpl$lambda$4$Type_2_classLit = createForClass('java.util.stream', 'IntStreamImpl/lambda$4$Type', 1099);
function IntStreamImpl$lambda$6$Type(entries_0){
  this.entries_0 = entries_0;
}

defineClass(1100, 1, $intern_57, IntStreamImpl$lambda$6$Type);
_.accept_0 = function accept_18(arg0){
  lambda$6(this.entries_0, arg0);
}
;
var Ljava_util_stream_IntStreamImpl$lambda$6$Type_2_classLit = createForClass('java.util.stream', 'IntStreamImpl/lambda$6$Type', 1100);
function range_1(endExclusive){
  if (compare_1(0, endExclusive) >= 0) {
    return new LongStreamImpl$Empty;
  }
  return rangeClosed_0(sub_1(endExclusive, 1));
}

function rangeClosed_0(endInclusive){
  var count, spliterator;
  if (compare_1(0, endInclusive) > 0) {
    return new LongStreamImpl$Empty;
  }
  count = add_1(endInclusive, 1);
  spliterator = new LongStream$5(count, endInclusive);
  return new LongStreamImpl(spliterator);
}

function $tryAdvance_4(this$static, action){
  var $tmp;
  if (lte(this$static.next_0, this$static.val$endInclusive6)) {
    action.accept_1(($tmp = this$static.next_0 , this$static.next_0 = add_1(this$static.next_0, 1) , $tmp));
    return true;
  }
  return false;
}

function LongStream$5($anonymous0, val$endInclusive){
  this.val$startInclusive4 = 0;
  this.val$endInclusive6 = val$endInclusive;
  Spliterators$BaseSpliterator.call(this, $anonymous0, 17493);
  this.next_0 = this.val$startInclusive4;
}

defineClass(1178, 549, {}, LongStream$5);
_.tryAdvance_0 = function tryAdvance_12(action){
  return $tryAdvance_4(this, castTo(action, 148));
}
;
_.next_0 = 0;
_.val$endInclusive6 = 0;
_.val$startInclusive4 = 0;
var Ljava_util_stream_LongStream$5_2_classLit = createForClass('java.util.stream', 'LongStream/5', 1178);
function $mapToObj_0(this$static, mapper){
  $throwIfTerminated(this$static);
  return new StreamImpl(this$static, new LongStreamImpl$MapToObjSpliterator(mapper, this$static.spliterator));
}

function LongStreamImpl(spliterator){
  TerminatableStream.call(this, null);
  this.spliterator = spliterator;
}

defineClass(1179, 284, $intern_64, LongStreamImpl);
_.close_0 = function close_3(){
  $close(this);
}
;
_.onClose_0 = function onClose_1(arg0){
  return $onClose(this, arg0);
}
;
_.parallel = function parallel_3(){
  return $throwIfTerminated(this) , this;
}
;
_.spliterator_0 = function spliterator_15(){
  return $terminate(this) , this.spliterator;
}
;
_.boxed = function boxed(){
  return $mapToObj_0(this, new LongStreamImpl$3methodref$valueOf$Type);
}
;
_.parallel_1 = function parallel_4(){
  return $throwIfTerminated(this) , this;
}
;
_.spliterator_2 = function spliterator_14(){
  return $terminate(this) , this.spliterator;
}
;
var Ljava_util_stream_LongStreamImpl_2_classLit = createForClass('java.util.stream', 'LongStreamImpl', 1179);
function LongStreamImpl$3methodref$valueOf$Type(){
}

defineClass(1182, 1, {}, LongStreamImpl$3methodref$valueOf$Type);
var Ljava_util_stream_LongStreamImpl$3methodref$valueOf$Type_2_classLit = createForClass('java.util.stream', 'LongStreamImpl/3methodref$valueOf$Type', 1182);
function LongStreamImpl$Empty(){
  TerminatableStream.call(this, null);
}

defineClass(532, 284, $intern_64, LongStreamImpl$Empty);
_.close_0 = function close_4(){
  $close(this);
}
;
_.onClose_0 = function onClose_2(arg0){
  return $onClose(this, arg0);
}
;
_.parallel = function parallel_5(){
  return $throwIfTerminated(this) , this;
}
;
_.spliterator_0 = function spliterator_17(){
  return $terminate(this) , $clinit_Spliterators$EmptySpliterator() , OF_LONG;
}
;
_.boxed = function boxed_0(){
  $throwIfTerminated(this);
  return new StreamImpl$Empty(this);
}
;
_.parallel_1 = function parallel_6(){
  return $throwIfTerminated(this) , this;
}
;
_.spliterator_2 = function spliterator_16(){
  return $terminate(this) , $clinit_Spliterators$EmptySpliterator() , OF_LONG;
}
;
var Ljava_util_stream_LongStreamImpl$Empty_2_classLit = createForClass('java.util.stream', 'LongStreamImpl/Empty', 532);
function LongStreamImpl$MapToObjSpliterator(map_0, original){
  Spliterators$AbstractSpliterator.call(this, original.sizeEstimate, original.characteristics & -6);
  checkCriticalNotNull(map_0);
  this.original = original;
}

defineClass(1180, 200, {}, LongStreamImpl$MapToObjSpliterator);
_.tryAdvance = function tryAdvance_13(action){
  return $tryAdvance_4(this.original, new LongStreamImpl$MapToObjSpliterator$lambda$0$Type(action));
}
;
var Ljava_util_stream_LongStreamImpl$MapToObjSpliterator_2_classLit = createForClass('java.util.stream', 'LongStreamImpl/MapToObjSpliterator', 1180);
function LongStreamImpl$MapToObjSpliterator$lambda$0$Type(action_1){
  this.action_1 = action_1;
}

defineClass(1181, 1, {148:1}, LongStreamImpl$MapToObjSpliterator$lambda$0$Type);
_.accept_1 = function accept_19(arg0){
  this.action_1.accept(valueOf_2(arg0));
}
;
var Ljava_util_stream_LongStreamImpl$MapToObjSpliterator$lambda$0$Type_2_classLit = createForClass('java.util.stream', 'LongStreamImpl/MapToObjSpliterator/lambda$0$Type', 1181);
function Stream$0methodref$close$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(562, 1, {}, Stream$0methodref$close$Type);
_.run = function run_0(){
  this.$$outer_0.close_0();
}
;
var Ljava_util_stream_Stream$0methodref$close$Type_2_classLit = createForClass('java.util.stream', 'Stream/0methodref$close$Type', 562);
function Stream$1methodref$close$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(563, 1, {}, Stream$1methodref$close$Type);
_.run = function run_1(){
  this.$$outer_0.close_0();
}
;
var Ljava_util_stream_Stream$1methodref$close$Type_2_classLit = createForClass('java.util.stream', 'Stream/1methodref$close$Type', 563);
function $advanceToNextSpliterator(this$static){
  while (!this$static.next_0) {
    if (!$tryAdvance(this$static.val$spliteratorOfStreams4, new Stream$2$lambda$0$Type(this$static))) {
      return false;
    }
  }
  return true;
}

function $lambda$0_1(this$static, n_0){
  !!n_0 && (this$static.next_0 = n_0.spliterator_0());
}

function Stream$2(val$spliteratorOfStreams){
  this.val$spliteratorOfStreams4 = val$spliteratorOfStreams;
  Spliterators$AbstractSpliterator.call(this, $intern_45, 0);
}

defineClass(560, 200, {}, Stream$2);
_.tryAdvance = function tryAdvance_14(action){
  while ($advanceToNextSpliterator(this)) {
    if (this.next_0.tryAdvance(action)) {
      return true;
    }
     else {
      this.next_0 = null;
    }
  }
  return false;
}
;
var Ljava_util_stream_Stream$2_2_classLit = createForClass('java.util.stream', 'Stream/2', 560);
function Stream$2$lambda$0$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(561, 1, $intern_32, Stream$2$lambda$0$Type);
_.accept = function accept_20(arg0){
  $lambda$0_1(this.$$outer_0, arg0);
}
;
_.andThen = function andThen_2(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Ljava_util_stream_Stream$2$lambda$0$Type_2_classLit = createForClass('java.util.stream', 'Stream/2/lambda$0$Type', 561);
function $advanceToNextSpliterator_0(this$static){
  while (!this$static.next_0) {
    if (!$tryAdvance_6(this$static.val$spliteratorOfStreams5, new StreamImpl$1$lambda$0$Type(this$static))) {
      return false;
    }
  }
  return true;
}

function $lambda$0_2(this$static, n_0){
  if (n_0) {
    this$static.nextStream = n_0;
    this$static.next_0 = n_0.spliterator_0();
  }
}

function StreamImpl$1(val$spliteratorOfStreams){
  this.val$spliteratorOfStreams5 = val$spliteratorOfStreams;
  Spliterators$AbstractSpliterator.call(this, $intern_45, 0);
}

defineClass(1075, 200, {}, StreamImpl$1);
_.tryAdvance = function tryAdvance_15(action){
  while ($advanceToNextSpliterator_0(this)) {
    if (this.next_0.tryAdvance(action)) {
      return true;
    }
     else {
      this.nextStream.close_0();
      this.nextStream = null;
      this.next_0 = null;
    }
  }
  return false;
}
;
var Ljava_util_stream_StreamImpl$1_2_classLit = createForClass('java.util.stream', 'StreamImpl/1', 1075);
function StreamImpl$1$lambda$0$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1076, 1, $intern_32, StreamImpl$1$lambda$0$Type);
_.accept = function accept_21(arg0){
  $lambda$0_2(this.$$outer_0, arg0);
}
;
_.andThen = function andThen_3(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Ljava_util_stream_StreamImpl$1$lambda$0$Type_2_classLit = createForClass('java.util.stream', 'StreamImpl/1/lambda$0$Type', 1076);
function StreamImpl$5(this$0, $anonymous0, $anonymous1, val$comparator){
  this.this$01 = this$0;
  this.val$comparator5 = val$comparator;
  Spliterators$AbstractSpliterator.call(this, $anonymous0, $anonymous1);
}

defineClass(1077, 200, {}, StreamImpl$5);
_.tryAdvance = function tryAdvance_16(action){
  var list;
  if (!this.ordered) {
    list = new ArrayList;
    this.this$01.spliterator.forEachRemaining(new StreamImpl$5$2methodref$add$Type(list));
    $clinit_Collections();
    $sort(list, this.val$comparator5);
    this.ordered = new Spliterators$IteratorSpliterator(list, 16);
  }
  return $tryAdvance(this.ordered, action);
}
;
_.ordered = null;
var Ljava_util_stream_StreamImpl$5_2_classLit = createForClass('java.util.stream', 'StreamImpl/5', 1077);
function StreamImpl$5$2methodref$add$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1078, 1, $intern_32, StreamImpl$5$2methodref$add$Type);
_.accept = function accept_22(arg0){
  $add(this.$$outer_0, arg0);
}
;
_.andThen = function andThen_4(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Ljava_util_stream_StreamImpl$5$2methodref$add$Type_2_classLit = createForClass('java.util.stream', 'StreamImpl/5/2methodref$add$Type', 1078);
function StreamImpl$Empty(previous){
  TerminatableStream.call(this, previous);
}

defineClass(211, 284, $intern_35, StreamImpl$Empty);
_.close_0 = function close_6(){
  $close(this);
}
;
_.onClose_0 = function onClose_4(arg0){
  return $onClose(this, arg0);
}
;
_.parallel = function parallel_8(){
  return $throwIfTerminated(this) , this;
}
;
_.collect_0 = function collect_3(collector){
  $terminate(this);
  return collector.finisher.call(null, collector.supplier.get_0());
}
;
_.map_1 = function map_4(mapper){
  $throwIfTerminated(this);
  return this;
}
;
_.reduce = function reduce_0(identity, accumulator, combiner){
  $terminate(this);
  return identity;
}
;
_.spliterator_0 = function spliterator_19(){
  $terminate(this);
  return $clinit_Spliterators$EmptySpliterator() , OF_REF;
}
;
var Ljava_util_stream_StreamImpl$Empty_2_classLit = createForClass('java.util.stream', 'StreamImpl/Empty', 211);
function $lambda$0_3(this$static, action_1, item_1){
  if (this$static.filter.test_0(item_1)) {
    this$static.found = true;
    action_1.accept(item_1);
  }
}

function StreamImpl$FilterSpliterator(filter, original){
  Spliterators$AbstractSpliterator.call(this, original.estimateSize_0(), original.characteristics_0() & -16449);
  checkCriticalNotNull(filter);
  this.filter = filter;
  this.original = original;
}

defineClass(516, 200, {}, StreamImpl$FilterSpliterator);
_.tryAdvance = function tryAdvance_17(action){
  this.found = false;
  while (!this.found && this.original.tryAdvance(new StreamImpl$FilterSpliterator$lambda$0$Type(this, action)))
  ;
  return this.found;
}
;
_.found = false;
var Ljava_util_stream_StreamImpl$FilterSpliterator_2_classLit = createForClass('java.util.stream', 'StreamImpl/FilterSpliterator', 516);
function StreamImpl$FilterSpliterator$lambda$0$Type($$outer_0, action_1){
  this.$$outer_0 = $$outer_0;
  this.action_1 = action_1;
}

defineClass(1070, 1, $intern_32, StreamImpl$FilterSpliterator$lambda$0$Type);
_.accept = function accept_23(arg0){
  $lambda$0_3(this.$$outer_0, this.action_1, arg0);
}
;
_.andThen = function andThen_5(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Ljava_util_stream_StreamImpl$FilterSpliterator$lambda$0$Type_2_classLit = createForClass('java.util.stream', 'StreamImpl/FilterSpliterator/lambda$0$Type', 1070);
function StreamImpl$LimitSpliterator(limit, original){
  Spliterators$AbstractSpliterator.call(this, original.hasCharacteristics(64)?min_1(original.estimateSize_0(), limit):$intern_45, original.characteristics_0());
  this.limit = limit;
  this.original = original;
}

defineClass(1067, 200, {}, StreamImpl$LimitSpliterator);
_.tryAdvance = function tryAdvance_18(action){
  var result;
  if (gte_0(this.position, this.limit)) {
    return false;
  }
  result = this.original.tryAdvance(action);
  ++this.position;
  return result;
}
;
_.limit = 0;
_.position = 0;
var Ljava_util_stream_StreamImpl$LimitSpliterator_2_classLit = createForClass('java.util.stream', 'StreamImpl/LimitSpliterator', 1067);
function $lambda$0_4(this$static, action_1, u_1){
  action_1.accept_0(this$static.map_0.applyAsInt(u_1));
}

function $tryAdvance_5(this$static, action){
  return this$static.original.tryAdvance(new StreamImpl$MapToIntSpliterator$lambda$0$Type(this$static, action));
}

function StreamImpl$MapToIntSpliterator(map_0, original){
  Spliterators$AbstractIntSpliterator.call(this, original.estimateSize_0(), original.characteristics_0() & -6);
  checkCriticalNotNull(map_0);
  this.map_0 = map_0;
  this.original = original;
}

defineClass(1065, 454, {}, StreamImpl$MapToIntSpliterator);
_.tryAdvance_0 = function tryAdvance_19(action){
  return $tryAdvance_5(this, castTo(action, 108));
}
;
var Ljava_util_stream_StreamImpl$MapToIntSpliterator_2_classLit = createForClass('java.util.stream', 'StreamImpl/MapToIntSpliterator', 1065);
function StreamImpl$MapToIntSpliterator$lambda$0$Type($$outer_0, action_1){
  this.$$outer_0 = $$outer_0;
  this.action_1 = action_1;
}

defineClass(1069, 1, $intern_32, StreamImpl$MapToIntSpliterator$lambda$0$Type);
_.accept = function accept_24(arg0){
  $lambda$0_4(this.$$outer_0, this.action_1, arg0);
}
;
_.andThen = function andThen_6(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Ljava_util_stream_StreamImpl$MapToIntSpliterator$lambda$0$Type_2_classLit = createForClass('java.util.stream', 'StreamImpl/MapToIntSpliterator/lambda$0$Type', 1069);
function StreamImpl$SkipSpliterator(skip, original){
  Spliterators$AbstractSpliterator.call(this, original.hasCharacteristics(64)?max_1(sub_1(original.estimateSize_0(), skip)):$intern_45, original.characteristics_0());
  this.skip = skip;
  this.original = original;
}

defineClass(1066, 200, {}, StreamImpl$SkipSpliterator);
_.tryAdvance = function tryAdvance_21(action){
  while (gt(this.skip, 0)) {
    if (!this.original.tryAdvance(new StreamImpl$SkipSpliterator$lambda$0$Type)) {
      return false;
    }
    this.skip = sub_1(this.skip, 1);
  }
  return this.original.tryAdvance(action);
}
;
_.skip = 0;
var Ljava_util_stream_StreamImpl$SkipSpliterator_2_classLit = createForClass('java.util.stream', 'StreamImpl/SkipSpliterator', 1066);
function StreamImpl$SkipSpliterator$lambda$0$Type(){
}

defineClass(1071, 1, $intern_32, StreamImpl$SkipSpliterator$lambda$0$Type);
_.accept = function accept_26(arg0){
}
;
_.andThen = function andThen_8(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Ljava_util_stream_StreamImpl$SkipSpliterator$lambda$0$Type_2_classLit = createForClass('java.util.stream', 'StreamImpl/SkipSpliterator/lambda$0$Type', 1071);
function TerminatableStream$lambda$0$Type(throwables_0){
  this.throwables_0 = throwables_0;
}

defineClass(1079, 1, $intern_32, TerminatableStream$lambda$0$Type);
_.accept = function accept_30(arg0){
  lambda$0(this.throwables_0, arg0);
}
;
_.andThen = function andThen_12(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Ljava_util_stream_TerminatableStream$lambda$0$Type_2_classLit = createForClass('java.util.stream', 'TerminatableStream/lambda$0$Type', 1079);
function $update(this$static, buf, off, len){
  var n, s1, s2;
  s1 = this$static.checksum & $intern_20;
  s2 = this$static.checksum >>> 16;
  while (len > 0) {
    n = 3800;
    n > len && (n = len);
    len -= n;
    while (--n >= 0) {
      s1 = s1 + (buf[off++] & 255);
      s2 = s2 + s1;
    }
    s1 %= 65521;
    s2 %= 65521;
  }
  this$static.checksum = s2 << 16 | s1;
}

function Adler32(){
  this.checksum = 1;
}

defineClass(1137, 1, {}, Adler32);
_.checksum = 0;
var Ljava_util_zip_Adler32_2_classLit = createForClass('java.util.zip', 'Adler32', 1137);
function $clinit_CRC32(){
  $clinit_CRC32 = emptyMethod;
  crc_table_0 = make_crc_table();
}

function $update_0(this$static, buf, off, len){
  var c;
  c = ~this$static.crc;
  while (--len >= 0)
    c = crc_table_0[(c ^ buf[off++]) & 255] ^ c >>> 8;
  this$static.crc = ~c;
}

function CRC32(){
  $clinit_CRC32();
}

function make_crc_table(){
  var c, crc_table, k, n;
  crc_table = initUnidimensionalArray(I_classLit, $intern_29, 8, 256, 15, 1);
  for (n = 0; n < 256; n++) {
    c = n;
    for (k = 8; --k >= 0;) {
      (c & 1) != 0?(c = -306674912 ^ c >>> 1):(c = c >>> 1);
    }
    crc_table[n] = c;
  }
  return crc_table;
}

defineClass(872, 1, {}, CRC32);
_.crc = 0;
var crc_table_0;
var Ljava_util_zip_CRC32_2_classLit = createForClass('java.util.zip', 'CRC32', 872);
function $deflate(this$static, output, offset, length_0){
  var adler, chksum, chksum0, count, header, level_flags, neededbits, origLength;
  origLength = length_0;
  if (this$static.state == 127)
    throw toJs(new IllegalStateException_0('Deflater closed'));
  if (this$static.state < 16) {
    header = 30720;
    level_flags = this$static.level - 1 >> 1;
    (level_flags < 0 || level_flags > 3) && (level_flags = 3);
    header |= level_flags << 6;
    (this$static.state & 1) != 0 && (header |= 32);
    header += 31 - header % 31;
    $writeShortMSB(this$static.pending, header);
    if ((this$static.state & 1) != 0) {
      chksum0 = (chksum = toInt_0(and_0(this$static.engine.adler.checksum, $intern_47)) , chksum);
      this$static.engine.adler.checksum = 1;
      $writeShortMSB(this$static.pending, chksum0 >> 16);
      $writeShortMSB(this$static.pending, chksum0 & $intern_20);
    }
    this$static.state = 16 | this$static.state & 12;
  }
  for (;;) {
    count = $flush(this$static.pending, output, offset, length_0);
    offset += count;
    this$static.totalOut = add_1(this$static.totalOut, count);
    length_0 -= count;
    if (length_0 == 0 || this$static.state == 30)
      break;
    if (!$deflate_0(this$static.engine, (this$static.state & 4) != 0, (this$static.state & 8) != 0)) {
      if (this$static.state == 16)
        return origLength - length_0;
      else if (this$static.state == 20) {
        if (this$static.level != 0) {
          neededbits = 8 + (-this$static.pending.bitCount & 7);
          while (neededbits > 0) {
            $writeBits(this$static.pending, 2, 10);
            neededbits -= 10;
          }
        }
        this$static.state = 16;
      }
       else if (this$static.state == 28) {
        $alignToByte(this$static.pending);
        if (!this$static.noHeader) {
          adler = (chksum = toInt_0(and_0(this$static.engine.adler.checksum, $intern_47)) , chksum);
          $writeShortMSB(this$static.pending, adler >> 16);
          $writeShortMSB(this$static.pending, adler & $intern_20);
        }
        this$static.state = 30;
      }
    }
  }
  return origLength - length_0;
}

function $finished(this$static){
  return this$static.state == 30 && this$static.pending.end == 0;
}

function $setInput(this$static, input_0, off, len){
  if ((this$static.state & 8) != 0)
    throw toJs(new IllegalStateException_0('finish()/end() already called'));
  $setInput_0(this$static.engine, input_0, off, len);
}

function $setLevel_0(this$static, lvl){
  if (lvl == -1)
    lvl = 6;
  else if (lvl < 0 || lvl > 9)
    throw toJs(new IllegalArgumentException);
  if (this$static.level != lvl) {
    this$static.level = lvl;
    $setLevel_1(this$static.engine, lvl);
  }
}

function Deflater(){
  Deflater_0.call(this, 9);
}

function Deflater_0(lvl){
  if (lvl == -1)
    lvl = 6;
  else if (lvl < 0 || lvl > 9)
    throw toJs(new IllegalArgumentException);
  this.pending = new DeflaterPending;
  this.engine = new DeflaterEngine(this.pending);
  this.noHeader = false;
  this.engine.strategy = 0;
  $setLevel_0(this, lvl);
  this.state = this.noHeader?16:0;
  this.totalOut = 0;
  $reset_4(this.pending);
  $reset_1(this.engine);
}

defineClass(511, 1, {}, Deflater);
_.level = 0;
_.noHeader = false;
_.state = 0;
_.totalOut = 0;
var Ljava_util_zip_Deflater_2_classLit = createForClass('java.util.zip', 'Deflater', 511);
function $clinit_DeflaterConstants(){
  $clinit_DeflaterConstants = emptyMethod;
  MAX_BLOCK_SIZE = $wnd.Math.min($intern_20, 65531);
  GOOD_LENGTH = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [0, 4, 4, 4, 4, 8, 8, 8, 32, 32]);
  MAX_LAZY = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [0, 4, 5, 6, 4, 16, 16, 32, 128, 258]);
  NICE_LENGTH = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [0, 8, 16, 32, 16, 32, 128, 128, 258, 258]);
  MAX_CHAIN = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [0, 4, 8, 32, 16, 32, 128, 256, $intern_65, $intern_15]);
  COMPR_FUNC = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [0, 1, 1, 1, 1, 2, 2, 2, 2, 2]);
}

var COMPR_FUNC, GOOD_LENGTH, MAX_BLOCK_SIZE = 0, MAX_CHAIN, MAX_LAZY, NICE_LENGTH;
function $deflate_0(this$static, flush, finish){
  var canFlush, progress;
  do {
    $fillWindow(this$static);
    canFlush = flush && this$static.inputOff == this$static.inputEnd;
    switch (this$static.comprFunc) {
      case 0:
        progress = $deflateStored(this$static, canFlush, finish);
        break;
      case 1:
        progress = $deflateFast(this$static, canFlush, finish);
        break;
      case 2:
        progress = $deflateSlow(this$static, canFlush, finish);
        break;
      default:throw toJs(new InternalError_0);
    }
  }
   while (this$static.pending.end == 0 && progress);
  return progress;
}

function $deflateFast(this$static, flush, finish){
  var full, hashHead, lastBlock;
  if (this$static.lookahead < 262 && !flush)
    return false;
  while (this$static.lookahead >= 262 || flush) {
    if (this$static.lookahead == 0) {
      $flushBlock(this$static.huffman, this$static.window_0, this$static.blockStart, this$static.strstart - this$static.blockStart, finish);
      this$static.blockStart = this$static.strstart;
      return false;
    }
    this$static.strstart > 65274 && $slideWindow(this$static);
    if (this$static.lookahead >= 3 && (hashHead = $insertString(this$static)) != 0 && this$static.strategy != 2 && this$static.strstart - hashHead <= 32506 && $findLongestMatch(this$static, hashHead)) {
      full = $tallyDist(this$static.huffman, this$static.strstart - this$static.matchStart, this$static.matchLen);
      this$static.lookahead -= this$static.matchLen;
      if (this$static.matchLen <= this$static.max_lazy && this$static.lookahead >= 3) {
        while (--this$static.matchLen > 0) {
          ++this$static.strstart;
          $insertString(this$static);
        }
        ++this$static.strstart;
      }
       else {
        this$static.strstart += this$static.matchLen;
        this$static.lookahead >= 2 && (this$static.ins_h = this$static.window_0[this$static.strstart] << 5 ^ this$static.window_0[this$static.strstart + 1]);
      }
      this$static.matchLen = 2;
      if (!full)
        continue;
    }
     else {
      $tallyLit(this$static.huffman, this$static.window_0[this$static.strstart] & 255);
      ++this$static.strstart;
      --this$static.lookahead;
    }
    if (this$static.huffman.last_lit == $intern_16) {
      lastBlock = finish && this$static.lookahead == 0;
      $flushBlock(this$static.huffman, this$static.window_0, this$static.blockStart, this$static.strstart - this$static.blockStart, lastBlock);
      this$static.blockStart = this$static.strstart;
      return !lastBlock;
    }
  }
  return true;
}

function $deflateSlow(this$static, flush, finish){
  var hashHead, lastBlock, len, prevLen, prevMatch;
  if (this$static.lookahead < 262 && !flush)
    return false;
  while (this$static.lookahead >= 262 || flush) {
    if (this$static.lookahead == 0) {
      this$static.prevAvailable && $tallyLit(this$static.huffman, this$static.window_0[this$static.strstart - 1] & 255);
      this$static.prevAvailable = false;
      $flushBlock(this$static.huffman, this$static.window_0, this$static.blockStart, this$static.strstart - this$static.blockStart, finish);
      this$static.blockStart = this$static.strstart;
      return false;
    }
    this$static.strstart >= 65274 && $slideWindow(this$static);
    prevMatch = this$static.matchStart;
    prevLen = this$static.matchLen;
    if (this$static.lookahead >= 3) {
      hashHead = $insertString(this$static);
      this$static.strategy != 2 && hashHead != 0 && this$static.strstart - hashHead <= 32506 && $findLongestMatch(this$static, hashHead) && this$static.matchLen <= 5 && (this$static.strategy == 1 || this$static.matchLen == 3 && this$static.strstart - this$static.matchStart > $intern_15) && (this$static.matchLen = 2);
    }
    if (prevLen >= 3 && this$static.matchLen <= prevLen) {
      $tallyDist(this$static.huffman, this$static.strstart - 1 - prevMatch, prevLen);
      prevLen -= 2;
      do {
        ++this$static.strstart;
        --this$static.lookahead;
        this$static.lookahead >= 3 && $insertString(this$static);
      }
       while (--prevLen > 0);
      ++this$static.strstart;
      --this$static.lookahead;
      this$static.prevAvailable = false;
      this$static.matchLen = 2;
    }
     else {
      this$static.prevAvailable && $tallyLit(this$static.huffman, this$static.window_0[this$static.strstart - 1] & 255);
      this$static.prevAvailable = true;
      ++this$static.strstart;
      --this$static.lookahead;
    }
    if (this$static.huffman.last_lit == $intern_16) {
      len = this$static.strstart - this$static.blockStart;
      this$static.prevAvailable && --len;
      lastBlock = finish && this$static.lookahead == 0 && !this$static.prevAvailable;
      $flushBlock(this$static.huffman, this$static.window_0, this$static.blockStart, len, lastBlock);
      this$static.blockStart += len;
      return !lastBlock;
    }
  }
  return true;
}

function $deflateStored(this$static, flush, finish){
  var lastBlock, storedLen;
  if (!flush && this$static.lookahead == 0)
    return false;
  this$static.strstart += this$static.lookahead;
  this$static.lookahead = 0;
  storedLen = this$static.strstart - this$static.blockStart;
  if (storedLen >= ($clinit_DeflaterConstants() , MAX_BLOCK_SIZE) || this$static.blockStart < $intern_66 && storedLen >= 32506 || flush) {
    lastBlock = finish;
    if (storedLen > MAX_BLOCK_SIZE) {
      storedLen = MAX_BLOCK_SIZE;
      lastBlock = false;
    }
    $flushStoredBlock(this$static.huffman, this$static.window_0, this$static.blockStart, storedLen, lastBlock);
    this$static.blockStart += storedLen;
    return !lastBlock;
  }
  return true;
}

function $fillWindow(this$static){
  var more;
  this$static.strstart >= 65274 && $slideWindow(this$static);
  while (this$static.lookahead < 262 && this$static.inputOff < this$static.inputEnd) {
    more = $intern_19 - this$static.lookahead - this$static.strstart;
    more > this$static.inputEnd - this$static.inputOff && (more = this$static.inputEnd - this$static.inputOff);
    arraycopy(this$static.inputBuf, this$static.inputOff, this$static.window_0, this$static.strstart + this$static.lookahead, more);
    $update(this$static.adler, this$static.inputBuf, this$static.inputOff, more);
    this$static.inputOff += more;
    this$static.totalIn += more;
    this$static.lookahead += more;
  }
  this$static.lookahead >= 3 && (this$static.ins_h = this$static.window_0[this$static.strstart] << 5 ^ this$static.window_0[this$static.strstart + 1]);
}

function $findLongestMatch(this$static, curMatch){
  var best_end, best_len, chainLength, limit, match_0, niceLength, prev, scan, scan_end, scan_end1, strend;
  chainLength = this$static.max_chain;
  niceLength = this$static.niceLength;
  prev = this$static.prev;
  scan = this$static.strstart;
  best_end = this$static.strstart + this$static.matchLen;
  best_len = $wnd.Math.max(this$static.matchLen, 2);
  limit = $wnd.Math.max(this$static.strstart - 32506, 0);
  strend = scan + 258 - 1;
  scan_end1 = this$static.window_0[best_end - 1];
  scan_end = this$static.window_0[best_end];
  best_len >= this$static.goodLength && (chainLength >>= 2);
  niceLength > this$static.lookahead && (niceLength = this$static.lookahead);
  do {
    if (this$static.window_0[curMatch + best_len] != scan_end || this$static.window_0[curMatch + best_len - 1] != scan_end1 || this$static.window_0[curMatch] != this$static.window_0[scan] || this$static.window_0[curMatch + 1] != this$static.window_0[scan + 1])
      continue;
    match_0 = curMatch + 2;
    scan += 2;
    while (this$static.window_0[++scan] == this$static.window_0[++match_0] && this$static.window_0[++scan] == this$static.window_0[++match_0] && this$static.window_0[++scan] == this$static.window_0[++match_0] && this$static.window_0[++scan] == this$static.window_0[++match_0] && this$static.window_0[++scan] == this$static.window_0[++match_0] && this$static.window_0[++scan] == this$static.window_0[++match_0] && this$static.window_0[++scan] == this$static.window_0[++match_0] && this$static.window_0[++scan] == this$static.window_0[++match_0] && scan < strend)
    ;
    if (scan > best_end) {
      this$static.matchStart = curMatch;
      best_end = scan;
      best_len = scan - this$static.strstart;
      if (best_len >= niceLength)
        break;
      scan_end1 = this$static.window_0[best_end - 1];
      scan_end = this$static.window_0[best_end];
    }
    scan = this$static.strstart;
  }
   while ((curMatch = prev[curMatch & 32767] & $intern_20) > limit && --chainLength != 0);
  this$static.matchLen = $wnd.Math.min(best_len, this$static.lookahead);
  return this$static.matchLen >= 3;
}

function $insertString(this$static){
  var hash, match_0;
  hash = (this$static.ins_h << 5 ^ this$static.window_0[this$static.strstart + 2]) & 32767;
  this$static.prev[this$static.strstart & 32767] = match_0 = this$static.head[hash];
  this$static.head[hash] = this$static.strstart << 16 >> 16;
  this$static.ins_h = hash;
  return match_0 & $intern_20;
}

function $needsInput(this$static){
  return this$static.inputEnd == this$static.inputOff;
}

function $reset_1(this$static){
  var i, i0;
  $reset_2(this$static.huffman);
  this$static.adler.checksum = 1;
  this$static.blockStart = this$static.strstart = 1;
  this$static.lookahead = 0;
  this$static.totalIn = 0;
  this$static.prevAvailable = false;
  this$static.matchLen = 2;
  for (i0 = 0; i0 < $intern_66; i0++)
    this$static.head[i0] = 0;
  for (i = 0; i < $intern_66; i++)
    this$static.prev[i] = 0;
}

function $setInput_0(this$static, buf, off, len){
  var end;
  if (this$static.inputOff < this$static.inputEnd)
    throw toJs(new IllegalStateException_0('Old input was not completely processed'));
  end = off + len;
  if (0 > off || off > end || end > buf.length)
    throw toJs(new ArrayIndexOutOfBoundsException);
  this$static.inputBuf = buf;
  this$static.inputOff = off;
  this$static.inputEnd = end;
}

function $setLevel_1(this$static, lvl){
  this$static.goodLength = ($clinit_DeflaterConstants() , GOOD_LENGTH)[lvl];
  this$static.max_lazy = MAX_LAZY[lvl];
  this$static.niceLength = NICE_LENGTH[lvl];
  this$static.max_chain = MAX_CHAIN[lvl];
  if (COMPR_FUNC[lvl] != this$static.comprFunc) {
    switch (this$static.comprFunc) {
      case 0:
        if (this$static.strstart > this$static.blockStart) {
          $flushStoredBlock(this$static.huffman, this$static.window_0, this$static.blockStart, this$static.strstart - this$static.blockStart, false);
          this$static.blockStart = this$static.strstart;
        }

        this$static.ins_h = this$static.window_0[this$static.strstart] << 5 ^ this$static.window_0[this$static.strstart + 1];
        break;
      case 1:
        if (this$static.strstart > this$static.blockStart) {
          $flushBlock(this$static.huffman, this$static.window_0, this$static.blockStart, this$static.strstart - this$static.blockStart, false);
          this$static.blockStart = this$static.strstart;
        }

        break;
      case 2:
        this$static.prevAvailable && $tallyLit(this$static.huffman, this$static.window_0[this$static.strstart - 1] & 255);
        if (this$static.strstart > this$static.blockStart) {
          $flushBlock(this$static.huffman, this$static.window_0, this$static.blockStart, this$static.strstart - this$static.blockStart, false);
          this$static.blockStart = this$static.strstart;
        }

        this$static.prevAvailable = false;
        this$static.matchLen = 2;
    }
    this$static.comprFunc = COMPR_FUNC[lvl];
  }
}

function $slideWindow(this$static){
  var i, i0, m;
  arraycopy(this$static.window_0, $intern_66, this$static.window_0, 0, $intern_66);
  this$static.matchStart -= $intern_66;
  this$static.strstart -= $intern_66;
  this$static.blockStart -= $intern_66;
  for (i0 = 0; i0 < $intern_66; i0++) {
    m = this$static.head[i0] & $intern_20;
    this$static.head[i0] = m >= $intern_66?m - $intern_66 << 16 >> 16:0;
  }
  for (i = 0; i < $intern_66; i++) {
    m = this$static.prev[i] & $intern_20;
    this$static.prev[i] = m >= $intern_66?m - $intern_66 << 16 >> 16:0;
  }
}

function DeflaterEngine(pending){
  this.pending = pending;
  this.huffman = new DeflaterHuffman(pending);
  this.adler = new Adler32;
  this.window_0 = initUnidimensionalArray(B_classLit, $intern_28, 8, $intern_19, 15, 1);
  this.head = initUnidimensionalArray(S_classLit, $intern_18, 8, $intern_66, 15, 1);
  this.prev = initUnidimensionalArray(S_classLit, $intern_18, 8, $intern_66, 15, 1);
  this.blockStart = this.strstart = 1;
}

defineClass(1118, 1, {}, DeflaterEngine);
_.blockStart = 0;
_.comprFunc = 0;
_.goodLength = 0;
_.inputEnd = 0;
_.inputOff = 0;
_.ins_h = 0;
_.lookahead = 0;
_.matchLen = 0;
_.matchStart = 0;
_.max_chain = 0;
_.max_lazy = 0;
_.niceLength = 0;
_.prevAvailable = false;
_.strategy = 0;
_.strstart = 0;
_.totalIn = 0;
var Ljava_util_zip_DeflaterEngine_2_classLit = createForClass('java.util.zip', 'DeflaterEngine', 1118);
function $clinit_DeflaterHuffman(){
  $clinit_DeflaterHuffman = emptyMethod;
  var i;
  BL_ORDER = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);
  staticLCodes = initUnidimensionalArray(S_classLit, $intern_18, 8, 286, 15, 1);
  staticLLength = initUnidimensionalArray(B_classLit, $intern_28, 8, 286, 15, 1);
  i = 0;
  while (i < 144) {
    staticLCodes[i] = (checkCriticalStringElementIndex(48 + i << 8 & 15, '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.length) , ('\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.charCodeAt(48 + i << 8 & 15) << 12 | (checkCriticalStringElementIndex(48 + i << 8 >> 4 & 15, '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.length) , '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.charCodeAt(48 + i << 8 >> 4 & 15) << 8) | (checkCriticalStringElementIndex(48 + i << 8 >> 8 & 15, '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.length) , '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.charCodeAt(48 + i << 8 >> 8 & 15) << 4) | (checkCriticalStringElementIndex(48 + i << 8 >> 12, '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.length) , '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.charCodeAt(48 + i << 8 >> 12))) << 16 >> 16);
    staticLLength[i++] = 8;
  }
  while (i < 256) {
    staticLCodes[i] = (checkCriticalStringElementIndex(256 + i << 7 & 15, '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.length) , ('\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.charCodeAt(256 + i << 7 & 15) << 12 | (checkCriticalStringElementIndex(256 + i << 7 >> 4 & 15, '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.length) , '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.charCodeAt(256 + i << 7 >> 4 & 15) << 8) | (checkCriticalStringElementIndex(256 + i << 7 >> 8 & 15, '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.length) , '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.charCodeAt(256 + i << 7 >> 8 & 15) << 4) | (checkCriticalStringElementIndex(256 + i << 7 >> 12, '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.length) , '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.charCodeAt(256 + i << 7 >> 12))) << 16 >> 16);
    staticLLength[i++] = 9;
  }
  while (i < 280) {
    staticLCodes[i] = (checkCriticalStringElementIndex(-256 + i << 9 & 15, '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.length) , ('\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.charCodeAt(-256 + i << 9 & 15) << 12 | (checkCriticalStringElementIndex(-256 + i << 9 >> 4 & 15, '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.length) , '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.charCodeAt(-256 + i << 9 >> 4 & 15) << 8) | (checkCriticalStringElementIndex(-256 + i << 9 >> 8 & 15, '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.length) , '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.charCodeAt(-256 + i << 9 >> 8 & 15) << 4) | (checkCriticalStringElementIndex(-256 + i << 9 >> 12, '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.length) , '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.charCodeAt(-256 + i << 9 >> 12))) << 16 >> 16);
    staticLLength[i++] = 7;
  }
  while (i < 286) {
    staticLCodes[i] = (checkCriticalStringElementIndex(-88 + i << 8 & 15, '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.length) , ('\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.charCodeAt(-88 + i << 8 & 15) << 12 | (checkCriticalStringElementIndex(-88 + i << 8 >> 4 & 15, '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.length) , '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.charCodeAt(-88 + i << 8 >> 4 & 15) << 8) | (checkCriticalStringElementIndex(-88 + i << 8 >> 8 & 15, '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.length) , '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.charCodeAt(-88 + i << 8 >> 8 & 15) << 4) | (checkCriticalStringElementIndex(-88 + i << 8 >> 12, '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.length) , '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.charCodeAt(-88 + i << 8 >> 12))) << 16 >> 16);
    staticLLength[i++] = 8;
  }
  staticDCodes = initUnidimensionalArray(S_classLit, $intern_18, 8, 30, 15, 1);
  staticDLength = initUnidimensionalArray(B_classLit, $intern_28, 8, 30, 15, 1);
  for (i = 0; i < 30; i++) {
    staticDCodes[i] = (checkCriticalStringElementIndex(i << 11 & 15, '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.length) , ('\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.charCodeAt(i << 11 & 15) << 12 | (checkCriticalStringElementIndex(i << 11 >> 4 & 15, '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.length) , '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.charCodeAt(i << 11 >> 4 & 15) << 8) | (checkCriticalStringElementIndex(i << 11 >> 8 & 15, '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.length) , '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.charCodeAt(i << 11 >> 8 & 15) << 4) | (checkCriticalStringElementIndex(i << 11 >> 12, '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.length) , '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.charCodeAt(i << 11 >> 12))) << 16 >> 16);
    staticDLength[i] = 5;
  }
}

function $compressBlock(this$static){
  var bits, dc, dist, i, lc, litlen;
  for (i = 0; i < this$static.last_lit; i++) {
    litlen = this$static.l_buf[i] & 255;
    dist = this$static.d_buf[i];
    if (dist-- != 0) {
      lc = $l_code(litlen);
      $writeSymbol(this$static.literalTree, lc);
      bits = (lc - 261) / 4 | 0;
      bits > 0 && bits <= 5 && $writeBits(this$static.pending, litlen & (1 << bits) - 1, bits);
      dc = $d_code(dist);
      $writeSymbol(this$static.distTree, dc);
      bits = (dc / 2 | 0) - 1;
      bits > 0 && $writeBits(this$static.pending, dist & (1 << bits) - 1, bits);
    }
     else {
      $writeSymbol(this$static.literalTree, litlen);
    }
  }
  $writeSymbol(this$static.literalTree, 256);
}

function $d_code(distance){
  var code_0;
  code_0 = 0;
  while (distance >= 4) {
    code_0 += 2;
    distance >>= 1;
  }
  return code_0 + distance;
}

function $flushBlock(this$static, stored, stored_offset, stored_len, lastBlock){
  var blTreeCodes, i, i0, i1, opt_len, static_len;
  ++this$static.literalTree.freqs[256];
  $buildTree(this$static.literalTree);
  $buildTree(this$static.distTree);
  $calcBLFreq(this$static.literalTree, this$static.blTree);
  $calcBLFreq(this$static.distTree, this$static.blTree);
  $buildTree(this$static.blTree);
  blTreeCodes = 4;
  for (i0 = 18; i0 > blTreeCodes; i0--) {
    this$static.blTree.length_0[BL_ORDER[i0]] > 0 && (blTreeCodes = i0 + 1);
  }
  opt_len = 14 + blTreeCodes * 3 + $getEncodedLength(this$static.blTree) + $getEncodedLength(this$static.literalTree) + $getEncodedLength(this$static.distTree) + this$static.extra_bits;
  static_len = this$static.extra_bits;
  for (i1 = 0; i1 < 286; i1++)
    static_len += this$static.literalTree.freqs[i1] * staticLLength[i1];
  for (i = 0; i < 30; i++)
    static_len += this$static.distTree.freqs[i] * staticDLength[i];
  opt_len >= static_len && (opt_len = static_len);
  if (stored_offset >= 0 && stored_len + 4 < opt_len >> 3) {
    $flushStoredBlock(this$static, stored, stored_offset, stored_len, lastBlock);
  }
   else if (opt_len == static_len) {
    $writeBits(this$static.pending, 2 + (lastBlock?1:0), 3);
    $setStaticCodes(this$static.literalTree, staticLCodes, staticLLength);
    $setStaticCodes(this$static.distTree, staticDCodes, staticDLength);
    $compressBlock(this$static);
    $reset_2(this$static);
  }
   else {
    $writeBits(this$static.pending, 4 + (lastBlock?1:0), 3);
    $sendAllTrees(this$static, blTreeCodes);
    $compressBlock(this$static);
    $reset_2(this$static);
  }
}

function $flushStoredBlock(this$static, stored, stored_offset, stored_len, lastBlock){
  $writeBits(this$static.pending, lastBlock?1:0, 3);
  $alignToByte(this$static.pending);
  $writeShort(this$static.pending, stored_len);
  $writeShort(this$static.pending, ~stored_len);
  $writeBlock(this$static.pending, stored, stored_offset, stored_len);
  $reset_2(this$static);
}

function $l_code(len){
  var code_0;
  if (len == 255)
    return 285;
  code_0 = 257;
  while (len >= 8) {
    code_0 += 4;
    len >>= 1;
  }
  return code_0 + len;
}

function $reset_2(this$static){
  this$static.last_lit = 0;
  this$static.extra_bits = 0;
  $reset_3(this$static.literalTree);
  $reset_3(this$static.distTree);
  $reset_3(this$static.blTree);
}

function $sendAllTrees(this$static, blTreeCodes){
  var rank;
  $buildCodes(this$static.blTree);
  $buildCodes(this$static.literalTree);
  $buildCodes(this$static.distTree);
  $writeBits(this$static.pending, this$static.literalTree.numCodes - 257, 5);
  $writeBits(this$static.pending, this$static.distTree.numCodes - 1, 5);
  $writeBits(this$static.pending, blTreeCodes - 4, 4);
  for (rank = 0; rank < blTreeCodes; rank++)
    $writeBits(this$static.pending, this$static.blTree.length_0[BL_ORDER[rank]], 3);
  $writeTree(this$static.literalTree, this$static.blTree);
  $writeTree(this$static.distTree, this$static.blTree);
}

function $tallyDist(this$static, dist, len){
  var dc, lc;
  this$static.d_buf[this$static.last_lit] = dist << 16 >> 16;
  this$static.l_buf[this$static.last_lit++] = len - 3 << 24 >> 24;
  lc = $l_code(len - 3);
  ++this$static.literalTree.freqs[lc];
  lc >= 265 && lc < 285 && (this$static.extra_bits += (lc - 261) / 4 | 0);
  dc = $d_code(dist - 1);
  ++this$static.distTree.freqs[dc];
  dc >= 4 && (this$static.extra_bits += (dc / 2 | 0) - 1);
  return this$static.last_lit == $intern_16;
}

function $tallyLit(this$static, lit){
  this$static.d_buf[this$static.last_lit] = 0;
  this$static.l_buf[this$static.last_lit++] = lit << 24 >> 24;
  ++this$static.literalTree.freqs[lit];
  return this$static.last_lit == $intern_16;
}

function DeflaterHuffman(pending){
  $clinit_DeflaterHuffman();
  this.pending = pending;
  this.literalTree = new DeflaterHuffman$Tree(this, 286, 257, 15);
  this.distTree = new DeflaterHuffman$Tree(this, 30, 1, 15);
  this.blTree = new DeflaterHuffman$Tree(this, 19, 4, 7);
  this.d_buf = initUnidimensionalArray(S_classLit, $intern_18, 8, $intern_16, 15, 1);
  this.l_buf = initUnidimensionalArray(B_classLit, $intern_28, 8, $intern_16, 15, 1);
}

defineClass(1136, 1, {}, DeflaterHuffman);
_.extra_bits = 0;
_.last_lit = 0;
var BL_ORDER, staticDCodes, staticDLength, staticLCodes, staticLLength;
var Ljava_util_zip_DeflaterHuffman_2_classLit = createForClass('java.util.zip', 'DeflaterHuffman', 1136);
function $buildCodes(this$static){
  var bits, bits0, code_0, i, nextCode;
  nextCode = initUnidimensionalArray(I_classLit, $intern_29, 8, this$static.maxLength, 15, 1);
  code_0 = 0;
  this$static.codes = initUnidimensionalArray(S_classLit, $intern_18, 8, this$static.freqs.length, 15, 1);
  for (bits0 = 0; bits0 < this$static.maxLength; bits0++) {
    nextCode[bits0] = code_0;
    code_0 += this$static.bl_counts[bits0] << 15 - bits0;
  }
  for (i = 0; i < this$static.numCodes; i++) {
    bits = this$static.length_0[i];
    if (bits > 0) {
      this$static.codes[i] = ($clinit_DeflaterHuffman() , checkCriticalStringElementIndex(nextCode[bits - 1] & 15, '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.length) , ('\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.charCodeAt(nextCode[bits - 1] & 15) << 12 | (checkCriticalStringElementIndex(nextCode[bits - 1] >> 4 & 15, '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.length) , '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.charCodeAt(nextCode[bits - 1] >> 4 & 15) << 8) | (checkCriticalStringElementIndex(nextCode[bits - 1] >> 8 & 15, '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.length) , '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.charCodeAt(nextCode[bits - 1] >> 8 & 15) << 4) | (checkCriticalStringElementIndex(nextCode[bits - 1] >> 12, '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.length) , '\x00\b\x04\f\x02\n\x06\x0E\x01\t\x05\r\x03\x0B\x07\x0F'.charCodeAt(nextCode[bits - 1] >> 12))) << 16 >> 16);
      nextCode[bits - 1] += 1 << 16 - bits;
    }
  }
}

function $buildLength(this$static, childs){
  var bitLength, bits, childPtr, i, i0, incrBitLen, lengths, n, nodePtr, numLeafs, numNodes, overflow;
  this$static.length_0 = initUnidimensionalArray(B_classLit, $intern_28, 8, this$static.freqs.length, 15, 1);
  numNodes = childs.length / 2 | 0;
  numLeafs = (numNodes + 1) / 2 | 0;
  overflow = 0;
  for (i0 = 0; i0 < this$static.maxLength; i0++)
    this$static.bl_counts[i0] = 0;
  lengths = initUnidimensionalArray(I_classLit, $intern_29, 8, numNodes, 15, 1);
  lengths[numNodes - 1] = 0;
  for (i = numNodes - 1; i >= 0; i--) {
    if (childs[2 * i + 1] != -1) {
      bitLength = lengths[i] + 1;
      if (bitLength > this$static.maxLength) {
        bitLength = this$static.maxLength;
        ++overflow;
      }
      lengths[childs[2 * i]] = lengths[childs[2 * i + 1]] = bitLength;
    }
     else {
      bitLength = lengths[i];
      ++this$static.bl_counts[bitLength - 1];
      this$static.length_0[childs[2 * i]] = lengths[i] << 24 >> 24;
    }
  }
  if (overflow == 0)
    return;
  incrBitLen = this$static.maxLength - 1;
  do {
    while (this$static.bl_counts[--incrBitLen] == 0)
    ;
    do {
      --this$static.bl_counts[incrBitLen];
      ++this$static.bl_counts[++incrBitLen];
      overflow -= 1 << this$static.maxLength - 1 - incrBitLen;
    }
     while (overflow > 0 && incrBitLen < this$static.maxLength - 1);
  }
   while (overflow > 0);
  this$static.bl_counts[this$static.maxLength - 1] += overflow;
  this$static.bl_counts[this$static.maxLength - 2] -= overflow;
  nodePtr = 2 * numLeafs;
  for (bits = this$static.maxLength; bits != 0; bits--) {
    n = this$static.bl_counts[bits - 1];
    while (n > 0) {
      childPtr = 2 * childs[nodePtr++];
      if (childs[childPtr + 1] == -1) {
        this$static.length_0[childs[childPtr]] = bits << 24 >> 24;
        --n;
      }
    }
  }
}

function $buildTree(this$static){
  var childs, first, freq, heap, heapLen, i, last, lastVal, maxCode, mindepth, n, node, numLeafs, numNodes, numSymbols, path, pos, ppos, second, values;
  numSymbols = this$static.freqs.length;
  heap = initUnidimensionalArray(I_classLit, $intern_29, 8, numSymbols, 15, 1);
  heapLen = 0;
  maxCode = 0;
  for (n = 0; n < numSymbols; n++) {
    freq = this$static.freqs[n];
    if (freq != 0) {
      pos = heapLen++;
      while (pos > 0 && this$static.freqs[heap[ppos = (pos - 1) / 2 | 0]] > freq) {
        heap[pos] = heap[ppos];
        pos = ppos;
      }
      heap[pos] = n;
      maxCode = n;
    }
  }
  while (heapLen < 2) {
    node = maxCode < 2?++maxCode:0;
    heap[heapLen++] = node;
  }
  this$static.numCodes = $wnd.Math.max(maxCode + 1, this$static.minNumCodes);
  numLeafs = heapLen;
  childs = initUnidimensionalArray(I_classLit, $intern_29, 8, 4 * heapLen - 2, 15, 1);
  values = initUnidimensionalArray(I_classLit, $intern_29, 8, 2 * heapLen - 1, 15, 1);
  numNodes = numLeafs;
  for (i = 0; i < heapLen; i++) {
    node = heap[i];
    childs[2 * i] = node;
    childs[2 * i + 1] = -1;
    values[i] = this$static.freqs[node] << 8;
    heap[i] = i;
  }
  do {
    first = heap[0];
    last = heap[--heapLen];
    ppos = 0;
    path = 1;
    while (path < heapLen) {
      path + 1 < heapLen && values[heap[path]] > values[heap[path + 1]] && ++path;
      heap[ppos] = heap[path];
      ppos = path;
      path = path * 2 + 1;
    }
    lastVal = values[last];
    while ((path = ppos) > 0 && values[heap[ppos = (path - 1) / 2 | 0]] > lastVal)
      heap[path] = heap[ppos];
    heap[path] = last;
    second = heap[0];
    last = numNodes++;
    childs[2 * last] = first;
    childs[2 * last + 1] = second;
    mindepth = $wnd.Math.min(values[first] & 255, values[second] & 255);
    values[last] = lastVal = values[first] + values[second] - mindepth + 1;
    ppos = 0;
    path = 1;
    while (path < heapLen) {
      path + 1 < heapLen && values[heap[path]] > values[heap[path + 1]] && ++path;
      heap[ppos] = heap[path];
      ppos = path;
      path = ppos * 2 + 1;
    }
    while ((path = ppos) > 0 && values[heap[ppos = (path - 1) / 2 | 0]] > lastVal)
      heap[path] = heap[ppos];
    heap[path] = last;
  }
   while (heapLen > 1);
  if (heap[0] != (childs.length / 2 | 0) - 1)
    throw toJs(new RuntimeException_0('Weird!'));
  $buildLength(this$static, childs);
}

function $calcBLFreq(this$static, blTree){
  var count, curlen, i, max_count, min_count, nextlen;
  curlen = -1;
  i = 0;
  while (i < this$static.numCodes) {
    count = 1;
    nextlen = this$static.length_0[i];
    if (nextlen == 0) {
      max_count = 138;
      min_count = 3;
    }
     else {
      max_count = 6;
      min_count = 3;
      if (curlen != nextlen) {
        ++blTree.freqs[nextlen];
        count = 0;
      }
    }
    curlen = nextlen;
    ++i;
    while (i < this$static.numCodes && curlen == this$static.length_0[i]) {
      ++i;
      if (++count >= max_count)
        break;
    }
    count < min_count?(blTree.freqs[curlen] = blTree.freqs[curlen] + count << 16 >> 16):curlen != 0?++blTree.freqs[16]:count <= 10?++blTree.freqs[17]:++blTree.freqs[18];
  }
}

function $getEncodedLength(this$static){
  var i, len;
  len = 0;
  for (i = 0; i < this$static.freqs.length; i++)
    len += this$static.freqs[i] * this$static.length_0[i];
  return len;
}

function $reset_3(this$static){
  var i;
  for (i = 0; i < this$static.freqs.length; i++)
    this$static.freqs[i] = 0;
  this$static.codes = null;
  this$static.length_0 = null;
}

function $setStaticCodes(this$static, stCodes, stLength){
  this$static.codes = stCodes;
  this$static.length_0 = stLength;
}

function $writeSymbol(this$static, code_0){
  $writeBits(this$static.this$01.pending, this$static.codes[code_0] & $intern_20, this$static.length_0[code_0]);
}

function $writeTree(this$static, blTree){
  var count, curlen, i, max_count, min_count, nextlen;
  curlen = -1;
  i = 0;
  while (i < this$static.numCodes) {
    count = 1;
    nextlen = this$static.length_0[i];
    if (nextlen == 0) {
      max_count = 138;
      min_count = 3;
    }
     else {
      max_count = 6;
      min_count = 3;
      if (curlen != nextlen) {
        $writeBits(blTree.this$01.pending, blTree.codes[nextlen] & $intern_20, blTree.length_0[nextlen]);
        count = 0;
      }
    }
    curlen = nextlen;
    ++i;
    while (i < this$static.numCodes && curlen == this$static.length_0[i]) {
      ++i;
      if (++count >= max_count)
        break;
    }
    if (count < min_count) {
      while (count-- > 0)
        $writeBits(blTree.this$01.pending, blTree.codes[curlen] & $intern_20, blTree.length_0[curlen]);
    }
     else if (curlen != 0) {
      $writeBits(blTree.this$01.pending, blTree.codes[16] & $intern_20, blTree.length_0[16]);
      $writeBits(this$static.this$01.pending, count - 3, 2);
    }
     else if (count <= 10) {
      $writeBits(blTree.this$01.pending, blTree.codes[17] & $intern_20, blTree.length_0[17]);
      $writeBits(this$static.this$01.pending, count - 3, 3);
    }
     else {
      $writeBits(blTree.this$01.pending, blTree.codes[18] & $intern_20, blTree.length_0[18]);
      $writeBits(this$static.this$01.pending, count - 11, 7);
    }
  }
}

function DeflaterHuffman$Tree(this$0, elems, minCodes, maxLength){
  this.this$01 = this$0;
  this.minNumCodes = minCodes;
  this.maxLength = maxLength;
  this.freqs = initUnidimensionalArray(S_classLit, $intern_18, 8, elems, 15, 1);
  this.bl_counts = initUnidimensionalArray(I_classLit, $intern_29, 8, maxLength, 15, 1);
}

defineClass(432, 1, {}, DeflaterHuffman$Tree);
_.maxLength = 0;
_.minNumCodes = 0;
_.numCodes = 0;
var Ljava_util_zip_DeflaterHuffman$Tree_2_classLit = createForClass('java.util.zip', 'DeflaterHuffman/Tree', 432);
function $deflate_1(this$static){
  var len;
  while (!$needsInput(this$static.def.engine)) {
    len = $deflate(this$static.def, this$static.buf, 0, this$static.buf.length);
    if (len <= 0)
      break;
    $write_2(this$static.out, this$static.buf, 0, len);
  }
  if (!$needsInput(this$static.def.engine))
    throw toJs(new InternalError_1);
}

function $finish(this$static){
  var len;
  this$static.def.state |= 12;
  while (!$finished(this$static.def)) {
    len = $deflate(this$static.def, this$static.buf, 0, this$static.buf.length);
    if (len <= 0)
      break;
    $write_2(this$static.out, this$static.buf, 0, len);
  }
  if (!$finished(this$static.def))
    throw toJs(new InternalError_1);
}

function $write_4(this$static, bval){
  var b;
  b = initUnidimensionalArray(B_classLit, $intern_28, 8, 1, 15, 1);
  b[0] = bval << 24 >> 24;
  $setInput(this$static.def, b, 0, 1);
  $deflate_1(this$static);
}

function DeflaterOutputStream(out, defl){
  this.out = out;
  this.buf = initUnidimensionalArray(B_classLit, $intern_28, 8, $intern_15, 15, 1);
  this.def = defl;
}

defineClass(510, 457, $intern_40, DeflaterOutputStream);
_.write_0 = function write_9(bval){
  $write_4(this, bval);
}
;
_.write_2 = function write_10(buf, off, len){
  $setInput(this.def, buf, off, len);
  $deflate_1(this);
}
;
var Ljava_util_zip_DeflaterOutputStream_2_classLit = createForClass('java.util.zip', 'DeflaterOutputStream', 510);
function $alignToByte(this$static){
  if (this$static.bitCount > 0) {
    this$static.buf[this$static.end++] = this$static.bits << 24 >> 24;
    this$static.bitCount > 8 && (this$static.buf[this$static.end++] = this$static.bits >>> 8 << 24 >> 24);
  }
  this$static.bits = 0;
  this$static.bitCount = 0;
}

function $flush(this$static, output, offset, length_0){
  if (this$static.bitCount >= 8) {
    this$static.buf[this$static.end++] = this$static.bits << 24 >> 24;
    this$static.bits >>>= 8;
    this$static.bitCount -= 8;
  }
  if (length_0 > this$static.end - this$static.start_0) {
    length_0 = this$static.end - this$static.start_0;
    arraycopy(this$static.buf, this$static.start_0, output, offset, length_0);
    this$static.start_0 = 0;
    this$static.end = 0;
  }
   else {
    arraycopy(this$static.buf, this$static.start_0, output, offset, length_0);
    this$static.start_0 += length_0;
  }
  return length_0;
}

function $reset_4(this$static){
  this$static.start_0 = this$static.end = this$static.bitCount = 0;
}

function $writeBits(this$static, b, count){
  this$static.bits |= b << this$static.bitCount;
  this$static.bitCount += count;
  if (this$static.bitCount >= 16) {
    this$static.buf[this$static.end++] = this$static.bits << 24 >> 24;
    this$static.buf[this$static.end++] = this$static.bits >>> 8 << 24 >> 24;
    this$static.bits >>>= 16;
    this$static.bitCount -= 16;
  }
}

function $writeBlock(this$static, block, offset, len){
  arraycopy(block, offset, this$static.buf, this$static.end, len);
  this$static.end += len;
}

function $writeShort(this$static, s){
  this$static.buf[this$static.end++] = s << 24 >> 24;
  this$static.buf[this$static.end++] = s >> 8 << 24 >> 24;
}

function $writeShortMSB(this$static, s){
  this$static.buf[this$static.end++] = s >> 8 << 24 >> 24;
  this$static.buf[this$static.end++] = s << 24 >> 24;
}

defineClass(1116, 1, {});
_.bitCount = 0;
_.bits = 0;
_.end = 0;
_.start_0 = 0;
var Ljava_util_zip_PendingBuffer_2_classLit = createForClass('java.util.zip', 'PendingBuffer', 1116);
function DeflaterPending(){
  this.buf = initUnidimensionalArray(B_classLit, $intern_28, 8, $intern_19, 15, 1);
}

defineClass(1117, 1116, {}, DeflaterPending);
var Ljava_util_zip_DeflaterPending_2_classLit = createForClass('java.util.zip', 'DeflaterPending', 1117);
function $groupStart(msg, expanded){
  (!expanded && console.groupCollapsed != null?console.groupCollapsed:console.group != null?console.group:console.log).call(console, msg);
}

function $log_0(level, message){
  var logFn;
  logFn = console[level];
  logFn.call(console, message);
}

function $log_1(this$static, level, t, label_0, expanded){
  var cause, suppressed, suppressed$array, suppressed$index, suppressed$max;
  $groupStart(label_0 + $toString_0(t, t.getMessage()), expanded);
  $log_0(level, getBackingErrorStack(t));
  cause = t.cause_0;
  !!cause && $log_1(this$static, level, cause, 'Caused by: ', false);
  for (suppressed$array = (t.suppressedExceptions == null && (t.suppressedExceptions = initUnidimensionalArray(Ljava_lang_Throwable_2_classLit, $intern_0, 33, 0, 0, 1)) , t.suppressedExceptions) , suppressed$index = 0 , suppressed$max = suppressed$array.length; suppressed$index < suppressed$max; ++suppressed$index) {
    suppressed = suppressed$array[suppressed$index];
    $log_1(this$static, level, suppressed, 'Suppressed: ', false);
  }
  console.groupEnd != null && console.groupEnd.call(console);
}

function ConsoleLogger(){
}

function getBackingErrorStack(t){
  var backingError = t.backingJsObject;
  function stringify(fnStack){
    if (!fnStack || fnStack.length == 0) {
      return '';
    }
    return '\t' + fnStack.join('\n\t');
  }

  return backingError && (backingError.stack || stringify(t['fnStack']));
}

defineClass(1159, 1, {}, ConsoleLogger);
var Ljavaemul_internal_ConsoleLogger_2_classLit = createForClass('javaemul.internal', 'ConsoleLogger', 1159);
function $clinit_EmulatedCharset(){
  $clinit_EmulatedCharset = emptyMethod;
  UTF_8_0 = new EmulatedCharset$UtfCharset;
  ISO_LATIN_1 = new EmulatedCharset$LatinCharset('ISO-LATIN-1');
  ISO_8859_1 = new EmulatedCharset$LatinCharset('ISO-8859-1');
}

function EmulatedCharset(name_0){
  this.name_0 = name_0;
}

defineClass(480, 213, $intern_48);
var ISO_8859_1, ISO_LATIN_1, UTF_8_0;
var Ljavaemul_internal_EmulatedCharset_2_classLit = createForClass('javaemul.internal', 'EmulatedCharset', 480);
function EmulatedCharset$LatinCharset(name_0){
  EmulatedCharset.call(this, name_0);
}

defineClass(481, 480, $intern_48, EmulatedCharset$LatinCharset);
_.decodeString = function decodeString(bytes, ofs, len){
  var chars, i;
  chars = initUnidimensionalArray(C_classLit, $intern_18, 8, len, 15, 1);
  for (i = 0; i < len; ++i) {
    chars[i] = bytes[ofs + i] & 255 & $intern_20;
  }
  return chars;
}
;
_.getBytes = function getBytes(str){
  var bytes, i, n;
  n = str.length;
  bytes = initUnidimensionalArray(B_classLit, $intern_28, 8, n, 15, 1);
  for (i = 0; i < n; ++i) {
    bytes[i] = (checkCriticalStringElementIndex(i, str.length) , (str.charCodeAt(i) & 255) << 24 >> 24);
  }
  return bytes;
}
;
var Ljavaemul_internal_EmulatedCharset$LatinCharset_2_classLit = createForClass('javaemul.internal', 'EmulatedCharset/LatinCharset', 481);
function $encodeUtf8(bytes, ofs, codePoint){
  if (codePoint < 128) {
    bytes[ofs] = (codePoint & 127) << 24 >> 24;
    return 1;
  }
   else if (codePoint < 2048) {
    bytes[ofs++] = (codePoint >> 6 & 31 | 192) << 24 >> 24;
    bytes[ofs] = (codePoint & 63 | 128) << 24 >> 24;
    return 2;
  }
   else if (codePoint < $intern_19) {
    bytes[ofs++] = (codePoint >> 12 & 15 | 224) << 24 >> 24;
    bytes[ofs++] = (codePoint >> 6 & 63 | 128) << 24 >> 24;
    bytes[ofs] = (codePoint & 63 | 128) << 24 >> 24;
    return 3;
  }
   else if (codePoint < 2097152) {
    bytes[ofs++] = (codePoint >> 18 & 7 | 240) << 24 >> 24;
    bytes[ofs++] = (codePoint >> 12 & 63 | 128) << 24 >> 24;
    bytes[ofs++] = (codePoint >> 6 & 63 | 128) << 24 >> 24;
    bytes[ofs] = (codePoint & 63 | 128) << 24 >> 24;
    return 4;
  }
   else if (codePoint < 67108864) {
    bytes[ofs++] = (codePoint >> 24 & 3 | 248) << 24 >> 24;
    bytes[ofs++] = (codePoint >> 18 & 63 | 128) << 24 >> 24;
    bytes[ofs++] = (codePoint >> 12 & 63 | 128) << 24 >> 24;
    bytes[ofs++] = (codePoint >> 6 & 63 | 128) << 24 >> 24;
    bytes[ofs] = (codePoint & 63 | 128) << 24 >> 24;
    return 5;
  }
  throw toJs(new IllegalArgumentException_0('Character out of range: ' + codePoint));
}

function EmulatedCharset$UtfCharset(){
  EmulatedCharset.call(this, 'UTF-8');
}

defineClass(924, 480, $intern_48, EmulatedCharset$UtfCharset);
_.decodeString = function decodeString_0(bytes, ofs, len){
  var b, ch_0, charCount, chars, count, i, i0, number, outIdx;
  charCount = 0;
  for (i0 = 0; i0 < len;) {
    ++charCount;
    ch_0 = bytes[ofs + i0];
    if ((ch_0 & 192) == 128) {
      throw toJs(new IllegalArgumentException_0('Invalid UTF8 sequence'));
    }
     else if ((ch_0 & 128) == 0) {
      ++i0;
    }
     else if ((ch_0 & 224) == 192) {
      i0 += 2;
    }
     else if ((ch_0 & 240) == 224) {
      i0 += 3;
    }
     else if ((ch_0 & 248) == 240) {
      i0 += 4;
    }
     else {
      throw toJs(new IllegalArgumentException_0('Invalid UTF8 sequence'));
    }
    if (i0 > len) {
      throw toJs(new IndexOutOfBoundsException_0('Invalid UTF8 sequence'));
    }
  }
  chars = initUnidimensionalArray(C_classLit, $intern_18, 8, charCount, 15, 1);
  outIdx = 0;
  count = 0;
  for (i = 0; i < len;) {
    ch_0 = bytes[ofs + i++];
    if ((ch_0 & 128) == 0) {
      count = 1;
      ch_0 &= 127;
    }
     else if ((ch_0 & 224) == 192) {
      count = 2;
      ch_0 &= 31;
    }
     else if ((ch_0 & 240) == 224) {
      count = 3;
      ch_0 &= 15;
    }
     else if ((ch_0 & 248) == 240) {
      count = 4;
      ch_0 &= 7;
    }
     else if ((ch_0 & 252) == 248) {
      count = 5;
      ch_0 &= 3;
    }
    while (--count > 0) {
      b = bytes[ofs + i++];
      if ((b & 192) != 128) {
        throw toJs(new IllegalArgumentException_0('Invalid UTF8 sequence at ' + (ofs + i - 1) + ', byte=' + (number = b >>> 0 , number.toString(16))));
      }
      ch_0 = ch_0 << 6 | b & 63;
    }
    outIdx += toChars(ch_0, chars, outIdx);
  }
  return chars;
}
;
_.getBytes = function getBytes_0(str){
  var byteCount, bytes, ch_0, i, i0, n, out;
  n = str.length;
  byteCount = 0;
  for (i0 = 0; i0 < n;) {
    ch_0 = codePointAt(str, i0, str.length);
    i0 += ch_0 >= $intern_19?2:1;
    ch_0 < 128?++byteCount:ch_0 < 2048?(byteCount += 2):ch_0 < $intern_19?(byteCount += 3):ch_0 < 2097152?(byteCount += 4):ch_0 < 67108864 && (byteCount += 5);
  }
  bytes = initUnidimensionalArray(B_classLit, $intern_28, 8, byteCount, 15, 1);
  out = 0;
  for (i = 0; i < n;) {
    ch_0 = codePointAt(str, i, str.length);
    i += ch_0 >= $intern_19?2:1;
    out += $encodeUtf8(bytes, out, ch_0);
  }
  return bytes;
}
;
var Ljavaemul_internal_EmulatedCharset$UtfCharset_2_classLit = createForClass('javaemul.internal', 'EmulatedCharset/UtfCharset', 924);
function $consoleLog(msg){
  window.console?window.console.log(msg):(document.title = 'LOG:' + msg);
}

function $println(this$static, s){
  $append_4(this$static.buf, s);
  $consoleLog(this$static.buf.string);
  $setLength(this$static.buf);
}

function ConsolePrintStream(){
  PrintStream.call(this);
  this.buf = new StringBuilder;
}

defineClass(451, 390, $intern_40, ConsolePrintStream);
_.println = function println_1(){
  $println(this, '');
}
;
_.println_0 = function println_2(s){
  $println(this, s);
}
;
var Lpeergos_client_ConsolePrintStream_2_classLit = createForClass('peergos.client', 'ConsolePrintStream', 451);
function asList(array){
  return new Arrays$ArrayList(array);
}

function asMap(keys_0, values){
  var i, map_0;
  map_0 = new HashMap;
  for (i = 0; i < keys_0.length; i++) {
    $put(map_0, keys_0[i], values[i]);
  }
  return map_0;
}

function asSet(array){
  return castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new Arrays$ArrayList(array), 16)), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47);
}

function decodeBase64(base64data){
  return $clinit_Base64Coder() , decode($toCharArray(base64data));
}

function emptyList(){
  return $clinit_Collections() , $clinit_Collections() , EMPTY_LIST;
}

function emptyOptional(){
  return $clinit_Optional() , $clinit_Optional() , EMPTY;
}

function encodeBase64(bytes){
  return $create($encode(bytes));
}

function generateAuthResponse(credentialId, code_0){
  return new MultiFactorAuthResponse(credentialId, new Either(code_0, null));
}

function generateWebAuthnResponse(credentialId, authenticatorData, clientDataJson, signature){
  var resp;
  resp = new WebauthnResponse(authenticatorData, clientDataJson, signature);
  return new MultiFactorAuthResponse(credentialId, new Either(null, resp));
}

function now_5(){
  return $clinit_LocalDateTime() , now_4();
}

function optionalOf(of){
  return $clinit_Optional() , new Optional(checkCriticalNotNull(of));
}

defineClass(1222, 1, {});
var Lpeergos_client_JsUtil_2_classLit = createForClass('peergos.client', 'JsUtil', 1222);
function directoryToPath(parts){
  var pathFragments, remainder;
  if (parts == null || parts.length == 0) {
    throw toJs(new IllegalArgumentException_0('Invalid params'));
  }
   else if (parts.length == 1) {
    return get_0(parts[0]);
  }
   else {
    pathFragments = castTo($collect_0($skip_0(new StreamImpl(null, spliterator_5(parts, parts.length)), 1), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
    remainder = castTo(pathFragments.toArray_0(initUnidimensionalArray(Ljava_lang_String_2_classLit, $intern_17, 2, 1, 6, 1)), 30);
    return get_0.apply(null, [parts[0]].concat((checkCriticalNotNull(remainder) , remainder)));
  }
}

function getFileName(another){
  return $getFileName(another);
}

function getNameCount(another){
  return $getNameCount(another);
}

function getParent(another){
  return $getParent(another);
}

function subpath(another, from, to){
  return $subpath(another, from, to);
}

function toPath(parts, filename){
  var pathFragments, remainder;
  if (parts == null || parts.length == 0 || filename == null) {
    throw toJs(new IllegalArgumentException_0('Invalid params'));
  }
   else if (parts.length == 1) {
    return get_0(parts[0], filename);
  }
   else {
    pathFragments = castTo($collect_0($skip_0(new StreamImpl(null, spliterator_5(parts, parts.length)), 1), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
    pathFragments.add(filename);
    remainder = castTo(pathFragments.toArray_0(initUnidimensionalArray(Ljava_lang_String_2_classLit, $intern_17, 2, 1, 6, 1)), 30);
    return get_0.apply(null, [parts[0]].concat((checkCriticalNotNull(remainder) , remainder)));
  }
}

defineClass(1223, 1, {});
var Lpeergos_client_PathUtils_2_classLit = createForClass('peergos.client', 'PathUtils', 1223);
function $clinit_NetworkAccess(){
  $clinit_NetworkAccess = emptyMethod;
  LOG = ($clinit_Logger() , getLogger());
}

function $bulkUploadFragments(this$static, fragments, owner, writer, signatures, tid, progressCounter){
  return this$static.dhtClient.putRaw(owner, writer, signatures, castTo($collect_0($map_0(fragments.stream(), makeLambdaFunction(NetworkAccess$lambda$67$Type.prototype.apply_0, NetworkAccess$lambda$67$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17), tid, progressCounter);
}

function $chunkIsPresent(this$static, current, owner, writer, mapKey){
  var version;
  version = $get_32(current, writer);
  return $thenApply($get_29(this$static.tree, version.props, owner, writer, mapKey), makeLambdaFunction(NetworkAccess$lambda$89$Type.prototype.apply_0, NetworkAccess$lambda$89$Type, []));
}

function $clear_4(this$static){
  var mutable, mutableTree, synchronizer;
  mutable = this$static.mutable.clearCache();
  this$static.dhtClient.clearBlockCache();
  synchronizer = new WriteSynchronizer(mutable, this$static.dhtClient, this$static.hasher);
  mutableTree = new MutableTreeImpl(this$static.dhtClient, this$static.hasher);
  return new NetworkAccess_0(this$static.coreNode, this$static.account, this$static.social, this$static.dhtClient, this$static.batCave, this$static.batCache_0, mutable, mutableTree, synchronizer, this$static.instanceAdmin, this$static.spaceUsage, this$static.serverMessager, this$static.hasher, this$static.usernames, this$static.isJavascript);
}

function $deleteAllChunksIfPresent(this$static, current, committer, owner, writer, mapKeys, tid){
  var version, withValues;
  version = $get_31(current, writer);
  withValues = castTo($collect_0($map_0($parallel(mapKeys.stream()), makeLambdaFunction(NetworkAccess$lambda$82$Type.prototype.apply_0, NetworkAccess$lambda$82$Type, [this$static, version, owner, writer])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  return $thenApply($thenCompose(reduceAll(withValues, version.props, new NetworkAccess$lambda$84$Type(this$static, owner, writer, tid), new NetworkAccess$lambda$85$Type), makeLambdaFunction(NetworkAccess$lambda$87$Type.prototype.apply_0, NetworkAccess$lambda$87$Type, [committer, owner, writer, version, tid])), makeLambdaFunction(NetworkAccess$lambda$88$Type.prototype.apply_0, NetworkAccess$lambda$88$Type, [current, writer]));
}

function $deleteChunk(this$static, current, committer, metadata, owner, mapKey, writer, tid){
  var version;
  version = $get_31(current, writer);
  return $thenApply($thenCompose($remove_14(this$static.tree, version.props, owner, writer, mapKey, metadata.lastCommittedHash, tid), makeLambdaFunction(NetworkAccess$lambda$77$Type.prototype.apply_0, NetworkAccess$lambda$77$Type, [committer, owner, writer, version, tid])), makeLambdaFunction(NetworkAccess$lambda$78$Type.prototype.apply_0, NetworkAccess$lambda$78$Type, [current, writer]));
}

function $deleteChunkIfPresent(this$static, current, committer, owner, writer, mapKey, tid){
  var version;
  version = $get_31(current, writer);
  return $thenApply($thenCompose($get_29(this$static.tree, version.props, owner, writer.publicKeyHash, mapKey), makeLambdaFunction(NetworkAccess$lambda$79$Type.prototype.apply_0, NetworkAccess$lambda$79$Type, [this$static, committer, owner, writer, version, tid, current, mapKey])), makeLambdaFunction(NetworkAccess$lambda$81$Type.prototype.apply_0, NetworkAccess$lambda$81$Type, [current, writer]));
}

function $getFile(this$static, e, version){
  if ($contains_5(version, e.pointer.writer))
    return $getFile_0(this$static, version, e.pointer, ($clinit_Optional() , $clinit_Optional() , EMPTY), e.ownerName);
  return $exceptionally($thenCompose($getValue_0(this$static.synchronizer, e.pointer.owner, e.pointer.writer), makeLambdaFunction(NetworkAccess$lambda$33$Type.prototype.apply_0, NetworkAccess$lambda$33$Type, [this$static, e])), makeLambdaFunction(NetworkAccess$lambda$34$Type.prototype.apply_0, NetworkAccess$lambda$34$Type, []));
}

function $getFile_0(this$static, version, cap, entryWriter, ownerName){
  return $thenCompose($withWriter(version, cap.owner, cap.writer, this$static), makeLambdaFunction(NetworkAccess$lambda$44$Type.prototype.apply_0, NetworkAccess$lambda$44$Type, [this$static, cap, entryWriter, ownerName]));
}

function $getFile_1(this$static, cap, owner){
  return $exceptionally($thenCompose($getValue_0(this$static.synchronizer, cap.owner, cap.writer), makeLambdaFunction(NetworkAccess$lambda$42$Type.prototype.apply_0, NetworkAccess$lambda$42$Type, [this$static, cap, owner])), makeLambdaFunction(NetworkAccess$lambda$43$Type.prototype.apply_0, NetworkAccess$lambda$43$Type, []));
}

function $getMetadata(this$static, base, cap, committedRoot){
  var cacheKey;
  if (base.tree.ref == null)
    return new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY));
  cacheKey = new Pair(castTo($get_6(base.tree), 58), new ByteArrayWrapper(copyOf(cap.mapKey, cap.mapKey.length)));
  if ($containsKey_4(this$static.cache_0, cacheKey))
    return new CompletableFuture_0($get_8(this$static.cache_0, cacheKey));
  return $thenCompose(castTo($orElse($map(cap.bat, makeLambdaFunction(NetworkAccess$lambda$52$Type.prototype.apply_0, NetworkAccess$lambda$52$Type, [this$static])), new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY))), 6), makeLambdaFunction(NetworkAccess$lambda$54$Type.prototype.apply_0, NetworkAccess$lambda$54$Type, [this$static, cap, base, committedRoot, cacheKey]));
}

function $lambda$23(this$static, current_1, link_1){
  return $thenCompose($withWriter(current_1, link_1.owner, link_1.writer, this$static), makeLambdaFunction(NetworkAccess$lambda$24$Type.prototype.apply_0, NetworkAccess$lambda$24$Type, [this$static, link_1]));
}

function $lambda$24(this$static, link_1, version_1){
  return $thenApply(this$static.getMetadata($get_32(version_1, link_1.writer).props, link_1), makeLambdaFunction(NetworkAccess$lambda$25$Type.prototype.apply_0, NetworkAccess$lambda$25$Type, [link_1]));
}

function $lambda$33(this$static, e_1, version_1){
  return $getFile_0(this$static, version_1, e_1.pointer, ($clinit_Optional() , $clinit_Optional() , EMPTY), e_1.ownerName);
}

function $lambda$42(this$static, cap_1, owner_2, version_2){
  return $getFile_0(this$static, version_2, cap_1, ($clinit_Optional() , $clinit_Optional() , EMPTY), owner_2);
}

function $lambda$44(this$static, cap_1, entryWriter_2, ownerName_3, v_3){
  return $thenCompose(this$static.getMetadata($get_32(v_3, cap_1.writer).props, cap_1), makeLambdaFunction(NetworkAccess$lambda$45$Type.prototype.apply_0, NetworkAccess$lambda$45$Type, [this$static, cap_1, entryWriter_2, ownerName_3, v_3]));
}

function $lambda$45(this$static, cap_1, entryWriter_2, ownerName_3, v_4, faOpt_4){
  var fa, props, rc;
  if (faOpt_4.ref == null)
    return new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY));
  fa = (checkCriticalElement(faOpt_4.ref != null) , castTo(faOpt_4.ref, 115));
  rc = new RetrievedCapability(cap_1, fa);
  props = $getParentBlock(rc.fileAccess, getParentKey(rc.fileAccess, rc.capability.rBaseKey)).properties;
  if (!props.isLink)
    return new CompletableFuture_0(($clinit_Optional() , new Optional(checkCriticalNotNull(new FileWrapper((null , EMPTY), rc, (null , EMPTY), $map(cap_1.wBaseKey, makeLambdaFunction(NetworkAccess$lambda$46$Type.prototype.apply_0, NetworkAccess$lambda$46$Type, [fa, cap_1, entryWriter_2])), ownerName_3, v_4)))));
  return $thenApply(getFileFromLink(cap_1.owner, rc, entryWriter_2, ownerName_3, this$static, v_4), makeLambdaFunction(NetworkAccess$lambda$47$Type.prototype.apply_0, NetworkAccess$lambda$47$Type, []));
}

function $lambda$52(this$static, b_0){
  return $thenApply($calculateId(b_0, this$static.hasher), makeLambdaFunction(NetworkAccess$lambda$53$Type.prototype.apply_0, NetworkAccess$lambda$53$Type, [b_0]));
}

function $lambda$54(this$static, cap_1, base_2, committedRoot_3, cacheKey_4, bat_4){
  return $thenCompose(asyncExceptionally(new NetworkAccess$lambda$55$Type(this$static, cap_1, base_2, bat_4, committedRoot_3), makeLambdaFunction(NetworkAccess$lambda$56$Type.prototype.apply_0, NetworkAccess$lambda$56$Type, [this$static, cap_1, base_2, bat_4, committedRoot_3])), makeLambdaFunction(NetworkAccess$lambda$57$Type.prototype.apply_0, NetworkAccess$lambda$57$Type, [this$static, cap_1, cacheKey_4, bat_4, base_2]));
}

function $lambda$55(this$static, cap_1, base_2, bat_3, committedRoot_4){
  return this$static.dhtClient.getChampLookup(cap_1.owner, castTo($get_6(base_2.tree), 44), copyOf(cap_1.mapKey, cap_1.mapKey.length), bat_3, committedRoot_4);
}

function $lambda$56(this$static, cap_1, base_2, bat_3, committedRoot_4){
  return this$static.dhtClient.getChampLookup_0(cap_1.owner, castTo($get_6(base_2.tree), 44), copyOf(cap_1.mapKey, cap_1.mapKey.length), bat_3, committedRoot_4, this$static.hasher);
}

function $lambda$57(this$static, cap_1, cacheKey_2, bat_3, base_4){
  return $thenCompose($thenApply($thenCompose(create_4(cap_1.owner, castTo($get_6(base_4.tree), 44), makeLambdaFunction(NetworkAccess$lambda$58$Type.prototype.apply_0, NetworkAccess$lambda$58$Type, []), this$static.dhtClient, this$static.hasher, makeLambdaFunction(NetworkAccess$lambda$59$Type.prototype.apply_0, NetworkAccess$lambda$59$Type, [])), makeLambdaFunction(NetworkAccess$lambda$60$Type.prototype.apply_0, NetworkAccess$lambda$60$Type, [cap_1])), makeLambdaFunction(NetworkAccess$lambda$61$Type.prototype.apply_0, NetworkAccess$lambda$61$Type, [])), makeLambdaFunction(NetworkAccess$lambda$63$Type.prototype.apply_0, NetworkAccess$lambda$63$Type, [this$static, cap_1, cacheKey_2, bat_3]));
}

function $lambda$63(this$static, cap_1, cacheKey_2, bat_3, btreeValue_3){
  if (btreeValue_3.ref != null) {
    return $thenApply($thenApply(this$static.dhtClient.get_1(cap_1.owner, (checkCriticalElement(btreeValue_3.ref != null) , castTo(btreeValue_3.ref, 44)), bat_3), makeLambdaFunction(NetworkAccess$lambda$64$Type.prototype.apply_0, NetworkAccess$lambda$64$Type, [cap_1, btreeValue_3])), makeLambdaFunction(NetworkAccess$lambda$66$Type.prototype.apply_0, NetworkAccess$lambda$66$Type, [this$static, cacheKey_2]));
  }
  return new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY));
}

function $lambda$66(this$static, cacheKey_1, res_1){
  $put_8(this$static.cache_0, cacheKey_1, res_1);
  return res_1;
}

function $lambda$68(this$static, f_0){
  return $sha256(this$static.hasher, f_0.data_0);
}

function $lambda$69(this$static, fragments_1, owner_2, writer_3, tid_4, progressCounter_5, hashes_5){
  return $bulkUploadFragments(this$static, fragments_1, owner_2, writer_3.publicKeyHash, castTo($collect_0($map_0(hashes_5.stream(), makeLambdaFunction(NetworkAccess$1methodref$signMessage$Type.prototype.apply_0, NetworkAccess$1methodref$signMessage$Type, [writer_3.secret])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17), tid_4, progressCounter_5);
}

function $lambda$71(this$static, owner_1, writer_2, metaBlob_3, tid_4, blobSha_4){
  return this$static.dhtClient.put_2(owner_1, writer_2.publicKeyHash, $signMessage(writer_2.secret, blobSha_4), metaBlob_3, tid_4);
}

function $lambda$72(this$static, version_1, mapKey_2, metadata_3, committer_4, owner_5, writer_6, tid_7, blobHash_7){
  return $thenCompose($put_26(this$static.tree, version_1.props, owner_5, writer_6, mapKey_2, metadata_3.lastCommittedHash, blobHash_7, tid_7), makeLambdaFunction(NetworkAccess$lambda$73$Type.prototype.apply_0, NetworkAccess$lambda$73$Type, [this$static, version_1, mapKey_2, metadata_3, blobHash_7, committer_4, owner_5, writer_6, tid_7]));
}

function $lambda$73(this$static, version_1, mapKey_2, metadata_3, blobHash_4, committer_5, owner_6, writer_7, tid_8, wd_8){
  return $thenApply(committer_5.commit_1(owner_6, writer_7, wd_8, version_1, tid_8), makeLambdaFunction(NetworkAccess$lambda$74$Type.prototype.apply_0, NetworkAccess$lambda$74$Type, [this$static, version_1, wd_8, mapKey_2, metadata_3, blobHash_4]));
}

function $lambda$74(this$static, version_1, wd_2, mapKey_3, metadata_4, blobHash_5, s_5){
  $update_1(this$static.cache_0, version_1.props.tree, new Pair(castTo($get_6(wd_2.tree), 58), new ByteArrayWrapper(mapKey_3)), ($clinit_Optional() , new Optional(checkCriticalNotNull(new CryptreeNode(($clinit_MaybeMultihash() , new MaybeMultihash(blobHash_5)), metadata_4.isDirectory_0, metadata_4.bats, metadata_4.fromBaseKey, metadata_4.childrenOrData, metadata_4.fromParentKey)))));
  return s_5;
}

function $lambda$79(this$static, committer_1, owner_2, writer_3, version_4, tid_5, current_6, mapKey_7, valueHash_7){
  return valueHash_7.hash_0?$thenCompose($remove_14(this$static.tree, version_4.props, owner_2, writer_3, mapKey_7, valueHash_7, tid_5), makeLambdaFunction(NetworkAccess$lambda$80$Type.prototype.apply_0, NetworkAccess$lambda$80$Type, [committer_1, owner_2, writer_3, version_4, tid_5])):new CompletableFuture_0(current_6);
}

function $lambda$82(this$static, version_1, owner_2, writer_3, mapKey_3){
  return $thenApply($get_29(this$static.tree, version_1.props, owner_2, writer_3.publicKeyHash, mapKey_3), makeLambdaFunction(NetworkAccess$lambda$83$Type.prototype.apply_0, NetworkAccess$lambda$83$Type, [mapKey_3]));
}

function $lambda$84(this$static, owner_1, writer_2, tid_3, wd_3, f_4){
  return $thenCompose(f_4, makeLambdaFunction(NetworkAccess$lambda$86$Type.prototype.apply_0, NetworkAccess$lambda$86$Type, [this$static, wd_3, owner_1, writer_2, tid_3]));
}

function $lambda$86(this$static, wd_1, owner_2, writer_3, tid_4, p_4){
  return castTo(p_4.right, 93).hash_0?$remove_14(this$static.tree, wd_1, owner_2, writer_3, castTo(p_4.left, 11), castTo(p_4.right, 93), tid_4):new CompletableFuture_0(wd_1);
}

function $retrieveAllMetadata(this$static, links_0, current){
  var all, identity;
  all = castTo($collect_0($map_0(links_0.stream(), makeLambdaFunction(NetworkAccess$lambda$23$Type.prototype.apply_0, NetworkAccess$lambda$23$Type, [this$static, current])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  return $thenApply((identity = new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_SET)) , castTo($reduce(all.stream(), identity, new Futures$lambda$0$Type), 6)), makeLambdaFunction(NetworkAccess$lambda$27$Type.prototype.apply_0, NetworkAccess$lambda$27$Type, []));
}

function $retrieveEntryPoint(this$static, e){
  return $exceptionally($thenCompose($getValue_0(this$static.synchronizer, e.pointer.owner, e.pointer.writer), makeLambdaFunction(NetworkAccess$lambda$33$Type.prototype.apply_0, NetworkAccess$lambda$33$Type, [this$static, e])), makeLambdaFunction(NetworkAccess$lambda$34$Type.prototype.apply_0, NetworkAccess$lambda$34$Type, []));
}

function $retrieveMetadata(this$static, cap, version){
  return $thenApply($retrieveAllMetadata(this$static, ($clinit_Collections() , new Collections$SingletonList(cap)), version), makeLambdaFunction(NetworkAccess$lambda$22$Type.prototype.apply_0, NetworkAccess$lambda$22$Type, []));
}

function $uploadChunk(this$static, current, committer, metadata, owner, mapKey, writer, tid){
  var e, metaBlob, version;
  if (!$containsKey_1(current.versions, writer.publicKeyHash))
    throw toJs(new IllegalStateException_0('Trying to commit to incorrect writer!'));
  try {
    $info(LOG, 'Uploading chunk: ' + (metadata.isDirectory_0?'dir':'file') + ' at ' + bytesToHex(mapKey) + ' with ' + castTo($collect_0($flatMap_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new AbstractMap$2($toCbor_100(metadata).values_0), 0)), makeLambdaFunction(CborObject$CborMap$lambda$9$Type.prototype.apply_0, CborObject$CborMap$lambda$9$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17).size() + ' fragments');
    metaBlob = $toByteArray_2($toCbor_100(metadata));
    version = $get_31(current, writer);
    return $thenApply($thenCompose($thenCompose($sha256(this$static.hasher, metaBlob), makeLambdaFunction(NetworkAccess$lambda$71$Type.prototype.apply_0, NetworkAccess$lambda$71$Type, [this$static, owner, writer, metaBlob, tid])), makeLambdaFunction(NetworkAccess$lambda$72$Type.prototype.apply_0, NetworkAccess$lambda$72$Type, [this$static, version, mapKey, metadata, committer, owner, writer, tid])), makeLambdaFunction(NetworkAccess$lambda$75$Type.prototype.apply_0, NetworkAccess$lambda$75$Type, [current, writer]));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 51)) {
      e = $e0;
      $severe(LOG, e.getMessage());
      throw toJs(new RuntimeException_2(e));
    }
     else 
      throw toJs($e0);
  }
}

function $uploadFragments(this$static, fragments, owner, writer, progressCounter, tid){
  if (fragments.isEmpty())
    return new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_LIST));
  return $thenCompose(combineAllInOrder(castTo($collect_0($map_0(fragments.stream(), makeLambdaFunction(NetworkAccess$lambda$68$Type.prototype.apply_0, NetworkAccess$lambda$68$Type, [this$static])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 54)), makeLambdaFunction(NetworkAccess$lambda$69$Type.prototype.apply_0, NetworkAccess$lambda$69$Type, [this$static, fragments, owner, writer, tid, progressCounter]));
}

function NetworkAccess(coreNode, account, social, dhtClient, batCave, batCache, mutable, tree, synchronizer, instanceAdmin, spaceUsage, serverMessager, hasher, usernames, cache, isJavascript){
  this.coreNode = coreNode;
  this.account = account;
  this.social = social;
  this.dhtClient = dhtClient;
  this.batCave = batCave;
  this.batCache_0 = batCache;
  this.mutable = mutable;
  this.tree = tree;
  this.synchronizer = synchronizer;
  this.instanceAdmin = instanceAdmin;
  this.spaceUsage = spaceUsage;
  this.serverMessager = serverMessager;
  this.hasher = hasher;
  this.usernames = usernames;
  this.cache_0 = cache;
  $clinit_LocalDateTime();
  now_4();
  this.isJavascript = isJavascript;
}

function NetworkAccess_0(coreNode, account, social, dhtClient, batCave, batCache, mutable, tree, synchronizer, instanceAdmin, spaceUsage, serverMessager, hasher, usernames, isJavascript){
  NetworkAccess.call(this, coreNode, account, social, dhtClient, batCave, batCache, mutable, tree, synchronizer, instanceAdmin, spaceUsage, serverMessager, hasher, usernames, new CryptreeCache, isJavascript);
}

function build(dht, batCave, coreNode, account, mutable, mutableCacheTime, social, instanceAdmin, usage, serverMessager, hasher, usernames, isJavascript){
  var blockBuffer, mutableBuffer, synchronizer, tree, unbufferedMutable;
  blockBuffer = new BufferedStorage(dht, hasher);
  unbufferedMutable = mutableCacheTime > 0?new CachingPointers(mutable, mutableCacheTime):mutable;
  mutableBuffer = new BufferedPointers(unbufferedMutable);
  synchronizer = new WriteSynchronizer(mutableBuffer, blockBuffer, hasher);
  tree = new MutableTreeImpl(blockBuffer, hasher);
  return new BufferedNetworkAccess(blockBuffer, mutableBuffer, 20971520, coreNode, account, social, dht, unbufferedMutable, batCave, ($clinit_Optional() , $clinit_Optional() , EMPTY), tree, synchronizer, instanceAdmin, usage, serverMessager, hasher, usernames, isJavascript);
}

function buildDirectS3Blockstore(localDht, core, direct, isPeergosServer, hasher){
  if (!isPeergosServer)
    return new CompletableFuture_0(localDht);
  return $thenCompose($exceptionally($blockStoreProperties(localDht), makeLambdaFunction(NetworkAccess$lambda$2$Type.prototype.apply_0, NetworkAccess$lambda$2$Type, [])), makeLambdaFunction(NetworkAccess$lambda$3$Type.prototype.apply_0, NetworkAccess$lambda$3$Type, [direct, localDht, core, hasher]));
}

function buildJS(isPublic, cacheSizeKiB, allowOfflineLogin){
  $clinit_NetworkAccess();
  var direct, hasher, localDht, onlineState, relative;
  relative = new JavaScriptPoster(isPublic);
  hasher = new ScryptJS;
  localDht = new ContentAddressedStorage$HTTP(relative, hasher);
  onlineState = new OnlineState(new NetworkAccess$lambda$5$Type(localDht));
  return $thenApply($thenApply((direct = new HTTPCoreNode(relative) , $thenCompose($exceptionally($thenApply($postUnzip(direct.poster, direct.urlPrefix + 'peergos/v0/core/' + 'getUsernamesGzip/' + '', initUnidimensionalArray(B_classLit, $intern_28, 8, 0, 15, 1)), makeLambdaFunction(HTTPCoreNode$lambda$8$Type.prototype.apply_0, HTTPCoreNode$lambda$8$Type, [])), makeLambdaFunction(NetworkAccess$lambda$16$Type.prototype.apply_0, NetworkAccess$lambda$16$Type, [])), makeLambdaFunction(NetworkAccess$lambda$17$Type.prototype.apply_0, NetworkAccess$lambda$17$Type, [direct, relative, relative, localDht, hasher]))), makeLambdaFunction(NetworkAccess$lambda$8$Type.prototype.apply_0, NetworkAccess$lambda$8$Type, [cacheSizeKiB, hasher, onlineState])), makeLambdaFunction(NetworkAccess$lambda$11$Type.prototype.apply_0, NetworkAccess$lambda$11$Type, [allowOfflineLogin, onlineState]));
}

function downloadFragments(owner, hashes, bats, dhtClient, monitor, spaceIncreaseFactor){
  $clinit_NetworkAccess();
  var futures, identity;
  futures = castTo(castTo(range_0(0, hashes.size()).mapToObj(new NetworkAccess$lambda$90$Type).parallel(), 147).map_1(makeLambdaFunction(NetworkAccess$lambda$91$Type.prototype.apply_0, NetworkAccess$lambda$91$Type, [monitor, spaceIncreaseFactor, hashes, dhtClient, owner, bats])).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  return $thenApply((identity = new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_LIST)) , castTo($reduce(futures.stream(), identity, new Futures$lambda$6$Type), 6)), makeLambdaFunction(NetworkAccess$lambda$97$Type.prototype.apply_0, NetworkAccess$lambda$97$Type, []));
}

function getFileFromLink(owner, link_0, entryWriter, ownername, network, version){
  $clinit_NetworkAccess();
  return $thenCompose($getDirectChildrenCapabilities(link_0.fileAccess, link_0.capability, version, network), makeLambdaFunction(NetworkAccess$lambda$48$Type.prototype.apply_0, NetworkAccess$lambda$48$Type, [link_0, entryWriter, ownername, owner, network, version]));
}

function getLatestEntryPoint(e, network){
  $clinit_NetworkAccess();
  return asyncExceptionally(new NetworkAccess$lambda$37$Type(e, network), makeLambdaFunction(NetworkAccess$lambda$38$Type.prototype.apply_0, NetworkAccess$lambda$38$Type, [network, e]));
}

function lambda$10(net_0, onlineState_1, m_2){
  $clinit_NetworkAccess();
  return new OfflinePointerCache(m_2, new JSPointerCache(net_0.dhtClient), onlineState_1);
}

function lambda$11(allowOfflineLogin_0, onlineState_1, net_2){
  $clinit_NetworkAccess();
  return allowOfflineLogin_0?net_2.withBatOfflineCache(($clinit_Optional() , new Optional(checkCriticalNotNull(new JSBatCache)))).withAccountCache(makeLambdaFunction(NetworkAccess$lambda$12$Type.prototype.apply_0, NetworkAccess$lambda$12$Type, [net_2, onlineState_1])).withCorenode(new OfflineCorenode(net_2.coreNode, new JSPkiCache, onlineState_1)):net_2;
}

function lambda$12(net_0, onlineState_1){
  $clinit_NetworkAccess();
  return new OfflineAccountStore(net_0.account, new JSAccountCache, onlineState_1);
}

function lambda$15(core_0, apiPoster_1, p2pPoster_2, mutableCacheTime_3, hasher_4, usernames_5, isJavascript_6, dht_7){
  $clinit_NetworkAccess();
  return $thenApply($exceptionally(dht_7.id_1(), makeLambdaFunction(NetworkAccess$lambda$19$Type.prototype.apply_0, NetworkAccess$lambda$19$Type, [])), makeLambdaFunction(NetworkAccess$lambda$20$Type.prototype.apply_0, NetworkAccess$lambda$20$Type, [core_0, dht_7, apiPoster_1, p2pPoster_2, mutableCacheTime_3, hasher_4, usernames_5, isJavascript_6]));
}

function lambda$17(direct_0, apiPoster_1, p2pPoster_2, localDht_3, mutableCacheTime_4, hasher_5, isJavascript_6, usernames_7){
  $clinit_NetworkAccess();
  return $thenCompose(buildDirectS3Blockstore(localDht_3, direct_0, apiPoster_1, true, hasher_5), makeLambdaFunction(NetworkAccess$lambda$15$Type.prototype.apply_0, NetworkAccess$lambda$15$Type, [direct_0, apiPoster_1, p2pPoster_2, mutableCacheTime_4, hasher_5, usernames_7, isJavascript_6]));
}

function lambda$20(isPeergosServer_0, core_1, localDht_2, apiPoster_3, p2pPoster_4, mutableCacheTime_5, hasher_6, usernames_7, isJavascript_8, nodeId_9){
  var p2pDht_0, httpMutable_0, account_0, httpSocial_0, httpUsage_0, serverMessager_0, batCave_0, retryMutable_0;
  $clinit_NetworkAccess();
  var account, batCave, httpMutable, httpSocial, httpUsage, p2pDht, p2pMutable, p2pSocial, p2pUsage, proxingDht, retryMutable, serverMessager, storage;
  if (isPeergosServer_0)
    return p2pDht_0 = new CachingVerifyingStorage(new RetryStorage(localDht_2), nodeId_9, hasher_6) , httpMutable_0 = new HttpMutablePointers(apiPoster_3, p2pPoster_4) , account_0 = new HttpAccount(apiPoster_3) , httpSocial_0 = new HttpSocialNetwork(apiPoster_3, p2pPoster_4) , httpUsage_0 = new HttpSpaceUsage(apiPoster_3, p2pPoster_4) , serverMessager_0 = new ServerMessager$HTTP(apiPoster_3) , batCave_0 = new HttpBatCave(apiPoster_3) , retryMutable_0 = new RetryMutablePointers(httpMutable_0) , build(p2pDht_0, batCave_0, core_1, account_0, retryMutable_0, mutableCacheTime_5, httpSocial_0, new HttpInstanceAdmin(apiPoster_3), httpUsage_0, serverMessager_0, hasher_6, usernames_7, isJavascript_8);
  proxingDht = new ContentAddressedStorageProxy$HTTP(p2pPoster_4);
  storage = new ContentAddressedStorage$Proxying(localDht_2, proxingDht, core_1);
  p2pDht = new CachingVerifyingStorage(new RetryStorage(storage), nodeId_9, hasher_6);
  httpMutable = new HttpMutablePointers(apiPoster_3, p2pPoster_4);
  account = new HttpAccount(apiPoster_3);
  p2pMutable = new ProxyingMutablePointers(nodeId_9, core_1, httpMutable, httpMutable);
  httpSocial = new HttpSocialNetwork(apiPoster_3, p2pPoster_4);
  p2pSocial = new ProxyingSocialNetwork(core_1, httpSocial, httpSocial);
  httpUsage = new HttpSpaceUsage(apiPoster_3, p2pPoster_4);
  p2pUsage = new ProxyingSpaceUsage(core_1, httpUsage, httpUsage);
  serverMessager = new ServerMessager$HTTP(apiPoster_3);
  batCave = new HttpBatCave(apiPoster_3);
  retryMutable = new RetryMutablePointers(p2pMutable);
  return build(p2pDht, batCave, core_1, account, retryMutable, mutableCacheTime_5, p2pSocial, new HttpInstanceAdmin(apiPoster_3), p2pUsage, serverMessager, hasher_6, usernames_7, isJavascript_8);
}

function lambda$25(link_0, copt_1){
  $clinit_NetworkAccess();
  return $map(copt_1, makeLambdaFunction(NetworkAccess$lambda$26$Type.prototype.apply_0, NetworkAccess$lambda$26$Type, [link_0]));
}

function lambda$3(direct_0, localDht_1, core_2, hasher_3, bp_4){
  $clinit_NetworkAccess();
  return bp_4.directWrites || bp_4.publicReads?$thenApply($thenApply($get_28(localDht_1.poster, 'api/v0/id', ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)), makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$0$Type.prototype.apply_0, ContentAddressedStorage$HTTP$lambda$0$Type, [])), makeLambdaFunction(NetworkAccess$lambda$4$Type.prototype.apply_0, NetworkAccess$lambda$4$Type, [bp_4, direct_0, localDht_1, core_2, hasher_3])):new CompletableFuture_0(localDht_1);
}

function lambda$35(e_0, network_1, fileOpt_2){
  $clinit_NetworkAccess();
  if (fileOpt_2.ref == null)
    throw toJs(new IllegalStateException_0("Couldn't retrieve entry point"));
  return $thenApply($getPath((checkCriticalElement(fileOpt_2.ref != null) , castTo(fileOpt_2.ref, 19)), network_1), makeLambdaFunction(NetworkAccess$lambda$36$Type.prototype.apply_0, NetworkAccess$lambda$36$Type, [e_0, fileOpt_2]));
}

function lambda$36(e_0, fileOpt_1, path_2){
  $clinit_NetworkAccess();
  return new RetrievedEntryPoint(e_0, path_2, (checkCriticalElement(fileOpt_1.ref != null) , castTo(fileOpt_1.ref, 19)));
}

function lambda$37(e_0, network_1){
  $clinit_NetworkAccess();
  return $thenCompose($exceptionally($thenCompose($getValue_0(network_1.synchronizer, e_0.pointer.owner, e_0.pointer.writer), makeLambdaFunction(NetworkAccess$lambda$33$Type.prototype.apply_0, NetworkAccess$lambda$33$Type, [network_1, e_0])), makeLambdaFunction(NetworkAccess$lambda$34$Type.prototype.apply_0, NetworkAccess$lambda$34$Type, [])), makeLambdaFunction(NetworkAccess$lambda$35$Type.prototype.apply_0, NetworkAccess$lambda$35$Type, [e_0, network_1]));
}

function lambda$38(network_0, e_1){
  $clinit_NetworkAccess();
  return $thenCompose($thenApply($thenCompose(network_0.coreNode.updateUser(e_1.ownerName), makeLambdaFunction(NetworkAccess$lambda$40$Type.prototype.apply_0, NetworkAccess$lambda$40$Type, [network_0, e_1])), makeLambdaFunction(NetworkAccess$lambda$41$Type.prototype.apply_0, NetworkAccess$lambda$41$Type, [e_1])), makeLambdaFunction(NetworkAccess$lambda$39$Type.prototype.apply_0, NetworkAccess$lambda$39$Type, [network_0]));
}

function lambda$39(network_0, updated_1){
  $clinit_NetworkAccess();
  return $thenCompose($exceptionally($thenCompose($getValue_0(network_0.synchronizer, updated_1.pointer.owner, updated_1.pointer.writer), makeLambdaFunction(NetworkAccess$lambda$33$Type.prototype.apply_0, NetworkAccess$lambda$33$Type, [network_0, updated_1])), makeLambdaFunction(NetworkAccess$lambda$34$Type.prototype.apply_0, NetworkAccess$lambda$34$Type, [])), makeLambdaFunction(NetworkAccess$lambda$35$Type.prototype.apply_0, NetworkAccess$lambda$35$Type, [updated_1, network_0]));
}

function lambda$4_0(bp_0, direct_1, localDht_2, core_3, hasher_4, id_5){
  $clinit_NetworkAccess();
  return new DirectS3BlockStore(bp_0, direct_1, localDht_2, id_5, core_3, hasher_4);
}

function lambda$40(network_0, e_1){
  $clinit_NetworkAccess();
  return network_0.coreNode.getPublicKeyHash(e_1.ownerName);
}

function lambda$41(e_0, currentIdOpt_1){
  $clinit_NetworkAccess();
  if (currentIdOpt_1.ref == null || $equals_13((checkCriticalElement(currentIdOpt_1.ref != null) , castTo(currentIdOpt_1.ref, 55)), e_0.pointer.owner))
    throw toJs(new IllegalStateException_0("Couldn't retrieve entry point for user " + e_0.ownerName));
  return new EntryPoint(e_0.pointer.withOwner_0((checkCriticalElement(currentIdOpt_1.ref != null) , castTo(currentIdOpt_1.ref, 55))), e_0.ownerName);
}

function lambda$46_0(fa_0, cap_1, entryWriter_2, wBase_3){
  $clinit_NetworkAccess();
  return $getSigner(fa_0, cap_1.rBaseKey, wBase_3, entryWriter_2);
}

function lambda$48(link_0, entryWriter_1, ownername_2, owner_3, network_4, version_5, children_6){
  $clinit_NetworkAccess();
  var cap, childWriters;
  if (children_6.size() != 1)
    throw toJs(new IllegalStateException_0('Link cryptree nodes must have exactly one child link!'));
  cap = castTo($get_6($findFirst(children_6.stream())), 151).cap;
  childWriters = singleton(cap.writer);
  return $thenCompose(reduceAll(childWriters, version_5, new Snapshot$lambda$1$Type(owner_3, network_4), new Snapshot$lambda$2$Type), makeLambdaFunction(NetworkAccess$lambda$49$Type.prototype.apply_0, NetworkAccess$lambda$49$Type, [link_0, entryWriter_1, ownername_2, owner_3, network_4, cap]));
}

function lambda$49(link_0, entryWriter_1, ownername_2, owner_3, network_4, cap_5, fullVersion_6){
  $clinit_NetworkAccess();
  return $thenCompose($retrieveAllMetadata(network_4, ($clinit_Collections() , new Collections$SingletonList(cap_5)), fullVersion_6), makeLambdaFunction(NetworkAccess$lambda$50$Type.prototype.apply_0, NetworkAccess$lambda$50$Type, [link_0, entryWriter_1, ownername_2, fullVersion_6, owner_3, network_4]));
}

function lambda$50(link_0, entryWriter_1, ownername_2, fullVersion_3, owner_4, network_5, rcs_6){
  $clinit_NetworkAccess();
  var props, rc;
  rc = castTo(rcs_6.getAtIndex(0), 83);
  props = $getParentBlock(rc.fileAccess, getParentKey(rc.fileAccess, rc.capability.rBaseKey)).properties;
  if (!props.isLink)
    return new CompletableFuture_0(new FileWrapper_0(rc, ($clinit_Optional() , new Optional(checkCriticalNotNull(link_0))), entryWriter_1, ownername_2, fullVersion_3));
  return $thenApply($thenCompose($getDirectChildrenCapabilities(rc.fileAccess, rc.capability, fullVersion_3, network_5), makeLambdaFunction(NetworkAccess$lambda$48$Type.prototype.apply_0, NetworkAccess$lambda$48$Type, [rc, entryWriter_1, ownername_2, owner_4, network_5, fullVersion_3])), makeLambdaFunction(NetworkAccess$lambda$51$Type.prototype.apply_0, NetworkAccess$lambda$51$Type, [link_0, entryWriter_1, ownername_2, fullVersion_3]));
}

function lambda$51(link_0, entryWriter_1, ownername_2, fullVersion_3, f_4){
  $clinit_NetworkAccess();
  return new FileWrapper_0(f_4.pointer, ($clinit_Optional() , new Optional(checkCriticalNotNull(link_0))), entryWriter_1, ownername_2, fullVersion_3);
}

function lambda$53(b_0, id_1){
  $clinit_NetworkAccess();
  return $clinit_Optional() , new Optional(checkCriticalNotNull(new BatWithId(b_0, id_1.id_0)));
}

function lambda$60(cap_0, tree_1){
  $clinit_NetworkAccess();
  return $get_16(tree_1, copyOf(cap_0.mapKey, cap_0.mapKey.length));
}

function lambda$64(cap_0, btreeValue_1, value_2){
  $clinit_NetworkAccess();
  return $map(value_2, makeLambdaFunction(NetworkAccess$lambda$65$Type.prototype.apply_0, NetworkAccess$lambda$65$Type, [cap_0, btreeValue_1]));
}

function lambda$65(cap_0, btreeValue_1, cbor_2){
  $clinit_NetworkAccess();
  return fromCbor_106(cbor_2, cap_0.rBaseKey, (checkCriticalElement(btreeValue_1.ref != null) , castTo(btreeValue_1.ref, 58)));
}

function lambda$75(current_0, writer_1, committed_2){
  $clinit_NetworkAccess();
  return $withVersion(current_0, writer_1.publicKeyHash, $get_31(committed_2, writer_1));
}

function lambda$77(committer_0, owner_1, writer_2, version_3, tid_4, wd_5){
  $clinit_NetworkAccess();
  return committer_0.commit_1(owner_1, writer_2, wd_5, version_3, tid_4);
}

function lambda$78(current_0, writer_1, committed_2){
  $clinit_NetworkAccess();
  return $withVersion(current_0, writer_1.publicKeyHash, $get_31(committed_2, writer_1));
}

function lambda$8(cacheSizeKiB_0, hasher_1, onlineState_2, net_3){
  $clinit_NetworkAccess();
  return net_3.withStorage(makeLambdaFunction(NetworkAccess$lambda$9$Type.prototype.apply_0, NetworkAccess$lambda$9$Type, [cacheSizeKiB_0, hasher_1])).withMutablePointerOfflineCache(makeLambdaFunction(NetworkAccess$lambda$10$Type.prototype.apply_0, NetworkAccess$lambda$10$Type, [net_3, onlineState_2]));
}

function lambda$80(committer_0, owner_1, writer_2, version_3, tid_4, wd_5){
  $clinit_NetworkAccess();
  return committer_0.commit_1(owner_1, writer_2, wd_5, version_3, tid_4);
}

function lambda$81(current_0, writer_1, committed_2){
  $clinit_NetworkAccess();
  return $withVersion(current_0, writer_1.publicKeyHash, $get_31(committed_2, writer_1));
}

function lambda$87(committer_0, owner_1, writer_2, version_3, tid_4, wd_5){
  $clinit_NetworkAccess();
  return committer_0.commit_1(owner_1, writer_2, wd_5, version_3, tid_4);
}

function lambda$88(current_0, writer_1, committed_2){
  $clinit_NetworkAccess();
  return $withVersion(current_0, writer_1.publicKeyHash, $get_31(committed_2, writer_1));
}

function lambda$9_0(cacheSizeKiB_0, hasher_1, s_2){
  $clinit_NetworkAccess();
  return new UnauthedCachingStorage(s_2, new JSBlockCache(cacheSizeKiB_0 / $intern_65 | 0), hasher_1);
}

function lambda$91(monitor_0, spaceIncreaseFactor_1, hashes_3, dhtClient_4, owner_5, bats_6, i_6){
  $clinit_NetworkAccess();
  var h;
  h = castTo(hashes_3.getAtIndex(i_6.value_0), 44);
  return $thenApply(h.type == ($clinit_Multihash$Type() , id_3)?new CompletableFuture_0(($clinit_Optional() , new Optional(checkCriticalNotNull(copyOfRange(h.hash_0, 0, h.hash_0.length))))):h.codec == ($clinit_Cid$Codec() , Raw)?dhtClient_4.getRaw(owner_5, h, i_6.value_0 < bats_6.size()?($clinit_Optional() , new Optional(checkCriticalNotNull(castTo(bats_6.getAtIndex(i_6.value_0), 112)))):($clinit_Optional() , $clinit_Optional() , EMPTY)):$thenApply(dhtClient_4.get_1(owner_5, h, i_6.value_0 < bats_6.size()?($clinit_Optional() , new Optional(checkCriticalNotNull(castTo(bats_6.getAtIndex(i_6.value_0), 112)))):($clinit_Optional() , $clinit_Optional() , EMPTY)), makeLambdaFunction(NetworkAccess$lambda$92$Type.prototype.apply_0, NetworkAccess$lambda$92$Type, [])), makeLambdaFunction(NetworkAccess$lambda$94$Type.prototype.apply_0, NetworkAccess$lambda$94$Type, [h, monitor_0, spaceIncreaseFactor_1]));
}

function lambda$94(h_0, monitor_1, spaceIncreaseFactor_2, dataOpt_3){
  $clinit_NetworkAccess();
  var bytes;
  bytes = dataOpt_3;
  $ifPresent(bytes, new NetworkAccess$lambda$95$Type(monitor_1, spaceIncreaseFactor_2));
  return $map(bytes, makeLambdaFunction(NetworkAccess$lambda$96$Type.prototype.apply_0, NetworkAccess$lambda$96$Type, [h_0]));
}

function lambda$95(monitor_0, spaceIncreaseFactor_1, arr_2){
  $clinit_NetworkAccess();
  monitor_0(valueOf_2(fromDouble_0(arr_2.length / spaceIncreaseFactor_1)));
}

function lambda$96(h_0, data_1){
  $clinit_NetworkAccess();
  return new FragmentWithHash(new Fragment(data_1), h_0.type == ($clinit_Multihash$Type() , id_3)?($clinit_Optional() , $clinit_Optional() , EMPTY):($clinit_Optional() , new Optional(checkCriticalNotNull(h_0))));
}

function nonCommittingForSignup(account, dht, mutable, bats, hasher){
  $clinit_NetworkAccess();
  var blockBuffer, mutableBuffer, synchronizer, tree, unbufferedMutable;
  blockBuffer = new BufferedStorage(dht, hasher);
  unbufferedMutable = mutable;
  mutableBuffer = new BufferedPointers(unbufferedMutable);
  synchronizer = new WriteSynchronizer(mutableBuffer, blockBuffer, hasher);
  tree = new MutableTreeImpl(blockBuffer, hasher);
  return new BufferedNetworkAccess(blockBuffer, mutableBuffer, $intern_11, null, account, null, dht, unbufferedMutable, bats, ($clinit_Optional() , $clinit_Optional() , EMPTY), tree, synchronizer, null, null, null, hasher, ($clinit_Collections() , $clinit_Collections() , EMPTY_LIST), false);
}

function retrieveEntryPoint(e, network){
  $clinit_NetworkAccess();
  return $thenCompose($exceptionally($thenCompose($getValue_0(network.synchronizer, e.pointer.owner, e.pointer.writer), makeLambdaFunction(NetworkAccess$lambda$33$Type.prototype.apply_0, NetworkAccess$lambda$33$Type, [network, e])), makeLambdaFunction(NetworkAccess$lambda$34$Type.prototype.apply_0, NetworkAccess$lambda$34$Type, [])), makeLambdaFunction(NetworkAccess$lambda$35$Type.prototype.apply_0, NetworkAccess$lambda$35$Type, [e, network]));
}

defineClass(216, 1, {}, NetworkAccess, NetworkAccess_0);
_.clear_0 = function clear_20(){
  return $clear_4(this);
}
;
_.commit = function commit(owner, commitWatcher){
  return new CompletableFuture_0(($clinit_Boolean() , true));
}
;
_.disableCommits = function disableCommits(){
  return this;
}
;
_.enableCommits = function enableCommits(){
  return this;
}
;
_.getFile = function getFile(cap, owner){
  return $getFile_1(this, cap, owner);
}
;
_.getMetadata = function getMetadata(base, cap){
  return $getMetadata(this, base, cap, ($clinit_Optional() , $clinit_Optional() , EMPTY));
}
;
_.isFull = function isFull(){
  return false;
}
;
_.isUsernameRegistered = function isUsernameRegistered(username){
  if (this.usernames.contains(username))
    return new CompletableFuture_0(($clinit_Boolean() , true));
  return $thenApply(this.coreNode.getChain_0(username), makeLambdaFunction(NetworkAccess$lambda$1$Type.prototype.apply_0, NetworkAccess$lambda$1$Type, []));
}
;
_.otherDomain = function otherDomain(){
  return $thenApply(this.dhtClient.blockStoreProperties(), makeLambdaFunction(NetworkAccess$lambda$0$Type.prototype.apply_0, NetworkAccess$lambda$0$Type, []));
}
;
_.withAccountCache = function withAccountCache(wrapper){
  return new NetworkAccess(this.coreNode, $apply_1(wrapper), this.social, this.dhtClient, this.batCave, this.batCache_0, this.mutable, this.tree, this.synchronizer, this.instanceAdmin, this.spaceUsage, this.serverMessager, this.hasher, this.usernames, this.cache_0, this.isJavascript);
}
;
_.withBatOfflineCache = function withBatOfflineCache(batCache){
  return new NetworkAccess(this.coreNode, this.account, this.social, this.dhtClient, this.batCave, batCache, this.mutable, this.tree, this.synchronizer, this.instanceAdmin, this.spaceUsage, this.serverMessager, this.hasher, this.usernames, this.cache_0, this.isJavascript);
}
;
_.withCorenode = function withCorenode(newCore){
  return new NetworkAccess(newCore, this.account, this.social, this.dhtClient, this.batCave, this.batCache_0, this.mutable, this.tree, this.synchronizer, this.instanceAdmin, this.spaceUsage, this.serverMessager, this.hasher, this.usernames, this.cache_0, this.isJavascript);
}
;
_.withMutablePointerOfflineCache = function withMutablePointerOfflineCache(modifiedPointers){
  return new NetworkAccess(this.coreNode, this.account, this.social, this.dhtClient, this.batCave, this.batCache_0, $apply_0(modifiedPointers, this.mutable), this.tree, this.synchronizer, this.instanceAdmin, this.spaceUsage, this.serverMessager, this.hasher, this.usernames, this.cache_0, this.isJavascript);
}
;
_.withStorage = function withStorage(modifiedStorage){
  return new NetworkAccess(this.coreNode, this.account, this.social, $apply_2(modifiedStorage, this.dhtClient), this.batCave, this.batCache_0, this.mutable, this.tree, this.synchronizer, this.instanceAdmin, this.spaceUsage, this.serverMessager, this.hasher, this.usernames, this.cache_0, this.isJavascript);
}
;
_.isJavascript = false;
var LOG;
var Lpeergos_shared_NetworkAccess_2_classLit = createForClass('peergos.shared', 'NetworkAccess', 216);
function $commit(this$static, owner, commitWatcher){
  var roots, writerUpdates, writers, writes;
  writerUpdates = this$static.pointerBuffer.writerUpdates;
  if ($size(this$static.blockBuffer.storage.map_0) == 0 && writerUpdates.array.length == 0)
    return new CompletableFuture_0(($clinit_Boolean() , true));
  roots = castTo($collect_0($map_0($flatMap_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(this$static.pointerBuffer.writerUpdates, 16)), makeLambdaFunction(BufferedPointers$lambda$4$Type.prototype.apply_0, BufferedPointers$lambda$4$Type, [])), makeLambdaFunction(BufferedPointers$lambda$5$Type.prototype.apply_0, BufferedPointers$lambda$5$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  if (roots.isEmpty())
    throw toJs(new IllegalStateException_0('Where are the pointers?'));
  $gc(this$static.blockBuffer, roots);
  writers = this$static.pointerBuffer.writers;
  writes = $getAllWriterData(this$static.blockBuffer, writerUpdates);
  return $thenCompose($thenCompose($signBlocks(this$static.blockBuffer, writers), makeLambdaFunction(BufferedNetworkAccess$lambda$8$Type.prototype.apply_0, BufferedNetworkAccess$lambda$8$Type, [this$static, owner])), makeLambdaFunction(BufferedNetworkAccess$lambda$9$Type.prototype.apply_0, BufferedNetworkAccess$lambda$9$Type, [this$static, owner, writers, commitWatcher, writes]));
}

function $lambda$1(this$static, o_0, v_1, w_2){
  return $thenApply($commit(this$static, o_0, w_2), makeLambdaFunction(BufferedNetworkAccess$lambda$2$Type.prototype.apply_0, BufferedNetworkAccess$lambda$2$Type, [v_1]));
}

function $lambda$10(this$static, owner_1, writers_2, tid_3, u_4){
  return $thenCompose($commit_2(this$static.blockBuffer, owner_1, castTo(u_4.left, 132).writer, tid_3), makeLambdaFunction(BufferedNetworkAccess$lambda$12$Type.prototype.apply_0, BufferedNetworkAccess$lambda$12$Type, [this$static, owner_1, u_4, writers_2]));
}

function $lambda$12(this$static, owner_1, u_2, writers_3){
  return $thenCompose($commit_1(this$static.pointerBuffer, owner_1, castTo($get(writers_3, castTo(u_2.left, 132).writer), 105), new PointerUpdate(castTo(u_2.left, 132).prevHash, castTo(u_2.left, 132).currentHash, castTo(u_2.left, 132).currentSequence)), makeLambdaFunction(BufferedNetworkAccess$lambda$13$Type.prototype.apply_0, BufferedNetworkAccess$lambda$13$Type, [this$static, owner_1, u_2]));
}

function $lambda$13(this$static, owner_1, u_2){
  return castTo($orElse($map(castTo(u_2.right, 12), makeLambdaFunction(BufferedNetworkAccess$lambda$14$Type.prototype.apply_0, BufferedNetworkAccess$lambda$14$Type, [this$static, owner_1, u_2])), new CompletableFuture_0(($clinit_Boolean() , true))), 87);
}

function $lambda$14(this$static, owner_1, u_2, cwd_2){
  return $updateWriterState(this$static.synchronizer, owner_1, castTo(u_2.left, 132).writer, new Snapshot_0(castTo(u_2.left, 132).writer, cwd_2));
}

function $lambda$15(this$static, owner_1, tid_2){
  return this$static.blocks.closeTransaction(owner_1, tid_2);
}

function $lambda$16(this$static, commitWatcher_1){
  $clear_5(this$static.pointerBuffer);
  return castToBoolean(commitWatcher_1.get_0());
}

function $lambda$3(this$static, commitWatcher_1, o_1, w_2, wd_3, e_4, tid_5){
  return $thenCompose($put_14(this$static.blockBuffer, o_1, w_2.publicKeyHash, initUnidimensionalArray(B_classLit, $intern_28, 8, 0, 15, 1), $toByteArray_2($toCbor_90(wd_3)), tid_5), makeLambdaFunction(BufferedNetworkAccess$lambda$4$Type.prototype.apply_0, BufferedNetworkAccess$lambda$4$Type, [this$static, w_2, wd_3, e_4, o_1, commitWatcher_1]));
}

function $lambda$4_0(this$static, w_1, wd_2, e_3, o_4, commitWatcher_5, newHash_5){
  var update;
  update = $addWrite(this$static.pointerBuffer, w_1, ($clinit_MaybeMultihash() , new MaybeMultihash(newHash_5)), e_3.hash_0, e_3.sequence);
  return $thenApply($maybeCommit(this$static, o_4, commitWatcher_5), makeLambdaFunction(BufferedNetworkAccess$lambda$5$Type.prototype.apply_0, BufferedNetworkAccess$lambda$5$Type, [w_1, newHash_5, wd_2, update]));
}

function $lambda$8(this$static, owner_1){
  return this$static.blocks.startTransaction(owner_1);
}

function $lambda$9(this$static, owner_1, writers_2, commitWatcher_3, writes_4, tid_4){
  return $thenApply($thenCompose(reduceAll_0(writes_4.stream(), ($clinit_Boolean() , true), new BufferedNetworkAccess$lambda$10$Type(this$static, owner_1, writers_2, tid_4), new BufferedNetworkAccess$lambda$11$Type), makeLambdaFunction(BufferedNetworkAccess$lambda$15$Type.prototype.apply_0, BufferedNetworkAccess$lambda$15$Type, [this$static, owner_1, tid_4])), makeLambdaFunction(BufferedNetworkAccess$lambda$16$Type.prototype.apply_0, BufferedNetworkAccess$lambda$16$Type, [this$static, commitWatcher_3]));
}

function $maybeCommit(this$static, owner, commitWatcher){
  if (this$static.safeToCommit && toInt_0($collect($mapToInt(new StreamImpl(null, new Spliterators$IteratorSpliterator(new AbstractMap$2(this$static.blockBuffer.storage), 0)), new BufferedStorage$lambda$40$Type)).sum) >= this$static.bufferSize)
    return $commit(this$static, owner, commitWatcher);
  return new CompletableFuture_0(($clinit_Boolean() , true));
}

function BufferedNetworkAccess(blockBuffer, mutableBuffer, bufferSize, coreNode, account, social, dhtClient, unbufferedMutable, batCave, batCache, tree, synchronizer, instanceAdmin, spaceUsage, serverMessager, hasher, usernames, isJavascript){
  NetworkAccess_0.call(this, coreNode, account, social, blockBuffer, batCave, batCache, unbufferedMutable, tree, synchronizer, instanceAdmin, spaceUsage, serverMessager, hasher, usernames, isJavascript);
  this.blockBuffer = blockBuffer;
  this.pointerBuffer = mutableBuffer;
  this.bufferSize = bufferSize;
  this.blocks = dhtClient;
  $setCommitterBuilder(synchronizer, new BufferedNetworkAccess$0methodref$buildCommitter$Type(this));
  $setFlusher(synchronizer, new BufferedNetworkAccess$lambda$1$Type(this));
}

function lambda$5_0(w_0, newHash_1, wd_2, update_3){
  $clinit_NetworkAccess();
  return new Snapshot_0(w_0.publicKeyHash, new CommittedWriterData(($clinit_MaybeMultihash() , new MaybeMultihash(newHash_1)), wd_2, update_3.sequence));
}

defineClass(217, 216, {}, BufferedNetworkAccess);
_.clear_0 = function clear_21(){
  var base, blockBuffer, synchronizer, tree;
  if ($size(this.blockBuffer.storage.map_0) != 0)
    throw toJs(new IllegalStateException_0('Unwritten blocks!'));
  base = $clear_4(this);
  blockBuffer = $clone(this.blockBuffer);
  synchronizer = new WriteSynchronizer(base.mutable, blockBuffer, this.hasher);
  tree = new MutableTreeImpl(blockBuffer, this.hasher);
  return new BufferedNetworkAccess(blockBuffer, this.pointerBuffer, this.bufferSize, base.coreNode, base.account, base.social, base.dhtClient, base.mutable, base.batCave, base.batCache_0, tree, synchronizer, base.instanceAdmin, base.spaceUsage, base.serverMessager, this.hasher, this.usernames, this.isJavascript);
}
;
_.commit = function commit_0(owner, commitWatcher){
  return $commit(this, owner, commitWatcher);
}
;
_.disableCommits = function disableCommits_0(){
  this.safeToCommit = false;
  return this;
}
;
_.enableCommits = function enableCommits_0(){
  this.safeToCommit = true;
  return this;
}
;
_.getMetadata = function getMetadata_0(base, cap){
  return $thenCompose(this.pointerBuffer.writerUpdates.array.length == 0?$thenApply($sha256(this.hasher, $toByteArray_2($toCbor_90(base))), makeLambdaFunction(BufferedNetworkAccess$lambda$6$Type.prototype.apply_0, BufferedNetworkAccess$lambda$6$Type, [])):new CompletableFuture_0($getCommittedPointerTarget(this.pointerBuffer, cap.writer)), makeLambdaFunction(BufferedNetworkAccess$lambda$7$Type.prototype.apply_0, BufferedNetworkAccess$lambda$7$Type, [this, base, cap]));
}
;
_.isFull = function isFull_0(){
  return toInt_0($collect($mapToInt(new StreamImpl(null, new Spliterators$IteratorSpliterator(new AbstractMap$2(this.blockBuffer.storage), 0)), new BufferedStorage$lambda$40$Type)).sum) >= this.bufferSize;
}
;
_.toString_0 = function toString_38(){
  return 'Blocks(' + $size(this.blockBuffer.storage.map_0) + '),Pointers(' + this.pointerBuffer.writerUpdates.array.length + ')';
}
;
_.withAccountCache = function withAccountCache_0(wrapper){
  return new BufferedNetworkAccess(this.blockBuffer, this.pointerBuffer, this.bufferSize, this.coreNode, $apply_1(wrapper), this.social, this.blocks, this.mutable, this.batCave, this.batCache_0, this.tree, this.synchronizer, this.instanceAdmin, this.spaceUsage, this.serverMessager, this.hasher, this.usernames, this.isJavascript);
}
;
_.withBatOfflineCache = function withBatOfflineCache_0(batCache){
  return new BufferedNetworkAccess(this.blockBuffer, this.pointerBuffer, this.bufferSize, this.coreNode, this.account, this.social, this.blocks, this.mutable, this.batCave, batCache, this.tree, this.synchronizer, this.instanceAdmin, this.spaceUsage, this.serverMessager, this.hasher, this.usernames, this.isJavascript);
}
;
_.withCorenode = function withCorenode_0(newCore){
  return new BufferedNetworkAccess(this.blockBuffer, this.pointerBuffer, this.bufferSize, newCore, this.account, this.social, this.dhtClient, this.mutable, this.batCave, this.batCache_0, this.tree, this.synchronizer, this.instanceAdmin, this.spaceUsage, this.serverMessager, this.hasher, this.usernames, this.isJavascript);
}
;
_.withMutablePointerOfflineCache = function withMutablePointerOfflineCache_0(modifiedPointers){
  var newMutable, pointerBuffer, synchronizer, tree;
  newMutable = $apply_0(modifiedPointers, this.mutable);
  pointerBuffer = new BufferedPointers(newMutable);
  synchronizer = new WriteSynchronizer(newMutable, this.blockBuffer, this.hasher);
  tree = new MutableTreeImpl(this.blockBuffer, this.hasher);
  return new BufferedNetworkAccess(this.blockBuffer, pointerBuffer, this.bufferSize, this.coreNode, this.account, this.social, this.blocks, newMutable, this.batCave, this.batCache_0, tree, synchronizer, this.instanceAdmin, this.spaceUsage, this.serverMessager, this.hasher, this.usernames, this.isJavascript);
}
;
_.withStorage = function withStorage_0(modifiedStorage){
  var blockBuffer, synchronizer, tree;
  blockBuffer = $withStorage(this.blockBuffer, modifiedStorage);
  synchronizer = new WriteSynchronizer(this.mutable, blockBuffer, this.hasher);
  tree = new MutableTreeImpl(blockBuffer, this.hasher);
  return new BufferedNetworkAccess(blockBuffer, this.pointerBuffer, this.bufferSize, this.coreNode, this.account, this.social, this.blocks, this.mutable, this.batCave, this.batCache_0, tree, synchronizer, this.instanceAdmin, this.spaceUsage, this.serverMessager, this.hasher, this.usernames, this.isJavascript);
}
;
_.bufferSize = 0;
_.safeToCommit = true;
var Lpeergos_shared_BufferedNetworkAccess_2_classLit = createForClass('peergos.shared', 'BufferedNetworkAccess', 217);
function BufferedNetworkAccess$0methodref$buildCommitter$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(606, 1, {}, BufferedNetworkAccess$0methodref$buildCommitter$Type);
_.buildCommitter = function buildCommitter(arg0, arg1, arg2){
  return new BufferedNetworkAccess$lambda$3$Type(this.$$outer_0, arg2);
}
;
var Lpeergos_shared_BufferedNetworkAccess$0methodref$buildCommitter$Type_2_classLit = createForClass('peergos.shared', 'BufferedNetworkAccess/0methodref$buildCommitter$Type', 606);
function BufferedNetworkAccess$lambda$1$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(607, 1, {}, BufferedNetworkAccess$lambda$1$Type);
_.commit_0 = function commit_1(owner, v, commitWatcher){
  return $lambda$1(this.$$outer_0, owner, v, commitWatcher);
}
;
var Lpeergos_shared_BufferedNetworkAccess$lambda$1$Type_2_classLit = createForClass('peergos.shared', 'BufferedNetworkAccess/lambda$1$Type', 607);
function BufferedNetworkAccess$lambda$10$Type($$outer_0, owner_1, writers_2, tid_3){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writers_2 = writers_2;
  this.tid_3 = tid_3;
}

defineClass(609, 1, $intern_34, BufferedNetworkAccess$lambda$10$Type);
_.apply_1 = function apply_20(arg0, arg1){
  return $lambda$10(this.$$outer_0, this.owner_1, this.writers_2, this.tid_3, arg1);
}
;
var Lpeergos_shared_BufferedNetworkAccess$lambda$10$Type_2_classLit = createForClass('peergos.shared', 'BufferedNetworkAccess/lambda$10$Type', 609);
function BufferedNetworkAccess$lambda$11$Type(){
}

defineClass(610, 1, $intern_34, BufferedNetworkAccess$lambda$11$Type);
_.apply_1 = function apply_21(arg0, arg1){
  return $clinit_NetworkAccess() , $clinit_Boolean() , (checkCriticalNotNull(castToBoolean(arg0)) , castToBoolean(arg0)) && (checkCriticalNotNull(castToBoolean(arg1)) , castToBoolean(arg1))?true:false;
}
;
var Lpeergos_shared_BufferedNetworkAccess$lambda$11$Type_2_classLit = createForClass('peergos.shared', 'BufferedNetworkAccess/lambda$11$Type', 610);
function BufferedNetworkAccess$lambda$12$Type($$outer_0, owner_1, u_2, writers_3){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.u_2 = u_2;
  this.writers_3 = writers_3;
}

defineClass(1512, $wnd.Function, $intern_22, BufferedNetworkAccess$lambda$12$Type);
_.apply_0 = function apply_22(arg0){
  return $lambda$12(this.$$outer_0, this.owner_1, this.u_2, this.writers_3);
}
;
function BufferedNetworkAccess$lambda$13$Type($$outer_0, owner_1, u_2){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.u_2 = u_2;
}

defineClass(1513, $wnd.Function, $intern_22, BufferedNetworkAccess$lambda$13$Type);
_.apply_0 = function apply_23(arg0){
  return $lambda$13(this.$$outer_0, this.owner_1, this.u_2);
}
;
function BufferedNetworkAccess$lambda$14$Type($$outer_0, owner_1, u_2){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.u_2 = u_2;
}

defineClass(1514, $wnd.Function, $intern_22, BufferedNetworkAccess$lambda$14$Type);
_.apply_0 = function apply_24(arg0){
  return $lambda$14(this.$$outer_0, this.owner_1, this.u_2, arg0);
}
;
function BufferedNetworkAccess$lambda$15$Type($$outer_0, owner_1, tid_2){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.tid_2 = tid_2;
}

defineClass(1510, $wnd.Function, $intern_22, BufferedNetworkAccess$lambda$15$Type);
_.apply_0 = function apply_25(arg0){
  return $lambda$15(this.$$outer_0, this.owner_1, this.tid_2);
}
;
function BufferedNetworkAccess$lambda$16$Type($$outer_0, commitWatcher_1){
  this.$$outer_0 = $$outer_0;
  this.commitWatcher_1 = commitWatcher_1;
}

defineClass(1511, $wnd.Function, $intern_22, BufferedNetworkAccess$lambda$16$Type);
_.apply_0 = function apply_26(arg0){
  return $lambda$16(this.$$outer_0, this.commitWatcher_1);
}
;
function BufferedNetworkAccess$lambda$2$Type(v_0){
  this.v_0 = v_0;
}

defineClass(1507, $wnd.Function, $intern_22, BufferedNetworkAccess$lambda$2$Type);
_.apply_0 = function apply_27(arg0){
  return $clinit_NetworkAccess() , this.v_0;
}
;
function BufferedNetworkAccess$lambda$3$Type($$outer_0, commitWatcher_1){
  this.$$outer_0 = $$outer_0;
  this.commitWatcher_1 = commitWatcher_1;
}

defineClass(608, 1, {}, BufferedNetworkAccess$lambda$3$Type);
_.commit_1 = function commit_2(arg0, arg1, arg2, arg3, arg4){
  return $lambda$3(this.$$outer_0, this.commitWatcher_1, arg0, arg1, arg2, arg3, arg4);
}
;
var Lpeergos_shared_BufferedNetworkAccess$lambda$3$Type_2_classLit = createForClass('peergos.shared', 'BufferedNetworkAccess/lambda$3$Type', 608);
function BufferedNetworkAccess$lambda$4$Type($$outer_0, w_1, wd_2, e_3, o_4, commitWatcher_5){
  this.$$outer_0 = $$outer_0;
  this.w_1 = w_1;
  this.wd_2 = wd_2;
  this.e_3 = e_3;
  this.o_4 = o_4;
  this.commitWatcher_5 = commitWatcher_5;
}

defineClass(1508, $wnd.Function, $intern_22, BufferedNetworkAccess$lambda$4$Type);
_.apply_0 = function apply_28(arg0){
  return $lambda$4_0(this.$$outer_0, this.w_1, this.wd_2, this.e_3, this.o_4, this.commitWatcher_5, arg0);
}
;
function BufferedNetworkAccess$lambda$5$Type(w_0, newHash_1, wd_2, update_3){
  this.w_0 = w_0;
  this.newHash_1 = newHash_1;
  this.wd_2 = wd_2;
  this.update_3 = update_3;
}

defineClass(1509, $wnd.Function, $intern_22, BufferedNetworkAccess$lambda$5$Type);
_.apply_0 = function apply_29(arg0){
  return lambda$5_0(this.w_0, this.newHash_1, this.wd_2, this.update_3);
}
;
function BufferedNetworkAccess$lambda$6$Type(){
}

defineClass(1501, $wnd.Function, $intern_22, BufferedNetworkAccess$lambda$6$Type);
_.apply_0 = function apply_30(arg0){
  return $clinit_NetworkAccess() , $clinit_Optional() , new Optional(checkCriticalNotNull(new Cid(1, ($clinit_Cid$Codec() , DagCbor), ($clinit_Multihash$Type() , sha2_256), castTo(arg0, 11))));
}
;
function BufferedNetworkAccess$lambda$7$Type($$outer_0, base_1, cap_2){
  this.$$outer_0 = $$outer_0;
  this.base_1 = base_1;
  this.cap_2 = cap_2;
}

defineClass(1502, $wnd.Function, $intern_22, BufferedNetworkAccess$lambda$7$Type);
_.apply_0 = function apply_31(arg0){
  return $getMetadata(this.$$outer_0, this.base_1, this.cap_2, castTo(arg0, 12));
}
;
function BufferedNetworkAccess$lambda$8$Type($$outer_0, owner_1){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
}

defineClass(1505, $wnd.Function, $intern_22, BufferedNetworkAccess$lambda$8$Type);
_.apply_0 = function apply_32(arg0){
  return $lambda$8(this.$$outer_0, this.owner_1);
}
;
function BufferedNetworkAccess$lambda$9$Type($$outer_0, owner_1, writers_2, commitWatcher_3, writes_4){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writers_2 = writers_2;
  this.commitWatcher_3 = commitWatcher_3;
  this.writes_4 = writes_4;
}

defineClass(1506, $wnd.Function, $intern_22, BufferedNetworkAccess$lambda$9$Type);
_.apply_0 = function apply_33(arg0){
  return $lambda$9(this.$$outer_0, this.owner_1, this.writers_2, this.commitWatcher_3, this.writes_4, arg0);
}
;
function Crypto_0(random, hasher, symmetricProvider, signer, boxer){
  this.random = random;
  this.hasher = hasher;
  this.symmetricProvider = symmetricProvider;
  this.signer = signer;
  this.boxer = boxer;
}

function init_0(instanceCreator){
  var instance;
  if (INSTANCE_1)
    return INSTANCE_1;
  instance = lambda$0_0(instanceCreator.random_0, instanceCreator.symmetricProvider_1, instanceCreator.signer_2, instanceCreator.boxer_3);
  INSTANCE_1 = instance;
  addProvider_1(($clinit_SymmetricKey$Type() , TweetNaCl), instance.symmetricProvider);
  addProvider_0(($clinit_PublicSigningKey$Type() , Ed25519), instance.signer);
  setRng_0(TweetNaCl, instance.random);
  addProvider(($clinit_PublicBoxingKey$Type() , Curve25519), instance.boxer);
  setRng(Curve25519, instance.random);
  return instance;
}

function initJS(){
  var boxer, random, signer, symmetricProvider;
  random = new SafeRandom$Javascript;
  symmetricProvider = new Salsa20Poly1305$Javascript;
  signer = new Ed25519$Javascript;
  boxer = new Curve25519$Javascript;
  return init_0(new Crypto$lambda$0$Type(random, symmetricProvider, signer, boxer));
}

function lambda$0_0(random_0, symmetricProvider_1, signer_2, boxer_3){
  return new Crypto_0(random_0, new ScryptJS, symmetricProvider_1, signer_2, boxer_3);
}

defineClass(565, 1, {}, Crypto_0);
var INSTANCE_1;
var Lpeergos_shared_Crypto_2_classLit = createForClass('peergos.shared', 'Crypto', 565);
function Crypto$lambda$0$Type(random_0, symmetricProvider_1, signer_2, boxer_3){
  this.random_0 = random_0;
  this.symmetricProvider_1 = symmetricProvider_1;
  this.signer_2 = signer_2;
  this.boxer_3 = boxer_3;
}

defineClass(566, 1, {}, Crypto$lambda$0$Type);
_.get_0 = function get_23(){
  return lambda$0_0(this.random_0, this.symmetricProvider_1, this.signer_2, this.boxer_3);
}
;
var Lpeergos_shared_Crypto$lambda$0$Type_2_classLit = createForClass('peergos.shared', 'Crypto/lambda$0$Type', 566);
function $containsKey_4(this$static, cacheKey){
  return $containsKey_2(this$static.cache_0, cacheKey);
}

function $get_8(this$static, cacheKey){
  return castTo($get_5(this$static.cache_0, cacheKey), 12);
}

function $lambda$1_0(this$static, cacheKey_1, e_1){
  return $put_5(this$static.cache_0, new Pair(castTo(cacheKey_1.left, 58), castTo(castTo(e_1.getKey(), 20).right, 80)), castTo(e_1.getValue(), 12));
}

function $put_8(this$static, cacheKey, val){
  $put_5(this$static.cache_0, cacheKey, val);
}

function $update_1(this$static, priorRoot, cacheKey, val){
  priorRoot.ref != null && $forEach_2($filter(new StreamImpl(null, new Spliterators$IteratorSpliterator(new AbstractHashMap$EntrySet(new HashMap_1(this$static.cache_0)), 1)), new CryptreeCache$lambda$0$Type(priorRoot)), new CryptreeCache$lambda$1$Type(this$static, cacheKey));
  $put_5(this$static.cache_0, cacheKey, val);
}

function CryptreeCache(){
  this.cache_0 = new LRUCache($intern_49);
}

function lambda$0_1(priorRoot_0, e_1){
  return castTo(castTo(e_1.getKey(), 20).left, 58).equals((checkCriticalElement(priorRoot_0.ref != null) , priorRoot_0.ref));
}

defineClass(612, 1, {}, CryptreeCache);
var Lpeergos_shared_CryptreeCache_2_classLit = createForClass('peergos.shared', 'CryptreeCache', 612);
function CryptreeCache$lambda$0$Type(priorRoot_0){
  this.priorRoot_0 = priorRoot_0;
}

defineClass(613, 1, {}, CryptreeCache$lambda$0$Type);
_.test_0 = function test_1(arg0){
  return lambda$0_1(this.priorRoot_0, arg0);
}
;
var Lpeergos_shared_CryptreeCache$lambda$0$Type_2_classLit = createForClass('peergos.shared', 'CryptreeCache/lambda$0$Type', 613);
function CryptreeCache$lambda$1$Type($$outer_0, cacheKey_1){
  this.$$outer_0 = $$outer_0;
  this.cacheKey_1 = cacheKey_1;
}

defineClass(614, 1, $intern_32, CryptreeCache$lambda$1$Type);
_.accept = function accept_31(arg0){
  $lambda$1_0(this.$$outer_0, this.cacheKey_1, arg0);
}
;
_.andThen = function andThen_13(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_CryptreeCache$lambda$1$Type_2_classLit = createForClass('peergos.shared', 'CryptreeCache/lambda$1$Type', 614);
function lambda$0_2(parser_0, arr_1){
  return parser_0(deserialize(new CborDecoder(new ByteArrayInputStream(arr_1)), arr_1.length));
}

function parser_3(parser){
  return makeLambdaFunction(Cborable$lambda$0$Type.prototype.apply_0, Cborable$lambda$0$Type, [parser]);
}

var Lpeergos_shared_cbor_Cborable_2_classLit = createForInterface('peergos.shared.cbor', 'Cborable');
function $clinit_MaybeMultihash(){
  $clinit_MaybeMultihash = emptyMethod;
  EMPTY_0 = new MaybeMultihash(null);
}

function $equals_7(this$static, o){
  var that;
  if (maskUndefined(this$static) === maskUndefined(o))
    return true;
  if (o == null || Lpeergos_shared_MaybeMultihash_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 93);
  return this$static.hash_0?this$static.hash_0.equals(that.hash_0):!that.hash_0;
}

function $get_9(this$static){
  if (!this$static.hash_0)
    throw toJs(new IllegalStateException_0('hash not present'));
  return this$static.hash_0;
}

function $hashCode_0(this$static){
  return this$static.hash_0?this$static.hash_0.hashCode():0;
}

function $map_1(this$static, func){
  return this$static.hash_0?($clinit_Optional() , new Optional(checkCriticalNotNull(func(this$static.hash_0)))):($clinit_Optional() , $clinit_Optional() , EMPTY);
}

function $toCbor(this$static){
  return this$static.hash_0?new CborObject$CborByteArray(this$static.hash_0.toBytes()):new CborObject$CborNull;
}

function $toOptional(this$static){
  return this$static.hash_0?($clinit_Optional() , new Optional(checkCriticalNotNull(this$static.hash_0))):($clinit_Optional() , $clinit_Optional() , EMPTY);
}

function $toString_7(this$static){
  return this$static.hash_0?this$static.hash_0.toString():'EMPTY';
}

function MaybeMultihash(hash){
  $clinit_MaybeMultihash();
  this.hash_0 = hash;
}

function fromCbor_0(cbor){
  $clinit_MaybeMultihash();
  if (instanceOf(cbor, 214))
    return EMPTY_0;
  if (!instanceOf(cbor, 27))
    throw toJs(new IllegalStateException_0('Incorrect cbor for MaybeMultihash: ' + cbor));
  return new MaybeMultihash(cast(castTo(cbor, 27).value_0));
}

defineClass(93, 1, {93:1, 7:1}, MaybeMultihash);
_.serialize = function serialize_0(){
  return (this.hash_0?new CborObject$CborByteArray(this.hash_0.toBytes()):new CborObject$CborNull).toByteArray_0();
}
;
_.equals_0 = function equals_30(o){
  return $equals_7(this, o);
}
;
_.hashCode_1 = function hashCode_29(){
  return $hashCode_0(this);
}
;
_.toCbor = function toCbor_0(){
  return $toCbor(this);
}
;
_.toString_0 = function toString_39(){
  return $toString_7(this);
}
;
var EMPTY_0;
var Lpeergos_shared_MaybeMultihash_2_classLit = createForClass('peergos.shared', 'MaybeMultihash', 93);
function NetworkAccess$0methodref$stream$Type(){
}

defineClass(1425, $wnd.Function, $intern_22, NetworkAccess$0methodref$stream$Type);
_.apply_0 = function apply_34(arg0){
  return $stream(castTo(arg0, 12));
}
;
function NetworkAccess$1methodref$signMessage$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1414, $wnd.Function, $intern_22, NetworkAccess$1methodref$signMessage$Type);
_.apply_0 = function apply_35(arg0){
  return $signMessage(this.$$outer_0, castTo(arg0, 11));
}
;
function NetworkAccess$2methodref$isPresent$Type(){
}

defineClass(580, 1, {}, NetworkAccess$2methodref$isPresent$Type);
_.test_0 = function test_2(arg0){
  return castTo(arg0, 12).ref != null;
}
;
var Lpeergos_shared_NetworkAccess$2methodref$isPresent$Type_2_classLit = createForClass('peergos.shared', 'NetworkAccess/2methodref$isPresent$Type', 580);
function NetworkAccess$3methodref$get$Type(){
}

defineClass(1428, $wnd.Function, $intern_22, NetworkAccess$3methodref$get$Type);
_.apply_0 = function apply_36(arg0){
  return $get_6(castTo(arg0, 12));
}
;
function NetworkAccess$lambda$0$Type(){
}

defineClass(1352, $wnd.Function, $intern_22, NetworkAccess$lambda$0$Type);
_.apply_0 = function apply_37(arg0){
  return $clinit_NetworkAccess() , castTo(arg0, 202).baseAuthedUrl;
}
;
function NetworkAccess$lambda$1$Type(){
}

defineClass(1353, $wnd.Function, $intern_22, NetworkAccess$lambda$1$Type);
_.apply_0 = function apply_38(arg0){
  return $clinit_NetworkAccess() , $clinit_Boolean() , castTo(arg0, 17).size() > 0?true:false;
}
;
function $apply_0(this$static, arg0){
  return lambda$10(this$static.net_0, this$static.onlineState_1, arg0);
}

function NetworkAccess$lambda$10$Type(net_0, onlineState_1){
  this.net_0 = net_0;
  this.onlineState_1 = onlineState_1;
}

defineClass(1385, $wnd.Function, $intern_22, NetworkAccess$lambda$10$Type);
_.apply_0 = function apply_39(arg0){
  return $apply_0(this, arg0);
}
;
function NetworkAccess$lambda$11$Type(allowOfflineLogin_0, onlineState_1){
  this.allowOfflineLogin_0 = allowOfflineLogin_0;
  this.onlineState_1 = onlineState_1;
}

defineClass(1360, $wnd.Function, $intern_22, NetworkAccess$lambda$11$Type);
_.apply_0 = function apply_40(arg0){
  return lambda$11(this.allowOfflineLogin_0, this.onlineState_1, arg0);
}
;
_.allowOfflineLogin_0 = false;
function $apply_1(this$static){
  return lambda$12(this$static.net_0, this$static.onlineState_1);
}

function NetworkAccess$lambda$12$Type(net_0, onlineState_1){
  this.net_0 = net_0;
  this.onlineState_1 = onlineState_1;
}

defineClass(1386, $wnd.Function, $intern_22, NetworkAccess$lambda$12$Type);
_.apply_0 = function apply_41(arg0){
  return $apply_1(this);
}
;
function NetworkAccess$lambda$15$Type(core_0, apiPoster_1, p2pPoster_2, mutableCacheTime_3, hasher_4, usernames_5, isJavascript_6){
  this.core_0 = core_0;
  this.apiPoster_1 = apiPoster_1;
  this.p2pPoster_2 = p2pPoster_2;
  this.mutableCacheTime_3 = mutableCacheTime_3;
  this.hasher_4 = hasher_4;
  this.usernames_5 = usernames_5;
  this.isJavascript_6 = isJavascript_6;
}

defineClass(1389, $wnd.Function, $intern_22, NetworkAccess$lambda$15$Type);
_.apply_0 = function apply_42(arg0){
  return lambda$15(this.core_0, this.apiPoster_1, this.p2pPoster_2, this.mutableCacheTime_3, this.hasher_4, this.usernames_5, this.isJavascript_6, arg0);
}
;
_.isJavascript_6 = false;
_.mutableCacheTime_3 = 0;
function NetworkAccess$lambda$16$Type(){
}

defineClass(1357, $wnd.Function, $intern_22, NetworkAccess$lambda$16$Type);
_.apply_0 = function apply_43(arg0){
  return $clinit_NetworkAccess() , $clinit_Collections() , $clinit_Collections() , EMPTY_LIST;
}
;
function NetworkAccess$lambda$17$Type(direct_0, apiPoster_1, p2pPoster_2, localDht_3, hasher_5){
  this.direct_0 = direct_0;
  this.apiPoster_1 = apiPoster_1;
  this.p2pPoster_2 = p2pPoster_2;
  this.localDht_3 = localDht_3;
  this.mutableCacheTime_4 = 7000;
  this.hasher_5 = hasher_5;
  this.isJavascript_6 = true;
}

defineClass(1358, $wnd.Function, $intern_22, NetworkAccess$lambda$17$Type);
_.apply_0 = function apply_44(arg0){
  return lambda$17(this.direct_0, this.apiPoster_1, this.p2pPoster_2, this.localDht_3, this.mutableCacheTime_4, this.hasher_5, this.isJavascript_6, arg0);
}
;
_.isJavascript_6 = false;
_.mutableCacheTime_4 = 0;
function NetworkAccess$lambda$19$Type(){
}

defineClass(1387, $wnd.Function, $intern_22, NetworkAccess$lambda$19$Type);
_.apply_0 = function apply_45(arg0){
  return $clinit_NetworkAccess() , new Cid(1, ($clinit_Cid$Codec() , LibP2pKey), ($clinit_Multihash$Type() , sha2_256), initUnidimensionalArray(B_classLit, $intern_28, 8, 32, 15, 1));
}
;
function NetworkAccess$lambda$2$Type(){
}

defineClass(1354, $wnd.Function, $intern_22, NetworkAccess$lambda$2$Type);
_.apply_0 = function apply_46(arg0){
  return $clinit_NetworkAccess() , new BlockStoreProperties(false, false, false, ($clinit_Optional() , $clinit_Optional() , EMPTY), (null , EMPTY));
}
;
function NetworkAccess$lambda$20$Type(core_1, localDht_2, apiPoster_3, p2pPoster_4, mutableCacheTime_5, hasher_6, usernames_7, isJavascript_8){
  this.isPeergosServer_0 = true;
  this.core_1 = core_1;
  this.localDht_2 = localDht_2;
  this.apiPoster_3 = apiPoster_3;
  this.p2pPoster_4 = p2pPoster_4;
  this.mutableCacheTime_5 = mutableCacheTime_5;
  this.hasher_6 = hasher_6;
  this.usernames_7 = usernames_7;
  this.isJavascript_8 = isJavascript_8;
}

defineClass(1388, $wnd.Function, $intern_22, NetworkAccess$lambda$20$Type);
_.apply_0 = function apply_47(arg0){
  return lambda$20(this.isPeergosServer_0, this.core_1, this.localDht_2, this.apiPoster_3, this.p2pPoster_4, this.mutableCacheTime_5, this.hasher_6, this.usernames_7, this.isJavascript_8, arg0);
}
;
_.isJavascript_8 = false;
_.isPeergosServer_0 = false;
_.mutableCacheTime_5 = 0;
function NetworkAccess$lambda$21$Type(){
}

defineClass(575, 1, {}, NetworkAccess$lambda$21$Type);
_.get_0 = function get_24(){
  return $clinit_NetworkAccess() , $clinit_Boolean() , true;
}
;
var Lpeergos_shared_NetworkAccess$lambda$21$Type_2_classLit = createForClass('peergos.shared', 'NetworkAccess/lambda$21$Type', 575);
function NetworkAccess$lambda$22$Type(){
}

defineClass(1361, $wnd.Function, $intern_22, NetworkAccess$lambda$22$Type);
_.apply_0 = function apply_48(arg0){
  return $clinit_NetworkAccess() , castTo(arg0, 17).isEmpty()?($clinit_Optional() , $clinit_Optional() , EMPTY):($clinit_Optional() , new Optional(checkCriticalNotNull(castTo(castTo(arg0, 17).getAtIndex(0), 83))));
}
;
function NetworkAccess$lambda$23$Type($$outer_0, current_1){
  this.$$outer_0 = $$outer_0;
  this.current_1 = current_1;
}

defineClass(1362, $wnd.Function, $intern_22, NetworkAccess$lambda$23$Type);
_.apply_0 = function apply_49(arg0){
  return $lambda$23(this.$$outer_0, this.current_1, arg0);
}
;
function NetworkAccess$lambda$24$Type($$outer_0, link_1){
  this.$$outer_0 = $$outer_0;
  this.link_1 = link_1;
}

defineClass(1390, $wnd.Function, $intern_22, NetworkAccess$lambda$24$Type);
_.apply_0 = function apply_50(arg0){
  return $lambda$24(this.$$outer_0, this.link_1, arg0);
}
;
function NetworkAccess$lambda$25$Type(link_0){
  this.link_0 = link_0;
}

defineClass(1391, $wnd.Function, $intern_22, NetworkAccess$lambda$25$Type);
_.apply_0 = function apply_51(arg0){
  return lambda$25(this.link_0, arg0);
}
;
function NetworkAccess$lambda$26$Type(link_0){
  this.link_0 = link_0;
}

defineClass(1392, $wnd.Function, $intern_22, NetworkAccess$lambda$26$Type);
_.apply_0 = function apply_52(arg0){
  return $clinit_NetworkAccess() , new RetrievedCapability(this.link_0, castTo(arg0, 115));
}
;
function NetworkAccess$lambda$27$Type(){
}

defineClass(1363, $wnd.Function, $intern_22, NetworkAccess$lambda$27$Type);
_.apply_0 = function apply_53(arg0){
  return $clinit_NetworkAccess() , castTo($collect_0($flatMap_0(castTo(arg0, 47).stream(), makeLambdaFunction(NetworkAccess$0methodref$stream$Type.prototype.apply_0, NetworkAccess$0methodref$stream$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
}
;
function NetworkAccess$lambda$3$Type(direct_0, localDht_1, core_2, hasher_3){
  this.direct_0 = direct_0;
  this.localDht_1 = localDht_1;
  this.core_2 = core_2;
  this.hasher_3 = hasher_3;
}

defineClass(1355, $wnd.Function, $intern_22, NetworkAccess$lambda$3$Type);
_.apply_0 = function apply_54(arg0){
  return lambda$3(this.direct_0, this.localDht_1, this.core_2, this.hasher_3, arg0);
}
;
function NetworkAccess$lambda$33$Type($$outer_0, e_1){
  this.$$outer_0 = $$outer_0;
  this.e_1 = e_1;
}

defineClass(328, $wnd.Function, $intern_22, NetworkAccess$lambda$33$Type);
_.apply_0 = function apply_55(arg0){
  return $lambda$33(this.$$outer_0, this.e_1, arg0);
}
;
function NetworkAccess$lambda$34$Type(){
}

defineClass(329, $wnd.Function, $intern_22, NetworkAccess$lambda$34$Type);
_.apply_0 = function apply_56(arg0){
  return $clinit_NetworkAccess() , $log(LOG, ($clinit_Level() , SEVERE), castTo(arg0, 33).getMessage(), castTo(arg0, 33)) , $clinit_Optional() , $clinit_Optional() , EMPTY;
}
;
function NetworkAccess$lambda$35$Type(e_0, network_1){
  this.e_0 = e_0;
  this.network_1 = network_1;
}

defineClass(537, $wnd.Function, $intern_22, NetworkAccess$lambda$35$Type);
_.apply_0 = function apply_57(arg0){
  return lambda$35(this.e_0, this.network_1, arg0);
}
;
function NetworkAccess$lambda$36$Type(e_0, fileOpt_1){
  this.e_0 = e_0;
  this.fileOpt_1 = fileOpt_1;
}

defineClass(1393, $wnd.Function, $intern_22, NetworkAccess$lambda$36$Type);
_.apply_0 = function apply_58(arg0){
  return lambda$36(this.e_0, this.fileOpt_1, arg0);
}
;
function NetworkAccess$lambda$37$Type(e_0, network_1){
  this.e_0 = e_0;
  this.network_1 = network_1;
}

defineClass(393, 1, {}, NetworkAccess$lambda$37$Type);
_.get_0 = function get_25(){
  return lambda$37(this.e_0, this.network_1);
}
;
var Lpeergos_shared_NetworkAccess$lambda$37$Type_2_classLit = createForClass('peergos.shared', 'NetworkAccess/lambda$37$Type', 393);
function NetworkAccess$lambda$38$Type(network_0, e_1){
  this.network_0 = network_0;
  this.e_1 = e_1;
}

defineClass(1188, $wnd.Function, $intern_22, NetworkAccess$lambda$38$Type);
_.apply_0 = function apply_59(arg0){
  return lambda$38(this.network_0, this.e_1);
}
;
function NetworkAccess$lambda$39$Type(network_0){
  this.network_0 = network_0;
}

defineClass(1396, $wnd.Function, $intern_22, NetworkAccess$lambda$39$Type);
_.apply_0 = function apply_60(arg0){
  return lambda$39(this.network_0, arg0);
}
;
function NetworkAccess$lambda$4$Type(bp_0, direct_1, localDht_2, core_3, hasher_4){
  this.bp_0 = bp_0;
  this.direct_1 = direct_1;
  this.localDht_2 = localDht_2;
  this.core_3 = core_3;
  this.hasher_4 = hasher_4;
}

defineClass(1383, $wnd.Function, $intern_22, NetworkAccess$lambda$4$Type);
_.apply_0 = function apply_61(arg0){
  return lambda$4_0(this.bp_0, this.direct_1, this.localDht_2, this.core_3, this.hasher_4, arg0);
}
;
function NetworkAccess$lambda$40$Type(network_0, e_1){
  this.network_0 = network_0;
  this.e_1 = e_1;
}

defineClass(1394, $wnd.Function, $intern_22, NetworkAccess$lambda$40$Type);
_.apply_0 = function apply_62(arg0){
  return lambda$40(this.network_0, this.e_1);
}
;
function NetworkAccess$lambda$41$Type(e_0){
  this.e_0 = e_0;
}

defineClass(1395, $wnd.Function, $intern_22, NetworkAccess$lambda$41$Type);
_.apply_0 = function apply_63(arg0){
  return lambda$41(this.e_0, arg0);
}
;
function NetworkAccess$lambda$42$Type($$outer_0, cap_1, owner_2){
  this.$$outer_0 = $$outer_0;
  this.cap_1 = cap_1;
  this.owner_2 = owner_2;
}

defineClass(1364, $wnd.Function, $intern_22, NetworkAccess$lambda$42$Type);
_.apply_0 = function apply_64(arg0){
  return $lambda$42(this.$$outer_0, this.cap_1, this.owner_2, arg0);
}
;
function NetworkAccess$lambda$43$Type(){
}

defineClass(1365, $wnd.Function, $intern_22, NetworkAccess$lambda$43$Type);
_.apply_0 = function apply_65(arg0){
  return $clinit_NetworkAccess() , $log(LOG, ($clinit_Level() , SEVERE), castTo(arg0, 33).getMessage(), castTo(arg0, 33)) , $clinit_Optional() , $clinit_Optional() , EMPTY;
}
;
function NetworkAccess$lambda$44$Type($$outer_0, cap_1, entryWriter_2, ownerName_3){
  this.$$outer_0 = $$outer_0;
  this.cap_1 = cap_1;
  this.entryWriter_2 = entryWriter_2;
  this.ownerName_3 = ownerName_3;
}

defineClass(1366, $wnd.Function, $intern_22, NetworkAccess$lambda$44$Type);
_.apply_0 = function apply_66(arg0){
  return $lambda$44(this.$$outer_0, this.cap_1, this.entryWriter_2, this.ownerName_3, arg0);
}
;
function NetworkAccess$lambda$45$Type($$outer_0, cap_1, entryWriter_2, ownerName_3, v_4){
  this.$$outer_0 = $$outer_0;
  this.cap_1 = cap_1;
  this.entryWriter_2 = entryWriter_2;
  this.ownerName_3 = ownerName_3;
  this.v_4 = v_4;
}

defineClass(1397, $wnd.Function, $intern_22, NetworkAccess$lambda$45$Type);
_.apply_0 = function apply_67(arg0){
  return $lambda$45(this.$$outer_0, this.cap_1, this.entryWriter_2, this.ownerName_3, this.v_4, arg0);
}
;
function NetworkAccess$lambda$46$Type(fa_0, cap_1, entryWriter_2){
  this.fa_0 = fa_0;
  this.cap_1 = cap_1;
  this.entryWriter_2 = entryWriter_2;
}

defineClass(1398, $wnd.Function, $intern_22, NetworkAccess$lambda$46$Type);
_.apply_0 = function apply_68(arg0){
  return lambda$46_0(this.fa_0, this.cap_1, this.entryWriter_2, arg0);
}
;
function NetworkAccess$lambda$47$Type(){
}

defineClass(1399, $wnd.Function, $intern_22, NetworkAccess$lambda$47$Type);
_.apply_0 = function apply_69(arg0){
  return $clinit_NetworkAccess() , $clinit_Optional() , new Optional(checkCriticalNotNull(castTo(arg0, 19)));
}
;
function NetworkAccess$lambda$48$Type(link_0, entryWriter_1, ownername_2, owner_3, network_4, version_5){
  this.link_0 = link_0;
  this.entryWriter_1 = entryWriter_1;
  this.ownername_2 = ownername_2;
  this.owner_3 = owner_3;
  this.network_4 = network_4;
  this.version_5 = version_5;
}

defineClass(1189, $wnd.Function, $intern_22, NetworkAccess$lambda$48$Type);
_.apply_0 = function apply_70(arg0){
  return lambda$48(this.link_0, this.entryWriter_1, this.ownername_2, this.owner_3, this.network_4, this.version_5, arg0);
}
;
function NetworkAccess$lambda$49$Type(link_0, entryWriter_1, ownername_2, owner_3, network_4, cap_5){
  this.link_0 = link_0;
  this.entryWriter_1 = entryWriter_1;
  this.ownername_2 = ownername_2;
  this.owner_3 = owner_3;
  this.network_4 = network_4;
  this.cap_5 = cap_5;
}

defineClass(1400, $wnd.Function, $intern_22, NetworkAccess$lambda$49$Type);
_.apply_0 = function apply_71(arg0){
  return lambda$49(this.link_0, this.entryWriter_1, this.ownername_2, this.owner_3, this.network_4, this.cap_5, arg0);
}
;
function $get_10(this$static){
  return $clinit_NetworkAccess() , $exceptionally($thenApply($thenApply($get_28(this$static.localDht_0.poster, 'api/v0/id', ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)), makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$0$Type.prototype.apply_0, ContentAddressedStorage$HTTP$lambda$0$Type, [])), makeLambdaFunction(NetworkAccess$lambda$6$Type.prototype.apply_0, NetworkAccess$lambda$6$Type, [])), makeLambdaFunction(NetworkAccess$lambda$7$Type.prototype.apply_0, NetworkAccess$lambda$7$Type, []));
}

function NetworkAccess$lambda$5$Type(localDht_0){
  this.localDht_0 = localDht_0;
}

defineClass(574, 1, {}, NetworkAccess$lambda$5$Type);
_.get_0 = function get_26(){
  return $get_10(this);
}
;
var Lpeergos_shared_NetworkAccess$lambda$5$Type_2_classLit = createForClass('peergos.shared', 'NetworkAccess/lambda$5$Type', 574);
function NetworkAccess$lambda$50$Type(link_0, entryWriter_1, ownername_2, fullVersion_3, owner_4, network_5){
  this.link_0 = link_0;
  this.entryWriter_1 = entryWriter_1;
  this.ownername_2 = ownername_2;
  this.fullVersion_3 = fullVersion_3;
  this.owner_4 = owner_4;
  this.network_5 = network_5;
}

defineClass(1401, $wnd.Function, $intern_22, NetworkAccess$lambda$50$Type);
_.apply_0 = function apply_72(arg0){
  return lambda$50(this.link_0, this.entryWriter_1, this.ownername_2, this.fullVersion_3, this.owner_4, this.network_5, arg0);
}
;
function NetworkAccess$lambda$51$Type(link_0, entryWriter_1, ownername_2, fullVersion_3){
  this.link_0 = link_0;
  this.entryWriter_1 = entryWriter_1;
  this.ownername_2 = ownername_2;
  this.fullVersion_3 = fullVersion_3;
}

defineClass(1402, $wnd.Function, $intern_22, NetworkAccess$lambda$51$Type);
_.apply_0 = function apply_73(arg0){
  return lambda$51(this.link_0, this.entryWriter_1, this.ownername_2, this.fullVersion_3, arg0);
}
;
function NetworkAccess$lambda$52$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1367, $wnd.Function, $intern_22, NetworkAccess$lambda$52$Type);
_.apply_0 = function apply_74(arg0){
  return $lambda$52(this.$$outer_0, arg0);
}
;
function NetworkAccess$lambda$53$Type(b_0){
  this.b_0 = b_0;
}

defineClass(1403, $wnd.Function, $intern_22, NetworkAccess$lambda$53$Type);
_.apply_0 = function apply_75(arg0){
  return lambda$53(this.b_0, arg0);
}
;
function NetworkAccess$lambda$54$Type($$outer_0, cap_1, base_2, committedRoot_3, cacheKey_4){
  this.$$outer_0 = $$outer_0;
  this.cap_1 = cap_1;
  this.base_2 = base_2;
  this.committedRoot_3 = committedRoot_3;
  this.cacheKey_4 = cacheKey_4;
}

defineClass(1368, $wnd.Function, $intern_22, NetworkAccess$lambda$54$Type);
_.apply_0 = function apply_76(arg0){
  return $lambda$54(this.$$outer_0, this.cap_1, this.base_2, this.committedRoot_3, this.cacheKey_4, arg0);
}
;
function NetworkAccess$lambda$55$Type($$outer_0, cap_1, base_2, bat_3, committedRoot_4){
  this.$$outer_0 = $$outer_0;
  this.cap_1 = cap_1;
  this.base_2 = base_2;
  this.bat_3 = bat_3;
  this.committedRoot_4 = committedRoot_4;
}

defineClass(576, 1, {}, NetworkAccess$lambda$55$Type);
_.get_0 = function get_27(){
  return $lambda$55(this.$$outer_0, this.cap_1, this.base_2, this.bat_3, this.committedRoot_4);
}
;
var Lpeergos_shared_NetworkAccess$lambda$55$Type_2_classLit = createForClass('peergos.shared', 'NetworkAccess/lambda$55$Type', 576);
function NetworkAccess$lambda$56$Type($$outer_0, cap_1, base_2, bat_3, committedRoot_4){
  this.$$outer_0 = $$outer_0;
  this.cap_1 = cap_1;
  this.base_2 = base_2;
  this.bat_3 = bat_3;
  this.committedRoot_4 = committedRoot_4;
}

defineClass(1404, $wnd.Function, $intern_22, NetworkAccess$lambda$56$Type);
_.apply_0 = function apply_77(arg0){
  return $lambda$56(this.$$outer_0, this.cap_1, this.base_2, this.bat_3, this.committedRoot_4);
}
;
function NetworkAccess$lambda$57$Type($$outer_0, cap_1, cacheKey_2, bat_3, base_4){
  this.$$outer_0 = $$outer_0;
  this.cap_1 = cap_1;
  this.cacheKey_2 = cacheKey_2;
  this.bat_3 = bat_3;
  this.base_4 = base_4;
}

defineClass(1405, $wnd.Function, $intern_22, NetworkAccess$lambda$57$Type);
_.apply_0 = function apply_78(arg0){
  return $lambda$57(this.$$outer_0, this.cap_1, this.cacheKey_2, this.bat_3, this.base_4);
}
;
function NetworkAccess$lambda$58$Type(){
}

defineClass(1406, $wnd.Function, $intern_22, NetworkAccess$lambda$58$Type);
_.apply_0 = function apply_79(arg0){
  return $clinit_NetworkAccess() , new CompletableFuture_0(castTo(arg0, 80).data_0);
}
;
function NetworkAccess$lambda$59$Type(){
}

defineClass(1407, $wnd.Function, $intern_22, NetworkAccess$lambda$59$Type);
_.apply_0 = function apply_80(arg0){
  return $clinit_NetworkAccess() , castTo(castTo(arg0, 7), 53);
}
;
function NetworkAccess$lambda$6$Type(){
}

defineClass(1423, $wnd.Function, $intern_22, NetworkAccess$lambda$6$Type);
_.apply_0 = function apply_81(arg0){
  return $clinit_NetworkAccess() , $clinit_Boolean() , true;
}
;
function NetworkAccess$lambda$60$Type(cap_0){
  this.cap_0 = cap_0;
}

defineClass(1408, $wnd.Function, $intern_22, NetworkAccess$lambda$60$Type);
_.apply_0 = function apply_82(arg0){
  return lambda$60(this.cap_0, arg0);
}
;
function NetworkAccess$lambda$61$Type(){
}

defineClass(1409, $wnd.Function, $intern_22, NetworkAccess$lambda$61$Type);
_.apply_0 = function apply_83(arg0){
  return $clinit_NetworkAccess() , $map(castTo(arg0, 12), makeLambdaFunction(NetworkAccess$lambda$62$Type.prototype.apply_0, NetworkAccess$lambda$62$Type, []));
}
;
function NetworkAccess$lambda$62$Type(){
}

defineClass(1426, $wnd.Function, $intern_22, NetworkAccess$lambda$62$Type);
_.apply_0 = function apply_84(arg0){
  return $clinit_NetworkAccess() , castTo(arg0, 53).target;
}
;
function NetworkAccess$lambda$63$Type($$outer_0, cap_1, cacheKey_2, bat_3){
  this.$$outer_0 = $$outer_0;
  this.cap_1 = cap_1;
  this.cacheKey_2 = cacheKey_2;
  this.bat_3 = bat_3;
}

defineClass(1410, $wnd.Function, $intern_22, NetworkAccess$lambda$63$Type);
_.apply_0 = function apply_85(arg0){
  return $lambda$63(this.$$outer_0, this.cap_1, this.cacheKey_2, this.bat_3, arg0);
}
;
function NetworkAccess$lambda$64$Type(cap_0, btreeValue_1){
  this.cap_0 = cap_0;
  this.btreeValue_1 = btreeValue_1;
}

defineClass(1411, $wnd.Function, $intern_22, NetworkAccess$lambda$64$Type);
_.apply_0 = function apply_86(arg0){
  return lambda$64(this.cap_0, this.btreeValue_1, arg0);
}
;
function NetworkAccess$lambda$65$Type(cap_0, btreeValue_1){
  this.cap_0 = cap_0;
  this.btreeValue_1 = btreeValue_1;
}

defineClass(1413, $wnd.Function, $intern_22, NetworkAccess$lambda$65$Type);
_.apply_0 = function apply_87(arg0){
  return lambda$65(this.cap_0, this.btreeValue_1, arg0);
}
;
function NetworkAccess$lambda$66$Type($$outer_0, cacheKey_1){
  this.$$outer_0 = $$outer_0;
  this.cacheKey_1 = cacheKey_1;
}

defineClass(1412, $wnd.Function, $intern_22, NetworkAccess$lambda$66$Type);
_.apply_0 = function apply_88(arg0){
  return $lambda$66(this.$$outer_0, this.cacheKey_1, arg0);
}
;
function NetworkAccess$lambda$67$Type(){
}

defineClass(1369, $wnd.Function, $intern_22, NetworkAccess$lambda$67$Type);
_.apply_0 = function apply_89(arg0){
  return $clinit_NetworkAccess() , castTo(arg0, 246).data_0;
}
;
function NetworkAccess$lambda$68$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1370, $wnd.Function, $intern_22, NetworkAccess$lambda$68$Type);
_.apply_0 = function apply_90(arg0){
  return $lambda$68(this.$$outer_0, arg0);
}
;
function NetworkAccess$lambda$69$Type($$outer_0, fragments_1, owner_2, writer_3, tid_4, progressCounter_5){
  this.$$outer_0 = $$outer_0;
  this.fragments_1 = fragments_1;
  this.owner_2 = owner_2;
  this.writer_3 = writer_3;
  this.tid_4 = tid_4;
  this.progressCounter_5 = progressCounter_5;
}

defineClass(1371, $wnd.Function, $intern_22, NetworkAccess$lambda$69$Type);
_.apply_0 = function apply_91(arg0){
  return $lambda$69(this.$$outer_0, this.fragments_1, this.owner_2, this.writer_3, this.tid_4, this.progressCounter_5, arg0);
}
;
function NetworkAccess$lambda$7$Type(){
}

defineClass(1424, $wnd.Function, $intern_22, NetworkAccess$lambda$7$Type);
_.apply_0 = function apply_92(arg0){
  return $clinit_NetworkAccess() , $clinit_Boolean() , false;
}
;
function NetworkAccess$lambda$71$Type($$outer_0, owner_1, writer_2, metaBlob_3, tid_4){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.metaBlob_3 = metaBlob_3;
  this.tid_4 = tid_4;
}

defineClass(1372, $wnd.Function, $intern_22, NetworkAccess$lambda$71$Type);
_.apply_0 = function apply_93(arg0){
  return $lambda$71(this.$$outer_0, this.owner_1, this.writer_2, this.metaBlob_3, this.tid_4, arg0);
}
;
function NetworkAccess$lambda$72$Type($$outer_0, version_1, mapKey_2, metadata_3, committer_4, owner_5, writer_6, tid_7){
  this.$$outer_0 = $$outer_0;
  this.version_1 = version_1;
  this.mapKey_2 = mapKey_2;
  this.metadata_3 = metadata_3;
  this.committer_4 = committer_4;
  this.owner_5 = owner_5;
  this.writer_6 = writer_6;
  this.tid_7 = tid_7;
}

defineClass(1373, $wnd.Function, $intern_22, NetworkAccess$lambda$72$Type);
_.apply_0 = function apply_94(arg0){
  return $lambda$72(this.$$outer_0, this.version_1, this.mapKey_2, this.metadata_3, this.committer_4, this.owner_5, this.writer_6, this.tid_7, arg0);
}
;
function NetworkAccess$lambda$73$Type($$outer_0, version_1, mapKey_2, metadata_3, blobHash_4, committer_5, owner_6, writer_7, tid_8){
  this.$$outer_0 = $$outer_0;
  this.version_1 = version_1;
  this.mapKey_2 = mapKey_2;
  this.metadata_3 = metadata_3;
  this.blobHash_4 = blobHash_4;
  this.committer_5 = committer_5;
  this.owner_6 = owner_6;
  this.writer_7 = writer_7;
  this.tid_8 = tid_8;
}

defineClass(1415, $wnd.Function, $intern_22, NetworkAccess$lambda$73$Type);
_.apply_0 = function apply_95(arg0){
  return $lambda$73(this.$$outer_0, this.version_1, this.mapKey_2, this.metadata_3, this.blobHash_4, this.committer_5, this.owner_6, this.writer_7, this.tid_8, arg0);
}
;
function NetworkAccess$lambda$74$Type($$outer_0, version_1, wd_2, mapKey_3, metadata_4, blobHash_5){
  this.$$outer_0 = $$outer_0;
  this.version_1 = version_1;
  this.wd_2 = wd_2;
  this.mapKey_3 = mapKey_3;
  this.metadata_4 = metadata_4;
  this.blobHash_5 = blobHash_5;
}

defineClass(1416, $wnd.Function, $intern_22, NetworkAccess$lambda$74$Type);
_.apply_0 = function apply_96(arg0){
  return $lambda$74(this.$$outer_0, this.version_1, this.wd_2, this.mapKey_3, this.metadata_4, this.blobHash_5, arg0);
}
;
function NetworkAccess$lambda$75$Type(current_0, writer_1){
  this.current_0 = current_0;
  this.writer_1 = writer_1;
}

defineClass(1374, $wnd.Function, $intern_22, NetworkAccess$lambda$75$Type);
_.apply_0 = function apply_97(arg0){
  return lambda$75(this.current_0, this.writer_1, arg0);
}
;
function NetworkAccess$lambda$77$Type(committer_0, owner_1, writer_2, version_3, tid_4){
  this.committer_0 = committer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.version_3 = version_3;
  this.tid_4 = tid_4;
}

defineClass(1375, $wnd.Function, $intern_22, NetworkAccess$lambda$77$Type);
_.apply_0 = function apply_98(arg0){
  return lambda$77(this.committer_0, this.owner_1, this.writer_2, this.version_3, this.tid_4, arg0);
}
;
function NetworkAccess$lambda$78$Type(current_0, writer_1){
  this.current_0 = current_0;
  this.writer_1 = writer_1;
}

defineClass(1376, $wnd.Function, $intern_22, NetworkAccess$lambda$78$Type);
_.apply_0 = function apply_99(arg0){
  return lambda$78(this.current_0, this.writer_1, arg0);
}
;
function NetworkAccess$lambda$79$Type($$outer_0, committer_1, owner_2, writer_3, version_4, tid_5, current_6, mapKey_7){
  this.$$outer_0 = $$outer_0;
  this.committer_1 = committer_1;
  this.owner_2 = owner_2;
  this.writer_3 = writer_3;
  this.version_4 = version_4;
  this.tid_5 = tid_5;
  this.current_6 = current_6;
  this.mapKey_7 = mapKey_7;
}

defineClass(1377, $wnd.Function, $intern_22, NetworkAccess$lambda$79$Type);
_.apply_0 = function apply_100(arg0){
  return $lambda$79(this.$$outer_0, this.committer_1, this.owner_2, this.writer_3, this.version_4, this.tid_5, this.current_6, this.mapKey_7, arg0);
}
;
function NetworkAccess$lambda$8$Type(cacheSizeKiB_0, hasher_1, onlineState_2){
  this.cacheSizeKiB_0 = cacheSizeKiB_0;
  this.hasher_1 = hasher_1;
  this.onlineState_2 = onlineState_2;
}

defineClass(1359, $wnd.Function, $intern_22, NetworkAccess$lambda$8$Type);
_.apply_0 = function apply_101(arg0){
  return lambda$8(this.cacheSizeKiB_0, this.hasher_1, this.onlineState_2, arg0);
}
;
_.cacheSizeKiB_0 = 0;
function NetworkAccess$lambda$80$Type(committer_0, owner_1, writer_2, version_3, tid_4){
  this.committer_0 = committer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.version_3 = version_3;
  this.tid_4 = tid_4;
}

defineClass(1417, $wnd.Function, $intern_22, NetworkAccess$lambda$80$Type);
_.apply_0 = function apply_102(arg0){
  return lambda$80(this.committer_0, this.owner_1, this.writer_2, this.version_3, this.tid_4, arg0);
}
;
function NetworkAccess$lambda$81$Type(current_0, writer_1){
  this.current_0 = current_0;
  this.writer_1 = writer_1;
}

defineClass(1378, $wnd.Function, $intern_22, NetworkAccess$lambda$81$Type);
_.apply_0 = function apply_103(arg0){
  return lambda$81(this.current_0, this.writer_1, arg0);
}
;
function NetworkAccess$lambda$82$Type($$outer_0, version_1, owner_2, writer_3){
  this.$$outer_0 = $$outer_0;
  this.version_1 = version_1;
  this.owner_2 = owner_2;
  this.writer_3 = writer_3;
}

defineClass(1379, $wnd.Function, $intern_22, NetworkAccess$lambda$82$Type);
_.apply_0 = function apply_104(arg0){
  return $lambda$82(this.$$outer_0, this.version_1, this.owner_2, this.writer_3, arg0);
}
;
function NetworkAccess$lambda$83$Type(mapKey_0){
  this.mapKey_0 = mapKey_0;
}

defineClass(1418, $wnd.Function, $intern_22, NetworkAccess$lambda$83$Type);
_.apply_0 = function apply_105(arg0){
  return $clinit_NetworkAccess() , new Pair(this.mapKey_0, castTo(arg0, 93));
}
;
function NetworkAccess$lambda$84$Type($$outer_0, owner_1, writer_2, tid_3){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.tid_3 = tid_3;
}

defineClass(577, 1, $intern_34, NetworkAccess$lambda$84$Type);
_.apply_1 = function apply_106(arg0, arg1){
  return $lambda$84(this.$$outer_0, this.owner_1, this.writer_2, this.tid_3, arg0, arg1);
}
;
var Lpeergos_shared_NetworkAccess$lambda$84$Type_2_classLit = createForClass('peergos.shared', 'NetworkAccess/lambda$84$Type', 577);
function NetworkAccess$lambda$85$Type(){
}

defineClass(578, 1, $intern_34, NetworkAccess$lambda$85$Type);
_.apply_1 = function apply_107(arg0, arg1){
  return $clinit_NetworkAccess() , castTo(arg1, 121);
}
;
var Lpeergos_shared_NetworkAccess$lambda$85$Type_2_classLit = createForClass('peergos.shared', 'NetworkAccess/lambda$85$Type', 578);
function NetworkAccess$lambda$86$Type($$outer_0, wd_1, owner_2, writer_3, tid_4){
  this.$$outer_0 = $$outer_0;
  this.wd_1 = wd_1;
  this.owner_2 = owner_2;
  this.writer_3 = writer_3;
  this.tid_4 = tid_4;
}

defineClass(1419, $wnd.Function, $intern_22, NetworkAccess$lambda$86$Type);
_.apply_0 = function apply_108(arg0){
  return $lambda$86(this.$$outer_0, this.wd_1, this.owner_2, this.writer_3, this.tid_4, arg0);
}
;
function NetworkAccess$lambda$87$Type(committer_0, owner_1, writer_2, version_3, tid_4){
  this.committer_0 = committer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.version_3 = version_3;
  this.tid_4 = tid_4;
}

defineClass(1380, $wnd.Function, $intern_22, NetworkAccess$lambda$87$Type);
_.apply_0 = function apply_109(arg0){
  return lambda$87(this.committer_0, this.owner_1, this.writer_2, this.version_3, this.tid_4, arg0);
}
;
function NetworkAccess$lambda$88$Type(current_0, writer_1){
  this.current_0 = current_0;
  this.writer_1 = writer_1;
}

defineClass(1381, $wnd.Function, $intern_22, NetworkAccess$lambda$88$Type);
_.apply_0 = function apply_110(arg0){
  return lambda$88(this.current_0, this.writer_1, arg0);
}
;
function NetworkAccess$lambda$89$Type(){
}

defineClass(1382, $wnd.Function, $intern_22, NetworkAccess$lambda$89$Type);
_.apply_0 = function apply_111(arg0){
  return $clinit_NetworkAccess() , $clinit_Boolean() , castTo(arg0, 93).hash_0?true:false;
}
;
function $apply_2(this$static, arg0){
  return lambda$9_0(this$static.cacheSizeKiB_0, this$static.hasher_1, arg0);
}

function NetworkAccess$lambda$9$Type(cacheSizeKiB_0, hasher_1){
  this.cacheSizeKiB_0 = cacheSizeKiB_0;
  this.hasher_1 = hasher_1;
}

defineClass(1384, $wnd.Function, $intern_22, NetworkAccess$lambda$9$Type);
_.apply_0 = function apply_112(arg0){
  return $apply_2(this, arg0);
}
;
_.cacheSizeKiB_0 = 0;
function NetworkAccess$lambda$90$Type(){
}

defineClass(238, 1, {}, NetworkAccess$lambda$90$Type);
_.apply_2 = function apply_113(arg0){
  return $clinit_NetworkAccess() , valueOf_1(arg0);
}
;
var Lpeergos_shared_NetworkAccess$lambda$90$Type_2_classLit = createForClass('peergos.shared', 'NetworkAccess/lambda$90$Type', 238);
function NetworkAccess$lambda$91$Type(monitor_0, spaceIncreaseFactor_1, hashes_3, dhtClient_4, owner_5, bats_6){
  this.monitor_0 = monitor_0;
  this.spaceIncreaseFactor_1 = spaceIncreaseFactor_1;
  this.hashes_3 = hashes_3;
  this.dhtClient_4 = dhtClient_4;
  this.owner_5 = owner_5;
  this.bats_6 = bats_6;
}

defineClass(330, $wnd.Function, $intern_22, NetworkAccess$lambda$91$Type);
_.apply_0 = function apply_114(arg0){
  return lambda$91(this.monitor_0, this.spaceIncreaseFactor_1, this.hashes_3, this.dhtClient_4, this.owner_5, this.bats_6, arg0);
}
;
_.spaceIncreaseFactor_1 = 0;
function NetworkAccess$lambda$92$Type(){
}

defineClass(1420, $wnd.Function, $intern_22, NetworkAccess$lambda$92$Type);
_.apply_0 = function apply_115(arg0){
  return $clinit_NetworkAccess() , $map(castTo(arg0, 12), makeLambdaFunction(NetworkAccess$lambda$93$Type.prototype.apply_0, NetworkAccess$lambda$93$Type, []));
}
;
function NetworkAccess$lambda$93$Type(){
}

defineClass(1427, $wnd.Function, $intern_22, NetworkAccess$lambda$93$Type);
_.apply_0 = function apply_116(arg0){
  return $clinit_NetworkAccess() , castTo(castTo(arg0, 48), 27).value_0;
}
;
function NetworkAccess$lambda$94$Type(h_0, monitor_1, spaceIncreaseFactor_2){
  this.h_0 = h_0;
  this.monitor_1 = monitor_1;
  this.spaceIncreaseFactor_2 = spaceIncreaseFactor_2;
}

defineClass(1421, $wnd.Function, $intern_22, NetworkAccess$lambda$94$Type);
_.apply_0 = function apply_117(arg0){
  return lambda$94(this.h_0, this.monitor_1, this.spaceIncreaseFactor_2, arg0);
}
;
_.spaceIncreaseFactor_2 = 0;
function NetworkAccess$lambda$95$Type(monitor_0, spaceIncreaseFactor_1){
  this.monitor_0 = monitor_0;
  this.spaceIncreaseFactor_1 = spaceIncreaseFactor_1;
}

defineClass(579, 1, $intern_32, NetworkAccess$lambda$95$Type);
_.accept = function accept_32(arg0){
  lambda$95(this.monitor_0, this.spaceIncreaseFactor_1, arg0);
}
;
_.andThen = function andThen_14(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
_.spaceIncreaseFactor_1 = 0;
var Lpeergos_shared_NetworkAccess$lambda$95$Type_2_classLit = createForClass('peergos.shared', 'NetworkAccess/lambda$95$Type', 579);
function NetworkAccess$lambda$96$Type(h_0){
  this.h_0 = h_0;
}

defineClass(1422, $wnd.Function, $intern_22, NetworkAccess$lambda$96$Type);
_.apply_0 = function apply_118(arg0){
  return lambda$96(this.h_0, arg0);
}
;
function NetworkAccess$lambda$97$Type(){
}

defineClass(331, $wnd.Function, $intern_22, NetworkAccess$lambda$97$Type);
_.apply_0 = function apply_119(arg0){
  return $clinit_NetworkAccess() , castTo($collect_0($map_0($filter(castTo(arg0, 17).stream(), new NetworkAccess$2methodref$isPresent$Type), makeLambdaFunction(NetworkAccess$3methodref$get$Type.prototype.apply_0, NetworkAccess$3methodref$get$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
}
;
function $isOfflineException(this$static, t){
  if ($toString_0(t, t.getMessage()).indexOf('ConnectException') != -1) {
    this$static.testedState.value_0 = false;
    return true;
  }
  return false;
}

function $update_2(this$static){
  var now_0;
  if (!this$static.testedState.value_0) {
    now_0 = ($clinit_System() , fromDouble_0(Date.now()));
    if (gt(now_0, add_1(this$static.lastUpdate, $intern_21))) {
      this$static.lastUpdate = now_0;
      $thenAccept($get_10(this$static.updater), new OnlineState$0methodref$set$Type(this$static.testedState));
    }
  }
}

function $updateAsync(this$static){
  $execute(($clinit_ForkJoinPool() , $clinit_ForkJoinPool() , instance_0), new OnlineState$1methodref$update$Type(this$static));
}

function OnlineState(updater){
  this.testedState = new AtomicBoolean_0;
  this.updater = updater;
}

defineClass(644, 1, {}, OnlineState);
_.lastUpdate = 0;
var Lpeergos_shared_OnlineState_2_classLit = createForClass('peergos.shared', 'OnlineState', 644);
function OnlineState$0methodref$set$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(645, 1, $intern_32, OnlineState$0methodref$set$Type);
_.accept = function accept_33(arg0){
  $set_3(this.$$outer_0, $booleanValue(castToBoolean(arg0)));
}
;
_.andThen = function andThen_15(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_OnlineState$0methodref$set$Type_2_classLit = createForClass('peergos.shared', 'OnlineState/0methodref$set$Type', 645);
function OnlineState$1methodref$update$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(646, 1, {}, OnlineState$1methodref$update$Type);
_.run = function run_2(){
  $update_2(this.$$outer_0);
}
;
var Lpeergos_shared_OnlineState$1methodref$update$Type_2_classLit = createForClass('peergos.shared', 'OnlineState/1methodref$update$Type', 646);
function $peekType(this$static){
  var p;
  p = $read_1(this$static.m_is);
  if (p < 0) {
    return null;
  }
  $unread(this$static.m_is, p);
  return new CborType((p & 255) >>> 5, p & 31);
}

function $readFully_0(this$static, buf){
  var count, len, n;
  len = buf.length;
  n = 0;
  while (n < len) {
    count = $read_2(this$static.m_is, buf, n, len - n);
    if (count < 0) {
      throw toJs(new EOFException);
    }
    n += count;
  }
  return buf;
}

function $readInt_0(this$static){
  var ib, ui, majorType;
  ib = $read_1(this$static.m_is);
  ui = (majorType = (ib & 255) >>> 5 , majorType != 0 && majorType != 1 && fail('Unexpected type: %s, expected type %s or %s!', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [getName_4(majorType), getName_4(0), getName_4(1)])) , -majorType);
  return xor_0(ui, $readUInt(this$static, ib & 31, false));
}

function $readMajorType(this$static, majorType){
  var ib;
  ib = $read_1(this$static.m_is);
  majorType != (ib >>> 5 & 7) && fail('Unexpected type: %s, expected: %s!', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [getName_4(ib), getName_4(majorType)]));
  return ib & 31;
}

function $readUInt(this$static, length_0, breakAllowed){
  var buf, result;
  result = -1;
  if (length_0 < 24) {
    result = length_0;
  }
   else if (length_0 == 24) {
    result = $read_1(this$static.m_is) & 255;
  }
   else if (length_0 == 25) {
    result = (buf = $readFully_0(this$static, initUnidimensionalArray(B_classLit, $intern_28, 8, 2, 15, 1)) , (buf[0] & 255) << 8 | buf[1] & 255);
  }
   else if (length_0 == 26) {
    result = (buf = $readFully_0(this$static, initUnidimensionalArray(B_classLit, $intern_28, 8, 4, 15, 1)) , and_0((buf[0] & 255) << 24 | (buf[1] & 255) << 16 | (buf[2] & 255) << 8 | buf[3] & 255, $intern_47));
  }
   else if (length_0 == 27) {
    result = (buf = $readFully_0(this$static, initUnidimensionalArray(B_classLit, $intern_28, 8, 8, 15, 1)) , or_0(or_0(or_0(or_0(or_0(or_0(or_0(shl_0(and_0(buf[0], 255), 56), shl_0(and_0(buf[1], 255), 48)), shl_0(and_0(buf[2], 255), 40)), shl_0(and_0(buf[3], 255), 32)), shl_0(and_0(buf[4], 255), 24)), shl_0(and_0(buf[5], 255), 16)), shl_0(and_0(buf[6], 255), 8)), and_0(buf[7], 255)));
  }
   else if (breakAllowed && length_0 == 31) {
    return -1;
  }
  compare_1(result, 0) < 0 && fail('Not well-formed CBOR integer found, invalid length: %d!', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [valueOf_2(result)]));
  return result;
}

function CborDecoder(is){
  if (!is) {
    throw toJs(new IllegalArgumentException_0('InputStream cannot be null!'));
  }
  this.m_is = new PushbackInputStream(is);
}

function fail(msg, args){
  throw toJs(new IOException(msg + $toString_4(new Arrays$ArrayList(args))));
}

defineClass(73, 1, {}, CborDecoder);
var Lpeergos_shared_cbor_CborDecoder_2_classLit = createForClass('peergos.shared.cbor', 'CborDecoder', 73);
function $writeArrayStart(this$static, length_0){
  if (length_0 < 0) {
    throw toJs(new IllegalArgumentException_0('Invalid array-length!'));
  }
  $writeUInt(this$static, 128, length_0);
}

function $writeBoolean(this$static, value_0){
  $write_1(this$static.m_os, 224 | (value_0?21:20) & 31);
}

function $writeInt_0(this$static, value_0){
  var mt, sign;
  sign = shr_0(value_0, 63);
  mt = toInt_0(and_0(sign, 32));
  value_0 = xor_0(sign, value_0);
  compare_1(value_0, 24) < 0?$write_1(this$static.m_os, toInt_0(or_0(mt, value_0))):compare_1(value_0, 256) < 0?$writeUInt8(this$static, mt, toInt_0(value_0)):compare_1(value_0, $intern_19) < 0?$writeUInt16(this$static, mt, toInt_0(value_0)):compare_1(value_0, $intern_43) < 0?$writeUInt32(this$static, mt, toInt_0(value_0)):$writeUInt64(this$static, mt, value_0);
}

function $writeMapStart(this$static, length_0){
  if (length_0 < 0) {
    throw toJs(new IllegalArgumentException_0('Invalid length of map!'));
  }
  $writeUInt(this$static, 160, length_0);
}

function $writeString(this$static, majorType, bytes){
  var len;
  len = bytes == null?0:bytes.length;
  compare_1(len, 24) < 0?$write_1(this$static.m_os, toInt_0(or_0(majorType << 5, len))):compare_1(len, 256) < 0?$writeUInt8(this$static, majorType << 5, toInt_0(len)):compare_1(len, $intern_19) < 0?$writeUInt16(this$static, majorType << 5, toInt_0(len)):compare_1(len, $intern_43) < 0?$writeUInt32(this$static, majorType << 5, toInt_0(len)):$writeUInt64(this$static, majorType << 5, len);
  len > 0 && $write(this$static.m_os, bytes);
}

function $writeTextString(this$static, value_0){
  $writeString(this$static, 3, value_0 == null?null:$getBytes(value_0, getCharset('UTF-8')));
}

function $writeUInt(this$static, mt, value_0){
  compare_1(value_0, 24) < 0?$write_1(this$static.m_os, toInt_0(or_0(mt, value_0))):compare_1(value_0, 256) < 0?$writeUInt8(this$static, mt, toInt_0(value_0)):compare_1(value_0, $intern_19) < 0?$writeUInt16(this$static, mt, toInt_0(value_0)):compare_1(value_0, $intern_43) < 0?$writeUInt32(this$static, mt, toInt_0(value_0)):$writeUInt64(this$static, mt, value_0);
}

function $writeUInt16(this$static, mt, value_0){
  $write_1(this$static.m_os, mt | 25);
  $write_1(this$static.m_os, value_0 >> 8);
  $write_1(this$static.m_os, value_0 & 255);
}

function $writeUInt32(this$static, mt, value_0){
  $write_1(this$static.m_os, mt | 26);
  $write_1(this$static.m_os, value_0 >> 24);
  $write_1(this$static.m_os, value_0 >> 16);
  $write_1(this$static.m_os, value_0 >> 8);
  $write_1(this$static.m_os, value_0 & 255);
}

function $writeUInt64(this$static, mt, value_0){
  $write_1(this$static.m_os, mt | 27);
  $write_1(this$static.m_os, toInt_0(shr_0(value_0, 56)));
  $write_1(this$static.m_os, toInt_0(shr_0(value_0, 48)));
  $write_1(this$static.m_os, toInt_0(shr_0(value_0, 40)));
  $write_1(this$static.m_os, toInt_0(shr_0(value_0, 32)));
  $write_1(this$static.m_os, toInt_0(shr_0(value_0, 24)));
  $write_1(this$static.m_os, toInt_0(shr_0(value_0, 16)));
  $write_1(this$static.m_os, toInt_0(shr_0(value_0, 8)));
  $write_1(this$static.m_os, toInt_0(and_0(value_0, 255)));
}

function $writeUInt8(this$static, mt, value_0){
  $write_1(this$static.m_os, mt | 24);
  $write_1(this$static.m_os, value_0 & 255);
}

function CborEncoder(os){
  this.m_os = os;
}

defineClass(1082, 1, {}, CborEncoder);
var Lpeergos_shared_cbor_CborEncoder_2_classLit = createForClass('peergos.shared.cbor', 'CborEncoder', 1082);
function $toByteArray_2(this$static){
  var bout, encoder;
  bout = new ByteArrayOutputStream;
  encoder = new CborEncoder(bout);
  this$static.serialize_0(encoder);
  return $toByteArray(bout);
}

function deserialize(decoder, maxGroupSize){
  var $tmp, $tmp0, b, bytes, e, i, i0, key, nItems, nValues, res, result, st, tag, type_0, value_0, len, len_0;
  try {
    type_0 = $peekType(decoder);
    switch (type_0.m_major) {
      case 3:
        return new CborObject$CborString((len = $readUInt(decoder, $readMajorType(decoder, 3), true) , compare_1(len, 0) < 0 && fail('Infinite-length text strings not supported!', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [])) , compare_1(len, $intern_1) > 0 && fail('String length too long!', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [])) , compare_1(len, maxGroupSize) > 0 && fail('Invalid cbor: text string longer than original bytes!', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [])) , $create_1($readFully_0(decoder, initUnidimensionalArray(B_classLit, $intern_28, 8, toInt_0(len), 15, 1)))));
      case 2:
        return new CborObject$CborByteArray((len_0 = $readUInt(decoder, $readMajorType(decoder, 2), true) , compare_1(len_0, 0) < 0 && fail('Infinite-length byte strings not supported!', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [])) , compare_1(len_0, $intern_1) > 0 && fail('String length too long!', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [])) , compare_1(len_0, maxGroupSize) > 0 && fail('Invalid cbor: byte string longer than original bytes!', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [])) , $readFully_0(decoder, initUnidimensionalArray(B_classLit, $intern_28, 8, toInt_0(len_0), 15, 1))));
      case 1:
      case 0:
        return new CborObject$CborLong($readInt_0(decoder));
      case 7:
        if (type_0.m_additional == 22) {
          st = $readMajorType(decoder, 7);
          (st ^ 22) != 0 && fail('Unexpected subtype: %d, expected: %d!', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [valueOf_1(st), valueOf_1(22)]));
          return new CborObject$CborNull;
        }

        if (type_0.m_additional == 21) {
          b = $readMajorType(decoder, 7);
          b != 20 && b != 21 && fail('Unexpected boolean value: %d!', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [valueOf_1(b)]));
          return new CborObject$CborBoolean(true);
        }

        if (type_0.m_additional == 20) {
          b = $readMajorType(decoder, 7);
          b != 20 && b != 21 && fail('Unexpected boolean value: %d!', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [valueOf_1(b)]));
          return new CborObject$CborBoolean(false);
        }

        throw toJs(new IllegalStateException_0('Unimplemented simple type! ' + type_0.m_additional));
      case 5:
        {
          nValues = $readUInt(decoder, $readMajorType(decoder, 5), true);
          if (compare_1(nValues, maxGroupSize) > 0)
            throw toJs(new IllegalStateException_0('Invalid cbor: more map elements than original bytes!'));
          result = new TreeMap;
          for (i0 = 0; compare_1(i0, nValues) < 0; $tmp0 = i0 , i0 = add_1(i0, 1) , $tmp0) {
            key = castTo(deserialize(decoder, maxGroupSize), 13);
            value_0 = deserialize(decoder, maxGroupSize);
            $put_6(result, key, value_0);
          }
          return new CborObject$CborMap(result);
        }

      case 4:
        nItems = $readUInt(decoder, $readMajorType(decoder, 4), true);
        if (compare_1(nItems, maxGroupSize) > 0)
          throw toJs(new IllegalStateException_0('Invalid cbor: more array elements than original bytes!'));
        res = new ArrayList_0(toInt_0(nItems));
        for (i = 0; compare_1(i, nItems) < 0; $tmp = i , i = add_1(i, 1) , $tmp)
          $add(res, deserialize(decoder, maxGroupSize));
        return new CborObject$CborList(res);
      case 6:
        tag = $readUInt(decoder, $readMajorType(decoder, 6), false);
        if (compare_1(tag, 42) == 0) {
          value_0 = deserialize(decoder, maxGroupSize);
          if (instanceOf(value_0, 13))
            return new CborObject$CborMerkleLink(decode_2(castTo(value_0, 13).value_0));
          if (instanceOf(value_0, 27)) {
            bytes = castTo(value_0, 27).value_0;
            if (bytes[0] == 0)
              return new CborObject$CborMerkleLink(cast(copyOfRange(bytes, 1, bytes.length)));
            throw toJs(new IllegalStateException_0('Unknown Multibase decoding Merkle link: ' + bytes[0]));
          }
          throw toJs(new IllegalStateException_0('Invalid type for merkle link: ' + value_0));
        }

        throw toJs(new IllegalStateException_0('Unknown TAG in CBOR: ' + type_0.m_additional));
      default:throw toJs(new IllegalStateException_0('Unimplemented cbor type: ' + type_0));
    }
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 62)) {
      e = $e0;
      throw toJs(new RuntimeException_2(e));
    }
     else 
      throw toJs($e0);
  }
}

function fromByteArray(cbor){
  return deserialize(new CborDecoder(new ByteArrayInputStream(cbor)), cbor.length);
}

function read_9(in_0, maxBytes){
  return deserialize(new CborDecoder(in_0), maxBytes);
}

var Lpeergos_shared_cbor_CborObject_2_classLit = createForInterface('peergos.shared.cbor', 'CborObject');
function CborObject$CborBoolean(value_0){
  this.value_0 = value_0;
}

defineClass(63, 1, {48:1, 63:1, 7:1}, CborObject$CborBoolean);
_.serialize = function serialize_1(){
  return $toByteArray_2(this);
}
;
_.toByteArray_0 = function toByteArray(){
  return $toByteArray_2(this);
}
;
_.toCbor = function toCbor_1(){
  return this;
}
;
_.equals_0 = function equals_31(o){
  var that;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_cbor_CborObject$CborBoolean_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 63);
  return this.value_0 == that.value_0;
}
;
_.hashCode_1 = function hashCode_30(){
  return this.value_0?1:0;
}
;
_.links_0 = function links_1(){
  return $clinit_Collections() , $clinit_Collections() , EMPTY_LIST;
}
;
_.serialize_0 = function serialize_2(encoder){
  var e;
  try {
    $writeBoolean(encoder, this.value_0);
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 62)) {
      e = $e0;
      throw toJs(new RuntimeException_2(e));
    }
     else 
      throw toJs($e0);
  }
}
;
_.toString_0 = function toString_40(){
  return 'CborBoolean{' + this.value_0 + '}';
}
;
_.value_0 = false;
var Lpeergos_shared_cbor_CborObject$CborBoolean_2_classLit = createForClass('peergos.shared.cbor', 'CborObject/CborBoolean', 63);
function $compareTo_11(this$static, other){
  return compare_10(this$static.value_0, other.value_0);
}

function CborObject$CborByteArray(value_0){
  this.value_0 = value_0;
}

function compare_10(a, b){
  var i;
  if (a.length != b.length)
    return a.length - b.length;
  for (i = 0; i < a.length; i++)
    if (a[i] != b[i])
      return a[i] & 255 - b[i] & 255;
  return 0;
}

defineClass(27, 1, {57:1, 48:1, 27:1, 7:1}, CborObject$CborByteArray);
_.compareTo_0 = function compareTo_10(other){
  return $compareTo_11(this, castTo(other, 27));
}
;
_.serialize = function serialize_3(){
  return $toByteArray_2(this);
}
;
_.toByteArray_0 = function toByteArray_0(){
  return $toByteArray_2(this);
}
;
_.toCbor = function toCbor_2(){
  return this;
}
;
_.equals_0 = function equals_32(o){
  var that;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_cbor_CborObject$CborByteArray_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 27);
  return equals_16(this.value_0, that.value_0);
}
;
_.hashCode_1 = function hashCode_31(){
  return hashCode_17(this.value_0);
}
;
_.links_0 = function links_2(){
  return $clinit_Collections() , $clinit_Collections() , EMPTY_LIST;
}
;
_.serialize_0 = function serialize_4(encoder){
  var e;
  try {
    $writeString(encoder, 2, this.value_0);
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 62)) {
      e = $e0;
      throw toJs(new RuntimeException_2(e));
    }
     else 
      throw toJs($e0);
  }
}
;
var Lpeergos_shared_cbor_CborObject$CborByteArray_2_classLit = createForClass('peergos.shared.cbor', 'CborObject/CborByteArray', 27);
function $get_11(this$static, index_0, fromCbor){
  return fromCbor(this$static.value_0.getAtIndex(index_0));
}

function $getMap(this$static, toKey, toValue){
  var _value, i, key, map_0;
  if (this$static.value_0.size() % 2 != 0)
    throw toJs(new IllegalStateException);
  map_0 = new HashMap;
  for (i = 0; i < this$static.value_0.size(); i += 2) {
    key = $apply_4(this$static.value_0.getAtIndex(i));
    _value = $apply_5(this$static.value_0.getAtIndex(i + 1));
    $put_3(map_0.hashCodeMap, key, _value);
  }
  return map_0;
}

function $map_2(this$static, fromCbor){
  return castTo($collect_0($map_0(this$static.value_0.stream(), fromCbor), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
}

function CborObject$CborList(value_0){
  this.value_0 = value_0;
}

function CborObject$CborList_0(map_0){
  this.value_0 = castTo($collect_0($flatMap_0(new StreamImpl(null, (!map_0.entrySet && (map_0.entrySet = new Collections$UnmodifiableMap$UnmodifiableEntrySet(map_0.map_0.entrySet_0())) , new Spliterators$IteratorSpliterator(map_0.entrySet, 1))), makeLambdaFunction(CborObject$CborList$lambda$0$Type.prototype.apply_0, CborObject$CborList$lambda$0$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
}

function build_0(in_0, toCbor){
  return new CborObject$CborList(castTo($collect_0($map_0(in_0.stream(), toCbor), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17));
}

defineClass(21, 1, {48:1, 21:1, 7:1}, CborObject$CborList, CborObject$CborList_0);
_.serialize = function serialize_5(){
  return $toByteArray_2(this);
}
;
_.toByteArray_0 = function toByteArray_1(){
  return $toByteArray_2(this);
}
;
_.toCbor = function toCbor_3(){
  return this;
}
;
_.equals_0 = function equals_33(o){
  var cborList;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_cbor_CborObject$CborList_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  cborList = castTo(o, 21);
  return this.value_0?equals_Ljava_lang_Object__Z__devirtual$(this.value_0, cborList.value_0):!cborList.value_0;
}
;
_.hashCode_1 = function hashCode_32(){
  return this.value_0?hashCode__I__devirtual$(this.value_0):0;
}
;
_.links_0 = function links_3(){
  return castTo($collect_0($flatMap_0(this.value_0.stream(), makeLambdaFunction(CborObject$CborList$lambda$1$Type.prototype.apply_0, CborObject$CborList$lambda$1$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
}
;
_.serialize_0 = function serialize_6(encoder){
  var e, object, object$iterator;
  try {
    $writeArrayStart(encoder, this.value_0.size());
    for (object$iterator = this.value_0.iterator(); object$iterator.hasNext_0();) {
      object = castTo(object$iterator.next_1(), 7);
      object.toCbor().serialize_0(encoder);
    }
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 62)) {
      e = $e0;
      throw toJs(new RuntimeException_2(e));
    }
     else 
      throw toJs($e0);
  }
}
;
var Lpeergos_shared_cbor_CborObject$CborList_2_classLit = createForClass('peergos.shared.cbor', 'CborObject/CborList', 21);
function CborObject$CborList$lambda$0$Type(){
}

defineClass(1341, $wnd.Function, $intern_22, CborObject$CborList$lambda$0$Type);
_.apply_0 = function apply_120(arg0){
  return of_5(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_Cborable_2_classLit, 1), $intern_0, 7, 0, [castTo(castTo(arg0, 40).getKey(), 7), castTo(castTo(arg0, 40).getValue(), 7)]));
}
;
function CborObject$CborList$lambda$1$Type(){
}

defineClass(1342, $wnd.Function, $intern_22, CborObject$CborList$lambda$1$Type);
_.apply_0 = function apply_121(arg0){
  return castTo(arg0, 7).toCbor().links_0().stream();
}
;
function $compareTo_12(this$static, other){
  return compare_5(this$static.value_0, other.value_0);
}

function CborObject$CborLong(value_0){
  this.value_0 = value_0;
}

defineClass(29, 1, {57:1, 48:1, 29:1, 7:1}, CborObject$CborLong);
_.compareTo_0 = function compareTo_11(other){
  return $compareTo_12(this, castTo(other, 29));
}
;
_.serialize = function serialize_7(){
  return $toByteArray_2(this);
}
;
_.toByteArray_0 = function toByteArray_2(){
  return $toByteArray_2(this);
}
;
_.toCbor = function toCbor_4(){
  return this;
}
;
_.equals_0 = function equals_34(o){
  var cborLong;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_cbor_CborObject$CborLong_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  cborLong = castTo(o, 29);
  return eq(this.value_0, cborLong.value_0);
}
;
_.hashCode_1 = function hashCode_33(){
  return toInt_0(xor_0(this.value_0, shru_0(this.value_0, 32)));
}
;
_.links_0 = function links_4(){
  return $clinit_Collections() , $clinit_Collections() , EMPTY_LIST;
}
;
_.serialize_0 = function serialize_8(encoder){
  var e;
  try {
    $writeInt_0(encoder, this.value_0);
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 62)) {
      e = $e0;
      throw toJs(new RuntimeException_2(e));
    }
     else 
      throw toJs($e0);
  }
}
;
_.toString_0 = function toString_41(){
  return 'CborLong{' + toString_4(this.value_0) + '}';
}
;
_.value_0 = 0;
var Lpeergos_shared_cbor_CborObject$CborLong_2_classLit = createForClass('peergos.shared.cbor', 'CborObject/CborLong', 29);
function $applyToAll(this$static, func){
  $forEach(new TreeMap$EntrySet(this$static.values_0), new CborObject$CborMap$lambda$8$Type(func));
}

function $get_12(this$static, key){
  return castTo($get_0(this$static.values_0, new CborObject$CborString(key)), 7);
}

function $get_13(this$static, key, fromCbor){
  return fromCbor(castTo($get_0(this$static.values_0, new CborObject$CborString(key)), 7));
}

function $getBoolean(this$static){
  var val;
  val = castTo($get_0(this$static.values_0, new CborObject$CborString('l')), 7);
  if (!val)
    return false;
  return castTo(val, 63).value_0;
}

function $getList(this$static, key, fromCbor){
  var cborList;
  cborList = castTo(castTo($get_0(this$static.values_0, new CborObject$CborString(key)), 7), 21);
  if (!cborList)
    return $clinit_Collections() , $clinit_Collections() , EMPTY_LIST;
  return castTo($collect_0($map_0(cborList.value_0.stream(), fromCbor), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
}

function $getListMap(this$static, toKey, toValue){
  var val;
  val = castTo(castTo($get_0(this$static.values_0, new CborObject$CborString('m')), 7), 21);
  if (!val)
    return $clinit_Collections() , $clinit_Collections() , EMPTY_MAP;
  return $getMap(val, toKey, toValue);
}

function $getMap_0(this$static, toKey, toValue){
  var val;
  val = castTo(castTo($get_0(this$static.values_0, new CborObject$CborString('g')), 7), 18);
  if (!val)
    return $clinit_Collections() , $clinit_Collections() , EMPTY_MAP;
  return castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(val.values_0), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$10$Type.prototype.apply_0, CborObject$CborMap$lambda$10$Type, [toKey]), makeLambdaFunction(CborObject$CborMap$lambda$11$Type.prototype.apply_0, CborObject$CborMap$lambda$11$Type, [toValue]), new Collectors$lambda$44$Type, new Collectors$22methodref$ctor$Type)), 68);
}

function $getObject(this$static, key, fromCbor){
  return fromCbor(castTo($get_0(this$static.values_0, new CborObject$CborString(key)), 7));
}

function $getOptional(this$static, key, fromCbor){
  return $map(ofNullable(castTo($get_0(this$static.values_0, new CborObject$CborString(key)), 7)), fromCbor);
}

function $getString(this$static, key, defaultValue){
  var cborKey, val;
  cborKey = new CborObject$CborString(key);
  val = castTo($get_0(this$static.values_0, cborKey), 7);
  return val?castTo(val, 13).value_0:defaultValue;
}

function $put_9(this$static, val){
  $put_6(this$static.values_0, new CborObject$CborString('n'), val);
}

function $toMap(this$static, toKey, toValue){
  return castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(this$static.values_0), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$10$Type.prototype.apply_0, CborObject$CborMap$lambda$10$Type, [toKey]), makeLambdaFunction(CborObject$CborMap$lambda$11$Type.prototype.apply_0, CborObject$CborMap$lambda$11$Type, [toValue]), new Collectors$lambda$44$Type, new Collectors$22methodref$ctor$Type)), 68);
}

function CborObject$CborMap(values){
  this.values_0 = values;
}

function lambda$8_0(func_0, e_1){
  $accept_3(func_0, castTo(e_1.getKey(), 13).value_0, castTo(e_1.getValue(), 7));
}

defineClass(18, 1, {48:1, 18:1, 7:1}, CborObject$CborMap);
_.serialize = function serialize_9(){
  return $toByteArray_2(this);
}
;
_.toByteArray_0 = function toByteArray_3(){
  return $toByteArray_2(this);
}
;
_.toCbor = function toCbor_5(){
  return this;
}
;
_.equals_0 = function equals_35(o){
  var cborMap;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_cbor_CborObject$CborMap_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  cborMap = castTo(o, 18);
  return this.values_0?$equals_4(this.values_0, cborMap.values_0):!cborMap.values_0;
}
;
_.hashCode_1 = function hashCode_34(){
  return this.values_0?hashCode_21(new TreeMap$EntrySet(this.values_0)):0;
}
;
_.links_0 = function links_5(){
  return castTo($collect_0($flatMap_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new AbstractMap$2(this.values_0), 0)), makeLambdaFunction(CborObject$CborMap$lambda$9$Type.prototype.apply_0, CborObject$CborMap$lambda$9$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
}
;
_.serialize_0 = function serialize_10(encoder){
  var e, entry, entry$iterator;
  try {
    $writeMapStart(encoder, this.values_0.size_0);
    for (entry$iterator = new TreeMap$EntryIterator((new TreeMap$EntrySet(this.values_0)).this$01_0); $hasNext(entry$iterator.iter);) {
      entry = entry$iterator.last = castTo($next(entry$iterator.iter), 40);
      $serialize(castTo(entry.getKey(), 13), encoder);
      castTo(entry.getValue(), 48).toCbor().serialize_0(encoder);
    }
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 62)) {
      e = $e0;
      throw toJs(new RuntimeException_2(e));
    }
     else 
      throw toJs($e0);
  }
}
;
var Lpeergos_shared_cbor_CborObject$CborMap_2_classLit = createForClass('peergos.shared.cbor', 'CborObject/CborMap', 18);
function CborObject$CborMap$0methodref$ctor$Type(){
}

defineClass(38, 1, {}, CborObject$CborMap$0methodref$ctor$Type);
_.get_0 = function get_28(){
  return new TreeMap;
}
;
var Lpeergos_shared_cbor_CborObject$CborMap$0methodref$ctor$Type_2_classLit = createForClass('peergos.shared.cbor', 'CborObject/CborMap/0methodref$ctor$Type', 38);
function CborObject$CborMap$lambda$0$Type(){
}

defineClass(41, $wnd.Function, $intern_22, CborObject$CborMap$lambda$0$Type);
_.apply_0 = function apply_122(arg0){
  return new CborObject$CborString(castToString(castTo(arg0, 40).getKey()));
}
;
function CborObject$CborMap$lambda$1$Type(){
}

defineClass(42, $wnd.Function, $intern_22, CborObject$CborMap$lambda$1$Type);
_.apply_0 = function apply_123(arg0){
  return castTo(castTo(arg0, 40).getValue(), 7).toCbor();
}
;
function CborObject$CborMap$lambda$10$Type(toKey_0){
  this.toKey_0 = toKey_0;
}

defineClass(1184, $wnd.Function, $intern_22, CborObject$CborMap$lambda$10$Type);
_.apply_0 = function apply_124(arg0){
  return this.toKey_0.call(null, castTo(arg0, 40).getKey());
}
;
function CborObject$CborMap$lambda$11$Type(toValue_0){
  this.toValue_0 = toValue_0;
}

defineClass(1185, $wnd.Function, $intern_22, CborObject$CborMap$lambda$11$Type);
_.apply_0 = function apply_125(arg0){
  return this.toValue_0.call(null, castTo(arg0, 40).getValue());
}
;
function CborObject$CborMap$lambda$2$Type(){
}

defineClass(37, 1, $intern_34, CborObject$CborMap$lambda$2$Type);
_.apply_1 = function apply_126(arg0, arg1){
  return castTo(arg0, 48);
}
;
var Lpeergos_shared_cbor_CborObject$CborMap$lambda$2$Type_2_classLit = createForClass('peergos.shared.cbor', 'CborObject/CborMap/lambda$2$Type', 37);
function CborObject$CborMap$lambda$5$Type(){
}

defineClass(533, $wnd.Function, $intern_22, CborObject$CborMap$lambda$5$Type);
_.apply_0 = function apply_127(arg0){
  return castTo(arg0, 27).value_0;
}
;
function CborObject$CborMap$lambda$6$Type(){
}

defineClass(534, $wnd.Function, $intern_22, CborObject$CborMap$lambda$6$Type);
_.apply_0 = function apply_128(arg0){
  return valueOf_2(castTo(arg0, 29).value_0);
}
;
function CborObject$CborMap$lambda$8$Type(func_0){
  this.func_0 = func_0;
}

defineClass(564, 1, $intern_32, CborObject$CborMap$lambda$8$Type);
_.accept = function accept_34(arg0){
  lambda$8_0(this.func_0, arg0);
}
;
_.andThen = function andThen_16(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_cbor_CborObject$CborMap$lambda$8$Type_2_classLit = createForClass('peergos.shared.cbor', 'CborObject/CborMap/lambda$8$Type', 564);
function CborObject$CborMap$lambda$9$Type(){
}

defineClass(1247, $wnd.Function, $intern_22, CborObject$CborMap$lambda$9$Type);
_.apply_0 = function apply_129(arg0){
  return castTo(arg0, 48).toCbor().links_0().stream();
}
;
function $compareTo_13(this$static, that){
  return $compareTo_15(this$static.target, that.target);
}

function CborObject$CborMerkleLink(target){
  this.target = target;
}

defineClass(53, 1, {57:1, 48:1, 53:1, 7:1}, CborObject$CborMerkleLink);
_.compareTo_0 = function compareTo_12(that){
  return $compareTo_13(this, castTo(that, 53));
}
;
_.serialize = function serialize_11(){
  return $toByteArray_2(this);
}
;
_.toByteArray_0 = function toByteArray_4(){
  return $toByteArray_2(this);
}
;
_.toCbor = function toCbor_6(){
  return this;
}
;
_.equals_0 = function equals_36(o){
  var that;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_cbor_CborObject$CborMerkleLink_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 53);
  return this.target?this.target.equals(that.target):!that.target;
}
;
_.hashCode_1 = function hashCode_35(){
  return this.target?this.target.hashCode():0;
}
;
_.links_0 = function links_6(){
  return $clinit_Collections() , new Collections$SingletonList(this.target);
}
;
_.serialize_0 = function serialize_12(encoder){
  var cid, e, withMultibaseHeader;
  try {
    $write_1(encoder.m_os, 216);
    $write_1(encoder.m_os, 42);
    cid = this.target.toBytes();
    withMultibaseHeader = initUnidimensionalArray(B_classLit, $intern_28, 8, cid.length + 1, 15, 1);
    arraycopy(cid, 0, withMultibaseHeader, 1, cid.length);
    $writeString(encoder, 2, withMultibaseHeader);
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 62)) {
      e = $e0;
      throw toJs(new RuntimeException_2(e));
    }
     else 
      throw toJs($e0);
  }
}
;
_.toString_0 = function toString_42(){
  return this.target.toString();
}
;
var Lpeergos_shared_cbor_CborObject$CborMerkleLink_2_classLit = createForClass('peergos.shared.cbor', 'CborObject/CborMerkleLink', 53);
function CborObject$CborNull(){
}

defineClass(214, 1, {57:1, 48:1, 214:1, 7:1}, CborObject$CborNull);
_.compareTo_0 = function compareTo_13(cborNull){
  return castTo(cborNull, 214) , 0;
}
;
_.serialize = function serialize_13(){
  return $toByteArray_2(this);
}
;
_.toByteArray_0 = function toByteArray_5(){
  return $toByteArray_2(this);
}
;
_.toCbor = function toCbor_7(){
  return this;
}
;
_.equals_0 = function equals_37(o){
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_cbor_CborObject$CborNull_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  return true;
}
;
_.hashCode_1 = function hashCode_36(){
  return 0;
}
;
_.links_0 = function links_7(){
  return $clinit_Collections() , $clinit_Collections() , EMPTY_LIST;
}
;
_.serialize_0 = function serialize_14(encoder){
  var e;
  try {
    $write_1(encoder.m_os, 246);
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 62)) {
      e = $e0;
      throw toJs(new RuntimeException_2(e));
    }
     else 
      throw toJs($e0);
  }
}
;
_.toString_0 = function toString_43(){
  return 'CborNull{}';
}
;
var Lpeergos_shared_cbor_CborObject$CborNull_2_classLit = createForClass('peergos.shared.cbor', 'CborObject/CborNull', 214);
function $compareTo_14(this$static, cborString){
  var lenDiff;
  lenDiff = this$static.value_0.length - cborString.value_0.length;
  if (lenDiff != 0)
    return lenDiff;
  return $compareTo_5(this$static.value_0, cborString.value_0);
}

function $serialize(this$static, encoder){
  var e;
  try {
    $writeTextString(encoder, this$static.value_0);
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 62)) {
      e = $e0;
      throw toJs(new RuntimeException_2(e));
    }
     else 
      throw toJs($e0);
  }
}

function CborObject$CborString(value_0){
  this.value_0 = value_0;
}

defineClass(13, 1, {57:1, 48:1, 13:1, 7:1}, CborObject$CborString);
_.compareTo_0 = function compareTo_14(cborString){
  return $compareTo_14(this, castTo(cborString, 13));
}
;
_.serialize = function serialize_15(){
  return $toByteArray_2(this);
}
;
_.toByteArray_0 = function toByteArray_6(){
  return $toByteArray_2(this);
}
;
_.toCbor = function toCbor_8(){
  return this;
}
;
_.equals_0 = function equals_38(o){
  var that;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_cbor_CborObject$CborString_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 13);
  return $equals_0(this.value_0, that.value_0);
}
;
_.hashCode_1 = function hashCode_37(){
  return getHashCode_1(this.value_0);
}
;
_.links_0 = function links_8(){
  return $clinit_Collections() , $clinit_Collections() , EMPTY_LIST;
}
;
_.serialize_0 = function serialize_16(encoder){
  $serialize(this, encoder);
}
;
_.toString_0 = function toString_44(){
  return 'CborString{"' + this.value_0 + '"}';
}
;
var Lpeergos_shared_cbor_CborObject$CborString_2_classLit = createForClass('peergos.shared.cbor', 'CborObject/CborString', 13);
function CborType(major, additional){
  this.m_major = major;
  this.m_additional = additional;
}

function getName_4(mt){
  switch (mt) {
    case 4:
      return 'array';
    case 2:
      return 'byte string';
    case 7:
      return 'float/simple value';
    case 5:
      return 'map';
    case 1:
      return 'negative integer';
    case 6:
      return 'tag';
    case 3:
      return 'text string';
    case 0:
      return 'unsigned integer';
    default:throw toJs(new IllegalArgumentException_0('Invalid major type: ' + mt));
  }
}

defineClass(427, 1, {427:1}, CborType);
_.equals_0 = function equals_39(obj){
  var other;
  if (this === obj) {
    return true;
  }
  if (obj == null || Lpeergos_shared_cbor_CborType_2_classLit != getClass__Ljava_lang_Class___devirtual$(obj)) {
    return false;
  }
  other = castTo(obj, 427);
  return this.m_major == other.m_major && this.m_additional == other.m_additional;
}
;
_.hashCode_1 = function hashCode_38(){
  var result;
  result = 1;
  result = 31 * result + this.m_additional;
  result = 31 * result + this.m_major;
  return result;
}
;
_.toString_0 = function toString_45(){
  var sb;
  sb = new StringBuilder;
  $append($append_0($append($append_4(sb, getName_4(this.m_major)), 40), this.m_additional), 41);
  return sb.string;
}
;
_.m_additional = 0;
_.m_major = 0;
var Lpeergos_shared_cbor_CborType_2_classLit = createForClass('peergos.shared.cbor', 'CborType', 427);
function $apply_3(this$static, arg0){
  return lambda$0_2(this$static.parser_0, arg0);
}

function Cborable$lambda$0$Type(parser_0){
  this.parser_0 = parser_0;
}

defineClass(199, $wnd.Function, $intern_22, Cborable$lambda$0$Type);
_.apply_0 = function apply_130(arg0){
  return $apply_3(this, arg0);
}
;
function $getStorageProviders(this$static, owner){
  var username;
  username = (this$static.getUsername_0(owner) , $join());
  this$static.getChain_0(username);
  $join();
  if (null.$_nullMethod())
    return $clinit_Collections() , $clinit_Collections() , EMPTY_LIST;
  return null.$_nullMethod(null.$_nullMethod() - 1).$_nullField.$_nullField;
}

function CoreNode$lambda$0$Type(){
}

defineClass(1251, $wnd.Function, $intern_22, CoreNode$lambda$0$Type);
_.apply_0 = function apply_131(arg0){
  return castTo(arg0, 17).size() == 0?($clinit_Optional() , $clinit_Optional() , EMPTY):($clinit_Optional() , new Optional(checkCriticalNotNull(castTo(castTo(arg0, 17).getAtIndex(castTo(arg0, 17).size() - 1), 72).owner)));
}
;
function $clinit_HTTPCoreNode(){
  $clinit_HTTPCoreNode = emptyMethod;
  LOG_0 = ($clinit_Logger() , getLogger());
}

function $getChain(this$static, username){
  var bout, dout, ioe;
  try {
    bout = new ByteArrayOutputStream;
    dout = new DataOutputStream(bout);
    $writeInt(dout, username.length);
    $write_3(dout, $getBytes(username, ($clinit_EmulatedCharset() , UTF_8_0)));
    return $thenApply($postUnzip(this$static.poster, this$static.urlPrefix + 'peergos/v0/core/' + 'getChain', $toByteArray(bout)), makeLambdaFunction(HTTPCoreNode$lambda$2$Type.prototype.apply_0, HTTPCoreNode$lambda$2$Type, []));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 62)) {
      ioe = $e0;
      $log(LOG_0, ($clinit_Level() , WARNING), ioe.detailMessage, ioe);
      throw toJs(new IllegalStateException_1(ioe));
    }
     else 
      throw toJs($e0);
  }
}

function $getUsername(this$static, owner){
  var bout, dout, fut, ioe;
  try {
    bout = new ByteArrayOutputStream;
    dout = new DataOutputStream(bout);
    serialize_138($toByteArray_2(new CborObject$CborMerkleLink(owner.target)), dout);
    fut = $post(this$static.poster, this$static.urlPrefix + 'peergos/v0/core/' + 'getUsername', $toByteArray(bout));
    return $thenApply(fut, makeLambdaFunction(HTTPCoreNode$lambda$1$Type.prototype.apply_0, HTTPCoreNode$lambda$1$Type, []));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 62)) {
      ioe = $e0;
      $severe(LOG_0, "Couldn't connect to " + this$static.poster);
      $log(LOG_0, ($clinit_Level() , WARNING), ioe.detailMessage, ioe);
      return null;
    }
     else 
      throw toJs($e0);
  }
}

function HTTPCoreNode(direct){
  $clinit_HTTPCoreNode();
  $info(LOG_0, 'Creating HTTP Corenode API at ' + direct);
  this.poster = direct;
  this.urlPrefix = '';
}

function lambda$0_3(res_0){
  $clinit_HTTPCoreNode();
  var din, e, publicKey;
  din = new DataInputStream(new ByteArrayInputStream(res_0));
  try {
    if ($readByte(din) == 0)
      return $clinit_Optional() , $clinit_Optional() , EMPTY;
    publicKey = deserializeByteArray(din, $intern_11);
    return $clinit_Optional() , new Optional(checkCriticalNotNull(fromCbor_23(deserialize(new CborDecoder(new ByteArrayInputStream(publicKey)), publicKey.length))));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 62)) {
      e = $e0;
      throw toJs(new RuntimeException_2(e));
    }
     else 
      throw toJs($e0);
  }
}

function lambda$1_0(res_0){
  $clinit_HTTPCoreNode();
  var din, e, username;
  din = new DataInputStream(new ByteArrayInputStream(res_0));
  try {
    username = deserializeString(din, 64);
    return username;
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 62)) {
      e = $e0;
      throw toJs(new RuntimeException_2(e));
    }
     else 
      throw toJs($e0);
  }
}

function lambda$2(res_0){
  $clinit_HTTPCoreNode();
  var cbor;
  cbor = deserialize(new CborDecoder(new ByteArrayInputStream(res_0)), res_0.length);
  if (!instanceOf(cbor, 21))
    throw toJs(new IllegalStateException_0('Invalid cbor for claim chain: ' + cbor));
  return castTo($collect_0($map_0(castTo(cbor, 21).value_0.stream(), makeLambdaFunction(HTTPCoreNode$0methodref$fromCbor$Type.prototype.apply_0, HTTPCoreNode$0methodref$fromCbor$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
}

function lambda$4_1(res_0){
  $clinit_HTTPCoreNode();
  var din, e, success;
  din = new DataInputStream(new ByteArrayInputStream(res_0));
  try {
    success = $readByte(din) != 0;
    if (success)
      return $clinit_Optional() , $clinit_Optional() , EMPTY;
    return $clinit_Optional() , new Optional(checkCriticalNotNull(new RequiredDifficulty($readInt(din))));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 62)) {
      e = $e0;
      throw toJs(new RuntimeException_2(e));
    }
     else 
      throw toJs($e0);
  }
}

function lambda$5_1(res_0){
  $clinit_HTTPCoreNode();
  var din, e, success;
  din = new DataInputStream(new ByteArrayInputStream(res_0));
  try {
    success = $readByte(din) != 0;
    if (success) {
      return new Either(fromCbor_71(fromByteArray(deserializeByteArray(din, $intern_65))), null);
    }
    return new Either(null, new RequiredDifficulty($readInt(din)));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 62)) {
      e = $e0;
      throw toJs(new RuntimeException_2(e));
    }
     else 
      throw toJs($e0);
  }
}

function lambda$7_0(res_0){
  $clinit_HTTPCoreNode();
  var din, e, success;
  din = new DataInputStream(new ByteArrayInputStream(res_0));
  try {
    success = $readByte(din) != 0;
    if (success)
      return $clinit_Optional() , $clinit_Optional() , EMPTY;
    return $clinit_Optional() , new Optional(checkCriticalNotNull(new RequiredDifficulty($readInt(din))));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 62)) {
      e = $e0;
      throw toJs(new RuntimeException_2(e));
    }
     else 
      throw toJs($e0);
  }
}

defineClass(954, 1, {}, HTTPCoreNode);
_.getStorageProviders = function getStorageProviders(owner){
  return $getStorageProviders(this, owner);
}
;
_.updateUser = function updateUser(username){
  return new CompletableFuture_0(($clinit_Boolean() , true));
}
;
_.completePaidSignup = function completePaidSignup(username, chain, setupOperations, signedspaceRequest, proof){
  var bout, dout, ioe;
  try {
    bout = new ByteArrayOutputStream;
    dout = new DataOutputStream(bout);
    $writeInt(dout, username.length);
    $write_3(dout, $getBytes(username, ($clinit_EmulatedCharset() , UTF_8_0)));
    serialize_138($toByteArray_2($toCbor_3(chain)), dout);
    serialize_138($toByteArray_2($toCbor_0(setupOperations)), dout);
    serialize_138($toByteArray_2($toCbor_8(proof)), dout);
    $writeInt(dout, signedspaceRequest.length);
    signedspaceRequest.length > 0 && (checkCriticalNotNull(signedspaceRequest) , $write_0(dout, signedspaceRequest, 0, signedspaceRequest.length));
    return $thenApply($postUnzip(this.poster, this.urlPrefix + 'peergos/v0/core/' + 'completePaidSignup', $toByteArray(bout)), makeLambdaFunction(HTTPCoreNode$lambda$6$Type.prototype.apply_0, HTTPCoreNode$lambda$6$Type, []));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 62)) {
      ioe = $e0;
      $log(LOG_0, ($clinit_Level() , WARNING), ioe.detailMessage, ioe);
      return errored(ioe);
    }
     else 
      throw toJs($e0);
  }
}
;
_.getChain_0 = function getChain(username){
  return $getChain(this, username);
}
;
_.getPublicKeyHash = function getPublicKeyHash(username){
  var bout, dout, fut, ioe;
  try {
    bout = new ByteArrayOutputStream;
    dout = new DataOutputStream(bout);
    $writeInt(dout, username.length);
    $write_3(dout, $getBytes(username, ($clinit_EmulatedCharset() , UTF_8_0)));
    fut = $postUnzip(this.poster, this.urlPrefix + 'peergos/v0/core/' + 'getPublicKey', $toByteArray(bout));
    return $thenApply(fut, makeLambdaFunction(HTTPCoreNode$lambda$0$Type.prototype.apply_0, HTTPCoreNode$lambda$0$Type, []));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 62)) {
      ioe = $e0;
      $log(LOG_0, ($clinit_Level() , WARNING), ioe.detailMessage, ioe);
      return new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY));
    }
     else 
      throw toJs($e0);
  }
}
;
_.getUsername_0 = function getUsername(owner){
  return $getUsername(this, owner);
}
;
_.signup = function signup_0(username, chain, ops, proof, token){
  var bout, dout, ioe;
  try {
    bout = new ByteArrayOutputStream;
    dout = new DataOutputStream(bout);
    $writeInt(dout, username.length);
    $write_3(dout, $getBytes(username, ($clinit_EmulatedCharset() , UTF_8_0)));
    serialize_138($toByteArray_2($toCbor_3(chain)), dout);
    serialize_138($toByteArray_2($toCbor_0(ops)), dout);
    serialize_138($toByteArray_2($toCbor_8(proof)), dout);
    $writeInt(dout, token.length);
    $write_3(dout, $getBytes(token, UTF_8_0));
    return $thenApply($postUnzip(this.poster, this.urlPrefix + 'peergos/v0/core/' + 'signup', $toByteArray(bout)), makeLambdaFunction(HTTPCoreNode$lambda$4$Type.prototype.apply_0, HTTPCoreNode$lambda$4$Type, []));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 62)) {
      ioe = $e0;
      $log(LOG_0, ($clinit_Level() , WARNING), ioe.detailMessage, ioe);
      return errored(ioe);
    }
     else 
      throw toJs($e0);
  }
}
;
_.startPaidSignup = function startPaidSignup(username, chain, proof){
  var bout, dout, ioe;
  try {
    bout = new ByteArrayOutputStream;
    dout = new DataOutputStream(bout);
    $writeInt(dout, username.length);
    $write_3(dout, $getBytes(username, ($clinit_EmulatedCharset() , UTF_8_0)));
    serialize_138($toByteArray_2($toCbor_3(chain)), dout);
    serialize_138($toByteArray_2($toCbor_8(proof)), dout);
    return $thenApply($postUnzip(this.poster, this.urlPrefix + 'peergos/v0/core/' + 'startPaidSignup', $toByteArray(bout)), makeLambdaFunction(HTTPCoreNode$lambda$5$Type.prototype.apply_0, HTTPCoreNode$lambda$5$Type, []));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 62)) {
      ioe = $e0;
      $log(LOG_0, ($clinit_Level() , WARNING), ioe.detailMessage, ioe);
      return errored(ioe);
    }
     else 
      throw toJs($e0);
  }
}
;
_.updateChain = function updateChain(username, chain, proof, token){
  var bout, dout, ioe;
  try {
    bout = new ByteArrayOutputStream;
    dout = new DataOutputStream(bout);
    $writeInt(dout, username.length);
    $write_3(dout, $getBytes(username, ($clinit_EmulatedCharset() , UTF_8_0)));
    serialize_138($toByteArray_2(new CborObject$CborList(chain)), dout);
    serialize_138($toByteArray_2($toCbor_8(proof)), dout);
    $writeInt(dout, token.length);
    $write_3(dout, $getBytes(token, UTF_8_0));
    return $thenApply($postUnzip(this.poster, this.urlPrefix + 'peergos/v0/core/' + 'updateChain', $toByteArray(bout)), makeLambdaFunction(HTTPCoreNode$lambda$7$Type.prototype.apply_0, HTTPCoreNode$lambda$7$Type, []));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 62)) {
      ioe = $e0;
      $log(LOG_0, ($clinit_Level() , WARNING), ioe.detailMessage, ioe);
      return errored(ioe);
    }
     else 
      throw toJs($e0);
  }
}
;
var LOG_0;
var Lpeergos_shared_corenode_HTTPCoreNode_2_classLit = createForClass('peergos.shared.corenode', 'HTTPCoreNode', 954);
function HTTPCoreNode$0methodref$fromCbor$Type(){
}

defineClass(3085, $wnd.Function, $intern_22, HTTPCoreNode$0methodref$fromCbor$Type);
_.apply_0 = function apply_132(arg0){
  return fromCbor_4(castTo(arg0, 7));
}
;
function HTTPCoreNode$lambda$0$Type(){
}

defineClass(3078, $wnd.Function, $intern_22, HTTPCoreNode$lambda$0$Type);
_.apply_0 = function apply_133(arg0){
  return lambda$0_3(arg0);
}
;
function HTTPCoreNode$lambda$1$Type(){
}

defineClass(3079, $wnd.Function, $intern_22, HTTPCoreNode$lambda$1$Type);
_.apply_0 = function apply_134(arg0){
  return lambda$1_0(arg0);
}
;
function HTTPCoreNode$lambda$2$Type(){
}

defineClass(3080, $wnd.Function, $intern_22, HTTPCoreNode$lambda$2$Type);
_.apply_0 = function apply_135(arg0){
  return lambda$2(arg0);
}
;
function HTTPCoreNode$lambda$4$Type(){
}

defineClass(3081, $wnd.Function, $intern_22, HTTPCoreNode$lambda$4$Type);
_.apply_0 = function apply_136(arg0){
  return lambda$4_1(arg0);
}
;
function HTTPCoreNode$lambda$5$Type(){
}

defineClass(3082, $wnd.Function, $intern_22, HTTPCoreNode$lambda$5$Type);
_.apply_0 = function apply_137(arg0){
  return lambda$5_1(arg0);
}
;
function HTTPCoreNode$lambda$6$Type(){
}

defineClass(3083, $wnd.Function, $intern_22, HTTPCoreNode$lambda$6$Type);
_.apply_0 = function apply_138(arg0){
  return $clinit_HTTPCoreNode() , fromCbor_71(deserialize(new CborDecoder(new ByteArrayInputStream(castTo(arg0, 11))), castTo(arg0, 11).length));
}
;
function HTTPCoreNode$lambda$7$Type(){
}

defineClass(3084, $wnd.Function, $intern_22, HTTPCoreNode$lambda$7$Type);
_.apply_0 = function apply_139(arg0){
  return lambda$7_0(arg0);
}
;
function HTTPCoreNode$lambda$8$Type(){
}

defineClass(1356, $wnd.Function, $intern_22, HTTPCoreNode$lambda$8$Type);
_.apply_0 = function apply_140(arg0){
  return $clinit_HTTPCoreNode() , castTo(parse_1($create_0(castTo(arg0, 11), 0, castTo(arg0, 11).length, ($clinit_EmulatedCharset() , UTF_8_0)), initUnidimensionalArray(I_classLit, $intern_29, 8, 1, 15, 1)), 17);
}
;
function $lambda$0_6(this$static, username_1){
  if (this$static.online.testedState.value_0)
    return $thenApply(this$static.target.getChain_0(username_1), makeLambdaFunction(OfflineCorenode$lambda$2$Type.prototype.apply_0, OfflineCorenode$lambda$2$Type, [this$static, username_1]));
  $updateAsync(this$static.online);
  return $getChain_0(this$static.pkiCache_0, username_1);
}

function $lambda$1_1(this$static, username_1, t_1){
  if ($isOfflineException(this$static.online, t_1))
    return $getChain_0(this$static.pkiCache_0, username_1);
  return errored(t_1);
}

function $lambda$2(this$static, username_1, chain_1){
  chain_1.isEmpty() || $setChain(this$static.pkiCache_0, username_1, chain_1);
  return chain_1;
}

function $lambda$3_0(this$static, username_1, work_1){
  work_1.ref == null && $thenCompose(this$static.target.getChain_0(username_1), makeLambdaFunction(OfflineCorenode$lambda$4$Type.prototype.apply_0, OfflineCorenode$lambda$4$Type, [this$static, username_1]));
  return work_1;
}

function $lambda$4_1(this$static, username_1, updated_1){
  return $setChain(this$static.pkiCache_0, username_1, updated_1);
}

function $lambda$5(this$static, identity_1){
  return this$static.target.getUsername_0(identity_1);
}

function $lambda$6(this$static, identity_1){
  return $getUsername_0(this$static.pkiCache_0, identity_1);
}

function OfflineCorenode(target, pkiCache, online){
  this.target = target;
  this.pkiCache_0 = pkiCache;
  this.online = online;
}

defineClass(1005, 1, {}, OfflineCorenode);
_.getPublicKeyHash = function getPublicKeyHash_0(username){
  return $thenApply(asyncExceptionally(new OfflineCorenode$lambda$0$Type(this, username), makeLambdaFunction(OfflineCorenode$lambda$1$Type.prototype.apply_0, OfflineCorenode$lambda$1$Type, [this, username])), makeLambdaFunction(CoreNode$lambda$0$Type.prototype.apply_0, CoreNode$lambda$0$Type, []));
}
;
_.getStorageProviders = function getStorageProviders_0(owner){
  return $getStorageProviders(this, owner);
}
;
_.updateUser = function updateUser_0(username){
  return new CompletableFuture_0(($clinit_Boolean() , true));
}
;
_.completePaidSignup = function completePaidSignup_0(username, chain, setupOperations, signedSpaceRequest, proof){
  return this.target.completePaidSignup(username, chain, setupOperations, signedSpaceRequest, proof);
}
;
_.getChain_0 = function getChain_0(username){
  return asyncExceptionally(new OfflineCorenode$lambda$0$Type(this, username), makeLambdaFunction(OfflineCorenode$lambda$1$Type.prototype.apply_0, OfflineCorenode$lambda$1$Type, [this, username]));
}
;
_.getUsername_0 = function getUsername_0(identity){
  return asyncExceptionally(new OfflineCorenode$lambda$5$Type(this, identity), makeLambdaFunction(OfflineCorenode$lambda$6$Type.prototype.apply_0, OfflineCorenode$lambda$6$Type, [this, identity]));
}
;
_.signup = function signup_1(username, userPublicKeyLink, opLog, proofOfWork, token){
  return this.target.signup(username, userPublicKeyLink, opLog, proofOfWork, token);
}
;
_.startPaidSignup = function startPaidSignup_0(username, chain, proof){
  return this.target.startPaidSignup(username, chain, proof);
}
;
_.updateChain = function updateChain_0(username, chain, proofOfWork, token){
  return $thenApply(this.target.updateChain(username, chain, proofOfWork, token), makeLambdaFunction(OfflineCorenode$lambda$3$Type.prototype.apply_0, OfflineCorenode$lambda$3$Type, [this, username]));
}
;
var Lpeergos_shared_corenode_OfflineCorenode_2_classLit = createForClass('peergos.shared.corenode', 'OfflineCorenode', 1005);
function OfflineCorenode$lambda$0$Type($$outer_0, username_1){
  this.$$outer_0 = $$outer_0;
  this.username_1 = username_1;
}

defineClass(502, 1, {}, OfflineCorenode$lambda$0$Type);
_.get_0 = function get_29(){
  return $lambda$0_6(this.$$outer_0, this.username_1);
}
;
var Lpeergos_shared_corenode_OfflineCorenode$lambda$0$Type_2_classLit = createForClass('peergos.shared.corenode', 'OfflineCorenode/lambda$0$Type', 502);
function OfflineCorenode$lambda$1$Type($$outer_0, username_1){
  this.$$outer_0 = $$outer_0;
  this.username_1 = username_1;
}

defineClass(1322, $wnd.Function, $intern_22, OfflineCorenode$lambda$1$Type);
_.apply_0 = function apply_141(arg0){
  return $lambda$1_1(this.$$outer_0, this.username_1, arg0);
}
;
function OfflineCorenode$lambda$2$Type($$outer_0, username_1){
  this.$$outer_0 = $$outer_0;
  this.username_1 = username_1;
}

defineClass(3204, $wnd.Function, $intern_22, OfflineCorenode$lambda$2$Type);
_.apply_0 = function apply_142(arg0){
  return $lambda$2(this.$$outer_0, this.username_1, arg0);
}
;
function OfflineCorenode$lambda$3$Type($$outer_0, username_1){
  this.$$outer_0 = $$outer_0;
  this.username_1 = username_1;
}

defineClass(3202, $wnd.Function, $intern_22, OfflineCorenode$lambda$3$Type);
_.apply_0 = function apply_143(arg0){
  return $lambda$3_0(this.$$outer_0, this.username_1, arg0);
}
;
function OfflineCorenode$lambda$4$Type($$outer_0, username_1){
  this.$$outer_0 = $$outer_0;
  this.username_1 = username_1;
}

defineClass(3205, $wnd.Function, $intern_22, OfflineCorenode$lambda$4$Type);
_.apply_0 = function apply_144(arg0){
  return $lambda$4_1(this.$$outer_0, this.username_1, arg0);
}
;
function OfflineCorenode$lambda$5$Type($$outer_0, identity_1){
  this.$$outer_0 = $$outer_0;
  this.identity_1 = identity_1;
}

defineClass(1006, 1, {}, OfflineCorenode$lambda$5$Type);
_.get_0 = function get_30(){
  return $lambda$5(this.$$outer_0, this.identity_1);
}
;
var Lpeergos_shared_corenode_OfflineCorenode$lambda$5$Type_2_classLit = createForClass('peergos.shared.corenode', 'OfflineCorenode/lambda$5$Type', 1006);
function OfflineCorenode$lambda$6$Type($$outer_0, identity_1){
  this.$$outer_0 = $$outer_0;
  this.identity_1 = identity_1;
}

defineClass(3203, $wnd.Function, $intern_22, OfflineCorenode$lambda$6$Type);
_.apply_0 = function apply_145(arg0){
  return $lambda$6(this.$$outer_0, this.identity_1);
}
;
function $addTotpFactor(this$static, username, identity){
  var auth, req;
  req = new TimeLimitedClient$SignedRequest('peergos/v0/login/addTotp', ($clinit_System() , fromDouble_0(Date.now())));
  auth = $sign(req, identity.secret);
  return this$static.addTotpFactor_0(username, auth);
}

function $deleteSecondFactor(this$static, username, credentialId, identity){
  var auth, req;
  req = new TimeLimitedClient$SignedRequest('peergos/v0/login/deleteMfa', ($clinit_System() , fromDouble_0(Date.now())));
  auth = $sign(req, identity.secret);
  return this$static.deleteSecondFactor_0(username, credentialId, auth);
}

function $enableTotpFactor(this$static, username, credentialId, code_0, identity){
  var auth, req;
  req = new TimeLimitedClient$SignedRequest('peergos/v0/login/enableTotp', ($clinit_System() , fromDouble_0(Date.now())));
  auth = $sign(req, identity.secret);
  return this$static.enableTotpFactor_0(username, credentialId, code_0, auth);
}

function $getSecondAuthMethods(this$static, username, identity){
  var auth, req;
  req = new TimeLimitedClient$SignedRequest('peergos/v0/login/listMfa', ($clinit_System() , fromDouble_0(Date.now())));
  auth = $sign(req, identity.secret);
  return this$static.getSecondAuthMethods_0(username, auth);
}

function $registerSecurityKeyComplete(this$static, username, keyName, resp, identity){
  var auth, req;
  req = new TimeLimitedClient$SignedRequest('peergos/v0/login/registerWebauthnComplete', ($clinit_System() , fromDouble_0(Date.now())));
  auth = $sign(req, identity.secret);
  return this$static.registerSecurityKeyComplete_0(username, keyName, resp, auth);
}

function $registerSecurityKeyStart(this$static, username, identity){
  var auth, req;
  req = new TimeLimitedClient$SignedRequest('peergos/v0/login/registerWebauthnStart', ($clinit_System() , fromDouble_0(Date.now())));
  auth = $sign(req, identity.secret);
  return this$static.registerSecurityKeyStart_0(username, auth);
}

function lambda$0_10(owner_0, writer_1, ipfs_2, current_3){
  return current_3.ref != null?parsePointerTarget((checkCriticalElement(current_3.ref != null) , castTo(current_3.ref, 11)), owner_0, writer_1, ipfs_2):new CompletableFuture_0(new PointerUpdate(null, ($clinit_MaybeMultihash() , $clinit_MaybeMultihash() , EMPTY_0), ($clinit_Optional() , $clinit_Optional() , EMPTY)));
}

function lambda$1_4(pointerCas_0, writerOpt_1){
  return castTo($orElse($map(writerOpt_1, makeLambdaFunction(MutablePointers$lambda$2$Type.prototype.apply_0, MutablePointers$lambda$2$Type, [pointerCas_0])), new PointerUpdate(null, ($clinit_MaybeMultihash() , $clinit_MaybeMultihash() , EMPTY_0), ($clinit_Optional() , $clinit_Optional() , EMPTY))), 111);
}

function lambda$2_6(pointerCas_0, writerKey_1){
  return fromCbor_63(fromByteArray($unsignMessage(writerKey_1, pointerCas_0)));
}

function parsePointerTarget(pointerCas, owner, writerKeyHash, ipfs){
  return $thenApply(ipfs.getSigningKey(owner, writerKeyHash), makeLambdaFunction(MutablePointers$lambda$1$Type.prototype.apply_0, MutablePointers$lambda$1$Type, [pointerCas]));
}

function $lambda$0_20(this$static, owner_1, writer_2, block_3, tid_4, hash_4){
  return this$static.put_2(owner_1, writer_2.publicKeyHash, $signMessage(writer_2.secret, hash_4), block_3, tid_4);
}

function $putBoxingKey(this$static, owner, signature, key, tid){
  var rawKey;
  rawKey = $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborLong(($clinit_PublicBoxingKey$Type() , Curve25519).value_0), new CborObject$CborByteArray(key.publicKey)]))));
  if (rawKey.length <= 36)
    return new CompletableFuture_0(new PublicKeyHash(new Cid(1, ($clinit_Cid$Codec() , DagCbor), ($clinit_Multihash$Type() , id_3), rawKey)));
  return $thenApply(this$static.put_2(owner, owner, signature, rawKey, tid), makeLambdaFunction(ContentAddressedStorage$8methodref$ctor$Type.prototype.apply_0, ContentAddressedStorage$8methodref$ctor$Type, []));
}

function hashKey(key){
  return new PublicKeyHash(new Cid(1, ($clinit_Cid$Codec() , DagCbor), ($clinit_Multihash$Type() , id_3), $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborLong(($clinit_PublicSigningKey$Type() , Ed25519).value), new CborObject$CborByteArray(key.publicKey)]))))));
}

function lambda$5_5(champKey_0, tree_1){
  var key;
  return key = new ByteArrayWrapper(champKey_0) , $thenCompose(castTo(tree_1.keyHasher.call(null, key), 6), makeLambdaFunction(ChampWrapper$lambda$3$Type.prototype.apply_0, ChampWrapper$lambda$3$Type, [tree_1, key]));
}

function lambda$9_3(cache_0, owner_1, bat_2, btreeValue_3){
  if (btreeValue_3.hash_0)
    return $get_18(cache_0, owner_1, castTo($get_9(btreeValue_3), 44), bat_2);
  return $clinit_Optional() , $clinit_Optional() , EMPTY;
}

function $addBat(this$static, username, id_0, bat, identity){
  var auth, req;
  req = new TimeLimitedClient$SignedRequest('peergos/v0/bats/addBat', ($clinit_System() , fromDouble_0(Date.now())));
  auth = $sign(req, identity.secret);
  return this$static.addBat_0(username, id_0, bat, auth);
}

function $getUserBats_0(this$static, username, identity){
  var auth, req;
  req = new TimeLimitedClient$SignedRequest('peergos/v0/bats/getUserBats', ($clinit_System() , fromDouble_0(Date.now())));
  auth = $sign(req, identity.secret);
  return this$static.getUserBats_1(username, auth);
}

function $get_14(this$static, hash){
  return new CompletableFuture_0($map(ofNullable(castTo($get(this$static.storage, hash), 11)), makeLambdaFunction(OpLog$2methodref$fromByteArray$Type.prototype.apply_0, OpLog$2methodref$fromByteArray$Type, [])));
}

function $getPointer(this$static, writer){
  var i, op;
  for (i = this$static.operations.array.length - 1; i >= 0; i--) {
    op = castTo($get_1(this$static.operations, i), 81);
    if (op.a_0 != null && $equals_13(castTo($a(op), 269).writer, writer))
      return new CompletableFuture_0(($clinit_Optional() , new Optional(checkCriticalNotNull(castTo($a(op), 269).writerSignedChampRootCas))));
  }
  throw toJs(new IllegalStateException_0('Unknown writer: ' + writer));
}

function $lambda$0_7(this$static, writer_1, signedHashes_2, blocks_3, i_3){
  return $put_11(this$static, writer_1, castTo(signedHashes_2.getAtIndex(i_3), 11), castTo(blocks_3.getAtIndex(i_3), 11), false);
}

function $lambda$2_0(this$static, writer_1, signedHashes_2, blocks_3, i_3){
  return $put_11(this$static, writer_1, castTo(signedHashes_2.getAtIndex(i_3), 11), castTo(blocks_3.getAtIndex(i_3), 11), true);
}

function $put_10(this$static, writer, signedHashes, blocks){
  return combineAllInOrder(castTo(range_0(0, blocks.size()).mapToObj(new OpLog$lambda$0$Type(this$static, writer, signedHashes, blocks)).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 54));
}

function $put_11(this$static, writer, signedHash, block, isRaw){
  var h, hash;
  hash = copyOfRange(signedHash, 64, signedHash.length);
  h = new Cid(1, isRaw?($clinit_Cid$Codec() , Raw):($clinit_Cid$Codec() , DagCbor), ($clinit_Multihash$Type() , sha2_256), hash);
  $put(this$static.storage, h, block);
  $add(this$static.operations, new Either(null, new OpLog$BlockWrite(writer, signedHash, block, isRaw, ($clinit_Optional() , $clinit_Optional() , EMPTY))));
  return new CompletableFuture_0(h);
}

function $setPointer(this$static, writer, writerSignedBtreeRootHash){
  $add(this$static.operations, new Either(new OpLog$PointerWrite(writer, writerSignedBtreeRootHash), null));
  return new CompletableFuture_0(($clinit_Boolean() , true));
}

function $toCbor_0(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'ops', new CborObject$CborList(castTo($collect_0($map_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(this$static.operations, 16)), makeLambdaFunction(OpLog$lambda$3$Type.prototype.apply_0, OpLog$lambda$3$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17)));
  if (this$static.loginData) {
    $put_6(state, 'login', castTo(this$static.loginData.left, 7));
    $put_6(state, 'loginAuth', new CborObject$CborByteArray(castTo(this$static.loginData.right, 11)));
  }
  $ifPresent(this$static.mirrorBat, new OpLog$lambda$6$Type(state));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function OpLog(operations, mirrorBat){
  this.storage = new HashMap;
  this.operations = operations;
  this.loginData = null;
  this.mirrorBat = mirrorBat;
}

function lambda$6_0(state_0, t_1){
  $put_6(state_0, 'b', castTo(t_1.left, 7));
  $put_6(state_0, 'a', new CborObject$CborByteArray(castTo(t_1.right, 11)));
}

defineClass(828, 1, $intern_67, OpLog);
_.addBat = function addBat(username, id_0, bat, identity){
  return $addBat(this, username, id_0, bat, identity);
}
;
_.addTotpFactor = function addTotpFactor(username, identity){
  return $addTotpFactor(this, username, identity);
}
;
_.blockStoreProperties = function blockStoreProperties_0(){
  return new CompletableFuture_0(new BlockStoreProperties(false, false, false, ($clinit_Optional() , $clinit_Optional() , EMPTY), (null , EMPTY)));
}
;
_.clearBlockCache = function clearBlockCache(){
}
;
_.deleteSecondFactor = function deleteSecondFactor(username, credentialId, identity){
  return $deleteSecondFactor(this, username, credentialId, identity);
}
;
_.downloadFragments = function downloadFragments_0(owner, hashes, bats, h, monitor, spaceIncreaseFactor){
  var futures, identity;
  return $clinit_NetworkAccess() , futures = castTo(castTo(range_0(0, hashes.size()).mapToObj(new NetworkAccess$lambda$90$Type).parallel(), 147).map_1(makeLambdaFunction(NetworkAccess$lambda$91$Type.prototype.apply_0, NetworkAccess$lambda$91$Type, [monitor, spaceIncreaseFactor, hashes, this, owner, bats])).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17) , $thenApply((identity = new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_LIST)) , castTo($reduce(futures.stream(), identity, new Futures$lambda$6$Type), 6)), makeLambdaFunction(NetworkAccess$lambda$97$Type.prototype.apply_0, NetworkAccess$lambda$97$Type, []));
}
;
_.enableTotpFactor = function enableTotpFactor(username, credentialId, code_0, identity){
  return $enableTotpFactor(this, username, credentialId, code_0, identity);
}
;
_.getChampLookup_0 = function getChampLookup_0(owner, root, champKey, bat, committedRoot, hasher){
  var cache;
  return cache = new CachingStorage(this) , $thenApply($thenApply($thenApply($thenCompose(create_4(owner, root, makeLambdaFunction(ContentAddressedStorage$lambda$3$Type.prototype.apply_0, ContentAddressedStorage$lambda$3$Type, []), cache, hasher, makeLambdaFunction(ContentAddressedStorage$lambda$4$Type.prototype.apply_0, ContentAddressedStorage$lambda$4$Type, [])), makeLambdaFunction(ContentAddressedStorage$lambda$5$Type.prototype.apply_0, ContentAddressedStorage$lambda$5$Type, [champKey])), makeLambdaFunction(ContentAddressedStorage$lambda$6$Type.prototype.apply_0, ContentAddressedStorage$lambda$6$Type, [])), makeLambdaFunction(ContentAddressedStorage$lambda$9$Type.prototype.apply_0, ContentAddressedStorage$lambda$9$Type, [cache, owner, bat])), makeLambdaFunction(ContentAddressedStorage$lambda$10$Type.prototype.apply_0, ContentAddressedStorage$lambda$10$Type, [cache]));
}
;
_.getPointerTarget = function getPointerTarget(owner, writer, ipfs){
  return $thenCompose($getPointer(this, writer), makeLambdaFunction(MutablePointers$lambda$0$Type.prototype.apply_0, MutablePointers$lambda$0$Type, [owner, writer, ipfs]));
}
;
_.getSecondAuthMethods = function getSecondAuthMethods(username, identity){
  return $getSecondAuthMethods(this, username, identity);
}
;
_.getSigningKey = function getSigningKey(owner, hash){
  var lastArg;
  return $thenApply(hash.type == ($clinit_Multihash$Type() , id_3)?new CompletableFuture_0(($clinit_Optional() , new Optional(checkCriticalNotNull(fromByteArray(copyOfRange(hash.hash_0, 0, hash.hash_0.length)))))):$get_14(this, (lastArg = hash.target , $clinit_Optional() , $clinit_Optional() , EMPTY , lastArg)), makeLambdaFunction(ContentAddressedStorage$lambda$13$Type.prototype.apply_0, ContentAddressedStorage$lambda$13$Type, []));
}
;
_.getUserBats_0 = function getUserBats(username, identity){
  return $getUserBats_0(this, username, identity);
}
;
_.put_0 = function put_7(owner, writer, block, hasher, tid){
  return $thenCompose(hasher.scriptJS.sha256(block), makeLambdaFunction(ContentAddressedStorage$lambda$0$Type.prototype.apply_0, ContentAddressedStorage$lambda$0$Type, [this, owner, writer, block, tid]));
}
;
_.put_2 = function put_9(owner, writer, signature, block, tid){
  return $thenApply($put_10(this, writer, ($clinit_Collections() , new Collections$SingletonList(signature)), new Collections$SingletonList(block)), makeLambdaFunction(ContentAddressedStorage$lambda$1$Type.prototype.apply_0, ContentAddressedStorage$lambda$1$Type, []));
}
;
_.putBoxingKey = function putBoxingKey(owner, signature, key, tid){
  return $putBoxingKey(this, owner, signature, key, tid);
}
;
_.putSigningKey = function putSigningKey(signature, owner, newKey, tid){
  return new CompletableFuture_0(new PublicKeyHash(new Cid(1, ($clinit_Cid$Codec() , DagCbor), ($clinit_Multihash$Type() , id_3), $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborLong(($clinit_PublicSigningKey$Type() , Ed25519).value), new CborObject$CborByteArray(newKey.publicKey)])))))));
}
;
_.putSigningKey_0 = function putSigningKey_0(signature, owner, writer, newKey, tid){
  return new CompletableFuture_0(new PublicKeyHash(new Cid(1, ($clinit_Cid$Codec() , DagCbor), ($clinit_Multihash$Type() , id_3), $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborLong(($clinit_PublicSigningKey$Type() , Ed25519).value), new CborObject$CborByteArray(newKey.publicKey)])))))));
}
;
_.registerSecurityKeyComplete = function registerSecurityKeyComplete(username, keyName, resp, identity){
  return $registerSecurityKeyComplete(this, username, keyName, resp, identity);
}
;
_.registerSecurityKeyStart = function registerSecurityKeyStart(username, identity){
  return $registerSecurityKeyStart(this, username, identity);
}
;
_.serialize = function serialize_17(){
  return $toByteArray_2($toCbor_0(this));
}
;
_.setLoginData_0 = function setLoginData(login, identity){
  var auth;
  return auth = $signatureOnly(identity.secret, $toByteArray_2($toCbor_79(login))) , this.loginData = new Pair(login, auth) , new CompletableFuture_0(($clinit_Boolean() , true));
}
;
_.setPointer = function setPointer(owner, writer, casUpdate){
  var signed;
  return signed = $signMessage(writer.secret, $toByteArray_2($toCbor_51(casUpdate))) , $setPointer(this, writer.publicKeyHash, signed);
}
;
_.addBat_0 = function addBat_0(username, id_0, bat, auth){
  if (this.mirrorBat.ref != null)
    throw toJs(new IllegalStateException_0('Only 1 mirror BAT allowed in OpLog!'));
  this.mirrorBat = ($clinit_Optional() , new Optional(checkCriticalNotNull(new Pair(new BatWithId(bat, id_0.id_0), auth))));
  return new CompletableFuture_0(($clinit_Boolean() , true));
}
;
_.addTotpFactor_0 = function addTotpFactor_0(username, auth){
  throw toJs(new IllegalStateException_0('Unsupported operation!'));
}
;
_.clearCache = function clearCache(){
  return this;
}
;
_.closeTransaction = function closeTransaction(owner, tid){
  return new CompletableFuture_0(($clinit_Boolean() , true));
}
;
_.deleteSecondFactor_0 = function deleteSecondFactor_0(username, credentialId, auth){
  throw toJs(new IllegalStateException_0('Unsupported operation!'));
}
;
_.enableTotpFactor_0 = function enableTotpFactor_0(username, credentialId, code_0, auth){
  throw toJs(new IllegalStateException_0('Unsupported operation!'));
}
;
_.get_1 = function get_31(owner, hash, bat){
  return $get_14(this, hash);
}
;
_.getChampLookup = function getChampLookup(owner, root, champKey, bat, committedRoot){
  return new CompletableFuture_0(new ArrayList_1(new AbstractMap$2(this.storage)));
}
;
_.getLoginData = function getLoginData(username, authorisedReader, auth, mfa){
  if (!this.loginData)
    throw toJs(new IllegalStateException_0('No login data present!'));
  if (!$equals_0(castTo(this.loginData.left, 226).username, username))
    throw toJs(new IllegalStateException_0('No login data present for ' + username));
  if (!$equals_10(castTo(this.loginData.left, 226).authorisedReader, authorisedReader))
    throw toJs(new IllegalStateException_0('You are not authorised to login as ' + username));
  return new CompletableFuture_0(new Either(castTo(this.loginData.left, 226).entryPoints, null));
}
;
_.getPointer = function getPointer(owner, writer){
  return $getPointer(this, writer);
}
;
_.getRaw = function getRaw(owner, hash, bat){
  return new CompletableFuture_0(ofNullable(castTo($get(this.storage, hash), 11)));
}
;
_.getSecondAuthMethods_0 = function getSecondAuthMethods_0(username, auth){
  throw toJs(new IllegalStateException_0('Unsupported operation!'));
}
;
_.getUserBats_1 = function getUserBats_0(username, auth){
  throw toJs(new IllegalStateException_0('Unsupported operation!'));
}
;
_.id_1 = function id_2(){
  throw toJs(new IllegalStateException_0('Unsupported operation!'));
}
;
_.put_1 = function put_8(owner, writer, signedHashes, blocks, tid){
  return $put_10(this, writer, signedHashes, blocks);
}
;
_.putRaw = function putRaw(owner, writer, signedHashes, blocks, tid, progressCounter){
  return combineAllInOrder(castTo(range_0(0, blocks.size()).mapToObj(new OpLog$lambda$2$Type(this, writer, signedHashes, blocks)).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 54));
}
;
_.registerSecurityKeyComplete_0 = function registerSecurityKeyComplete_0(username, keyName, resp, auth){
  throw toJs(new IllegalStateException_0('Unsupported operation!'));
}
;
_.registerSecurityKeyStart_0 = function registerSecurityKeyStart_0(username, auth){
  throw toJs(new IllegalStateException_0('Unsupported operation!'));
}
;
_.setLoginData_1 = function setLoginData_0(login, auth){
  return this.loginData = new Pair(login, auth) , new CompletableFuture_0(($clinit_Boolean() , true));
}
;
_.setPointer_0 = function setPointer_0(owner, writer, writerSignedBtreeRootHash){
  return $setPointer(this, writer, writerSignedBtreeRootHash);
}
;
_.startTransaction = function startTransaction(owner){
  return new CompletableFuture_0(new TransactionId('1'));
}
;
_.toCbor = function toCbor_9(){
  return $toCbor_0(this);
}
;
var Lpeergos_shared_corenode_OpLog_2_classLit = createForClass('peergos.shared.corenode', 'OpLog', 828);
function OpLog$2methodref$fromByteArray$Type(){
}

defineClass(2507, $wnd.Function, $intern_22, OpLog$2methodref$fromByteArray$Type);
_.apply_0 = function apply_146(arg0){
  return fromByteArray(castTo(arg0, 11));
}
;
function OpLog$3methodref$toCbor$Type(){
}

defineClass(2509, $wnd.Function, $intern_22, OpLog$3methodref$toCbor$Type);
_.apply_0 = function apply_147(arg0){
  return $toCbor_2(castTo(arg0, 269));
}
;
function OpLog$4methodref$toCbor$Type(){
}

defineClass(2510, $wnd.Function, $intern_22, OpLog$4methodref$toCbor$Type);
_.apply_0 = function apply_148(arg0){
  return $toCbor_1(castTo(arg0, 109));
}
;
function $toCbor_1(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'w', this$static.writer);
  $put_6(state, 's', new CborObject$CborByteArray(this$static.signature));
  $put_6(state, 'b', new CborObject$CborByteArray(this$static.block));
  $put_6(state, 'r', new CborObject$CborBoolean(this$static.isRaw));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function OpLog$BlockWrite(writer, signature, block, isRaw, progressMonitor){
  this.writer = writer;
  this.signature = signature;
  this.block = block;
  this.isRaw = isRaw;
  this.progressMonitor = progressMonitor;
}

defineClass(109, 1, {7:1, 109:1}, OpLog$BlockWrite);
_.serialize = function serialize_18(){
  return $toByteArray_2($toCbor_1(this));
}
;
_.toCbor = function toCbor_10(){
  return $toCbor_1(this);
}
;
_.toString_0 = function toString_46(){
  return 'BlockWrite{block[' + this.block.length + '], ' + (this.isRaw?'raw':'cbor') + '}';
}
;
_.isRaw = false;
var Lpeergos_shared_corenode_OpLog$BlockWrite_2_classLit = createForClass('peergos.shared.corenode', 'OpLog/BlockWrite', 109);
function $toCbor_2(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'w', this$static.writer);
  $put_6(state, 's', new CborObject$CborByteArray(this$static.writerSignedChampRootCas));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function OpLog$PointerWrite(writer, writerSignedChampRootCas){
  this.writer = writer;
  this.writerSignedChampRootCas = writerSignedChampRootCas;
}

defineClass(269, 1, {7:1, 269:1}, OpLog$PointerWrite);
_.serialize = function serialize_19(){
  return $toByteArray_2($toCbor_2(this));
}
;
_.toCbor = function toCbor_11(){
  return $toCbor_2(this);
}
;
_.toString_0 = function toString_47(){
  return this.writer.target.toString();
}
;
var Lpeergos_shared_corenode_OpLog$PointerWrite_2_classLit = createForClass('peergos.shared.corenode', 'OpLog/PointerWrite', 269);
function OpLog$lambda$0$Type($$outer_0, writer_1, signedHashes_2, blocks_3){
  this.$$outer_0 = $$outer_0;
  this.writer_1 = writer_1;
  this.signedHashes_2 = signedHashes_2;
  this.blocks_3 = blocks_3;
}

defineClass(829, 1, {}, OpLog$lambda$0$Type);
_.apply_2 = function apply_149(arg0){
  return $lambda$0_7(this.$$outer_0, this.writer_1, this.signedHashes_2, this.blocks_3, arg0);
}
;
var Lpeergos_shared_corenode_OpLog$lambda$0$Type_2_classLit = createForClass('peergos.shared.corenode', 'OpLog/lambda$0$Type', 829);
function OpLog$lambda$2$Type($$outer_0, writer_1, signedHashes_2, blocks_3){
  this.$$outer_0 = $$outer_0;
  this.writer_1 = writer_1;
  this.signedHashes_2 = signedHashes_2;
  this.blocks_3 = blocks_3;
}

defineClass(830, 1, {}, OpLog$lambda$2$Type);
_.apply_2 = function apply_150(arg0){
  return $lambda$2_0(this.$$outer_0, this.writer_1, this.signedHashes_2, this.blocks_3, arg0);
}
;
var Lpeergos_shared_corenode_OpLog$lambda$2$Type_2_classLit = createForClass('peergos.shared.corenode', 'OpLog/lambda$2$Type', 830);
function OpLog$lambda$3$Type(){
}

defineClass(2508, $wnd.Function, $intern_22, OpLog$lambda$3$Type);
_.apply_0 = function apply_151(arg0){
  return castTo($map_3(castTo(arg0, 81), makeLambdaFunction(OpLog$3methodref$toCbor$Type.prototype.apply_0, OpLog$3methodref$toCbor$Type, []), makeLambdaFunction(OpLog$4methodref$toCbor$Type.prototype.apply_0, OpLog$4methodref$toCbor$Type, [])), 48);
}
;
function OpLog$lambda$6$Type(state_0){
  this.state_0 = state_0;
}

defineClass(831, 1, $intern_32, OpLog$lambda$6$Type);
_.accept = function accept_35(arg0){
  lambda$6_0(this.state_0, arg0);
}
;
_.andThen = function andThen_17(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_corenode_OpLog$lambda$6$Type_2_classLit = createForClass('peergos.shared.corenode', 'OpLog/lambda$6$Type', 831);
function redirectCall(core, ownerKey){
  core.getStorageProviders(ownerKey);
  throw toJs(new IllegalStateException_0('Unable to find home server to send request to for ' + ownerKey));
}

function $commit_0(this$static){
  var data_0, dataReader;
  data_0 = $toByteArray_2($toCbor_88(this$static.tofu));
  dataReader = new AsyncReader$ArrayBacked(data_0);
  return $thenApply($thenCompose($applyComplexUpdate(this$static.network.synchronizer, $owner(this$static.backingFile), $signingPair(this$static.backingFile), new TofuCoreNode$lambda$7$Type(this$static, dataReader, data_0), new WriteSynchronizer$lambda$23$Type), makeLambdaFunction(TofuCoreNode$lambda$9$Type.prototype.apply_0, TofuCoreNode$lambda$9$Type, [this$static])), makeLambdaFunction(TofuCoreNode$lambda$10$Type.prototype.apply_0, TofuCoreNode$lambda$10$Type, [this$static]));
}

function $lambda$10_0(this$static, f_0){
  this$static.backingFile = f_0;
  return $clinit_Boolean() , true;
}

function $lambda$11(this$static, username_1, chain_1){
  return $thenCompose($updateChain(this$static.tofu, username_1, chain_1, this$static.network.dhtClient), makeLambdaFunction(TofuCoreNode$lambda$12$Type.prototype.apply_0, TofuCoreNode$lambda$12$Type, [this$static]));
}

function $lambda$12_0(this$static, changed_0){
  if (checkCriticalNotNull(changed_0) , changed_0)
    return $commit_0(this$static);
  return new CompletableFuture_0(($clinit_Boolean() , true));
}

function $lambda$13_0(this$static, username_1, chain_1){
  return chain_1.isEmpty()?new CompletableFuture_0(($clinit_Boolean() , false)):$thenCompose($updateChain(this$static.tofu, username_1, chain_1, this$static.network.dhtClient), makeLambdaFunction(TofuCoreNode$lambda$14$Type.prototype.apply_0, TofuCoreNode$lambda$14$Type, [this$static]));
}

function $lambda$15_0(this$static, username_1, x_1){
  return (checkCriticalNotNull(x_1) , x_1)?$getPublicKey(this$static.tofu, username_1):($clinit_Optional() , $clinit_Optional() , EMPTY);
}

function $lambda$16_0(this$static, username_0){
  return $thenCompose(this$static.source.getChain_0(username_0), makeLambdaFunction(TofuCoreNode$lambda$17$Type.prototype.apply_0, TofuCoreNode$lambda$17$Type, [this$static, username_0]));
}

function $lambda$17(this$static, username_1, chain_1){
  return $thenApply($thenCompose($updateChain(this$static.tofu, username_1, chain_1, this$static.network.dhtClient), makeLambdaFunction(TofuCoreNode$lambda$18$Type.prototype.apply_0, TofuCoreNode$lambda$18$Type, [this$static])), makeLambdaFunction(TofuCoreNode$lambda$19$Type.prototype.apply_0, TofuCoreNode$lambda$19$Type, [username_1]));
}

function $lambda$20(this$static, username_1, chain_1){
  return $thenApply($thenCompose($updateChain(this$static.tofu, username_1, chain_1, this$static.network.dhtClient), makeLambdaFunction(TofuCoreNode$lambda$21$Type.prototype.apply_0, TofuCoreNode$lambda$21$Type, [this$static])), makeLambdaFunction(TofuCoreNode$lambda$22$Type.prototype.apply_0, TofuCoreNode$lambda$22$Type, [this$static, username_1]));
}

function $lambda$22(this$static, username_1){
  return $getChain_1(this$static.tofu, username_1);
}

function $lambda$23_0(this$static, username_1, chain_2, res_2){
  if (res_2.ref != null)
    return new CompletableFuture_0(res_2);
  return $thenApply($thenCompose($updateChain(this$static.tofu, username_1, chain_2, this$static.network.dhtClient), makeLambdaFunction(TofuCoreNode$lambda$24$Type.prototype.apply_0, TofuCoreNode$lambda$24$Type, [this$static])), makeLambdaFunction(TofuCoreNode$lambda$25$Type.prototype.apply_0, TofuCoreNode$lambda$25$Type, [res_2]));
}

function $lambda$7(this$static, dataReader_1, data_2, s_2, committer_3){
  return $overwriteFile_0(this$static.backingFile, dataReader_1, data_2.length, this$static.network, this$static.crypto_0, makeLambdaFunction(TofuCoreNode$lambda$8$Type.prototype.accept_5, TofuCoreNode$lambda$8$Type, []), s_2, committer_3);
}

function $lambda$9_0(this$static, v_0){
  return $getUpdated_0(this$static.backingFile, v_0, this$static.network);
}

function TofuCoreNode(source, tofu, backingFile, network, crypto_0){
  this.source = instanceOf(source, 304)?castTo(source, 304).source:source;
  this.tofu = tofu;
  this.backingFile = backingFile;
  this.network = network;
  this.crypto_0 = crypto_0;
}

function lambda$1_1(network_0, crypto_1, homeDir_2){
  return $thenCompose($getChild_2(homeDir_2, '.keystore', network_0), makeLambdaFunction(TofuCoreNode$lambda$2$Type.prototype.apply_0, TofuCoreNode$lambda$2$Type, [network_0, crypto_1, homeDir_2]));
}

function lambda$2_0(network_0, crypto_1, homeDir_2, keystoreOpt_3){
  var raw, store;
  if (keystoreOpt_3.ref == null) {
    store = new TofuKeyStore;
    raw = $toByteArray_2($toCbor_88(store));
    return $thenApply($uploadAndReturnFile(homeDir_2, '.keystore', new AsyncReader$ArrayBacked(raw), raw.length, true, $mirrorBatId(homeDir_2.pointer.fileAccess), network_0, crypto_1), makeLambdaFunction(TofuCoreNode$lambda$3$Type.prototype.apply_0, TofuCoreNode$lambda$3$Type, [network_0, store, crypto_1]));
  }
  return $thenCompose($getInputStream_0((checkCriticalElement(keystoreOpt_3.ref != null) , castTo(keystoreOpt_3.ref, 19)), network_0, crypto_1, makeLambdaFunction(TofuCoreNode$lambda$4$Type.prototype.accept_5, TofuCoreNode$lambda$4$Type, [])), makeLambdaFunction(TofuCoreNode$lambda$5$Type.prototype.apply_0, TofuCoreNode$lambda$5$Type, [network_0, keystoreOpt_3, crypto_1]));
}

function lambda$3_0(network_0, store_1, crypto_2, f_3){
  return new TofuCoreNode(network_0.coreNode, store_1, f_3, network_0, crypto_2);
}

function lambda$5_2(network_0, keystoreOpt_1, crypto_2, reader_3){
  var storeData;
  storeData = initUnidimensionalArray(B_classLit, $intern_28, 8, toInt_0($getSize((checkCriticalElement(keystoreOpt_1.ref != null) , castTo(keystoreOpt_1.ref, 19)))), 15, 1);
  return $thenApply(reader_3.readIntoArray(storeData, 0, storeData.length), makeLambdaFunction(TofuCoreNode$lambda$6$Type.prototype.apply_0, TofuCoreNode$lambda$6$Type, [network_0, storeData, keystoreOpt_1, crypto_2]));
}

function lambda$6_1(network_0, storeData_1, keystoreOpt_2, crypto_3){
  return new TofuCoreNode(network_0.coreNode, fromCbor_96(deserialize(new CborDecoder(new ByteArrayInputStream(storeData_1)), storeData_1.length)), (checkCriticalElement(keystoreOpt_2.ref != null) , castTo(keystoreOpt_2.ref, 19)), network_0, crypto_3);
}

function load(username, root, network, crypto_0){
  if (username == null)
    throw toJs(new IllegalStateException_0('Cannot build a tofu keystore if not logged in!'));
  return $thenCompose($thenApply(root.getByPath(username, crypto_0.hasher, network), makeLambdaFunction(TofuCoreNode$0methodref$get$Type.prototype.apply_0, TofuCoreNode$0methodref$get$Type, [])), makeLambdaFunction(TofuCoreNode$lambda$1$Type.prototype.apply_0, TofuCoreNode$lambda$1$Type, [network, crypto_0]));
}

defineClass(304, 1, {304:1}, TofuCoreNode);
_.getStorageProviders = function getStorageProviders_1(owner){
  return $getStorageProviders(this, owner);
}
;
_.completePaidSignup = function completePaidSignup_1(username, chain, setupOperations, signedSpaceRequest, proof){
  throw toJs(new IllegalStateException_0('Unsupported operation!'));
}
;
_.getChain_0 = function getChain_1(username){
  var localChain;
  localChain = $getChain_1(this.tofu, username);
  if (!localChain.isEmpty())
    return new CompletableFuture_0(localChain);
  return $thenCompose(this.source.getChain_0(username), makeLambdaFunction(TofuCoreNode$lambda$20$Type.prototype.apply_0, TofuCoreNode$lambda$20$Type, [this, username]));
}
;
_.getPublicKeyHash = function getPublicKeyHash_1(username){
  var local;
  local = $getPublicKey(this.tofu, username);
  if (local.ref != null)
    return new CompletableFuture_0(local);
  return $thenApply($thenCompose(this.source.getChain_0(username), makeLambdaFunction(TofuCoreNode$lambda$13$Type.prototype.apply_0, TofuCoreNode$lambda$13$Type, [this, username])), makeLambdaFunction(TofuCoreNode$lambda$15$Type.prototype.apply_0, TofuCoreNode$lambda$15$Type, [this, username]));
}
;
_.getUsername_0 = function getUsername_1(key){
  var local;
  local = $getUsername_1(this.tofu, key);
  if (local.ref != null)
    return new CompletableFuture_0((checkCriticalElement(local.ref != null) , castToString(local.ref)));
  return $thenCompose(this.source.getUsername_0(key), makeLambdaFunction(TofuCoreNode$lambda$16$Type.prototype.apply_0, TofuCoreNode$lambda$16$Type, [this]));
}
;
_.signup = function signup_2(username, chain, setupOperations, proof, token){
  throw toJs(new IllegalStateException_0('Unsupported operation!'));
}
;
_.startPaidSignup = function startPaidSignup_1(username, chain, proof){
  throw toJs(new IllegalStateException_0('Unsupported operation!'));
}
;
_.updateChain = function updateChain_1(username, chain, proof, token){
  return $thenCompose(this.source.updateChain(username, chain, proof, token), makeLambdaFunction(TofuCoreNode$lambda$23$Type.prototype.apply_0, TofuCoreNode$lambda$23$Type, [this, username, chain]));
}
;
_.updateUser = function updateUser_1(username){
  return $thenCompose(this.source.getChain_0(username), makeLambdaFunction(TofuCoreNode$lambda$11$Type.prototype.apply_0, TofuCoreNode$lambda$11$Type, [this, username]));
}
;
var Lpeergos_shared_corenode_TofuCoreNode_2_classLit = createForClass('peergos.shared.corenode', 'TofuCoreNode', 304);
function TofuCoreNode$0methodref$get$Type(){
}

defineClass(2531, $wnd.Function, $intern_22, TofuCoreNode$0methodref$get$Type);
_.apply_0 = function apply_152(arg0){
  return $get_6(castTo(arg0, 12));
}
;
function TofuCoreNode$lambda$1$Type(network_0, crypto_1){
  this.network_0 = network_0;
  this.crypto_1 = crypto_1;
}

defineClass(2532, $wnd.Function, $intern_22, TofuCoreNode$lambda$1$Type);
_.apply_0 = function apply_153(arg0){
  return lambda$1_1(this.network_0, this.crypto_1, arg0);
}
;
function TofuCoreNode$lambda$10$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2534, $wnd.Function, $intern_22, TofuCoreNode$lambda$10$Type);
_.apply_0 = function apply_154(arg0){
  return $lambda$10_0(this.$$outer_0, arg0);
}
;
function TofuCoreNode$lambda$11$Type($$outer_0, username_1){
  this.$$outer_0 = $$outer_0;
  this.username_1 = username_1;
}

defineClass(2535, $wnd.Function, $intern_22, TofuCoreNode$lambda$11$Type);
_.apply_0 = function apply_155(arg0){
  return $lambda$11(this.$$outer_0, this.username_1, arg0);
}
;
function TofuCoreNode$lambda$12$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2547, $wnd.Function, $intern_22, TofuCoreNode$lambda$12$Type);
_.apply_0 = function apply_156(arg0){
  return $lambda$12_0(this.$$outer_0, arg0);
}
;
function TofuCoreNode$lambda$13$Type($$outer_0, username_1){
  this.$$outer_0 = $$outer_0;
  this.username_1 = username_1;
}

defineClass(2536, $wnd.Function, $intern_22, TofuCoreNode$lambda$13$Type);
_.apply_0 = function apply_157(arg0){
  return $lambda$13_0(this.$$outer_0, this.username_1, arg0);
}
;
function TofuCoreNode$lambda$14$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2548, $wnd.Function, $intern_22, TofuCoreNode$lambda$14$Type);
_.apply_0 = function apply_158(arg0){
  return $commit_0(this.$$outer_0);
}
;
function TofuCoreNode$lambda$15$Type($$outer_0, username_1){
  this.$$outer_0 = $$outer_0;
  this.username_1 = username_1;
}

defineClass(2537, $wnd.Function, $intern_22, TofuCoreNode$lambda$15$Type);
_.apply_0 = function apply_159(arg0){
  return $lambda$15_0(this.$$outer_0, this.username_1, arg0);
}
;
function TofuCoreNode$lambda$16$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2538, $wnd.Function, $intern_22, TofuCoreNode$lambda$16$Type);
_.apply_0 = function apply_160(arg0){
  return $lambda$16_0(this.$$outer_0, arg0);
}
;
function TofuCoreNode$lambda$17$Type($$outer_0, username_1){
  this.$$outer_0 = $$outer_0;
  this.username_1 = username_1;
}

defineClass(2549, $wnd.Function, $intern_22, TofuCoreNode$lambda$17$Type);
_.apply_0 = function apply_161(arg0){
  return $lambda$17(this.$$outer_0, this.username_1, arg0);
}
;
function TofuCoreNode$lambda$18$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2550, $wnd.Function, $intern_22, TofuCoreNode$lambda$18$Type);
_.apply_0 = function apply_162(arg0){
  return $commit_0(this.$$outer_0);
}
;
function TofuCoreNode$lambda$19$Type(username_0){
  this.username_0 = username_0;
}

defineClass(2551, $wnd.Function, $intern_22, TofuCoreNode$lambda$19$Type);
_.apply_0 = function apply_163(arg0){
  return this.username_0;
}
;
function TofuCoreNode$lambda$2$Type(network_0, crypto_1, homeDir_2){
  this.network_0 = network_0;
  this.crypto_1 = crypto_1;
  this.homeDir_2 = homeDir_2;
}

defineClass(2541, $wnd.Function, $intern_22, TofuCoreNode$lambda$2$Type);
_.apply_0 = function apply_164(arg0){
  return lambda$2_0(this.network_0, this.crypto_1, this.homeDir_2, arg0);
}
;
function TofuCoreNode$lambda$20$Type($$outer_0, username_1){
  this.$$outer_0 = $$outer_0;
  this.username_1 = username_1;
}

defineClass(2539, $wnd.Function, $intern_22, TofuCoreNode$lambda$20$Type);
_.apply_0 = function apply_165(arg0){
  return $lambda$20(this.$$outer_0, this.username_1, arg0);
}
;
function TofuCoreNode$lambda$21$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2552, $wnd.Function, $intern_22, TofuCoreNode$lambda$21$Type);
_.apply_0 = function apply_166(arg0){
  return $commit_0(this.$$outer_0);
}
;
function TofuCoreNode$lambda$22$Type($$outer_0, username_1){
  this.$$outer_0 = $$outer_0;
  this.username_1 = username_1;
}

defineClass(2553, $wnd.Function, $intern_22, TofuCoreNode$lambda$22$Type);
_.apply_0 = function apply_167(arg0){
  return $lambda$22(this.$$outer_0, this.username_1);
}
;
function TofuCoreNode$lambda$23$Type($$outer_0, username_1, chain_2){
  this.$$outer_0 = $$outer_0;
  this.username_1 = username_1;
  this.chain_2 = chain_2;
}

defineClass(2540, $wnd.Function, $intern_22, TofuCoreNode$lambda$23$Type);
_.apply_0 = function apply_168(arg0){
  return $lambda$23_0(this.$$outer_0, this.username_1, this.chain_2, arg0);
}
;
function TofuCoreNode$lambda$24$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2554, $wnd.Function, $intern_22, TofuCoreNode$lambda$24$Type);
_.apply_0 = function apply_169(arg0){
  return $commit_0(this.$$outer_0);
}
;
function TofuCoreNode$lambda$25$Type(res_0){
  this.res_0 = res_0;
}

defineClass(2555, $wnd.Function, $intern_22, TofuCoreNode$lambda$25$Type);
_.apply_0 = function apply_170(arg0){
  return this.res_0;
}
;
function TofuCoreNode$lambda$3$Type(network_0, store_1, crypto_2){
  this.network_0 = network_0;
  this.store_1 = store_1;
  this.crypto_2 = crypto_2;
}

defineClass(2542, $wnd.Function, $intern_22, TofuCoreNode$lambda$3$Type);
_.apply_0 = function apply_171(arg0){
  return lambda$3_0(this.network_0, this.store_1, this.crypto_2, arg0);
}
;
function TofuCoreNode$lambda$4$Type(){
}

defineClass(2543, $wnd.Function, {}, TofuCoreNode$lambda$4$Type);
_.accept_5 = function accept_36(arg0){
}
;
function TofuCoreNode$lambda$5$Type(network_0, keystoreOpt_1, crypto_2){
  this.network_0 = network_0;
  this.keystoreOpt_1 = keystoreOpt_1;
  this.crypto_2 = crypto_2;
}

defineClass(2544, $wnd.Function, $intern_22, TofuCoreNode$lambda$5$Type);
_.apply_0 = function apply_172(arg0){
  return lambda$5_2(this.network_0, this.keystoreOpt_1, this.crypto_2, arg0);
}
;
function TofuCoreNode$lambda$6$Type(network_0, storeData_1, keystoreOpt_2, crypto_3){
  this.network_0 = network_0;
  this.storeData_1 = storeData_1;
  this.keystoreOpt_2 = keystoreOpt_2;
  this.crypto_3 = crypto_3;
}

defineClass(2545, $wnd.Function, $intern_22, TofuCoreNode$lambda$6$Type);
_.apply_0 = function apply_173(arg0){
  return lambda$6_1(this.network_0, this.storeData_1, this.keystoreOpt_2, this.crypto_3);
}
;
function TofuCoreNode$lambda$7$Type($$outer_0, dataReader_1, data_2){
  this.$$outer_0 = $$outer_0;
  this.dataReader_1 = dataReader_1;
  this.data_2 = data_2;
}

defineClass(839, 1, {}, TofuCoreNode$lambda$7$Type);
_.apply_3 = function apply_174(arg0, arg1){
  return $lambda$7(this.$$outer_0, this.dataReader_1, this.data_2, arg0, arg1);
}
;
var Lpeergos_shared_corenode_TofuCoreNode$lambda$7$Type_2_classLit = createForClass('peergos.shared.corenode', 'TofuCoreNode/lambda$7$Type', 839);
function TofuCoreNode$lambda$8$Type(){
}

defineClass(2546, $wnd.Function, {}, TofuCoreNode$lambda$8$Type);
_.accept_5 = function accept_37(arg0){
}
;
function TofuCoreNode$lambda$9$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2533, $wnd.Function, $intern_22, TofuCoreNode$lambda$9$Type);
_.apply_0 = function apply_175(arg0){
  return $lambda$9_0(this.$$outer_0, arg0);
}
;
function $equals_8(this$static, o){
  var that;
  if (maskUndefined(this$static) === maskUndefined(o))
    return true;
  if (o == null || Lpeergos_shared_corenode_UserPublicKeyLink_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 72);
  if (this$static.owner?!$equals_13(this$static.owner, that.owner):!!that.owner)
    return false;
  if (this$static.claim?!$equals_9(this$static.claim, that.claim):!!that.claim)
    return false;
  return this$static.keyChangeProof.ref != null?that.keyChangeProof.ref != null && equals_16(castTo($get_6(this$static.keyChangeProof), 11), castTo($get_6(that.keyChangeProof), 11)):that.keyChangeProof.ref == null;
}

function $toCbor_3(this$static){
  var transformed, values;
  values = new TreeMap;
  $put_6(values, 'owner', new CborObject$CborMerkleLink(this$static.owner.target));
  $put_6(values, 'claim', $toCbor_4(this$static.claim));
  $ifPresent(this$static.keyChangeProof, new UserPublicKeyLink$lambda$2$Type(values));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(values), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function UserPublicKeyLink(owner, claim){
  UserPublicKeyLink_0.call(this, owner, claim, ($clinit_Optional() , $clinit_Optional() , EMPTY));
}

function UserPublicKeyLink_0(ownerHash, claim, keyChangeProof){
  this.owner = ownerHash;
  this.claim = claim;
  this.keyChangeProof = keyChangeProof;
}

function createChain(oldUser, newUser, username, expiry, storageProviders){
  var fromOld, link_0, newClaim;
  newClaim = build_1(username, newUser.secret, expiry, storageProviders);
  link_0 = $signMessage(oldUser.secret, $toByteArray_2(new CborObject$CborMerkleLink(newUser.publicKeyHash.target)));
  fromOld = new UserPublicKeyLink_0(oldUser.publicKeyHash, build_1(username, oldUser.secret, ($clinit_LocalDate() , MAX), ($clinit_Collections() , $clinit_Collections() , EMPTY_LIST)), ($clinit_Optional() , new Optional(checkCriticalNotNull(link_0))));
  return new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_corenode_UserPublicKeyLink_2_classLit, 1), $intern_0, 72, 0, [fromOld, new UserPublicKeyLink(newUser.publicKeyHash, newClaim)]));
}

function createInitial(signer, username, expiry, storageProviders){
  var newClaim;
  newClaim = build_1(username, signer.secret, expiry, storageProviders);
  return $clinit_Collections() , new Collections$SingletonList(new UserPublicKeyLink(signer.publicKeyHash, newClaim));
}

function fromCbor_4(cbor){
  var claim, keyChangeProof, map_0, owner;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor for UserPublicKeyLink: ' + cbor));
  map_0 = castTo(cbor, 18);
  owner = fromCbor_23(castTo($get_0(map_0.values_0, new CborObject$CborString('owner')), 7));
  claim = fromCbor_5(castTo($get_0(map_0.values_0, new CborObject$CborString('claim')), 7));
  keyChangeProof = $map(ofNullable(castTo($get_0(map_0.values_0, new CborObject$CborString('keychange')), 7)), makeLambdaFunction(UserPublicKeyLink$lambda$3$Type.prototype.apply_0, UserPublicKeyLink$lambda$3$Type, []));
  return new UserPublicKeyLink_0(owner, claim, keyChangeProof);
}

function lambda$10_0(target_0, from_1, ipfs_2, valid_3){
  var keyChangeProof;
  if (!(checkCriticalNotNull(valid_3) , valid_3))
    return new CompletableFuture_0(($clinit_Boolean() , false));
  keyChangeProof = $map(from_1.keyChangeProof, makeLambdaFunction(UserPublicKeyLink$lambda$0$Type.prototype.apply_0, UserPublicKeyLink$lambda$0$Type, []));
  if (keyChangeProof.ref == null)
    return new CompletableFuture_0(($clinit_Boolean() , false));
  return $thenApply(ipfs_2.getSigningKey(from_1.owner, from_1.owner), makeLambdaFunction(UserPublicKeyLink$lambda$11$Type.prototype.apply_0, UserPublicKeyLink$lambda$11$Type, [keyChangeProof, target_0]));
}

function lambda$11_0(keyChangeProof_0, target_1, ownerKeyOpt_2){
  var targetKey;
  if (ownerKeyOpt_2.ref == null)
    return $clinit_Boolean() , false;
  targetKey = fromCbor_23(fromByteArray((checkCriticalElement(ownerKeyOpt_2.ref != null) , $unsignMessage(castTo(ownerKeyOpt_2.ref, 233), (checkCriticalElement(keyChangeProof_0.ref != null) , castTo(keyChangeProof_0.ref, 11))))));
  if (!equals_16($toByteArray_2(new CborObject$CborMerkleLink(targetKey.target)), $toByteArray_2(new CborObject$CborMerkleLink(target_1.target))))
    return $clinit_Boolean() , false;
  return $clinit_Boolean() , true;
}

function lambda$12_0(from_0, ownerKeyOpt_1){
  var e;
  if (ownerKeyOpt_1.ref == null)
    return $clinit_Boolean() , false;
  try {
    return $clinit_Boolean() , $equals_9(from_0.claim, deserialize_0(from_0.claim.signedContents, (checkCriticalElement(ownerKeyOpt_1.ref != null) , castTo(ownerKeyOpt_1.ref, 233))))?true:false;
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 51)) {
      e = $e0;
      $printStackTraceImpl(e, ($clinit_System() , err_0), '', '');
      return $clinit_Boolean() , false;
    }
     else 
      throw toJs($e0);
  }
}

function lambda$5_3(result_0, valid_1){
  if (!(checkCriticalNotNull(valid_1) , valid_1))
    throw toJs(new IllegalStateException_0('Invalid key chain merge!'));
  return result_0;
}

function lambda$7_1(b_0, res_1){
  return $clinit_Boolean() , (checkCriticalNotNull(res_1) , res_1) && (checkCriticalNotNull(b_0) , b_0)?true:false;
}

function lambda$9_1(chain_0, username_1, ipfs_2, valid_3){
  var last;
  if (!(checkCriticalNotNull(valid_3) , valid_3))
    return new CompletableFuture_0(($clinit_Boolean() , false));
  last = castTo(chain_0.getAtIndex(chain_0.size() - 1), 72);
  return validClaim(last, username_1, ipfs_2);
}

function merge_3(existing, updated, ipfs){
  var currentLast, i, indexOfChange, previousKeys, result, tail;
  if (existing.size() == 0 || equals_Ljava_lang_Object__Z__devirtual$(updated, existing))
    return new CompletableFuture_0(updated);
  indexOfChange = 0;
  for (i = 0; i < updated.size(); i++)
    if ($equals_8(castTo(updated.getAtIndex(i), 72), existing.getAtIndex(i)))
      ++indexOfChange;
    else 
      break;
  tail = updated.subList(indexOfChange, updated.size());
  currentLast = castTo(existing.getAtIndex(existing.size() - 1), 72);
  if ($compareTo_8(castTo(tail.getAtIndex(0), 72).claim.expiry, currentLast.claim.expiry) < 0)
    throw toJs(new IllegalStateException_0('New claim chain expiry before existing!'));
  if (!$equals_13(castTo(tail.getAtIndex(0), 72).owner, currentLast.owner)) {
    return tail.size() == 1?errored(new IllegalStateException_0('User already exists: Invalid key change attempt!')):errored(new IllegalStateException_0('Different keys in merge chains intersection!'));
  }
  previousKeys = castTo($collect_0($map_0($limit(existing.stream(), existing.size() - 1), makeLambdaFunction(UserPublicKeyLink$lambda$4$Type.prototype.apply_0, UserPublicKeyLink$lambda$4$Type, [])), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47);
  if (previousKeys.contains(castTo(tail.getAtIndex(tail.size() - 1), 72).owner)) {
    return errored(new IllegalStateException_0('You cannot reuse a previous password!'));
  }
  result = castTo(concat(existing.subList(0, existing.size() - 1).stream(), tail.stream()).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [IDENTITY_FINISH]))), 17);
  return $thenApply(validChain(result, castTo(tail.getAtIndex(0), 72).claim.username, ipfs), makeLambdaFunction(UserPublicKeyLink$lambda$5$Type.prototype.apply_0, UserPublicKeyLink$lambda$5$Type, [result]));
}

function validChain(chain, username, ipfs){
  var composer, i, validities;
  validities = new ArrayList;
  for (i = 0; i < chain.size() - 1; i++)
    $add(validities, validLink(castTo(chain.getAtIndex(i), 72), castTo(chain.getAtIndex(i + 1), 72).owner, username, ipfs));
  composer = new UserPublicKeyLink$lambda$6$Type;
  return $thenCompose(reduceAll(validities, ($clinit_Boolean() , true), composer, new UserPublicKeyLink$lambda$8$Type), makeLambdaFunction(UserPublicKeyLink$lambda$9$Type.prototype.apply_0, UserPublicKeyLink$lambda$9$Type, [chain, username, ipfs]));
}

function validClaim(from, username, ipfs){
  if (username.indexOf(' ') != -1 || username.indexOf('\t') != -1 || username.indexOf('\n') != -1)
    return new CompletableFuture_0(($clinit_Boolean() , false));
  if (username.length > 64)
    return new CompletableFuture_0(($clinit_Boolean() , false));
  if (!$equals_0(from.claim.username, username))
    return new CompletableFuture_0(($clinit_Boolean() , false));
  if (from.claim.storageProviders.size() > 1)
    return new CompletableFuture_0(($clinit_Boolean() , false));
  return $thenApply(ipfs.getSigningKey(from.owner, from.owner), makeLambdaFunction(UserPublicKeyLink$lambda$12$Type.prototype.apply_0, UserPublicKeyLink$lambda$12$Type, [from]));
}

function validLink(from, target, username, ipfs){
  return $thenCompose(validClaim(from, username, ipfs), makeLambdaFunction(UserPublicKeyLink$lambda$10$Type.prototype.apply_0, UserPublicKeyLink$lambda$10$Type, [target, from, ipfs]));
}

defineClass(72, 1, {7:1, 72:1}, UserPublicKeyLink, UserPublicKeyLink_0);
_.serialize = function serialize_20(){
  return $toByteArray_2($toCbor_3(this));
}
;
_.equals_0 = function equals_40(o){
  return $equals_8(this, o);
}
;
_.hashCode_1 = function hashCode_39(){
  var result;
  result = this.owner?this.owner.target.hashCode():0;
  result = 31 * result + (this.claim?$hashCode_1(this.claim):0);
  result = 31 * result + castTo($orElse($map(this.keyChangeProof, makeLambdaFunction(UserPublicKeyLink$0methodref$hashCode$Type.prototype.apply_0, UserPublicKeyLink$0methodref$hashCode$Type, [])), valueOf_1(0)), 100).value_0;
  return result;
}
;
_.toCbor = function toCbor_12(){
  return $toCbor_3(this);
}
;
var Lpeergos_shared_corenode_UserPublicKeyLink_2_classLit = createForClass('peergos.shared.corenode', 'UserPublicKeyLink', 72);
function UserPublicKeyLink$0methodref$hashCode$Type(){
}

defineClass(2511, $wnd.Function, $intern_22, UserPublicKeyLink$0methodref$hashCode$Type);
_.apply_0 = function apply_176(arg0){
  return valueOf_1(hashCode_17(castTo(arg0, 11)));
}
;
function $equals_9(this$static, o){
  var that;
  if (maskUndefined(this$static) === maskUndefined(o))
    return true;
  if (o == null || Lpeergos_shared_corenode_UserPublicKeyLink$Claim_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 302);
  if (this$static.username != null?!$equals_0(this$static.username, that.username):that.username != null)
    return false;
  if (this$static.expiry?!$equals_2(this$static.expiry, that.expiry):!!that.expiry)
    return false;
  if (!equals_Ljava_lang_Object__Z__devirtual$(this$static.storageProviders, that.storageProviders))
    return false;
  return equals_16(this$static.signedContents, that.signedContents);
}

function $hashCode_1(this$static){
  var result;
  result = this$static.username != null?getHashCode_1(this$static.username):0;
  result = 31 * result + (this$static.expiry?$hashCode(this$static.expiry):0);
  result = 31 * result + hashCode__I__devirtual$(this$static.storageProviders);
  result = 31 * result + hashCode_17(this$static.signedContents);
  return result;
}

function $toCbor_4(this$static){
  return new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborString(this$static.username), new CborObject$CborString($toString_1(this$static.expiry)), new CborObject$CborList(castTo($collect_0($map_0(this$static.storageProviders.stream(), makeLambdaFunction(UserPublicKeyLink$Claim$lambda$0$Type.prototype.apply_0, UserPublicKeyLink$Claim$lambda$0$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17)), new CborObject$CborByteArray(this$static.signedContents)])));
}

function UserPublicKeyLink$Claim(username, expiry, storageProviders, signedContents){
  this.username = username;
  this.expiry = expiry;
  this.storageProviders = storageProviders;
  this.signedContents = signedContents;
}

function build_1(username, from, expiryDate, storageProviders){
  var bout, dout, e, payload, signed, storageProvider, storageProvider$iterator;
  try {
    bout = new ByteArrayOutputStream;
    dout = new DataOutputStream(bout);
    $writeInt(dout, username.length);
    $write_3(dout, $getBytes(username, ($clinit_EmulatedCharset() , UTF_8_0)));
    serialize_137($toString_1(expiryDate), dout);
    $writeInt(dout, storageProviders.size());
    for (storageProvider$iterator = storageProviders.iterator(); storageProvider$iterator.hasNext_0();) {
      storageProvider = castTo(storageProvider$iterator.next_1(), 58);
      serialize_138(storageProvider.toBytes(), dout);
    }
    payload = $toByteArray(bout);
    signed = $crypto_sign(from.implementation, payload, from.secretKey);
    return new UserPublicKeyLink$Claim(username, expiryDate, storageProviders, signed);
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 62)) {
      e = $e0;
      throw toJs(new RuntimeException_2(e));
    }
     else 
      throw toJs($e0);
  }
}

function deserialize_0(signedContents, signer){
  var bin, contents, din, expiry, i, nStorageProviders, storageProviders, username;
  contents = $unsignMessage(signer, signedContents);
  bin = new ByteArrayInputStream(contents);
  din = new DataInputStream(bin);
  username = deserializeString(din, 64);
  expiry = parse_0(deserializeString(din, 16));
  nStorageProviders = $readInt(din);
  storageProviders = new ArrayList;
  for (i = 0; i < nStorageProviders; i++) {
    $add(storageProviders, cast(deserializeByteArray(din, 100)));
  }
  return new UserPublicKeyLink$Claim(username, expiry, storageProviders, signedContents);
}

function fromCbor_5(cbor){
  var contents, expiry, signedContents, storageProviders, username;
  if (!instanceOf(cbor, 21))
    throw toJs(new IllegalStateException_0('Invalid cbor for Username claim: ' + cbor));
  contents = castTo(cbor, 21).value_0;
  username = castTo(contents.getAtIndex(0), 13).value_0;
  expiry = parse_0(castTo(contents.getAtIndex(1), 13).value_0);
  storageProviders = castTo($collect_0($map_0(castTo(contents.getAtIndex(2), 21).value_0.stream(), makeLambdaFunction(UserPublicKeyLink$Claim$lambda$1$Type.prototype.apply_0, UserPublicKeyLink$Claim$lambda$1$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  signedContents = castTo(contents.getAtIndex(3), 27).value_0;
  return new UserPublicKeyLink$Claim(username, expiry, storageProviders, signedContents);
}

defineClass(302, 1, {7:1, 302:1}, UserPublicKeyLink$Claim);
_.serialize = function serialize_21(){
  return $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborString(this.username), new CborObject$CborString($toString_1(this.expiry)), new CborObject$CborList(castTo($collect_0($map_0(this.storageProviders.stream(), makeLambdaFunction(UserPublicKeyLink$Claim$lambda$0$Type.prototype.apply_0, UserPublicKeyLink$Claim$lambda$0$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17)), new CborObject$CborByteArray(this.signedContents)]))));
}
;
_.equals_0 = function equals_41(o){
  return $equals_9(this, o);
}
;
_.hashCode_1 = function hashCode_40(){
  return $hashCode_1(this);
}
;
_.toCbor = function toCbor_13(){
  return $toCbor_4(this);
}
;
var Lpeergos_shared_corenode_UserPublicKeyLink$Claim_2_classLit = createForClass('peergos.shared.corenode', 'UserPublicKeyLink/Claim', 302);
function UserPublicKeyLink$Claim$lambda$0$Type(){
}

defineClass(1302, $wnd.Function, $intern_22, UserPublicKeyLink$Claim$lambda$0$Type);
_.apply_0 = function apply_177(arg0){
  return new CborObject$CborByteArray(castTo(arg0, 58).toBytes());
}
;
function UserPublicKeyLink$Claim$lambda$1$Type(){
}

defineClass(2520, $wnd.Function, $intern_22, UserPublicKeyLink$Claim$lambda$1$Type);
_.apply_0 = function apply_178(arg0){
  return cast(castTo(castTo(arg0, 7), 27).value_0);
}
;
function UserPublicKeyLink$lambda$0$Type(){
}

defineClass(2518, $wnd.Function, $intern_22, UserPublicKeyLink$lambda$0$Type);
_.apply_0 = function apply_179(arg0){
  return copyOfRange(castTo(arg0, 11), 0, castTo(arg0, 11).length);
}
;
function UserPublicKeyLink$lambda$10$Type(target_0, from_1, ipfs_2){
  this.target_0 = target_0;
  this.from_1 = from_1;
  this.ipfs_2 = ipfs_2;
}

defineClass(2516, $wnd.Function, $intern_22, UserPublicKeyLink$lambda$10$Type);
_.apply_0 = function apply_180(arg0){
  return lambda$10_0(this.target_0, this.from_1, this.ipfs_2, arg0);
}
;
function UserPublicKeyLink$lambda$11$Type(keyChangeProof_0, target_1){
  this.keyChangeProof_0 = keyChangeProof_0;
  this.target_1 = target_1;
}

defineClass(2519, $wnd.Function, $intern_22, UserPublicKeyLink$lambda$11$Type);
_.apply_0 = function apply_181(arg0){
  return lambda$11_0(this.keyChangeProof_0, this.target_1, arg0);
}
;
function UserPublicKeyLink$lambda$12$Type(from_0){
  this.from_0 = from_0;
}

defineClass(2517, $wnd.Function, $intern_22, UserPublicKeyLink$lambda$12$Type);
_.apply_0 = function apply_182(arg0){
  return lambda$12_0(this.from_0, arg0);
}
;
function UserPublicKeyLink$lambda$2$Type(values_0){
  this.values_0 = values_0;
}

defineClass(832, 1, $intern_32, UserPublicKeyLink$lambda$2$Type);
_.accept = function accept_38(arg0){
  $put_6(this.values_0, 'keychange', new CborObject$CborByteArray(castTo(arg0, 11)));
}
;
_.andThen = function andThen_18(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_corenode_UserPublicKeyLink$lambda$2$Type_2_classLit = createForClass('peergos.shared.corenode', 'UserPublicKeyLink/lambda$2$Type', 832);
function UserPublicKeyLink$lambda$3$Type(){
}

defineClass(2512, $wnd.Function, $intern_22, UserPublicKeyLink$lambda$3$Type);
_.apply_0 = function apply_183(arg0){
  return castTo(castTo(arg0, 7), 27).value_0;
}
;
function UserPublicKeyLink$lambda$4$Type(){
}

defineClass(2513, $wnd.Function, $intern_22, UserPublicKeyLink$lambda$4$Type);
_.apply_0 = function apply_184(arg0){
  return castTo(arg0, 72).owner;
}
;
function UserPublicKeyLink$lambda$5$Type(result_0){
  this.result_0 = result_0;
}

defineClass(2514, $wnd.Function, $intern_22, UserPublicKeyLink$lambda$5$Type);
_.apply_0 = function apply_185(arg0){
  return lambda$5_3(this.result_0, arg0);
}
;
function UserPublicKeyLink$lambda$6$Type(){
}

defineClass(833, 1, $intern_34, UserPublicKeyLink$lambda$6$Type);
_.apply_1 = function apply_186(arg0, arg1){
  return $thenApply(castTo(arg1, 6), makeLambdaFunction(UserPublicKeyLink$lambda$7$Type.prototype.apply_0, UserPublicKeyLink$lambda$7$Type, [castToBoolean(arg0)]));
}
;
var Lpeergos_shared_corenode_UserPublicKeyLink$lambda$6$Type_2_classLit = createForClass('peergos.shared.corenode', 'UserPublicKeyLink/lambda$6$Type', 833);
function UserPublicKeyLink$lambda$7$Type(b_0){
  this.b_0 = b_0;
}

defineClass(2521, $wnd.Function, $intern_22, UserPublicKeyLink$lambda$7$Type);
_.apply_0 = function apply_187(arg0){
  return lambda$7_1(this.b_0, arg0);
}
;
function UserPublicKeyLink$lambda$8$Type(){
}

defineClass(834, 1, $intern_34, UserPublicKeyLink$lambda$8$Type);
_.apply_1 = function apply_188(arg0, arg1){
  return $clinit_Boolean() , (checkCriticalNotNull(castToBoolean(arg0)) , castToBoolean(arg0)) && (checkCriticalNotNull(castToBoolean(arg1)) , castToBoolean(arg1))?true:false;
}
;
var Lpeergos_shared_corenode_UserPublicKeyLink$lambda$8$Type_2_classLit = createForClass('peergos.shared.corenode', 'UserPublicKeyLink/lambda$8$Type', 834);
function UserPublicKeyLink$lambda$9$Type(chain_0, username_1, ipfs_2){
  this.chain_0 = chain_0;
  this.username_1 = username_1;
  this.ipfs_2 = ipfs_2;
}

defineClass(2515, $wnd.Function, $intern_22, UserPublicKeyLink$lambda$9$Type);
_.apply_0 = function apply_189(arg0){
  return lambda$9_1(this.chain_0, this.username_1, this.ipfs_2, arg0);
}
;
defineClass(1225, 1, {});
var REGEX = '^[a-z0-9](?:[a-z0-9]|[-](?=[a-z0-9])){0,31}$';
var Lpeergos_shared_corenode_Usernames_2_classLit = createForClass('peergos.shared.corenode', 'Usernames', 1225);
function $decrypt(this$static, to, from, fromCbor){
  var secret;
  secret = $decryptMessage(to, this$static.cipherText, from);
  return fromCbor(deserialize(new CborDecoder(new ByteArrayInputStream(secret)), secret.length));
}

function AsymmetricCipherText(cipherText){
  this.cipherText = cipherText;
}

function fromCbor_7(cbor){
  if (!instanceOf(cbor, 27))
    throw toJs(new IllegalStateException_0('Invalid cbor for asymmetric cipher text: ' + cbor));
  return new AsymmetricCipherText(castTo(cbor, 27).value_0);
}

defineClass(369, 1, {7:1, 369:1}, AsymmetricCipherText);
_.serialize = function serialize_22(){
  return $toByteArray_2(new CborObject$CborByteArray(this.cipherText));
}
;
_.toCbor = function toCbor_14(){
  return new CborObject$CborByteArray(this.cipherText);
}
;
var Lpeergos_shared_crypto_AsymmetricCipherText_2_classLit = createForClass('peergos.shared.crypto', 'AsymmetricCipherText', 369);
function BoxingKeyPair(publicBoxingKey, secretBoxingKey){
  this.publicBoxingKey = publicBoxingKey;
  this.secretBoxingKey = secretBoxingKey;
}

function fromCbor_8(cbor){
  var pub, secret, values;
  if (!instanceOf(cbor, 21))
    throw toJs(new IllegalStateException_0('Incorrect cbor for SigningKeyPair: ' + cbor));
  values = castTo(cbor, 21).value_0;
  pub = fromCbor_15(castTo(values.getAtIndex(0), 7));
  secret = fromCbor_17(castTo(values.getAtIndex(1), 7));
  return new BoxingKeyPair(pub, secret);
}

function random_2(random, boxer){
  var publicBoxBytes, r, secretBoxBytes;
  secretBoxBytes = initUnidimensionalArray(B_classLit, $intern_28, 8, 32, 15, 1);
  publicBoxBytes = initUnidimensionalArray(B_classLit, $intern_28, 8, 32, 15, 1);
  r = random.scriptJS.randombytes(32);
  arraycopy(r, 0, secretBoxBytes, 0, 32);
  return $crypto_box_keypair(boxer, publicBoxBytes, secretBoxBytes) , new BoxingKeyPair(new Curve25519PublicKey(publicBoxBytes, boxer, random), new Curve25519SecretKey(secretBoxBytes, boxer));
}

defineClass(188, 1, {7:1, 188:1}, BoxingKeyPair);
_.serialize = function serialize_23(){
  return $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [$toCbor_11(this.publicBoxingKey), $toCbor_12(this.secretBoxingKey)]))));
}
;
_.toCbor = function toCbor_15(){
  return new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [$toCbor_11(this.publicBoxingKey), $toCbor_12(this.secretBoxingKey)])));
}
;
var Lpeergos_shared_crypto_BoxingKeyPair_2_classLit = createForClass('peergos.shared.crypto', 'BoxingKeyPair', 188);
function $decrypt_0(this$static, from, fromCbor){
  var secret;
  secret = $decrypt_5(from, this$static.cipherText, this$static.nonce);
  return fromCbor(deserialize(new CborDecoder(new ByteArrayInputStream(secret)), secret.length));
}

function $decrypt_1(this$static, from, fromCbor, monitor){
  var secret;
  secret = $decrypt_5(from, this$static.cipherText, this$static.nonce);
  monitor(valueOf_2(secret.length));
  return fromCbor(deserialize(new CborDecoder(new ByteArrayInputStream(secret)), secret.length));
}

function $toCbor_5(this$static){
  return new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject$CborByteArray_2_classLit, 1), $intern_0, 27, 0, [new CborObject$CborByteArray(this$static.nonce), new CborObject$CborByteArray(this$static.cipherText)])));
}

function CipherText(nonce, cipherText){
  this.nonce = nonce;
  this.cipherText = cipherText;
}

function build_2(from, secret){
  var cipherText, nonce;
  nonce = $createNonce_0(from);
  cipherText = $encrypt(from, secret.serialize(), nonce);
  return new CipherText(nonce, cipherText);
}

function fromCbor_9(cbor){
  var cipherText, nonce, parts;
  if (!instanceOf(cbor, 21))
    throw toJs(new IllegalStateException_0('Invalid cbor for cipher text: ' + cbor));
  parts = castTo(cbor, 21).value_0;
  nonce = castTo(parts.getAtIndex(0), 27).value_0;
  cipherText = castTo(parts.getAtIndex(1), 27).value_0;
  return new CipherText(nonce, cipherText);
}

defineClass(283, 1, $intern_67, CipherText);
_.serialize = function serialize_24(){
  return $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject$CborByteArray_2_classLit, 1), $intern_0, 27, 0, [new CborObject$CborByteArray(this.nonce), new CborObject$CborByteArray(this.cipherText)]))));
}
;
_.toCbor = function toCbor_16(){
  return $toCbor_5(this);
}
;
var Lpeergos_shared_crypto_CipherText_2_classLit = createForClass('peergos.shared.crypto', 'CipherText', 283);
function $clinit_FragmentedPaddedCipherText(){
  var threadLocal;
  $clinit_FragmentedPaddedCipherText = emptyMethod;
  arrayCache = (threadLocal = new ThreadLocal , $set(threadLocal, ($clinit_FragmentedPaddedCipherText() , initMultidimensionalArray(B_classLit, [$intern_0, $intern_28], [11, 8], 15, [5, $intern_11], 2))) , threadLocal);
}

function $getAndDecrypt(this$static, owner, from, fromCbor, h, network, monitor){
  if (this$static.inlinedCipherText.ref != null) {
    if (this$static.header.ref != null)
      return new CompletableFuture_0($decrypt_1(new CipherText(this$static.nonce, concat_0(castTo($get_6(this$static.header), 11), castTo($get_6(this$static.inlinedCipherText), 11))), from, fromCbor, monitor));
    return new CompletableFuture_0($decrypt_1(new CipherText(this$static.nonce, castTo($get_6(this$static.inlinedCipherText), 11)), from, fromCbor, monitor));
  }
  return $thenApply($thenApply(network.dhtClient.downloadFragments(owner, this$static.cipherTextFragments, this$static.bats, h, monitor, 1), makeLambdaFunction(FragmentedPaddedCipherText$lambda$19$Type.prototype.apply_0, FragmentedPaddedCipherText$lambda$19$Type, [])), makeLambdaFunction(FragmentedPaddedCipherText$lambda$21$Type.prototype.apply_0, FragmentedPaddedCipherText$lambda$21$Type, [this$static, from, fromCbor]));
}

function $lambda$21(this$static, from_1, fromCbor_2, fargs_2){
  return $decrypt_0(new CipherText(this$static.nonce, recombine(this$static.header, fargs_2)), from_1, fromCbor_2);
}

function $toCbor_6(this$static){
  var legacy, state, transformed, value_0;
  state = new TreeMap;
  $put_6(state, 'n', new CborObject$CborByteArray(this$static.nonce));
  $ifPresent(this$static.header, new FragmentedPaddedCipherText$lambda$1$Type(state));
  if (this$static.cipherTextFragments.size() == 1 && castTo(this$static.cipherTextFragments.getAtIndex(0), 44).type == ($clinit_Multihash$Type() , id_3) || this$static.inlinedCipherText.ref != null) {
    legacy = castTo($collect_0($map_0(this$static.cipherTextFragments.stream(), makeLambdaFunction(FragmentedPaddedCipherText$lambda$2$Type.prototype.apply_0, FragmentedPaddedCipherText$lambda$2$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
    value_0 = castTo($orElse($map(this$static.inlinedCipherText, makeLambdaFunction(FragmentedPaddedCipherText$lambda$3$Type.prototype.apply_0, FragmentedPaddedCipherText$lambda$3$Type, [])), legacy), 17);
    $put_6(state, 'f', new CborObject$CborList(value_0));
  }
   else {
    $put_6(state, 'f', new CborObject$CborList(castTo($collect_0($map_0(this$static.cipherTextFragments.stream(), makeLambdaFunction(FragmentedPaddedCipherText$1methodref$ctor$Type.prototype.apply_0, FragmentedPaddedCipherText$1methodref$ctor$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17)));
    $put_6(state, 'bats', new CborObject$CborList(this$static.bats));
  }
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function FragmentedPaddedCipherText(nonce, header, cipherTextFragments, bats, inlinedCipherText){
  this.nonce = nonce;
  this.header = header;
  this.cipherTextFragments = cipherTextFragments;
  this.bats = bats;
  this.inlinedCipherText = inlinedCipherText;
  if (inlinedCipherText.ref != null && !cipherTextFragments.isEmpty())
    throw toJs(new IllegalStateException_0('Cannot have an inlined block and merkle linked blocks!'));
}

function build_3(from, secret, mirrorBat, random, hasher, allowArrayCache){
  $clinit_FragmentedPaddedCipherText();
  var blockBats, chunk, cipherText, header, headerSize, nBlocks, nBlocks0, nonce, padded, plainText, serializationOverhead, split_0;
  nonce = $createNonce_0(from);
  plainText = secret.serialize();
  serializationOverhead = plainText.length <= $intern_15?0:6;
  padded = (nBlocks0 = (plainText.length - serializationOverhead + $intern_15 - 1) / $intern_15 | 0 , checkCopyOfRange(plainText, 0, nBlocks0 * $intern_15 + serializationOverhead) , copyPrimitiveByteArray(plainText, initUnidimensionalArray(B_classLit, $intern_28, 8, nBlocks0 * $intern_15 + serializationOverhead, 15, 1), 0, nBlocks0 * $intern_15 + serializationOverhead));
  cipherText = encrypt_0(from.secretKey, padded, nonce, from.implementation);
  if (padded.length <= 4102) {
    chunk = new FragmentedPaddedCipherText(nonce, ($clinit_Optional() , $clinit_Optional() , EMPTY), ($clinit_Collections() , $clinit_Collections() , EMPTY_LIST), (null , EMPTY_LIST), new Optional(checkCriticalNotNull(cipherText)));
    return new CompletableFuture_0(new Pair(chunk, (null , EMPTY_LIST)));
  }
  headerSize = cipherText.length % $intern_15;
  header = ($clinit_Optional() , new Optional(checkCriticalNotNull((checkCopyOfRange(cipherText, 0, headerSize) , copyPrimitiveByteArray(cipherText, initUnidimensionalArray(B_classLit, $intern_28, 8, headerSize, 15, 1), 0, headerSize)))));
  split_0 = split_3(cipherText, headerSize, allowArrayCache);
  nBlocks = split_0.length;
  blockBats = castTo(range_0(0, nBlocks).mapToObj(new FragmentedPaddedCipherText$lambda$10$Type(random)).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  return $thenCompose(combineAllInOrder(castTo(range_0(0, nBlocks).mapToObj(new FragmentedPaddedCipherText$lambda$11$Type(blockBats, mirrorBat, split_0)).map_1(makeLambdaFunction(FragmentedPaddedCipherText$lambda$12$Type.prototype.apply_0, FragmentedPaddedCipherText$lambda$12$Type, [hasher])).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [IDENTITY_FINISH]))), 54)), makeLambdaFunction(FragmentedPaddedCipherText$lambda$14$Type.prototype.apply_0, FragmentedPaddedCipherText$lambda$14$Type, [hasher, nonce, header, blockBats]));
}

function fromCbor_10(cbor){
  $clinit_FragmentedPaddedCipherText();
  var bats, fragmentHashes, header, inlinedCipherText, m, nonce;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Incorrect cbor for FragmentedPaddedCipherText: ' + cbor));
  m = castTo(cbor, 18);
  nonce = castTo(castTo($get_0(m.values_0, new CborObject$CborString('n')), 7), 27).value_0;
  header = $map(ofNullable(castTo(castTo($get_0(m.values_0, new CborObject$CborString('h')), 7), 27)), makeLambdaFunction(CborObject$CborMap$lambda$5$Type.prototype.apply_0, CborObject$CborMap$lambda$5$Type, []));
  fragmentHashes = castTo($collect_0($map_0($filter(castTo(castTo($get_0(m.values_0, new CborObject$CborString('f')), 7), 21).value_0.stream(), new FragmentedPaddedCipherText$lambda$5$Type), makeLambdaFunction(FragmentedPaddedCipherText$lambda$6$Type.prototype.apply_0, FragmentedPaddedCipherText$lambda$6$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  inlinedCipherText = $findFirst($map_0($filter(castTo(castTo($get_0(m.values_0, new CborObject$CborString('f')), 7), 21).value_0.stream(), new FragmentedPaddedCipherText$lambda$7$Type), makeLambdaFunction(FragmentedPaddedCipherText$lambda$8$Type.prototype.apply_0, FragmentedPaddedCipherText$lambda$8$Type, [])));
  bats = $containsKey_0(m.values_0, new CborObject$CborString('bats'))?$getList(m, 'bats', makeLambdaFunction(FragmentedPaddedCipherText$2methodref$fromCbor$Type.prototype.apply_0, FragmentedPaddedCipherText$2methodref$fromCbor$Type, [])):($clinit_Collections() , $clinit_Collections() , EMPTY_LIST);
  return new FragmentedPaddedCipherText(nonce, header, fragmentHashes, bats, inlinedCipherText);
}

function lambda$10_1(random_0){
  $clinit_FragmentedPaddedCipherText();
  return $clinit_Bat() , new Bat($randomBytes(random_0, 32));
}

function lambda$11_1(blockBats_0, mirrorBat_1, split_2, i_3){
  $clinit_FragmentedPaddedCipherText();
  return concat_0(createRawBlockPrefix(castTo(blockBats_0.getAtIndex(i_3), 61), mirrorBat_1), split_2[i_3]);
}

function lambda$12_1(hasher_0, d_1){
  $clinit_FragmentedPaddedCipherText();
  return $thenApply($thenApply(hasher_0.scriptJS.sha256(d_1), makeLambdaFunction(Hasher$lambda$0$Type.prototype.apply_0, Hasher$lambda$0$Type, [true])), makeLambdaFunction(FragmentedPaddedCipherText$lambda$13$Type.prototype.apply_0, FragmentedPaddedCipherText$lambda$13$Type, [d_1]));
}

function lambda$13(d_0, h_1){
  $clinit_FragmentedPaddedCipherText();
  return new FragmentWithHash(new Fragment(d_0), ($clinit_Optional() , new Optional(checkCriticalNotNull(h_1))));
}

function lambda$14(hasher_0, nonce_1, header_2, blockBats_3, frags_4){
  $clinit_FragmentedPaddedCipherText();
  var hashes;
  hashes = castTo($collect_0($map_0(frags_4.stream(), makeLambdaFunction(FragmentedPaddedCipherText$lambda$15$Type.prototype.apply_0, FragmentedPaddedCipherText$lambda$15$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  return $thenApply(combineAllInOrder(castTo($collect_0($map_0(blockBats_3.stream(), makeLambdaFunction(FragmentedPaddedCipherText$lambda$16$Type.prototype.apply_0, FragmentedPaddedCipherText$lambda$16$Type, [hasher_0])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [IDENTITY_FINISH]))), 54)), makeLambdaFunction(FragmentedPaddedCipherText$lambda$18$Type.prototype.apply_0, FragmentedPaddedCipherText$lambda$18$Type, [nonce_1, header_2, hashes, frags_4]));
}

function lambda$16(hasher_0, b_1){
  $clinit_FragmentedPaddedCipherText();
  return $thenApply($thenApply($hash(hasher_0, $toByteArray_2($toCbor_66(b_1)), true), makeLambdaFunction(Bat$0methodref$ctor$Type.prototype.apply_0, Bat$0methodref$ctor$Type, [])), makeLambdaFunction(FragmentedPaddedCipherText$lambda$17$Type.prototype.apply_0, FragmentedPaddedCipherText$lambda$17$Type, [b_1]));
}

function lambda$18(nonce_0, header_1, hashes_2, frags_3, batsAndIds_4){
  $clinit_FragmentedPaddedCipherText();
  return new Pair(new FragmentedPaddedCipherText(nonce_0, header_1, hashes_2, batsAndIds_4, ($clinit_Optional() , $clinit_Optional() , EMPTY)), frags_3);
}

function lambda$23(output_0, headerSize_1, h_2){
  $clinit_FragmentedPaddedCipherText();
  arraycopy(h_2, 0, output_0, 0, headerSize_1);
}

function recombine(header, encoded){
  var b, headerSize, i, i0, length_0, output, pos;
  length_0 = 0;
  for (i0 = 0; i0 < encoded.size(); i0++)
    length_0 += castTo(encoded.getAtIndex(i0), 131).fragment.data_0.length;
  headerSize = castTo($orElse($map(header, makeLambdaFunction(FragmentedPaddedCipherText$lambda$22$Type.prototype.apply_0, FragmentedPaddedCipherText$lambda$22$Type, [])), valueOf_1(0)), 100).value_0;
  output = initUnidimensionalArray(B_classLit, $intern_28, 8, headerSize + length_0, 15, 1);
  $ifPresent(header, new FragmentedPaddedCipherText$lambda$23$Type(output, headerSize));
  pos = headerSize;
  for (i = 0; i < encoded.size(); i++) {
    b = castTo(encoded.getAtIndex(i), 131).fragment.data_0;
    arraycopy(b, 0, output, pos, b.length);
    pos += b.length;
  }
  return output;
}

function split_3(input_0, inputStartIndex, allowCache){
  var b, cache, cacheIndex, end, i, len, length_0, mod, nFragments, padding, split_0, start_0, useCache;
  padding = 0;
  mod = (input_0.length - inputStartIndex) % 256;
  (mod != 0 || input_0.length - inputStartIndex == 0) && (padding = 256 - mod);
  len = input_0.length - inputStartIndex + padding;
  nFragments = len / $intern_11 | 0;
  len % $intern_11 > 0 && ++nFragments;
  split_0 = initUnidimensionalArray(B_classLit, $intern_0, 11, nFragments, 0, 2);
  cache = arrayCache.value_0;
  cacheIndex = 0;
  for (i = 0; i < nFragments; ++i) {
    start_0 = inputStartIndex + $intern_11 * i;
    end = $wnd.Math.min(input_0.length, start_0 + $intern_11);
    length_0 = end - start_0;
    useCache = allowCache && length_0 == $intern_11;
    b = useCache?cache[cacheIndex++]:initUnidimensionalArray(B_classLit, $intern_28, 8, length_0, 15, 1);
    arraycopy(input_0, start_0, b, 0, length_0);
    split_0[i] = b;
  }
  return split_0;
}

defineClass(229, 1, {7:1, 229:1}, FragmentedPaddedCipherText);
_.serialize = function serialize_25(){
  return $toByteArray_2($toCbor_6(this));
}
;
_.toCbor = function toCbor_17(){
  return $toCbor_6(this);
}
;
var arrayCache;
var Lpeergos_shared_crypto_FragmentedPaddedCipherText_2_classLit = createForClass('peergos.shared.crypto', 'FragmentedPaddedCipherText', 229);
function FragmentedPaddedCipherText$1methodref$ctor$Type(){
}

defineClass(3412, $wnd.Function, $intern_22, FragmentedPaddedCipherText$1methodref$ctor$Type);
_.apply_0 = function apply_190(arg0){
  return new CborObject$CborMerkleLink(castTo(arg0, 58));
}
;
function FragmentedPaddedCipherText$2methodref$fromCbor$Type(){
}

defineClass(3415, $wnd.Function, $intern_22, FragmentedPaddedCipherText$2methodref$fromCbor$Type);
_.apply_0 = function apply_191(arg0){
  return fromCbor_78(castTo(arg0, 7));
}
;
function FragmentedPaddedCipherText$lambda$1$Type(state_0){
  this.state_0 = state_0;
}

defineClass(1084, 1, $intern_32, FragmentedPaddedCipherText$lambda$1$Type);
_.accept = function accept_39(arg0){
  $clinit_FragmentedPaddedCipherText();
  $put_6(this.state_0, 'h', new CborObject$CborByteArray(castTo(arg0, 11)));
}
;
_.andThen = function andThen_19(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_crypto_FragmentedPaddedCipherText$lambda$1$Type_2_classLit = createForClass('peergos.shared.crypto', 'FragmentedPaddedCipherText/lambda$1$Type', 1084);
function FragmentedPaddedCipherText$lambda$10$Type(random_0){
  this.random_0 = random_0;
}

defineClass(1087, 1, {}, FragmentedPaddedCipherText$lambda$10$Type);
_.apply_2 = function apply_192(arg0){
  return lambda$10_1(this.random_0);
}
;
var Lpeergos_shared_crypto_FragmentedPaddedCipherText$lambda$10$Type_2_classLit = createForClass('peergos.shared.crypto', 'FragmentedPaddedCipherText/lambda$10$Type', 1087);
function FragmentedPaddedCipherText$lambda$11$Type(blockBats_0, mirrorBat_1, split_2){
  this.blockBats_0 = blockBats_0;
  this.mirrorBat_1 = mirrorBat_1;
  this.split_2 = split_2;
}

defineClass(1088, 1, {}, FragmentedPaddedCipherText$lambda$11$Type);
_.apply_2 = function apply_193(arg0){
  return lambda$11_1(this.blockBats_0, this.mirrorBat_1, this.split_2, arg0);
}
;
var Lpeergos_shared_crypto_FragmentedPaddedCipherText$lambda$11$Type_2_classLit = createForClass('peergos.shared.crypto', 'FragmentedPaddedCipherText/lambda$11$Type', 1088);
function FragmentedPaddedCipherText$lambda$12$Type(hasher_0){
  this.hasher_0 = hasher_0;
}

defineClass(3416, $wnd.Function, $intern_22, FragmentedPaddedCipherText$lambda$12$Type);
_.apply_0 = function apply_194(arg0){
  return lambda$12_1(this.hasher_0, arg0);
}
;
function FragmentedPaddedCipherText$lambda$13$Type(d_0){
  this.d_0 = d_0;
}

defineClass(3421, $wnd.Function, $intern_22, FragmentedPaddedCipherText$lambda$13$Type);
_.apply_0 = function apply_195(arg0){
  return lambda$13(this.d_0, arg0);
}
;
function FragmentedPaddedCipherText$lambda$14$Type(hasher_0, nonce_1, header_2, blockBats_3){
  this.hasher_0 = hasher_0;
  this.nonce_1 = nonce_1;
  this.header_2 = header_2;
  this.blockBats_3 = blockBats_3;
}

defineClass(3417, $wnd.Function, $intern_22, FragmentedPaddedCipherText$lambda$14$Type);
_.apply_0 = function apply_196(arg0){
  return lambda$14(this.hasher_0, this.nonce_1, this.header_2, this.blockBats_3, arg0);
}
;
function FragmentedPaddedCipherText$lambda$15$Type(){
}

defineClass(3422, $wnd.Function, $intern_22, FragmentedPaddedCipherText$lambda$15$Type);
_.apply_0 = function apply_197(arg0){
  return $clinit_FragmentedPaddedCipherText() , castTo($get_6(castTo(arg0, 131).hash_0), 44);
}
;
function FragmentedPaddedCipherText$lambda$16$Type(hasher_0){
  this.hasher_0 = hasher_0;
}

defineClass(3423, $wnd.Function, $intern_22, FragmentedPaddedCipherText$lambda$16$Type);
_.apply_0 = function apply_198(arg0){
  return lambda$16(this.hasher_0, arg0);
}
;
function FragmentedPaddedCipherText$lambda$17$Type(b_0){
  this.b_0 = b_0;
}

defineClass(3425, $wnd.Function, $intern_22, FragmentedPaddedCipherText$lambda$17$Type);
_.apply_0 = function apply_199(arg0){
  return $clinit_FragmentedPaddedCipherText() , new BatWithId(this.b_0, castTo(arg0, 167).id_0);
}
;
function FragmentedPaddedCipherText$lambda$18$Type(nonce_0, header_1, hashes_2, frags_3){
  this.nonce_0 = nonce_0;
  this.header_1 = header_1;
  this.hashes_2 = hashes_2;
  this.frags_3 = frags_3;
}

defineClass(3424, $wnd.Function, $intern_22, FragmentedPaddedCipherText$lambda$18$Type);
_.apply_0 = function apply_200(arg0){
  return lambda$18(this.nonce_0, this.header_1, this.hashes_2, this.frags_3, arg0);
}
;
function FragmentedPaddedCipherText$lambda$19$Type(){
}

defineClass(3418, $wnd.Function, $intern_22, FragmentedPaddedCipherText$lambda$19$Type);
_.apply_0 = function apply_201(arg0){
  return $clinit_FragmentedPaddedCipherText() , castTo($collect_0($map_0(castTo(arg0, 17).stream(), makeLambdaFunction(FragmentedPaddedCipherText$lambda$20$Type.prototype.apply_0, FragmentedPaddedCipherText$lambda$20$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
}
;
function FragmentedPaddedCipherText$lambda$2$Type(){
}

defineClass(3410, $wnd.Function, $intern_22, FragmentedPaddedCipherText$lambda$2$Type);
_.apply_0 = function apply_202(arg0){
  return $clinit_FragmentedPaddedCipherText() , new CborObject$CborByteArray(copyOfRange(castTo(arg0, 44).hash_0, 0, castTo(arg0, 44).hash_0.length));
}
;
function FragmentedPaddedCipherText$lambda$20$Type(){
}

defineClass(3426, $wnd.Function, $intern_22, FragmentedPaddedCipherText$lambda$20$Type);
_.apply_0 = function apply_203(arg0){
  return $clinit_FragmentedPaddedCipherText() , new FragmentWithHash(new Fragment(removeRawBlockBatPrefix(castTo(arg0, 131).fragment.data_0)), castTo(arg0, 131).hash_0);
}
;
function FragmentedPaddedCipherText$lambda$21$Type($$outer_0, from_1, fromCbor_2){
  this.$$outer_0 = $$outer_0;
  this.from_1 = from_1;
  this.fromCbor_2 = fromCbor_2;
}

defineClass(3419, $wnd.Function, $intern_22, FragmentedPaddedCipherText$lambda$21$Type);
_.apply_0 = function apply_204(arg0){
  return $lambda$21(this.$$outer_0, this.from_1, this.fromCbor_2, arg0);
}
;
function FragmentedPaddedCipherText$lambda$22$Type(){
}

defineClass(3420, $wnd.Function, $intern_22, FragmentedPaddedCipherText$lambda$22$Type);
_.apply_0 = function apply_205(arg0){
  return $clinit_FragmentedPaddedCipherText() , valueOf_1(castTo(arg0, 11).length);
}
;
function FragmentedPaddedCipherText$lambda$23$Type(output_0, headerSize_1){
  this.output_0 = output_0;
  this.headerSize_1 = headerSize_1;
}

defineClass(1089, 1, $intern_32, FragmentedPaddedCipherText$lambda$23$Type);
_.accept = function accept_40(arg0){
  lambda$23(this.output_0, this.headerSize_1, arg0);
}
;
_.andThen = function andThen_20(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
_.headerSize_1 = 0;
var Lpeergos_shared_crypto_FragmentedPaddedCipherText$lambda$23$Type_2_classLit = createForClass('peergos.shared.crypto', 'FragmentedPaddedCipherText/lambda$23$Type', 1089);
function FragmentedPaddedCipherText$lambda$3$Type(){
}

defineClass(3411, $wnd.Function, $intern_22, FragmentedPaddedCipherText$lambda$3$Type);
_.apply_0 = function apply_206(arg0){
  return $clinit_FragmentedPaddedCipherText() , $clinit_Collections() , new Collections$SingletonList(new CborObject$CborByteArray(castTo(arg0, 11)));
}
;
function FragmentedPaddedCipherText$lambda$5$Type(){
}

defineClass(1085, 1, {}, FragmentedPaddedCipherText$lambda$5$Type);
_.test_0 = function test_3(arg0){
  return $clinit_FragmentedPaddedCipherText() , instanceOf(castTo(arg0, 7), 53);
}
;
var Lpeergos_shared_crypto_FragmentedPaddedCipherText$lambda$5$Type_2_classLit = createForClass('peergos.shared.crypto', 'FragmentedPaddedCipherText/lambda$5$Type', 1085);
function FragmentedPaddedCipherText$lambda$6$Type(){
}

defineClass(3413, $wnd.Function, $intern_22, FragmentedPaddedCipherText$lambda$6$Type);
_.apply_0 = function apply_207(arg0){
  return $clinit_FragmentedPaddedCipherText() , castTo(castTo(castTo(arg0, 7), 53).target, 44);
}
;
function FragmentedPaddedCipherText$lambda$7$Type(){
}

defineClass(1086, 1, {}, FragmentedPaddedCipherText$lambda$7$Type);
_.test_0 = function test_4(arg0){
  return $clinit_FragmentedPaddedCipherText() , instanceOf(castTo(arg0, 7), 27);
}
;
var Lpeergos_shared_crypto_FragmentedPaddedCipherText$lambda$7$Type_2_classLit = createForClass('peergos.shared.crypto', 'FragmentedPaddedCipherText/lambda$7$Type', 1086);
function FragmentedPaddedCipherText$lambda$8$Type(){
}

defineClass(3414, $wnd.Function, $intern_22, FragmentedPaddedCipherText$lambda$8$Type);
_.apply_0 = function apply_208(arg0){
  return $clinit_FragmentedPaddedCipherText() , castTo(castTo(arg0, 7), 27).value_0;
}
;
function $getAndVerifyOwner(this$static, owner, ipfs){
  return $thenApply(ipfs.getSigningKey(owner, this$static.ownedKey), makeLambdaFunction(OwnerProof$lambda$0$Type.prototype.apply_0, OwnerProof$lambda$0$Type, [this$static]));
}

function $lambda$0_8(this$static, signer_0){
  return castTo($orElseThrow($map(signer_0, makeLambdaFunction(OwnerProof$lambda$1$Type.prototype.apply_0, OwnerProof$lambda$1$Type, [this$static])), new OwnerProof$lambda$2$Type(this$static)), 55);
}

function $lambda$1_2(this$static, k_0){
  return fromCbor_23(fromByteArray($unsignMessage(k_0, this$static.signedOwner)));
}

function $toCbor_7(this$static){
  var result, transformed;
  result = new TreeMap;
  $put_6(result, 'o', new CborObject$CborMerkleLink(this$static.ownedKey));
  $put_6(result, 'p', new CborObject$CborByteArray(this$static.signedOwner));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(result), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function OwnerProof(ownedKey, signedOwner){
  this.ownedKey = ownedKey;
  this.signedOwner = signedOwner;
}

function build_4(ownedKeypair, owner){
  return new OwnerProof(ownedKeypair.publicKeyHash, $signMessage(ownedKeypair.secret, $toByteArray_2(new CborObject$CborMerkleLink(owner.target))));
}

function fromCbor_11(cbor){
  var m, ownedKey, proof;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Incorrect cbor for OwnerProof: ' + cbor));
  m = castTo(cbor, 18);
  ownedKey = castTo($get_13(m, 'o', makeLambdaFunction(OwnerProof$0methodref$fromCbor$Type.prototype.apply_0, OwnerProof$0methodref$fromCbor$Type, [])), 55);
  proof = castTo($get_13(m, 'p', makeLambdaFunction(OwnerProof$lambda$4$Type.prototype.apply_0, OwnerProof$lambda$4$Type, [])), 27).value_0;
  return new OwnerProof(ownedKey, proof);
}

defineClass(219, 1, {7:1, 219:1}, OwnerProof);
_.serialize = function serialize_26(){
  return $toByteArray_2($toCbor_7(this));
}
;
_.equals_0 = function equals_42(o){
  var that;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_crypto_OwnerProof_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 219);
  return equals_28(this.ownedKey, that.ownedKey) && equals_16(this.signedOwner, that.signedOwner);
}
;
_.hashCode_1 = function hashCode_41(){
  var result;
  result = hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.ownedKey]));
  result = 31 * result + hashCode_17(this.signedOwner);
  return result;
}
;
_.toCbor = function toCbor_18(){
  return $toCbor_7(this);
}
;
var Lpeergos_shared_crypto_OwnerProof_2_classLit = createForClass('peergos.shared.crypto', 'OwnerProof', 219);
function OwnerProof$0methodref$fromCbor$Type(){
}

defineClass(2595, $wnd.Function, $intern_22, OwnerProof$0methodref$fromCbor$Type);
_.apply_0 = function apply_209(arg0){
  return fromCbor_23(castTo(arg0, 7));
}
;
function OwnerProof$lambda$0$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2594, $wnd.Function, $intern_22, OwnerProof$lambda$0$Type);
_.apply_0 = function apply_210(arg0){
  return $lambda$0_8(this.$$outer_0, arg0);
}
;
function OwnerProof$lambda$1$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2597, $wnd.Function, $intern_22, OwnerProof$lambda$1$Type);
_.apply_0 = function apply_211(arg0){
  return $lambda$1_2(this.$$outer_0, arg0);
}
;
function OwnerProof$lambda$2$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(844, 1, {}, OwnerProof$lambda$2$Type);
_.get_0 = function get_32(){
  return new IllegalStateException_0("Couldn't retrieve owned key: " + this.$$outer_0.ownedKey);
}
;
var Lpeergos_shared_crypto_OwnerProof$lambda$2$Type_2_classLit = createForClass('peergos.shared.crypto', 'OwnerProof/lambda$2$Type', 844);
function OwnerProof$lambda$4$Type(){
}

defineClass(2596, $wnd.Function, $intern_22, OwnerProof$lambda$4$Type);
_.apply_0 = function apply_212(arg0){
  return castTo(castTo(arg0, 7), 27);
}
;
function $decrypt_2(this$static, to, from, fromCbor){
  return $decrypt(this$static.cipherText, to, from, fromCbor);
}

function PaddedAsymmetricCipherText(cipherText){
  this.cipherText = cipherText;
}

function build_5(from, to, secret){
  var cipherText;
  cipherText = $encryptMessageFor(to, pad($toByteArray_2($toCbor_53(secret)), 512), from);
  return new PaddedAsymmetricCipherText(new AsymmetricCipherText(cipherText));
}

defineClass(506, 1, $intern_67, PaddedAsymmetricCipherText);
_.serialize = function serialize_27(){
  return $toByteArray_2(new CborObject$CborByteArray(this.cipherText.cipherText));
}
;
_.toCbor = function toCbor_19(){
  return new CborObject$CborByteArray(this.cipherText.cipherText);
}
;
var Lpeergos_shared_crypto_PaddedAsymmetricCipherText_2_classLit = createForClass('peergos.shared.crypto', 'PaddedAsymmetricCipherText', 506);
function $decrypt_3(this$static, from, fromCbor){
  return $decrypt_0(this$static.cipherText, from, fromCbor);
}

function PaddedCipherText(cipherText){
  this.cipherText = cipherText;
}

function build_6(from, secret, paddingBlockSize){
  var cipherText, nonce;
  if (paddingBlockSize < 1)
    throw toJs(new IllegalStateException_0('Invalid padding block size: ' + paddingBlockSize));
  nonce = $createNonce_0(from);
  cipherText = $encrypt(from, pad(secret.serialize(), paddingBlockSize), nonce);
  return new PaddedCipherText(new CipherText(nonce, cipherText));
}

function pad(input_0, blockSize){
  var nBlocks;
  nBlocks = (input_0.length + blockSize - 1) / blockSize | 0;
  return checkCopyOfRange(input_0, 0, nBlocks * blockSize) , copyPrimitiveByteArray(input_0, initUnidimensionalArray(B_classLit, $intern_28, 8, nBlocks * blockSize, 15, 1), 0, nBlocks * blockSize);
}

defineClass(186, 1, {7:1, 186:1}, PaddedCipherText);
_.serialize = function serialize_28(){
  return $toByteArray_2($toCbor_5(this.cipherText));
}
;
_.toCbor = function toCbor_20(){
  return $toCbor_5(this.cipherText);
}
;
var Lpeergos_shared_crypto_PaddedCipherText_2_classLit = createForClass('peergos.shared.crypto', 'PaddedCipherText', 186);
function $toCbor_8(this$static){
  var transformed, values;
  values = new TreeMap;
  $put_6(values, 'prefix', new CborObject$CborByteArray(this$static.prefix));
  $put_6(values, 'type', new CborObject$CborLong(this$static.type_0.index));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(values), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function ProofOfWork(prefix, type_0){
  this.prefix = prefix;
  this.type_0 = type_0;
}

function buildSha256(prefix, data_0){
  return new ProofOfWork(prefix, ($clinit_Multihash$Type() , sha2_256));
}

function satisfiesDifficulty(difficulty, hash){
  var i, raw;
  for (i = 0; i < difficulty; i += 8) {
    if (i <= difficulty - 8) {
      if (hash[i / 8 | 0] != 0)
        return false;
    }
     else {
      raw = hash[i / 8 | 0] & 255;
      return (255 & raw << 8 - difficulty + i) == 0;
    }
  }
  return true;
}

defineClass(842, 1, $intern_67, ProofOfWork);
_.serialize = function serialize_29(){
  return $toByteArray_2($toCbor_8(this));
}
;
_.toCbor = function toCbor_21(){
  return $toCbor_8(this);
}
;
var Lpeergos_shared_crypto_ProofOfWork_2_classLit = createForClass('peergos.shared.crypto', 'ProofOfWork', 842);
function RequiredDifficulty(requiredDifficulty){
  this.requiredDifficulty = requiredDifficulty;
}

defineClass(252, 1, {252:1}, RequiredDifficulty);
_.toString_0 = function toString_48(){
  return 'Difficulty: ' + this.requiredDifficulty;
}
;
_.requiredDifficulty = 0;
var Lpeergos_shared_crypto_RequiredDifficulty_2_classLit = createForClass('peergos.shared.crypto', 'RequiredDifficulty', 252);
function SigningKeyPair(publicSigningKey, secretSigningKey){
  this.publicSigningKey = publicSigningKey;
  this.secretSigningKey = secretSigningKey;
}

function fromCbor_12(cbor){
  var pub, secret, values;
  if (!instanceOf(cbor, 21))
    throw toJs(new IllegalStateException_0('Incorrect cbor for SigningKeyPair: ' + cbor));
  values = castTo(cbor, 21).value_0;
  pub = fromCbor_16(castTo(values.getAtIndex(0), 7));
  secret = fromCbor_18(castTo(values.getAtIndex(1), 7));
  return new SigningKeyPair(pub, secret);
}

function random_3(random, signer){
  var publicSignBytes, r, secretSignBytes;
  secretSignBytes = initUnidimensionalArray(B_classLit, $intern_28, 8, 64, 15, 1);
  publicSignBytes = initUnidimensionalArray(B_classLit, $intern_28, 8, 32, 15, 1);
  r = random.scriptJS.randombytes(32);
  arraycopy(r, 0, secretSignBytes, 0, 32);
  return $crypto_sign_keypair(signer, publicSignBytes, secretSignBytes) , new SigningKeyPair(new Ed25519PublicKey(publicSignBytes, signer), new Ed25519SecretKey(secretSignBytes, signer));
}

defineClass(190, 1, {7:1, 190:1}, SigningKeyPair);
_.serialize = function serialize_30(){
  return $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [$toCbor_13(this.publicSigningKey), $toCbor_14(this.secretSigningKey)]))));
}
;
_.equals_0 = function equals_43(o){
  var that;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_crypto_SigningKeyPair_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 190);
  if (this.publicSigningKey?!$equals_10(this.publicSigningKey, that.publicSigningKey):!!that.publicSigningKey)
    return false;
  return this.secretSigningKey?$equals_11(this.secretSigningKey, that.secretSigningKey):!that.secretSigningKey;
}
;
_.hashCode_1 = function hashCode_42(){
  var result;
  result = this.publicSigningKey?hashCode_17(this.publicSigningKey.publicKey):0;
  result = 31 * result + (this.secretSigningKey?hashCode_17(this.secretSigningKey.secretKey):0);
  return result;
}
;
_.toCbor = function toCbor_22(){
  return new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [$toCbor_13(this.publicSigningKey), $toCbor_14(this.secretSigningKey)])));
}
;
_.toString_0 = function toString_49(){
  return encode_6(($clinit_Multibase$Base() , Base58BTC), $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [$toCbor_13(this.publicSigningKey), $toCbor_14(this.secretSigningKey)])))));
}
;
var Lpeergos_shared_crypto_SigningKeyPair_2_classLit = createForClass('peergos.shared.crypto', 'SigningKeyPair', 190);
function $toCbor_9(this$static){
  var result, transformed;
  result = new TreeMap;
  $put_6(result, 'p', new CborObject$CborMerkleLink(this$static.publicKeyHash.target));
  $put_6(result, 's', this$static.secret.toCbor());
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(result), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function SigningPrivateKeyAndPublicHash(publicKeyHash, secret){
  this.publicKeyHash = publicKeyHash;
  this.secret = secret;
}

function fromCbor_13(cbor){
  var map_0, publicKeyHash, secretKey;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor for SigningPrivateKeyAndPublicHash: ' + cbor));
  map_0 = castTo(cbor, 18);
  publicKeyHash = fromCbor_23(castTo($get_0(map_0.values_0, new CborObject$CborString('p')), 7));
  secretKey = fromCbor_18(castTo($get_0(map_0.values_0, new CborObject$CborString('s')), 7));
  return new SigningPrivateKeyAndPublicHash(publicKeyHash, secretKey);
}

defineClass(105, 1, {7:1, 105:1}, SigningPrivateKeyAndPublicHash);
_.serialize = function serialize_31(){
  return $toByteArray_2($toCbor_9(this));
}
;
_.equals = function equals_44(o){
  var that;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_crypto_SigningPrivateKeyAndPublicHash_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 105);
  return equals_28(this.publicKeyHash, that.publicKeyHash) && equals_28(this.secret, that.secret);
}
;
_.equals_0 = function(o){
  return this.equals(o);
}
;
_.hashCode = function hashCode_43(){
  return hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.publicKeyHash, this.secret]));
}
;
_.hashCode_1 = function(){
  return this.hashCode();
}
;
_.toCbor = function toCbor_23(){
  return $toCbor_9(this);
}
;
_.toString = function toString_50(){
  return this.publicKeyHash.target.toString();
}
;
_.toString_0 = function(){
  return this.toString();
}
;
var Lpeergos_shared_crypto_SigningPrivateKeyAndPublicHash_2_classLit = createForClass('peergos.shared.crypto', 'SigningPrivateKeyAndPublicHash', 105);
function $decrypt_4(this$static, to, fromCbor){
  return $decrypt(this$static.cipherText, to, this$static.from, fromCbor);
}

function $toCbor_10(this$static){
  var result, transformed;
  result = new TreeMap;
  $put_6(result, 'k', this$static.from);
  $put_6(result, 'c', this$static.cipherText);
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(result), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function SourcedAsymmetricCipherText(from, cipherText){
  this.from = from;
  this.cipherText = cipherText;
}

function fromCbor_14(cbor){
  var cipherText, m, source;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor for SourcedAsymmetricCipherText: ' + cbor));
  m = castTo(cbor, 18);
  source = castTo($get_13(m, 'k', makeLambdaFunction(SourcedAsymmetricCipherText$0methodref$fromCbor$Type.prototype.apply_0, SourcedAsymmetricCipherText$0methodref$fromCbor$Type, [])), 384);
  cipherText = castTo($get_13(m, 'c', makeLambdaFunction(SourcedAsymmetricCipherText$1methodref$fromCbor$Type.prototype.apply_0, SourcedAsymmetricCipherText$1methodref$fromCbor$Type, [])), 369);
  return new SourcedAsymmetricCipherText(source, cipherText);
}

defineClass(400, 1, {7:1, 400:1}, SourcedAsymmetricCipherText);
_.serialize = function serialize_32(){
  return $toByteArray_2($toCbor_10(this));
}
;
_.toCbor = function toCbor_24(){
  return $toCbor_10(this);
}
;
var Lpeergos_shared_crypto_SourcedAsymmetricCipherText_2_classLit = createForClass('peergos.shared.crypto', 'SourcedAsymmetricCipherText', 400);
function SourcedAsymmetricCipherText$0methodref$fromCbor$Type(){
}

defineClass(2707, $wnd.Function, $intern_22, SourcedAsymmetricCipherText$0methodref$fromCbor$Type);
_.apply_0 = function apply_213(arg0){
  return fromCbor_15(castTo(arg0, 7));
}
;
function SourcedAsymmetricCipherText$1methodref$fromCbor$Type(){
}

defineClass(2708, $wnd.Function, $intern_22, SourcedAsymmetricCipherText$1methodref$fromCbor$Type);
_.apply_0 = function apply_214(arg0){
  return fromCbor_7(castTo(arg0, 7));
}
;
function SymmetricLink(cipherText){
  this.cipherText = cipherText;
}

defineClass(306, 1, {7:1, 306:1}, SymmetricLink);
_.serialize = function serialize_33(){
  return $toByteArray_2($toCbor_5(this.cipherText));
}
;
_.toCbor = function toCbor_25(){
  return $toCbor_5(this.cipherText);
}
;
var Lpeergos_shared_crypto_SymmetricLink_2_classLit = createForClass('peergos.shared.crypto', 'SymmetricLink', 306);
function SymmetricLink$0methodref$fromCbor$Type(){
}

defineClass(2632, $wnd.Function, $intern_22, SymmetricLink$0methodref$fromCbor$Type);
_.apply_0 = function apply_215(arg0){
  return fromCbor_24(castTo(arg0, 7));
}
;
function SymmetricLinkToSigner(cipherText){
  this.cipherText = cipherText;
}

defineClass(316, 1, {7:1, 316:1}, SymmetricLinkToSigner);
_.serialize = function serialize_34(){
  return $toByteArray_2($toCbor_5(this.cipherText));
}
;
_.toCbor = function toCbor_26(){
  return $toCbor_5(this.cipherText);
}
;
var Lpeergos_shared_crypto_SymmetricLinkToSigner_2_classLit = createForClass('peergos.shared.crypto', 'SymmetricLinkToSigner', 316);
function SymmetricLinkToSigner$0methodref$fromCbor$Type(){
}

defineClass(1604, $wnd.Function, $intern_22, SymmetricLinkToSigner$0methodref$fromCbor$Type);
_.apply_0 = function apply_216(arg0){
  return fromCbor_13(castTo(arg0, 7));
}
;
function $clinit_PublicBoxingKey(){
  $clinit_PublicBoxingKey = emptyMethod;
  byValue = new HashMap;
  PROVIDERS = new HashMap;
  RNG_PROVIDERS = new HashMap;
}

function addProvider(t, provider){
  $clinit_PublicBoxingKey();
  $put(PROVIDERS, t, provider);
}

function fromByteArray_0(raw){
  $clinit_PublicBoxingKey();
  return fromCbor_15(deserialize(new CborDecoder(new ByteArrayInputStream(raw)), raw.length));
}

function fromCbor_15(cbor){
  $clinit_PublicBoxingKey();
  var t, type_0;
  if (!instanceOf(cbor, 21))
    throw toJs(new IllegalStateException_0('Invalid cbor for PublicBoxingKey! ' + cbor));
  type_0 = castTo(castTo(cbor, 21).value_0.getAtIndex(0), 29);
  t = byValue_0(toInt_0(type_0.value_0));
  switch (t.ordinal_0) {
    case 0:
      return fromCbor_19(cbor, castTo($get(PROVIDERS, t), 1187), castTo($get(RNG_PROVIDERS, t), 86));
    default:throw toJs(new IllegalStateException_0('Unknown Public Boxing Key type: ' + (t.name_0 != null?t.name_0:'' + t.ordinal_0)));
  }
}

function setRng(t, rng){
  $clinit_PublicBoxingKey();
  $put(RNG_PROVIDERS, t, rng);
}

var PROVIDERS, RNG_PROVIDERS, byValue;
function $clinit_PublicBoxingKey$Type(){
  $clinit_PublicBoxingKey$Type = emptyMethod;
  Curve25519 = new PublicBoxingKey$Type;
}

function PublicBoxingKey$Type(){
  Enum.call(this, 'Curve25519', 0);
  this.value_0 = 1;
  $put(($clinit_PublicBoxingKey() , byValue), valueOf_1(1), this);
}

function byValue_0(val){
  $clinit_PublicBoxingKey$Type();
  if (!$containsKey(($clinit_PublicBoxingKey() , byValue), valueOf_1(val)))
    throw toJs(new IllegalStateException_0(($clinit_ArrayOps() , 'Unknown public boxing key type: ' + HEX[val & 255])));
  return castTo($get(byValue, valueOf_1(val)), 346);
}

function values_7(){
  $clinit_PublicBoxingKey$Type();
  return stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_crypto_asymmetric_PublicBoxingKey$Type_2_classLit, 1), $intern_33, 346, 0, [Curve25519]);
}

defineClass(346, 52, {4:1, 57:1, 52:1, 346:1}, PublicBoxingKey$Type);
_.value_0 = 0;
var Curve25519;
var Lpeergos_shared_crypto_asymmetric_PublicBoxingKey$Type_2_classLit = createForEnum('peergos.shared.crypto.asymmetric', 'PublicBoxingKey/Type', 346, values_7);
function $clinit_PublicSigningKey(){
  $clinit_PublicSigningKey = emptyMethod;
  byValue_1 = new HashMap;
  PROVIDERS_0 = new HashMap;
}

function addProvider_0(t, provider){
  $clinit_PublicSigningKey();
  $put(PROVIDERS_0, t, provider);
}

function fromByteArray_1(raw){
  $clinit_PublicSigningKey();
  return fromCbor_16(deserialize(new CborDecoder(new ByteArrayInputStream(raw)), raw.length));
}

function fromCbor_16(cbor){
  $clinit_PublicSigningKey();
  var t, type_0;
  if (!instanceOf(cbor, 21))
    throw toJs(new IllegalStateException_0('Invalid cbor for PublicSigningKey! ' + cbor));
  type_0 = castTo(castTo(cbor, 21).value_0.getAtIndex(0), 29);
  t = byValue_2(toInt_0(type_0.value_0));
  switch (t.ordinal_0) {
    case 0:
      return fromCbor_21(cbor, castTo($get(PROVIDERS_0, t), 1186));
    default:throw toJs(new IllegalStateException_0('Unknown Public Signing Key type: ' + (t.name_0 != null?t.name_0:'' + t.ordinal_0)));
  }
}

var PROVIDERS_0, byValue_1;
function $clinit_PublicSigningKey$Type(){
  $clinit_PublicSigningKey$Type = emptyMethod;
  Ed25519 = new PublicSigningKey$Type;
}

function PublicSigningKey$Type(){
  Enum.call(this, 'Ed25519', 0);
  this.value = 1;
  $put(($clinit_PublicSigningKey() , byValue_1), valueOf_1(1), this);
}

function byValue_2(val){
  $clinit_PublicSigningKey$Type();
  if (!$containsKey(($clinit_PublicSigningKey() , byValue_1), valueOf_1(val)))
    throw toJs(new IllegalStateException_0(($clinit_ArrayOps() , 'Unknown public signing key type: ' + HEX[val & 255])));
  return castTo($get(byValue_1, valueOf_1(val)), 299);
}

function valueOf_8(name_0){
  $clinit_PublicSigningKey$Type();
  return valueOf_0(($clinit_PublicSigningKey$Type$Map() , $MAP), name_0);
}

function values_8(){
  $clinit_PublicSigningKey$Type();
  return stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_crypto_asymmetric_PublicSigningKey$Type_2_classLit, 1), $intern_33, 299, 0, [Ed25519]);
}

defineClass(299, 52, {4:1, 57:1, 52:1, 299:1}, PublicSigningKey$Type);
_.value = 0;
var Ed25519;
var Lpeergos_shared_crypto_asymmetric_PublicSigningKey$Type_2_classLit = createForEnum('peergos.shared.crypto.asymmetric', 'PublicSigningKey/Type', 299, values_8);
function $clinit_PublicSigningKey$Type$Map(){
  $clinit_PublicSigningKey$Type$Map = emptyMethod;
  $MAP = createValueOfMap(($clinit_PublicSigningKey$Type() , stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_crypto_asymmetric_PublicSigningKey$Type_2_classLit, 1), $intern_33, 299, 0, [Ed25519])));
}

var $MAP;
function fromCbor_17(cbor){
  var t, type_0;
  if (!instanceOf(cbor, 21))
    throw toJs(new IllegalStateException_0('Invalid cbor for PublicBoxingKey! ' + cbor));
  type_0 = castTo(castTo(cbor, 21).value_0.getAtIndex(0), 29);
  t = byValue_0(toInt_0(type_0.value_0));
  switch (t.ordinal_0) {
    case 0:
      return fromCbor_20(cbor, castTo($get(($clinit_PublicBoxingKey() , PROVIDERS), ($clinit_PublicBoxingKey$Type() , Curve25519)), 1187));
    default:throw toJs(new IllegalStateException_0('Unknown Secret Boxing Key type: ' + (t.name_0 != null?t.name_0:'' + t.ordinal_0)));
  }
}

function fromCbor_18(cbor){
  var t, type_0;
  if (!instanceOf(cbor, 21))
    throw toJs(new IllegalStateException_0('Invalid cbor for SecretSigningKey! ' + cbor));
  type_0 = castTo(castTo(cbor, 21).value_0.getAtIndex(0), 29);
  t = byValue_2(toInt_0(type_0.value_0));
  switch (t.ordinal_0) {
    case 0:
      return fromCbor_22(cbor, castTo($get(($clinit_PublicSigningKey() , PROVIDERS_0), t), 1186));
    default:throw toJs(new IllegalStateException_0('Unknown Secret Signing Key type: ' + (t.name_0 != null?t.name_0:'' + t.ordinal_0)));
  }
}

function $crypto_box(this$static, message, nonce, theirPublicBoxingKey, ourSecretBoxingKey){
  return this$static.scriptJS.crypto_box(message, nonce, theirPublicBoxingKey, ourSecretBoxingKey);
}

function $crypto_box_keypair(this$static, pk, sk){
  var bytes, i;
  bytes = this$static.scriptJS.crypto_box_keypair(pk, sk);
  for (i = 0; i < bytes.length; i++) {
    pk[i] = bytes[i];
  }
}

function $crypto_box_open(this$static, cipher, nonce, theirPublicBoxingKey, secretBoxingKey){
  return this$static.scriptJS.crypto_box_open(cipher, nonce, theirPublicBoxingKey, secretBoxingKey);
}

function Curve25519$Javascript(){
  this.scriptJS = new $wnd.tweetNaCl.JSNaCl;
}

defineClass(573, 1, {1187:1}, Curve25519$Javascript);
var Lpeergos_shared_crypto_asymmetric_curve25519_Curve25519$Javascript_2_classLit = createForClass('peergos.shared.crypto.asymmetric.curve25519', 'Curve25519/Javascript', 573);
function $createNonce(this$static){
  var nonce;
  nonce = initUnidimensionalArray(B_classLit, $intern_28, 8, 24, 15, 1);
  $randombytes(this$static.random_0, nonce, 0, nonce.length);
  return nonce;
}

function $encryptMessageFor(this$static, input_0, from){
  var nonce;
  nonce = $createNonce(this$static);
  return concat_0($crypto_box(this$static.implementation, input_0, nonce, this$static.publicKey, copyOfRange(from.secretKey, 0, from.secretKey.length)), nonce);
}

function $toCbor_11(this$static){
  return new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborLong(($clinit_PublicBoxingKey$Type() , Curve25519).value_0), new CborObject$CborByteArray(this$static.publicKey)])));
}

function Curve25519PublicKey(publicKey, provider, random){
  if (publicKey.length != 32)
    throw toJs(new IllegalArgumentException_0('Incorrect curve25519 public key length! ' + publicKey.length));
  this.publicKey = publicKey;
  this.implementation = provider;
  this.random_0 = random;
}

function fromCbor_19(cbor, provider, random){
  var key;
  if (!instanceOf(cbor, 21))
    throw toJs(new IllegalStateException_0('Invalid cbor for PublicBoxingKey! ' + cbor));
  key = castTo(castTo(cbor, 21).value_0.getAtIndex(1), 27);
  return new Curve25519PublicKey(key.value_0, provider, random);
}

defineClass(315, 1, {7:1, 384:1, 315:1}, Curve25519PublicKey);
_.serialize = function serialize_35(){
  return $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborLong(($clinit_PublicBoxingKey$Type() , Curve25519).value_0), new CborObject$CborByteArray(this.publicKey)]))));
}
;
_.createNonce = function createNonce(){
  return $createNonce(this);
}
;
_.encryptMessageFor = function encryptMessageFor(input_0, from){
  return $encryptMessageFor(this, input_0, from);
}
;
_.equals_0 = function equals_45(o){
  var that;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_crypto_asymmetric_curve25519_Curve25519PublicKey_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 315);
  return equals_16(this.publicKey, that.publicKey);
}
;
_.getPublicBoxingKey = function getPublicBoxingKey(){
  return copyOfRange(this.publicKey, 0, this.publicKey.length);
}
;
_.hashCode_1 = function hashCode_44(){
  return hashCode_17(this.publicKey);
}
;
_.toCbor = function toCbor_27(){
  return $toCbor_11(this);
}
;
var Lpeergos_shared_crypto_asymmetric_curve25519_Curve25519PublicKey_2_classLit = createForClass('peergos.shared.crypto.asymmetric.curve25519', 'Curve25519PublicKey', 315);
function $decryptMessage(this$static, cipher, from){
  var nonce;
  nonce = copyOfRange(cipher, cipher.length - 24, cipher.length);
  cipher = copyOfRange(cipher, 0, cipher.length - 24);
  return $crypto_box_open(this$static.implementation, cipher, nonce, copyOfRange(from.publicKey, 0, from.publicKey.length), this$static.secretKey);
}

function $toCbor_12(this$static){
  return new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborLong(($clinit_PublicBoxingKey$Type() , Curve25519).value_0), new CborObject$CborByteArray(this$static.secretKey)])));
}

function Curve25519SecretKey(secretKey, provider){
  this.secretKey = secretKey;
  this.implementation = provider;
}

function fromCbor_20(cbor, provider){
  var key;
  if (!instanceOf(cbor, 21))
    throw toJs(new IllegalStateException_0('Invalid cbor for SecretBoxingKey! ' + cbor));
  key = castTo(castTo(cbor, 21).value_0.getAtIndex(1), 27);
  return new Curve25519SecretKey(key.value_0, provider);
}

defineClass(325, 1, {7:1, 325:1}, Curve25519SecretKey);
_.serialize = function serialize_36(){
  return $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborLong(($clinit_PublicBoxingKey$Type() , Curve25519).value_0), new CborObject$CborByteArray(this.secretKey)]))));
}
;
_.decryptMessage = function decryptMessage(cipher, from){
  return $decryptMessage(this, cipher, from);
}
;
_.equals_0 = function equals_46(o){
  var that;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_crypto_asymmetric_curve25519_Curve25519SecretKey_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 325);
  return equals_16(this.secretKey, that.secretKey);
}
;
_.getSecretBoxingKey = function getSecretBoxingKey(){
  return copyOfRange(this.secretKey, 0, this.secretKey.length);
}
;
_.hashCode_1 = function hashCode_45(){
  return hashCode_17(this.secretKey);
}
;
_.toCbor = function toCbor_28(){
  return $toCbor_12(this);
}
;
var Lpeergos_shared_crypto_asymmetric_curve25519_Curve25519SecretKey_2_classLit = createForClass('peergos.shared.crypto.asymmetric.curve25519', 'Curve25519SecretKey', 325);
function $crypto_sign(this$static, message, secretSigningKey){
  return this$static.scriptJS.crypto_sign(message, secretSigningKey);
}

function $crypto_sign_keypair(this$static, pk, sk){
  var bytes, i, i0;
  bytes = this$static.scriptJS.crypto_sign_keypair(pk, sk);
  for (i0 = 0; i0 < bytes[0].length; i0++) {
    pk[i0] = bytes[0][i0];
  }
  for (i = 0; i < bytes[1].length; i++) {
    sk[i] = bytes[1][i];
  }
}

function $crypto_sign_open(this$static, signed, publicSigningKey){
  return this$static.scriptJS.crypto_sign_open(signed, publicSigningKey);
}

function Ed25519$Javascript(){
  this.scriptJS = new $wnd.tweetNaCl.JSNaCl;
}

defineClass(572, 1, {1186:1}, Ed25519$Javascript);
var Lpeergos_shared_crypto_asymmetric_curve25519_Ed25519$Javascript_2_classLit = createForClass('peergos.shared.crypto.asymmetric.curve25519', 'Ed25519/Javascript', 572);
function $equals_10(this$static, o){
  var that;
  if (maskUndefined(this$static) === maskUndefined(o))
    return true;
  if (o == null || Lpeergos_shared_crypto_asymmetric_curve25519_Ed25519PublicKey_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 313);
  return equals_16(this$static.publicKey, that.publicKey);
}

function $toCbor_13(this$static){
  return new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborLong(($clinit_PublicSigningKey$Type() , Ed25519).value), new CborObject$CborByteArray(this$static.publicKey)])));
}

function $unsignMessage(this$static, signed){
  if (!this$static.implementation)
    throw toJs(new IllegalStateException_0('Uninitialized crypto-implementation: call peergos.shared.Crypto::init'));
  return $crypto_sign_open(this$static.implementation, signed, this$static.publicKey);
}

function Ed25519PublicKey(publicKey, provider){
  this.publicKey = publicKey;
  this.implementation = provider;
}

function fromCbor_21(cbor, provider){
  var key;
  if (!instanceOf(cbor, 21))
    throw toJs(new IllegalStateException_0('Invalid cbor for Ed25519 public key! ' + cbor));
  key = castTo(castTo(cbor, 21).value_0.getAtIndex(1), 27);
  return new Ed25519PublicKey(key.value_0, provider);
}

defineClass(313, 1, {7:1, 233:1, 313:1}, Ed25519PublicKey);
_.serialize = function serialize_37(){
  return $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborLong(($clinit_PublicSigningKey$Type() , Ed25519).value), new CborObject$CborByteArray(this.publicKey)]))));
}
;
_.equals_0 = function equals_47(o){
  return $equals_10(this, o);
}
;
_.hashCode_1 = function hashCode_46(){
  return hashCode_17(this.publicKey);
}
;
_.toCbor = function toCbor_29(){
  return $toCbor_13(this);
}
;
_.toString_0 = function toString_51(){
  return $encodeToString($toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborLong(($clinit_PublicSigningKey$Type() , Ed25519).value), new CborObject$CborByteArray(this.publicKey)])))));
}
;
_.unsignMessage = function unsignMessage(signed){
  return $unsignMessage(this, signed);
}
;
var Lpeergos_shared_crypto_asymmetric_curve25519_Ed25519PublicKey_2_classLit = createForClass('peergos.shared.crypto.asymmetric.curve25519', 'Ed25519PublicKey', 313);
function $equals_11(this$static, o){
  var that;
  if (maskUndefined(this$static) === maskUndefined(o))
    return true;
  if (o == null || Lpeergos_shared_crypto_asymmetric_curve25519_Ed25519SecretKey_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 314);
  return equals_16(this$static.secretKey, that.secretKey);
}

function $signMessage(this$static, message){
  return $crypto_sign(this$static.implementation, message, this$static.secretKey);
}

function $signatureOnly(this$static, message){
  return copyOf($crypto_sign(this$static.implementation, message, this$static.secretKey), 64);
}

function $toCbor_14(this$static){
  return new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborLong(($clinit_PublicSigningKey$Type() , Ed25519).value), new CborObject$CborByteArray(this$static.secretKey)])));
}

function Ed25519SecretKey(secretKey, provider){
  this.secretKey = secretKey;
  this.implementation = provider;
}

function fromCbor_22(cbor, provider){
  var key;
  if (!instanceOf(cbor, 21))
    throw toJs(new IllegalStateException_0('Invalid cbor for Ed25519 secret key! ' + cbor));
  key = castTo(castTo(cbor, 21).value_0.getAtIndex(1), 27);
  return new Ed25519SecretKey(key.value_0, provider);
}

defineClass(314, 1, {7:1, 314:1}, Ed25519SecretKey);
_.serialize = function serialize_38(){
  return $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborLong(($clinit_PublicSigningKey$Type() , Ed25519).value), new CborObject$CborByteArray(this.secretKey)]))));
}
;
_.equals_0 = function equals_48(o){
  return $equals_11(this, o);
}
;
_.hashCode_1 = function hashCode_47(){
  return hashCode_17(this.secretKey);
}
;
_.signMessage = function signMessage(message){
  return $signMessage(this, message);
}
;
_.signatureOnly = function signatureOnly(message){
  return $signatureOnly(this, message);
}
;
_.toCbor = function toCbor_30(){
  return $toCbor_14(this);
}
;
_.type = function type_1(){
  return $clinit_PublicSigningKey$Type() , Ed25519;
}
;
var Lpeergos_shared_crypto_asymmetric_curve25519_Ed25519SecretKey_2_classLit = createForClass('peergos.shared.crypto.asymmetric.curve25519', 'Ed25519SecretKey', 314);
function sha256(input_0){
  var md;
  md = new SHA256Digest;
  $engineUpdate_0(md, input_0, input_0.length);
  return $engineDigest(md);
}

function $clinit_Hasher(){
  $clinit_Hasher = emptyMethod;
  hmacInfo = concat_0(($clinit_StandardCharsets() , UTF_8).getBytes('peergos'), stampJavaTypeInfo(getClassLiteralForArray(B_classLit, 1), $intern_28, 8, 15, [1]));
}

function $identityHash(input_0, isRaw){
  if (input_0.length > 36)
    throw toJs(new IllegalStateException_0('Exceeded maximum size for identity multihashes!'));
  return new Cid(1, isRaw?($clinit_Cid$Codec() , Raw):($clinit_Cid$Codec() , DagCbor), ($clinit_Multihash$Type() , id_3), input_0);
}

function lambda$0_4(isRaw_0, h_1){
  $clinit_Hasher();
  return new Cid(1, isRaw_0?($clinit_Cid$Codec() , Raw):($clinit_Cid$Codec() , DagCbor), ($clinit_Multihash$Type() , sha2_256), h_1);
}

var hmacInfo;
function Hasher$0methodref$ctor$Type(){
}

defineClass(1250, $wnd.Function, $intern_22, Hasher$0methodref$ctor$Type);
_.apply_0 = function apply_217(arg0){
  return new Bat(castTo(arg0, 11));
}
;
function Hasher$lambda$0$Type(isRaw_0){
  this.isRaw_0 = isRaw_0;
}

defineClass(536, $wnd.Function, $intern_22, Hasher$lambda$0$Type);
_.apply_0 = function apply_218(arg0){
  return lambda$0_4(this.isRaw_0, arg0);
}
;
_.isRaw_0 = false;
function Hasher$lambda$1$Type(){
}

defineClass(1248, $wnd.Function, $intern_22, Hasher$lambda$1$Type);
_.apply_0 = function apply_219(arg0){
  return $clinit_Hasher() , new Multihash(($clinit_Multihash$Type() , sha2_256), castTo(arg0, 11));
}
;
function Hasher$lambda$2$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1249, $wnd.Function, $intern_22, Hasher$lambda$2$Type);
_.apply_0 = function apply_220(arg0){
  return $hmacSha256(this.$$outer_0, castTo(arg0, 11), ($clinit_Hasher() , hmacInfo));
}
;
function $compareTo_15(this$static, that){
  var compare, i;
  compare = compare_4(this$static.hash_0.length, that.hash_0.length);
  if (compare != 0)
    return compare;
  for (i = 0; i < this$static.hash_0.length; i++) {
    compare = this$static.hash_0[i] - that.hash_0[i];
    if (compare != 0)
      return compare;
  }
  return compare_4(this$static.type.index, that.type.index);
}

function $equals_12(this$static, o){
  if (!instanceOf(o, 58))
    return false;
  return this$static.type == castTo(o, 58).type && equals_16(this$static.hash_0, castTo(o, 58).hash_0);
}

function $getHash(this$static){
  return copyOfRange(this$static.hash_0, 0, this$static.hash_0.length);
}

function $serializeObj(this$static, out){
  var e;
  try {
    putUvarint(out, this$static.type.index);
    putUvarint(out, this$static.hash_0.length);
    out.write_1(this$static.hash_0);
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 62)) {
      e = $e0;
      throw toJs(new RuntimeException_2(e));
    }
     else 
      throw toJs($e0);
  }
}

function $toBytes(this$static){
  var e, res;
  try {
    res = new ByteArrayOutputStream;
    putUvarint(res, this$static.type.index);
    putUvarint(res, this$static.hash_0.length);
    $write(res, this$static.hash_0);
    return $toByteArray(res);
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 62)) {
      e = $e0;
      throw toJs(new RuntimeException_2(e));
    }
     else 
      throw toJs($e0);
  }
}

function Multihash(type_0, hash){
  if (hash.length > 127 && type_0 != ($clinit_Multihash$Type() , id_3))
    throw toJs(new IllegalStateException_0('Unsupported hash size: ' + hash.length));
  if (hash.length > 4112)
    throw toJs(new IllegalStateException_0('Unsupported hash size: ' + hash.length));
  if (hash.length != type_0.length && type_0 != ($clinit_Multihash$Type() , id_3))
    throw toJs(new IllegalStateException_0('Incorrect hash length: ' + hash.length + ' != ' + type_0.length));
  this.type = type_0;
  this.hash_0 = hash;
}

function decode_1(multihash){
  return new Multihash(lookup_3(multihash[0] & 255), copyOfRange(multihash, 2, multihash.length));
}

function deserializeObj(din){
  var hash, len, read, t, total, type_0;
  type_0 = toInt_0(readVarint(din));
  len = toInt_0(readVarint(din));
  t = lookup_3(type_0);
  hash = initUnidimensionalArray(B_classLit, $intern_28, 8, len, 15, 1);
  total = 0;
  while (total < len) {
    read = (checkCriticalNotNull(hash) , din.read_0(hash, 0, hash.length));
    if (read < 0)
      throw toJs(new EOFException);
    else 
      total += read;
  }
  return new Multihash(t, hash);
}

function fromBase58(base58){
  return decode_1(decode_6(base58));
}

function putUvarint(out, x_0){
  while (compare_1(x_0, 128) >= 0) {
    out.write_0(toInt_0(or_0(x_0, 128)) << 24 >> 24);
    x_0 = shr_0(x_0, 7);
  }
  out.write_0(toInt_0(x_0) << 24 >> 24);
}

function readVarint(in_0){
  var b, i, s, x_0;
  x_0 = 0;
  s = 0;
  for (i = 0; i < 10; i++) {
    b = in_0.read();
    if (b < 128) {
      if (i == 9 && b > 1) {
        throw toJs(new IllegalStateException_0('Overflow reading varint!'));
      }
       else if (b == 0 && s > 0)
        throw toJs(new IllegalStateException_0('Non minimal varint encoding!'));
      return or_0(x_0, shl_0(b, s));
    }
    x_0 = or_0(x_0, shl_0(and_0(b, 127), s));
    s += 7;
  }
  throw toJs(new IllegalStateException_0('Varint too long!'));
}

defineClass(58, 1, {57:1, 58:1}, Multihash);
_.compareTo_0 = function compareTo_15(that){
  return $compareTo_15(this, castTo(that, 58));
}
;
_.bareMultihash = function bareMultihash(){
  return this;
}
;
_.compareTo = function compareTo_16(that){
  return $compareTo_15(this, that);
}
;
_.equals = function equals_49(o){
  return $equals_12(this, o);
}
;
_.equals_0 = function(o){
  return this.equals(o);
}
;
_.getHash = function getHash(){
  return $getHash(this);
}
;
_.hashCode = function hashCode_48(){
  return hashCode_17(this.hash_0) ^ getHashCode_0(this.type);
}
;
_.hashCode_1 = function(){
  return this.hashCode();
}
;
_.isIdentity = function isIdentity(){
  return this.type == ($clinit_Multihash$Type() , id_3);
}
;
_.serializeObj = function serializeObj(out){
  $serializeObj(this, out);
}
;
_.toBase58 = function toBase58(){
  return encode_4(this.toBytes());
}
;
_.toBytes = function toBytes(){
  return $toBytes(this);
}
;
_.toString = function toString_52(){
  return encode_4(this.toBytes());
}
;
_.toString_0 = function(){
  return this.toString();
}
;
var LEGACY_MAX_IDENTITY_HASH_SIZE = 4112, MAX_IDENTITY_HASH_SIZE = 36;
var Lpeergos_shared_io_ipfs_Multihash_2_classLit = createForClass('peergos.shared.io.ipfs', 'Multihash', 58);
function $toBytesV1(this$static){
  var e, res;
  try {
    res = new ByteArrayOutputStream;
    putUvarint(res, this$static.version);
    putUvarint(res, this$static.codec.type_0);
    $serializeObj(this$static, res);
    return $toByteArray(res);
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 62)) {
      e = $e0;
      throw toJs(new RuntimeException_2(e));
    }
     else 
      throw toJs($e0);
  }
}

function Cid(version, codec, type_0, hash){
  Multihash.call(this, type_0, hash);
  this.version = version;
  this.codec = codec;
}

function build_7(version, codec, h){
  return new Cid(version, codec, h.type, copyOfRange(h.hash_0, 0, h.hash_0.length));
}

function buildV0(h){
  return build_7(0, ($clinit_Cid$Codec() , DagProtobuf), h);
}

function cast(data_0){
  var codec, hash, in_0, version;
  if (data_0.length == 34 && data_0[0] == 18 && data_0[1] == 32)
    return buildV0(new Multihash(lookup_3(data_0[0] & 255), copyOfRange(data_0, 2, data_0.length)));
  in_0 = new ByteArrayInputStream(data_0);
  try {
    version = readVarint(in_0);
    if (compare_1(version, 0) != 0 && compare_1(version, 1) != 0)
      throw toJs(new Cid$CidEncodingException('Invalid Cid version number: ' + toString_4(version)));
    codec = readVarint(in_0);
    hash = deserializeObj(in_0);
    return new Cid(version, lookup_1(codec), hash.type, copyOfRange(hash.hash_0, 0, hash.hash_0.length));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 51)) {
      throw toJs(new Cid$CidEncodingException('Invalid cid bytes: ' + bytesToHex(data_0)));
    }
     else 
      throw toJs($e0);
  }
}

function decode_2(v){
  var data_0;
  if (v.length < 2)
    throw toJs(new IllegalStateException_0('Cid too short!'));
  if (v.length == 46 && $equals_0(v.substr(0, 2), 'Qm'))
    return buildV0(decode_1(decode_6(v)));
  data_0 = decode_8(v);
  return cast(data_0);
}

function decodePeerId(peerId){
  var hash;
  if ($equals_0(peerId.substr(0, 1), '1')) {
    hash = decode_1(decode_6(peerId));
    return new Cid(1, ($clinit_Cid$Codec() , LibP2pKey), hash.type, copyOfRange(hash.hash_0, 0, hash.hash_0.length));
  }
  return decode_2(peerId);
}

defineClass(44, 58, {57:1, 44:1, 58:1}, Cid);
_.bareMultihash = function bareMultihash_0(){
  return new Multihash(this.type, copyOfRange(this.hash_0, 0, this.hash_0.length));
}
;
_.equals = function equals_50(o){
  var cid;
  if (this === o)
    return true;
  if (!instanceOf(o, 58))
    return false;
  if (!$equals_12(this, o))
    return false;
  if (instanceOf(o, 44)) {
    cid = castTo(o, 44);
    if (neq(this.version, cid.version))
      return false;
    return this.codec == cid.codec;
  }
  return eq(this.version, 0) && $equals_12(this, o);
}
;
_.hashCode = function hashCode_49(){
  var result;
  result = hashCode_17(this.hash_0) ^ getHashCode_0(this.type);
  if (eq(this.version, 0))
    return result;
  result = 31 * result + toInt_0(xor_0(this.version, shru_0(this.version, 32)));
  result = 31 * result + (this.codec?getHashCode_0(this.codec):0);
  return result;
}
;
_.toBytes = function toBytes_0(){
  if (eq(this.version, 0))
    return $toBytes(this);
  else if (eq(this.version, 1))
    return $toBytesV1(this);
  throw toJs(new IllegalStateException_0('Unknown cid version: ' + toString_4(this.version)));
}
;
_.toString = function toString_53(){
  if (eq(this.version, 0)) {
    return encode_4(this.toBytes());
  }
   else if (eq(this.version, 1)) {
    return encode_6(($clinit_Multibase$Base() , Base58BTC), $toBytesV1(this));
  }
  throw toJs(new IllegalStateException_0('Unknown Cid version: ' + toString_4(this.version)));
}
;
_.version = 0;
var Lpeergos_shared_io_ipfs_Cid_2_classLit = createForClass('peergos.shared.io.ipfs', 'Cid', 44);
function $clinit_PublicKeyHash(){
  $clinit_PublicKeyHash = emptyMethod;
  NULL = new PublicKeyHash(new Cid(1, ($clinit_Cid$Codec() , DagCbor), ($clinit_Multihash$Type() , sha2_256), initUnidimensionalArray(B_classLit, $intern_28, 8, 32, 15, 1)));
}

function $equals_13(this$static, o){
  return instanceOf(o, 55) && this$static.target.equals(castTo(o, 55).target);
}

function PublicKeyHash(target){
  $clinit_PublicKeyHash();
  Cid.call(this, target.version, target.codec, target.type, copyOfRange(target.hash_0, 0, target.hash_0.length));
  if (!(target.type == ($clinit_Multihash$Type() , sha2_256) || target.type == id_3))
    throw toJs(new IllegalStateException_0('Must use a safe hash for a public key!'));
  this.target = target;
}

function decode_3(raw){
  $clinit_PublicKeyHash();
  return new PublicKeyHash(cast(raw));
}

function fromCbor_23(cbor){
  $clinit_PublicKeyHash();
  if (!instanceOf(cbor, 53))
    throw toJs(new IllegalStateException_0('Invalid cbor for PublicKeyHash! ' + cbor));
  return new PublicKeyHash(castTo(castTo(cbor, 53).target, 44));
}

function fromString_0(cid){
  $clinit_PublicKeyHash();
  return new PublicKeyHash(decode_2(cid));
}

function isSafe(h){
  $clinit_PublicKeyHash();
  return h.type == ($clinit_Multihash$Type() , sha2_256) || h.type == id_3;
}

defineClass(55, 44, {57:1, 7:1, 55:1, 44:1, 58:1}, PublicKeyHash);
_.serialize = function serialize_39(){
  return $toByteArray_2(new CborObject$CborMerkleLink(this.target));
}
;
_.equals = function equals_51(o){
  return $equals_13(this, o);
}
;
_.hashCode = function hashCode_50(){
  return this.target.hashCode();
}
;
_.toBytes = function toBytes_1(){
  return this.target.toBytes();
}
;
_.toCbor = function toCbor_31(){
  return new CborObject$CborMerkleLink(this.target);
}
;
_.toString = function toString_54(){
  return this.target.toString();
}
;
var MAX_KEY_HASH_SIZE = $intern_65, NULL;
var Lpeergos_shared_crypto_hash_PublicKeyHash_2_classLit = createForClass('peergos.shared.crypto.hash', 'PublicKeyHash', 55);
function $clinit_ScryptJS(){
  $clinit_ScryptJS = emptyMethod;
  $clinit_Hasher();
}

function $bareHash(this$static, input_0){
  return $thenApply(this$static.scriptJS.sha256(input_0), makeLambdaFunction(Hasher$lambda$1$Type.prototype.apply_0, Hasher$lambda$1$Type, []));
}

function $generateProofOfWork(this$static, difficulty, data_0){
  return this$static.scriptJS.generateProofOfWork(difficulty, data_0);
}

function $hash(this$static, input_0, isRaw){
  return $thenApply(this$static.scriptJS.sha256(input_0), makeLambdaFunction(Hasher$lambda$0$Type.prototype.apply_0, Hasher$lambda$0$Type, [isRaw]));
}

function $hashFromStream(this$static, stream, length_0){
  return $thenApply(this$static.scriptJS.streamSha256(stream, toInt_0(length_0)), makeLambdaFunction(ScryptJS$lambda$0$Type.prototype.apply_0, ScryptJS$lambda$0$Type, []));
}

function $hashToKeyBytes(this$static, username, password, algorithm){
  return this$static.scriptJS.hashToKeyBytes(username, password, algorithm);
}

function $hmacSha256(this$static, secretKey, message){
  return this$static.scriptJS.hmacSha256(secretKey, message);
}

function $sha256(this$static, input_0){
  return this$static.scriptJS.sha256(input_0);
}

function ScryptJS(){
  $clinit_ScryptJS();
  this.scriptJS = new $wnd.scryptJS.NativeScryptJS;
}

defineClass(463, 1, {}, ScryptJS);
_.bareHash = function bareHash(input_0){
  return $bareHash(this, input_0);
}
;
_.hash = function hash_6(input_0, isRaw){
  return $hash(this, input_0, isRaw);
}
;
_.hkdfKey = function hkdfKey(data_0){
  var salt;
  return salt = initUnidimensionalArray(B_classLit, $intern_28, 8, 32, 15, 1) , $thenApply($thenCompose(this.scriptJS.hmacSha256(salt, data_0), makeLambdaFunction(Hasher$lambda$2$Type.prototype.apply_0, Hasher$lambda$2$Type, [this])), makeLambdaFunction(Hasher$0methodref$ctor$Type.prototype.apply_0, Hasher$0methodref$ctor$Type, []));
}
;
_.identityHash = function identityHash_3(input_0, isRaw){
  return $identityHash(input_0, isRaw);
}
;
_.blake2b = function blake2b(input_0, outputBytes){
  return this.scriptJS.blake2b(input_0, outputBytes);
}
;
_.generateProofOfWork = function generateProofOfWork(difficulty, data_0){
  return $generateProofOfWork(this, difficulty, data_0);
}
;
_.hashFromStream = function hashFromStream(stream, length_0){
  return $hashFromStream(this, stream, length_0);
}
;
_.hashToKeyBytes = function hashToKeyBytes(username, password, algorithm){
  return $hashToKeyBytes(this, username, password, algorithm);
}
;
_.hmacSha256 = function hmacSha256(secretKey, message){
  return $hmacSha256(this, secretKey, message);
}
;
_.sha256 = function sha256_0(input_0){
  return $sha256(this, input_0);
}
;
var Lpeergos_shared_crypto_hash_ScryptJS_2_classLit = createForClass('peergos.shared.crypto.hash', 'ScryptJS', 463);
function ScryptJS$lambda$0$Type(){
}

defineClass(1687, $wnd.Function, $intern_22, ScryptJS$lambda$0$Type);
_.apply_0 = function apply_221(arg0){
  return $clinit_ScryptJS() , new Multihash(($clinit_Multihash$Type() , sha2_256), castTo(arg0, 11));
}
;
function $randomBytes(this$static, len){
  var r, res;
  res = initUnidimensionalArray(B_classLit, $intern_28, 8, len, 15, 1);
  r = this$static.scriptJS.randombytes(len);
  arraycopy(r, 0, res, 0, len);
  return res;
}

function $randombytes(this$static, b, offset, len){
  var r;
  r = this$static.scriptJS.randombytes(len);
  arraycopy(r, 0, b, offset, len);
}

function SafeRandom$Javascript(){
  this.scriptJS = new $wnd.tweetNaCl.JSNaCl;
}

defineClass(567, 1, {86:1}, SafeRandom$Javascript);
_.randomBytes = function randomBytes(len){
  return $randomBytes(this, len);
}
;
_.randombytes = function randombytes(b, offset, len){
  $randombytes(this, b, offset, len);
}
;
var Lpeergos_shared_crypto_random_SafeRandom$Javascript_2_classLit = createForClass('peergos.shared.crypto.random', 'SafeRandom/Javascript', 567);
function Salsa20Poly1305$Javascript(){
  this.scriptJS = new $wnd.tweetNaCl.JSNaCl;
}

defineClass(571, 1, {91:1}, Salsa20Poly1305$Javascript);
var Lpeergos_shared_crypto_symmetric_Salsa20Poly1305$Javascript_2_classLit = createForClass('peergos.shared.crypto.symmetric', 'Salsa20Poly1305/Javascript', 571);
function $clinit_SymmetricKey(){
  $clinit_SymmetricKey = emptyMethod;
  byValue_3 = new HashMap;
  PROVIDERS_1 = new HashMap;
  RNG_PROVIDERS_0 = new HashMap;
}

function addProvider_1(t, provider){
  $clinit_SymmetricKey();
  $put(PROVIDERS_1, t, provider);
}

function fromByteArray_2(raw){
  $clinit_SymmetricKey();
  return fromCbor_24(deserialize(new CborDecoder(new ByteArrayInputStream(raw)), raw.length));
}

function fromCbor_24(cbor){
  $clinit_SymmetricKey();
  var t, type_0;
  if (!instanceOf(cbor, 21))
    throw toJs(new IllegalStateException_0('Invalid cbor for PublicBoxingKey! ' + cbor));
  type_0 = castTo(castTo(cbor, 21).value_0.getAtIndex(0), 29);
  t = byValue_4(toInt_0(type_0.value_0));
  switch (t.ordinal_0) {
    case 0:
      return fromCbor_25(cbor, castTo($get(PROVIDERS_1, t), 91), castTo($get(RNG_PROVIDERS_0, t), 86));
    default:throw toJs(new IllegalStateException_0('Unknown Symmetric Key type: ' + (t.name_0 != null?t.name_0:'' + t.ordinal_0)));
  }
}

function random_9(){
  $clinit_SymmetricKey();
  return random_10(castTo($get(PROVIDERS_1, ($clinit_SymmetricKey$Type() , TweetNaCl)), 91), castTo($get(RNG_PROVIDERS_0, TweetNaCl), 86));
}

function setRng_0(t, rng){
  $clinit_SymmetricKey();
  $put(RNG_PROVIDERS_0, t, rng);
}

var PROVIDERS_1, RNG_PROVIDERS_0, byValue_3;
function $clinit_SymmetricKey$Type(){
  $clinit_SymmetricKey$Type = emptyMethod;
  TweetNaCl = new SymmetricKey$Type;
}

function SymmetricKey$Type(){
  Enum.call(this, 'TweetNaCl', 0);
  this.value_0 = 1;
  $put(($clinit_SymmetricKey() , byValue_3), valueOf_1(1), this);
}

function byValue_4(val){
  $clinit_SymmetricKey$Type();
  return castTo($get(($clinit_SymmetricKey() , byValue_3), valueOf_1(val)), 341);
}

function values_9(){
  $clinit_SymmetricKey$Type();
  return stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_crypto_symmetric_SymmetricKey$Type_2_classLit, 1), $intern_33, 341, 0, [TweetNaCl]);
}

defineClass(341, 52, {4:1, 57:1, 52:1, 341:1}, SymmetricKey$Type);
_.value_0 = 0;
var TweetNaCl;
var Lpeergos_shared_crypto_symmetric_SymmetricKey$Type_2_classLit = createForEnum('peergos.shared.crypto.symmetric', 'SymmetricKey/Type', 341, values_9);
function $clinit_TweetNaClKey(){
  $clinit_TweetNaClKey = emptyMethod;
  $clinit_SymmetricKey();
}

function $createNonce_0(this$static){
  var res;
  res = initUnidimensionalArray(B_classLit, $intern_28, 8, 24, 15, 1);
  $randombytes(this$static.random_0, res, 0, res.length);
  return res;
}

function $decrypt_5(this$static, data_0, nonce){
  return decrypt_0(this$static.secretKey, data_0, nonce, this$static.implementation);
}

function $encrypt(this$static, data_0, nonce){
  return encrypt_0(this$static.secretKey, data_0, nonce, this$static.implementation);
}

function $equals_14(this$static, o){
  var that;
  if (maskUndefined(this$static) === maskUndefined(o))
    return true;
  if (o == null || Lpeergos_shared_crypto_symmetric_TweetNaClKey_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 161);
  if (this$static.isDirty_0 != that.isDirty_0)
    return false;
  return equals_16(this$static.secretKey, that.secretKey);
}

function $makeDirty(this$static){
  return new TweetNaClKey(this$static.secretKey, true, this$static.implementation, this$static.random_0);
}

function $toCbor_15(this$static){
  return new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborLong(($clinit_SymmetricKey$Type() , TweetNaCl).value_0), new CborObject$CborByteArray(this$static.secretKey), new CborObject$CborBoolean(this$static.isDirty_0)])));
}

function TweetNaClKey(secretKey, isDirty, implementation, random){
  $clinit_TweetNaClKey();
  if (secretKey.length != 32)
    throw toJs(new IllegalStateException_0('Incorrect key size! (' + secretKey.length + ')'));
  this.secretKey = secretKey;
  this.isDirty_0 = isDirty;
  this.implementation = implementation;
  this.random_0 = random;
}

function decrypt_0(key, cipher, nonce, implementation){
  return implementation.scriptJS.secretbox_open(cipher, nonce, key);
}

function encrypt_0(key, data_0, nonce, implementation){
  $clinit_TweetNaClKey();
  return implementation.scriptJS.secretbox(data_0, nonce, key);
}

function fromCbor_25(cbor, provider, random){
  $clinit_TweetNaClKey();
  var isDirty, secretKey;
  if (!instanceOf(cbor, 21))
    throw toJs(new IllegalStateException_0('Invalid cbor for PublicBoxingKey! ' + cbor));
  secretKey = castTo(castTo(cbor, 21).value_0.getAtIndex(1), 27);
  isDirty = castTo(castTo(cbor, 21).value_0.getAtIndex(2), 63);
  return new TweetNaClKey(secretKey.value_0, isDirty.value_0, provider, random);
}

function random_10(provider, random){
  $clinit_TweetNaClKey();
  var key, r;
  key = initUnidimensionalArray(B_classLit, $intern_28, 8, 32, 15, 1);
  r = random.scriptJS.randombytes(32);
  arraycopy(r, 0, key, 0, 32);
  return new TweetNaClKey(key, false, provider, random);
}

defineClass(161, 1, {7:1, 88:1, 161:1}, TweetNaClKey);
_.serialize = function serialize_40(){
  return $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborLong(($clinit_SymmetricKey$Type() , TweetNaCl).value_0), new CborObject$CborByteArray(this.secretKey), new CborObject$CborBoolean(this.isDirty_0)]))));
}
;
_.toByteArray = function toByteArray_7(){
  return $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborLong(($clinit_SymmetricKey$Type() , TweetNaCl).value_0), new CborObject$CborByteArray(this.secretKey), new CborObject$CborBoolean(this.isDirty_0)]))));
}
;
_.createNonce = function createNonce_0(){
  return $createNonce_0(this);
}
;
_.decrypt = function decrypt(data_0, nonce){
  return $decrypt_5(this, data_0, nonce);
}
;
_.encrypt = function encrypt(data_0, nonce){
  return $encrypt(this, data_0, nonce);
}
;
_.equals_0 = function equals_52(o){
  return $equals_14(this, o);
}
;
_.hashCode_1 = function hashCode_51(){
  var result;
  result = hashCode_17(this.secretKey);
  result = 31 * result + (this.isDirty_0?1:0);
  return result;
}
;
_.isDirty = function isDirty_0(){
  return this.isDirty_0;
}
;
_.makeDirty = function makeDirty(){
  return $makeDirty(this);
}
;
_.toCbor = function toCbor_32(){
  return $toCbor_15(this);
}
;
_.isDirty_0 = false;
var Lpeergos_shared_crypto_symmetric_TweetNaClKey_2_classLit = createForClass('peergos.shared.crypto.symmetric', 'TweetNaClKey', 161);
function fromCbor_26(cbor){
  var m, type_0;
  if (instanceOf(cbor, 13))
    return new Text_0(castTo(cbor, 13).value_0);
  if (instanceOf(cbor, 18)) {
    m = castTo(cbor, 18);
    type_0 = castTo(castTo($get_0(m.values_0, new CborObject$CborString('t')), 7), 13).value_0;
    switch (type_0) {
      case 'Ref':
        return new Reference(castTo($get_13(m, 'r', makeLambdaFunction(Content$0methodref$fromCbor$Type.prototype.apply_0, Content$0methodref$fromCbor$Type, [])), 177));
      default:throw toJs(new IllegalStateException_0('Unknown content type in Social Post: ' + type_0));
    }
  }
  throw toJs(new IllegalStateException_0('Unknown Content type in Social Post'));
}

function Content$0methodref$fromCbor$Type(){
}

defineClass(2641, $wnd.Function, $intern_22, Content$0methodref$fromCbor$Type);
_.apply_0 = function apply_222(arg0){
  return fromCbor_27(castTo(arg0, 7));
}
;
function $toCbor_16(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'p', new CborObject$CborString(this$static.path));
  $put_6(state, 'c', this$static.cap);
  $put_6(state, 'h', new CborObject$CborMerkleLink(this$static.contentHash));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function FileRef(path, cap, contentHash){
  if (path.indexOf('/../') != -1 || $equals_0(path.substr(0, 3), '../'))
    throw toJs(new IllegalStateException_0('Invalid path containing /../'));
  this.path = path;
  this.cap = cap;
  this.contentHash = contentHash;
}

function fromCbor_27(cbor){
  var cap, contentHash, m, path;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor! ' + cbor));
  m = castTo(cbor, 18);
  path = castTo(castTo($get_0(m.values_0, new CborObject$CborString('p')), 7), 13).value_0;
  cap = castTo($get_13(m, 'c', makeLambdaFunction(FileRef$0methodref$fromCbor$Type.prototype.apply_0, FileRef$0methodref$fromCbor$Type, [])), 71);
  contentHash = castTo(castTo($get_0(m.values_0, new CborObject$CborString('h')), 7), 53).target;
  return new FileRef(path, cap, contentHash);
}

defineClass(177, 1, {7:1, 177:1}, FileRef);
_.serialize = function serialize_41(){
  return $toByteArray_2($toCbor_16(this));
}
;
_.equals = function equals_53(o){
  var ref;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_display_FileRef_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  ref = castTo(o, 177);
  return this.path == ref.path && equals_28(this.cap, ref.cap) && equals_28(this.contentHash, ref.contentHash);
}
;
_.equals_0 = function(o){
  return this.equals(o);
}
;
_.hashCode = function hashCode_52(){
  return hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.path, this.cap, this.contentHash]));
}
;
_.hashCode_1 = function(){
  return this.hashCode();
}
;
_.toCbor = function toCbor_33(){
  return $toCbor_16(this);
}
;
var Lpeergos_shared_display_FileRef_2_classLit = createForClass('peergos.shared.display', 'FileRef', 177);
function FileRef$0methodref$fromCbor$Type(){
}

defineClass(2640, $wnd.Function, $intern_22, FileRef$0methodref$fromCbor$Type);
_.apply_0 = function apply_223(arg0){
  return fromCbor_99(castTo(arg0, 7));
}
;
function $toCbor_17(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 't', new CborObject$CborString('Ref'));
  $put_6(state, 'r', this$static.ref);
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function Reference(ref){
  this.ref = ref;
}

defineClass(350, 1, {7:1, 448:1, 350:1}, Reference);
_.serialize = function serialize_42(){
  return $toByteArray_2($toCbor_17(this));
}
;
_.equals = function equals_54(o){
  var reference;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_display_Reference_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  reference = castTo(o, 350);
  return equals_28(this.ref, reference.ref);
}
;
_.equals_0 = function(o){
  return this.equals(o);
}
;
_.hashCode = function hashCode_53(){
  return hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.ref]));
}
;
_.hashCode_1 = function(){
  return this.hashCode();
}
;
_.inlineText = function inlineText(){
  return '';
}
;
_.reference = function reference_0(){
  return $clinit_Optional() , new Optional(checkCriticalNotNull(this.ref));
}
;
_.toCbor = function toCbor_34(){
  return $toCbor_17(this);
}
;
_.toString = function toString_55(){
  return 'REFERENCE(' + this.ref.path + ')';
}
;
_.toString_0 = function(){
  return this.toString();
}
;
var Lpeergos_shared_display_Reference_2_classLit = createForClass('peergos.shared.display', 'Reference', 350);
function Text_0(content_0){
  this.content = content_0;
}

defineClass(307, 1, {7:1, 448:1, 307:1}, Text_0);
_.serialize = function serialize_43(){
  return $toByteArray_2(new CborObject$CborString(this.content));
}
;
_.equals = function equals_55(o){
  var text_0;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_display_Text_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  text_0 = castTo(o, 307);
  return this.content == text_0.content;
}
;
_.equals_0 = function(o){
  return this.equals(o);
}
;
_.hashCode = function hashCode_54(){
  return hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.content]));
}
;
_.hashCode_1 = function(){
  return this.hashCode();
}
;
_.inlineText = function inlineText_0(){
  return this.content;
}
;
_.reference = function reference_1(){
  return $clinit_Optional() , $clinit_Optional() , EMPTY;
}
;
_.toCbor = function toCbor_35(){
  return new CborObject$CborString(this.content);
}
;
_.toString = function toString_56(){
  return this.content;
}
;
_.toString_0 = function(){
  return this.toString();
}
;
var Lpeergos_shared_display_Text_2_classLit = createForClass('peergos.shared.display', 'Text', 307);
function $toCbor_18(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'f', new CborObject$CborString(this$static.filename));
  $put_6(state, 's', new CborObject$CborLong(this$static.size));
  $put_6(state, 't', new CborObject$CborString(this$static.type));
  $put_6(state, 'u', new CborObject$CborString(this$static.uuid));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function Attachment(filename, size_0, type_0, uuid){
  this.filename = filename;
  this.size = size_0;
  this.type = type_0;
  this.uuid = uuid;
}

function fromCbor_28(cbor){
  var filename, m, size_0, type_0, uuid;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor! ' + cbor));
  m = castTo(cbor, 18);
  filename = castTo(castTo($get_0(m.values_0, new CborObject$CborString('f')), 7), 13).value_0;
  size_0 = toInt_0(castTo(castTo($get_0(m.values_0, new CborObject$CborString('s')), 7), 29).value_0);
  type_0 = castTo(castTo($get_0(m.values_0, new CborObject$CborString('t')), 7), 13).value_0;
  uuid = castTo(castTo($get_0(m.values_0, new CborObject$CborString('u')), 7), 13).value_0;
  return new Attachment(filename, size_0, type_0, uuid);
}

defineClass(351, 1, {7:1, 351:1}, Attachment);
_.serialize = function serialize_44(){
  return $toByteArray_2($toCbor_18(this));
}
;
_.toCbor = function toCbor_36(){
  return $toCbor_18(this);
}
;
_.size = 0;
var Lpeergos_shared_email_Attachment_2_classLit = createForClass('peergos.shared.email', 'Attachment', 351);
function $decryptEmail(this$static, cipherText){
  return castTo($decrypt_4(cipherText, this$static.encryptionKeys.secretBoxingKey, makeLambdaFunction(EmailClient$0methodref$fromCbor$Type.prototype.apply_0, EmailClient$0methodref$fromCbor$Type, [])), 193);
}

function $lambda$15_1(this$static, emailMessage_1){
  return $moveToPrivateDir(this$static, emailMessage_1, $resolve(get_176('default', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['pending', 'sent'])), emailMessage_1.id + '.cbor'));
}

function $lambda$16_1(this$static, emailMessage_1){
  return $moveToPrivateDir(this$static, emailMessage_1, $resolve(get_176('default', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['pending', 'inbox'])), emailMessage_1.id + '.cbor'));
}

function $lambda$17_0(this$static, attachments_1, folder_2, index_3, future_4, srcFilePath_5, destFilePath_6){
  return $thenCompose($readInternal(this$static.emailApp, srcFilePath_5, null), makeLambdaFunction(EmailClient$lambda$19$Type.prototype.apply_0, EmailClient$lambda$19$Type, [this$static, attachments_1, folder_2, index_3, future_4, srcFilePath_5, destFilePath_6]));
}

function $lambda$18(this$static, destFilePath_1){
  return $thenApply($readInternal(this$static.emailApp, destFilePath_1, null), makeLambdaFunction(EmailClient$lambda$22$Type.prototype.apply_0, EmailClient$lambda$22$Type, []));
}

function $lambda$19(this$static, attachments_1, folder_2, index_3, future_4, srcFilePath_5, destFilePath_6, bytes_6){
  var cipherText;
  cipherText = fromCbor_14(deserialize(new CborDecoder(new ByteArrayInputStream(bytes_6)), bytes_6.length));
  return $thenCompose($writeInternal(this$static.emailApp, destFilePath_6, castTo($decrypt_4(cipherText, this$static.encryptionKeys.secretBoxingKey, makeLambdaFunction(EmailClient$lambda$1$Type.prototype.apply_0, EmailClient$lambda$1$Type, [])), 11), null), makeLambdaFunction(EmailClient$lambda$20$Type.prototype.apply_0, EmailClient$lambda$20$Type, [this$static, attachments_1, folder_2, index_3, future_4, srcFilePath_5]));
}

function $lambda$2_1(this$static, attachments_1, index_2, future_3, attachment_4, bytes_4){
  var destDirStr, destFilePath;
  destDirStr = 'default/pending/outbox/attachments/' + attachment_4.uuid;
  destFilePath = directoryToPath($split(destDirStr, '/'));
  return $thenCompose($writeInternal(this$static.emailApp, destFilePath, bytes_4, null), makeLambdaFunction(EmailClient$lambda$3$Type.prototype.apply_0, EmailClient$lambda$3$Type, [this$static, attachments_1, index_2, future_3]));
}

function $lambda$20_0(this$static, attachments_1, folder_2, index_3, future_4, srcFilePath_5){
  return $thenCompose($deleteInternal(this$static.emailApp, srcFilePath_5, null), makeLambdaFunction(EmailClient$lambda$21$Type.prototype.apply_0, EmailClient$lambda$21$Type, [this$static, attachments_1, folder_2, index_3, future_4]));
}

function $lambda$23_1(this$static, original_1){
  return $deleteInternal(this$static.emailApp, original_1, null);
}

function $lambda$5_0(this$static, msg_1){
  return $saveEmail(this$static, msg_1, msg_1.id);
}

function $lambda$8_0(this$static, res_1, internalPath_2, filenames_2){
  return reduceAll(filenames_2, ($clinit_Boolean() , true), new EmailClient$lambda$9$Type(this$static, res_1, internalPath_2), new EmailClient$lambda$10$Type);
}

function $lambda$9_1(this$static, res_1, internalPath_2, n_3){
  return $thenApply($thenApply($thenApply($readInternal(this$static.emailApp, $resolve(internalPath_2, n_3), null), makeLambdaFunction(EmailClient$lambda$11$Type.prototype.apply_0, EmailClient$lambda$11$Type, [])), makeLambdaFunction(EmailClient$1methodref$decryptEmail$Type.prototype.apply_0, EmailClient$1methodref$decryptEmail$Type, [this$static])), makeLambdaFunction(EmailClient$lambda$13$Type.prototype.apply_0, EmailClient$lambda$13$Type, [res_1]));
}

function $moveToPrivateDir(this$static, m, original){
  var dest, dirAndFile;
  dirAndFile = $subpath(original, $getNameCount(original) - 2, $getNameCount(original));
  dest = $resolve(get_176('default', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])), dirAndFile.pathString);
  return $thenCompose($writeInternal(this$static.emailApp, dest, $toByteArray_2($toCbor_19(m)), null), makeLambdaFunction(EmailClient$lambda$23$Type.prototype.apply_0, EmailClient$lambda$23$Type, [this$static, original]));
}

function $reduceMovingAttachmentsToFolder(this$static, attachments, folder, index_0, future){
  var attachment, destFilePath, srcFilePath;
  if (index_0 >= attachments.size()) {
    $complete(future, ($clinit_Boolean() , true));
    return future;
  }
   else {
    attachment = castTo(attachments.getAtIndex(index_0), 351);
    srcFilePath = get_176('default', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['pending', folder, 'attachments', attachment.uuid]));
    destFilePath = get_176('default', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['attachments', attachment.uuid]));
    return asyncExceptionally(new EmailClient$lambda$17$Type(this$static, attachments, folder, index_0, future, srcFilePath, destFilePath), makeLambdaFunction(EmailClient$lambda$18$Type.prototype.apply_0, EmailClient$lambda$18$Type, [this$static, destFilePath]));
  }
}

function $reduceMovingForwardedAttachments(this$static, attachments, index_0, future){
  var attachment, srcDirStr, srcFilePath;
  if (index_0 >= attachments.size()) {
    $complete(future, ($clinit_Boolean() , true));
    return future;
  }
   else {
    attachment = castTo(attachments.getAtIndex(index_0), 351);
    srcDirStr = 'default/attachments/' + attachment.uuid;
    srcFilePath = directoryToPath($split(srcDirStr, '/'));
    return $thenCompose($readInternal(this$static.emailApp, srcFilePath, null), makeLambdaFunction(EmailClient$lambda$2$Type.prototype.apply_0, EmailClient$lambda$2$Type, [this$static, attachments, index_0, future, attachment]));
  }
}

function $saveEmail(this$static, email, id_0){
  var filePath;
  filePath = get_176('default', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['pending/outbox', id_0 + '.cbor']));
  return $writeInternal(this$static.emailApp, filePath, $toByteArray_2($toCbor_19(email)), null);
}

function EmailClient(emailApp, encryptionKeys){
  this.emailApp = emailApp;
  this.encryptionKeys = encryptionKeys;
}

function lambda$26(emailApp_0, account_1, crypto_2){
  var encryptionKeys;
  encryptionKeys = random_2(crypto_2.random, crypto_2.boxer);
  return $thenApply($thenCompose($writeInternal(emailApp_0, get_176(account_1, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['encryption.keypair.cbor'])), $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [$toCbor_11(encryptionKeys.publicBoxingKey), $toCbor_12(encryptionKeys.secretBoxingKey)])))), null), makeLambdaFunction(EmailClient$lambda$27$Type.prototype.apply_0, EmailClient$lambda$27$Type, [emailApp_0, account_1, encryptionKeys])), makeLambdaFunction(EmailClient$lambda$28$Type.prototype.apply_0, EmailClient$lambda$28$Type, [emailApp_0, encryptionKeys]));
}

function lambda$27(emailApp_0, account_1, encryptionKeys_2){
  return $writeInternal(emailApp_0, get_176(account_1, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['pending', 'encryption.publickey.cbor'])), $toByteArray_2($toCbor_11(encryptionKeys_2.publicBoxingKey)), null);
}

function lambda$31(emailApp_0, crypto_1, account_2, children_3){
  var dirs;
  if (children_3.contains('encryption.keypair.cbor')) {
    return $thenApply($thenApply($readInternal(emailApp_0, get_176(account_2, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['encryption.keypair.cbor'])), null), makeLambdaFunction(EmailClient$lambda$32$Type.prototype.apply_0, EmailClient$lambda$32$Type, [])), makeLambdaFunction(EmailClient$lambda$33$Type.prototype.apply_0, EmailClient$lambda$33$Type, [emailApp_0]));
  }
  return dirs = new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['inbox', 'sent', 'pending', 'attachments', 'pending/inbox', 'pending/outbox', 'pending/sent', 'pending/inbox/attachments', 'pending/outbox/attachments', 'pending/sent/attachments'])) , $thenCompose(reduceAll(dirs, ($clinit_Boolean() , true), new EmailClient$lambda$24$Type(emailApp_0), new EmailClient$lambda$25$Type), makeLambdaFunction(EmailClient$lambda$26$Type.prototype.apply_0, EmailClient$lambda$26$Type, [emailApp_0, crypto_1]));
}

function load_0(emailApp, crypto_0){
  return $thenCompose($dirInternal(emailApp, get_176('default', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])), null), makeLambdaFunction(EmailClient$lambda$31$Type.prototype.apply_0, EmailClient$lambda$31$Type, [emailApp, crypto_0]));
}

defineClass(473, 1, {}, EmailClient);
_.connectToBridge = function connectToBridge(context, bridgeUsername){
  var pendingDir;
  pendingDir = $resolve(get_176(context.username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['.apps', 'email', 'data'])), get_176('default', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['pending'])).pathString);
  return $thenCompose($sendInitialFollowRequest(context, bridgeUsername), makeLambdaFunction(EmailClient$lambda$34$Type.prototype.apply_0, EmailClient$lambda$34$Type, [context, pendingDir, bridgeUsername]));
}
;
_.getAttachment = function getAttachment(uid){
  var attachment;
  attachment = get_176('default', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['attachments', uid]));
  return $readInternal(this.emailApp, attachment, null);
}
;
_.getEmailAddress = function getEmailAddress(){
  var relativeEmailPath;
  relativeEmailPath = get_176('default', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['pending', 'email.json']));
  return $exceptionally($thenApply($readInternal(this.emailApp, relativeEmailPath, null), makeLambdaFunction(EmailClient$lambda$29$Type.prototype.apply_0, EmailClient$lambda$29$Type, [])), makeLambdaFunction(EmailClient$lambda$30$Type.prototype.apply_0, EmailClient$lambda$30$Type, []));
}
;
_.getNewIncoming = function getNewIncoming(){
  var inbox, res;
  inbox = get_176('default', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['pending', 'inbox']));
  return res = new ArrayList , $thenApply($thenCompose($thenApply($dirInternal(this.emailApp, inbox, null), makeLambdaFunction(EmailClient$lambda$6$Type.prototype.apply_0, EmailClient$lambda$6$Type, [])), makeLambdaFunction(EmailClient$lambda$8$Type.prototype.apply_0, EmailClient$lambda$8$Type, [this, res, inbox])), makeLambdaFunction(EmailClient$lambda$14$Type.prototype.apply_0, EmailClient$lambda$14$Type, [res]));
}
;
_.getNewSent = function getNewSent(){
  var inbox, res;
  inbox = get_176('default', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['pending', 'sent']));
  return res = new ArrayList , $thenApply($thenCompose($thenApply($dirInternal(this.emailApp, inbox, null), makeLambdaFunction(EmailClient$lambda$6$Type.prototype.apply_0, EmailClient$lambda$6$Type, [])), makeLambdaFunction(EmailClient$lambda$8$Type.prototype.apply_0, EmailClient$lambda$8$Type, [this, res, inbox])), makeLambdaFunction(EmailClient$lambda$14$Type.prototype.apply_0, EmailClient$lambda$14$Type, [res]));
}
;
_.moveToPrivateInbox = function moveToPrivateInbox(emailMessage){
  var future;
  future = new CompletableFuture;
  return $thenCompose($reduceMovingAttachmentsToFolder(this, emailMessage.attachments, 'inbox', 0, future), makeLambdaFunction(EmailClient$lambda$16$Type.prototype.apply_0, EmailClient$lambda$16$Type, [this, emailMessage]));
}
;
_.moveToPrivateSent = function moveToPrivateSent(emailMessage){
  var future;
  future = new CompletableFuture;
  return $thenCompose($reduceMovingAttachmentsToFolder(this, emailMessage.attachments, 'sent', 0, future), makeLambdaFunction(EmailClient$lambda$15$Type.prototype.apply_0, EmailClient$lambda$15$Type, [this, emailMessage]));
}
;
_.send = function send(msg){
  var future;
  return $thenCompose((future = new CompletableFuture , msg.forwardingToEmail.ref == null?$complete(future, ($clinit_Boolean() , true)):$reduceMovingForwardedAttachments(this, castTo($get_6(msg.forwardingToEmail), 193).attachments, 0, future) , future), makeLambdaFunction(EmailClient$lambda$5$Type.prototype.apply_0, EmailClient$lambda$5$Type, [this, msg]));
}
;
_.uploadAttachment = function uploadAttachment(attachment){
  var outboundAttachment, uuid;
  uuid = ($clinit_UUID() , new UUID(uuid_1())).uuid;
  outboundAttachment = get_176('default', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['pending', 'outbox', 'attachments', uuid]));
  return $thenApply($writeInternal(this.emailApp, outboundAttachment, attachment, null), makeLambdaFunction(EmailClient$lambda$4$Type.prototype.apply_0, EmailClient$lambda$4$Type, [uuid]));
}
;
var Lpeergos_shared_email_EmailClient_2_classLit = createForClass('peergos.shared.email', 'EmailClient', 473);
function EmailClient$0methodref$fromCbor$Type(){
}

defineClass(2642, $wnd.Function, $intern_22, EmailClient$0methodref$fromCbor$Type);
_.apply_0 = function apply_224(arg0){
  return fromCbor_29(castTo(arg0, 7));
}
;
function EmailClient$1methodref$decryptEmail$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2656, $wnd.Function, $intern_22, EmailClient$1methodref$decryptEmail$Type);
_.apply_0 = function apply_225(arg0){
  return $decryptEmail(this.$$outer_0, castTo(arg0, 400));
}
;
function EmailClient$lambda$1$Type(){
}

defineClass(2659, $wnd.Function, $intern_22, EmailClient$lambda$1$Type);
_.apply_0 = function apply_226(arg0){
  return castTo(castTo(arg0, 7), 27).value_0;
}
;
function EmailClient$lambda$10$Type(){
}

defineClass(862, 1, $intern_34, EmailClient$lambda$10$Type);
_.apply_1 = function apply_227(arg0, arg1){
  return castToBoolean(arg1);
}
;
var Lpeergos_shared_email_EmailClient$lambda$10$Type_2_classLit = createForClass('peergos.shared.email', 'EmailClient/lambda$10$Type', 862);
function EmailClient$lambda$11$Type(){
}

defineClass(2655, $wnd.Function, $intern_22, EmailClient$lambda$11$Type);
_.apply_0 = function apply_228(arg0){
  return fromCbor_14(deserialize(new CborDecoder(new ByteArrayInputStream(castTo(arg0, 11))), castTo(arg0, 11).length));
}
;
function EmailClient$lambda$13$Type(res_0){
  this.res_0 = res_0;
}

defineClass(2657, $wnd.Function, $intern_22, EmailClient$lambda$13$Type);
_.apply_0 = function apply_229(arg0){
  return $clinit_Boolean() , $add(this.res_0, castTo(arg0, 193))?true:false;
}
;
function EmailClient$lambda$14$Type(res_0){
  this.res_0 = res_0;
}

defineClass(1307, $wnd.Function, $intern_22, EmailClient$lambda$14$Type);
_.apply_0 = function apply_230(arg0){
  return this.res_0;
}
;
function EmailClient$lambda$15$Type($$outer_0, emailMessage_1){
  this.$$outer_0 = $$outer_0;
  this.emailMessage_1 = emailMessage_1;
}

defineClass(2646, $wnd.Function, $intern_22, EmailClient$lambda$15$Type);
_.apply_0 = function apply_231(arg0){
  return $lambda$15_1(this.$$outer_0, this.emailMessage_1);
}
;
function EmailClient$lambda$16$Type($$outer_0, emailMessage_1){
  this.$$outer_0 = $$outer_0;
  this.emailMessage_1 = emailMessage_1;
}

defineClass(2647, $wnd.Function, $intern_22, EmailClient$lambda$16$Type);
_.apply_0 = function apply_232(arg0){
  return $lambda$16_1(this.$$outer_0, this.emailMessage_1);
}
;
function EmailClient$lambda$17$Type($$outer_0, attachments_1, folder_2, index_3, future_4, srcFilePath_5, destFilePath_6){
  this.$$outer_0 = $$outer_0;
  this.attachments_1 = attachments_1;
  this.folder_2 = folder_2;
  this.index_3 = index_3;
  this.future_4 = future_4;
  this.srcFilePath_5 = srcFilePath_5;
  this.destFilePath_6 = destFilePath_6;
}

defineClass(863, 1, {}, EmailClient$lambda$17$Type);
_.get_0 = function get_33(){
  return $lambda$17_0(this.$$outer_0, this.attachments_1, this.folder_2, this.index_3, this.future_4, this.srcFilePath_5, this.destFilePath_6);
}
;
_.index_3 = 0;
var Lpeergos_shared_email_EmailClient$lambda$17$Type_2_classLit = createForClass('peergos.shared.email', 'EmailClient/lambda$17$Type', 863);
function EmailClient$lambda$18$Type($$outer_0, destFilePath_1){
  this.$$outer_0 = $$outer_0;
  this.destFilePath_1 = destFilePath_1;
}

defineClass(2648, $wnd.Function, $intern_22, EmailClient$lambda$18$Type);
_.apply_0 = function apply_233(arg0){
  return $lambda$18(this.$$outer_0, this.destFilePath_1);
}
;
function EmailClient$lambda$19$Type($$outer_0, attachments_1, folder_2, index_3, future_4, srcFilePath_5, destFilePath_6){
  this.$$outer_0 = $$outer_0;
  this.attachments_1 = attachments_1;
  this.folder_2 = folder_2;
  this.index_3 = index_3;
  this.future_4 = future_4;
  this.srcFilePath_5 = srcFilePath_5;
  this.destFilePath_6 = destFilePath_6;
}

defineClass(2658, $wnd.Function, $intern_22, EmailClient$lambda$19$Type);
_.apply_0 = function apply_234(arg0){
  return $lambda$19(this.$$outer_0, this.attachments_1, this.folder_2, this.index_3, this.future_4, this.srcFilePath_5, this.destFilePath_6, arg0);
}
;
_.index_3 = 0;
function EmailClient$lambda$2$Type($$outer_0, attachments_1, index_2, future_3, attachment_4){
  this.$$outer_0 = $$outer_0;
  this.attachments_1 = attachments_1;
  this.index_2 = index_2;
  this.future_3 = future_3;
  this.attachment_4 = attachment_4;
}

defineClass(2643, $wnd.Function, $intern_22, EmailClient$lambda$2$Type);
_.apply_0 = function apply_235(arg0){
  return $lambda$2_1(this.$$outer_0, this.attachments_1, this.index_2, this.future_3, this.attachment_4, arg0);
}
;
_.index_2 = 0;
function EmailClient$lambda$20$Type($$outer_0, attachments_1, folder_2, index_3, future_4, srcFilePath_5){
  this.$$outer_0 = $$outer_0;
  this.attachments_1 = attachments_1;
  this.folder_2 = folder_2;
  this.index_3 = index_3;
  this.future_4 = future_4;
  this.srcFilePath_5 = srcFilePath_5;
}

defineClass(2660, $wnd.Function, $intern_22, EmailClient$lambda$20$Type);
_.apply_0 = function apply_236(arg0){
  return $lambda$20_0(this.$$outer_0, this.attachments_1, this.folder_2, this.index_3, this.future_4, this.srcFilePath_5);
}
;
_.index_3 = 0;
function EmailClient$lambda$21$Type($$outer_0, attachments_1, folder_2, index_3, future_4){
  this.$$outer_0 = $$outer_0;
  this.attachments_1 = attachments_1;
  this.folder_2 = folder_2;
  this.index_3 = index_3;
  this.future_4 = future_4;
}

defineClass(2661, $wnd.Function, $intern_22, EmailClient$lambda$21$Type);
_.apply_0 = function apply_237(arg0){
  return $reduceMovingAttachmentsToFolder(this.$$outer_0, this.attachments_1, this.folder_2, this.index_3 + 1, this.future_4);
}
;
_.index_3 = 0;
function EmailClient$lambda$22$Type(){
}

defineClass(2662, $wnd.Function, $intern_22, EmailClient$lambda$22$Type);
_.apply_0 = function apply_238(arg0){
  return $clinit_Boolean() , true;
}
;
function EmailClient$lambda$23$Type($$outer_0, original_1){
  this.$$outer_0 = $$outer_0;
  this.original_1 = original_1;
}

defineClass(2649, $wnd.Function, $intern_22, EmailClient$lambda$23$Type);
_.apply_0 = function apply_239(arg0){
  return $lambda$23_1(this.$$outer_0, this.original_1);
}
;
function EmailClient$lambda$24$Type(emailApp_0){
  this.emailApp_0 = emailApp_0;
  this.account_1 = 'default';
}

defineClass(864, 1, $intern_34, EmailClient$lambda$24$Type);
_.apply_1 = function apply_240(arg0, arg1){
  return $createDirectoryInternal(this.emailApp_0, get_176(this.account_1, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [castToString(arg1)])), null);
}
;
var Lpeergos_shared_email_EmailClient$lambda$24$Type_2_classLit = createForClass('peergos.shared.email', 'EmailClient/lambda$24$Type', 864);
function EmailClient$lambda$25$Type(){
}

defineClass(865, 1, $intern_34, EmailClient$lambda$25$Type);
_.apply_1 = function apply_241(arg0, arg1){
  return $clinit_Boolean() , (checkCriticalNotNull(castToBoolean(arg0)) , castToBoolean(arg0)) && (checkCriticalNotNull(castToBoolean(arg1)) , castToBoolean(arg1))?true:false;
}
;
var Lpeergos_shared_email_EmailClient$lambda$25$Type_2_classLit = createForClass('peergos.shared.email', 'EmailClient/lambda$25$Type', 865);
function EmailClient$lambda$26$Type(emailApp_0, crypto_2){
  this.emailApp_0 = emailApp_0;
  this.account_1 = 'default';
  this.crypto_2 = crypto_2;
}

defineClass(2667, $wnd.Function, $intern_22, EmailClient$lambda$26$Type);
_.apply_0 = function apply_242(arg0){
  return lambda$26(this.emailApp_0, this.account_1, this.crypto_2);
}
;
function EmailClient$lambda$27$Type(emailApp_0, account_1, encryptionKeys_2){
  this.emailApp_0 = emailApp_0;
  this.account_1 = account_1;
  this.encryptionKeys_2 = encryptionKeys_2;
}

defineClass(2663, $wnd.Function, $intern_22, EmailClient$lambda$27$Type);
_.apply_0 = function apply_243(arg0){
  return lambda$27(this.emailApp_0, this.account_1, this.encryptionKeys_2);
}
;
function EmailClient$lambda$28$Type(emailApp_0, encryptionKeys_2){
  this.emailApp_0 = emailApp_0;
  this.encryptionKeys_2 = encryptionKeys_2;
}

defineClass(2664, $wnd.Function, $intern_22, EmailClient$lambda$28$Type);
_.apply_0 = function apply_244(arg0){
  return new EmailClient(this.emailApp_0, this.encryptionKeys_2);
}
;
function EmailClient$lambda$29$Type(){
}

defineClass(2650, $wnd.Function, $intern_22, EmailClient$lambda$29$Type);
_.apply_0 = function apply_245(arg0){
  var props, email;
  return props = castTo(parse_1($create_0(arg0, 0, arg0.length, ($clinit_EmulatedCharset() , UTF_8_0)), initUnidimensionalArray(I_classLit, $intern_29, 8, 1, 15, 1)), 68) , email = castToString(props.get('email')) , $clinit_Optional() , new Optional(checkCriticalNotNull(email));
}
;
function EmailClient$lambda$3$Type($$outer_0, attachments_1, index_2, future_3){
  this.$$outer_0 = $$outer_0;
  this.attachments_1 = attachments_1;
  this.index_2 = index_2;
  this.future_3 = future_3;
}

defineClass(2654, $wnd.Function, $intern_22, EmailClient$lambda$3$Type);
_.apply_0 = function apply_246(arg0){
  return $reduceMovingForwardedAttachments(this.$$outer_0, this.attachments_1, this.index_2 + 1, this.future_3);
}
;
_.index_2 = 0;
function EmailClient$lambda$30$Type(){
}

defineClass(2651, $wnd.Function, $intern_22, EmailClient$lambda$30$Type);
_.apply_0 = function apply_247(arg0){
  return $clinit_Optional() , $clinit_Optional() , EMPTY;
}
;
function EmailClient$lambda$31$Type(emailApp_0, crypto_1){
  this.emailApp_0 = emailApp_0;
  this.crypto_1 = crypto_1;
  this.account_2 = 'default';
}

defineClass(2652, $wnd.Function, $intern_22, EmailClient$lambda$31$Type);
_.apply_0 = function apply_248(arg0){
  return lambda$31(this.emailApp_0, this.crypto_1, this.account_2, arg0);
}
;
function EmailClient$lambda$32$Type(){
}

defineClass(2665, $wnd.Function, $intern_22, EmailClient$lambda$32$Type);
_.apply_0 = function apply_249(arg0){
  return fromCbor_8(deserialize(new CborDecoder(new ByteArrayInputStream(castTo(arg0, 11))), castTo(arg0, 11).length));
}
;
function EmailClient$lambda$33$Type(emailApp_0){
  this.emailApp_0 = emailApp_0;
}

defineClass(2666, $wnd.Function, $intern_22, EmailClient$lambda$33$Type);
_.apply_0 = function apply_250(arg0){
  return new EmailClient(this.emailApp_0, castTo(arg0, 188));
}
;
function EmailClient$lambda$34$Type(context_0, pendingDir_1, bridgeUsername_2){
  this.context_0 = context_0;
  this.pendingDir_1 = pendingDir_1;
  this.bridgeUsername_2 = bridgeUsername_2;
}

defineClass(2653, $wnd.Function, $intern_22, EmailClient$lambda$34$Type);
_.apply_0 = function apply_251(arg0){
  return $shareWriteAccessWith(this.context_0, this.pendingDir_1, singleton(this.bridgeUsername_2));
}
;
function EmailClient$lambda$4$Type(uuid_0){
  this.uuid_0 = uuid_0;
}

defineClass(2644, $wnd.Function, $intern_22, EmailClient$lambda$4$Type);
_.apply_0 = function apply_252(arg0){
  return this.uuid_0;
}
;
function EmailClient$lambda$5$Type($$outer_0, msg_1){
  this.$$outer_0 = $$outer_0;
  this.msg_1 = msg_1;
}

defineClass(2645, $wnd.Function, $intern_22, EmailClient$lambda$5$Type);
_.apply_0 = function apply_253(arg0){
  return $lambda$5_0(this.$$outer_0, this.msg_1);
}
;
function EmailClient$lambda$6$Type(){
}

defineClass(1305, $wnd.Function, $intern_22, EmailClient$lambda$6$Type);
_.apply_0 = function apply_254(arg0){
  return castTo($collect_0($filter(castTo(arg0, 17).stream(), new EmailClient$lambda$7$Type), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
}
;
function EmailClient$lambda$7$Type(){
}

defineClass(860, 1, {}, EmailClient$lambda$7$Type);
_.test_0 = function test_5(arg0){
  return $endsWith(castToString(arg0), '.cbor');
}
;
var Lpeergos_shared_email_EmailClient$lambda$7$Type_2_classLit = createForClass('peergos.shared.email', 'EmailClient/lambda$7$Type', 860);
function EmailClient$lambda$8$Type($$outer_0, res_1, internalPath_2){
  this.$$outer_0 = $$outer_0;
  this.res_1 = res_1;
  this.internalPath_2 = internalPath_2;
}

defineClass(1306, $wnd.Function, $intern_22, EmailClient$lambda$8$Type);
_.apply_0 = function apply_255(arg0){
  return $lambda$8_0(this.$$outer_0, this.res_1, this.internalPath_2, arg0);
}
;
function EmailClient$lambda$9$Type($$outer_0, res_1, internalPath_2){
  this.$$outer_0 = $$outer_0;
  this.res_1 = res_1;
  this.internalPath_2 = internalPath_2;
}

defineClass(861, 1, $intern_34, EmailClient$lambda$9$Type);
_.apply_1 = function apply_256(arg0, arg1){
  return $lambda$9_1(this.$$outer_0, this.res_1, this.internalPath_2, arg1);
}
;
var Lpeergos_shared_email_EmailClient$lambda$9$Type_2_classLit = createForClass('peergos.shared.email', 'EmailClient/lambda$9$Type', 861);
function $lambda$3_1(this$static, state_1){
  return $put_6(state_1, 'r', $toCbor_19(castTo($get_6(this$static.replyingToEmail), 193)));
}

function $lambda$4_2(this$static, state_1){
  return $put_6(state_1, 'o', $toCbor_19(castTo($get_6(this$static.forwardingToEmail), 193)));
}

function $lambda$5_1(this$static, state_1){
  return $put_6(state_1, 'x', new CborObject$CborString(castToString($get_6(this$static.sendError))));
}

function $toCbor_19(this$static){
  var state, transformed, withMimeType;
  state = new TreeMap;
  $put_6(state, 'v', new CborObject$CborString('1'));
  $put_6(state, 'i', new CborObject$CborString(this$static.id));
  $put_6(state, 'm', new CborObject$CborString(this$static.msgId));
  $put_6(state, 'f', new CborObject$CborString(this$static.from));
  $put_6(state, 'h', new CborObject$CborString(this$static.subject));
  $put_6(state, 't', new CborObject$CborLong($toEpochSecond(this$static.created, ($clinit_ZoneOffset() , UTC_0))));
  $put_6(state, 'd', new CborObject$CborList(castTo($collect_0($map_0(this$static.to.stream(), makeLambdaFunction(EmailMessage$0methodref$ctor$Type.prototype.apply_0, EmailMessage$0methodref$ctor$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17)));
  $put_6(state, 'c', new CborObject$CborList(castTo($collect_0($map_0(this$static.cc.stream(), makeLambdaFunction(EmailMessage$1methodref$ctor$Type.prototype.apply_0, EmailMessage$1methodref$ctor$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [IDENTITY_FINISH]))), 17)));
  $put_6(state, 'b', new CborObject$CborList(castTo($collect_0($map_0(this$static.bcc.stream(), makeLambdaFunction(EmailMessage$2methodref$ctor$Type.prototype.apply_0, EmailMessage$2methodref$ctor$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [IDENTITY_FINISH]))), 17)));
  $put_6(state, 'z', new CborObject$CborString(this$static.content));
  $put_6(state, 'u', new CborObject$CborBoolean(this$static.unread));
  $put_6(state, 's', new CborObject$CborBoolean(this$static.star));
  $put_6(state, 'a', new CborObject$CborList(this$static.attachments));
  $put_6(state, 'e', new CborObject$CborString(this$static.icalEvent));
  $ifPresent(this$static.replyingToEmail, new EmailMessage$lambda$3$Type(this$static, state));
  $ifPresent(this$static.forwardingToEmail, new EmailMessage$lambda$4$Type(this$static, state));
  $ifPresent(this$static.sendError, new EmailMessage$lambda$5$Type(this$static, state));
  withMimeType = new ArrayList;
  $add(withMimeType, new CborObject$CborLong(18));
  $add(withMimeType, (transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed)));
  return new CborObject$CborList(withMimeType);
}

function EmailMessage(id_0, msgId, from, subject, created, to, cc, bcc, content_0, unread, star, attachments, icalEvent, replyingToEmail, forwardingToEmail, sendError){
  this.id = id_0;
  this.msgId = msgId;
  this.from = from;
  this.subject = subject;
  this.created = created;
  this.to = to;
  this.cc = cc;
  this.bcc = bcc;
  this.content = content_0;
  this.unread = unread;
  this.star = star;
  this.attachments = new ArrayList_1(attachments);
  this.icalEvent = icalEvent == null?'':icalEvent;
  this.replyingToEmail = replyingToEmail;
  this.forwardingToEmail = forwardingToEmail;
  this.sendError = sendError;
}

function fromCbor_29(cbor){
  var attachments, bcc, cc, content_0, created, forwardingToEmail, from, icalEvent, id_0, m, mimeType, msgId, replyingToEmail, sendError, star, subject, to, unread, val, val0, version, withMimeType;
  if (!instanceOf(cbor, 21))
    throw toJs(new IllegalStateException_0('Invalid cbor! ' + cbor));
  withMimeType = castTo(cbor, 21);
  mimeType = castTo(withMimeType.value_0.getAtIndex(0), 29).value_0;
  if (compare_1(mimeType, 18) != 0)
    throw toJs(new IllegalStateException_0('Invalid mimetype for Email: ' + toString_4(mimeType)));
  m = castTo($get_11(withMimeType, 1, makeLambdaFunction(EmailMessage$lambda$6$Type.prototype.apply_0, EmailMessage$lambda$6$Type, [])), 18);
  version = castTo(castTo($get_0(m.values_0, new CborObject$CborString('v')), 7), 13).value_0;
  if (!$equals_0(version, '1')) {
    throw toJs(new IllegalStateException_0('Unsupported version:' + version));
  }
  id_0 = castTo(castTo($get_0(m.values_0, new CborObject$CborString('i')), 7), 13).value_0;
  msgId = castTo(castTo($get_0(m.values_0, new CborObject$CborString('m')), 7), 13).value_0;
  from = castTo(castTo($get_0(m.values_0, new CborObject$CborString('f')), 7), 13).value_0;
  subject = castTo(castTo($get_0(m.values_0, new CborObject$CborString('h')), 7), 13).value_0;
  created = castTo($get_13(m, 't', makeLambdaFunction(EmailMessage$lambda$7$Type.prototype.apply_0, EmailMessage$lambda$7$Type, [])), 201);
  to = $getList(m, 'd', makeLambdaFunction(EmailMessage$lambda$8$Type.prototype.apply_0, EmailMessage$lambda$8$Type, []));
  cc = $getList(m, 'c', makeLambdaFunction(EmailMessage$lambda$9$Type.prototype.apply_0, EmailMessage$lambda$9$Type, []));
  bcc = $getList(m, 'b', makeLambdaFunction(EmailMessage$lambda$10$Type.prototype.apply_0, EmailMessage$lambda$10$Type, []));
  content_0 = castTo(castTo($get_0(m.values_0, new CborObject$CborString('z')), 7), 13).value_0;
  unread = (val0 = castTo(castTo($get_0(m.values_0, new CborObject$CborString('u')), 7), 63) , !!val0 && val0.value_0);
  star = (val = castTo(castTo($get_0(m.values_0, new CborObject$CborString('s')), 7), 63) , !!val && val.value_0);
  attachments = $getList(m, 'a', makeLambdaFunction(EmailMessage$3methodref$fromCbor$Type.prototype.apply_0, EmailMessage$3methodref$fromCbor$Type, []));
  icalEvent = castTo(castTo($get_0(m.values_0, new CborObject$CborString('e')), 7), 13).value_0;
  replyingToEmail = $map(ofNullable(castTo($get_0(m.values_0, new CborObject$CborString('r')), 7)), makeLambdaFunction(EmailMessage$lambda$12$Type.prototype.apply_0, EmailMessage$lambda$12$Type, []));
  forwardingToEmail = $map(ofNullable(castTo($get_0(m.values_0, new CborObject$CborString('o')), 7)), makeLambdaFunction(EmailMessage$lambda$13$Type.prototype.apply_0, EmailMessage$lambda$13$Type, []));
  sendError = $map(ofNullable(castTo($get_0(m.values_0, new CborObject$CborString('x')), 7)), makeLambdaFunction(EmailMessage$lambda$14$Type.prototype.apply_0, EmailMessage$lambda$14$Type, [m]));
  return new EmailMessage(id_0, msgId, from, subject, created, to, cc, bcc, content_0, unread, star, attachments, icalEvent, replyingToEmail, forwardingToEmail, sendError);
}

defineClass(193, 1, {7:1, 193:1}, EmailMessage);
_.serialize = function serialize_45(){
  return $toByteArray_2($toCbor_19(this));
}
;
_.prepare = function prepare(generatedMsgId, fromEmailAddress, emailSent){
  return new EmailMessage(this.id, generatedMsgId, fromEmailAddress, this.subject, emailSent, this.to, this.cc, this.bcc, this.content, this.unread, this.star, this.attachments, this.icalEvent, this.replyingToEmail, this.forwardingToEmail, this.sendError);
}
;
_.toBytes = function toBytes_2(){
  return $toByteArray_2($toCbor_19(this));
}
;
_.toCbor = function toCbor_37(){
  return $toCbor_19(this);
}
;
_.withAttachments = function withAttachments(suppliedAttachments){
  return new EmailMessage(this.id, this.msgId, this.from, this.subject, this.created, this.to, this.cc, this.bcc, this.content, this.unread, this.star, suppliedAttachments, this.icalEvent, this.replyingToEmail, this.forwardingToEmail, this.sendError);
}
;
_.withError = function withError(error){
  return new EmailMessage(this.id, this.msgId, this.from, this.subject, this.created, this.to, this.cc, this.bcc, this.content, this.unread, this.star, this.attachments, this.icalEvent, this.replyingToEmail, this.forwardingToEmail, ($clinit_Optional() , new Optional(checkCriticalNotNull(error))));
}
;
_.star = false;
_.unread = false;
var Lpeergos_shared_email_EmailMessage_2_classLit = createForClass('peergos.shared.email', 'EmailMessage', 193);
function EmailMessage$0methodref$ctor$Type(){
}

defineClass(2668, $wnd.Function, $intern_22, EmailMessage$0methodref$ctor$Type);
_.apply_0 = function apply_257(arg0){
  return new CborObject$CborString(castToString(arg0));
}
;
function EmailMessage$1methodref$ctor$Type(){
}

defineClass(2669, $wnd.Function, $intern_22, EmailMessage$1methodref$ctor$Type);
_.apply_0 = function apply_258(arg0){
  return new CborObject$CborString(castToString(arg0));
}
;
function EmailMessage$2methodref$ctor$Type(){
}

defineClass(2670, $wnd.Function, $intern_22, EmailMessage$2methodref$ctor$Type);
_.apply_0 = function apply_259(arg0){
  return new CborObject$CborString(castToString(arg0));
}
;
function EmailMessage$3methodref$fromCbor$Type(){
}

defineClass(2676, $wnd.Function, $intern_22, EmailMessage$3methodref$fromCbor$Type);
_.apply_0 = function apply_260(arg0){
  return fromCbor_28(castTo(arg0, 7));
}
;
function EmailMessage$lambda$10$Type(){
}

defineClass(2675, $wnd.Function, $intern_22, EmailMessage$lambda$10$Type);
_.apply_0 = function apply_261(arg0){
  return castTo(castTo(arg0, 7), 13).value_0;
}
;
function EmailMessage$lambda$12$Type(){
}

defineClass(2677, $wnd.Function, $intern_22, EmailMessage$lambda$12$Type);
_.apply_0 = function apply_262(arg0){
  return fromCbor_29(castTo(arg0, 7));
}
;
function EmailMessage$lambda$13$Type(){
}

defineClass(2678, $wnd.Function, $intern_22, EmailMessage$lambda$13$Type);
_.apply_0 = function apply_263(arg0){
  return fromCbor_29(castTo(arg0, 7));
}
;
function EmailMessage$lambda$14$Type(m_0){
  this.m_0 = m_0;
}

defineClass(2679, $wnd.Function, $intern_22, EmailMessage$lambda$14$Type);
_.apply_0 = function apply_264(arg0){
  return castTo(castTo($get_0(this.m_0.values_0, new CborObject$CborString('x')), 7), 13).value_0;
}
;
function EmailMessage$lambda$3$Type($$outer_0, state_1){
  this.$$outer_0 = $$outer_0;
  this.state_1 = state_1;
}

defineClass(866, 1, $intern_32, EmailMessage$lambda$3$Type);
_.accept = function accept_41(arg0){
  $lambda$3_1(this.$$outer_0, this.state_1);
}
;
_.andThen = function andThen_21(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_email_EmailMessage$lambda$3$Type_2_classLit = createForClass('peergos.shared.email', 'EmailMessage/lambda$3$Type', 866);
function EmailMessage$lambda$4$Type($$outer_0, state_1){
  this.$$outer_0 = $$outer_0;
  this.state_1 = state_1;
}

defineClass(867, 1, $intern_32, EmailMessage$lambda$4$Type);
_.accept = function accept_42(arg0){
  $lambda$4_2(this.$$outer_0, this.state_1);
}
;
_.andThen = function andThen_22(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_email_EmailMessage$lambda$4$Type_2_classLit = createForClass('peergos.shared.email', 'EmailMessage/lambda$4$Type', 867);
function EmailMessage$lambda$5$Type($$outer_0, state_1){
  this.$$outer_0 = $$outer_0;
  this.state_1 = state_1;
}

defineClass(868, 1, $intern_32, EmailMessage$lambda$5$Type);
_.accept = function accept_43(arg0){
  $lambda$5_1(this.$$outer_0, this.state_1);
}
;
_.andThen = function andThen_23(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_email_EmailMessage$lambda$5$Type_2_classLit = createForClass('peergos.shared.email', 'EmailMessage/lambda$5$Type', 868);
function EmailMessage$lambda$6$Type(){
}

defineClass(2671, $wnd.Function, $intern_22, EmailMessage$lambda$6$Type);
_.apply_0 = function apply_265(arg0){
  return castTo(castTo(arg0, 7), 18);
}
;
function EmailMessage$lambda$7$Type(){
}

defineClass(2672, $wnd.Function, $intern_22, EmailMessage$lambda$7$Type);
_.apply_0 = function apply_266(arg0){
  return ofEpochSecond(castTo(castTo(arg0, 7), 29).value_0, 0, ($clinit_ZoneOffset() , UTC_0));
}
;
function EmailMessage$lambda$8$Type(){
}

defineClass(2673, $wnd.Function, $intern_22, EmailMessage$lambda$8$Type);
_.apply_0 = function apply_267(arg0){
  return castTo(castTo(arg0, 7), 13).value_0;
}
;
function EmailMessage$lambda$9$Type(){
}

defineClass(2674, $wnd.Function, $intern_22, EmailMessage$lambda$9$Type);
_.apply_0 = function apply_268(arg0){
  return castTo(castTo(arg0, 7), 13).value_0;
}
;
function $clinit_FingerPrint(){
  $clinit_FingerPrint = emptyMethod;
  VERSION = stampJavaTypeInfo(getClassLiteralForArray(B_classLit, 1), $intern_28, 8, 15, [0, 0]);
}

function $getQrCodeData(this$static){
  var contents, e, result;
  try {
    contents = bytesToHex($toByteArray_2($toCbor_20(this$static)));
    result = $encode_3(contents, ($clinit_BarcodeFormat() , QR_CODE));
    return encodeToPng(result.width_0, result.height, result);
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 97) || instanceOf($e0, 62)) {
      e = $e0;
      throw toJs(new RuntimeException_2(e));
    }
     else 
      throw toJs($e0);
  }
}

function $toCbor_20(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'v', new CborObject$CborLong(this$static.version));
  $put_6(state, 'u', new CborObject$CborByteArray(this$static.ourFingerPrint));
  $put_6(state, 'f', new CborObject$CborByteArray(this$static.friendsFingerPrint));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function FingerPrint(ourFingerPrint, friendsFingerPrint, version){
  this.ourFingerPrint = ourFingerPrint;
  this.friendsFingerPrint = friendsFingerPrint;
  this.version = version;
}

function calculateDisplayString(us, friend){
  var friendString, ourString;
  ourString = getEncodedChunk(us, 0) + getEncodedChunk(us, 5) + getEncodedChunk(us, 10) + getEncodedChunk(us, 15) + getEncodedChunk(us, 20) + getEncodedChunk(us, 25);
  friendString = getEncodedChunk(friend, 0) + getEncodedChunk(friend, 5) + getEncodedChunk(friend, 10) + getEncodedChunk(friend, 15) + getEncodedChunk(friend, 20) + getEncodedChunk(friend, 25);
  if ($compareTo_5(ourString, friendString) <= 0)
    return ourString + friendString;
  return friendString + ourString;
}

function calculateHalfFingerprint(name_0, identityKeys, h){
  var bout, initial, serializedKey, serializedKey$iterator, serializedKeys;
  bout = new ByteArrayOutputStream;
  $write(bout, VERSION);
  $write(bout, $getBytes(name_0, getCharset('UTF-8')));
  serializedKeys = castTo($collect_0($sorted_0($map_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(identityKeys, 16)), makeLambdaFunction(FingerPrint$lambda$0$Type.prototype.apply_0, FingerPrint$lambda$0$Type, [])), new FingerPrint$0methodref$compareArrays$Type), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  for (serializedKey$iterator = serializedKeys.iterator(); serializedKey$iterator.hasNext_0();) {
    serializedKey = castTo(serializedKey$iterator.next_1(), 11);
    checkCriticalNotNull(serializedKey);
    $write_2(bout, serializedKey, 0, serializedKey.length);
  }
  initial = $toByteArray(bout);
  return hash_7(initial, h);
}

function compareArrays_0(a, b){
  $clinit_FingerPrint();
  var i;
  if (a.length != b.length)
    return a.length - b.length;
  for (i = 0; i < a.length; i++)
    if (a[i] != b[i])
      return a[i] - b[i];
  return 0;
}

function decodeFromPixels(pixels, width_0, height){
  $clinit_FingerPrint();
  var bytes, e, readBitmap, reader, source;
  source = new RGBLuminanceSource(width_0, height, pixels);
  readBitmap = new BinaryBitmap(new HybridBinarizer(source));
  reader = new QRCodeReader;
  try {
    return bytes = hexToBytes($decode_1(reader, readBitmap).text_0) , fromCbor_30(deserialize(new CborDecoder(new ByteArrayInputStream(bytes)), bytes.length));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 51)) {
      e = $e0;
      throw toJs(new RuntimeException_2(e));
    }
     else 
      throw toJs($e0);
  }
}

function encodeToPng(width_0, height, pixels){
  $clinit_FingerPrint();
  var b, b0, b1, bout, bytes, color_0, colorset, compressed, crc, dos, head, id_0, offset, pixel, rest, sh, x_0, y_0;
  bout = new ByteArrayOutputStream;
  id_0 = stampJavaTypeInfo(getClassLiteralForArray(B_classLit, 1), $intern_28, 8, 15, [-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13]);
  crc = new CRC32;
  checkCriticalNotNull(id_0);
  $write_2(bout, id_0, 0, id_0.length);
  $update_0(crc, id_0, 0, id_0.length);
  crc.crc = 0;
  write_12(($clinit_EmulatedCharset() , UTF_8_0).getBytes('IHDR'), bout, crc);
  b0 = stampJavaTypeInfo(getClassLiteralForArray(B_classLit, 1), $intern_28, 8, 15, [(width_0 >> 24 & 255) << 24 >> 24, (width_0 >> 16 & 255) << 24 >> 24, (width_0 >> 8 & 255) << 24 >> 24, (width_0 & 255) << 24 >> 24]);
  checkCriticalNotNull(b0);
  $write_2(bout, b0, 0, b0.length);
  $update_0(crc, b0, 0, b0.length);
  b1 = stampJavaTypeInfo(getClassLiteralForArray(B_classLit, 1), $intern_28, 8, 15, [(height >> 24 & 255) << 24 >> 24, (height >> 16 & 255) << 24 >> 24, (height >> 8 & 255) << 24 >> 24, (height & 255) << 24 >> 24]);
  checkCriticalNotNull(b1);
  $write_2(bout, b1, 0, b1.length);
  $update_0(crc, b1, 0, b1.length);
  head = null;
  head = stampJavaTypeInfo(getClassLiteralForArray(B_classLit, 1), $intern_28, 8, 15, [1, 0, 0, 0, 0]);
  checkCriticalNotNull(head);
  $write_2(bout, head, 0, head.length);
  $update_0(crc, head, 0, head.length);
  write_11(toInt_0(and_0(crc.crc, $intern_47)), bout, crc);
  compressed = new ByteArrayOutputStream;
  dos = new DeflaterOutputStream(compressed, new Deflater);
  switch (0) {
    case 0:
      rest = width_0 % 8;
      bytes = width_0 / 8 | 0;
      for (y_0 = 0; y_0 < height; y_0++) {
        $write_4(dos, 0);
        for (x_0 = 0; x_0 < bytes; x_0++) {
          colorset = 0;
          for (sh = 0; sh < 8; sh++) {
            pixel = (offset = y_0 * pixels.rowSize + ((x_0 * 8 + sh) / 32 | 0) , (pixels.bits[offset] >>> (x_0 * 8 + sh & 31) & 1) != 0?-16777216:-1);
            color_0 = pixel >> 16 & 255;
            color_0 += pixel >> 8 & 255;
            color_0 += pixel & 255;
            colorset <<= 1;
            color_0 >= 384 && (colorset |= 1);
          }
          $write_4(dos, colorset << 24 >> 24);
        }
        if (rest > 0) {
          colorset = 0;
          for (sh = 0; sh < width_0 % 8; sh++) {
            pixel = (offset = y_0 * pixels.rowSize + ((bytes * 8 + sh) / 32 | 0) , (pixels.bits[offset] >>> (bytes * 8 + sh & 31) & 1) != 0?-16777216:-1);
            color_0 = pixel >> 16 & 255;
            color_0 += pixel >> 8 & 255;
            color_0 += pixel & 255;
            colorset <<= 1;
            color_0 >= 384 && (colorset |= 1);
          }
          colorset <<= 8 - rest;
          $write_4(dos, colorset << 24 >> 24);
        }
      }

  }
  $finish(dos);
  write_11(compressed.count, bout, crc);
  crc.crc = 0;
  write_12(UTF_8_0.getBytes('IDAT'), bout, crc);
  write_12($toByteArray(compressed), bout, crc);
  write_11(toInt_0(and_0(crc.crc, $intern_47)), bout, crc);
  b = stampJavaTypeInfo(getClassLiteralForArray(B_classLit, 1), $intern_28, 8, 15, [0, 0, 0, 0]);
  checkCriticalNotNull(b);
  $write_2(bout, b, 0, b.length);
  $update_0(crc, b, 0, b.length);
  crc.crc = 0;
  write_12(UTF_8_0.getBytes('IEND'), bout, crc);
  write_11(toInt_0(and_0(crc.crc, $intern_47)), bout, crc);
  return $toByteArray(bout);
}

function fromCbor_30(cbor){
  var friend, m, us, version;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor for FingerPrint! ' + cbor));
  m = castTo(cbor, 18);
  version = castTo(castTo($get_0(m.values_0, new CborObject$CborString('v')), 7), 29).value_0;
  us = castTo(castTo($get_0(m.values_0, new CborObject$CborString('u')), 7), 27).value_0;
  friend = castTo(castTo($get_0(m.values_0, new CborObject$CborString('f')), 7), 27).value_0;
  return new FingerPrint(us, friend, version);
}

function generate(ourname, ourIdentityKey, friendsName, friendsIdentityKey, h){
  $clinit_FingerPrint();
  var e, friend, us;
  try {
    us = calculateHalfFingerprint(ourname, ourIdentityKey, h);
    friend = calculateHalfFingerprint(friendsName, friendsIdentityKey, h);
    return new FingerPrint(us, friend, 1);
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 62)) {
      e = $e0;
      throw toJs(new RuntimeException_2(e));
    }
     else 
      throw toJs($e0);
  }
}

function getEncodedChunk(hash, offset){
  var chunk;
  chunk = mod_0(or_0(or_0(or_0(or_0(and_0(hash[offset], 255), shl_0(and_0(hash[offset + 1], 255), 8)), shl_0(and_0(hash[offset + 2], 255), 16)), shl_0(and_0(hash[offset + 3], 255), 24)), shl_0(and_0(hash[offset + 4], 255), 32)), 100000);
  if (compare_1(chunk, 10) < 0)
    return '0000' + toString_4(chunk);
  if (compare_1(chunk, 100) < 0)
    return '000' + toString_4(chunk);
  if (compare_1(chunk, $intern_49) < 0)
    return '00' + toString_4(chunk);
  if (compare_1(chunk, $intern_21) < 0)
    return '0' + toString_4(chunk);
  return '' + toString_4(chunk);
}

function hash_7(input_0, h){
  var i;
  for (i = 0; i < 5200; i++)
    input_0 = h.scriptJS.blake2b(input_0, 64);
  return checkCopyOfRange(input_0, 0, 32) , copyPrimitiveByteArray(input_0, initUnidimensionalArray(B_classLit, $intern_28, 8, 32, 15, 1), 0, 32);
}

function write_11(i, out, crc){
  var b;
  b = stampJavaTypeInfo(getClassLiteralForArray(B_classLit, 1), $intern_28, 8, 15, [(i >> 24 & 255) << 24 >> 24, (i >> 16 & 255) << 24 >> 24, (i >> 8 & 255) << 24 >> 24, (i & 255) << 24 >> 24]);
  checkCriticalNotNull(b);
  $write_2(out, b, 0, b.length);
  $update_0(crc, b, 0, b.length);
}

function write_12(b, out, crc){
  checkCriticalNotNull(b);
  $write_2(out, b, 0, b.length);
  $update_0(crc, b, 0, b.length);
}

defineClass(352, 1, {7:1, 352:1}, FingerPrint);
_.serialize = function serialize_46(){
  return $toByteArray_2($toCbor_20(this));
}
;
_.equals_0 = function equals_56(o){
  var that;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_fingerprint_FingerPrint_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 352);
  return eq(this.version, that.version) && equals_16(this.ourFingerPrint, that.ourFingerPrint) && equals_16(this.friendsFingerPrint, that.friendsFingerPrint);
}
;
_.getBase64Thumbnail = function getBase64Thumbnail(){
  var base64Data;
  base64Data = $encodeToString($getQrCodeData(this));
  return 'data:image/png;base64,' + base64Data;
}
;
_.getDisplayString = function getDisplayString(){
  return calculateDisplayString(this.ourFingerPrint, this.friendsFingerPrint);
}
;
_.hashCode_1 = function hashCode_55(){
  var result;
  result = hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [valueOf_2(this.version)]));
  result = 31 * result + hashCode_17(this.ourFingerPrint);
  result = 31 * result + hashCode_17(this.friendsFingerPrint);
  return result;
}
;
_.matches = function matches(other){
  return eq(this.version, other.version) && equals_16(this.ourFingerPrint, other.friendsFingerPrint) && equals_16(this.friendsFingerPrint, other.ourFingerPrint);
}
;
_.toCbor = function toCbor_38(){
  return $toCbor_20(this);
}
;
_.version = 0;
var VERSION;
var Lpeergos_shared_fingerprint_FingerPrint_2_classLit = createForClass('peergos.shared.fingerprint', 'FingerPrint', 352);
function FingerPrint$0methodref$compareArrays$Type(){
}

defineClass(871, 1, {}, FingerPrint$0methodref$compareArrays$Type);
_.compare_0 = function compare_11(arg0, arg1){
  return compareArrays_0(castTo(arg0, 11), castTo(arg1, 11));
}
;
_.equals_0 = function equals_57(other){
  return this === other;
}
;
var Lpeergos_shared_fingerprint_FingerPrint$0methodref$compareArrays$Type_2_classLit = createForClass('peergos.shared.fingerprint', 'FingerPrint/0methodref$compareArrays$Type', 871);
function FingerPrint$lambda$0$Type(){
}

defineClass(2709, $wnd.Function, $intern_22, FingerPrint$lambda$0$Type);
_.apply_0 = function apply_269(arg0){
  return $clinit_FingerPrint() , $toByteArray_2(new CborObject$CborMerkleLink(castTo(arg0, 55).target));
}
;
function $copyAndMigrateFromInlineToNode(this$static, bitpos, node){
  var dst, newDataMap, newIndex, newNodeMap, oldIndex, src_0;
  oldIndex = getIndex(this$static.dataMap, bitpos);
  newIndex = this$static.contents.length - 1 - getIndex(this$static.nodeMap, bitpos);
  src_0 = this$static.contents;
  dst = initUnidimensionalArray(Lpeergos_shared_hamt_Champ$HashPrefixPayload_2_classLit, $intern_68, 98, src_0.length, 0, 1);
  if (oldIndex > newIndex)
    throw toJs(new IllegalStateException_0('Invalid champ!'));
  arraycopy(src_0, 0, dst, 0, oldIndex);
  arraycopy(src_0, oldIndex + 1, dst, oldIndex, newIndex - oldIndex);
  dst[newIndex] = new Champ$HashPrefixPayload(($clinit_MaybeMultihash() , new MaybeMultihash(castTo(node.right, 58))));
  arraycopy(src_0, newIndex + 1, dst, newIndex + 1, src_0.length - newIndex - 1);
  newNodeMap = valueOf_7($toByteArray_1(this$static.nodeMap));
  $set_1(newNodeMap, bitpos);
  newDataMap = valueOf_7($toByteArray_1(this$static.dataMap));
  $clear_0(newDataMap, bitpos);
  return new Champ(newDataMap, newNodeMap, dst, this$static.fromCbor_0);
}

function $copyAndMigrateFromNodeToInline(this$static, bitpos, node){
  var count, dst, i, merged, newDataMap, newIndex, newNodeMap, oldIndex, src_0, toAdd;
  oldIndex = this$static.contents.length - 1 - getIndex(this$static.nodeMap, bitpos);
  newIndex = getIndex(this$static.dataMap, bitpos);
  src_0 = this$static.contents;
  dst = initUnidimensionalArray(Lpeergos_shared_hamt_Champ$HashPrefixPayload_2_classLit, $intern_68, 98, src_0.length, 0, 1);
  if (oldIndex < newIndex)
    throw toJs(new IllegalStateException_0('Invalid champ!'));
  arraycopy(src_0, 0, dst, 0, newIndex);
  merged = initUnidimensionalArray(Lpeergos_shared_hamt_Champ$KeyElement_2_classLit, $intern_69, 119, $keyCount(node), 0, 1);
  count = 0;
  for (i = 0; i < node.contents.length; i++) {
    toAdd = node.contents[i].mappings;
    arraycopy(toAdd, 0, merged, count, toAdd.length);
    count += toAdd.length;
  }
  sort_1(merged, comparing(makeLambdaFunction(Champ$lambda$34$Type.prototype.apply_0, Champ$lambda$34$Type, []), ($clinit_Comparators() , $clinit_Comparators() , NATURAL_ORDER)));
  dst[newIndex] = new Champ$HashPrefixPayload_0(merged);
  arraycopy(src_0, newIndex, dst, newIndex + 1, oldIndex - newIndex);
  arraycopy(src_0, oldIndex + 1, dst, oldIndex + 1, src_0.length - oldIndex - 1);
  newNodeMap = valueOf_7($toByteArray_1(this$static.nodeMap));
  $clear_0(newNodeMap, bitpos);
  newDataMap = valueOf_7($toByteArray_1(this$static.dataMap));
  $set_1(newDataMap, bitpos);
  return new Champ(newDataMap, newNodeMap, dst, this$static.fromCbor_0);
}

function $get_15(this$static, owner, key, hash, depth, bitWidth, storage){
  var bitpos, candidate, candidate$array, candidate$index, candidate$max, index_0, payload;
  bitpos = mask_0(hash, depth, bitWidth);
  if ($get_2(this$static.dataMap, bitpos)) {
    index_0 = getIndex(this$static.dataMap, bitpos);
    payload = this$static.contents[index_0];
    for (candidate$array = payload.mappings , candidate$index = 0 , candidate$max = candidate$array.length; candidate$index < candidate$max; ++candidate$index) {
      candidate = candidate$array[candidate$index];
      if ($equals_25(candidate.key, key)) {
        return new CompletableFuture_0(candidate.valueHash);
      }
    }
    return new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY));
  }
  if ($get_2(this$static.nodeMap, bitpos)) {
    return $thenCompose($getChild(this$static, owner, hash, depth, bitWidth, storage), makeLambdaFunction(Champ$lambda$10$Type.prototype.apply_0, Champ$lambda$10$Type, [owner, key, hash, depth, bitWidth, storage]));
  }
  return new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY));
}

function $getChild(this$static, owner, hash, depth, bitWidth, storage){
  var bitpos, childHash, index_0;
  bitpos = mask_0(hash, depth, bitWidth);
  index_0 = this$static.contents.length - 1 - getIndex(this$static.nodeMap, bitpos);
  childHash = $get_9(this$static.contents[index_0].link_0);
  return $thenApply(storage.get_1(owner, castTo(childHash, 44), ($clinit_Optional() , $clinit_Optional() , EMPTY)), makeLambdaFunction(Champ$lambda$0$Type.prototype.apply_0, Champ$lambda$0$Type, [this$static, childHash]));
}

function $hasMultipleMappings(this$static){
  return $keyCount(this$static) > 1 || $nodeCount(this$static) > 0;
}

function $keyCount(this$static){
  var count, payload, payload$array, payload$index, payload$max;
  count = 0;
  for (payload$array = this$static.contents , payload$index = 0 , payload$max = payload$array.length; payload$index < payload$max; ++payload$index) {
    payload = payload$array[payload$index];
    !!payload.link_0 || (count += payload.mappings.length);
  }
  return count;
}

function $lambda$0_9(this$static, childHash_1, x_1){
  return new Pair(childHash_1, $map(x_1, makeLambdaFunction(Champ$lambda$1$Type.prototype.apply_0, Champ$lambda$1$Type, [this$static])));
}

function $lambda$1_3(this$static, y_0){
  return fromCbor_31(y_0, this$static.fromCbor_0);
}

function $lambda$14_0(this$static, bitpos_1, storage_2, owner_3, writer_4, writeHasher_5, tid_6, p_6){
  var champ;
  champ = $copyAndMigrateFromInlineToNode(this$static, bitpos_1, p_6);
  return $thenApply(storage_2.put_0(owner_3, writer_4, $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborByteArray($toByteArray_1(champ.dataMap)), new CborObject$CborByteArray($toByteArray_1(champ.nodeMap)), new CborObject$CborList(castTo($collect_0($flatMap_0(stream_5(champ.contents), makeLambdaFunction(Champ$lambda$65$Type.prototype.apply_0, Champ$lambda$65$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17))])))), writeHasher_5, tid_6), makeLambdaFunction(Champ$lambda$15$Type.prototype.apply_0, Champ$lambda$15$Type, [champ]));
}

function $lambda$16_2(this$static, ourHash_1, bitpos_2, storage_3, owner_4, writer_5, writeHasher_6, tid_7, key_8, hash_9, depth_10, expected_11, value_12, bitWidth_13, maxCollisions_14, hasher_15, child_15){
  return $thenCompose($put_12(castTo($get_6(castTo(child_15.right, 12)), 78), owner_4, writer_5, key_8, hash_9, depth_10 + 1, expected_11, value_12, bitWidth_13, maxCollisions_14, hasher_15, tid_7, storage_3, writeHasher_6, castTo(child_15.left, 58)), makeLambdaFunction(Champ$lambda$17$Type.prototype.apply_0, Champ$lambda$17$Type, [this$static, child_15, ourHash_1, bitpos_2, storage_3, owner_4, writer_5, writeHasher_6, tid_7]));
}

function $lambda$17_1(this$static, child_1, ourHash_2, bitpos_3, storage_4, owner_5, writer_6, writeHasher_7, tid_8, newChild_8){
  var champ;
  if (castTo(newChild_8.right, 58).equals(child_1.left))
    return new CompletableFuture_0(new Pair(this$static, ourHash_2));
  champ = $overwriteChildLink(this$static, bitpos_3, newChild_8);
  return $thenApply(storage_4.put_0(owner_5, writer_6, $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborByteArray($toByteArray_1(champ.dataMap)), new CborObject$CborByteArray($toByteArray_1(champ.nodeMap)), new CborObject$CborList(castTo($collect_0($flatMap_0(stream_5(champ.contents), makeLambdaFunction(Champ$lambda$65$Type.prototype.apply_0, Champ$lambda$65$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17))])))), writeHasher_7, tid_8), makeLambdaFunction(Champ$lambda$18$Type.prototype.apply_0, Champ$lambda$18$Type, [champ]));
}

function $lambda$30(this$static, ourHash_1, maxCollisions_2, bitpos_3, storage_4, owner_5, writer_6, writeHasher_7, tid_8, key_9, hash_10, depth_11, expected_12, bitWidth_13, child_13){
  return $thenCompose($remove_12(castTo($get_6(castTo(child_13.right, 12)), 78), owner_5, writer_6, key_9, hash_10, depth_11 + 1, expected_12, bitWidth_13, maxCollisions_2, tid_8, storage_4, writeHasher_7, castTo(child_13.left, 58)), makeLambdaFunction(Champ$lambda$31$Type.prototype.apply_0, Champ$lambda$31$Type, [this$static, child_13, ourHash_1, maxCollisions_2, bitpos_3, storage_4, owner_5, writer_6, writeHasher_7, tid_8]));
}

function $lambda$31(this$static, child_1, ourHash_2, maxCollisions_3, bitpos_4, storage_5, owner_6, writer_7, writeHasher_8, tid_9, newChild_9){
  var champ;
  if (castTo(child_1.left, 58).equals(newChild_9.right))
    return new CompletableFuture_0(new Pair(this$static, ourHash_2));
  if (castTo(newChild_9.left, 78).contents.length == 0) {
    throw toJs(new IllegalStateException_0('Sub-node must have at least one element.'));
  }
   else if ($nodeCount(castTo(newChild_9.left, 78)) == 0 && $keyCount(castTo(newChild_9.left, 78)) == maxCollisions_3) {
    if ($keyCount(this$static) == 0 && $nodeCount(this$static) == 1) {
      return new CompletableFuture_0(newChild_9);
    }
     else {
      champ = $copyAndMigrateFromNodeToInline(this$static, bitpos_4, castTo(newChild_9.left, 78));
      return $thenApply(storage_5.put_0(owner_6, writer_7, $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborByteArray($toByteArray_1(champ.dataMap)), new CborObject$CborByteArray($toByteArray_1(champ.nodeMap)), new CborObject$CborList(castTo($collect_0($flatMap_0(stream_5(champ.contents), makeLambdaFunction(Champ$lambda$65$Type.prototype.apply_0, Champ$lambda$65$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17))])))), writeHasher_8, tid_9), makeLambdaFunction(Champ$lambda$32$Type.prototype.apply_0, Champ$lambda$32$Type, [champ]));
    }
  }
   else {
    champ = $overwriteChildLink(this$static, bitpos_4, newChild_9);
    return $thenApply(storage_5.put_0(owner_6, writer_7, $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborByteArray($toByteArray_1(champ.dataMap)), new CborObject$CborByteArray($toByteArray_1(champ.nodeMap)), new CborObject$CborList(castTo($collect_0($flatMap_0(stream_5(champ.contents), makeLambdaFunction(Champ$lambda$65$Type.prototype.apply_0, Champ$lambda$65$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17))])))), writeHasher_8, tid_9), makeLambdaFunction(Champ$lambda$33$Type.prototype.apply_0, Champ$lambda$33$Type, [champ]));
  }
}

function $lambda$35(this$static, owner_1, consumer_2, storage_3, res_3, payload_4){
  return $thenCompose(payload_4.link_0?new CompletableFuture_0(res_3):reduceAll(castTo($collect_0(stream_5(payload_4.mappings), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 54), res_3, new Champ$lambda$37$Type(consumer_2), new Champ$lambda$38$Type), makeLambdaFunction(Champ$lambda$39$Type.prototype.apply_0, Champ$lambda$39$Type, [this$static, payload_4, owner_1, consumer_2, storage_3]));
}

function $lambda$39(this$static, payload_1, owner_2, consumer_3, storage_4, newRes_4){
  return !!payload_1.link_0 && !!payload_1.link_0.hash_0?$thenCompose($thenApply(storage_4.get_1(owner_2, castTo($get_9(payload_1.link_0), 44), ($clinit_Optional() , $clinit_Optional() , EMPTY)), makeLambdaFunction(Champ$lambda$40$Type.prototype.apply_0, Champ$lambda$40$Type, [this$static, payload_1])), makeLambdaFunction(Champ$lambda$42$Type.prototype.apply_0, Champ$lambda$42$Type, [owner_2, newRes_4, consumer_3, storage_4])):new CompletableFuture_0(newRes_4);
}

function $lambda$40(this$static, payload_1, rawOpt_1){
  return fromCbor_31(castTo($orElseThrow(rawOpt_1, new Champ$lambda$41$Type(payload_1)), 7), this$static.fromCbor_0);
}

function $nodeCount(this$static){
  var count, payload, payload$array, payload$index, payload$max;
  count = 0;
  for (payload$array = this$static.contents , payload$index = 0 , payload$max = payload$array.length; payload$index < payload$max; ++payload$index) {
    payload = payload$array[payload$index];
    !!payload.link_0 && ++count;
  }
  return count;
}

function $overwriteChildLink(this$static, bitpos, node){
  var dst, setIndex, src_0;
  setIndex = this$static.contents.length - 1 - getIndex(this$static.nodeMap, bitpos);
  src_0 = this$static.contents;
  dst = castTo(copyOf_1(src_0, src_0.length), 181);
  setCheck(dst, setIndex, new Champ$HashPrefixPayload(($clinit_MaybeMultihash() , new MaybeMultihash(castTo(node.right, 58)))));
  return new Champ(this$static.dataMap, this$static.nodeMap, dst, this$static.fromCbor_0);
}

function $pushMappingsDownALevel(this$static, owner, writer, mappings, key1, hash1, val1, depth, bitWidth, maxCollisions, hasher, tid, storage, writeHasher){
  var empty;
  if (depth >= 32) {
    throw toJs(new IllegalStateException_0('Hash collision!'));
  }
  empty = empty_3(this$static.fromCbor_0);
  return $thenCompose($thenCompose($thenApply(storage.put_0(owner, writer, $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborByteArray($toByteArray_1(empty.dataMap)), new CborObject$CborByteArray($toByteArray_1(empty.nodeMap)), new CborObject$CborList(castTo($collect_0($flatMap_0(stream_5(empty.contents), makeLambdaFunction(Champ$lambda$65$Type.prototype.apply_0, Champ$lambda$65$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17))])))), writeHasher, tid), makeLambdaFunction(Champ$lambda$20$Type.prototype.apply_0, Champ$lambda$20$Type, [empty])), makeLambdaFunction(Champ$lambda$21$Type.prototype.apply_0, Champ$lambda$21$Type, [owner, writer, key1, hash1, depth, val1, bitWidth, maxCollisions, hasher, tid, storage, writeHasher])), makeLambdaFunction(Champ$lambda$22$Type.prototype.apply_0, Champ$lambda$22$Type, [owner, writer, depth, bitWidth, maxCollisions, hasher, tid, storage, writeHasher, mappings]));
}

function $put_12(this$static, owner, writer, key, hash, depth, expected, value_0, bitWidth, maxCollisions, hasher, tid, storage, writeHasher, ourHash){
  var bitpos, champ, currentKey, currentVal, err, index_0, mapping, mappings, payload, payloadIndex, src_0, dst, existing, updated, src_1, result, prefix, insertIndex, src_2, result_0, newDataMap;
  bitpos = mask_0(hash, depth, bitWidth);
  if ($get_2(this$static.dataMap, bitpos)) {
    index_0 = getIndex(this$static.dataMap, bitpos);
    payload = this$static.contents[index_0];
    mappings = payload.mappings;
    for (payloadIndex = 0; payloadIndex < mappings.length; payloadIndex++) {
      mapping = mappings[payloadIndex];
      currentKey = mapping.key;
      currentVal = mapping.valueHash;
      if ($equals_25(currentKey, key)) {
        if (!$equals_6(currentVal, expected)) {
          err = new CompletableFuture;
          $completeExceptionally(err, new CasException(currentVal, expected));
          return err;
        }
        champ = (src_0 = this$static.contents , dst = castTo(copyOf_1(src_0, src_0.length), 181) , existing = dst[index_0] , updated = initUnidimensionalArray(Lpeergos_shared_hamt_Champ$KeyElement_2_classLit, $intern_69, 119, existing.mappings.length, 0, 1) , arraycopy(existing.mappings, 0, updated, 0, existing.mappings.length) , updated[payloadIndex] = new Champ$KeyElement(existing.mappings[payloadIndex].key, value_0) , setCheck(dst, index_0, new Champ$HashPrefixPayload_0(updated)) , new Champ(this$static.dataMap, this$static.nodeMap, dst, this$static.fromCbor_0));
        return $thenApply(storage.put_0(owner, writer, $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborByteArray($toByteArray_1(champ.dataMap)), new CborObject$CborByteArray($toByteArray_1(champ.nodeMap)), new CborObject$CborList(castTo($collect_0($flatMap_0(stream_5(champ.contents), makeLambdaFunction(Champ$lambda$65$Type.prototype.apply_0, Champ$lambda$65$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17))])))), writeHasher, tid), makeLambdaFunction(Champ$lambda$12$Type.prototype.apply_0, Champ$lambda$12$Type, [champ]));
      }
    }
    if (mappings.length < maxCollisions) {
      champ = (src_1 = this$static.contents , result = castTo(copyOf_1(src_1, src_1.length), 181) , prefix = initUnidimensionalArray(Lpeergos_shared_hamt_Champ$KeyElement_2_classLit, $intern_69, 119, src_1[index_0].mappings.length + 1, 0, 1) , arraycopy(src_1[index_0].mappings, 0, prefix, 0, src_1[index_0].mappings.length) , prefix[prefix.length - 1] = new Champ$KeyElement(key, value_0) , sort_1(prefix, comparing(makeLambdaFunction(Champ$lambda$26$Type.prototype.apply_0, Champ$lambda$26$Type, []), ($clinit_Comparators() , $clinit_Comparators() , NATURAL_ORDER))) , setCheck(result, index_0, new Champ$HashPrefixPayload_0(prefix)) , new Champ(this$static.dataMap, this$static.nodeMap, result, this$static.fromCbor_0));
      return $thenApply(storage.put_0(owner, writer, $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborByteArray($toByteArray_1(champ.dataMap)), new CborObject$CborByteArray($toByteArray_1(champ.nodeMap)), new CborObject$CborList(castTo($collect_0($flatMap_0(stream_5(champ.contents), makeLambdaFunction(Champ$lambda$65$Type.prototype.apply_0, Champ$lambda$65$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17))])))), writeHasher, tid), makeLambdaFunction(Champ$lambda$13$Type.prototype.apply_0, Champ$lambda$13$Type, [champ]));
    }
    return $thenCompose($pushMappingsDownALevel(this$static, owner, writer, mappings, key, hash, value_0, depth + 1, bitWidth, maxCollisions, hasher, tid, storage, writeHasher), makeLambdaFunction(Champ$lambda$14$Type.prototype.apply_0, Champ$lambda$14$Type, [this$static, bitpos, storage, owner, writer, writeHasher, tid]));
  }
   else if ($get_2(this$static.nodeMap, bitpos)) {
    return $thenCompose($getChild(this$static, owner, hash, depth, bitWidth, storage), makeLambdaFunction(Champ$lambda$16$Type.prototype.apply_0, Champ$lambda$16$Type, [this$static, ourHash, bitpos, storage, owner, writer, writeHasher, tid, key, hash, depth, expected, value_0, bitWidth, maxCollisions, hasher]));
  }
   else {
    champ = (insertIndex = getIndex(this$static.dataMap, bitpos) , src_2 = this$static.contents , result_0 = initUnidimensionalArray(Lpeergos_shared_hamt_Champ$HashPrefixPayload_2_classLit, $intern_68, 98, src_2.length + 1, 0, 1) , arraycopy(src_2, 0, result_0, 0, insertIndex) , arraycopy(src_2, insertIndex, result_0, insertIndex + 1, src_2.length - insertIndex) , result_0[insertIndex] = new Champ$HashPrefixPayload_0(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_hamt_Champ$KeyElement_2_classLit, 1), $intern_69, 119, 0, [new Champ$KeyElement(key, value_0)])) , newDataMap = valueOf_7($toByteArray_1(this$static.dataMap)) , $set_1(newDataMap, bitpos) , new Champ(newDataMap, this$static.nodeMap, result_0, this$static.fromCbor_0));
    return $thenApply(storage.put_0(owner, writer, $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborByteArray($toByteArray_1(champ.dataMap)), new CborObject$CborByteArray($toByteArray_1(champ.nodeMap)), new CborObject$CborList(castTo($collect_0($flatMap_0(stream_5(champ.contents), makeLambdaFunction(Champ$lambda$65$Type.prototype.apply_0, Champ$lambda$65$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17))])))), writeHasher, tid), makeLambdaFunction(Champ$lambda$19$Type.prototype.apply_0, Champ$lambda$19$Type, [champ]));
  }
}

function $reduceAllMappings(this$static, owner, identity, consumer, storage){
  return reduceAll(castTo($collect_0(stream_5(this$static.contents), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 54), identity, new Champ$lambda$35$Type(this$static, owner, consumer, storage), new Champ$lambda$36$Type);
}

function $remove_12(this$static, owner, writer, key, hash, depth, expected, bitWidth, maxCollisions, tid, storage, writeHasher, ourHash){
  var bitpos, champ, currentKey, currentVal, dataIndex, dst, err, grouped, grouped$array, grouped$index, grouped$max, lastInPrefix, mapping, mappings, newDataMap, nextIndex, oneBucket, pair, pair$array, pair$index, pair$max, payload, payloadIndex, remaining, remainingMappings, src_0;
  bitpos = mask_0(hash, depth, bitWidth);
  if ($get_2(this$static.dataMap, bitpos)) {
    dataIndex = getIndex(this$static.dataMap, bitpos);
    payload = this$static.contents[dataIndex];
    mappings = payload.mappings;
    for (payloadIndex = 0; payloadIndex < mappings.length; payloadIndex++) {
      mapping = mappings[payloadIndex];
      currentKey = mapping.key;
      currentVal = mapping.valueHash;
      if (currentKey == key || !!currentKey && $equals_25(currentKey, key)) {
        if (!$equals_6(currentVal, expected)) {
          err = new CompletableFuture;
          $completeExceptionally(err, new CasException(currentVal, expected));
          return err;
        }
        if ($keyCount(this$static) == maxCollisions + 1 && $nodeCount(this$static) == 0) {
          if (depth > 0) {
            newDataMap = new BitSet;
            $set_1(newDataMap, mask_0(hash, 0, bitWidth));
            remainingMappings = initUnidimensionalArray(Lpeergos_shared_hamt_Champ$KeyElement_2_classLit, $intern_69, 119, maxCollisions, 0, 1);
            nextIndex = 0;
            for (grouped$array = this$static.contents , grouped$index = 0 , grouped$max = grouped$array.length; grouped$index < grouped$max; ++grouped$index) {
              grouped = grouped$array[grouped$index];
              for (pair$array = grouped.mappings , pair$index = 0 , pair$max = pair$array.length; pair$index < pair$max; ++pair$index) {
                pair = pair$array[pair$index];
                $equals_25(pair.key, key) || (remainingMappings[nextIndex++] = pair);
              }
            }
            sort_1(remainingMappings, comparing(makeLambdaFunction(Champ$lambda$27$Type.prototype.apply_0, Champ$lambda$27$Type, []), ($clinit_Comparators() , $clinit_Comparators() , NATURAL_ORDER)));
            oneBucket = stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_hamt_Champ$HashPrefixPayload_2_classLit, 1), $intern_68, 98, 0, [new Champ$HashPrefixPayload_0(remainingMappings)]);
            champ = new Champ(newDataMap, new BitSet, oneBucket, this$static.fromCbor_0);
          }
           else {
            newDataMap = valueOf_7($toByteArray_1(this$static.dataMap));
            lastInPrefix = mappings.length == 1;
            lastInPrefix?$clear_0(newDataMap, bitpos):$set_1(newDataMap, mask_0(hash, 0, bitWidth));
            src_0 = this$static.contents;
            dst = initUnidimensionalArray(Lpeergos_shared_hamt_Champ$HashPrefixPayload_2_classLit, $intern_68, 98, src_0.length - (lastInPrefix?1:0), 0, 1);
            arraycopy(src_0, 0, dst, 0, dataIndex);
            arraycopy(src_0, dataIndex + 1, dst, dataIndex + (lastInPrefix?0:1), src_0.length - dataIndex - 1);
            if (!lastInPrefix) {
              remaining = initUnidimensionalArray(Lpeergos_shared_hamt_Champ$KeyElement_2_classLit, $intern_69, 119, mappings.length - 1, 0, 1);
              arraycopy(mappings, 0, remaining, 0, payloadIndex);
              arraycopy(mappings, payloadIndex + 1, remaining, payloadIndex, mappings.length - payloadIndex - 1);
              dst[dataIndex] = new Champ$HashPrefixPayload_0(remaining);
            }
            champ = new Champ(newDataMap, new BitSet, dst, this$static.fromCbor_0);
          }
          return $thenApply(storage.put_0(owner, writer, $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborByteArray($toByteArray_1(champ.dataMap)), new CborObject$CborByteArray($toByteArray_1(champ.nodeMap)), new CborObject$CborList(castTo($collect_0($flatMap_0(stream_5(champ.contents), makeLambdaFunction(Champ$lambda$65$Type.prototype.apply_0, Champ$lambda$65$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17))])))), writeHasher, tid), makeLambdaFunction(Champ$lambda$28$Type.prototype.apply_0, Champ$lambda$28$Type, [champ]));
        }
         else {
          champ = $removeMapping(this$static, bitpos, payloadIndex);
          return $thenApply(storage.put_0(owner, writer, $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborByteArray($toByteArray_1(champ.dataMap)), new CborObject$CborByteArray($toByteArray_1(champ.nodeMap)), new CborObject$CborList(castTo($collect_0($flatMap_0(stream_5(champ.contents), makeLambdaFunction(Champ$lambda$65$Type.prototype.apply_0, Champ$lambda$65$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17))])))), writeHasher, tid), makeLambdaFunction(Champ$lambda$29$Type.prototype.apply_0, Champ$lambda$29$Type, [champ]));
        }
      }
    }
    return new CompletableFuture_0(new Pair(this$static, ourHash));
  }
   else if ($get_2(this$static.nodeMap, bitpos)) {
    return $thenCompose($getChild(this$static, owner, hash, depth, bitWidth, storage), makeLambdaFunction(Champ$lambda$30$Type.prototype.apply_0, Champ$lambda$30$Type, [this$static, ourHash, maxCollisions, bitpos, storage, owner, writer, writeHasher, tid, key, hash, depth, expected, bitWidth]));
  }
  return new CompletableFuture_0(new Pair(this$static, ourHash));
}

function $removeMapping(this$static, bitpos, payloadIndex){
  var dst, existing, index_0, lastInPrefix, newDataMap, remaining, src_0;
  index_0 = getIndex(this$static.dataMap, bitpos);
  src_0 = this$static.contents;
  existing = src_0[index_0].mappings;
  lastInPrefix = existing.length == 1;
  dst = initUnidimensionalArray(Lpeergos_shared_hamt_Champ$HashPrefixPayload_2_classLit, $intern_68, 98, src_0.length - (lastInPrefix?1:0), 0, 1);
  arraycopy(src_0, 0, dst, 0, index_0);
  arraycopy(src_0, index_0 + 1, dst, lastInPrefix?index_0:index_0 + 1, src_0.length - index_0 - 1);
  if (!lastInPrefix) {
    remaining = initUnidimensionalArray(Lpeergos_shared_hamt_Champ$KeyElement_2_classLit, $intern_69, 119, existing.length - 1, 0, 1);
    arraycopy(existing, 0, remaining, 0, payloadIndex);
    arraycopy(existing, payloadIndex + 1, remaining, payloadIndex, existing.length - payloadIndex - 1);
    dst[index_0] = new Champ$HashPrefixPayload_0(remaining);
  }
  newDataMap = valueOf_7($toByteArray_1(this$static.dataMap));
  lastInPrefix && $clear_0(newDataMap, bitpos);
  return new Champ(newDataMap, this$static.nodeMap, dst, this$static.fromCbor_0);
}

function $toCbor_21(this$static){
  return new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborByteArray($toByteArray_1(this$static.dataMap)), new CborObject$CborByteArray($toByteArray_1(this$static.nodeMap)), new CborObject$CborList(castTo($collect_0($flatMap_0(stream_5(this$static.contents), makeLambdaFunction(Champ$lambda$65$Type.prototype.apply_0, Champ$lambda$65$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17))])));
}

function Champ(dataMap, nodeMap, contents, fromCbor){
  var i;
  this.dataMap = dataMap;
  this.nodeMap = nodeMap;
  this.contents = contents;
  this.fromCbor_0 = fromCbor;
  for (i = 0; i < contents.length; i++)
    if (!contents[i])
      throw toJs(new IllegalStateException);
}

function empty_3(fromCbor){
  return new Champ(new BitSet, new BitSet, initUnidimensionalArray(Lpeergos_shared_hamt_Champ$HashPrefixPayload_2_classLit, $intern_68, 98, 0, 0, 1), fromCbor);
}

function fromCbor_31(cbor, fromCbor){
  var contents, contentsCbor, dataMap, i, j, key, keyOrHash, list, mappings, mappingsCbor, nodeMap, value_0;
  if (!instanceOf(cbor, 21))
    throw toJs(new IllegalStateException_0('Invalid cbor for CHAMP! ' + cbor));
  list = castTo(cbor, 21).value_0;
  if (!instanceOf(list.getAtIndex(0), 27))
    throw toJs(new IllegalStateException_0('Invalid cbor for a champ, is this a btree?'));
  dataMap = valueOf_7(castTo(list.getAtIndex(0), 27).value_0);
  nodeMap = valueOf_7(castTo(list.getAtIndex(1), 27).value_0);
  contentsCbor = castTo(list.getAtIndex(2), 21).value_0;
  contents = new ArrayList;
  for (i = 0; i < contentsCbor.size(); i++) {
    keyOrHash = castTo(contentsCbor.getAtIndex(i), 7);
    if (instanceOf(keyOrHash, 21)) {
      mappings = new ArrayList;
      mappingsCbor = castTo(keyOrHash, 21).value_0;
      for (j = 0; j < mappingsCbor.size(); j += 2) {
        key = castTo(mappingsCbor.getAtIndex(j), 27).value_0;
        value_0 = castTo(mappingsCbor.getAtIndex(j + 1), 7);
        $add(mappings, new Champ$KeyElement(new ByteArrayWrapper(key), instanceOf(value_0, 214)?($clinit_Optional() , $clinit_Optional() , EMPTY):($clinit_Optional() , new Optional(checkCriticalNotNull(castTo(fromCbor(value_0), 7))))));
      }
      $add(contents, new Champ$HashPrefixPayload_0(castTo($toArray(mappings, initUnidimensionalArray(Lpeergos_shared_hamt_Champ$KeyElement_2_classLit, $intern_69, 119, 0, 0, 1)), 263)));
    }
     else {
      $add(contents, new Champ$HashPrefixPayload(($clinit_MaybeMultihash() , new MaybeMultihash(castTo(keyOrHash, 53).target))));
    }
  }
  return new Champ(dataMap, nodeMap, castTo($toArray(contents, initUnidimensionalArray(Lpeergos_shared_hamt_Champ$HashPrefixPayload_2_classLit, $intern_68, 98, contents.array.length, 0, 1)), 181), fromCbor);
}

function getIndex(bitmap, bitpos){
  var i, next, total;
  total = 0;
  for (i = 0; i < bitpos;) {
    next = $nextSetBit(bitmap, i);
    if (next == -1 || next >= bitpos)
      return total;
    ++total;
    i = next + 1;
  }
  return total;
}

function lambda$10_2(owner_0, key_1, hash_2, depth_3, bitWidth_4, storage_5, child_6){
  return castTo($orElse($map(castTo(child_6.right, 12), makeLambdaFunction(Champ$lambda$11$Type.prototype.apply_0, Champ$lambda$11$Type, [owner_0, key_1, hash_2, depth_3, bitWidth_4, storage_5])), new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY))), 87);
}

function lambda$11_2(owner_0, key_1, hash_2, depth_3, bitWidth_4, storage_5, c_6){
  return $get_15(c_6, owner_0, key_1, hash_2, depth_3 + 1, bitWidth_4, storage_5);
}

function lambda$21(owner_0, writer_1, key1_2, hash1_3, depth_4, val1_5, bitWidth_6, maxCollisions_7, hasher_8, tid_9, storage_10, writeHasher_11, p_12){
  return $put_12(castTo(p_12.left, 78), owner_0, writer_1, key1_2, hash1_3, depth_4, ($clinit_Optional() , $clinit_Optional() , EMPTY), val1_5, bitWidth_6, maxCollisions_7, hasher_8, tid_9, storage_10, writeHasher_11, castTo(p_12.right, 58));
}

function lambda$22(owner_0, writer_1, depth_2, bitWidth_3, maxCollisions_4, hasher_5, tid_6, storage_7, writeHasher_8, mappings_9, one_10){
  return reduceAll(castTo($collect_0(new StreamImpl(null, spliterator_5(mappings_9, mappings_9.length)), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 54), one_10, new Champ$lambda$23$Type(owner_0, writer_1, depth_2, bitWidth_3, maxCollisions_4, hasher_5, tid_6, storage_7, writeHasher_8), new Champ$lambda$24$Type);
}

function lambda$23_0(owner_0, writer_1, depth_2, bitWidth_3, maxCollisions_4, hasher_5, tid_6, storage_7, writeHasher_8, p_9, e_10){
  return $thenCompose(castTo(hasher_5(e_10.key), 6), makeLambdaFunction(Champ$lambda$25$Type.prototype.apply_0, Champ$lambda$25$Type, [p_9, owner_0, writer_1, e_10, depth_2, bitWidth_3, maxCollisions_4, hasher_5, tid_6, storage_7, writeHasher_8]));
}

function lambda$25_0(p_0, owner_1, writer_2, e_3, depth_4, bitWidth_5, maxCollisions_6, hasher_7, tid_8, storage_9, writeHasher_10, eHash_11){
  return $put_12(castTo(p_0.left, 78), owner_1, writer_2, e_3.key, eHash_11, depth_4, ($clinit_Optional() , $clinit_Optional() , EMPTY), e_3.valueHash, bitWidth_5, maxCollisions_6, hasher_7, tid_8, storage_9, writeHasher_10, castTo(p_0.right, 58));
}

function lambda$37_0(consumer_0, x_1, mapping_2){
  return castTo(consumer_0.apply_1(x_1, new Pair(mapping_2.key, mapping_2.valueHash)), 6);
}

function lambda$42(owner_0, newRes_1, consumer_2, storage_3, child_4){
  return reduceAll(castTo($collect_0(stream_5(child_4.contents), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 54), newRes_1, new Champ$lambda$35$Type(child_4, owner_0, consumer_2, storage_3), new Champ$lambda$36$Type);
}

function mask_0(hash, depth, nbits){
  var hiBits, index_0, lowBits, shift_0, val1, val2;
  index_0 = depth * nbits / 8 | 0;
  shift_0 = depth * nbits % 8;
  lowBits = $wnd.Math.min(nbits, 8 - shift_0);
  hiBits = nbits - lowBits;
  val1 = index_0 < hash.length?hash[index_0]:0;
  val2 = index_0 + 1 < hash.length?hash[index_0 + 1]:0;
  return val1 >> shift_0 & (1 << lowBits) - 1 | (val2 & (1 << hiBits) - 1) << lowBits;
}

defineClass(78, 1, {7:1, 78:1}, Champ);
_.serialize = function serialize_47(){
  return $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborByteArray($toByteArray_1(this.dataMap)), new CborObject$CborByteArray($toByteArray_1(this.nodeMap)), new CborObject$CborList(castTo($collect_0($flatMap_0(stream_5(this.contents), makeLambdaFunction(Champ$lambda$65$Type.prototype.apply_0, Champ$lambda$65$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17))]))));
}
;
_.equals_0 = function equals_58(o){
  var champ;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_hamt_Champ_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  champ = castTo(o, 78);
  return $equals_5(this.dataMap, champ.dataMap) && $equals_5(this.nodeMap, champ.nodeMap) && equals_18(this.contents, champ.contents);
}
;
_.hashCode_1 = function hashCode_56(){
  var result;
  result = hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.dataMap, this.nodeMap]));
  result = 31 * result + hashCode_19(this.contents);
  return result;
}
;
_.toCbor = function toCbor_39(){
  return $toCbor_21(this);
}
;
var Lpeergos_shared_hamt_Champ_2_classLit = createForClass('peergos.shared.hamt', 'Champ', 78);
function Champ$HashPrefixPayload(link_0){
  Champ$HashPrefixPayload_1.call(this, null, link_0);
}

function Champ$HashPrefixPayload_0(mappings){
  Champ$HashPrefixPayload_1.call(this, mappings, null);
}

function Champ$HashPrefixPayload_1(mappings, link_0){
  this.mappings = mappings;
  this.link_0 = link_0;
  if (mappings == null ^ !!link_0)
    throw toJs(new IllegalStateException_0('Payload can either be mappings or a link, not both!'));
}

defineClass(98, 1, {98:1}, Champ$HashPrefixPayload, Champ$HashPrefixPayload_0);
_.equals_0 = function equals_59(o){
  var that;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_hamt_Champ$HashPrefixPayload_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 98);
  return equals_18(this.mappings, that.mappings) && equals_28(this.link_0, that.link_0);
}
;
_.hashCode_1 = function hashCode_57(){
  var result;
  result = hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.link_0]));
  result = 31 * result + hashCode_19(this.mappings);
  return result;
}
;
var Lpeergos_shared_hamt_Champ$HashPrefixPayload_2_classLit = createForClass('peergos.shared.hamt', 'Champ/HashPrefixPayload', 98);
function Champ$KeyElement(key, valueHash){
  this.key = key;
  this.valueHash = valueHash;
}

defineClass(119, 1, {119:1}, Champ$KeyElement);
_.equals_0 = function equals_60(o){
  var that;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_hamt_Champ$KeyElement_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 119);
  return $equals_25(this.key, that.key) && $equals_6(this.valueHash, that.valueHash);
}
;
_.hashCode_1 = function hashCode_58(){
  return hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.key, this.valueHash]));
}
;
var Lpeergos_shared_hamt_Champ$KeyElement_2_classLit = createForClass('peergos.shared.hamt', 'Champ/KeyElement', 119);
function Champ$lambda$0$Type($$outer_0, childHash_1){
  this.$$outer_0 = $$outer_0;
  this.childHash_1 = childHash_1;
}

defineClass(3447, $wnd.Function, $intern_22, Champ$lambda$0$Type);
_.apply_0 = function apply_270(arg0){
  return $lambda$0_9(this.$$outer_0, this.childHash_1, arg0);
}
;
function Champ$lambda$1$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3463, $wnd.Function, $intern_22, Champ$lambda$1$Type);
_.apply_0 = function apply_271(arg0){
  return $lambda$1_3(this.$$outer_0, arg0);
}
;
function Champ$lambda$10$Type(owner_0, key_1, hash_2, depth_3, bitWidth_4, storage_5){
  this.owner_0 = owner_0;
  this.key_1 = key_1;
  this.hash_2 = hash_2;
  this.depth_3 = depth_3;
  this.bitWidth_4 = bitWidth_4;
  this.storage_5 = storage_5;
}

defineClass(3448, $wnd.Function, $intern_22, Champ$lambda$10$Type);
_.apply_0 = function apply_272(arg0){
  return lambda$10_2(this.owner_0, this.key_1, this.hash_2, this.depth_3, this.bitWidth_4, this.storage_5, arg0);
}
;
_.bitWidth_4 = 0;
_.depth_3 = 0;
function Champ$lambda$11$Type(owner_0, key_1, hash_2, depth_3, bitWidth_4, storage_5){
  this.owner_0 = owner_0;
  this.key_1 = key_1;
  this.hash_2 = hash_2;
  this.depth_3 = depth_3;
  this.bitWidth_4 = bitWidth_4;
  this.storage_5 = storage_5;
}

defineClass(3464, $wnd.Function, $intern_22, Champ$lambda$11$Type);
_.apply_0 = function apply_273(arg0){
  return lambda$11_2(this.owner_0, this.key_1, this.hash_2, this.depth_3, this.bitWidth_4, this.storage_5, arg0);
}
;
_.bitWidth_4 = 0;
_.depth_3 = 0;
function Champ$lambda$12$Type(champ_0){
  this.champ_0 = champ_0;
}

defineClass(3449, $wnd.Function, $intern_22, Champ$lambda$12$Type);
_.apply_0 = function apply_274(arg0){
  return new Pair(this.champ_0, castTo(arg0, 44));
}
;
function Champ$lambda$13$Type(champ_0){
  this.champ_0 = champ_0;
}

defineClass(3450, $wnd.Function, $intern_22, Champ$lambda$13$Type);
_.apply_0 = function apply_275(arg0){
  return new Pair(this.champ_0, castTo(arg0, 44));
}
;
function Champ$lambda$14$Type($$outer_0, bitpos_1, storage_2, owner_3, writer_4, writeHasher_5, tid_6){
  this.$$outer_0 = $$outer_0;
  this.bitpos_1 = bitpos_1;
  this.storage_2 = storage_2;
  this.owner_3 = owner_3;
  this.writer_4 = writer_4;
  this.writeHasher_5 = writeHasher_5;
  this.tid_6 = tid_6;
}

defineClass(3451, $wnd.Function, $intern_22, Champ$lambda$14$Type);
_.apply_0 = function apply_276(arg0){
  return $lambda$14_0(this.$$outer_0, this.bitpos_1, this.storage_2, this.owner_3, this.writer_4, this.writeHasher_5, this.tid_6, arg0);
}
;
_.bitpos_1 = 0;
function Champ$lambda$15$Type(champ_0){
  this.champ_0 = champ_0;
}

defineClass(3465, $wnd.Function, $intern_22, Champ$lambda$15$Type);
_.apply_0 = function apply_277(arg0){
  return new Pair(this.champ_0, castTo(arg0, 44));
}
;
function Champ$lambda$16$Type($$outer_0, ourHash_1, bitpos_2, storage_3, owner_4, writer_5, writeHasher_6, tid_7, key_8, hash_9, depth_10, expected_11, value_12, bitWidth_13, maxCollisions_14, hasher_15){
  this.$$outer_0 = $$outer_0;
  this.ourHash_1 = ourHash_1;
  this.bitpos_2 = bitpos_2;
  this.storage_3 = storage_3;
  this.owner_4 = owner_4;
  this.writer_5 = writer_5;
  this.writeHasher_6 = writeHasher_6;
  this.tid_7 = tid_7;
  this.key_8 = key_8;
  this.hash_9 = hash_9;
  this.depth_10 = depth_10;
  this.expected_11 = expected_11;
  this.value_12 = value_12;
  this.bitWidth_13 = bitWidth_13;
  this.maxCollisions_14 = maxCollisions_14;
  this.hasher_15 = hasher_15;
}

defineClass(3452, $wnd.Function, $intern_22, Champ$lambda$16$Type);
_.apply_0 = function apply_278(arg0){
  return $lambda$16_2(this.$$outer_0, this.ourHash_1, this.bitpos_2, this.storage_3, this.owner_4, this.writer_5, this.writeHasher_6, this.tid_7, this.key_8, this.hash_9, this.depth_10, this.expected_11, this.value_12, this.bitWidth_13, this.maxCollisions_14, this.hasher_15, arg0);
}
;
_.bitWidth_13 = 0;
_.bitpos_2 = 0;
_.depth_10 = 0;
_.maxCollisions_14 = 0;
function Champ$lambda$17$Type($$outer_0, child_1, ourHash_2, bitpos_3, storage_4, owner_5, writer_6, writeHasher_7, tid_8){
  this.$$outer_0 = $$outer_0;
  this.child_1 = child_1;
  this.ourHash_2 = ourHash_2;
  this.bitpos_3 = bitpos_3;
  this.storage_4 = storage_4;
  this.owner_5 = owner_5;
  this.writer_6 = writer_6;
  this.writeHasher_7 = writeHasher_7;
  this.tid_8 = tid_8;
}

defineClass(3466, $wnd.Function, $intern_22, Champ$lambda$17$Type);
_.apply_0 = function apply_279(arg0){
  return $lambda$17_1(this.$$outer_0, this.child_1, this.ourHash_2, this.bitpos_3, this.storage_4, this.owner_5, this.writer_6, this.writeHasher_7, this.tid_8, arg0);
}
;
_.bitpos_3 = 0;
function Champ$lambda$18$Type(champ_0){
  this.champ_0 = champ_0;
}

defineClass(3467, $wnd.Function, $intern_22, Champ$lambda$18$Type);
_.apply_0 = function apply_280(arg0){
  return new Pair(this.champ_0, castTo(arg0, 44));
}
;
function Champ$lambda$19$Type(champ_0){
  this.champ_0 = champ_0;
}

defineClass(3453, $wnd.Function, $intern_22, Champ$lambda$19$Type);
_.apply_0 = function apply_281(arg0){
  return new Pair(this.champ_0, castTo(arg0, 44));
}
;
function Champ$lambda$20$Type(empty_0){
  this.empty_0 = empty_0;
}

defineClass(3454, $wnd.Function, $intern_22, Champ$lambda$20$Type);
_.apply_0 = function apply_282(arg0){
  return new Pair(this.empty_0, castTo(arg0, 44));
}
;
function Champ$lambda$21$Type(owner_0, writer_1, key1_2, hash1_3, depth_4, val1_5, bitWidth_6, maxCollisions_7, hasher_8, tid_9, storage_10, writeHasher_11){
  this.owner_0 = owner_0;
  this.writer_1 = writer_1;
  this.key1_2 = key1_2;
  this.hash1_3 = hash1_3;
  this.depth_4 = depth_4;
  this.val1_5 = val1_5;
  this.bitWidth_6 = bitWidth_6;
  this.maxCollisions_7 = maxCollisions_7;
  this.hasher_8 = hasher_8;
  this.tid_9 = tid_9;
  this.storage_10 = storage_10;
  this.writeHasher_11 = writeHasher_11;
}

defineClass(3455, $wnd.Function, $intern_22, Champ$lambda$21$Type);
_.apply_0 = function apply_283(arg0){
  return lambda$21(this.owner_0, this.writer_1, this.key1_2, this.hash1_3, this.depth_4, this.val1_5, this.bitWidth_6, this.maxCollisions_7, this.hasher_8, this.tid_9, this.storage_10, this.writeHasher_11, arg0);
}
;
_.bitWidth_6 = 0;
_.depth_4 = 0;
_.maxCollisions_7 = 0;
function Champ$lambda$22$Type(owner_0, writer_1, depth_2, bitWidth_3, maxCollisions_4, hasher_5, tid_6, storage_7, writeHasher_8, mappings_9){
  this.owner_0 = owner_0;
  this.writer_1 = writer_1;
  this.depth_2 = depth_2;
  this.bitWidth_3 = bitWidth_3;
  this.maxCollisions_4 = maxCollisions_4;
  this.hasher_5 = hasher_5;
  this.tid_6 = tid_6;
  this.storage_7 = storage_7;
  this.writeHasher_8 = writeHasher_8;
  this.mappings_9 = mappings_9;
}

defineClass(3456, $wnd.Function, $intern_22, Champ$lambda$22$Type);
_.apply_0 = function apply_284(arg0){
  return lambda$22(this.owner_0, this.writer_1, this.depth_2, this.bitWidth_3, this.maxCollisions_4, this.hasher_5, this.tid_6, this.storage_7, this.writeHasher_8, this.mappings_9, arg0);
}
;
_.bitWidth_3 = 0;
_.depth_2 = 0;
_.maxCollisions_4 = 0;
function Champ$lambda$23$Type(owner_0, writer_1, depth_2, bitWidth_3, maxCollisions_4, hasher_5, tid_6, storage_7, writeHasher_8){
  this.owner_0 = owner_0;
  this.writer_1 = writer_1;
  this.depth_2 = depth_2;
  this.bitWidth_3 = bitWidth_3;
  this.maxCollisions_4 = maxCollisions_4;
  this.hasher_5 = hasher_5;
  this.tid_6 = tid_6;
  this.storage_7 = storage_7;
  this.writeHasher_8 = writeHasher_8;
}

defineClass(1104, 1, $intern_34, Champ$lambda$23$Type);
_.apply_1 = function apply_285(arg0, arg1){
  return lambda$23_0(this.owner_0, this.writer_1, this.depth_2, this.bitWidth_3, this.maxCollisions_4, this.hasher_5, this.tid_6, this.storage_7, this.writeHasher_8, arg0, arg1);
}
;
_.bitWidth_3 = 0;
_.depth_2 = 0;
_.maxCollisions_4 = 0;
var Lpeergos_shared_hamt_Champ$lambda$23$Type_2_classLit = createForClass('peergos.shared.hamt', 'Champ/lambda$23$Type', 1104);
function Champ$lambda$24$Type(){
}

defineClass(1105, 1, $intern_34, Champ$lambda$24$Type);
_.apply_1 = function apply_286(arg0, arg1){
  return castTo(arg0, 20);
}
;
var Lpeergos_shared_hamt_Champ$lambda$24$Type_2_classLit = createForClass('peergos.shared.hamt', 'Champ/lambda$24$Type', 1105);
function Champ$lambda$25$Type(p_0, owner_1, writer_2, e_3, depth_4, bitWidth_5, maxCollisions_6, hasher_7, tid_8, storage_9, writeHasher_10){
  this.p_0 = p_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.e_3 = e_3;
  this.depth_4 = depth_4;
  this.bitWidth_5 = bitWidth_5;
  this.maxCollisions_6 = maxCollisions_6;
  this.hasher_7 = hasher_7;
  this.tid_8 = tid_8;
  this.storage_9 = storage_9;
  this.writeHasher_10 = writeHasher_10;
}

defineClass(3468, $wnd.Function, $intern_22, Champ$lambda$25$Type);
_.apply_0 = function apply_287(arg0){
  return lambda$25_0(this.p_0, this.owner_1, this.writer_2, this.e_3, this.depth_4, this.bitWidth_5, this.maxCollisions_6, this.hasher_7, this.tid_8, this.storage_9, this.writeHasher_10, arg0);
}
;
_.bitWidth_5 = 0;
_.depth_4 = 0;
_.maxCollisions_6 = 0;
function Champ$lambda$26$Type(){
}

defineClass(3457, $wnd.Function, $intern_22, Champ$lambda$26$Type);
_.apply_0 = function apply_288(arg0){
  return castTo(arg0, 119).key;
}
;
function Champ$lambda$27$Type(){
}

defineClass(3458, $wnd.Function, $intern_22, Champ$lambda$27$Type);
_.apply_0 = function apply_289(arg0){
  return castTo(arg0, 119).key;
}
;
function Champ$lambda$28$Type(champ_0){
  this.champ_0 = champ_0;
}

defineClass(3459, $wnd.Function, $intern_22, Champ$lambda$28$Type);
_.apply_0 = function apply_290(arg0){
  return new Pair(this.champ_0, castTo(arg0, 44));
}
;
function Champ$lambda$29$Type(champ_0){
  this.champ_0 = champ_0;
}

defineClass(3460, $wnd.Function, $intern_22, Champ$lambda$29$Type);
_.apply_0 = function apply_291(arg0){
  return new Pair(this.champ_0, castTo(arg0, 44));
}
;
function Champ$lambda$30$Type($$outer_0, ourHash_1, maxCollisions_2, bitpos_3, storage_4, owner_5, writer_6, writeHasher_7, tid_8, key_9, hash_10, depth_11, expected_12, bitWidth_13){
  this.$$outer_0 = $$outer_0;
  this.ourHash_1 = ourHash_1;
  this.maxCollisions_2 = maxCollisions_2;
  this.bitpos_3 = bitpos_3;
  this.storage_4 = storage_4;
  this.owner_5 = owner_5;
  this.writer_6 = writer_6;
  this.writeHasher_7 = writeHasher_7;
  this.tid_8 = tid_8;
  this.key_9 = key_9;
  this.hash_10 = hash_10;
  this.depth_11 = depth_11;
  this.expected_12 = expected_12;
  this.bitWidth_13 = bitWidth_13;
}

defineClass(3461, $wnd.Function, $intern_22, Champ$lambda$30$Type);
_.apply_0 = function apply_292(arg0){
  return $lambda$30(this.$$outer_0, this.ourHash_1, this.maxCollisions_2, this.bitpos_3, this.storage_4, this.owner_5, this.writer_6, this.writeHasher_7, this.tid_8, this.key_9, this.hash_10, this.depth_11, this.expected_12, this.bitWidth_13, arg0);
}
;
_.bitWidth_13 = 0;
_.bitpos_3 = 0;
_.depth_11 = 0;
_.maxCollisions_2 = 0;
function Champ$lambda$31$Type($$outer_0, child_1, ourHash_2, maxCollisions_3, bitpos_4, storage_5, owner_6, writer_7, writeHasher_8, tid_9){
  this.$$outer_0 = $$outer_0;
  this.child_1 = child_1;
  this.ourHash_2 = ourHash_2;
  this.maxCollisions_3 = maxCollisions_3;
  this.bitpos_4 = bitpos_4;
  this.storage_5 = storage_5;
  this.owner_6 = owner_6;
  this.writer_7 = writer_7;
  this.writeHasher_8 = writeHasher_8;
  this.tid_9 = tid_9;
}

defineClass(3469, $wnd.Function, $intern_22, Champ$lambda$31$Type);
_.apply_0 = function apply_293(arg0){
  return $lambda$31(this.$$outer_0, this.child_1, this.ourHash_2, this.maxCollisions_3, this.bitpos_4, this.storage_5, this.owner_6, this.writer_7, this.writeHasher_8, this.tid_9, arg0);
}
;
_.bitpos_4 = 0;
_.maxCollisions_3 = 0;
function Champ$lambda$32$Type(champ_0){
  this.champ_0 = champ_0;
}

defineClass(3470, $wnd.Function, $intern_22, Champ$lambda$32$Type);
_.apply_0 = function apply_294(arg0){
  return new Pair(this.champ_0, castTo(arg0, 44));
}
;
function Champ$lambda$33$Type(champ_0){
  this.champ_0 = champ_0;
}

defineClass(3471, $wnd.Function, $intern_22, Champ$lambda$33$Type);
_.apply_0 = function apply_295(arg0){
  return new Pair(this.champ_0, castTo(arg0, 44));
}
;
function Champ$lambda$34$Type(){
}

defineClass(3462, $wnd.Function, $intern_22, Champ$lambda$34$Type);
_.apply_0 = function apply_296(arg0){
  return castTo(arg0, 119).key;
}
;
function Champ$lambda$35$Type($$outer_0, owner_1, consumer_2, storage_3){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.consumer_2 = consumer_2;
  this.storage_3 = storage_3;
}

defineClass(526, 1, $intern_34, Champ$lambda$35$Type);
_.apply_1 = function apply_297(arg0, arg1){
  return $lambda$35(this.$$outer_0, this.owner_1, this.consumer_2, this.storage_3, arg0, arg1);
}
;
var Lpeergos_shared_hamt_Champ$lambda$35$Type_2_classLit = createForClass('peergos.shared.hamt', 'Champ/lambda$35$Type', 526);
function Champ$lambda$36$Type(){
}

defineClass(527, 1, $intern_34, Champ$lambda$36$Type);
_.apply_1 = function apply_298(arg0, arg1){
  return arg0;
}
;
var Lpeergos_shared_hamt_Champ$lambda$36$Type_2_classLit = createForClass('peergos.shared.hamt', 'Champ/lambda$36$Type', 527);
function Champ$lambda$37$Type(consumer_0){
  this.consumer_0 = consumer_0;
}

defineClass(1106, 1, $intern_34, Champ$lambda$37$Type);
_.apply_1 = function apply_299(arg0, arg1){
  return lambda$37_0(this.consumer_0, arg0, arg1);
}
;
var Lpeergos_shared_hamt_Champ$lambda$37$Type_2_classLit = createForClass('peergos.shared.hamt', 'Champ/lambda$37$Type', 1106);
function Champ$lambda$38$Type(){
}

defineClass(1107, 1, $intern_34, Champ$lambda$38$Type);
_.apply_1 = function apply_300(arg0, arg1){
  return arg0;
}
;
var Lpeergos_shared_hamt_Champ$lambda$38$Type_2_classLit = createForClass('peergos.shared.hamt', 'Champ/lambda$38$Type', 1107);
function Champ$lambda$39$Type($$outer_0, payload_1, owner_2, consumer_3, storage_4){
  this.$$outer_0 = $$outer_0;
  this.payload_1 = payload_1;
  this.owner_2 = owner_2;
  this.consumer_3 = consumer_3;
  this.storage_4 = storage_4;
}

defineClass(3472, $wnd.Function, $intern_22, Champ$lambda$39$Type);
_.apply_0 = function apply_301(arg0){
  return $lambda$39(this.$$outer_0, this.payload_1, this.owner_2, this.consumer_3, this.storage_4, arg0);
}
;
function Champ$lambda$40$Type($$outer_0, payload_1){
  this.$$outer_0 = $$outer_0;
  this.payload_1 = payload_1;
}

defineClass(3473, $wnd.Function, $intern_22, Champ$lambda$40$Type);
_.apply_0 = function apply_302(arg0){
  return $lambda$40(this.$$outer_0, this.payload_1, arg0);
}
;
function Champ$lambda$41$Type(payload_0){
  this.payload_0 = payload_0;
}

defineClass(1108, 1, {}, Champ$lambda$41$Type);
_.get_0 = function get_34(){
  return new IllegalStateException_0('Hash not present! ' + this.payload_0.link_0);
}
;
var Lpeergos_shared_hamt_Champ$lambda$41$Type_2_classLit = createForClass('peergos.shared.hamt', 'Champ/lambda$41$Type', 1108);
function Champ$lambda$42$Type(owner_0, newRes_1, consumer_2, storage_3){
  this.owner_0 = owner_0;
  this.newRes_1 = newRes_1;
  this.consumer_2 = consumer_2;
  this.storage_3 = storage_3;
}

defineClass(3474, $wnd.Function, $intern_22, Champ$lambda$42$Type);
_.apply_0 = function apply_303(arg0){
  return lambda$42(this.owner_0, this.newRes_1, this.consumer_2, this.storage_3, arg0);
}
;
function Champ$lambda$65$Type(){
}

defineClass(174, $wnd.Function, $intern_22, Champ$lambda$65$Type);
_.apply_0 = function apply_304(arg0){
  return castTo(arg0, 98).link_0?new StreamImpl(null, new Spliterators$IteratorSpliterator(singleton(new CborObject$CborMerkleLink($get_9(castTo(arg0, 98).link_0))), 1)):new StreamImpl(null, new Spliterators$IteratorSpliterator(singleton(new CborObject$CborList(castTo($collect_0($flatMap_0(stream_5(castTo(arg0, 98).mappings), makeLambdaFunction(Champ$lambda$66$Type.prototype.apply_0, Champ$lambda$66$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17))), 1));
}
;
function Champ$lambda$66$Type(){
}

defineClass(3475, $wnd.Function, $intern_22, Champ$lambda$66$Type);
_.apply_0 = function apply_305(arg0){
  return of_5(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborByteArray(castTo(arg0, 119).key.data_0), castTo(arg0, 119).valueHash.ref != null?castTo($get_6(castTo(arg0, 119).valueHash), 7).toCbor():new CborObject$CborNull]));
}
;
function $get_16(this$static, rawKey){
  var key;
  key = new ByteArrayWrapper(rawKey);
  return $thenCompose(castTo(this$static.keyHasher.call(null, key), 6), makeLambdaFunction(ChampWrapper$lambda$3$Type.prototype.apply_0, ChampWrapper$lambda$3$Type, [this$static, key]));
}

function $lambda$3_2(this$static, key_1, keyHash_1){
  return $get_15(castTo(this$static.root.left, 78), this$static.owner, key_1, keyHash_1, 0, 3, this$static.storage);
}

function $lambda$4_3(this$static, owner_1, writer_2, key_3, existing_4, value_5, tid_6, keyHash_6){
  return $put_12(castTo(this$static.root.left, 78), owner_1, writer_2, key_3, keyHash_6, 0, existing_4, ($clinit_Optional() , new Optional(checkCriticalNotNull(value_5))), 3, 4, this$static.keyHasher, tid_6, this$static.storage, this$static.writeHasher, castTo(this$static.root.right, 58));
}

function $lambda$5_2(this$static, newRoot_1){
  return this$static.root = newRoot_1 , new CompletableFuture_0(castTo(newRoot_1.right, 58));
}

function $lambda$6_0(this$static, owner_1, writer_2, key_3, existing_4, tid_5, keyHash_5){
  return $remove_12(castTo(this$static.root.left, 78), owner_1, writer_2, key_3, keyHash_5, 0, existing_4, 3, 4, tid_5, this$static.storage, this$static.writeHasher, castTo(this$static.root.right, 58));
}

function $lambda$7_0(this$static, newRoot_1){
  return this$static.root = newRoot_1 , new CompletableFuture_0(castTo(newRoot_1.right, 58));
}

function $put_13(this$static, owner, writer, rawKey, existing, value_0, tid){
  var key;
  key = new ByteArrayWrapper(rawKey);
  return $thenCompose($thenCompose(castTo(this$static.keyHasher.call(null, key), 6), makeLambdaFunction(ChampWrapper$lambda$4$Type.prototype.apply_0, ChampWrapper$lambda$4$Type, [this$static, owner, writer, key, existing, value_0, tid])), makeLambdaFunction(ChampWrapper$lambda$5$Type.prototype.apply_0, ChampWrapper$lambda$5$Type, [this$static]));
}

function $reduceAllMappings_0(this$static, owner, identity, mapper){
  return $reduceAllMappings(castTo(this$static.root.left, 78), owner, identity, mapper, this$static.storage);
}

function $remove_13(this$static, owner, writer, rawKey, existing, tid){
  var key;
  key = new ByteArrayWrapper(rawKey);
  return $thenCompose($thenCompose(castTo(this$static.keyHasher.call(null, key), 6), makeLambdaFunction(ChampWrapper$lambda$6$Type.prototype.apply_0, ChampWrapper$lambda$6$Type, [this$static, owner, writer, key, existing, tid])), makeLambdaFunction(ChampWrapper$lambda$7$Type.prototype.apply_0, ChampWrapper$lambda$7$Type, [this$static]));
}

function ChampWrapper(root, rootHash, owner, keyHasher, storage, writeHasher){
  this.storage = storage;
  this.writeHasher = writeHasher;
  this.owner = owner;
  this.keyHasher = keyHasher;
  this.root = new Pair(root, rootHash);
  this.bitWidth = 3;
}

function create_3(owner, writer, hasher, tid, dht, writeHasher, fromCbor){
  var newRoot, raw;
  newRoot = new Champ(new BitSet, new BitSet, initUnidimensionalArray(Lpeergos_shared_hamt_Champ$HashPrefixPayload_2_classLit, $intern_68, 98, 0, 0, 1), fromCbor);
  raw = $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborByteArray($toByteArray_1(newRoot.dataMap)), new CborObject$CborByteArray($toByteArray_1(newRoot.nodeMap)), new CborObject$CborList(castTo($collect_0($flatMap_0(stream_5(newRoot.contents), makeLambdaFunction(Champ$lambda$65$Type.prototype.apply_0, Champ$lambda$65$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17))]))));
  return $thenApply($thenCompose(writeHasher.scriptJS.sha256(raw), makeLambdaFunction(ChampWrapper$lambda$1$Type.prototype.apply_0, ChampWrapper$lambda$1$Type, [dht, owner, writer, raw, tid])), makeLambdaFunction(ChampWrapper$lambda$2$Type.prototype.apply_0, ChampWrapper$lambda$2$Type, [newRoot, owner, hasher, dht, writeHasher]));
}

function create_4(owner, rootHash, hasher, dht, writeHasher, fromCbor){
  return $thenApply(dht.get_1(owner, rootHash, ($clinit_Optional() , $clinit_Optional() , EMPTY)), makeLambdaFunction(ChampWrapper$lambda$0$Type.prototype.apply_0, ChampWrapper$lambda$0$Type, [rootHash, fromCbor, owner, hasher, dht, writeHasher]));
}

function lambda$0_5(rootHash_0, fromCbor_1, owner_2, hasher_3, dht_4, writeHasher_5, rawOpt_6){
  if (rawOpt_6.ref == null)
    throw toJs(new IllegalStateException_0('Champ root not present: ' + rootHash_0));
  return new ChampWrapper(fromCbor_31((checkCriticalElement(rawOpt_6.ref != null) , castTo(rawOpt_6.ref, 7)), fromCbor_1), rootHash_0, owner_2, hasher_3, dht_4, writeHasher_5);
}

function lambda$1_2(dht_0, owner_1, writer_2, raw_3, tid_4, hash_5){
  return dht_0.put_2(owner_1, writer_2.publicKeyHash, $signMessage(writer_2.secret, hash_5), raw_3, tid_4);
}

function lambda$2_1(newRoot_0, owner_1, hasher_2, dht_3, writeHasher_4, put_5){
  return new ChampWrapper(newRoot_0, put_5, owner_1, hasher_2, dht_3, writeHasher_4);
}

defineClass(472, 1, {}, ChampWrapper);
_.bitWidth = 0;
var Lpeergos_shared_hamt_ChampWrapper_2_classLit = createForClass('peergos.shared.hamt', 'ChampWrapper', 472);
function ChampWrapper$lambda$0$Type(rootHash_0, fromCbor_1, owner_2, hasher_3, dht_4, writeHasher_5){
  this.rootHash_0 = rootHash_0;
  this.fromCbor_1 = fromCbor_1;
  this.owner_2 = owner_2;
  this.hasher_3 = hasher_3;
  this.dht_4 = dht_4;
  this.writeHasher_5 = writeHasher_5;
}

defineClass(2633, $wnd.Function, $intern_22, ChampWrapper$lambda$0$Type);
_.apply_0 = function apply_306(arg0){
  return lambda$0_5(this.rootHash_0, this.fromCbor_1, this.owner_2, this.hasher_3, this.dht_4, this.writeHasher_5, arg0);
}
;
function ChampWrapper$lambda$1$Type(dht_0, owner_1, writer_2, raw_3, tid_4){
  this.dht_0 = dht_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.raw_3 = raw_3;
  this.tid_4 = tid_4;
}

defineClass(2634, $wnd.Function, $intern_22, ChampWrapper$lambda$1$Type);
_.apply_0 = function apply_307(arg0){
  return lambda$1_2(this.dht_0, this.owner_1, this.writer_2, this.raw_3, this.tid_4, arg0);
}
;
function ChampWrapper$lambda$2$Type(newRoot_0, owner_1, hasher_2, dht_3, writeHasher_4){
  this.newRoot_0 = newRoot_0;
  this.owner_1 = owner_1;
  this.hasher_2 = hasher_2;
  this.dht_3 = dht_3;
  this.writeHasher_4 = writeHasher_4;
}

defineClass(2635, $wnd.Function, $intern_22, ChampWrapper$lambda$2$Type);
_.apply_0 = function apply_308(arg0){
  return lambda$2_1(this.newRoot_0, this.owner_1, this.hasher_2, this.dht_3, this.writeHasher_4, arg0);
}
;
function ChampWrapper$lambda$3$Type($$outer_0, key_1){
  this.$$outer_0 = $$outer_0;
  this.key_1 = key_1;
}

defineClass(443, $wnd.Function, $intern_22, ChampWrapper$lambda$3$Type);
_.apply_0 = function apply_309(arg0){
  return $lambda$3_2(this.$$outer_0, this.key_1, arg0);
}
;
function ChampWrapper$lambda$4$Type($$outer_0, owner_1, writer_2, key_3, existing_4, value_5, tid_6){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.key_3 = key_3;
  this.existing_4 = existing_4;
  this.value_5 = value_5;
  this.tid_6 = tid_6;
}

defineClass(2636, $wnd.Function, $intern_22, ChampWrapper$lambda$4$Type);
_.apply_0 = function apply_310(arg0){
  return $lambda$4_3(this.$$outer_0, this.owner_1, this.writer_2, this.key_3, this.existing_4, this.value_5, this.tid_6, arg0);
}
;
function ChampWrapper$lambda$5$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2637, $wnd.Function, $intern_22, ChampWrapper$lambda$5$Type);
_.apply_0 = function apply_311(arg0){
  return $lambda$5_2(this.$$outer_0, arg0);
}
;
function ChampWrapper$lambda$6$Type($$outer_0, owner_1, writer_2, key_3, existing_4, tid_5){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.key_3 = key_3;
  this.existing_4 = existing_4;
  this.tid_5 = tid_5;
}

defineClass(2638, $wnd.Function, $intern_22, ChampWrapper$lambda$6$Type);
_.apply_0 = function apply_312(arg0){
  return $lambda$6_0(this.$$outer_0, this.owner_1, this.writer_2, this.key_3, this.existing_4, this.tid_5, arg0);
}
;
function ChampWrapper$lambda$7$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2639, $wnd.Function, $intern_22, ChampWrapper$lambda$7$Type);
_.apply_0 = function apply_313(arg0){
  return $lambda$7_0(this.$$outer_0, arg0);
}
;
function $addChild(this$static, child, owner, writer, tid){
  var key;
  if (this$static.children.a_0 != null && castTo($a(this$static.children), 17).size() < 32)
    return new CompletableFuture_0(new DirectoryInode(castTo(concat($filter(castTo($a(this$static.children), 17).stream(), new DirectoryInode$lambda$5$Type(child)), new StreamImpl(null, new Spliterators$IteratorSpliterator(singleton(child), 1))).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17), this$static.writeHasher, this$static.bitWidth, owner, this$static.keyHasher, this$static.storage));
  key = new ByteArrayWrapper($getBytes(child.inode.name_0.name_0, ($clinit_EmulatedCharset() , UTF_8_0)));
  return $thenCompose(castTo(this$static.keyHasher.call(null, key), 6), makeLambdaFunction(DirectoryInode$lambda$6$Type.prototype.apply_0, DirectoryInode$lambda$6$Type, [this$static, owner, writer, key, child, tid]));
}

function $getChild_0(this$static, name_0){
  var key;
  if (this$static.children.a_0 != null)
    return new CompletableFuture_0($findFirst($filter(castTo($a(this$static.children), 17).stream(), new DirectoryInode$lambda$1$Type(name_0))));
  key = new ByteArrayWrapper($getBytes(name_0, ($clinit_EmulatedCharset() , UTF_8_0)));
  return $thenCompose(castTo(this$static.keyHasher.call(null, key), 6), makeLambdaFunction(DirectoryInode$lambda$2$Type.prototype.apply_0, DirectoryInode$lambda$2$Type, [this$static, key]));
}

function $hasMoreThanOneChild(this$static){
  if (this$static.children.a_0 != null)
    return new CompletableFuture_0(($clinit_Boolean() , castTo($a(this$static.children), 17).size() > 1?true:false));
  return new CompletableFuture_0(($clinit_Boolean() , $hasMultipleMappings(castTo($b(this$static.children), 78))?true:false));
}

function $lambda$11_0(this$static, owner_1, writer_2, key_3, child_4, tid_5, keyHash_5){
  return $thenApply($remove_12(castTo($b(this$static.children), 78), owner_1, writer_2, key_3, keyHash_5, 0, ($clinit_Optional() , new Optional(checkCriticalNotNull(child_4))), this$static.bitWidth, 4, tid_5, this$static.storage, this$static.writeHasher, null), makeLambdaFunction(DirectoryInode$lambda$12$Type.prototype.apply_0, DirectoryInode$lambda$12$Type, [this$static, owner_1]));
}

function $lambda$12_1(this$static, owner_1, rootPair_1){
  return new DirectoryInode_0(castTo(rootPair_1.left, 78), this$static.writeHasher, this$static.bitWidth, owner_1, this$static.keyHasher, this$static.storage);
}

function $lambda$2_2(this$static, key_1, keyHash_1){
  return $get_15(castTo($b(this$static.children), 78), this$static.owner, key_1, keyHash_1, 0, this$static.bitWidth, this$static.storage);
}

function $lambda$6_1(this$static, owner_1, writer_2, key_3, child_4, tid_5, keyHash_5){
  return $thenCompose(this$static.children.a_0 != null?$thenApply(buildChamp(castTo($a(this$static.children), 17), owner_1, writer_2, this$static.writeHasher, this$static.bitWidth, this$static.keyHasher, this$static.storage, tid_5), makeLambdaFunction(DirectoryInode$lambda$7$Type.prototype.apply_0, DirectoryInode$lambda$7$Type, [])):new CompletableFuture_0(castTo($b(this$static.children), 78)), makeLambdaFunction(DirectoryInode$lambda$8$Type.prototype.apply_0, DirectoryInode$lambda$8$Type, [this$static, owner_1, writer_2, key_3, keyHash_5, child_4, tid_5]));
}

function $lambda$8_1(this$static, owner_1, writer_2, key_3, keyHash_4, child_5, tid_6, champ_6){
  return $thenApply($put_12(champ_6, owner_1, writer_2, key_3, keyHash_4, 0, ($clinit_Optional() , $clinit_Optional() , EMPTY), new Optional(checkCriticalNotNull(child_5)), this$static.bitWidth, 4, this$static.keyHasher, tid_6, this$static.storage, this$static.writeHasher, null), makeLambdaFunction(DirectoryInode$lambda$9$Type.prototype.apply_0, DirectoryInode$lambda$9$Type, [this$static, owner_1]));
}

function $lambda$9_2(this$static, owner_1, rootPair_1){
  return new DirectoryInode_0(castTo(rootPair_1.left, 78), this$static.writeHasher, this$static.bitWidth, owner_1, this$static.keyHasher, this$static.storage);
}

function $removeChild(this$static, child, owner, writer, tid){
  var key;
  if (this$static.children.a_0 != null)
    return new CompletableFuture_0(new DirectoryInode(castTo($collect_0($filter(castTo($a(this$static.children), 17).stream(), new DirectoryInode$lambda$10$Type(child)), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17), this$static.writeHasher, this$static.bitWidth, owner, this$static.keyHasher, this$static.storage));
  key = new ByteArrayWrapper($getBytes(child.inode.name_0.name_0, ($clinit_EmulatedCharset() , UTF_8_0)));
  return $thenCompose(castTo(this$static.keyHasher.call(null, key), 6), makeLambdaFunction(DirectoryInode$lambda$11$Type.prototype.apply_0, DirectoryInode$lambda$11$Type, [this$static, owner, writer, key, child, tid]));
}

function $toCbor_22(this$static){
  var state, transformed;
  if (this$static.children.a_0 != null) {
    state = new TreeMap;
    $put_6(state, 'c', new CborObject$CborList(castTo($collect_0($map_0(castTo($a(this$static.children), 17).stream(), makeLambdaFunction(DirectoryInode$3methodref$toCbor$Type.prototype.apply_0, DirectoryInode$3methodref$toCbor$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17)));
    return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
  }
  return $toCbor_21(castTo($b(this$static.children), 78));
}

function DirectoryInode(children, writeHasher, bitWidth, owner, keyHasher, storage){
  this.children = new Either(children, null);
  this.writeHasher = writeHasher;
  this.bitWidth = bitWidth;
  this.owner = owner;
  this.keyHasher = keyHasher;
  this.storage = storage;
}

function DirectoryInode_0(children, writeHasher, bitWidth, owner, keyHasher, storage){
  this.children = new Either(null, children);
  this.writeHasher = writeHasher;
  this.bitWidth = bitWidth;
  this.owner = owner;
  this.keyHasher = keyHasher;
  this.storage = storage;
}

function buildChamp(children, owner, writer, writeHasher, bitWidth, keyHasher, storage, tid){
  return $thenApply(reduceAll(children, empty_3(makeLambdaFunction(DirectoryInode$2methodref$fromCbor$Type.prototype.apply_0, DirectoryInode$2methodref$fromCbor$Type, [])), new DirectoryInode$lambda$14$Type(owner, writer, bitWidth, keyHasher, tid, storage, writeHasher), new DirectoryInode$lambda$15$Type), makeLambdaFunction(DirectoryInode$lambda$18$Type.prototype.apply_0, DirectoryInode$lambda$18$Type, [writeHasher, bitWidth, owner, keyHasher, storage]));
}

function empty_5(writeHasher, bitWidth, owner, keyHasher, storage){
  return new DirectoryInode(($clinit_Collections() , $clinit_Collections() , EMPTY_LIST), writeHasher, bitWidth, owner, keyHasher, storage);
}

function fromCbor_32(cbor, writeHasher, owner, keyHasher, storage){
  if (instanceOf(cbor, 18))
    return new DirectoryInode(castTo($collect_0($map_0(castTo(castTo($get_0(castTo(cbor, 18).values_0, new CborObject$CborString('c')), 7), 21).value_0.stream(), makeLambdaFunction(DirectoryInode$4methodref$fromCbor$Type.prototype.apply_0, DirectoryInode$4methodref$fromCbor$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17), writeHasher, 3, owner, keyHasher, storage);
  return new DirectoryInode_0(fromCbor_31(cbor, makeLambdaFunction(DirectoryInode$0methodref$fromCbor$Type.prototype.apply_0, DirectoryInode$0methodref$fromCbor$Type, [])), writeHasher, 3, owner, keyHasher, storage);
}

function lambda$1_3(name_0, i_1){
  return $equals_0(i_1.inode.name_0.name_0, name_0);
}

function lambda$10_3(child_0, c_1){
  return !$equals_16(c_1, child_0);
}

function lambda$14_0(owner_0, writer_1, bitWidth_2, keyHasher_3, tid_4, storage_5, writeHasher_6, c_7, v_8){
  return $thenApply($thenCompose(castTo(keyHasher_3(new ByteArrayWrapper($getBytes(v_8.inode.name_0.name_0, ($clinit_EmulatedCharset() , UTF_8_0)))), 6), makeLambdaFunction(DirectoryInode$lambda$16$Type.prototype.apply_0, DirectoryInode$lambda$16$Type, [c_7, owner_0, writer_1, v_8, bitWidth_2, keyHasher_3, tid_4, storage_5, writeHasher_6])), makeLambdaFunction(DirectoryInode$lambda$17$Type.prototype.apply_0, DirectoryInode$lambda$17$Type, []));
}

function lambda$16_0(c_0, owner_1, writer_2, v_3, bitWidth_4, keyHasher_5, tid_6, storage_7, writeHasher_8, keyHash_9){
  return $put_12(c_0, owner_1, writer_2, new ByteArrayWrapper($getBytes(v_3.inode.name_0.name_0, ($clinit_EmulatedCharset() , UTF_8_0))), keyHash_9, 0, ($clinit_Optional() , $clinit_Optional() , EMPTY), new Optional(checkCriticalNotNull(v_3)), bitWidth_4, 4, keyHasher_5, tid_6, storage_7, writeHasher_8, null);
}

function lambda$18_0(writeHasher_0, bitWidth_1, owner_2, keyHasher_3, storage_4, champ_5){
  return new DirectoryInode_0(champ_5, writeHasher_0, bitWidth_1, owner_2, keyHasher_3, storage_4);
}

function lambda$5_4(child_0, c_1){
  return !$equals_15(c_1.inode, child_0.inode);
}

defineClass(117, 1, {7:1, 117:1}, DirectoryInode, DirectoryInode_0);
_.serialize = function serialize_48(){
  return $toCbor_22(this).toByteArray_0();
}
;
_.equals_0 = function equals_61(o){
  var that;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_inode_DirectoryInode_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 117);
  return $equals_26(this.children, that.children);
}
;
_.hashCode_1 = function hashCode_59(){
  return hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.children]));
}
;
_.toCbor = function toCbor_40(){
  return $toCbor_22(this);
}
;
_.bitWidth = 0;
var Lpeergos_shared_inode_DirectoryInode_2_classLit = createForClass('peergos.shared.inode', 'DirectoryInode', 117);
function DirectoryInode$0methodref$fromCbor$Type(){
}

defineClass(3485, $wnd.Function, $intern_22, DirectoryInode$0methodref$fromCbor$Type);
_.apply_0 = function apply_314(arg0){
  return fromCbor_34(castTo(arg0, 7));
}
;
function DirectoryInode$2methodref$fromCbor$Type(){
}

defineClass(3481, $wnd.Function, $intern_22, DirectoryInode$2methodref$fromCbor$Type);
_.apply_0 = function apply_315(arg0){
  return fromCbor_34(castTo(arg0, 7));
}
;
function DirectoryInode$3methodref$toCbor$Type(){
}

defineClass(3483, $wnd.Function, $intern_22, DirectoryInode$3methodref$toCbor$Type);
_.apply_0 = function apply_316(arg0){
  return $toCbor_24(castTo(arg0, 127));
}
;
function DirectoryInode$4methodref$fromCbor$Type(){
}

defineClass(3484, $wnd.Function, $intern_22, DirectoryInode$4methodref$fromCbor$Type);
_.apply_0 = function apply_317(arg0){
  return fromCbor_34(castTo(arg0, 7));
}
;
function DirectoryInode$lambda$1$Type(name_0){
  this.name_0 = name_0;
}

defineClass(1119, 1, {}, DirectoryInode$lambda$1$Type);
_.test_0 = function test_6(arg0){
  return lambda$1_3(this.name_0, arg0);
}
;
var Lpeergos_shared_inode_DirectoryInode$lambda$1$Type_2_classLit = createForClass('peergos.shared.inode', 'DirectoryInode/lambda$1$Type', 1119);
function DirectoryInode$lambda$10$Type(child_0){
  this.child_0 = child_0;
}

defineClass(1121, 1, {}, DirectoryInode$lambda$10$Type);
_.test_0 = function test_7(arg0){
  return lambda$10_3(this.child_0, arg0);
}
;
var Lpeergos_shared_inode_DirectoryInode$lambda$10$Type_2_classLit = createForClass('peergos.shared.inode', 'DirectoryInode/lambda$10$Type', 1121);
function DirectoryInode$lambda$11$Type($$outer_0, owner_1, writer_2, key_3, child_4, tid_5){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.key_3 = key_3;
  this.child_4 = child_4;
  this.tid_5 = tid_5;
}

defineClass(3480, $wnd.Function, $intern_22, DirectoryInode$lambda$11$Type);
_.apply_0 = function apply_318(arg0){
  return $lambda$11_0(this.$$outer_0, this.owner_1, this.writer_2, this.key_3, this.child_4, this.tid_5, arg0);
}
;
function DirectoryInode$lambda$12$Type($$outer_0, owner_1){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
}

defineClass(3489, $wnd.Function, $intern_22, DirectoryInode$lambda$12$Type);
_.apply_0 = function apply_319(arg0){
  return $lambda$12_1(this.$$outer_0, this.owner_1, arg0);
}
;
function DirectoryInode$lambda$14$Type(owner_0, writer_1, bitWidth_2, keyHasher_3, tid_4, storage_5, writeHasher_6){
  this.owner_0 = owner_0;
  this.writer_1 = writer_1;
  this.bitWidth_2 = bitWidth_2;
  this.keyHasher_3 = keyHasher_3;
  this.tid_4 = tid_4;
  this.storage_5 = storage_5;
  this.writeHasher_6 = writeHasher_6;
}

defineClass(1122, 1, $intern_34, DirectoryInode$lambda$14$Type);
_.apply_1 = function apply_320(arg0, arg1){
  return lambda$14_0(this.owner_0, this.writer_1, this.bitWidth_2, this.keyHasher_3, this.tid_4, this.storage_5, this.writeHasher_6, arg0, arg1);
}
;
_.bitWidth_2 = 0;
var Lpeergos_shared_inode_DirectoryInode$lambda$14$Type_2_classLit = createForClass('peergos.shared.inode', 'DirectoryInode/lambda$14$Type', 1122);
function DirectoryInode$lambda$15$Type(){
}

defineClass(1123, 1, $intern_34, DirectoryInode$lambda$15$Type);
_.apply_1 = function apply_321(arg0, arg1){
  return castTo(arg1, 78);
}
;
var Lpeergos_shared_inode_DirectoryInode$lambda$15$Type_2_classLit = createForClass('peergos.shared.inode', 'DirectoryInode/lambda$15$Type', 1123);
function DirectoryInode$lambda$16$Type(c_0, owner_1, writer_2, v_3, bitWidth_4, keyHasher_5, tid_6, storage_7, writeHasher_8){
  this.c_0 = c_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.v_3 = v_3;
  this.bitWidth_4 = bitWidth_4;
  this.keyHasher_5 = keyHasher_5;
  this.tid_6 = tid_6;
  this.storage_7 = storage_7;
  this.writeHasher_8 = writeHasher_8;
}

defineClass(3490, $wnd.Function, $intern_22, DirectoryInode$lambda$16$Type);
_.apply_0 = function apply_322(arg0){
  return lambda$16_0(this.c_0, this.owner_1, this.writer_2, this.v_3, this.bitWidth_4, this.keyHasher_5, this.tid_6, this.storage_7, this.writeHasher_8, arg0);
}
;
_.bitWidth_4 = 0;
function DirectoryInode$lambda$17$Type(){
}

defineClass(3491, $wnd.Function, $intern_22, DirectoryInode$lambda$17$Type);
_.apply_0 = function apply_323(arg0){
  return castTo(castTo(arg0, 20).left, 78);
}
;
function DirectoryInode$lambda$18$Type(writeHasher_0, bitWidth_1, owner_2, keyHasher_3, storage_4){
  this.writeHasher_0 = writeHasher_0;
  this.bitWidth_1 = bitWidth_1;
  this.owner_2 = owner_2;
  this.keyHasher_3 = keyHasher_3;
  this.storage_4 = storage_4;
}

defineClass(3482, $wnd.Function, $intern_22, DirectoryInode$lambda$18$Type);
_.apply_0 = function apply_324(arg0){
  return lambda$18_0(this.writeHasher_0, this.bitWidth_1, this.owner_2, this.keyHasher_3, this.storage_4, arg0);
}
;
_.bitWidth_1 = 0;
function DirectoryInode$lambda$2$Type($$outer_0, key_1){
  this.$$outer_0 = $$outer_0;
  this.key_1 = key_1;
}

defineClass(3478, $wnd.Function, $intern_22, DirectoryInode$lambda$2$Type);
_.apply_0 = function apply_325(arg0){
  return $lambda$2_2(this.$$outer_0, this.key_1, arg0);
}
;
function DirectoryInode$lambda$5$Type(child_0){
  this.child_0 = child_0;
}

defineClass(1120, 1, {}, DirectoryInode$lambda$5$Type);
_.test_0 = function test_8(arg0){
  return lambda$5_4(this.child_0, arg0);
}
;
var Lpeergos_shared_inode_DirectoryInode$lambda$5$Type_2_classLit = createForClass('peergos.shared.inode', 'DirectoryInode/lambda$5$Type', 1120);
function DirectoryInode$lambda$6$Type($$outer_0, owner_1, writer_2, key_3, child_4, tid_5){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.key_3 = key_3;
  this.child_4 = child_4;
  this.tid_5 = tid_5;
}

defineClass(3479, $wnd.Function, $intern_22, DirectoryInode$lambda$6$Type);
_.apply_0 = function apply_326(arg0){
  return $lambda$6_1(this.$$outer_0, this.owner_1, this.writer_2, this.key_3, this.child_4, this.tid_5, arg0);
}
;
function DirectoryInode$lambda$7$Type(){
}

defineClass(3486, $wnd.Function, $intern_22, DirectoryInode$lambda$7$Type);
_.apply_0 = function apply_327(arg0){
  return castTo($b(castTo(arg0, 117).children), 78);
}
;
function DirectoryInode$lambda$8$Type($$outer_0, owner_1, writer_2, key_3, keyHash_4, child_5, tid_6){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.key_3 = key_3;
  this.keyHash_4 = keyHash_4;
  this.child_5 = child_5;
  this.tid_6 = tid_6;
}

defineClass(3487, $wnd.Function, $intern_22, DirectoryInode$lambda$8$Type);
_.apply_0 = function apply_328(arg0){
  return $lambda$8_1(this.$$outer_0, this.owner_1, this.writer_2, this.key_3, this.keyHash_4, this.child_5, this.tid_6, arg0);
}
;
function DirectoryInode$lambda$9$Type($$outer_0, owner_1){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
}

defineClass(3488, $wnd.Function, $intern_22, DirectoryInode$lambda$9$Type);
_.apply_0 = function apply_329(arg0){
  return $lambda$9_2(this.$$outer_0, this.owner_1, arg0);
}
;
function $compareTo_16(this$static, inode){
  return $compareTo_5(this$static.name_0.name_0, inode.name_0.name_0);
}

function $equals_15(this$static, o){
  var inode1;
  if (maskUndefined(this$static) === maskUndefined(o))
    return true;
  if (o == null || Lpeergos_shared_inode_Inode_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  inode1 = castTo(o, 155);
  return eq(this$static.inode, inode1.inode) && $equals_17(this$static.name_0, inode1.name_0);
}

function $toCbor_23(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'i', new CborObject$CborLong(this$static.inode));
  $put_6(state, 'n', new CborObject$CborString(this$static.name_0.name_0));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function Inode(inode, name_0){
  Inode_0.call(this, inode, new PathElement(name_0));
}

function Inode_0(inode, name_0){
  if (compare_1(inode, 0) < 0)
    throw toJs(new IllegalStateException_0('Inode must be positive!'));
  this.inode = inode;
  this.name_0 = name_0;
}

function fromCbor_33(cbor){
  var inode, m, name_0;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor!'));
  m = castTo(cbor, 18);
  inode = castTo(castTo($get_0(m.values_0, new CborObject$CborString('i')), 7), 29).value_0;
  name_0 = castTo(castTo($get_0(m.values_0, new CborObject$CborString('n')), 7), 13).value_0;
  return new Inode_0(inode, new PathElement(name_0));
}

defineClass(155, 1, {57:1, 7:1, 155:1}, Inode, Inode_0);
_.compareTo_0 = function compareTo_17(inode){
  return $compareTo_16(this, castTo(inode, 155));
}
;
_.serialize = function serialize_49(){
  return $toByteArray_2($toCbor_23(this));
}
;
_.equals_0 = function equals_62(o){
  return $equals_15(this, o);
}
;
_.hashCode_1 = function hashCode_60(){
  return hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [valueOf_2(this.inode), this.name_0]));
}
;
_.toCbor = function toCbor_41(){
  return $toCbor_23(this);
}
;
_.toString_0 = function toString_57(){
  return toString_4(this.inode) + '/' + this.name_0;
}
;
_.inode = 0;
var Lpeergos_shared_inode_Inode_2_classLit = createForClass('peergos.shared.inode', 'Inode', 155);
function $equals_16(this$static, o){
  var inodeCap;
  if (maskUndefined(this$static) === maskUndefined(o))
    return true;
  if (o == null || Lpeergos_shared_inode_InodeCap_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  inodeCap = castTo(o, 127);
  return $equals_15(this$static.inode, inodeCap.inode) && $equals_6(this$static.cap, inodeCap.cap);
}

function $toCbor_24(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'i', $toCbor_23(this$static.inode));
  $map(this$static.cap, makeLambdaFunction(InodeCap$lambda$0$Type.prototype.apply_0, InodeCap$lambda$0$Type, [state]));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function InodeCap(inode, cap){
  this.inode = inode;
  this.cap = cap;
}

function fromCbor_34(cbor){
  var cap, inode, m;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor!'));
  m = castTo(cbor, 18);
  inode = castTo($get_13(m, 'i', makeLambdaFunction(InodeCap$0methodref$fromCbor$Type.prototype.apply_0, InodeCap$0methodref$fromCbor$Type, [])), 155);
  cap = $getOptional(m, 'c', makeLambdaFunction(InodeCap$1methodref$fromCbor$Type.prototype.apply_0, InodeCap$1methodref$fromCbor$Type, []));
  return new InodeCap(inode, cap);
}

defineClass(127, 1, {7:1, 127:1}, InodeCap);
_.serialize = function serialize_50(){
  return $toByteArray_2($toCbor_24(this));
}
;
_.equals_0 = function equals_63(o){
  return $equals_16(this, o);
}
;
_.hashCode_1 = function hashCode_61(){
  return hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.inode, this.cap]));
}
;
_.toCbor = function toCbor_42(){
  return $toCbor_24(this);
}
;
var Lpeergos_shared_inode_InodeCap_2_classLit = createForClass('peergos.shared.inode', 'InodeCap', 127);
function InodeCap$0methodref$fromCbor$Type(){
}

defineClass(3270, $wnd.Function, $intern_22, InodeCap$0methodref$fromCbor$Type);
_.apply_0 = function apply_330(arg0){
  return fromCbor_33(castTo(arg0, 7));
}
;
function InodeCap$1methodref$fromCbor$Type(){
}

defineClass(3271, $wnd.Function, $intern_22, InodeCap$1methodref$fromCbor$Type);
_.apply_0 = function apply_331(arg0){
  return fromCbor_99(castTo(arg0, 7));
}
;
function InodeCap$lambda$0$Type(state_0){
  this.state_0 = state_0;
}

defineClass(3269, $wnd.Function, $intern_22, InodeCap$lambda$0$Type);
_.apply_0 = function apply_332(arg0){
  return castTo($put_6(this.state_0, 'c', $toCbor_91(castTo(arg0, 71))), 7);
}
;
function $addCap(this$static, owner, writer, path, cap, tid){
  var canonPath, elements, rootKey;
  canonPath = canonicalise_0(path);
  elements = $split(canonPath, '/');
  if (elements.length == 1)
    throw toJs(new IllegalStateException_0('You cannot publish your root directory!'));
  rootKey = new Inode(0, '');
  return $thenCompose($getOrMkdir(this$static, owner, writer, ($clinit_Optional() , $clinit_Optional() , EMPTY), rootKey, tid), makeLambdaFunction(InodeFileSystem$lambda$2$Type.prototype.apply_0, InodeFileSystem$lambda$2$Type, [owner, writer, rootKey, elements, cap, tid]));
}

function $addCapRecurse(this$static, owner, writer, dirKey, dir_0, remainingPath, cap, tid){
  if (remainingPath.length == 1) {
    return $thenCompose($getChild_0(dir_0, remainingPath[0]), makeLambdaFunction(InodeFileSystem$lambda$17$Type.prototype.apply_0, InodeFileSystem$lambda$17$Type, [this$static, owner, writer, dirKey, dir_0, tid, remainingPath, cap]));
  }
  return $thenCompose($getChild_0(dir_0, remainingPath[0]), makeLambdaFunction(InodeFileSystem$lambda$21$Type.prototype.apply_0, InodeFileSystem$lambda$21$Type, [this$static, owner, writer, remainingPath, cap, tid, dirKey, dir_0]));
}

function $getByPath(this$static, path){
  var canonPath, elements, start_0;
  canonPath = canonicalise_0(path);
  elements = $split(canonPath, '/');
  start_0 = new InodeCap(new Inode(0, ''), ($clinit_Optional() , $clinit_Optional() , EMPTY));
  return $getByPathRecurse(this$static, start_0, elements);
}

function $getByPathRecurse(this$static, current, elements){
  if (elements.length == 0)
    return new CompletableFuture_0(($clinit_Optional() , new Optional(checkCriticalNotNull(new Pair(current, '')))));
  return $thenCompose($thenCompose($getValue(this$static, current.inode), makeLambdaFunction(InodeFileSystem$lambda$27$Type.prototype.apply_0, InodeFileSystem$lambda$27$Type, [elements])), makeLambdaFunction(InodeFileSystem$lambda$28$Type.prototype.apply_0, InodeFileSystem$lambda$28$Type, [this$static, elements]));
}

function $getOrMkdir(this$static, owner, writer, parent_0, childDirKey, tid){
  var raw;
  return $thenCompose((raw = $toByteArray_2($toCbor_23(childDirKey)) , $get_16(this$static.champ, raw)), makeLambdaFunction(InodeFileSystem$lambda$13$Type.prototype.apply_0, InodeFileSystem$lambda$13$Type, [this$static, owner, writer, parent_0, tid, childDirKey]));
}

function $getValue(this$static, key){
  var raw;
  raw = $toByteArray_2($toCbor_23(key));
  return $get_16(this$static.champ, raw);
}

function $lambda$0_10(this$static, existing_1){
  return new InodeFileSystem(existing_1.ref != null?this$static.inodeCount:add_1(this$static.inodeCount, 1), this$static.champ, this$static.storage);
}

function $lambda$13_1(this$static, owner_1, writer_2, parent_3, tid_4, childDirKey_5, opt_5){
  var empty;
  if (opt_5.ref != null)
    return new CompletableFuture_0(new Pair(this$static, (checkCriticalElement(opt_5.ref != null) , castTo(opt_5.ref, 117))));
  empty = empty_5(this$static.champ.writeHasher, this$static.champ.bitWidth, this$static.champ.owner, this$static.champ.keyHasher, this$static.storage);
  return $thenApply($thenCompose($putValue(this$static, owner_1, writer_2, childDirKey_5, ($clinit_Optional() , $clinit_Optional() , EMPTY), empty, tid_4), makeLambdaFunction(InodeFileSystem$lambda$14$Type.prototype.apply_0, InodeFileSystem$lambda$14$Type, [owner_1, writer_2, parent_3, tid_4, childDirKey_5])), makeLambdaFunction(InodeFileSystem$lambda$16$Type.prototype.apply_0, InodeFileSystem$lambda$16$Type, [empty]));
}

function $lambda$17_2(this$static, owner_1, writer_2, dirKey_3, dir_4, tid_5, remainingPath_6, cap_7, existing_7){
  var childKey;
  childKey = castTo($orElseGet($map(existing_7, makeLambdaFunction(InodeFileSystem$lambda$18$Type.prototype.apply_0, InodeFileSystem$lambda$18$Type, [])), new InodeFileSystem$lambda$19$Type(this$static, remainingPath_6)), 155);
  return $thenCompose($addChild(dir_4, new InodeCap(childKey, ($clinit_Optional() , new Optional(checkCriticalNotNull(cap_7)))), owner_1, writer_2, tid_5), makeLambdaFunction(InodeFileSystem$lambda$20$Type.prototype.apply_0, InodeFileSystem$lambda$20$Type, [this$static, owner_1, writer_2, dirKey_3, dir_4, tid_5]));
}

function $lambda$19_0(this$static, remainingPath_1){
  return new Inode(this$static.inodeCount, remainingPath_1[0]);
}

function $lambda$20_1(this$static, owner_1, writer_2, dirKey_3, dir_4, tid_5, updatedDir_5){
  return $putValue(this$static, owner_1, writer_2, dirKey_3, ($clinit_Optional() , new Optional(checkCriticalNotNull(dir_4))), updatedDir_5, tid_5);
}

function $lambda$21_0(this$static, owner_1, writer_2, remainingPath_3, cap_4, tid_5, dirKey_6, dir_7, childCapOpt_7){
  var newDir;
  if (childCapOpt_7.ref != null)
    return $thenCompose($getValue(this$static, (checkCriticalElement(childCapOpt_7.ref != null) , castTo(childCapOpt_7.ref, 127)).inode), makeLambdaFunction(InodeFileSystem$lambda$22$Type.prototype.apply_0, InodeFileSystem$lambda$22$Type, [this$static, owner_1, writer_2, remainingPath_3, cap_4, tid_5, childCapOpt_7]));
  newDir = new Inode(this$static.inodeCount, remainingPath_3[0]);
  return $thenCompose($getOrMkdir(this$static, owner_1, writer_2, ($clinit_Optional() , new Optional(checkCriticalNotNull(new Pair(dirKey_6, dir_7)))), newDir, tid_5), makeLambdaFunction(InodeFileSystem$lambda$24$Type.prototype.apply_0, InodeFileSystem$lambda$24$Type, [owner_1, writer_2, newDir, remainingPath_3, cap_4, tid_5]));
}

function $lambda$22_0(this$static, owner_1, writer_2, remainingPath_3, cap_4, tid_5, childCapOpt_6, childOpt_6){
  var newDir, parent_0, raw;
  if (childOpt_6.ref != null)
    return $addCapRecurse(this$static, owner_1, writer_2, (checkCriticalElement(childCapOpt_6.ref != null) , castTo(childCapOpt_6.ref, 127)).inode, (checkCriticalElement(childOpt_6.ref != null) , castTo(childOpt_6.ref, 117)), castTo(copyOfRange_0(remainingPath_3, $wnd.Math.min(1, remainingPath_3.length), remainingPath_3.length), 30), cap_4, tid_5);
  newDir = new Inode(this$static.inodeCount, remainingPath_3[0]);
  parent_0 = ($clinit_Optional() , $clinit_Optional() , EMPTY);
  return $thenCompose($thenCompose((raw = $toByteArray_2($toCbor_23(newDir)) , $get_16(this$static.champ, raw)), makeLambdaFunction(InodeFileSystem$lambda$13$Type.prototype.apply_0, InodeFileSystem$lambda$13$Type, [this$static, owner_1, writer_2, parent_0, tid_5, newDir])), makeLambdaFunction(InodeFileSystem$lambda$23$Type.prototype.apply_0, InodeFileSystem$lambda$23$Type, [owner_1, writer_2, newDir, remainingPath_3, cap_4, tid_5]));
}

function $lambda$28(this$static, elements_1, capOpt_1){
  var descendantPath, remainder;
  if (capOpt_1.ref == null)
    return new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY));
  remainder = castTo(copyOfRange_0(elements_1, $wnd.Math.min(1, elements_1.length), elements_1.length), 30);
  if ((checkCriticalElement(capOpt_1.ref != null) , castTo(capOpt_1.ref, 127)).cap.ref != null) {
    descendantPath = castToString($collect_0(new StreamImpl(null, spliterator_5(remainder, remainder.length)), of_3(new Collectors$lambda$15$Type('/', ''), new Collectors$9methodref$add$Type, new Collectors$10methodref$merge$Type, makeLambdaFunction(Collectors$11methodref$toString$Type.prototype.apply_0, Collectors$11methodref$toString$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, []))));
    return new CompletableFuture_0(($clinit_Optional() , new Optional(checkCriticalNotNull(new Pair((checkCriticalElement(capOpt_1.ref != null) , castTo(capOpt_1.ref, 127)), descendantPath)))));
  }
  return $getByPathRecurse(this$static, (checkCriticalElement(capOpt_1.ref != null) , castTo(capOpt_1.ref, 127)), remainder);
}

function $lambda$3_3(this$static, owner_1, writer_2, rootKey_3, elements_4, tid_5, dirOpt_5){
  if (dirOpt_5.ref == null)
    return new CompletableFuture_0(this$static);
  return $thenApply($removeCapRecurse(this$static, owner_1, writer_2, rootKey_3, (checkCriticalElement(dirOpt_5.ref != null) , castTo(dirOpt_5.ref, 117)), elements_4, tid_5), makeLambdaFunction(InodeFileSystem$lambda$4$Type.prototype.apply_0, InodeFileSystem$lambda$4$Type, []));
}

function $lambda$5_3(this$static, owner_1, writer_2, dirKey_3, dir_4, tid_5, remainingPath_6, hasOtherChildren_6){
  return $thenCompose($getChild_0(dir_4, remainingPath_6[0]), makeLambdaFunction(InodeFileSystem$lambda$6$Type.prototype.apply_0, InodeFileSystem$lambda$6$Type, [this$static, owner_1, writer_2, dirKey_3, dir_4, tid_5, hasOtherChildren_6, remainingPath_6]));
}

function $lambda$6_2(this$static, owner_1, writer_2, dirKey_3, dir_4, tid_5, hasOtherChildren_6, remainingPath_7, childOpt_7){
  if (childOpt_7.ref == null)
    return new CompletableFuture_0(new Pair(this$static, ($clinit_Boolean() , false)));
  if (remainingPath_7.length == 1)
    return $thenApply($thenCompose($removeChild(dir_4, (checkCriticalElement(childOpt_7.ref != null) , castTo(childOpt_7.ref, 127)), owner_1, writer_2, tid_5), makeLambdaFunction(InodeFileSystem$lambda$7$Type.prototype.apply_0, InodeFileSystem$lambda$7$Type, [this$static, owner_1, writer_2, dirKey_3, dir_4, tid_5])), makeLambdaFunction(InodeFileSystem$lambda$8$Type.prototype.apply_0, InodeFileSystem$lambda$8$Type, [hasOtherChildren_6]));
  return $thenCompose($getValue(this$static, (checkCriticalElement(childOpt_7.ref != null) , castTo(childOpt_7.ref, 127)).inode), makeLambdaFunction(InodeFileSystem$lambda$9$Type.prototype.apply_0, InodeFileSystem$lambda$9$Type, [this$static, owner_1, writer_2, dirKey_3, dir_4, tid_5, hasOtherChildren_6, childOpt_7, remainingPath_7]));
}

function $lambda$7_1(this$static, owner_1, writer_2, dirKey_3, dir_4, tid_5, updatedDir_5){
  return $putValue(this$static, owner_1, writer_2, dirKey_3, ($clinit_Optional() , new Optional(checkCriticalNotNull(dir_4))), updatedDir_5, tid_5);
}

function $lambda$9_3(this$static, owner_1, writer_2, dirKey_3, dir_4, tid_5, hasOtherChildren_6, childOpt_7, remainingPath_8, childDir_8){
  return childDir_8.ref != null?$thenCompose($removeCapRecurse(this$static, owner_1, writer_2, (checkCriticalElement(childOpt_7.ref != null) , castTo(childOpt_7.ref, 127)).inode, (checkCriticalElement(childDir_8.ref != null) , castTo(childDir_8.ref, 117)), castTo(copyOfRange_0(remainingPath_8, $wnd.Math.min(1, remainingPath_8.length), remainingPath_8.length), 30), tid_5), makeLambdaFunction(InodeFileSystem$lambda$10$Type.prototype.apply_0, InodeFileSystem$lambda$10$Type, [owner_1, writer_2, dirKey_3, dir_4, tid_5, hasOtherChildren_6, childOpt_7])):new CompletableFuture_0(new Pair(this$static, ($clinit_Boolean() , (checkCriticalNotNull(hasOtherChildren_6) , hasOtherChildren_6)?false:true)));
}

function $putValue(this$static, owner, writer, key, existing, value_0, tid){
  var raw;
  raw = $toByteArray_2($toCbor_23(key));
  return $thenApply($put_13(this$static.champ, owner, writer, raw, existing, value_0, tid), makeLambdaFunction(InodeFileSystem$lambda$0$Type.prototype.apply_0, InodeFileSystem$lambda$0$Type, [this$static, existing]));
}

function $removeCap(this$static, owner, writer, path, tid){
  var canonPath, elements, raw, rootKey;
  canonPath = canonicalise_0(path);
  elements = $split(canonPath, '/');
  rootKey = new Inode(0, '');
  return $thenCompose((raw = $toByteArray_2($toCbor_23(rootKey)) , $get_16(this$static.champ, raw)), makeLambdaFunction(InodeFileSystem$lambda$3$Type.prototype.apply_0, InodeFileSystem$lambda$3$Type, [this$static, owner, writer, rootKey, elements, tid]));
}

function $removeCapRecurse(this$static, owner, writer, dirKey, dir_0, remainingPath, tid){
  if (remainingPath.length == 0) {
    return new CompletableFuture_0(new Pair(this$static, ($clinit_Boolean() , true)));
  }
  return $thenCompose($hasMoreThanOneChild(dir_0), makeLambdaFunction(InodeFileSystem$lambda$5$Type.prototype.apply_0, InodeFileSystem$lambda$5$Type, [this$static, owner, writer, dirKey, dir_0, tid, remainingPath]));
}

function $toCbor_25(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'c', new CborObject$CborLong(this$static.inodeCount));
  $put_6(state, 'r', new CborObject$CborMerkleLink(castTo(this$static.champ.root.right, 58)));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function InodeFileSystem(inodeCount, champ, storage){
  this.inodeCount = inodeCount;
  this.champ = champ;
  this.storage = storage;
}

function build_8(owner, cbor, hasher, storage){
  var fromCbor, inodeCount, keyHasher, m, root;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor!'));
  m = castTo(cbor, 18);
  inodeCount = castTo(castTo($get_0(m.values_0, new CborObject$CborString('c')), 7), 29).value_0;
  root = castTo(castTo($get_0(m.values_0, new CborObject$CborString('r')), 7), 53).target;
  keyHasher = makeLambdaFunction(InodeFileSystem$lambda$29$Type.prototype.apply_0, InodeFileSystem$lambda$29$Type, [hasher]);
  fromCbor = makeLambdaFunction(InodeFileSystem$lambda$30$Type.prototype.apply_0, InodeFileSystem$lambda$30$Type, [hasher, owner, keyHasher, storage]);
  return $thenApply(create_4(owner, castTo(root, 44), keyHasher, storage, hasher, fromCbor), makeLambdaFunction(InodeFileSystem$lambda$31$Type.prototype.apply_0, InodeFileSystem$lambda$31$Type, [inodeCount, storage]));
}

function createEmpty(owner, writer, storage, hasher, tid){
  var fromCbor, keyHasher;
  keyHasher = makeLambdaFunction(InodeFileSystem$lambda$32$Type.prototype.apply_0, InodeFileSystem$lambda$32$Type, [hasher]);
  fromCbor = makeLambdaFunction(InodeFileSystem$lambda$33$Type.prototype.apply_0, InodeFileSystem$lambda$33$Type, [hasher, owner, keyHasher, storage]);
  return $thenApply(create_3(owner, writer, keyHasher, tid, storage, hasher, fromCbor), makeLambdaFunction(InodeFileSystem$lambda$34$Type.prototype.apply_0, InodeFileSystem$lambda$34$Type, [storage]));
}

function lambda$10_4(owner_0, writer_1, dirKey_2, dir_3, tid_4, hasOtherChildren_5, childOpt_6, p_7){
  return $booleanValue(castToBoolean(p_7.right))?$thenApply($thenCompose($removeChild(dir_3, (checkCriticalElement(childOpt_6.ref != null) , castTo(childOpt_6.ref, 127)), owner_0, writer_1, tid_4), makeLambdaFunction(InodeFileSystem$lambda$11$Type.prototype.apply_0, InodeFileSystem$lambda$11$Type, [p_7, owner_0, writer_1, dirKey_2, dir_3, tid_4])), makeLambdaFunction(InodeFileSystem$lambda$12$Type.prototype.apply_0, InodeFileSystem$lambda$12$Type, [hasOtherChildren_5])):new CompletableFuture_0(new Pair(castTo(p_7.left, 191), ($clinit_Boolean() , (checkCriticalNotNull(hasOtherChildren_5) , hasOtherChildren_5)?false:true)));
}

function lambda$11_3(p_0, owner_1, writer_2, dirKey_3, dir_4, tid_5, updatedDir_6){
  return $putValue(castTo(p_0.left, 191), owner_1, writer_2, dirKey_3, ($clinit_Optional() , new Optional(checkCriticalNotNull(dir_4))), updatedDir_6, tid_5);
}

function lambda$12_2(hasOtherChildren_0, f_1){
  return new Pair(f_1, ($clinit_Boolean() , (checkCriticalNotNull(hasOtherChildren_0) , hasOtherChildren_0)?false:true));
}

function lambda$14_1(owner_0, writer_1, parent_2, tid_3, childDirKey_4, f_5){
  if (parent_2.ref == null)
    return new CompletableFuture_0(f_5);
  return $thenCompose($addChild(castTo((checkCriticalElement(parent_2.ref != null) , castTo(parent_2.ref, 20)).right, 117), new InodeCap(childDirKey_4, ($clinit_Optional() , $clinit_Optional() , EMPTY)), owner_0, writer_1, tid_3), makeLambdaFunction(InodeFileSystem$lambda$15$Type.prototype.apply_0, InodeFileSystem$lambda$15$Type, [f_5, owner_0, writer_1, parent_2, tid_3]));
}

function lambda$15_0(f_0, owner_1, writer_2, parent_3, tid_4, updatedParent_5){
  return $putValue(f_0, owner_1, writer_2, castTo((checkCriticalElement(parent_3.ref != null) , castTo(parent_3.ref, 20)).left, 155), ($clinit_Optional() , new Optional(checkCriticalNotNull(castTo((checkCriticalElement(parent_3.ref != null) , castTo(parent_3.ref, 20)).right, 117)))), updatedParent_5, tid_4);
}

function lambda$16_1(empty_0, f_1){
  return new Pair(f_1, empty_0);
}

function lambda$2_2(owner_0, writer_1, rootKey_2, elements_3, cap_4, tid_5, p_6){
  return $addCapRecurse(castTo(p_6.left, 191), owner_0, writer_1, rootKey_2, castTo(p_6.right, 117), elements_3, cap_4, tid_5);
}

function lambda$23_1(owner_0, writer_1, newDir_2, remainingPath_3, cap_4, tid_5, p_6){
  return $addCapRecurse(castTo(p_6.left, 191), owner_0, writer_1, newDir_2, castTo(p_6.right, 117), castTo(copyOfRange_0(remainingPath_3, $wnd.Math.min(1, remainingPath_3.length), remainingPath_3.length), 30), cap_4, tid_5);
}

function lambda$24(owner_0, writer_1, newDir_2, remainingPath_3, cap_4, tid_5, p_6){
  return $addCapRecurse(castTo(p_6.left, 191), owner_0, writer_1, newDir_2, castTo(p_6.right, 117), castTo(copyOfRange_0(remainingPath_3, $wnd.Math.min(1, remainingPath_3.length), remainingPath_3.length), 30), cap_4, tid_5);
}

function lambda$27_0(elements_0, dir_1){
  return dir_1.ref == null?new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY)):$getChild_0((checkCriticalElement(dir_1.ref != null) , castTo(dir_1.ref, 117)), elements_0[0]);
}

function lambda$30(hasher_0, owner_1, keyHasher_2, storage_3, c_4){
  return fromCbor_32(c_4, hasher_0, owner_1, keyHasher_2, storage_3);
}

function lambda$31_0(inodeCount_0, storage_2, cw_2){
  return new InodeFileSystem(inodeCount_0, cw_2, storage_2);
}

function lambda$33(hasher_0, owner_1, keyHasher_2, storage_3, c_4){
  return fromCbor_32(c_4, hasher_0, owner_1, keyHasher_2, storage_3);
}

function lambda$34(storage_0, cw_1){
  return new InodeFileSystem(0, cw_1, storage_0);
}

function lambda$8_1(hasOtherChildren_0, f_1){
  return new Pair(f_1, ($clinit_Boolean() , (checkCriticalNotNull(hasOtherChildren_0) , hasOtherChildren_0)?false:true));
}

defineClass(191, 1, {7:1, 191:1}, InodeFileSystem);
_.serialize = function serialize_51(){
  return $toByteArray_2($toCbor_25(this));
}
;
_.toCbor = function toCbor_43(){
  return $toCbor_25(this);
}
;
_.inodeCount = 0;
var Lpeergos_shared_inode_InodeFileSystem_2_classLit = createForClass('peergos.shared.inode', 'InodeFileSystem', 191);
function InodeFileSystem$lambda$0$Type($$outer_0, existing_1){
  this.$$outer_0 = $$outer_0;
  this.existing_1 = existing_1;
}

defineClass(2564, $wnd.Function, $intern_22, InodeFileSystem$lambda$0$Type);
_.apply_0 = function apply_333(arg0){
  return $lambda$0_10(this.$$outer_0, this.existing_1);
}
;
function InodeFileSystem$lambda$10$Type(owner_0, writer_1, dirKey_2, dir_3, tid_4, hasOtherChildren_5, childOpt_6){
  this.owner_0 = owner_0;
  this.writer_1 = writer_1;
  this.dirKey_2 = dirKey_2;
  this.dir_3 = dir_3;
  this.tid_4 = tid_4;
  this.hasOtherChildren_5 = hasOtherChildren_5;
  this.childOpt_6 = childOpt_6;
}

defineClass(2583, $wnd.Function, $intern_22, InodeFileSystem$lambda$10$Type);
_.apply_0 = function apply_334(arg0){
  return lambda$10_4(this.owner_0, this.writer_1, this.dirKey_2, this.dir_3, this.tid_4, this.hasOtherChildren_5, this.childOpt_6, arg0);
}
;
function InodeFileSystem$lambda$11$Type(p_0, owner_1, writer_2, dirKey_3, dir_4, tid_5){
  this.p_0 = p_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.dirKey_3 = dirKey_3;
  this.dir_4 = dir_4;
  this.tid_5 = tid_5;
}

defineClass(2584, $wnd.Function, $intern_22, InodeFileSystem$lambda$11$Type);
_.apply_0 = function apply_335(arg0){
  return lambda$11_3(this.p_0, this.owner_1, this.writer_2, this.dirKey_3, this.dir_4, this.tid_5, arg0);
}
;
function InodeFileSystem$lambda$12$Type(hasOtherChildren_0){
  this.hasOtherChildren_0 = hasOtherChildren_0;
}

defineClass(2585, $wnd.Function, $intern_22, InodeFileSystem$lambda$12$Type);
_.apply_0 = function apply_336(arg0){
  return lambda$12_2(this.hasOtherChildren_0, arg0);
}
;
function InodeFileSystem$lambda$13$Type($$outer_0, owner_1, writer_2, parent_3, tid_4, childDirKey_5){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.parent_3 = parent_3;
  this.tid_4 = tid_4;
  this.childDirKey_5 = childDirKey_5;
}

defineClass(1304, $wnd.Function, $intern_22, InodeFileSystem$lambda$13$Type);
_.apply_0 = function apply_337(arg0){
  return $lambda$13_1(this.$$outer_0, this.owner_1, this.writer_2, this.parent_3, this.tid_4, this.childDirKey_5, arg0);
}
;
function InodeFileSystem$lambda$14$Type(owner_0, writer_1, parent_2, tid_3, childDirKey_4){
  this.owner_0 = owner_0;
  this.writer_1 = writer_1;
  this.parent_2 = parent_2;
  this.tid_3 = tid_3;
  this.childDirKey_4 = childDirKey_4;
}

defineClass(2586, $wnd.Function, $intern_22, InodeFileSystem$lambda$14$Type);
_.apply_0 = function apply_338(arg0){
  return lambda$14_1(this.owner_0, this.writer_1, this.parent_2, this.tid_3, this.childDirKey_4, arg0);
}
;
function InodeFileSystem$lambda$15$Type(f_0, owner_1, writer_2, parent_3, tid_4){
  this.f_0 = f_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.parent_3 = parent_3;
  this.tid_4 = tid_4;
}

defineClass(2588, $wnd.Function, $intern_22, InodeFileSystem$lambda$15$Type);
_.apply_0 = function apply_339(arg0){
  return lambda$15_0(this.f_0, this.owner_1, this.writer_2, this.parent_3, this.tid_4, arg0);
}
;
function InodeFileSystem$lambda$16$Type(empty_0){
  this.empty_0 = empty_0;
}

defineClass(2587, $wnd.Function, $intern_22, InodeFileSystem$lambda$16$Type);
_.apply_0 = function apply_340(arg0){
  return lambda$16_1(this.empty_0, arg0);
}
;
function InodeFileSystem$lambda$17$Type($$outer_0, owner_1, writer_2, dirKey_3, dir_4, tid_5, remainingPath_6, cap_7){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.dirKey_3 = dirKey_3;
  this.dir_4 = dir_4;
  this.tid_5 = tid_5;
  this.remainingPath_6 = remainingPath_6;
  this.cap_7 = cap_7;
}

defineClass(2568, $wnd.Function, $intern_22, InodeFileSystem$lambda$17$Type);
_.apply_0 = function apply_341(arg0){
  return $lambda$17_2(this.$$outer_0, this.owner_1, this.writer_2, this.dirKey_3, this.dir_4, this.tid_5, this.remainingPath_6, this.cap_7, arg0);
}
;
function InodeFileSystem$lambda$18$Type(){
}

defineClass(2589, $wnd.Function, $intern_22, InodeFileSystem$lambda$18$Type);
_.apply_0 = function apply_342(arg0){
  return castTo(arg0, 127).inode;
}
;
function InodeFileSystem$lambda$19$Type($$outer_0, remainingPath_1){
  this.$$outer_0 = $$outer_0;
  this.remainingPath_1 = remainingPath_1;
}

defineClass(843, 1, {}, InodeFileSystem$lambda$19$Type);
_.get_0 = function get_35(){
  return $lambda$19_0(this.$$outer_0, this.remainingPath_1);
}
;
var Lpeergos_shared_inode_InodeFileSystem$lambda$19$Type_2_classLit = createForClass('peergos.shared.inode', 'InodeFileSystem/lambda$19$Type', 843);
function InodeFileSystem$lambda$2$Type(owner_0, writer_1, rootKey_2, elements_3, cap_4, tid_5){
  this.owner_0 = owner_0;
  this.writer_1 = writer_1;
  this.rootKey_2 = rootKey_2;
  this.elements_3 = elements_3;
  this.cap_4 = cap_4;
  this.tid_5 = tid_5;
}

defineClass(2565, $wnd.Function, $intern_22, InodeFileSystem$lambda$2$Type);
_.apply_0 = function apply_343(arg0){
  return lambda$2_2(this.owner_0, this.writer_1, this.rootKey_2, this.elements_3, this.cap_4, this.tid_5, arg0);
}
;
function InodeFileSystem$lambda$20$Type($$outer_0, owner_1, writer_2, dirKey_3, dir_4, tid_5){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.dirKey_3 = dirKey_3;
  this.dir_4 = dir_4;
  this.tid_5 = tid_5;
}

defineClass(2590, $wnd.Function, $intern_22, InodeFileSystem$lambda$20$Type);
_.apply_0 = function apply_344(arg0){
  return $lambda$20_1(this.$$outer_0, this.owner_1, this.writer_2, this.dirKey_3, this.dir_4, this.tid_5, arg0);
}
;
function InodeFileSystem$lambda$21$Type($$outer_0, owner_1, writer_2, remainingPath_3, cap_4, tid_5, dirKey_6, dir_7){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.remainingPath_3 = remainingPath_3;
  this.cap_4 = cap_4;
  this.tid_5 = tid_5;
  this.dirKey_6 = dirKey_6;
  this.dir_7 = dir_7;
}

defineClass(2569, $wnd.Function, $intern_22, InodeFileSystem$lambda$21$Type);
_.apply_0 = function apply_345(arg0){
  return $lambda$21_0(this.$$outer_0, this.owner_1, this.writer_2, this.remainingPath_3, this.cap_4, this.tid_5, this.dirKey_6, this.dir_7, arg0);
}
;
function InodeFileSystem$lambda$22$Type($$outer_0, owner_1, writer_2, remainingPath_3, cap_4, tid_5, childCapOpt_6){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.remainingPath_3 = remainingPath_3;
  this.cap_4 = cap_4;
  this.tid_5 = tid_5;
  this.childCapOpt_6 = childCapOpt_6;
}

defineClass(2591, $wnd.Function, $intern_22, InodeFileSystem$lambda$22$Type);
_.apply_0 = function apply_346(arg0){
  return $lambda$22_0(this.$$outer_0, this.owner_1, this.writer_2, this.remainingPath_3, this.cap_4, this.tid_5, this.childCapOpt_6, arg0);
}
;
function InodeFileSystem$lambda$23$Type(owner_0, writer_1, newDir_2, remainingPath_3, cap_4, tid_5){
  this.owner_0 = owner_0;
  this.writer_1 = writer_1;
  this.newDir_2 = newDir_2;
  this.remainingPath_3 = remainingPath_3;
  this.cap_4 = cap_4;
  this.tid_5 = tid_5;
}

defineClass(2593, $wnd.Function, $intern_22, InodeFileSystem$lambda$23$Type);
_.apply_0 = function apply_347(arg0){
  return lambda$23_1(this.owner_0, this.writer_1, this.newDir_2, this.remainingPath_3, this.cap_4, this.tid_5, arg0);
}
;
function InodeFileSystem$lambda$24$Type(owner_0, writer_1, newDir_2, remainingPath_3, cap_4, tid_5){
  this.owner_0 = owner_0;
  this.writer_1 = writer_1;
  this.newDir_2 = newDir_2;
  this.remainingPath_3 = remainingPath_3;
  this.cap_4 = cap_4;
  this.tid_5 = tid_5;
}

defineClass(2592, $wnd.Function, $intern_22, InodeFileSystem$lambda$24$Type);
_.apply_0 = function apply_348(arg0){
  return lambda$24(this.owner_0, this.writer_1, this.newDir_2, this.remainingPath_3, this.cap_4, this.tid_5, arg0);
}
;
function InodeFileSystem$lambda$27$Type(elements_0){
  this.elements_0 = elements_0;
}

defineClass(2570, $wnd.Function, $intern_22, InodeFileSystem$lambda$27$Type);
_.apply_0 = function apply_349(arg0){
  return lambda$27_0(this.elements_0, arg0);
}
;
function InodeFileSystem$lambda$28$Type($$outer_0, elements_1){
  this.$$outer_0 = $$outer_0;
  this.elements_1 = elements_1;
}

defineClass(2571, $wnd.Function, $intern_22, InodeFileSystem$lambda$28$Type);
_.apply_0 = function apply_350(arg0){
  return $lambda$28(this.$$outer_0, this.elements_1, arg0);
}
;
function InodeFileSystem$lambda$29$Type(hasher_0){
  this.hasher_0 = hasher_0;
}

defineClass(2572, $wnd.Function, $intern_22, InodeFileSystem$lambda$29$Type);
_.apply_0 = function apply_351(arg0){
  return $sha256(this.hasher_0, castTo(arg0, 80).data_0);
}
;
function InodeFileSystem$lambda$3$Type($$outer_0, owner_1, writer_2, rootKey_3, elements_4, tid_5){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.rootKey_3 = rootKey_3;
  this.elements_4 = elements_4;
  this.tid_5 = tid_5;
}

defineClass(2566, $wnd.Function, $intern_22, InodeFileSystem$lambda$3$Type);
_.apply_0 = function apply_352(arg0){
  return $lambda$3_3(this.$$outer_0, this.owner_1, this.writer_2, this.rootKey_3, this.elements_4, this.tid_5, arg0);
}
;
function InodeFileSystem$lambda$30$Type(hasher_0, owner_1, keyHasher_2, storage_3){
  this.hasher_0 = hasher_0;
  this.owner_1 = owner_1;
  this.keyHasher_2 = keyHasher_2;
  this.storage_3 = storage_3;
}

defineClass(2573, $wnd.Function, $intern_22, InodeFileSystem$lambda$30$Type);
_.apply_0 = function apply_353(arg0){
  return lambda$30(this.hasher_0, this.owner_1, this.keyHasher_2, this.storage_3, arg0);
}
;
function InodeFileSystem$lambda$31$Type(inodeCount_0, storage_2){
  this.inodeCount_0 = inodeCount_0;
  this.storage_2 = storage_2;
}

defineClass(2574, $wnd.Function, $intern_22, InodeFileSystem$lambda$31$Type);
_.apply_0 = function apply_354(arg0){
  return lambda$31_0(this.inodeCount_0, this.storage_2, arg0);
}
;
_.inodeCount_0 = 0;
function InodeFileSystem$lambda$32$Type(hasher_0){
  this.hasher_0 = hasher_0;
}

defineClass(2575, $wnd.Function, $intern_22, InodeFileSystem$lambda$32$Type);
_.apply_0 = function apply_355(arg0){
  return $sha256(this.hasher_0, castTo(arg0, 80).data_0);
}
;
function InodeFileSystem$lambda$33$Type(hasher_0, owner_1, keyHasher_2, storage_3){
  this.hasher_0 = hasher_0;
  this.owner_1 = owner_1;
  this.keyHasher_2 = keyHasher_2;
  this.storage_3 = storage_3;
}

defineClass(2576, $wnd.Function, $intern_22, InodeFileSystem$lambda$33$Type);
_.apply_0 = function apply_356(arg0){
  return lambda$33(this.hasher_0, this.owner_1, this.keyHasher_2, this.storage_3, arg0);
}
;
function InodeFileSystem$lambda$34$Type(storage_0){
  this.storage_0 = storage_0;
}

defineClass(2577, $wnd.Function, $intern_22, InodeFileSystem$lambda$34$Type);
_.apply_0 = function apply_357(arg0){
  return lambda$34(this.storage_0, arg0);
}
;
function InodeFileSystem$lambda$4$Type(){
}

defineClass(2578, $wnd.Function, $intern_22, InodeFileSystem$lambda$4$Type);
_.apply_0 = function apply_358(arg0){
  return castTo(castTo(arg0, 20).left, 191);
}
;
function InodeFileSystem$lambda$5$Type($$outer_0, owner_1, writer_2, dirKey_3, dir_4, tid_5, remainingPath_6){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.dirKey_3 = dirKey_3;
  this.dir_4 = dir_4;
  this.tid_5 = tid_5;
  this.remainingPath_6 = remainingPath_6;
}

defineClass(2567, $wnd.Function, $intern_22, InodeFileSystem$lambda$5$Type);
_.apply_0 = function apply_359(arg0){
  return $lambda$5_3(this.$$outer_0, this.owner_1, this.writer_2, this.dirKey_3, this.dir_4, this.tid_5, this.remainingPath_6, arg0);
}
;
function InodeFileSystem$lambda$6$Type($$outer_0, owner_1, writer_2, dirKey_3, dir_4, tid_5, hasOtherChildren_6, remainingPath_7){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.dirKey_3 = dirKey_3;
  this.dir_4 = dir_4;
  this.tid_5 = tid_5;
  this.hasOtherChildren_6 = hasOtherChildren_6;
  this.remainingPath_7 = remainingPath_7;
}

defineClass(2579, $wnd.Function, $intern_22, InodeFileSystem$lambda$6$Type);
_.apply_0 = function apply_360(arg0){
  return $lambda$6_2(this.$$outer_0, this.owner_1, this.writer_2, this.dirKey_3, this.dir_4, this.tid_5, this.hasOtherChildren_6, this.remainingPath_7, arg0);
}
;
function InodeFileSystem$lambda$7$Type($$outer_0, owner_1, writer_2, dirKey_3, dir_4, tid_5){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.dirKey_3 = dirKey_3;
  this.dir_4 = dir_4;
  this.tid_5 = tid_5;
}

defineClass(2580, $wnd.Function, $intern_22, InodeFileSystem$lambda$7$Type);
_.apply_0 = function apply_361(arg0){
  return $lambda$7_1(this.$$outer_0, this.owner_1, this.writer_2, this.dirKey_3, this.dir_4, this.tid_5, arg0);
}
;
function InodeFileSystem$lambda$8$Type(hasOtherChildren_0){
  this.hasOtherChildren_0 = hasOtherChildren_0;
}

defineClass(2581, $wnd.Function, $intern_22, InodeFileSystem$lambda$8$Type);
_.apply_0 = function apply_362(arg0){
  return lambda$8_1(this.hasOtherChildren_0, arg0);
}
;
function InodeFileSystem$lambda$9$Type($$outer_0, owner_1, writer_2, dirKey_3, dir_4, tid_5, hasOtherChildren_6, childOpt_7, remainingPath_8){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.dirKey_3 = dirKey_3;
  this.dir_4 = dir_4;
  this.tid_5 = tid_5;
  this.hasOtherChildren_6 = hasOtherChildren_6;
  this.childOpt_7 = childOpt_7;
  this.remainingPath_8 = remainingPath_8;
}

defineClass(2582, $wnd.Function, $intern_22, InodeFileSystem$lambda$9$Type);
_.apply_0 = function apply_363(arg0){
  return $lambda$9_3(this.$$outer_0, this.owner_1, this.writer_2, this.dirKey_3, this.dir_4, this.tid_5, this.hasOtherChildren_6, this.childOpt_7, this.remainingPath_8, arg0);
}
;
function $equals_17(this$static, o){
  var that;
  if (maskUndefined(this$static) === maskUndefined(o))
    return true;
  if (o == null || Lpeergos_shared_inode_PathElement_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 156);
  return $equals_0(this$static.name_0, that.name_0);
}

function PathElement(name_0){
  if (name_0.indexOf('/') != -1 || name_0.length > 255)
    throw toJs(new IllegalStateException_0('Invalid path element'));
  this.name_0 = name_0;
}

defineClass(156, 1, {156:1}, PathElement);
_.equals_0 = function equals_64(o){
  return $equals_17(this, o);
}
;
_.hashCode_1 = function hashCode_62(){
  return hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.name_0]));
}
;
_.toString_0 = function toString_58(){
  return this.name_0;
}
;
var Lpeergos_shared_inode_PathElement_2_classLit = createForClass('peergos.shared.inode', 'PathElement', 156);
function Cid$CidEncodingException(message){
  RuntimeException_0.call(this, message);
}

defineClass(458, 35, $intern_7, Cid$CidEncodingException);
var Lpeergos_shared_io_ipfs_Cid$CidEncodingException_2_classLit = createForClass('peergos.shared.io.ipfs', 'Cid/CidEncodingException', 458);
function $clinit_Cid$Codec(){
  $clinit_Cid$Codec = emptyMethod;
  var c, c$array, c$index, c$max;
  Raw = new Cid$Codec('Raw', 0, 85);
  DagProtobuf = new Cid$Codec('DagProtobuf', 1, 112);
  DagCbor = new Cid$Codec('DagCbor', 2, 113);
  LibP2pKey = new Cid$Codec('LibP2pKey', 3, 114);
  lookup_0 = new TreeMap;
  for (c$array = stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_io_ipfs_Cid$Codec_2_classLit, 1), $intern_33, 215, 0, [Raw, DagProtobuf, DagCbor, LibP2pKey]) , c$index = 0 , c$max = c$array.length; c$index < c$max; ++c$index) {
    c = c$array[c$index];
    $put_6(lookup_0, valueOf_2(c.type_0), c);
  }
}

function Cid$Codec(enum$name, enum$ordinal, type_0){
  Enum.call(this, enum$name, enum$ordinal);
  this.type_0 = type_0;
}

function lookup_1(c){
  $clinit_Cid$Codec();
  if (!$containsKey_0(lookup_0, valueOf_2(c)))
    throw toJs(new IllegalStateException_0('Unknown Codec type: ' + toString_4(c)));
  return castTo($get_0(lookup_0, valueOf_2(c)), 215);
}

function values_10(){
  $clinit_Cid$Codec();
  return stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_io_ipfs_Cid$Codec_2_classLit, 1), $intern_33, 215, 0, [Raw, DagProtobuf, DagCbor, LibP2pKey]);
}

defineClass(215, 52, {4:1, 57:1, 52:1, 215:1}, Cid$Codec);
_.type_0 = 0;
var DagCbor, DagProtobuf, LibP2pKey, Raw, lookup_0;
var Lpeergos_shared_io_ipfs_Cid$Codec_2_classLit = createForEnum('peergos.shared.io.ipfs', 'Cid/Codec', 215, values_10);
function $clinit_Multihash$Type(){
  $clinit_Multihash$Type = emptyMethod;
  var t, t$array, t$index, t$max;
  id_3 = new Multihash$Type('id', 0, 0, -1);
  sha2_256 = new Multihash$Type('sha2_256', 1, 18, 32);
  sha2_512 = new Multihash$Type('sha2_512', 2, 19, 64);
  sha3 = new Multihash$Type('sha3', 3, 20, 64);
  blake2b_0 = new Multihash$Type('blake2b', 4, 64, 64);
  blake2s = new Multihash$Type('blake2s', 5, 65, 32);
  lookup_2 = new TreeMap;
  for (t$array = stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_io_ipfs_Multihash$Type_2_classLit, 1), $intern_33, 175, 0, [id_3, sha2_256, sha2_512, sha3, blake2b_0, blake2s]) , t$index = 0 , t$max = t$array.length; t$index < t$max; ++t$index) {
    t = t$array[t$index];
    $put_6(lookup_2, valueOf_1(t.index), t);
  }
}

function Multihash$Type(enum$name, enum$ordinal, index_0, length_0){
  Enum.call(this, enum$name, enum$ordinal);
  this.index = index_0;
  this.length = length_0;
}

function lookup_3(t){
  $clinit_Multihash$Type();
  if (!$containsKey_0(lookup_2, valueOf_1(t)))
    throw toJs(new IllegalStateException_0('Unknown Multihash type: ' + t));
  return castTo($get_0(lookup_2, valueOf_1(t)), 175);
}

function valueOf_9(name_0){
  $clinit_Multihash$Type();
  return valueOf_0(($clinit_Multihash$Type$Map() , $MAP_0), name_0);
}

function values_11(){
  $clinit_Multihash$Type();
  return stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_io_ipfs_Multihash$Type_2_classLit, 1), $intern_33, 175, 0, [id_3, sha2_256, sha2_512, sha3, blake2b_0, blake2s]);
}

defineClass(175, 52, {4:1, 57:1, 52:1, 175:1}, Multihash$Type);
_.index = 0;
_.length = 0;
var blake2b_0, blake2s, id_3, lookup_2, sha2_256, sha2_512, sha3;
var Lpeergos_shared_io_ipfs_Multihash$Type_2_classLit = createForEnum('peergos.shared.io.ipfs', 'Multihash/Type', 175, values_11);
function $clinit_Multihash$Type$Map(){
  $clinit_Multihash$Type$Map = emptyMethod;
  $MAP_0 = createValueOfMap(($clinit_Multihash$Type() , stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_io_ipfs_Multihash$Type_2_classLit, 1), $intern_33, 175, 0, [id_3, sha2_256, sha2_512, sha3, blake2b_0, blake2s])));
}

var $MAP_0;
function parse_1(json, pos){
  var ch_0, result, startPos;
  ch_0 = skipSpaces(json, pos);
  if (ch_0 == 0)
    return null;
  startPos = pos[0];
  if (startPos == json.length)
    return null;
  result = parseArray(json, pos);
  if (result != null)
    return result;
  result = parseObject(json, pos);
  if (result != null)
    return result;
  result = parseBoolean(json, pos);
  if (result != null)
    return result;
  result = parseString(json, pos);
  if (result != null)
    return result;
  result = parseNumber(json, pos);
  if (result != null)
    return result;
  if ($regionMatches(json, pos[0], 'null', 4)) {
    pos[0] += 4;
    return null;
  }
  throw toJs(new IllegalStateException_0('json object at at ' + startPos + "  '" + json + "'"));
}

function parseArray(json, pos){
  var ch_0, result, start_0, val;
  start_0 = pos[0];
  checkCriticalStringElementIndex(start_0, json.length);
  if (json.charCodeAt(start_0) != 91)
    return null;
  ++pos[0];
  result = new ArrayList;
  while (true) {
    ch_0 = skipSpaces(json, pos);
    if (ch_0 == 0)
      break;
    else if (ch_0 == 93) {
      ++pos[0];
      return result;
    }
     else if (ch_0 == 44) {
      ++pos[0];
      if (skipSpaces(json, pos) == 0)
        break;
    }
    val = parse_1(json, pos);
    result.array[result.array.length] = val;
  }
  throw toJs(new IllegalStateException_0('json Array format at ' + start_0 + ' [' + (pos[0] - start_0) + "]  '" + json.substr(start_0) + "'"));
}

function parseBoolean(json, pos){
  if ($regionMatches(json, pos[0], 'true', 4)) {
    pos[0] += 4;
    return $clinit_Boolean() , TRUE;
  }
  if ($regionMatches(json, pos[0], 'false', 5)) {
    pos[0] += 5;
    return $clinit_Boolean() , FALSE;
  }
  return null;
}

function parseNumber(json, pos){
  var allowPM, ch_0, endPos, foundDot, foundExp, i, numericString, startPos;
  endPos = json.length;
  startPos = pos[0];
  foundExp = false;
  foundDot = false;
  allowPM = true;
  for (i = startPos; i < endPos; i++) {
    ch_0 = (checkCriticalStringElementIndex(i, json.length) , json.charCodeAt(i));
    if (ch_0 == 101 || ch_0 == 69) {
      if (foundExp)
        return null;
      allowPM = true;
      foundExp = true;
      continue;
    }
    if (ch_0 == 43 || ch_0 == 45) {
      if (allowPM) {
        allowPM = false;
        ch_0 = skipSpaces(json, pos);
        if (ch_0 == 0)
          return null;
        else 
          continue;
      }
       else 
        return null;
    }
    allowPM = false;
    if (ch_0 == 46) {
      if (foundDot)
        return null;
      foundDot = true;
      continue;
    }
    if (!isDigit((checkCriticalStringElementIndex(i, json.length) , json.charCodeAt(i)))) {
      pos[0] = endPos = i;
      break;
    }
  }
  if (startPos == endPos)
    return null;
  numericString = json.substr(startPos, endPos - startPos);
  try {
    return valueOf_1(__parseAndValidateInt(numericString, 10));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (!instanceOf($e0, 51))
      throw toJs($e0);
  }
  try {
    return valueOf_2(__parseAndValidateLong(numericString));
  }
   catch ($e1) {
    $e1 = toJava($e1);
    if (!instanceOf($e1, 51))
      throw toJs($e1);
  }
  try {
    return __parseAndValidateDouble(numericString);
  }
   catch ($e2) {
    $e2 = toJava($e2);
    if (!instanceOf($e2, 51))
      throw toJs($e2);
  }
  throw toJs(new IllegalStateException_0('Failed to parse JSON number at ' + startPos + " '" + numericString + "'"));
}

function parseObject(json, pos){
  var ch_0, key, result, start_0, val;
  start_0 = pos[0];
  checkCriticalStringElementIndex(start_0, json.length);
  if (json.charCodeAt(start_0) != 123)
    return null;
  ++pos[0];
  result = new LinkedHashMap;
  while (true) {
    ch_0 = skipSpaces(json, pos);
    if (ch_0 == 0)
      break;
    else if (ch_0 == 125) {
      ++pos[0];
      return result;
    }
     else if (ch_0 == 44) {
      ++pos[0];
      if (skipSpaces(json, pos) == 0)
        break;
    }
    key = parseString(json, pos);
    ch_0 = skipSpaces(json, pos);
    if (ch_0 == 0)
      break;
    ++pos[0];
    if (ch_0 != 58)
      break;
    val = parse_1(json, pos);
    $put_5(result, key, val);
  }
  throw toJs(new IllegalStateException_0('json Object format at ' + pos[0] + '  [' + start_0 + ', ' + json.length + "]  '" + json.substr(pos[0]) + "'"));
}

function parseStream(json){
  var pos, res;
  if (json == null)
    return null;
  pos = initUnidimensionalArray(I_classLit, $intern_29, 8, 1, 15, 1);
  res = new ArrayList;
  json = $trim(json);
  while (pos[0] < json.length)
    $add(res, parse_1(json, pos));
  return res;
}

function parseString(json, pos){
  var ch_0, i, isEscape, startPos;
  startPos = pos[0];
  checkCriticalStringElementIndex(startPos, json.length);
  if (json.charCodeAt(startPos) != 34)
    return null;
  ++pos[0];
  isEscape = false;
  for (i = startPos + 1; i < json.length; i++) {
    ch_0 = (checkCriticalStringElementIndex(i, json.length) , json.charCodeAt(i));
    if (ch_0 == 92) {
      isEscape = !isEscape;
      continue;
    }
    if (ch_0 == 34) {
      if (!isEscape) {
        pos[0] = i + 1;
        return json.substr(startPos + 1, i - (startPos + 1));
      }
    }
    isEscape = false;
  }
  throw toJs(new IllegalStateException_0('json string at at ' + startPos + "  '" + json + "'"));
}

function skipSpaces(json, pos){
  var ch_0;
  while (true) {
    if (pos[0] >= json.length)
      return 0;
    ch_0 = $charAt(json, pos[0]);
    if (isWhitespace(String.fromCharCode(ch_0)))
      ++pos[0];
    else 
      return ch_0;
  }
}

function decode_4(hex){
  var i, res;
  res = initUnidimensionalArray(B_classLit, $intern_28, 8, hex.length / 2 | 0, 15, 1);
  for (i = 0; i < res.length; i++)
    res[i] = __parseAndValidateInt(hex.substr(2 * i, 2 * i + 2 - 2 * i), 16) << 24 >> 24;
  return res;
}

function $containsAlphabetOrPad(this$static, arrayOctet){
  var element, element$array, element$index, element$max;
  if (arrayOctet == null) {
    return false;
  }
  for (element$array = arrayOctet , element$index = 0 , element$max = element$array.length; element$index < element$max; ++element$index) {
    element = element$array[element$index];
    if (this$static.pad == element || element >= 0 && element < this$static.decodeTable.length && this$static.decodeTable[element] != -1) {
      return true;
    }
  }
  return false;
}

function $decode(this$static, pArray){
  var context, result;
  if (pArray == null || pArray.length == 0) {
    return pArray;
  }
  context = new BaseNCodec$Context;
  this$static.decode_0(pArray, 0, pArray.length, context);
  this$static.decode_0(pArray, 0, -1, context);
  result = initUnidimensionalArray(B_classLit, $intern_28, 8, context.pos, 15, 1);
  $readResults(result, result.length, context);
  return result;
}

function $encode_0(this$static, pArray){
  if (pArray == null || pArray.length == 0) {
    return pArray;
  }
  return $encode_1(this$static, pArray, pArray.length);
}

function $encode_1(this$static, pArray, length_0){
  var buf, context;
  if (pArray == null || pArray.length == 0) {
    return pArray;
  }
  context = new BaseNCodec$Context;
  this$static.encode_0(pArray, 0, length_0, context);
  this$static.encode_0(pArray, 0, -1, context);
  buf = initUnidimensionalArray(B_classLit, $intern_28, 8, context.pos - context.readPos, 15, 1);
  $readResults(buf, buf.length, context);
  return buf;
}

function $ensureBufferSize(size_0, context){
  if (context.buffer == null || context.buffer.length < context.pos + size_0) {
    return $resizeBuffer(context);
  }
  return context.buffer;
}

function $readResults(b, bAvail, context){
  var len;
  if (context.buffer != null) {
    len = $wnd.Math.min(context.buffer != null?context.pos - context.readPos:0, bAvail);
    arraycopy(context.buffer, context.readPos, b, 0, len);
    context.readPos += len;
    context.readPos >= context.pos && (context.buffer = null);
    return len;
  }
  return context.eof?-1:0;
}

function $resizeBuffer(context){
  var b;
  if (context.buffer == null) {
    context.buffer = initUnidimensionalArray(B_classLit, $intern_28, 8, 8192, 15, 1);
    context.pos = 0;
    context.readPos = 0;
  }
   else {
    b = initUnidimensionalArray(B_classLit, $intern_28, 8, context.buffer.length * 2, 15, 1);
    arraycopy(context.buffer, 0, b, 0, context.buffer.length);
    context.buffer = b;
  }
  return context.buffer;
}

function BaseNCodec(chunkSeparatorLength){
  BaseNCodec_0.call(this, 3, 4, chunkSeparatorLength);
}

function BaseNCodec_0(unencodedBlockSize, encodedBlockSize, chunkSeparatorLength){
  this.unencodedBlockSize = unencodedBlockSize;
  this.encodedBlockSize = encodedBlockSize;
  this.lineLength = 0;
  this.chunkSeparatorLength = chunkSeparatorLength;
  this.pad = 61;
}

defineClass(424, 1, {});
_.chunkSeparatorLength = 0;
_.encodedBlockSize = 0;
_.lineLength = 0;
_.pad = 0;
_.unencodedBlockSize = 0;
var Lpeergos_shared_io_ipfs_bases_BaseNCodec_2_classLit = createForClass('peergos.shared.io.ipfs.bases', 'BaseNCodec', 424);
function $clinit_Base32(){
  $clinit_Base32 = emptyMethod;
  DECODE_TABLE = stampJavaTypeInfo(getClassLiteralForArray(B_classLit, 1), $intern_28, 8, 15, [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 26, 27, 28, 29, 30, 31, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]);
  ENCODE_TABLE = stampJavaTypeInfo(getClassLiteralForArray(B_classLit, 1), $intern_28, 8, 15, [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 50, 51, 52, 53, 54, 55]);
  HEX_DECODE_TABLE = stampJavaTypeInfo(getClassLiteralForArray(B_classLit, 1), $intern_28, 8, 15, [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, -1, -1, -1, -1, -1, -1, -1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]);
  HEX_ENCODE_TABLE = stampJavaTypeInfo(getClassLiteralForArray(B_classLit, 1), $intern_28, 8, 15, [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86]);
}

function Base32(){
  $clinit_Base32();
  Base32_1.call(this, false);
}

function Base32_0(useHex){
  BaseNCodec_0.call(this, 5, 8, 0);
  if (useHex) {
    this.encodeTable = HEX_ENCODE_TABLE;
    this.decodeTable = HEX_DECODE_TABLE;
  }
   else {
    this.encodeTable = ENCODE_TABLE;
    this.decodeTable = DECODE_TABLE;
  }
  this.encodeSize = 8;
  this.lineSeparator = null;
  this.decodeSize = this.encodeSize - 1;
  if (61 < this.decodeTable.length && this.decodeTable[61] != -1) {
    throw toJs(new IllegalArgumentException_0('pad must not be in alphabet or whitespace'));
  }
}

function Base32_1(useHex){
  $clinit_Base32();
  Base32_0.call(this, useHex);
}

defineClass(138, 424, {}, Base32, Base32_1);
_.decode_0 = function decode_5(in_0, inPos, inAvail, context){
  var b, buffer, i, result;
  if (context.eof) {
    return;
  }
  inAvail < 0 && (context.eof = true);
  for (i = 0; i < inAvail; i++) {
    b = in_0[inPos++];
    if (b == this.pad) {
      context.eof = true;
      break;
    }
    buffer = $ensureBufferSize(this.decodeSize, context);
    if (b >= 0 && b < this.decodeTable.length) {
      result = this.decodeTable[b];
      if (result >= 0) {
        context.modulus = (context.modulus + 1) % 8;
        context.lbitWorkArea = add_1(shl_0(context.lbitWorkArea, 5), result);
        if (context.modulus == 0) {
          buffer[context.pos++] = toInt_0(and_0(shr_0(context.lbitWorkArea, 32), 255)) << 24 >> 24;
          buffer[context.pos++] = toInt_0(and_0(shr_0(context.lbitWorkArea, 24), 255)) << 24 >> 24;
          buffer[context.pos++] = toInt_0(and_0(shr_0(context.lbitWorkArea, 16), 255)) << 24 >> 24;
          buffer[context.pos++] = toInt_0(and_0(shr_0(context.lbitWorkArea, 8), 255)) << 24 >> 24;
          buffer[context.pos++] = toInt_0(and_0(context.lbitWorkArea, 255)) << 24 >> 24;
        }
      }
    }
  }
  if (context.eof && context.modulus >= 2) {
    buffer = $ensureBufferSize(this.decodeSize, context);
    switch (context.modulus) {
      case 2:
        buffer[context.pos++] = toInt_0(and_0(shr_0(context.lbitWorkArea, 2), 255)) << 24 >> 24;
        break;
      case 3:
        buffer[context.pos++] = toInt_0(and_0(shr_0(context.lbitWorkArea, 7), 255)) << 24 >> 24;
        break;
      case 4:
        context.lbitWorkArea = shr_0(context.lbitWorkArea, 4);
        buffer[context.pos++] = toInt_0(and_0(shr_0(context.lbitWorkArea, 8), 255)) << 24 >> 24;
        buffer[context.pos++] = toInt_0(and_0(context.lbitWorkArea, 255)) << 24 >> 24;
        break;
      case 5:
        context.lbitWorkArea = shr_0(context.lbitWorkArea, 1);
        buffer[context.pos++] = toInt_0(and_0(shr_0(context.lbitWorkArea, 16), 255)) << 24 >> 24;
        buffer[context.pos++] = toInt_0(and_0(shr_0(context.lbitWorkArea, 8), 255)) << 24 >> 24;
        buffer[context.pos++] = toInt_0(and_0(context.lbitWorkArea, 255)) << 24 >> 24;
        break;
      case 6:
        context.lbitWorkArea = shr_0(context.lbitWorkArea, 6);
        buffer[context.pos++] = toInt_0(and_0(shr_0(context.lbitWorkArea, 16), 255)) << 24 >> 24;
        buffer[context.pos++] = toInt_0(and_0(shr_0(context.lbitWorkArea, 8), 255)) << 24 >> 24;
        buffer[context.pos++] = toInt_0(and_0(context.lbitWorkArea, 255)) << 24 >> 24;
        break;
      case 7:
        context.lbitWorkArea = shr_0(context.lbitWorkArea, 3);
        buffer[context.pos++] = toInt_0(and_0(shr_0(context.lbitWorkArea, 24), 255)) << 24 >> 24;
        buffer[context.pos++] = toInt_0(and_0(shr_0(context.lbitWorkArea, 16), 255)) << 24 >> 24;
        buffer[context.pos++] = toInt_0(and_0(shr_0(context.lbitWorkArea, 8), 255)) << 24 >> 24;
        buffer[context.pos++] = toInt_0(and_0(context.lbitWorkArea, 255)) << 24 >> 24;
        break;
      default:throw toJs(new IllegalStateException_0('Impossible modulus ' + context.modulus));
    }
  }
}
;
_.encode_0 = function encode_2(in_0, inPos, inAvail, context){
  var b, buffer, i, savedPos;
  if (context.eof) {
    return;
  }
  if (inAvail < 0) {
    context.eof = true;
    if (0 == context.modulus && this.lineLength == 0) {
      return;
    }
    buffer = $ensureBufferSize(this.encodeSize, context);
    savedPos = context.pos;
    switch (context.modulus) {
      case 0:
        break;
      case 1:
        buffer[context.pos++] = this.encodeTable[toInt_0(shr_0(context.lbitWorkArea, 3)) & 31];
        buffer[context.pos++] = this.encodeTable[toInt_0(shl_0(context.lbitWorkArea, 2)) & 31];
        buffer[context.pos++] = this.pad;
        buffer[context.pos++] = this.pad;
        buffer[context.pos++] = this.pad;
        buffer[context.pos++] = this.pad;
        buffer[context.pos++] = this.pad;
        buffer[context.pos++] = this.pad;
        break;
      case 2:
        buffer[context.pos++] = this.encodeTable[toInt_0(shr_0(context.lbitWorkArea, 11)) & 31];
        buffer[context.pos++] = this.encodeTable[toInt_0(shr_0(context.lbitWorkArea, 6)) & 31];
        buffer[context.pos++] = this.encodeTable[toInt_0(shr_0(context.lbitWorkArea, 1)) & 31];
        buffer[context.pos++] = this.encodeTable[toInt_0(shl_0(context.lbitWorkArea, 4)) & 31];
        buffer[context.pos++] = this.pad;
        buffer[context.pos++] = this.pad;
        buffer[context.pos++] = this.pad;
        buffer[context.pos++] = this.pad;
        break;
      case 3:
        buffer[context.pos++] = this.encodeTable[toInt_0(shr_0(context.lbitWorkArea, 19)) & 31];
        buffer[context.pos++] = this.encodeTable[toInt_0(shr_0(context.lbitWorkArea, 14)) & 31];
        buffer[context.pos++] = this.encodeTable[toInt_0(shr_0(context.lbitWorkArea, 9)) & 31];
        buffer[context.pos++] = this.encodeTable[toInt_0(shr_0(context.lbitWorkArea, 4)) & 31];
        buffer[context.pos++] = this.encodeTable[toInt_0(shl_0(context.lbitWorkArea, 1)) & 31];
        buffer[context.pos++] = this.pad;
        buffer[context.pos++] = this.pad;
        buffer[context.pos++] = this.pad;
        break;
      case 4:
        buffer[context.pos++] = this.encodeTable[toInt_0(shr_0(context.lbitWorkArea, 27)) & 31];
        buffer[context.pos++] = this.encodeTable[toInt_0(shr_0(context.lbitWorkArea, 22)) & 31];
        buffer[context.pos++] = this.encodeTable[toInt_0(shr_0(context.lbitWorkArea, 17)) & 31];
        buffer[context.pos++] = this.encodeTable[toInt_0(shr_0(context.lbitWorkArea, 12)) & 31];
        buffer[context.pos++] = this.encodeTable[toInt_0(shr_0(context.lbitWorkArea, 7)) & 31];
        buffer[context.pos++] = this.encodeTable[toInt_0(shr_0(context.lbitWorkArea, 2)) & 31];
        buffer[context.pos++] = this.encodeTable[toInt_0(shl_0(context.lbitWorkArea, 3)) & 31];
        buffer[context.pos++] = this.pad;
        break;
      default:throw toJs(new IllegalStateException_0('Impossible modulus ' + context.modulus));
    }
    context.currentLinePos += context.pos - savedPos;
    if (this.lineLength > 0 && context.currentLinePos > 0) {
      arraycopy(this.lineSeparator, 0, buffer, context.pos, this.lineSeparator.length);
      context.pos += this.lineSeparator.length;
    }
  }
   else {
    for (i = 0; i < inAvail; i++) {
      buffer = $ensureBufferSize(this.encodeSize, context);
      context.modulus = (context.modulus + 1) % 5;
      b = in_0[inPos++];
      b < 0 && (b += 256);
      context.lbitWorkArea = add_1(shl_0(context.lbitWorkArea, 8), b);
      if (0 == context.modulus) {
        buffer[context.pos++] = this.encodeTable[toInt_0(shr_0(context.lbitWorkArea, 35)) & 31];
        buffer[context.pos++] = this.encodeTable[toInt_0(shr_0(context.lbitWorkArea, 30)) & 31];
        buffer[context.pos++] = this.encodeTable[toInt_0(shr_0(context.lbitWorkArea, 25)) & 31];
        buffer[context.pos++] = this.encodeTable[toInt_0(shr_0(context.lbitWorkArea, 20)) & 31];
        buffer[context.pos++] = this.encodeTable[toInt_0(shr_0(context.lbitWorkArea, 15)) & 31];
        buffer[context.pos++] = this.encodeTable[toInt_0(shr_0(context.lbitWorkArea, 10)) & 31];
        buffer[context.pos++] = this.encodeTable[toInt_0(shr_0(context.lbitWorkArea, 5)) & 31];
        buffer[context.pos++] = this.encodeTable[toInt_0(context.lbitWorkArea) & 31];
        context.currentLinePos += 8;
        if (this.lineLength > 0 && this.lineLength <= context.currentLinePos) {
          arraycopy(this.lineSeparator, 0, buffer, context.pos, this.lineSeparator.length);
          context.pos += this.lineSeparator.length;
          context.currentLinePos = 0;
        }
      }
    }
  }
}
;
_.decodeSize = 0;
_.encodeSize = 0;
var DECODE_TABLE, ENCODE_TABLE, HEX_DECODE_TABLE, HEX_ENCODE_TABLE;
var Lpeergos_shared_io_ipfs_bases_Base32_2_classLit = createForClass('peergos.shared.io.ipfs.bases', 'Base32', 138);
function encode_3(in_0){
  var b, i, withoutLeadingZeroes, zeroPrefixLength;
  withoutLeadingZeroes = bigInteger2String(new BigInteger_2(in_0));
  zeroPrefixLength = zeroPrefixLength_1(in_0);
  b = new StringBuilder;
  for (i = 0; i < zeroPrefixLength; i++)
    b.string += '0';
  b.string += '' + withoutLeadingZeroes;
  return b.string;
}

function zeroPrefixLength_0(in_0){
  var i;
  for (i = 0; i < in_0.length; i++) {
    checkCriticalStringElementIndex(i, in_0.length);
    if (in_0.charCodeAt(i) != 48) {
      return i;
    }
  }
  return in_0.length;
}

function zeroPrefixLength_1(bytes){
  var i;
  for (i = 0; i < bytes.length; i++) {
    if (bytes[i] != 0) {
      return i;
    }
  }
  return bytes.length;
}

function $clinit_Base58(){
  $clinit_Base58 = emptyMethod;
  var i;
  ALPHABET = $toCharArray('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');
  ENCODED_ZERO = ALPHABET[0];
  INDEXES = initUnidimensionalArray(I_classLit, $intern_29, 8, 128, 15, 1);
  fill_0(INDEXES, -1);
  for (i = 0; i < ALPHABET.length; i++) {
    INDEXES[ALPHABET[i]] = i;
  }
}

function decode_6(input_0){
  $clinit_Base58();
  var c, decoded, digit, i, input58, inputStart, outputStart, zeros;
  if (input_0.length == 0) {
    return initUnidimensionalArray(B_classLit, $intern_28, 8, 0, 15, 1);
  }
  input58 = initUnidimensionalArray(B_classLit, $intern_28, 8, input_0.length, 15, 1);
  for (i = 0; i < input_0.length; ++i) {
    c = (checkCriticalStringElementIndex(i, input_0.length) , input_0.charCodeAt(i));
    digit = c < 128?INDEXES[c]:-1;
    if (digit < 0) {
      throw toJs(new IllegalStateException_0('InvalidCharacter in base 58'));
    }
    input58[i] = digit << 24 >> 24;
  }
  zeros = 0;
  while (zeros < input58.length && input58[zeros] == 0) {
    ++zeros;
  }
  decoded = initUnidimensionalArray(B_classLit, $intern_28, 8, input_0.length, 15, 1);
  outputStart = decoded.length;
  for (inputStart = zeros; inputStart < input58.length;) {
    decoded[--outputStart] = divmod(input58, inputStart, 58, 256);
    input58[inputStart] == 0 && ++inputStart;
  }
  while (outputStart < decoded.length && decoded[outputStart] == 0) {
    ++outputStart;
  }
  return copyOfRange(decoded, outputStart - zeros, decoded.length);
}

function divmod(number, firstDigit, base, divisor){
  var digit, i, remainder, temp;
  remainder = 0;
  for (i = firstDigit; i < number.length; i++) {
    digit = number[i] & 255;
    temp = remainder * base + digit;
    number[i] = (temp / divisor | 0) << 24 >> 24;
    remainder = temp % divisor;
  }
  return remainder << 24 >> 24;
}

function encode_4(input_0){
  $clinit_Base58();
  var encoded, inputStart, outputStart, zeros;
  if (input_0.length == 0) {
    return '';
  }
  zeros = 0;
  while (zeros < input_0.length && input_0[zeros] == 0) {
    ++zeros;
  }
  input_0 = copyOf(input_0, input_0.length);
  encoded = initUnidimensionalArray(C_classLit, $intern_18, 8, input_0.length * 2, 15, 1);
  outputStart = encoded.length;
  for (inputStart = zeros; inputStart < input_0.length;) {
    encoded[--outputStart] = ALPHABET[divmod(input_0, inputStart, 256, 58)];
    input_0[inputStart] == 0 && ++inputStart;
  }
  while (outputStart < encoded.length && encoded[outputStart] == ENCODED_ZERO) {
    ++outputStart;
  }
  while (--zeros >= 0) {
    encoded[--outputStart] = ENCODED_ZERO;
  }
  return valueOf_5(encoded, outputStart, encoded.length - outputStart);
}

var ALPHABET, ENCODED_ZERO = 0, INDEXES;
function $clinit_Base64(){
  $clinit_Base64 = emptyMethod;
  CHUNK_SEPARATOR = stampJavaTypeInfo(getClassLiteralForArray(B_classLit, 1), $intern_28, 8, 15, [13, 10]);
  STANDARD_ENCODE_TABLE = stampJavaTypeInfo(getClassLiteralForArray(B_classLit, 1), $intern_28, 8, 15, [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 47]);
  DECODE_TABLE_0 = stampJavaTypeInfo(getClassLiteralForArray(B_classLit, 1), $intern_28, 8, 15, [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, 62, -1, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, 63, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51]);
}

function Base64(){
  $clinit_Base64();
  Base64_0.call(this, CHUNK_SEPARATOR);
}

function Base64_0(lineSeparator){
  Base64_1.call(this, lineSeparator);
}

function Base64_1(lineSeparator){
  var sep;
  BaseNCodec.call(this, lineSeparator == null?0:lineSeparator.length);
  this.decodeTable = DECODE_TABLE_0;
  if (lineSeparator != null) {
    if ($containsAlphabetOrPad(this, lineSeparator)) {
      sep = newString(lineSeparator, forName('UTF-8'));
      throw toJs(new IllegalArgumentException_0('lineSeparator must not contain base64 characters: [' + sep + ']'));
    }
    this.encodeSize = 4;
    this.lineSeparator = null;
  }
   else {
    this.encodeSize = 4;
    this.lineSeparator = null;
  }
  this.decodeSize = this.encodeSize - 1;
  this.encodeTable = STANDARD_ENCODE_TABLE;
}

function encodeBase64_0(binaryData){
  var len_0;
  $clinit_Base64();
  var b64, len;
  if (binaryData == null || binaryData.length == 0) {
    return binaryData;
  }
  b64 = new Base64_1(CHUNK_SEPARATOR);
  len = (len_0 = mul_0((binaryData.length + b64.unencodedBlockSize - 1) / b64.unencodedBlockSize | 0, b64.encodedBlockSize) , b64.lineLength > 0 && (len_0 = add_1(len_0, mul_0(div(sub_1(add_1(len_0, b64.lineLength), 1), b64.lineLength), b64.chunkSeparatorLength))) , len_0);
  if (compare_1(len, $intern_1) > 0) {
    throw toJs(new IllegalArgumentException_0('Input array too big, the output array would be bigger (' + toString_4(len) + ') than the specified maximum size of ' + $intern_1));
  }
  return $encode_0(b64, binaryData);
}

defineClass(324, 424, {}, Base64, Base64_1);
_.decode_0 = function decode_7(in_0, inPos, inAvail, context){
  var b, buffer, i, result;
  if (context.eof) {
    return;
  }
  inAvail < 0 && (context.eof = true);
  for (i = 0; i < inAvail; i++) {
    buffer = $ensureBufferSize(this.decodeSize, context);
    b = in_0[inPos++];
    if (b == this.pad) {
      context.eof = true;
      break;
    }
    if (b >= 0 && b < DECODE_TABLE_0.length) {
      result = DECODE_TABLE_0[b];
      if (result >= 0) {
        context.modulus = (context.modulus + 1) % 4;
        context.ibitWorkArea = (context.ibitWorkArea << 6) + result;
        if (context.modulus == 0) {
          buffer[context.pos++] = (context.ibitWorkArea >> 16 & 255) << 24 >> 24;
          buffer[context.pos++] = (context.ibitWorkArea >> 8 & 255) << 24 >> 24;
          buffer[context.pos++] = (context.ibitWorkArea & 255) << 24 >> 24;
        }
      }
    }
  }
  if (context.eof && context.modulus != 0) {
    buffer = $ensureBufferSize(this.decodeSize, context);
    switch (context.modulus) {
      case 1:
        break;
      case 2:
        context.ibitWorkArea = context.ibitWorkArea >> 4;
        buffer[context.pos++] = (context.ibitWorkArea & 255) << 24 >> 24;
        break;
      case 3:
        context.ibitWorkArea = context.ibitWorkArea >> 2;
        buffer[context.pos++] = (context.ibitWorkArea >> 8 & 255) << 24 >> 24;
        buffer[context.pos++] = (context.ibitWorkArea & 255) << 24 >> 24;
        break;
      default:throw toJs(new IllegalStateException_0('Impossible modulus ' + context.modulus));
    }
  }
}
;
_.encode_0 = function encode_5(in_0, inPos, inAvail, context){
  var b, buffer, i, savedPos;
  if (context.eof) {
    return;
  }
  if (inAvail < 0) {
    context.eof = true;
    if (0 == context.modulus && this.lineLength == 0) {
      return;
    }
    buffer = $ensureBufferSize(this.encodeSize, context);
    savedPos = context.pos;
    switch (context.modulus) {
      case 0:
        break;
      case 1:
        buffer[context.pos++] = this.encodeTable[context.ibitWorkArea >> 2 & 63];
        buffer[context.pos++] = this.encodeTable[context.ibitWorkArea << 4 & 63];
        if (maskUndefined(this.encodeTable) === maskUndefined(STANDARD_ENCODE_TABLE)) {
          buffer[context.pos++] = this.pad;
          buffer[context.pos++] = this.pad;
        }

        break;
      case 2:
        buffer[context.pos++] = this.encodeTable[context.ibitWorkArea >> 10 & 63];
        buffer[context.pos++] = this.encodeTable[context.ibitWorkArea >> 4 & 63];
        buffer[context.pos++] = this.encodeTable[context.ibitWorkArea << 2 & 63];
        maskUndefined(this.encodeTable) === maskUndefined(STANDARD_ENCODE_TABLE) && (buffer[context.pos++] = this.pad);
        break;
      default:throw toJs(new IllegalStateException_0('Impossible modulus ' + context.modulus));
    }
    context.currentLinePos += context.pos - savedPos;
    if (this.lineLength > 0 && context.currentLinePos > 0) {
      arraycopy(this.lineSeparator, 0, buffer, context.pos, this.lineSeparator.length);
      context.pos += this.lineSeparator.length;
    }
  }
   else {
    for (i = 0; i < inAvail; i++) {
      buffer = $ensureBufferSize(this.encodeSize, context);
      context.modulus = (context.modulus + 1) % 3;
      b = in_0[inPos++];
      b < 0 && (b += 256);
      context.ibitWorkArea = (context.ibitWorkArea << 8) + b;
      if (0 == context.modulus) {
        buffer[context.pos++] = this.encodeTable[context.ibitWorkArea >> 18 & 63];
        buffer[context.pos++] = this.encodeTable[context.ibitWorkArea >> 12 & 63];
        buffer[context.pos++] = this.encodeTable[context.ibitWorkArea >> 6 & 63];
        buffer[context.pos++] = this.encodeTable[context.ibitWorkArea & 63];
        context.currentLinePos += 4;
        if (this.lineLength > 0 && this.lineLength <= context.currentLinePos) {
          arraycopy(this.lineSeparator, 0, buffer, context.pos, this.lineSeparator.length);
          context.pos += this.lineSeparator.length;
          context.currentLinePos = 0;
        }
      }
    }
  }
}
;
_.decodeSize = 0;
_.encodeSize = 0;
var CHUNK_SEPARATOR, DECODE_TABLE_0, STANDARD_ENCODE_TABLE;
var Lpeergos_shared_io_ipfs_bases_Base64_2_classLit = createForClass('peergos.shared.io.ipfs.bases', 'Base64', 324);
function BaseNCodec$Context(){
}

defineClass(512, 1, {}, BaseNCodec$Context);
_.currentLinePos = 0;
_.eof = false;
_.ibitWorkArea = 0;
_.lbitWorkArea = 0;
_.modulus = 0;
_.pos = 0;
_.readPos = 0;
var Lpeergos_shared_io_ipfs_bases_BaseNCodec$Context_2_classLit = createForClass('peergos.shared.io.ipfs.bases', 'BaseNCodec/Context', 512);
function decode_8(data_0){
  var b, rest, withoutLeadingZeroes, zeroPrefixLength, res;
  b = lookup_5((checkCriticalStringElementIndex(0, data_0.length) , data_0.charCodeAt(0)));
  rest = data_0.substr(1);
  switch (b.ordinal_0) {
    case 11:
      return decode_6(rest);
    case 4:
      return decode_4(rest);
    case 5:
      return $decode(new Base32, getBytes_1(rest, forName('UTF-8')));
    case 6:
      return $decode(new Base32, getBytes_1(rest.toLowerCase(), forName('UTF-8')));
    case 7:
      return $decode(new Base32_1(true), getBytes_1(rest, forName('UTF-8')));
    case 8:
      return $decode(new Base32_1(true), getBytes_1(rest.toLowerCase(), forName('UTF-8')));
    case 9:
      return withoutLeadingZeroes = $toByteArray_0(new BigInteger_3(rest)) , zeroPrefixLength = zeroPrefixLength_0(rest) , res = initUnidimensionalArray(B_classLit, $intern_28, 8, zeroPrefixLength + withoutLeadingZeroes.length, 15, 1) , arraycopy(withoutLeadingZeroes, 0, res, zeroPrefixLength, withoutLeadingZeroes.length) , res;
    case 13:
    case 12:
      return $clinit_Base64() , $decode(new Base64, getBytes_1(rest, forName('UTF-8')));
    default:throw toJs(new IllegalStateException_0('Unsupported base encoding: ' + (b.name_0 != null?b.name_0:'' + b.ordinal_0)));
  }
}

function encode_6(b, data_0){
  switch (b.ordinal_0) {
    case 11:
      return charToString(b.prefix) + encode_4(data_0);
    case 4:
      return charToString(b.prefix) + bytesToHex(data_0);
    case 5:
      return charToString(b.prefix) + $replaceAll($create($encode_0(new Base32, data_0)).toLowerCase(), '=', '');
    case 6:
      return charToString(b.prefix) + $replaceAll($create($encode_0(new Base32, data_0)), '=', '');
    case 7:
      return charToString(b.prefix) + $replaceAll($create($encode_0(new Base32_1(true), data_0)).toLowerCase(), '=', '');
    case 8:
      return charToString(b.prefix) + $replaceAll($create($encode_0(new Base32_1(true), data_0)), '=', '');
    case 9:
      return charToString(b.prefix) + encode_3(data_0);
    case 12:
      return charToString(b.prefix) + $replaceAll(($clinit_Base64() , newString(encodeBase64_0(data_0), forName('US-ASCII'))), '=', '');
    case 13:
      return charToString(b.prefix) + ($clinit_Base64() , newString(encodeBase64_0(data_0), forName('US-ASCII')));
    default:throw toJs(new IllegalStateException_0('Unsupported base encoding: ' + (b.name_0 != null?b.name_0:'' + b.ordinal_0)));
  }
}

function $clinit_Multibase$Base(){
  $clinit_Multibase$Base = emptyMethod;
  var b, b$array, b$index, b$max;
  Base1 = new Multibase$Base('Base1', 0, 49);
  Base2 = new Multibase$Base('Base2', 1, 48);
  Base8 = new Multibase$Base('Base8', 2, 55);
  Base10 = new Multibase$Base('Base10', 3, 57);
  Base16 = new Multibase$Base('Base16', 4, 102);
  Base32_2 = new Multibase$Base('Base32', 5, 98);
  Base32Upper = new Multibase$Base('Base32Upper', 6, 66);
  Base32Hex = new Multibase$Base('Base32Hex', 7, 118);
  Base32HexUpper = new Multibase$Base('Base32HexUpper', 8, 86);
  Base36 = new Multibase$Base('Base36', 9, 107);
  Base58Flickr = new Multibase$Base('Base58Flickr', 10, 90);
  Base58BTC = new Multibase$Base('Base58BTC', 11, 122);
  Base64_2 = new Multibase$Base('Base64', 12, 109);
  Base64Pad = new Multibase$Base('Base64Pad', 13, 77);
  lookup_4 = new TreeMap;
  for (b$array = values_12() , b$index = 0 , b$max = b$array.length; b$index < b$max; ++b$index) {
    b = b$array[b$index];
    $put_6(lookup_4, valueOf(b.prefix), b);
  }
}

function Multibase$Base(enum$name, enum$ordinal, prefix){
  Enum.call(this, enum$name, enum$ordinal);
  this.prefix = prefix;
}

function lookup_5(p){
  $clinit_Multibase$Base();
  if (!$containsKey_0(lookup_4, valueOf(p)))
    throw toJs(new IllegalStateException_0('Unknown Multibase type: ' + String.fromCharCode(p)));
  return castTo($get_0(lookup_4, valueOf(p)), 133);
}

function values_12(){
  $clinit_Multibase$Base();
  return stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_io_ipfs_bases_Multibase$Base_2_classLit, 1), $intern_33, 133, 0, [Base1, Base2, Base8, Base10, Base16, Base32_2, Base32Upper, Base32Hex, Base32HexUpper, Base36, Base58Flickr, Base58BTC, Base64_2, Base64Pad]);
}

defineClass(133, 52, {4:1, 57:1, 52:1, 133:1}, Multibase$Base);
_.prefix = 0;
var Base1, Base10, Base16, Base2, Base32_2, Base32Hex, Base32HexUpper, Base32Upper, Base36, Base58BTC, Base58Flickr, Base64_2, Base64Pad, Base8, lookup_4;
var Lpeergos_shared_io_ipfs_bases_Multibase$Base_2_classLit = createForEnum('peergos.shared.io.ipfs.bases', 'Multibase/Base', 133, values_12);
function getBytes_1(string, charset){
  if (string == null) {
    return null;
  }
  return charset.getBytes(string);
}

function newString(bytes, charset){
  return bytes == null?null:$create_0(bytes, 0, bytes.length, charset);
}

function $toCbor_26(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'a', new CborObject$CborBoolean(this$static.resp.a_0 != null));
  $put_6(state, 'r', castTo($map_3(this$static.resp, makeLambdaFunction(LoginResponse$0methodref$toCbor$Type.prototype.apply_0, LoginResponse$0methodref$toCbor$Type, []), makeLambdaFunction(LoginResponse$1methodref$toCbor$Type.prototype.apply_0, LoginResponse$1methodref$toCbor$Type, [])), 7));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function LoginResponse(resp){
  this.resp = resp;
}

function fromCbor_35(cbor){
  var isA, m, val;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor for LoginResponse! ' + cbor));
  m = castTo(cbor, 18);
  isA = (val = castTo(castTo($get_0(m.values_0, new CborObject$CborString('a')), 7), 63) , !!val && val.value_0);
  if (isA)
    return new LoginResponse(new Either(castTo($get_13(m, 'r', makeLambdaFunction(LoginResponse$2methodref$fromCbor$Type.prototype.apply_0, LoginResponse$2methodref$fromCbor$Type, [])), 116), null));
  return new LoginResponse(new Either(null, castTo($get_13(m, 'r', makeLambdaFunction(LoginResponse$3methodref$fromCbor$Type.prototype.apply_0, LoginResponse$3methodref$fromCbor$Type, [])), 305)));
}

defineClass(531, 1, $intern_67, LoginResponse);
_.serialize = function serialize_52(){
  return $toByteArray_2($toCbor_26(this));
}
;
_.toCbor = function toCbor_44(){
  return $toCbor_26(this);
}
;
var Lpeergos_shared_login_LoginResponse_2_classLit = createForClass('peergos.shared.login', 'LoginResponse', 531);
function LoginResponse$0methodref$toCbor$Type(){
}

defineClass(3524, $wnd.Function, $intern_22, LoginResponse$0methodref$toCbor$Type);
_.apply_0 = function apply_364(arg0){
  return castTo(arg0, 7).toCbor();
}
;
function LoginResponse$1methodref$toCbor$Type(){
}

defineClass(3525, $wnd.Function, $intern_22, LoginResponse$1methodref$toCbor$Type);
_.apply_0 = function apply_365(arg0){
  return $toCbor_28(castTo(arg0, 305));
}
;
function LoginResponse$2methodref$fromCbor$Type(){
}

defineClass(3526, $wnd.Function, $intern_22, LoginResponse$2methodref$fromCbor$Type);
_.apply_0 = function apply_366(arg0){
  return $clinit_UserStaticData() , new UserStaticData_0(new PaddedCipherText(fromCbor_9(castTo(arg0, 7))));
}
;
function LoginResponse$3methodref$fromCbor$Type(){
}

defineClass(3527, $wnd.Function, $intern_22, LoginResponse$3methodref$fromCbor$Type);
_.apply_0 = function apply_367(arg0){
  return fromCbor_37(castTo(arg0, 7));
}
;
function $lambda$0_11(this$static, login_1, r_1){
  (checkCriticalNotNull(r_1) , r_1) && $setLoginData(this$static.local, login_1);
  return r_1;
}

function $lambda$1_4(this$static, username_1, authorisedReader_2, auth_3, mfa_4){
  if (this$static.online.testedState.value_0)
    return $thenApply(this$static.target.getLoginData(username_1, authorisedReader_2, auth_3, mfa_4), makeLambdaFunction(OfflineAccountStore$lambda$3$Type.prototype.apply_0, OfflineAccountStore$lambda$3$Type, [this$static, username_1, authorisedReader_2]));
  $updateAsync(this$static.online);
  return $thenApply($getEntryData(this$static.local, username_1), makeLambdaFunction(OfflineAccountStore$0methodref$a$Type.prototype.apply_0, OfflineAccountStore$0methodref$a$Type, []));
}

function $lambda$2_3(this$static, username_1, t_2){
  if (t_2.getMessage().indexOf('Incorrect+password') != -1)
    return errored(new IllegalStateException_0('Incorrect password!'));
  if ($isOfflineException(this$static.online, t_2))
    return $thenApply($getEntryData(this$static.local, username_1), makeLambdaFunction(OfflineAccountStore$1methodref$a$Type.prototype.apply_0, OfflineAccountStore$1methodref$a$Type, []));
  return errored(t_2);
}

function $lambda$3_4(this$static, username_1, authorisedReader_2, res_2){
  res_2.a_0 != null && $setLoginData(this$static.local, new LoginData(username_1, castTo($a(res_2), 116), authorisedReader_2, ($clinit_Optional() , $clinit_Optional() , EMPTY)));
  return res_2;
}

function OfflineAccountStore(target, local, online){
  this.target = target;
  this.local = local;
  this.online = online;
}

defineClass(1008, 1, {}, OfflineAccountStore);
_.addTotpFactor = function addTotpFactor_1(username, identity){
  return $addTotpFactor(this, username, identity);
}
;
_.deleteSecondFactor = function deleteSecondFactor_1(username, credentialId, identity){
  return $deleteSecondFactor(this, username, credentialId, identity);
}
;
_.enableTotpFactor = function enableTotpFactor_1(username, credentialId, code_0, identity){
  return $enableTotpFactor(this, username, credentialId, code_0, identity);
}
;
_.getSecondAuthMethods = function getSecondAuthMethods_1(username, identity){
  return $getSecondAuthMethods(this, username, identity);
}
;
_.registerSecurityKeyComplete = function registerSecurityKeyComplete_1(username, keyName, resp, identity){
  return $registerSecurityKeyComplete(this, username, keyName, resp, identity);
}
;
_.registerSecurityKeyStart = function registerSecurityKeyStart_1(username, identity){
  return $registerSecurityKeyStart(this, username, identity);
}
;
_.setLoginData_0 = function setLoginData_1(login, identity){
  var auth;
  return auth = $signatureOnly(identity.secret, $toByteArray_2($toCbor_79(login))) , $thenApply(this.target.setLoginData_1(login, auth), makeLambdaFunction(OfflineAccountStore$lambda$0$Type.prototype.apply_0, OfflineAccountStore$lambda$0$Type, [this, login]));
}
;
_.addTotpFactor_0 = function addTotpFactor_2(username, auth){
  return this.target.addTotpFactor_0(username, auth);
}
;
_.deleteSecondFactor_0 = function deleteSecondFactor_2(username, credentialId, auth){
  return this.target.deleteSecondFactor_0(username, credentialId, auth);
}
;
_.enableTotpFactor_0 = function enableTotpFactor_2(username, credentialId, code_0, auth){
  return this.target.enableTotpFactor_0(username, credentialId, code_0, auth);
}
;
_.getLoginData = function getLoginData_0(username, authorisedReader, auth, mfa){
  return asyncExceptionally(new OfflineAccountStore$lambda$1$Type(this, username, authorisedReader, auth, mfa), makeLambdaFunction(OfflineAccountStore$lambda$2$Type.prototype.apply_0, OfflineAccountStore$lambda$2$Type, [this, username]));
}
;
_.getSecondAuthMethods_0 = function getSecondAuthMethods_2(username, auth){
  return this.target.getSecondAuthMethods_0(username, auth);
}
;
_.registerSecurityKeyComplete_0 = function registerSecurityKeyComplete_2(username, keyName, resp, auth){
  return this.target.registerSecurityKeyComplete_0(username, keyName, resp, auth);
}
;
_.registerSecurityKeyStart_0 = function registerSecurityKeyStart_2(username, auth){
  return this.target.registerSecurityKeyStart_0(username, auth);
}
;
_.setLoginData_1 = function setLoginData_2(login, auth){
  return $thenApply(this.target.setLoginData_1(login, auth), makeLambdaFunction(OfflineAccountStore$lambda$0$Type.prototype.apply_0, OfflineAccountStore$lambda$0$Type, [this, login]));
}
;
var Lpeergos_shared_login_OfflineAccountStore_2_classLit = createForClass('peergos.shared.login', 'OfflineAccountStore', 1008);
function OfflineAccountStore$0methodref$a$Type(){
}

defineClass(3211, $wnd.Function, $intern_22, OfflineAccountStore$0methodref$a$Type);
_.apply_0 = function apply_368(arg0){
  return new Either(castTo(arg0, 116), null);
}
;
function OfflineAccountStore$1methodref$a$Type(){
}

defineClass(3212, $wnd.Function, $intern_22, OfflineAccountStore$1methodref$a$Type);
_.apply_0 = function apply_369(arg0){
  return new Either(castTo(arg0, 116), null);
}
;
function OfflineAccountStore$lambda$0$Type($$outer_0, login_1){
  this.$$outer_0 = $$outer_0;
  this.login_1 = login_1;
}

defineClass(1323, $wnd.Function, $intern_22, OfflineAccountStore$lambda$0$Type);
_.apply_0 = function apply_370(arg0){
  return $lambda$0_11(this.$$outer_0, this.login_1, arg0);
}
;
function OfflineAccountStore$lambda$1$Type($$outer_0, username_1, authorisedReader_2, auth_3, mfa_4){
  this.$$outer_0 = $$outer_0;
  this.username_1 = username_1;
  this.authorisedReader_2 = authorisedReader_2;
  this.auth_3 = auth_3;
  this.mfa_4 = mfa_4;
}

defineClass(1009, 1, {}, OfflineAccountStore$lambda$1$Type);
_.get_0 = function get_36(){
  return $lambda$1_4(this.$$outer_0, this.username_1, this.authorisedReader_2, this.auth_3, this.mfa_4);
}
;
var Lpeergos_shared_login_OfflineAccountStore$lambda$1$Type_2_classLit = createForClass('peergos.shared.login', 'OfflineAccountStore/lambda$1$Type', 1009);
function OfflineAccountStore$lambda$2$Type($$outer_0, username_1){
  this.$$outer_0 = $$outer_0;
  this.username_1 = username_1;
}

defineClass(3209, $wnd.Function, $intern_22, OfflineAccountStore$lambda$2$Type);
_.apply_0 = function apply_371(arg0){
  return $lambda$2_3(this.$$outer_0, this.username_1, arg0);
}
;
function OfflineAccountStore$lambda$3$Type($$outer_0, username_1, authorisedReader_2){
  this.$$outer_0 = $$outer_0;
  this.username_1 = username_1;
  this.authorisedReader_2 = authorisedReader_2;
}

defineClass(3210, $wnd.Function, $intern_22, OfflineAccountStore$lambda$3$Type);
_.apply_0 = function apply_372(arg0){
  return $lambda$3_4(this.$$outer_0, this.username_1, this.authorisedReader_2, arg0);
}
;
function $clinit_MultiFactorAuthMethod(){
  $clinit_MultiFactorAuthMethod = emptyMethod;
  byValue_5 = new HashMap;
}

function $toCbor_27(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'n', new CborObject$CborString(this$static.name));
  $put_6(state, 'i', new CborObject$CborByteArray(this$static.credentialId));
  $put_6(state, 'c', new CborObject$CborLong($toEpochDay(this$static.created)));
  $put_6(state, 't', new CborObject$CborLong(this$static.type.value));
  $put_6(state, 'e', new CborObject$CborBoolean(this$static.enabled));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function MultiFactorAuthMethod(name_0, credentialId, created, type_0, enabled){
  $clinit_MultiFactorAuthMethod();
  if (name_0.length > 32)
    throw toJs(new IllegalStateException_0('Second factor names must be smaller than 33 characters'));
  this.name = name_0;
  this.credentialId = credentialId;
  this.created = created;
  this.type = type_0;
  this.enabled = enabled;
}

function fromCbor_36(cbor){
  $clinit_MultiFactorAuthMethod();
  var m, val;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor for MultiFactorAuthMethod! ' + cbor));
  m = castTo(cbor, 18);
  return new MultiFactorAuthMethod(castTo(castTo($get_0(m.values_0, new CborObject$CborString('n')), 7), 13).value_0, castTo(castTo($get_0(m.values_0, new CborObject$CborString('i')), 7), 27).value_0, ofEpochDay(castTo(castTo($get_0(m.values_0, new CborObject$CborString('c')), 7), 29).value_0), byValue_6(toInt_0(castTo(castTo($get_0(m.values_0, new CborObject$CborString('t')), 7), 29).value_0)), (val = castTo(castTo($get_0(m.values_0, new CborObject$CborString('e')), 7), 63) , !!val && val.value_0));
}

defineClass(873, 1, $intern_67, MultiFactorAuthMethod);
_.serialize = function serialize_53(){
  return $toByteArray_2($toCbor_27(this));
}
;
_.toCbor = function toCbor_45(){
  return $toCbor_27(this);
}
;
_.toString = function toString_59(){
  return "MultiFactorAuthMethod{uid='" + bytesToHex(this.credentialId) + "'" + ', type=' + this.type + ', enabled=' + this.enabled + '}';
}
;
_.toString_0 = function(){
  return this.toString();
}
;
_.enabled = false;
var byValue_5;
var Lpeergos_shared_login_mfa_MultiFactorAuthMethod_2_classLit = createForClass('peergos.shared.login.mfa', 'MultiFactorAuthMethod', 873);
function $clinit_MultiFactorAuthMethod$Type(){
  $clinit_MultiFactorAuthMethod$Type = emptyMethod;
  TOTP = new MultiFactorAuthMethod$Type('TOTP', 0, 1, false);
  WEBAUTHN = new MultiFactorAuthMethod$Type('WEBAUTHN', 1, 2, true);
}

function MultiFactorAuthMethod$Type(enum$name, enum$ordinal, value_0, hasChallengeValue){
  Enum.call(this, enum$name, enum$ordinal);
  this.value = value_0;
  this.hasChallenge = hasChallengeValue;
  $put(($clinit_MultiFactorAuthMethod() , byValue_5), valueOf_1(value_0), this);
}

function byValue_6(val){
  $clinit_MultiFactorAuthMethod$Type();
  return castTo($get(($clinit_MultiFactorAuthMethod() , byValue_5), valueOf_1(val)), 272);
}

function valueOf_10(name_0){
  $clinit_MultiFactorAuthMethod$Type();
  return valueOf_0(($clinit_MultiFactorAuthMethod$Type$Map() , $MAP_1), name_0);
}

function values_13(){
  $clinit_MultiFactorAuthMethod$Type();
  return stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_login_mfa_MultiFactorAuthMethod$Type_2_classLit, 1), $intern_33, 272, 0, [TOTP, WEBAUTHN]);
}

defineClass(272, 52, {4:1, 57:1, 52:1, 272:1}, MultiFactorAuthMethod$Type);
_.hasChallenge = false;
_.value = 0;
var TOTP, WEBAUTHN;
var Lpeergos_shared_login_mfa_MultiFactorAuthMethod$Type_2_classLit = createForEnum('peergos.shared.login.mfa', 'MultiFactorAuthMethod/Type', 272, values_13);
function $clinit_MultiFactorAuthMethod$Type$Map(){
  $clinit_MultiFactorAuthMethod$Type$Map = emptyMethod;
  $MAP_1 = createValueOfMap(($clinit_MultiFactorAuthMethod$Type() , stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_login_mfa_MultiFactorAuthMethod$Type_2_classLit, 1), $intern_33, 272, 0, [TOTP, WEBAUTHN])));
}

var $MAP_1;
function $toCbor_28(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'm', new CborObject$CborList(this$static.methods));
  $put_6(state, 'c', new CborObject$CborByteArray(this$static.challenge));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function MultiFactorAuthRequest(methods, challenge){
  this.methods = methods;
  this.challenge = challenge;
}

function fromCbor_37(cbor){
  var m;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor for MultiFactorAuthRequest! '));
  m = castTo(cbor, 18);
  return new MultiFactorAuthRequest($getList(m, 'm', makeLambdaFunction(MultiFactorAuthRequest$0methodref$fromCbor$Type.prototype.apply_0, MultiFactorAuthRequest$0methodref$fromCbor$Type, [])), castTo(castTo($get_0(m.values_0, new CborObject$CborString('c')), 7), 27).value_0);
}

defineClass(305, 1, {7:1, 305:1}, MultiFactorAuthRequest);
_.serialize = function serialize_54(){
  return $toByteArray_2($toCbor_28(this));
}
;
_.toCbor = function toCbor_46(){
  return $toCbor_28(this);
}
;
var Lpeergos_shared_login_mfa_MultiFactorAuthRequest_2_classLit = createForClass('peergos.shared.login.mfa', 'MultiFactorAuthRequest', 305);
function MultiFactorAuthRequest$0methodref$fromCbor$Type(){
}

defineClass(2563, $wnd.Function, $intern_22, MultiFactorAuthRequest$0methodref$fromCbor$Type);
_.apply_0 = function apply_373(arg0){
  return fromCbor_36(castTo(arg0, 7));
}
;
function $toCbor_29(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'i', new CborObject$CborByteArray(this$static.credentialId));
  $put_6(state, 'r', castTo($map_3(this$static.response, makeLambdaFunction(MultiFactorAuthResponse$lambda$0$Type.prototype.apply_0, MultiFactorAuthResponse$lambda$0$Type, []), makeLambdaFunction(MultiFactorAuthResponse$lambda$1$Type.prototype.apply_0, MultiFactorAuthResponse$lambda$1$Type, [])), 7));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function MultiFactorAuthResponse(credentialId, response){
  this.credentialId = credentialId;
  this.response = response;
}

function fromCbor_38(cbor){
  var m, response;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor for MultiFactorAuthResponse! ' + cbor));
  m = castTo(cbor, 18);
  response = castTo($get_0(m.values_0, new CborObject$CborString('r')), 7);
  return new MultiFactorAuthResponse(castTo(castTo($get_0(m.values_0, new CborObject$CborString('i')), 7), 27).value_0, instanceOf(response, 13)?new Either(castTo(response, 13).value_0, null):new Either(null, fromCbor_39(response)));
}

defineClass(298, 1, {7:1, 298:1}, MultiFactorAuthResponse);
_.serialize = function serialize_55(){
  return $toByteArray_2($toCbor_29(this));
}
;
_.toCbor = function toCbor_47(){
  return $toCbor_29(this);
}
;
var Lpeergos_shared_login_mfa_MultiFactorAuthResponse_2_classLit = createForClass('peergos.shared.login.mfa', 'MultiFactorAuthResponse', 298);
function MultiFactorAuthResponse$lambda$0$Type(){
}

defineClass(1339, $wnd.Function, $intern_22, MultiFactorAuthResponse$lambda$0$Type);
_.apply_0 = function apply_374(arg0){
  return new CborObject$CborString(castToString(arg0));
}
;
function MultiFactorAuthResponse$lambda$1$Type(){
}

defineClass(1340, $wnd.Function, $intern_22, MultiFactorAuthResponse$lambda$1$Type);
_.apply_0 = function apply_375(arg0){
  return castTo(arg0, 340);
}
;
function TotpKey(credentialId, key){
  this.credentialId = credentialId;
  this.key = key;
}

function base32(in_0){
  return $replaceAll(newString($encode_0(new Base32, in_0), forName('UTF-8')), '=', '');
}

function fromString_1(encoded){
  var base32credid, base32key, endIndex;
  endIndex = encoded.indexOf(':');
  base32credid = encoded.substr(0, endIndex);
  base32key = $substring_0(encoded, endIndex + 1, encoded.length);
  return new TotpKey($decode(new Base32, getBytes_1(base32credid, forName('UTF-8'))), $decode(new Base32, getBytes_1(base32key, forName('UTF-8'))));
}

defineClass(874, 1, {}, TotpKey);
_.encode = function encode_7(){
  return base32(this.credentialId) + ':' + base32(this.key);
}
;
_.getQRCode = function getQRCode(username){
  var base64, base64Data, e, label_0, originalText, png, result;
  label_0 = 'peergos:' + username + '@peergos';
  originalText = 'otpauth://totp/' + label_0 + '?secret=' + $replaceAll(newString($encode_0(new Base32, this.key), forName('UTF-8')), '=', '') + '&issuer=' + 'peergos';
  try {
    result = $encode_3(originalText, ($clinit_BarcodeFormat() , QR_CODE));
    png = encodeToPng(result.width_0, result.height, result);
    base64Data = (base64 = ($clinit_Base64Coder() , encode_0(png, regularMap.encodingMap)) , valueOf_5(base64, 0, base64.length));
    return 'data:image/png;base64,' + base64Data;
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 51)) {
      e = $e0;
      $printStackTraceImpl(e, ($clinit_System() , err_0), '', '');
      return '';
    }
     else 
      throw toJs($e0);
  }
}
;
var ALGORITHM = 'HmacSHA1';
var Lpeergos_shared_login_mfa_TotpKey_2_classLit = createForClass('peergos.shared.login.mfa', 'TotpKey', 874);
function $toCbor_30(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'a', new CborObject$CborByteArray(this$static.authenticatorData));
  $put_6(state, 'c', new CborObject$CborByteArray(this$static.clientDataJson));
  $put_6(state, 's', new CborObject$CborByteArray(this$static.signature));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function WebauthnResponse(authenticatorData, clientDataJson, signature){
  this.authenticatorData = authenticatorData;
  this.clientDataJson = clientDataJson;
  this.signature = signature;
}

function fromCbor_39(cbor){
  var m;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor for WebauthnResponse! ' + cbor));
  m = castTo(cbor, 18);
  return new WebauthnResponse(castTo(castTo($get_0(m.values_0, new CborObject$CborString('a')), 7), 27).value_0, castTo(castTo($get_0(m.values_0, new CborObject$CborString('c')), 7), 27).value_0, castTo(castTo($get_0(m.values_0, new CborObject$CborString('s')), 7), 27).value_0);
}

defineClass(340, 1, {7:1, 340:1}, WebauthnResponse);
_.serialize = function serialize_56(){
  return $toByteArray_2($toCbor_30(this));
}
;
_.toCbor = function toCbor_48(){
  return $toCbor_30(this);
}
;
var Lpeergos_shared_login_mfa_WebauthnResponse_2_classLit = createForClass('peergos.shared.login.mfa', 'WebauthnResponse', 340);
function $toCbor_31(this$static){
  var result, transformed;
  result = new TreeMap;
  $put_6(result, 'f', new CborObject$CborString(this$static.filename));
  $put_6(result, 'd', new CborObject$CborByteArray(this$static.data));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(result), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function Attachment_0(filename, attachment){
  this.filename = filename;
  this.data = attachment;
}

function fromCbor_40(cbor){
  var data_0, filename, m;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Incorrect cbor: ' + cbor));
  m = castTo(cbor, 18);
  filename = castTo(castTo($get_0(m.values_0, new CborObject$CborString('f')), 7), 13).value_0;
  data_0 = castTo(castTo($get_0(m.values_0, new CborObject$CborString('d')), 7), 27).value_0;
  return new Attachment_0(filename, data_0);
}

defineClass(401, 1, {7:1, 401:1}, Attachment_0);
_.serialize = function serialize_57(){
  return $toByteArray_2($toCbor_31(this));
}
;
_.toCbor = function toCbor_49(){
  return $toCbor_31(this);
}
;
var Lpeergos_shared_messaging_Attachment_2_classLit = createForClass('peergos.shared.messaging', 'Attachment', 401);
function $toCbor_32(this$static){
  var result, transformed;
  result = new TreeMap;
  $put_6(result, 'a', this$static.attachment);
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(result), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function AttachmentRequest(attachment){
  this.attachment = attachment;
}

function fromCbor_41(cbor){
  var attachment, m;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Incorrect cbor: ' + cbor));
  m = castTo(cbor, 18);
  attachment = castTo($get_13(m, 'a', makeLambdaFunction(AttachmentRequest$0methodref$fromCbor$Type.prototype.apply_0, AttachmentRequest$0methodref$fromCbor$Type, [])), 401);
  return new AttachmentRequest(attachment);
}

defineClass(875, 1, $intern_67, AttachmentRequest);
_.serialize = function serialize_58(){
  return $toByteArray_2($toCbor_32(this));
}
;
_.toCbor = function toCbor_50(){
  return $toCbor_32(this);
}
;
var Lpeergos_shared_messaging_AttachmentRequest_2_classLit = createForClass('peergos.shared.messaging', 'AttachmentRequest', 875);
function AttachmentRequest$0methodref$fromCbor$Type(){
}

defineClass(2710, $wnd.Function, $intern_22, AttachmentRequest$0methodref$fromCbor$Type);
_.apply_0 = function apply_376(arg0){
  return fromCbor_40(castTo(arg0, 7));
}
;
function $addToRecent(this$static, m){
  var updated;
  updated = new ArrayList_1(this$static.recentMessages);
  updated.array.length >= 10 && $remove_1(updated, 0);
  updated.array[updated.array.length] = m;
  return new Chat(this$static.chatUid, this$static.host, this$static.current, this$static.members, this$static.groupState, updated);
}

function $applyMessage(this$static, signed, chatUid, userIdentity, ipfs, crypto_0){
  var afterInvite, author, chatId, chatIdentity, content_0, existing, fileRefs, host, identity, indexIntoParent, invite, join_0, joinMsg, msg, newHost, newIdentity, newMember, rem, update, updated, updatedMember, username;
  msg = signed.msg;
  author = castTo($get_3(this$static.members, msg.author), 76);
  switch (msg.payload.type().ordinal_0) {
    case 1:
      {
        invite = castTo(msg.payload, 322);
        newMember = invite.recipientId;
        if ($containsKey_1(this$static.members, newMember))
          throw toJs(new IllegalStateException_0('Id already exists in this chat!'));
        if (!$equals_19(new Id_1(copyOfRange_1(newMember.id_0, 0, newMember.id_0.length - 1)), author.id_0))
          throw toJs(new IllegalStateException_0('Invalid invite Id!'));
        updated = new HashMap_1(this$static.members);
        $put(updated, author.id_0, $incrementInvited(castTo($get_3(this$static.members, author.id_0), 76)));
        indexIntoParent = $getMember_0(this$static, new Id_1(copyOfRange_1(newMember.id_0, 0, newMember.id_0.length - 1))).messagesMergedUpto;
        username = invite.username;
        identity = invite.identity;
        host = castTo($get_3(this$static.members, this$static.host), 76);
        if ($equals_0(host.username, username) && host.removed) {
          newIdentity = generateChatIdentity(crypto_0);
          chatId = build_4(userIdentity, newIdentity.chatIdentity.publicKeyHash);
          newHost = new Member(username, newMember, identity, indexIntoParent);
          $put_3(updated.hashCodeMap, newMember, newHost);
          afterInvite = new ChatUpdate($addToRecent(new Chat(this$static.chatUid, this$static.host, this$static.current, updated, this$static.groupState, this$static.recentMessages), msg), new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_messaging_SignedMessage_2_classLit, 1), $intern_0, 137, 0, [signed])), ($clinit_Collections() , $clinit_Collections() , EMPTY_LIST), (null , EMPTY_SET));
          joinMsg = new Join(host.username, host.identity, chatId, newIdentity.chatIdPublic);
          return $thenCompose($thenApply($bareHash(crypto_0.hasher, $toByteArray_2($toCbor_36(signed.msg))), makeLambdaFunction(Chat$1methodref$ctor$Type.prototype.apply_0, Chat$1methodref$ctor$Type, [])), makeLambdaFunction(Chat$lambda$7$Type.prototype.apply_0, Chat$lambda$7$Type, [afterInvite, newHost, joinMsg, userIdentity, ipfs, crypto_0]));
        }
        $put(updated, newMember, new Member(username, newMember, identity, indexIntoParent));
        return new CompletableFuture_0(new ChatUpdate($addToRecent(new Chat(this$static.chatUid, this$static.host, this$static.current, updated, this$static.groupState, this$static.recentMessages), msg), new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_messaging_SignedMessage_2_classLit, 1), $intern_0, 137, 0, [signed])), ($clinit_Collections() , $clinit_Collections() , EMPTY_LIST), (null , EMPTY_SET)));
      }

    case 0:
      if (author.chatIdentity.ref == null) {
        join_0 = castTo(msg.payload, 282);
        chatIdentity = join_0.chatIdentity;
        if (!$equals_13(chatIdentity.ownedKey, author.identity))
          throw toJs(new IllegalStateException_0("Identity keys don't match!"));
        return $thenApply($getAndVerifyOwner(chatIdentity, author.identity, ipfs), makeLambdaFunction(Chat$lambda$9$Type.prototype.apply_0, Chat$lambda$9$Type, [this$static, author, chatIdentity, msg, signed]));
      }

      break;
    case 3:
      {
        update = castTo(msg.payload, 250);
        existing = castTo($get_3(this$static.groupState, update.key), 230);
        if (!existing || (!$equals_0(update.key, 'admins') || $getAdmins(this$static).contains(author.username)) && ($isBeforeOrEqual(existing.updateTimestamp, msg.timestamp) || $isConcurrentWith(existing.updateTimestamp, msg.timestamp) && $compareTo_17(msg.author, existing.author) < 0)) {
          updated = new HashMap_1(this$static.groupState);
          $putStringValue(updated, update.key, new GroupProperty(msg.author, msg.timestamp, update.value));
          return new CompletableFuture_0(new ChatUpdate($addToRecent(new Chat(this$static.chatUid, this$static.host, this$static.current, this$static.members, updated, this$static.recentMessages), msg), new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_messaging_SignedMessage_2_classLit, 1), $intern_0, 137, 0, [signed])), ($clinit_Collections() , $clinit_Collections() , EMPTY_LIST), (null , EMPTY_SET)));
        }
        break;
      }

    case 2:
      {
        if ($equals_19(msg.author, this$static.host))
          break;
        content_0 = castTo(msg.payload, 222);
        fileRefs = castTo($collect_0($flatMap_0(content_0.body.stream(), makeLambdaFunction(Chat$lambda$10$Type.prototype.apply_0, Chat$lambda$10$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
        return new CompletableFuture_0(new ChatUpdate($addToRecent(this$static, msg), new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_messaging_SignedMessage_2_classLit, 1), $intern_0, 137, 0, [signed])), fileRefs, ($clinit_Collections() , $clinit_Collections() , EMPTY_SET)));
      }

    case 7:
      {
        rem = castTo(msg.payload, 310);
        if (!$equals_0(rem.chatUid, chatUid))
          return new CompletableFuture_0(new ChatUpdate(this$static, ($clinit_Collections() , $clinit_Collections() , EMPTY_LIST), (null , EMPTY_LIST), (null , EMPTY_SET)));
        if ($equals_19(rem.memberToRemove, msg.author) || $getAdmins(this$static).contains(author.username)) {
          username = $getMember_0(this$static, rem.memberToRemove).username;
          updatedMember = $removed(castTo($get_3(this$static.members, rem.memberToRemove), 76));
          updated = new HashMap_1(this$static.members);
          $put(updated, rem.memberToRemove, updatedMember);
          return new CompletableFuture_0(new ChatUpdate($withMembers($addToRecent(this$static, msg), updated), new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_messaging_SignedMessage_2_classLit, 1), $intern_0, 137, 0, [signed])), ($clinit_Collections() , $clinit_Collections() , EMPTY_LIST), $equals_0(username, castTo($get_3(this$static.members, this$static.host), 76).username)?(null , EMPTY_SET):singleton(username)));
        }
        break;
      }

    case 4:
      {
        content_0 = castTo(msg.payload, 311);
        fileRefs = castTo($collect_0($flatMap_0(content_0.content.body.stream(), makeLambdaFunction(Chat$lambda$11$Type.prototype.apply_0, Chat$lambda$11$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
        return new CompletableFuture_0(new ChatUpdate($addToRecent(this$static, msg), new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_messaging_SignedMessage_2_classLit, 1), $intern_0, 137, 0, [signed])), fileRefs, ($clinit_Collections() , $clinit_Collections() , EMPTY_SET)));
      }

  }
  return new CompletableFuture_0(new ChatUpdate($addToRecent(this$static, msg), new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_messaging_SignedMessage_2_classLit, 1), $intern_0, 137, 0, [signed])), ($clinit_Collections() , $clinit_Collections() , EMPTY_LIST), (null , EMPTY_SET)));
}

function $copy(this$static, host){
  var clonedMembers;
  if (!$containsKey_1(this$static.members, host.id_0))
    throw toJs(new IllegalStateException_0('Only an invited member can mirror a conversation!'));
  clonedMembers = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator($entrySet(this$static.members), 1)), toMap(makeLambdaFunction(Chat$lambda$19$Type.prototype.apply_0, Chat$lambda$19$Type, []), makeLambdaFunction(Chat$lambda$20$Type.prototype.apply_0, Chat$lambda$20$Type, []), new Collectors$lambda$44$Type, new Collectors$22methodref$ctor$Type)), 68);
  clonedMembers.put(host.id_0, new Member_0(host.username, host.id_0, host.identity, host.chatIdentity, host.messagesMergedUpto, host.membersInvited, host.removed));
  return new Chat(this$static.chatUid, host.id_0, this$static.current, clonedMembers, new HashMap_1(this$static.groupState), new ArrayList_1(this$static.recentMessages));
}

function $equals_18(this$static, o){
  var chat;
  if (maskUndefined(this$static) === maskUndefined(o))
    return true;
  if (o == null || Lpeergos_shared_messaging_Chat_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  chat = castTo(o, 145);
  return this$static.chatUid == chat.chatUid && equals_28(this$static.host, chat.host) && equals_28(this$static.current, chat.current) && equals_28(this$static.members, chat.members) && equals_28(this$static.groupState, chat.groupState) && equals_28(this$static.recentMessages, chat.recentMessages);
}

function $getAdmins(this$static){
  var current;
  current = castTo(this$static.groupState.map_0.get('admins'), 230);
  if (!current)
    return $clinit_Collections() , $clinit_Collections() , EMPTY_SET;
  return new HashSet_1(new Arrays$ArrayList($split(current.value_0, ',')));
}

function $getMember(this$static, username){
  var matching;
  matching = castTo($collect_0($filter(new StreamImpl(null, new Spliterators$IteratorSpliterator($values(this$static.members), 0)), new Chat$lambda$0$Type(username)), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  return castTo($orElse($findFirst($filter(matching.stream(), new Chat$lambda$1$Type)), castTo(matching.getAtIndex(0), 76)), 76);
}

function $getMember_0(this$static, id_0){
  return castTo($get_3(this$static.members, id_0), 76);
}

function $getTitle(this$static){
  var prop;
  prop = castTo(this$static.groupState.map_0.get('title'), 230);
  if (prop) {
    return prop.value_0;
  }
  return '';
}

function $host(this$static){
  return castTo($get_3(this$static.members, this$static.host), 76);
}

function $inviteMembers(this$static, usernames, identities, ourChatIdentity, userIdentity, ourStore, ipfs, crypto_0){
  var range;
  range = castTo(range_0(0, usernames.size()).mapToObj(new Chat$lambda$21$Type).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  return reduceAll(range, new ChatUpdate_0(this$static, ($clinit_Collections() , $clinit_Collections() , EMPTY_LIST), (null , EMPTY_LIST), (null , EMPTY_SET), ($clinit_Optional() , $clinit_Optional() , EMPTY)), new Chat$lambda$22$Type(usernames, identities, ourChatIdentity, userIdentity, ourStore, ipfs, crypto_0), new Chat$lambda$23$Type);
}

function $join_0(this$static, host, chatId, chatIdPublic, identity, ourStore, ipfs, crypto_0){
  var joinMsg;
  joinMsg = new Join(host.username, host.identity, chatId, chatIdPublic);
  return $sendMessage_0($withTime(this$static, $withMember(this$static.current, host.id_0)), joinMsg, identity, identity, ourStore, ipfs, crypto_0);
}

function $lambda$12_2(this$static, chatUid_1, mirrorHostId_2, userIdentity_3, ipfs_4, crypto_5, newMessages_5){
  return reduceAll(newMessages_5, new ChatUpdate_0(this$static, ($clinit_Collections() , $clinit_Collections() , EMPTY_LIST), (null , EMPTY_LIST), (null , EMPTY_SET), ($clinit_Optional() , $clinit_Optional() , EMPTY)), new Chat$lambda$13$Type(chatUid_1, mirrorHostId_2, userIdentity_3, ipfs_4, crypto_5), new Chat$lambda$14$Type);
}

function $lambda$17_3(this$static, signed_1, chatUid_2, userIdentity_3, ipfs_4, crypto_5, signerOpt_5){
  if (signerOpt_5.ref == null)
    throw toJs(new IllegalStateException_0("Couldn't retrieve public signing key!"));
  checkCriticalElement(signerOpt_5.ref != null);
  $unsignMessage(castTo(signerOpt_5.ref, 233), concat_0(signed_1.signature, $toByteArray_2($toCbor_36(signed_1.msg))));
  return $applyMessage(this$static, signed_1, chatUid_2, userIdentity_3, ipfs_4, crypto_5);
}

function $lambda$5_4(this$static, body_1, signer_2, userIdentity_3, ipfs_4, crypto_5, recentRefs_5){
  return $sendMessage(this$static, body_1, signer_2, userIdentity_3, recentRefs_5, ipfs_4, crypto_5);
}

function $lambda$9_4(this$static, author_1, chatIdentity_2, msg_3, signed_4){
  var updated;
  updated = new HashMap_1(this$static.members);
  $put(updated, author_1.id_0, new Member_0(author_1.username, author_1.id_0, author_1.identity, ($clinit_Optional() , new Optional(checkCriticalNotNull(chatIdentity_2))), author_1.messagesMergedUpto, author_1.membersInvited, author_1.removed));
  return new ChatUpdate($addToRecent(new Chat(this$static.chatUid, this$static.host, this$static.current, updated, this$static.groupState, this$static.recentMessages), msg_3), new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_messaging_SignedMessage_2_classLit, 1), $intern_0, 137, 0, [signed_4])), ($clinit_Collections() , $clinit_Collections() , EMPTY_LIST), (null , EMPTY_SET));
}

function $merge_1(this$static, chatUid, mirrorHostId, userIdentity, mirrorStore, ipfs, crypto_0){
  var host;
  host = castTo($get_3(this$static.members, mirrorHostId), 76);
  return $thenCompose($getMessagesFrom(mirrorStore, host.messagesMergedUpto), makeLambdaFunction(Chat$lambda$12$Type.prototype.apply_0, Chat$lambda$12$Type, [this$static, chatUid, mirrorHostId, userIdentity, ipfs, crypto_0]));
}

function $mergeMessage(this$static, chatUid, signed, host, userIdentity, ipfs, crypto_0){
  var author, msg, updated;
  author = castTo($get_3(this$static.members, signed.msg.author), 76);
  msg = signed.msg;
  if (!$isBeforeOrEqual(msg.timestamp, this$static.current) && !author.removed) {
    return $thenApply($thenCompose($thenCompose(author.chatIdentity.ref != null?$getAndVerifyOwner(castTo($get_6(author.chatIdentity), 219), author.identity, ipfs):new CompletableFuture_0(author.identity), makeLambdaFunction(Chat$lambda$16$Type.prototype.apply_0, Chat$lambda$16$Type, [ipfs])), makeLambdaFunction(Chat$lambda$17$Type.prototype.apply_0, Chat$lambda$17$Type, [this$static, signed, chatUid, userIdentity, ipfs, crypto_0])), makeLambdaFunction(Chat$lambda$18$Type.prototype.apply_0, Chat$lambda$18$Type, [msg, host]));
  }
  return new CompletableFuture_0(new ChatUpdate_0((updated = new HashMap_1(this$static.members) , $put(updated, host.id_0, new Member_0(host.username, host.id_0, host.identity, host.chatIdentity, add_1(host.messagesMergedUpto, 1), host.membersInvited, host.removed)) , new Chat(this$static.chatUid, this$static.host, this$static.current, updated, this$static.groupState, this$static.recentMessages)), ($clinit_Collections() , $clinit_Collections() , EMPTY_LIST), (null , EMPTY_LIST), (null , EMPTY_SET), ($clinit_Optional() , $clinit_Optional() , EMPTY)));
}

function $mergeMessageTimestamp(this$static, timestamp, source){
  var newTime, updated;
  newTime = $merge_2(this$static.current, timestamp);
  updated = new HashMap_1(this$static.members);
  $put(updated, source.id_0, $incrementMessages(castTo($get_3(this$static.members, source.id_0), 76)));
  $put(updated, this$static.host, $incrementMessages(castTo($get_3(this$static.members, this$static.host), 76)));
  return new Chat(this$static.chatUid, this$static.host, newTime, updated, this$static.groupState, this$static.recentMessages);
}

function $sendMessage(this$static, body_0, signer, userIdentity, recentRefs, ipfs, crypto_0){
  var msg, msgTime, signature, signed;
  msgTime = $increment(this$static.current, this$static.host);
  msg = new MessageEnvelope(this$static.host, msgTime, ($clinit_ZoneOffset() , $clinit_LocalDateTime() , now_4()), recentRefs, body_0);
  signature = $signatureOnly(signer.secret, $toByteArray_2($toCbor_36(msg)));
  signed = new SignedMessage(signature, msg);
  return $mergeMessage(this$static, this$static.chatUid, signed, castTo($get_3(this$static.members, this$static.host), 76), userIdentity, ipfs, crypto_0);
}

function $sendMessage_0(this$static, body_0, signer, userIdentity, store, ipfs, crypto_0){
  var nonEmpty;
  nonEmpty = gt(castTo($get_3(this$static.members, this$static.host), 76).messagesMergedUpto, 0);
  return $thenCompose($thenCompose(nonEmpty?$getMessages(store, sub_1(castTo($get_3(this$static.members, this$static.host), 76).messagesMergedUpto, 1), castTo($get_3(this$static.members, this$static.host), 76).messagesMergedUpto):new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_LIST)), makeLambdaFunction(Chat$lambda$2$Type.prototype.apply_0, Chat$lambda$2$Type, [crypto_0])), makeLambdaFunction(Chat$lambda$5$Type.prototype.apply_0, Chat$lambda$5$Type, [this$static, body_0, signer, userIdentity, ipfs, crypto_0]));
}

function $toCbor_33(this$static){
  var result, transformed, transformed0;
  result = new TreeMap;
  $put_6(result, 'v', new CborObject$CborLong(0));
  $put_6(result, 'i', new CborObject$CborString(this$static.chatUid));
  $put_6(result, 'h', this$static.host);
  $put_6(result, 'c', this$static.current);
  $put_6(result, 'm', new CborObject$CborList_0(this$static.members));
  $put_6(result, 'g', (transformed0 = castTo($collect_0(castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator($entrySet(this$static.groupState), 1)), toMap(makeLambdaFunction(Chat$4methodref$getKey$Type.prototype.apply_0, Chat$4methodref$getKey$Type, []), makeLambdaFunction(Chat$5methodref$getValue$Type.prototype.apply_0, Chat$5methodref$getValue$Type, []), new Collectors$lambda$44$Type, new Collectors$22methodref$ctor$Type)), 68).entrySet_0().stream(), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed0)));
  $put_6(result, 'r', new CborObject$CborList(this$static.recentMessages));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(result), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function $withHost(this$static, host){
  return new Chat(this$static.chatUid, host, this$static.current, this$static.members, this$static.groupState, this$static.recentMessages);
}

function $withMembers(this$static, updated){
  return new Chat(this$static.chatUid, this$static.host, this$static.current, updated, this$static.groupState, this$static.recentMessages);
}

function $withTime(this$static, newTime){
  return new Chat(this$static.chatUid, this$static.host, newTime, this$static.members, this$static.groupState, this$static.recentMessages);
}

function Chat(chatUid, host, current, members, groupState, recentMessages){
  this.chatUid = chatUid;
  this.host = host;
  this.current = current;
  this.members = ($clinit_Collections() , new Collections$UnmodifiableMap(members));
  this.groupState = new Collections$UnmodifiableMap(groupState);
  this.recentMessages = instanceOf(recentMessages, 450)?new Collections$UnmodifiableRandomAccessList(recentMessages):new Collections$UnmodifiableList(recentMessages);
}

function createNew(uid, username, identity){
  var creator, groupState, members, us, zero;
  creator = new Id_0;
  us = new Member(username, creator, identity, 0);
  members = new HashMap;
  $put_3(members.hashCodeMap, creator, us);
  zero = init_1(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_messaging_Id_2_classLit, 1), $intern_0, 103, 0, [us.id_0])));
  groupState = new HashMap;
  return new Chat(uid, creator, zero, members, groupState, new ArrayList);
}

function fromCbor_42(cbor){
  var chatUid, current, group, host, m, members, recent;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Incorrect cbor: ' + cbor));
  m = castTo(cbor, 18);
  castTo(castTo($get_0(m.values_0, new CborObject$CborString('v')), 7), 29);
  chatUid = castTo(castTo($get_0(m.values_0, new CborObject$CborString('i')), 7), 13).value_0;
  host = castTo($get_13(m, 'h', makeLambdaFunction(Chat$6methodref$fromCbor$Type.prototype.apply_0, Chat$6methodref$fromCbor$Type, [])), 103);
  current = castTo($get_13(m, 'c', makeLambdaFunction(Chat$7methodref$fromCbor$Type.prototype.apply_0, Chat$7methodref$fromCbor$Type, [])), 194);
  members = $getListMap(m, makeLambdaFunction(Chat$8methodref$fromCbor$Type.prototype.apply_0, Chat$8methodref$fromCbor$Type, []), makeLambdaFunction(Chat$9methodref$fromCbor$Type.prototype.apply_0, Chat$9methodref$fromCbor$Type, []));
  group = $getMap_0(m, makeLambdaFunction(Chat$10methodref$getString$Type.prototype.apply_0, Chat$10methodref$getString$Type, []), makeLambdaFunction(Chat$11methodref$fromCbor$Type.prototype.apply_0, Chat$11methodref$fromCbor$Type, []));
  recent = new ArrayList_1($getList(m, 'r', makeLambdaFunction(Chat$12methodref$fromCbor$Type.prototype.apply_0, Chat$12methodref$fromCbor$Type, [])));
  return new Chat(chatUid, host, current, members, group, recent);
}

function generateChatIdentity(crypto_0){
  var chatIdWithHash, chatIdentity, preHash;
  chatIdentity = random_3(crypto_0.random, crypto_0.signer);
  preHash = hashKey(chatIdentity.publicSigningKey);
  chatIdWithHash = new SigningPrivateKeyAndPublicHash(preHash, chatIdentity.secretSigningKey);
  return new PrivateChatState(chatIdWithHash, chatIdentity.publicSigningKey, ($clinit_Collections() , $clinit_Collections() , EMPTY_SET));
}

function lambda$0_6(username_0, m_1){
  return $equals_0(m_1.username, username_0);
}

function lambda$13_0(chatUid_0, mirrorHostId_1, userIdentity_2, ipfs_3, crypto_4, u_5, msg_6){
  return $thenApply($mergeMessage(u_5.state, chatUid_0, msg_6, $getMember_0(u_5.state, mirrorHostId_1), userIdentity_2, ipfs_3, crypto_4), makeLambdaFunction(Chat$3methodref$apply$Type.prototype.apply_0, Chat$3methodref$apply$Type, [u_5]));
}

function lambda$16_2(ipfs_0, hash_1){
  return ipfs_0.getSigningKey(hash_1, hash_1);
}

function lambda$18_1(msg_0, host_1, u_2){
  return $withState_0(u_2, $mergeMessageTimestamp(u_2.state, msg_0.timestamp, host_1));
}

function lambda$2_3(crypto_0, recent_1){
  return combineAllInOrder(castTo($collect_0($map_0(recent_1.stream(), makeLambdaFunction(Chat$lambda$3$Type.prototype.apply_0, Chat$lambda$3$Type, [crypto_0])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 54));
}

function lambda$22_0(usernames_0, identities_1, ourChatIdentity_2, userIdentity_3, ourStore_4, ipfs_5, crypto_6, u_7, i_8){
  var identity, invite, newMember, us, username;
  username = castToString(usernames_0.getAtIndex(i_8.value_0));
  identity = castTo(identities_1.getAtIndex(i_8.value_0), 55);
  us = $host(u_7.state);
  newMember = $fork(u_7.state.host, us.membersInvited);
  invite = new Invite(username, identity, newMember);
  $withMember(u_7.state.current, newMember);
  return $sendMessage_0(u_7.state, invite, ourChatIdentity_2, userIdentity_3, ourStore_4, ipfs_5, crypto_6);
}

function lambda$3_1(crypto_0, s_1){
  return $thenApply($bareHash(crypto_0.hasher, $toByteArray_2($toCbor_36(s_1.msg))), makeLambdaFunction(Chat$0methodref$ctor$Type.prototype.apply_0, Chat$0methodref$ctor$Type, []));
}

function lambda$7_2(afterInvite_0, newHost_1, joinMsg_2, userIdentity_3, ipfs_4, crypto_5, ref_6){
  return $thenApply($sendMessage($withHost($withTime(afterInvite_0.state, $withMember(afterInvite_0.state.current, newHost_1.id_0)), newHost_1.id_0), joinMsg_2, userIdentity_3, userIdentity_3, new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_messaging_MessageRef_2_classLit, 1), $intern_0, 152, 0, [ref_6])), ipfs_4, crypto_5), makeLambdaFunction(Chat$2methodref$apply$Type.prototype.apply_0, Chat$2methodref$apply$Type, [afterInvite_0]));
}

defineClass(145, 1, {7:1, 145:1}, Chat);
_.serialize = function serialize_59(){
  return $toByteArray_2($toCbor_33(this));
}
;
_.equals_0 = function equals_65(o){
  return $equals_18(this, o);
}
;
_.hashCode_1 = function hashCode_63(){
  return hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.chatUid, this.host, this.current, this.members, this.groupState, this.recentMessages]));
}
;
_.toCbor = function toCbor_51(){
  return $toCbor_33(this);
}
;
var Lpeergos_shared_messaging_Chat_2_classLit = createForClass('peergos.shared.messaging', 'Chat', 145);
function Chat$0methodref$ctor$Type(){
}

defineClass(2862, $wnd.Function, $intern_22, Chat$0methodref$ctor$Type);
_.apply_0 = function apply_377(arg0){
  return new MessageRef(castTo(arg0, 58));
}
;
function Chat$10methodref$getString$Type(){
}

defineClass(2858, $wnd.Function, $intern_22, Chat$10methodref$getString$Type);
_.apply_0 = function apply_378(arg0){
  return castTo(castTo(arg0, 7), 13).value_0;
}
;
function Chat$11methodref$fromCbor$Type(){
}

defineClass(2859, $wnd.Function, $intern_22, Chat$11methodref$fromCbor$Type);
_.apply_0 = function apply_379(arg0){
  return fromCbor_43(castTo(arg0, 7));
}
;
function Chat$12methodref$fromCbor$Type(){
}

defineClass(2860, $wnd.Function, $intern_22, Chat$12methodref$fromCbor$Type);
_.apply_0 = function apply_380(arg0){
  return fromCbor_46(castTo(arg0, 7));
}
;
function Chat$1methodref$ctor$Type(){
}

defineClass(2841, $wnd.Function, $intern_22, Chat$1methodref$ctor$Type);
_.apply_0 = function apply_381(arg0){
  return new MessageRef(castTo(arg0, 58));
}
;
function Chat$2methodref$apply$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2863, $wnd.Function, $intern_22, Chat$2methodref$apply$Type);
_.apply_0 = function apply_382(arg0){
  return $apply_6(this.$$outer_0, castTo(arg0, 113));
}
;
function Chat$3methodref$apply$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2864, $wnd.Function, $intern_22, Chat$3methodref$apply$Type);
_.apply_0 = function apply_383(arg0){
  return $apply_6(this.$$outer_0, castTo(arg0, 113));
}
;
function Chat$4methodref$getKey$Type(){
}

defineClass(2852, $wnd.Function, $intern_22, Chat$4methodref$getKey$Type);
_.apply_0 = function apply_384(arg0){
  return castTo(arg0, 40).getKey();
}
;
function Chat$5methodref$getValue$Type(){
}

defineClass(2853, $wnd.Function, $intern_22, Chat$5methodref$getValue$Type);
_.apply_0 = function apply_385(arg0){
  return castTo(arg0, 40).getValue();
}
;
function Chat$6methodref$fromCbor$Type(){
}

defineClass(2854, $wnd.Function, $intern_22, Chat$6methodref$fromCbor$Type);
_.apply_0 = function apply_386(arg0){
  return fromCbor_44(castTo(arg0, 7));
}
;
function Chat$7methodref$fromCbor$Type(){
}

defineClass(2855, $wnd.Function, $intern_22, Chat$7methodref$fromCbor$Type);
_.apply_0 = function apply_387(arg0){
  return fromCbor_53(castTo(arg0, 7));
}
;
function $apply_4(arg0){
  return fromCbor_44(castTo(arg0, 7));
}

function Chat$8methodref$fromCbor$Type(){
}

defineClass(2856, $wnd.Function, $intern_22, Chat$8methodref$fromCbor$Type);
_.apply_0 = function apply_388(arg0){
  return $apply_4(arg0);
}
;
function $apply_5(arg0){
  return fromCbor_45(castTo(arg0, 7));
}

function Chat$9methodref$fromCbor$Type(){
}

defineClass(2857, $wnd.Function, $intern_22, Chat$9methodref$fromCbor$Type);
_.apply_0 = function apply_389(arg0){
  return $apply_5(arg0);
}
;
function Chat$lambda$0$Type(username_0){
  this.username_0 = username_0;
}

defineClass(893, 1, {}, Chat$lambda$0$Type);
_.test_0 = function test_9(arg0){
  return lambda$0_6(this.username_0, arg0);
}
;
var Lpeergos_shared_messaging_Chat$lambda$0$Type_2_classLit = createForClass('peergos.shared.messaging', 'Chat/lambda$0$Type', 893);
function Chat$lambda$1$Type(){
}

defineClass(894, 1, {}, Chat$lambda$1$Type);
_.test_0 = function test_10(arg0){
  return !castTo(arg0, 76).removed;
}
;
var Lpeergos_shared_messaging_Chat$lambda$1$Type_2_classLit = createForClass('peergos.shared.messaging', 'Chat/lambda$1$Type', 894);
function Chat$lambda$10$Type(){
}

defineClass(2844, $wnd.Function, $intern_22, Chat$lambda$10$Type);
_.apply_0 = function apply_390(arg0){
  return $stream(castTo(arg0, 448).reference());
}
;
function Chat$lambda$11$Type(){
}

defineClass(2845, $wnd.Function, $intern_22, Chat$lambda$11$Type);
_.apply_0 = function apply_391(arg0){
  return $stream(castTo(arg0, 448).reference());
}
;
function Chat$lambda$12$Type($$outer_0, chatUid_1, mirrorHostId_2, userIdentity_3, ipfs_4, crypto_5){
  this.$$outer_0 = $$outer_0;
  this.chatUid_1 = chatUid_1;
  this.mirrorHostId_2 = mirrorHostId_2;
  this.userIdentity_3 = userIdentity_3;
  this.ipfs_4 = ipfs_4;
  this.crypto_5 = crypto_5;
}

defineClass(2846, $wnd.Function, $intern_22, Chat$lambda$12$Type);
_.apply_0 = function apply_392(arg0){
  return $lambda$12_2(this.$$outer_0, this.chatUid_1, this.mirrorHostId_2, this.userIdentity_3, this.ipfs_4, this.crypto_5, arg0);
}
;
function Chat$lambda$13$Type(chatUid_0, mirrorHostId_1, userIdentity_2, ipfs_3, crypto_4){
  this.chatUid_0 = chatUid_0;
  this.mirrorHostId_1 = mirrorHostId_1;
  this.userIdentity_2 = userIdentity_2;
  this.ipfs_3 = ipfs_3;
  this.crypto_4 = crypto_4;
}

defineClass(895, 1, $intern_34, Chat$lambda$13$Type);
_.apply_1 = function apply_393(arg0, arg1){
  return lambda$13_0(this.chatUid_0, this.mirrorHostId_1, this.userIdentity_2, this.ipfs_3, this.crypto_4, arg0, arg1);
}
;
var Lpeergos_shared_messaging_Chat$lambda$13$Type_2_classLit = createForClass('peergos.shared.messaging', 'Chat/lambda$13$Type', 895);
function Chat$lambda$14$Type(){
}

defineClass(896, 1, $intern_34, Chat$lambda$14$Type);
_.apply_1 = function apply_394(arg0, arg1){
  return $apply_6(castTo(arg0, 113), castTo(arg1, 113));
}
;
var Lpeergos_shared_messaging_Chat$lambda$14$Type_2_classLit = createForClass('peergos.shared.messaging', 'Chat/lambda$14$Type', 896);
function Chat$lambda$16$Type(ipfs_0){
  this.ipfs_0 = ipfs_0;
}

defineClass(2847, $wnd.Function, $intern_22, Chat$lambda$16$Type);
_.apply_0 = function apply_395(arg0){
  return lambda$16_2(this.ipfs_0, arg0);
}
;
function Chat$lambda$17$Type($$outer_0, signed_1, chatUid_2, userIdentity_3, ipfs_4, crypto_5){
  this.$$outer_0 = $$outer_0;
  this.signed_1 = signed_1;
  this.chatUid_2 = chatUid_2;
  this.userIdentity_3 = userIdentity_3;
  this.ipfs_4 = ipfs_4;
  this.crypto_5 = crypto_5;
}

defineClass(2848, $wnd.Function, $intern_22, Chat$lambda$17$Type);
_.apply_0 = function apply_396(arg0){
  return $lambda$17_3(this.$$outer_0, this.signed_1, this.chatUid_2, this.userIdentity_3, this.ipfs_4, this.crypto_5, arg0);
}
;
function Chat$lambda$18$Type(msg_0, host_1){
  this.msg_0 = msg_0;
  this.host_1 = host_1;
}

defineClass(2849, $wnd.Function, $intern_22, Chat$lambda$18$Type);
_.apply_0 = function apply_397(arg0){
  return lambda$18_1(this.msg_0, this.host_1, arg0);
}
;
function Chat$lambda$19$Type(){
}

defineClass(2850, $wnd.Function, $intern_22, Chat$lambda$19$Type);
_.apply_0 = function apply_398(arg0){
  return castTo(castTo(arg0, 40).getKey(), 103);
}
;
function Chat$lambda$2$Type(crypto_0){
  this.crypto_0 = crypto_0;
}

defineClass(2839, $wnd.Function, $intern_22, Chat$lambda$2$Type);
_.apply_0 = function apply_399(arg0){
  return lambda$2_3(this.crypto_0, arg0);
}
;
function Chat$lambda$20$Type(){
}

defineClass(2851, $wnd.Function, $intern_22, Chat$lambda$20$Type);
_.apply_0 = function apply_400(arg0){
  return $copy_0(castTo(castTo(arg0, 40).getValue(), 76));
}
;
function Chat$lambda$21$Type(){
}

defineClass(897, 1, {}, Chat$lambda$21$Type);
_.apply_2 = function apply_401(arg0){
  return valueOf_1(arg0);
}
;
var Lpeergos_shared_messaging_Chat$lambda$21$Type_2_classLit = createForClass('peergos.shared.messaging', 'Chat/lambda$21$Type', 897);
function Chat$lambda$22$Type(usernames_0, identities_1, ourChatIdentity_2, userIdentity_3, ourStore_4, ipfs_5, crypto_6){
  this.usernames_0 = usernames_0;
  this.identities_1 = identities_1;
  this.ourChatIdentity_2 = ourChatIdentity_2;
  this.userIdentity_3 = userIdentity_3;
  this.ourStore_4 = ourStore_4;
  this.ipfs_5 = ipfs_5;
  this.crypto_6 = crypto_6;
}

defineClass(898, 1, $intern_34, Chat$lambda$22$Type);
_.apply_1 = function apply_402(arg0, arg1){
  return lambda$22_0(this.usernames_0, this.identities_1, this.ourChatIdentity_2, this.userIdentity_3, this.ourStore_4, this.ipfs_5, this.crypto_6, arg0, arg1);
}
;
var Lpeergos_shared_messaging_Chat$lambda$22$Type_2_classLit = createForClass('peergos.shared.messaging', 'Chat/lambda$22$Type', 898);
function Chat$lambda$23$Type(){
}

defineClass(899, 1, $intern_34, Chat$lambda$23$Type);
_.apply_1 = function apply_403(arg0, arg1){
  return $apply_6(castTo(arg0, 113), castTo(arg1, 113));
}
;
var Lpeergos_shared_messaging_Chat$lambda$23$Type_2_classLit = createForClass('peergos.shared.messaging', 'Chat/lambda$23$Type', 899);
function Chat$lambda$3$Type(crypto_0){
  this.crypto_0 = crypto_0;
}

defineClass(2861, $wnd.Function, $intern_22, Chat$lambda$3$Type);
_.apply_0 = function apply_404(arg0){
  return lambda$3_1(this.crypto_0, arg0);
}
;
function Chat$lambda$5$Type($$outer_0, body_1, signer_2, userIdentity_3, ipfs_4, crypto_5){
  this.$$outer_0 = $$outer_0;
  this.body_1 = body_1;
  this.signer_2 = signer_2;
  this.userIdentity_3 = userIdentity_3;
  this.ipfs_4 = ipfs_4;
  this.crypto_5 = crypto_5;
}

defineClass(2840, $wnd.Function, $intern_22, Chat$lambda$5$Type);
_.apply_0 = function apply_405(arg0){
  return $lambda$5_4(this.$$outer_0, this.body_1, this.signer_2, this.userIdentity_3, this.ipfs_4, this.crypto_5, arg0);
}
;
function Chat$lambda$7$Type(afterInvite_0, newHost_1, joinMsg_2, userIdentity_3, ipfs_4, crypto_5){
  this.afterInvite_0 = afterInvite_0;
  this.newHost_1 = newHost_1;
  this.joinMsg_2 = joinMsg_2;
  this.userIdentity_3 = userIdentity_3;
  this.ipfs_4 = ipfs_4;
  this.crypto_5 = crypto_5;
}

defineClass(2842, $wnd.Function, $intern_22, Chat$lambda$7$Type);
_.apply_0 = function apply_406(arg0){
  return lambda$7_2(this.afterInvite_0, this.newHost_1, this.joinMsg_2, this.userIdentity_3, this.ipfs_4, this.crypto_5, arg0);
}
;
function Chat$lambda$9$Type($$outer_0, author_1, chatIdentity_2, msg_3, signed_4){
  this.$$outer_0 = $$outer_0;
  this.author_1 = author_1;
  this.chatIdentity_2 = chatIdentity_2;
  this.msg_3 = msg_3;
  this.signed_4 = signed_4;
}

defineClass(2843, $wnd.Function, $intern_22, Chat$lambda$9$Type);
_.apply_0 = function apply_407(arg0){
  return $lambda$9_4(this.$$outer_0, this.author_1, this.chatIdentity_2, this.msg_3, this.signed_4);
}
;
function $addAdmin(this$static, username){
  var admins, msg;
  admins = new TreeSet($getAdmins(this$static.state));
  if (admins.map_0.size_0 != 0 && !$contains_4(admins, $host(this$static.state).username))
    throw toJs(new IllegalStateException_0('Only admins can modify the admin list!'));
  $put_6(admins.map_0, username, ($clinit_Boolean() , FALSE)) == null;
  msg = new SetGroupState('admins', castToString($collect_0(new StreamImpl(null, new SortedSet$1(admins)), of_3(new Collectors$lambda$15$Type(',', ''), new Collectors$9methodref$add$Type, new Collectors$10methodref$merge$Type, makeLambdaFunction(Collectors$11methodref$toString$Type.prototype.apply_0, Collectors$11methodref$toString$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [])))));
  return $applyAndCommit(this$static, makeLambdaFunction(ChatController$lambda$16$Type.prototype.apply_0, ChatController$lambda$16$Type, [this$static, msg]), this$static.context.username);
}

function $applyAndCommit(this$static, modifier, mirrorUsername){
  var network;
  network = this$static.context.network;
  return $thenApply($applyComplexComputation(network.synchronizer, this$static.context.signer.publicKeyHash, $signingPair(this$static.root), new ChatController$lambda$34$Type(this$static, network, mirrorUsername, modifier)), makeLambdaFunction(ChatController$lambda$39$Type.prototype.apply_0, ChatController$lambda$39$Type, []));
}

function $commitUpdate(this$static, u, mirrorUsername, in_0, c){
  var noRemovals;
  if (u.newMessages.isEmpty() && u.mediaToCopy.isEmpty() && u.toRevokeAccess.isEmpty() && u.priv.ref == null && $equals_18(u.state, this$static.state))
    return new CompletableFuture_0(new Pair(in_0, this$static));
  noRemovals = u.toRevokeAccess.isEmpty();
  return $thenCompose(noRemovals?new CompletableFuture_0(in_0):$revokeAccess(this$static.store, u.toRevokeAccess, in_0, c), makeLambdaFunction(ChatController$lambda$40$Type.prototype.apply_0, ChatController$lambda$40$Type, [this$static, mirrorUsername, c, u, noRemovals]));
}

function $copyFile(this$static, dir_0, sourcePath, mirrorUsername, v, c){
  return $thenCompose(asyncExceptionally(new ChatController$lambda$20$Type(this$static, sourcePath, v), makeLambdaFunction(ChatController$lambda$21$Type.prototype.apply_0, ChatController$lambda$21$Type, [this$static, mirrorUsername, sourcePath, v])), makeLambdaFunction(ChatController$lambda$24$Type.prototype.apply_0, ChatController$lambda$24$Type, [this$static, dir_0, v, c]));
}

function $getMessageFromRef(this$static, ref, sourceIndex){
  var cached;
  cached = castTo($get_5(this$static.cache_0, ref), 220);
  if (cached)
    return new CompletableFuture_0(cached);
  return $thenCompose($thenCompose($getMessages(this$static.store, $wnd.Math.max(0, sourceIndex - 100), sourceIndex), makeLambdaFunction(ChatController$lambda$6$Type.prototype.apply_0, ChatController$lambda$6$Type, [this$static, ref])), makeLambdaFunction(ChatController$lambda$9$Type.prototype.apply_0, ChatController$lambda$9$Type, [this$static, ref, sourceIndex]));
}

function $hashMessage(this$static, m){
  var raw;
  return $thenApply((raw = $toByteArray_2($toCbor_36(m)) , $thenApply($bareHash(this$static.hasher, raw), makeLambdaFunction(ChatController$1methodref$ctor$Type.prototype.apply_0, ChatController$1methodref$ctor$Type, []))), makeLambdaFunction(ChatController$lambda$13$Type.prototype.apply_0, ChatController$lambda$13$Type, [this$static, m]));
}

function $join_1(this$static, identity){
  var chatId;
  chatId = build_4(identity, this$static.privateChatState.chatIdentity.publicKeyHash);
  return $applyAndCommit(this$static, makeLambdaFunction(ChatController$lambda$17$Type.prototype.apply_0, ChatController$lambda$17$Type, [this$static, chatId, identity]), this$static.context.username);
}

function $lambda$1_5(this$static, m_0){
  return !this$static.privateChatState.deletedMembers.contains(m_0.username);
}

function $lambda$13_2(this$static, m_1, r_1){
  $put_5(this$static.cache_0, r_1, m_1);
  return r_1;
}

function $lambda$16_3(this$static, message_1, chat_1){
  return $sendMessage_0(chat_1, message_1, this$static.privateChatState.chatIdentity, this$static.context.signer, this$static.store, this$static.context.network.dhtClient, this$static.context.crypto);
}

function $lambda$17_4(this$static, chatId_1, identity_2, chat_2){
  return $join_0(chat_2, $host(this$static.state), chatId_1, this$static.privateChatState.chatIdPublic, identity_2, this$static.store, this$static.context.network.dhtClient, this$static.context.crypto);
}

function $lambda$18_0(this$static, usernames_1, identities_2, chat_2){
  return $inviteMembers(chat_2, usernames_1, identities_2, this$static.privateChatState.chatIdentity, this$static.context.signer, this$static.store, this$static.context.network.dhtClient, this$static.context.crypto);
}

function $lambda$19_1(this$static, mirrorHost_1, mirrorStore_2, chat_2){
  return $merge_1(chat_2, this$static.chatUuid, mirrorHost_1.id_0, this$static.context.signer, mirrorStore_2, this$static.context.network.dhtClient, this$static.context.crypto);
}

function $lambda$20_2(this$static, sourcePath_1, v_2){
  return $thenApply($getByPath_5(this$static.context, sourcePath_1.pathString, v_2), makeLambdaFunction(ChatController$2methodref$get$Type.prototype.apply_0, ChatController$2methodref$get$Type, []));
}

function $lambda$21_1(this$static, mirrorUsername_1, sourcePath_2, v_3){
  return $thenApply($getByPath_5(this$static.context, $resolve(get_176(mirrorUsername_1, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])), $subpath(sourcePath_2, 1, $getNameCount(sourcePath_2)).pathString).pathString, v_3), makeLambdaFunction(ChatController$3methodref$get$Type.prototype.apply_0, ChatController$3methodref$get$Type, []));
}

function $lambda$24_0(this$static, dir_1, v_2, c_3, f_3){
  return $thenCompose($getInputStream_2(f_3, $get_32(f_3.version, f_3.pointer.capability.writer).props, this$static.context.network, this$static.context.crypto, makeLambdaFunction(ChatController$lambda$25$Type.prototype.accept_5, ChatController$lambda$25$Type, [])), makeLambdaFunction(ChatController$lambda$26$Type.prototype.apply_0, ChatController$lambda$26$Type, [this$static, dir_1, v_2, c_3, f_3]));
}

function $lambda$26(this$static, dir_1, v_2, c_3, f_4, r_4){
  return $uploadFileSection_1(dir_1, v_2, c_3, ($ensureUnmodified(f_4) , f_4.props).name, r_4, false, 0, ($ensureUnmodified(f_4) , f_4.props).size_0, ($clinit_Optional() , $clinit_Optional() , EMPTY), false, false, this$static.context.network, this$static.context.crypto, makeLambdaFunction(ChatController$lambda$27$Type.prototype.accept_5, ChatController$lambda$27$Type, []), $randomBytes(this$static.context.crypto.random, 32), (null , EMPTY), new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(this$static.context.crypto.random, 32))))), $mirrorBatId(dir_1.pointer.fileAccess));
}

function $lambda$30_0(this$static, mediaFileParentPath_1, in_2, committer_3, home_3){
  return $getOrMkdirs_0(home_3, mediaFileParentPath_1, $mirrorBatId(home_3.pointer.fileAccess), this$static.context.network, this$static.context.crypto, in_2, committer_3);
}

function $lambda$31_0(this$static, sourcePath_1, currentMirrorUsername_2, committer_3, dir_3){
  return $copyFile(this$static, castTo(dir_3.right, 19), sourcePath_1, currentMirrorUsername_2, castTo(dir_3.left, 43), committer_3);
}

function $lambda$32(this$static, raw_1, v_2, com_3, file_3){
  return $overwriteFile_0((checkCriticalElement(file_3.ref != null) , castTo(file_3.ref, 19)), new AsyncReader$ArrayBacked(raw_1), raw_1.length, this$static.context.network, this$static.context.crypto, makeLambdaFunction(ChatController$lambda$33$Type.prototype.accept_5, ChatController$lambda$33$Type, []), v_2, com_3);
}

function $lambda$34(this$static, network_1, mirrorUsername_2, modifier_3, s_3, c_4){
  return $thenCompose($getUpdated_0(this$static.root, s_3, network_1), makeLambdaFunction(ChatController$lambda$35$Type.prototype.apply_0, ChatController$lambda$35$Type, [this$static, network_1, mirrorUsername_2, s_3, c_4, modifier_3]));
}

function $lambda$35_0(this$static, network_1, mirrorUsername_2, s_3, c_4, modifier_5, updated_5){
  return $thenCompose($thenCompose($getChild_2(updated_5, 'shared', network_1), makeLambdaFunction(ChatController$lambda$36$Type.prototype.apply_0, ChatController$lambda$36$Type, [this$static, network_1])), makeLambdaFunction(ChatController$lambda$37$Type.prototype.apply_0, ChatController$lambda$37$Type, [this$static, mirrorUsername_2, s_3, c_4, modifier_5]));
}

function $lambda$36(this$static, network_1, sharedDir_1){
  return getChatState((checkCriticalElement(sharedDir_1.ref != null) , castTo(sharedDir_1.ref, 19)), network_1, this$static.context.crypto);
}

function $lambda$37(this$static, mirrorUsername_1, s_2, c_3, modifier_4, chatState_4){
  return $thenCompose(castTo(modifier_4(chatState_4), 6), makeLambdaFunction(ChatController$lambda$38$Type.prototype.apply_0, ChatController$lambda$38$Type, [this$static, mirrorUsername_1, s_2, c_3]));
}

function $lambda$38(this$static, mirrorUsername_1, s_2, c_3, u_3){
  return $commitUpdate(this$static, u_3, mirrorUsername_1, s_2, c_3);
}

function $lambda$40_0(this$static, mirrorUsername_1, c_2, u_3, noRemovals_4, s_4){
  return $thenCompose($thenCompose($thenCompose(reduceAll(u_3.mediaToCopy, s_4, new ChatController$lambda$41$Type(this$static, mirrorUsername_1, c_2), new ChatController$lambda$42$Type), makeLambdaFunction(ChatController$lambda$43$Type.prototype.apply_0, ChatController$lambda$43$Type, [this$static, u_3, c_2])), makeLambdaFunction(ChatController$lambda$46$Type.prototype.apply_0, ChatController$lambda$46$Type, [this$static, c_2, u_3, noRemovals_4])), makeLambdaFunction(ChatController$lambda$49$Type.prototype.apply_0, ChatController$lambda$49$Type, [this$static, u_3]));
}

function $lambda$41(this$static, mirrorUsername_1, c_2, v_2, f_3){
  return $mirrorMedia(this$static, f_3, this$static, mirrorUsername_1, v_2, c_2);
}

function $lambda$43(this$static, u_1, c_2, s2_2){
  return $thenCompose($getUpdated_0(this$static.root, s2_2, this$static.context.network), makeLambdaFunction(ChatController$lambda$44$Type.prototype.apply_0, ChatController$lambda$44$Type, [this$static, u_1, s2_2, c_2]));
}

function $lambda$44_0(this$static, u_1, s2_2, c_3, base_3){
  return $thenCompose(commitPrivateState(u_1.priv, base_3, this$static.context.network, this$static.context.crypto, s2_2, c_3), makeLambdaFunction(ChatController$lambda$45$Type.prototype.apply_0, ChatController$lambda$45$Type, [this$static, base_3]));
}

function $lambda$45_0(this$static, base_1, s3_1){
  return $getUpdated_0(base_1, s3_1, this$static.context.network);
}

function $lambda$46(this$static, c_1, u_2, noRemovals_3, base_3){
  return $thenCompose($thenCompose(noRemovals_3?new CompletableFuture_0(this$static.store):getChatMessageStore(base_3, this$static.context), makeLambdaFunction(ChatController$lambda$47$Type.prototype.apply_0, ChatController$lambda$47$Type, [this$static, base_3, c_1, u_2])), makeLambdaFunction(ChatController$lambda$48$Type.prototype.apply_0, ChatController$lambda$48$Type, [this$static, base_3, u_2, c_1]));
}

function $lambda$47(this$static, base_1, c_2, u_3, newStore_3){
  return $addMessages(newStore_3, base_1.version, c_2, $host(this$static.state).messagesMergedUpto, u_3.newMessages);
}

function $lambda$48(this$static, base_1, u_2, c_3, s4_3){
  return $overwriteState(this$static, base_1, u_2.state, s4_3, c_3);
}

function $lambda$49(this$static, u_1, s5_1){
  return $thenCompose($getUpdated_0(this$static.root, s5_1, this$static.context.network), makeLambdaFunction(ChatController$lambda$50$Type.prototype.apply_0, ChatController$lambda$50$Type, [this$static, s5_1, u_1]));
}

function $lambda$50(this$static, s5_1, u_2, newRoot_2){
  return $thenApply(getChatMessageStore(newRoot_2, this$static.context), makeLambdaFunction(ChatController$lambda$51$Type.prototype.apply_0, ChatController$lambda$51$Type, [this$static, s5_1, u_2, newRoot_2]));
}

function $lambda$51(this$static, s5_1, u_2, newRoot_3, newStore_3){
  return new Pair(s5_1, $withStore($withRoot($withState(this$static, u_2.state), newRoot_3), newStore_3));
}

function $lambda$6_3(this$static, ref_1, allSigned_1){
  return findFirst(allSigned_1, makeLambdaFunction(ChatController$lambda$7$Type.prototype.apply_0, ChatController$lambda$7$Type, [this$static, ref_1]));
}

function $lambda$7_2(this$static, ref_1, s_1){
  return $thenApply($hashMessage(this$static, s_1.msg), makeLambdaFunction(ChatController$lambda$8$Type.prototype.apply_0, ChatController$lambda$8$Type, [ref_1, s_1]));
}

function $lambda$9_5(this$static, ref_1, sourceIndex_2, resOpt_2){
  return castTo($orElseGet($map(resOpt_2, makeLambdaFunction(ChatController$0methodref$of$Type.prototype.apply_0, ChatController$0methodref$of$Type, [])), new ChatController$lambda$11$Type(this$static, ref_1, sourceIndex_2)), 87);
}

function $mirrorMedia(this$static, ref, chat, currentMirrorUsername, in_0, committer){
  var chatRelativePath, mediaDir, mediaFileParentPath, ourCopy, parent_0, sourcePath;
  if ($equals_0(currentMirrorUsername, this$static.context.username))
    return new CompletableFuture_0(in_0);
  mediaDir = get_176('.messaging', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [chat.chatUuid, 'shared', 'media']));
  sourcePath = get_176(ref.path, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, []));
  chatRelativePath = $subpath(sourcePath, 1 + $getNameCount(mediaDir), $getNameCount(sourcePath));
  ourCopy = $resolve(mediaDir, chatRelativePath.pathString);
  parent_0 = $getParent(ourCopy);
  mediaFileParentPath = castTo(range_0(0, $getNameCount(parent_0)).mapToObj(new ChatController$lambda$28$Type(parent_0)).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  return $thenCompose($thenCompose($thenApply($getByPath_5(this$static.context, this$static.context.username, in_0), makeLambdaFunction(ChatController$4methodref$get$Type.prototype.apply_0, ChatController$4methodref$get$Type, [])), makeLambdaFunction(ChatController$lambda$30$Type.prototype.apply_0, ChatController$lambda$30$Type, [this$static, mediaFileParentPath, in_0, committer])), makeLambdaFunction(ChatController$lambda$31$Type.prototype.apply_0, ChatController$lambda$31$Type, [this$static, sourcePath, currentMirrorUsername, committer]));
}

function $overwriteState(this$static, root, c, v, com){
  var raw;
  raw = $toByteArray_2($toCbor_33(c));
  return $thenCompose($getDescendentByPath(root, 'shared/peergos-chat-state.cbor', this$static.context.crypto.hasher, this$static.context.network), makeLambdaFunction(ChatController$lambda$32$Type.prototype.apply_0, ChatController$lambda$32$Type, [this$static, raw, v, com]));
}

function $sendMessage_1(this$static, message){
  return $applyAndCommit(this$static, makeLambdaFunction(ChatController$lambda$16$Type.prototype.apply_0, ChatController$lambda$16$Type, [this$static, message]), this$static.context.username);
}

function $withRoot(this$static, root){
  return new ChatController(this$static.chatUuid, this$static.state, this$static.store, this$static.privateChatState, root, this$static.cache_0, this$static.context);
}

function $withState(this$static, c){
  return new ChatController(this$static.chatUuid, c, this$static.store, this$static.privateChatState, this$static.root, this$static.cache_0, this$static.context);
}

function $withStore(this$static, newStore){
  return new ChatController(this$static.chatUuid, this$static.state, newStore, this$static.privateChatState, this$static.root, this$static.cache_0, this$static.context);
}

function ChatController(chatUuid, state, store, privateChatState, root, cache, context){
  this.chatUuid = chatUuid;
  this.state = state;
  this.store = store;
  this.privateChatState = privateChatState;
  this.root = root;
  this.cache_0 = cache;
  this.hasher = context.crypto.hasher;
  this.context = context;
}

function commitPrivateState(priv, chatRoot, network, crypto_0, in_0, c){
  var rawPrivateChatState;
  if (priv.ref == null)
    return new CompletableFuture_0(in_0);
  rawPrivateChatState = (checkCriticalElement(priv.ref != null) , $toByteArray_2($toCbor_39(castTo(priv.ref, 247))));
  return $uploadFileSection_1(chatRoot, in_0, c, 'private-chat-state.cbor', new AsyncReader$ArrayBacked(rawPrivateChatState), false, 0, rawPrivateChatState.length, ($clinit_Optional() , $clinit_Optional() , EMPTY), true, true, network, crypto_0, makeLambdaFunction(ChatController$lambda$52$Type.prototype.accept_5, ChatController$lambda$52$Type, []), $randomBytes(crypto_0.random, 32), (null , EMPTY), new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(crypto_0.random, 32))))), $mirrorBatId(chatRoot.pointer.fileAccess));
}

function getChatController(chatRoot, context, cache){
  return $thenCompose($thenCompose($getChild_2(chatRoot, 'shared', context.network), makeLambdaFunction(ChatController$lambda$63$Type.prototype.apply_0, ChatController$lambda$63$Type, [context])), makeLambdaFunction(ChatController$lambda$64$Type.prototype.apply_0, ChatController$lambda$64$Type, [chatRoot, cache, context]));
}

function getChatMessageStore(chatRoot, context){
  var chatRootPath;
  chatRootPath = get_176(context.username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['.messaging', ($ensureUnmodified(chatRoot) , chatRoot.props).name]));
  return $thenApply(getSharedLogAndIndex(chatRoot, context.crypto.hasher, context.network), makeLambdaFunction(ChatController$lambda$55$Type.prototype.apply_0, ChatController$lambda$55$Type, [context, chatRootPath]));
}

function getChatState(chatSharedDir, network, crypto_0){
  return $thenCompose($getChild_2(chatSharedDir, 'peergos-chat-state.cbor', network), makeLambdaFunction(ChatController$lambda$59$Type.prototype.apply_0, ChatController$lambda$59$Type, [network, crypto_0]));
}

function getPrivateChatState(chatRoot, network, crypto_0){
  return $thenCompose($getChild_2(chatRoot, 'private-chat-state.cbor', network), makeLambdaFunction(ChatController$lambda$61$Type.prototype.apply_0, ChatController$lambda$61$Type, [network, crypto_0]));
}

function getSharedLogAndIndex(chatRoot, hasher, network){
  return $thenCompose($getDescendentByPath_0(chatRoot, 'shared/peergos-chat-messages.cborstream', chatRoot.version, hasher, network), makeLambdaFunction(ChatController$lambda$53$Type.prototype.apply_0, ChatController$lambda$53$Type, [chatRoot, hasher, network]));
}

function lambda$53_0(chatRoot_0, hasher_1, network_2, msgFile_3){
  return $thenApply($getDescendentByPath_0(chatRoot_0, 'shared/peergos-chat-messages.index.bin', chatRoot_0.version, hasher_1, network_2), makeLambdaFunction(ChatController$lambda$54$Type.prototype.apply_0, ChatController$lambda$54$Type, [msgFile_3]));
}

function lambda$54(msgFile_0, index_1){
  return new Pair((checkCriticalElement(msgFile_0.ref != null) , castTo(msgFile_0.ref, 19)), (checkCriticalElement(index_1.ref != null) , castTo(index_1.ref, 19)));
}

function lambda$55(context_0, chatRootPath_1, files_2){
  var lastArg;
  return new FileBackedMessageStore(castTo(files_2.left, 19), castTo(files_2.right, 19), context_0, (lastArg = $resolve(chatRootPath_1, 'shared') , new ChatController$lambda$56$Type(context_0, chatRootPath_1) , lastArg));
}

function lambda$56(context_0, chatRootPath_1){
  var pathString;
  return $thenCompose($thenApply((pathString = castToString(range_0(0, $getNameCount(chatRootPath_1)).mapToObj(new UserContext$30methodref$getName$Type(chatRootPath_1)).map_1(makeLambdaFunction(UserContext$31methodref$toString$Type.prototype.apply_0, UserContext$31methodref$toString$Type, [])).collect_0(of_3(new Collectors$lambda$15$Type('/', ''), new Collectors$9methodref$add$Type, new Collectors$10methodref$merge$Type, makeLambdaFunction(Collectors$11methodref$toString$Type.prototype.apply_0, Collectors$11methodref$toString$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [])))) , $getByPath_4(context_0, pathString)), makeLambdaFunction(ChatController$5methodref$get$Type.prototype.apply_0, ChatController$5methodref$get$Type, [])), makeLambdaFunction(ChatController$lambda$58$Type.prototype.apply_0, ChatController$lambda$58$Type, [context_0]));
}

function lambda$58(context_0, d_1){
  return getSharedLogAndIndex(d_1, context_0.crypto.hasher, context_0.network);
}

function lambda$59(network_0, crypto_1, chatStateOpt_2){
  return parse_7((checkCriticalElement(chatStateOpt_2.ref != null) , castTo(chatStateOpt_2.ref, 19)), makeLambdaFunction(ChatController$6methodref$fromCbor$Type.prototype.apply_0, ChatController$6methodref$fromCbor$Type, []), network_0, crypto_1);
}

function lambda$61(network_0, crypto_1, priv_2){
  return parse_7((checkCriticalElement(priv_2.ref != null) , castTo(priv_2.ref, 19)), makeLambdaFunction(ChatController$7methodref$fromCbor$Type.prototype.apply_0, ChatController$7methodref$fromCbor$Type, []), network_0, crypto_1);
}

function lambda$63(context_0, sharedDir_1){
  return getChatState((checkCriticalElement(sharedDir_1.ref != null) , castTo(sharedDir_1.ref, 19)), context_0.network, context_0.crypto);
}

function lambda$64_0(chatRoot_0, cache_1, context_2, chat_3){
  return $thenCompose(getPrivateChatState(chatRoot_0, context_2.network, context_2.crypto), makeLambdaFunction(ChatController$lambda$65$Type.prototype.apply_0, ChatController$lambda$65$Type, [chatRoot_0, chat_3, cache_1, context_2]));
}

function lambda$65_0(chatRoot_0, chat_1, cache_2, context_3, priv_4){
  var chatRootPath;
  return $thenApply((chatRootPath = get_176(context_3.username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['.messaging', ($ensureUnmodified(chatRoot_0) , chatRoot_0.props).name])) , $thenApply(getSharedLogAndIndex(chatRoot_0, context_3.crypto.hasher, context_3.network), makeLambdaFunction(ChatController$lambda$55$Type.prototype.apply_0, ChatController$lambda$55$Type, [context_3, chatRootPath]))), makeLambdaFunction(ChatController$lambda$66$Type.prototype.apply_0, ChatController$lambda$66$Type, [chatRoot_0, chat_1, priv_4, cache_2, context_3]));
}

function lambda$66(chatRoot_0, chat_1, priv_2, cache_3, context_4, msgStore_5){
  return new ChatController(($ensureUnmodified(chatRoot_0) , chatRoot_0.props).name, chat_1, msgStore_5, priv_2, chatRoot_0, cache_3, context_4);
}

function lambda$8_2(ref_0, s_1, h_2){
  return $equals_20(h_2, ref_0)?($clinit_Optional() , new Optional(checkCriticalNotNull(s_1.msg))):($clinit_Optional() , $clinit_Optional() , EMPTY);
}

defineClass(221, 1, {221:1}, ChatController);
_.addAdmin = function addAdmin(username){
  return $addAdmin(this, username);
}
;
_.deletedMemberNames = function deletedMemberNames(){
  return this.privateChatState.deletedMembers;
}
;
_.generateHash = function generateHash(m){
  var raw;
  return raw = $toByteArray_2($toCbor_36(m)) , $thenApply($bareHash(this.hasher, raw), makeLambdaFunction(ChatController$1methodref$ctor$Type.prototype.apply_0, ChatController$1methodref$ctor$Type, []));
}
;
_.getAdmins = function getAdmins(){
  return $getAdmins(this.state);
}
;
_.getGroupProperty = function getGroupProperty(key){
  return castTo($get_3(this.state.groupState, key), 230).value_0;
}
;
_.getMemberNames = function getMemberNames(){
  return castTo($collect_0($map_0($filter($filter(new StreamImpl(null, new Spliterators$IteratorSpliterator($values(this.state.members), 0)), new ChatController$lambda$0$Type), new ChatController$lambda$1$Type(this)), makeLambdaFunction(ChatController$lambda$2$Type.prototype.apply_0, ChatController$lambda$2$Type, [])), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47);
}
;
_.getMessageFromRef = function getMessageFromRef(ref, sourceIndex){
  return $getMessageFromRef(this, ref, sourceIndex);
}
;
_.getMessages = function getMessages(from, to){
  return $thenApply($getMessages(this.store, from, to), makeLambdaFunction(ChatController$lambda$14$Type.prototype.apply_0, ChatController$lambda$14$Type, []));
}
;
_.getPendingMemberNames = function getPendingMemberNames(){
  return castTo($collect_0($map_0($filter($filter(new StreamImpl(null, new Spliterators$IteratorSpliterator($values(this.state.members), 0)), new ChatController$lambda$3$Type), new ChatController$lambda$4$Type), makeLambdaFunction(ChatController$lambda$5$Type.prototype.apply_0, ChatController$lambda$5$Type, [])), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47);
}
;
_.getRecent = function getRecent(){
  return new ArrayList_1(this.state.recentMessages);
}
;
_.getTitle = function getTitle(){
  return $getTitle(this.state);
}
;
_.getUsername = function getUsername_2(author){
  return $getMember_0(this.state, author).username;
}
;
_.isAdmin = function isAdmin(){
  return $getAdmins(this.state).contains($host(this.state).username);
}
;
_.removeAdmin = function removeAdmin(username){
  var admins, msg;
  admins = new TreeSet($getAdmins(this.state));
  if (!$contains_4(admins, $host(this.state).username))
    throw toJs(new IllegalStateException_0('Only admins can modify the admin list!'));
  $remove_9(admins.map_0, username) != null;
  if (admins.map_0.size_0 == 0)
    throw toJs(new IllegalStateException_0('A chat must always have at least 1 admin'));
  msg = new SetGroupState('admins', castToString($collect_0(new StreamImpl(null, new SortedSet$1(admins)), of_3(new Collectors$lambda$15$Type(',', ''), new Collectors$9methodref$add$Type, new Collectors$10methodref$merge$Type, makeLambdaFunction(Collectors$11methodref$toString$Type.prototype.apply_0, Collectors$11methodref$toString$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [])))));
  return $applyAndCommit(this, makeLambdaFunction(ChatController$lambda$16$Type.prototype.apply_0, ChatController$lambda$16$Type, [this, msg]), this.context.username);
}
;
_.sendMessage = function sendMessage(message){
  return $sendMessage_1(this, message);
}
;
var Lpeergos_shared_messaging_ChatController_2_classLit = createForClass('peergos.shared.messaging', 'ChatController', 221);
function ChatController$0methodref$of$Type(){
}

defineClass(2807, $wnd.Function, $intern_22, ChatController$0methodref$of$Type);
_.apply_0 = function apply_408(arg0){
  return new CompletableFuture_0(castTo(arg0, 220));
}
;
function ChatController$1methodref$ctor$Type(){
}

defineClass(1314, $wnd.Function, $intern_22, ChatController$1methodref$ctor$Type);
_.apply_0 = function apply_409(arg0){
  return new MessageRef(castTo(arg0, 58));
}
;
function ChatController$2methodref$get$Type(){
}

defineClass(2808, $wnd.Function, $intern_22, ChatController$2methodref$get$Type);
_.apply_0 = function apply_410(arg0){
  return $get_6(castTo(arg0, 12));
}
;
function ChatController$3methodref$get$Type(){
}

defineClass(2809, $wnd.Function, $intern_22, ChatController$3methodref$get$Type);
_.apply_0 = function apply_411(arg0){
  return $get_6(castTo(arg0, 12));
}
;
function ChatController$4methodref$get$Type(){
}

defineClass(2793, $wnd.Function, $intern_22, ChatController$4methodref$get$Type);
_.apply_0 = function apply_412(arg0){
  return $get_6(castTo(arg0, 12));
}
;
function ChatController$5methodref$get$Type(){
}

defineClass(2828, $wnd.Function, $intern_22, ChatController$5methodref$get$Type);
_.apply_0 = function apply_413(arg0){
  return $get_6(castTo(arg0, 12));
}
;
function ChatController$6methodref$fromCbor$Type(){
}

defineClass(2830, $wnd.Function, $intern_22, ChatController$6methodref$fromCbor$Type);
_.apply_0 = function apply_414(arg0){
  return fromCbor_42(castTo(arg0, 7));
}
;
function ChatController$7methodref$fromCbor$Type(){
}

defineClass(2831, $wnd.Function, $intern_22, ChatController$7methodref$fromCbor$Type);
_.apply_0 = function apply_415(arg0){
  return fromCbor_49(castTo(arg0, 7));
}
;
function ChatController$lambda$0$Type(){
}

defineClass(403, 1, {}, ChatController$lambda$0$Type);
_.test_0 = function test_11(arg0){
  return !castTo(arg0, 76).removed;
}
;
var Lpeergos_shared_messaging_ChatController$lambda$0$Type_2_classLit = createForClass('peergos.shared.messaging', 'ChatController/lambda$0$Type', 403);
function ChatController$lambda$1$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(404, 1, {}, ChatController$lambda$1$Type);
_.test_0 = function test_12(arg0){
  return $lambda$1_5(this.$$outer_0, arg0);
}
;
var Lpeergos_shared_messaging_ChatController$lambda$1$Type_2_classLit = createForClass('peergos.shared.messaging', 'ChatController/lambda$1$Type', 404);
function ChatController$lambda$11$Type($$outer_0, ref_1, sourceIndex_2){
  this.$$outer_0 = $$outer_0;
  this.ref_1 = ref_1;
  this.sourceIndex_2 = sourceIndex_2;
}

defineClass(886, 1, {}, ChatController$lambda$11$Type);
_.get_0 = function get_37(){
  return $getMessageFromRef(this.$$outer_0, this.ref_1, this.sourceIndex_2 - 100);
}
;
_.sourceIndex_2 = 0;
var Lpeergos_shared_messaging_ChatController$lambda$11$Type_2_classLit = createForClass('peergos.shared.messaging', 'ChatController/lambda$11$Type', 886);
function ChatController$lambda$13$Type($$outer_0, m_1){
  this.$$outer_0 = $$outer_0;
  this.m_1 = m_1;
}

defineClass(2788, $wnd.Function, $intern_22, ChatController$lambda$13$Type);
_.apply_0 = function apply_416(arg0){
  return $lambda$13_2(this.$$outer_0, this.m_1, arg0);
}
;
function ChatController$lambda$14$Type(){
}

defineClass(2789, $wnd.Function, $intern_22, ChatController$lambda$14$Type);
_.apply_0 = function apply_417(arg0){
  return castTo($collect_0($map_0(castTo(arg0, 17).stream(), makeLambdaFunction(ChatController$lambda$15$Type.prototype.apply_0, ChatController$lambda$15$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
}
;
function ChatController$lambda$15$Type(){
}

defineClass(2834, $wnd.Function, $intern_22, ChatController$lambda$15$Type);
_.apply_0 = function apply_418(arg0){
  return castTo(arg0, 137).msg;
}
;
function ChatController$lambda$16$Type($$outer_0, message_1){
  this.$$outer_0 = $$outer_0;
  this.message_1 = message_1;
}

defineClass(449, $wnd.Function, $intern_22, ChatController$lambda$16$Type);
_.apply_0 = function apply_419(arg0){
  return $lambda$16_3(this.$$outer_0, this.message_1, arg0);
}
;
function ChatController$lambda$17$Type($$outer_0, chatId_1, identity_2){
  this.$$outer_0 = $$outer_0;
  this.chatId_1 = chatId_1;
  this.identity_2 = identity_2;
}

defineClass(2790, $wnd.Function, $intern_22, ChatController$lambda$17$Type);
_.apply_0 = function apply_420(arg0){
  return $lambda$17_4(this.$$outer_0, this.chatId_1, this.identity_2, arg0);
}
;
function ChatController$lambda$18$Type($$outer_0, usernames_1, identities_2){
  this.$$outer_0 = $$outer_0;
  this.usernames_1 = usernames_1;
  this.identities_2 = identities_2;
}

defineClass(2729, $wnd.Function, $intern_22, ChatController$lambda$18$Type);
_.apply_0 = function apply_421(arg0){
  return $lambda$18_0(this.$$outer_0, this.usernames_1, this.identities_2, arg0);
}
;
function ChatController$lambda$19$Type($$outer_0, mirrorHost_1, mirrorStore_2){
  this.$$outer_0 = $$outer_0;
  this.mirrorHost_1 = mirrorHost_1;
  this.mirrorStore_2 = mirrorStore_2;
}

defineClass(2778, $wnd.Function, $intern_22, ChatController$lambda$19$Type);
_.apply_0 = function apply_422(arg0){
  return $lambda$19_1(this.$$outer_0, this.mirrorHost_1, this.mirrorStore_2, arg0);
}
;
function ChatController$lambda$2$Type(){
}

defineClass(1208, $wnd.Function, $intern_22, ChatController$lambda$2$Type);
_.apply_0 = function apply_423(arg0){
  return castTo(arg0, 76).username;
}
;
function ChatController$lambda$20$Type($$outer_0, sourcePath_1, v_2){
  this.$$outer_0 = $$outer_0;
  this.sourcePath_1 = sourcePath_1;
  this.v_2 = v_2;
}

defineClass(887, 1, {}, ChatController$lambda$20$Type);
_.get_0 = function get_38(){
  return $lambda$20_2(this.$$outer_0, this.sourcePath_1, this.v_2);
}
;
var Lpeergos_shared_messaging_ChatController$lambda$20$Type_2_classLit = createForClass('peergos.shared.messaging', 'ChatController/lambda$20$Type', 887);
function ChatController$lambda$21$Type($$outer_0, mirrorUsername_1, sourcePath_2, v_3){
  this.$$outer_0 = $$outer_0;
  this.mirrorUsername_1 = mirrorUsername_1;
  this.sourcePath_2 = sourcePath_2;
  this.v_3 = v_3;
}

defineClass(2791, $wnd.Function, $intern_22, ChatController$lambda$21$Type);
_.apply_0 = function apply_424(arg0){
  return $lambda$21_1(this.$$outer_0, this.mirrorUsername_1, this.sourcePath_2, this.v_3);
}
;
function ChatController$lambda$24$Type($$outer_0, dir_1, v_2, c_3){
  this.$$outer_0 = $$outer_0;
  this.dir_1 = dir_1;
  this.v_2 = v_2;
  this.c_3 = c_3;
}

defineClass(2792, $wnd.Function, $intern_22, ChatController$lambda$24$Type);
_.apply_0 = function apply_425(arg0){
  return $lambda$24_0(this.$$outer_0, this.dir_1, this.v_2, this.c_3, arg0);
}
;
function ChatController$lambda$25$Type(){
}

defineClass(2810, $wnd.Function, {}, ChatController$lambda$25$Type);
_.accept_5 = function accept_44(arg0){
}
;
function ChatController$lambda$26$Type($$outer_0, dir_1, v_2, c_3, f_4){
  this.$$outer_0 = $$outer_0;
  this.dir_1 = dir_1;
  this.v_2 = v_2;
  this.c_3 = c_3;
  this.f_4 = f_4;
}

defineClass(2811, $wnd.Function, $intern_22, ChatController$lambda$26$Type);
_.apply_0 = function apply_426(arg0){
  return $lambda$26(this.$$outer_0, this.dir_1, this.v_2, this.c_3, this.f_4, arg0);
}
;
function ChatController$lambda$27$Type(){
}

defineClass(2812, $wnd.Function, {}, ChatController$lambda$27$Type);
_.accept_5 = function accept_45(arg0){
}
;
function ChatController$lambda$28$Type(parent_0){
  this.parent_0 = parent_0;
}

defineClass(888, 1, {}, ChatController$lambda$28$Type);
_.apply_2 = function apply_427(arg0){
  return $getName_0(this.parent_0, arg0).pathString;
}
;
var Lpeergos_shared_messaging_ChatController$lambda$28$Type_2_classLit = createForClass('peergos.shared.messaging', 'ChatController/lambda$28$Type', 888);
function ChatController$lambda$3$Type(){
}

defineClass(405, 1, {}, ChatController$lambda$3$Type);
_.test_0 = function test_13(arg0){
  return !castTo(arg0, 76).removed;
}
;
var Lpeergos_shared_messaging_ChatController$lambda$3$Type_2_classLit = createForClass('peergos.shared.messaging', 'ChatController/lambda$3$Type', 405);
function ChatController$lambda$30$Type($$outer_0, mediaFileParentPath_1, in_2, committer_3){
  this.$$outer_0 = $$outer_0;
  this.mediaFileParentPath_1 = mediaFileParentPath_1;
  this.in_2 = in_2;
  this.committer_3 = committer_3;
}

defineClass(2794, $wnd.Function, $intern_22, ChatController$lambda$30$Type);
_.apply_0 = function apply_428(arg0){
  return $lambda$30_0(this.$$outer_0, this.mediaFileParentPath_1, this.in_2, this.committer_3, arg0);
}
;
function ChatController$lambda$31$Type($$outer_0, sourcePath_1, currentMirrorUsername_2, committer_3){
  this.$$outer_0 = $$outer_0;
  this.sourcePath_1 = sourcePath_1;
  this.currentMirrorUsername_2 = currentMirrorUsername_2;
  this.committer_3 = committer_3;
}

defineClass(2795, $wnd.Function, $intern_22, ChatController$lambda$31$Type);
_.apply_0 = function apply_429(arg0){
  return $lambda$31_0(this.$$outer_0, this.sourcePath_1, this.currentMirrorUsername_2, this.committer_3, arg0);
}
;
function ChatController$lambda$32$Type($$outer_0, raw_1, v_2, com_3){
  this.$$outer_0 = $$outer_0;
  this.raw_1 = raw_1;
  this.v_2 = v_2;
  this.com_3 = com_3;
}

defineClass(2796, $wnd.Function, $intern_22, ChatController$lambda$32$Type);
_.apply_0 = function apply_430(arg0){
  return $lambda$32(this.$$outer_0, this.raw_1, this.v_2, this.com_3, arg0);
}
;
function ChatController$lambda$33$Type(){
}

defineClass(2813, $wnd.Function, {}, ChatController$lambda$33$Type);
_.accept_5 = function accept_46(arg0){
}
;
function ChatController$lambda$34$Type($$outer_0, network_1, mirrorUsername_2, modifier_3){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
  this.mirrorUsername_2 = mirrorUsername_2;
  this.modifier_3 = modifier_3;
}

defineClass(889, 1, {}, ChatController$lambda$34$Type);
_.apply_3 = function apply_431(arg0, arg1){
  return $lambda$34(this.$$outer_0, this.network_1, this.mirrorUsername_2, this.modifier_3, arg0, arg1);
}
;
var Lpeergos_shared_messaging_ChatController$lambda$34$Type_2_classLit = createForClass('peergos.shared.messaging', 'ChatController/lambda$34$Type', 889);
function ChatController$lambda$35$Type($$outer_0, network_1, mirrorUsername_2, s_3, c_4, modifier_5){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
  this.mirrorUsername_2 = mirrorUsername_2;
  this.s_3 = s_3;
  this.c_4 = c_4;
  this.modifier_5 = modifier_5;
}

defineClass(2814, $wnd.Function, $intern_22, ChatController$lambda$35$Type);
_.apply_0 = function apply_432(arg0){
  return $lambda$35_0(this.$$outer_0, this.network_1, this.mirrorUsername_2, this.s_3, this.c_4, this.modifier_5, arg0);
}
;
function ChatController$lambda$36$Type($$outer_0, network_1){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
}

defineClass(2815, $wnd.Function, $intern_22, ChatController$lambda$36$Type);
_.apply_0 = function apply_433(arg0){
  return $lambda$36(this.$$outer_0, this.network_1, arg0);
}
;
function ChatController$lambda$37$Type($$outer_0, mirrorUsername_1, s_2, c_3, modifier_4){
  this.$$outer_0 = $$outer_0;
  this.mirrorUsername_1 = mirrorUsername_1;
  this.s_2 = s_2;
  this.c_3 = c_3;
  this.modifier_4 = modifier_4;
}

defineClass(2816, $wnd.Function, $intern_22, ChatController$lambda$37$Type);
_.apply_0 = function apply_434(arg0){
  return $lambda$37(this.$$outer_0, this.mirrorUsername_1, this.s_2, this.c_3, this.modifier_4, arg0);
}
;
function ChatController$lambda$38$Type($$outer_0, mirrorUsername_1, s_2, c_3){
  this.$$outer_0 = $$outer_0;
  this.mirrorUsername_1 = mirrorUsername_1;
  this.s_2 = s_2;
  this.c_3 = c_3;
}

defineClass(2817, $wnd.Function, $intern_22, ChatController$lambda$38$Type);
_.apply_0 = function apply_435(arg0){
  return $lambda$38(this.$$outer_0, this.mirrorUsername_1, this.s_2, this.c_3, arg0);
}
;
function ChatController$lambda$39$Type(){
}

defineClass(2797, $wnd.Function, $intern_22, ChatController$lambda$39$Type);
_.apply_0 = function apply_436(arg0){
  return castTo(castTo(arg0, 20).right, 221);
}
;
function ChatController$lambda$4$Type(){
}

defineClass(406, 1, {}, ChatController$lambda$4$Type);
_.test_0 = function test_14(arg0){
  return castTo(arg0, 76).chatIdentity.ref == null;
}
;
var Lpeergos_shared_messaging_ChatController$lambda$4$Type_2_classLit = createForClass('peergos.shared.messaging', 'ChatController/lambda$4$Type', 406);
function ChatController$lambda$40$Type($$outer_0, mirrorUsername_1, c_2, u_3, noRemovals_4){
  this.$$outer_0 = $$outer_0;
  this.mirrorUsername_1 = mirrorUsername_1;
  this.c_2 = c_2;
  this.u_3 = u_3;
  this.noRemovals_4 = noRemovals_4;
}

defineClass(2798, $wnd.Function, $intern_22, ChatController$lambda$40$Type);
_.apply_0 = function apply_437(arg0){
  return $lambda$40_0(this.$$outer_0, this.mirrorUsername_1, this.c_2, this.u_3, this.noRemovals_4, arg0);
}
;
_.noRemovals_4 = false;
function ChatController$lambda$41$Type($$outer_0, mirrorUsername_1, c_2){
  this.$$outer_0 = $$outer_0;
  this.mirrorUsername_1 = mirrorUsername_1;
  this.c_2 = c_2;
}

defineClass(890, 1, $intern_34, ChatController$lambda$41$Type);
_.apply_1 = function apply_438(arg0, arg1){
  return $lambda$41(this.$$outer_0, this.mirrorUsername_1, this.c_2, arg0, arg1);
}
;
var Lpeergos_shared_messaging_ChatController$lambda$41$Type_2_classLit = createForClass('peergos.shared.messaging', 'ChatController/lambda$41$Type', 890);
function ChatController$lambda$42$Type(){
}

defineClass(891, 1, $intern_34, ChatController$lambda$42$Type);
_.apply_1 = function apply_439(arg0, arg1){
  return $merge_3(castTo(arg0, 43), castTo(arg1, 43));
}
;
var Lpeergos_shared_messaging_ChatController$lambda$42$Type_2_classLit = createForClass('peergos.shared.messaging', 'ChatController/lambda$42$Type', 891);
function ChatController$lambda$43$Type($$outer_0, u_1, c_2){
  this.$$outer_0 = $$outer_0;
  this.u_1 = u_1;
  this.c_2 = c_2;
}

defineClass(2818, $wnd.Function, $intern_22, ChatController$lambda$43$Type);
_.apply_0 = function apply_440(arg0){
  return $lambda$43(this.$$outer_0, this.u_1, this.c_2, arg0);
}
;
function ChatController$lambda$44$Type($$outer_0, u_1, s2_2, c_3){
  this.$$outer_0 = $$outer_0;
  this.u_1 = u_1;
  this.s2_2 = s2_2;
  this.c_3 = c_3;
}

defineClass(2821, $wnd.Function, $intern_22, ChatController$lambda$44$Type);
_.apply_0 = function apply_441(arg0){
  return $lambda$44_0(this.$$outer_0, this.u_1, this.s2_2, this.c_3, arg0);
}
;
function ChatController$lambda$45$Type($$outer_0, base_1){
  this.$$outer_0 = $$outer_0;
  this.base_1 = base_1;
}

defineClass(2822, $wnd.Function, $intern_22, ChatController$lambda$45$Type);
_.apply_0 = function apply_442(arg0){
  return $lambda$45_0(this.$$outer_0, this.base_1, arg0);
}
;
function ChatController$lambda$46$Type($$outer_0, c_1, u_2, noRemovals_3){
  this.$$outer_0 = $$outer_0;
  this.c_1 = c_1;
  this.u_2 = u_2;
  this.noRemovals_3 = noRemovals_3;
}

defineClass(2819, $wnd.Function, $intern_22, ChatController$lambda$46$Type);
_.apply_0 = function apply_443(arg0){
  return $lambda$46(this.$$outer_0, this.c_1, this.u_2, this.noRemovals_3, arg0);
}
;
_.noRemovals_3 = false;
function ChatController$lambda$47$Type($$outer_0, base_1, c_2, u_3){
  this.$$outer_0 = $$outer_0;
  this.base_1 = base_1;
  this.c_2 = c_2;
  this.u_3 = u_3;
}

defineClass(2823, $wnd.Function, $intern_22, ChatController$lambda$47$Type);
_.apply_0 = function apply_444(arg0){
  return $lambda$47(this.$$outer_0, this.base_1, this.c_2, this.u_3, arg0);
}
;
function ChatController$lambda$48$Type($$outer_0, base_1, u_2, c_3){
  this.$$outer_0 = $$outer_0;
  this.base_1 = base_1;
  this.u_2 = u_2;
  this.c_3 = c_3;
}

defineClass(2824, $wnd.Function, $intern_22, ChatController$lambda$48$Type);
_.apply_0 = function apply_445(arg0){
  return $lambda$48(this.$$outer_0, this.base_1, this.u_2, this.c_3, arg0);
}
;
function ChatController$lambda$49$Type($$outer_0, u_1){
  this.$$outer_0 = $$outer_0;
  this.u_1 = u_1;
}

defineClass(2820, $wnd.Function, $intern_22, ChatController$lambda$49$Type);
_.apply_0 = function apply_446(arg0){
  return $lambda$49(this.$$outer_0, this.u_1, arg0);
}
;
function ChatController$lambda$5$Type(){
}

defineClass(1209, $wnd.Function, $intern_22, ChatController$lambda$5$Type);
_.apply_0 = function apply_447(arg0){
  return castTo(arg0, 76).username;
}
;
function ChatController$lambda$50$Type($$outer_0, s5_1, u_2){
  this.$$outer_0 = $$outer_0;
  this.s5_1 = s5_1;
  this.u_2 = u_2;
}

defineClass(2825, $wnd.Function, $intern_22, ChatController$lambda$50$Type);
_.apply_0 = function apply_448(arg0){
  return $lambda$50(this.$$outer_0, this.s5_1, this.u_2, arg0);
}
;
function ChatController$lambda$51$Type($$outer_0, s5_1, u_2, newRoot_3){
  this.$$outer_0 = $$outer_0;
  this.s5_1 = s5_1;
  this.u_2 = u_2;
  this.newRoot_3 = newRoot_3;
}

defineClass(2826, $wnd.Function, $intern_22, ChatController$lambda$51$Type);
_.apply_0 = function apply_449(arg0){
  return $lambda$51(this.$$outer_0, this.s5_1, this.u_2, this.newRoot_3, arg0);
}
;
function ChatController$lambda$52$Type(){
}

defineClass(2799, $wnd.Function, {}, ChatController$lambda$52$Type);
_.accept_5 = function accept_47(arg0){
}
;
function ChatController$lambda$53$Type(chatRoot_0, hasher_1, network_2){
  this.chatRoot_0 = chatRoot_0;
  this.hasher_1 = hasher_1;
  this.network_2 = network_2;
}

defineClass(2800, $wnd.Function, $intern_22, ChatController$lambda$53$Type);
_.apply_0 = function apply_450(arg0){
  return lambda$53_0(this.chatRoot_0, this.hasher_1, this.network_2, arg0);
}
;
function ChatController$lambda$54$Type(msgFile_0){
  this.msgFile_0 = msgFile_0;
}

defineClass(2827, $wnd.Function, $intern_22, ChatController$lambda$54$Type);
_.apply_0 = function apply_451(arg0){
  return lambda$54(this.msgFile_0, arg0);
}
;
function ChatController$lambda$55$Type(context_0, chatRootPath_1){
  this.context_0 = context_0;
  this.chatRootPath_1 = chatRootPath_1;
}

defineClass(1315, $wnd.Function, $intern_22, ChatController$lambda$55$Type);
_.apply_0 = function apply_452(arg0){
  return lambda$55(this.context_0, this.chatRootPath_1, arg0);
}
;
function ChatController$lambda$56$Type(context_0, chatRootPath_1){
  this.context_0 = context_0;
  this.chatRootPath_1 = chatRootPath_1;
}

defineClass(892, 1, {}, ChatController$lambda$56$Type);
_.get_0 = function get_39(){
  return lambda$56(this.context_0, this.chatRootPath_1);
}
;
var Lpeergos_shared_messaging_ChatController$lambda$56$Type_2_classLit = createForClass('peergos.shared.messaging', 'ChatController/lambda$56$Type', 892);
function ChatController$lambda$58$Type(context_0){
  this.context_0 = context_0;
}

defineClass(2829, $wnd.Function, $intern_22, ChatController$lambda$58$Type);
_.apply_0 = function apply_453(arg0){
  return lambda$58(this.context_0, arg0);
}
;
function ChatController$lambda$59$Type(network_0, crypto_1){
  this.network_0 = network_0;
  this.crypto_1 = crypto_1;
}

defineClass(2801, $wnd.Function, $intern_22, ChatController$lambda$59$Type);
_.apply_0 = function apply_454(arg0){
  return lambda$59(this.network_0, this.crypto_1, arg0);
}
;
function ChatController$lambda$6$Type($$outer_0, ref_1){
  this.$$outer_0 = $$outer_0;
  this.ref_1 = ref_1;
}

defineClass(2786, $wnd.Function, $intern_22, ChatController$lambda$6$Type);
_.apply_0 = function apply_455(arg0){
  return $lambda$6_3(this.$$outer_0, this.ref_1, arg0);
}
;
function ChatController$lambda$61$Type(network_0, crypto_1){
  this.network_0 = network_0;
  this.crypto_1 = crypto_1;
}

defineClass(2802, $wnd.Function, $intern_22, ChatController$lambda$61$Type);
_.apply_0 = function apply_456(arg0){
  return lambda$61(this.network_0, this.crypto_1, arg0);
}
;
function ChatController$lambda$63$Type(context_0){
  this.context_0 = context_0;
}

defineClass(2803, $wnd.Function, $intern_22, ChatController$lambda$63$Type);
_.apply_0 = function apply_457(arg0){
  return lambda$63(this.context_0, arg0);
}
;
function ChatController$lambda$64$Type(chatRoot_0, cache_1, context_2){
  this.chatRoot_0 = chatRoot_0;
  this.cache_1 = cache_1;
  this.context_2 = context_2;
}

defineClass(2804, $wnd.Function, $intern_22, ChatController$lambda$64$Type);
_.apply_0 = function apply_458(arg0){
  return lambda$64_0(this.chatRoot_0, this.cache_1, this.context_2, arg0);
}
;
function ChatController$lambda$65$Type(chatRoot_0, chat_1, cache_2, context_3){
  this.chatRoot_0 = chatRoot_0;
  this.chat_1 = chat_1;
  this.cache_2 = cache_2;
  this.context_3 = context_3;
}

defineClass(2832, $wnd.Function, $intern_22, ChatController$lambda$65$Type);
_.apply_0 = function apply_459(arg0){
  return lambda$65_0(this.chatRoot_0, this.chat_1, this.cache_2, this.context_3, arg0);
}
;
function ChatController$lambda$66$Type(chatRoot_0, chat_1, priv_2, cache_3, context_4){
  this.chatRoot_0 = chatRoot_0;
  this.chat_1 = chat_1;
  this.priv_2 = priv_2;
  this.cache_3 = cache_3;
  this.context_4 = context_4;
}

defineClass(2833, $wnd.Function, $intern_22, ChatController$lambda$66$Type);
_.apply_0 = function apply_460(arg0){
  return lambda$66(this.chatRoot_0, this.chat_1, this.priv_2, this.cache_3, this.context_4, arg0);
}
;
function ChatController$lambda$7$Type($$outer_0, ref_1){
  this.$$outer_0 = $$outer_0;
  this.ref_1 = ref_1;
}

defineClass(2805, $wnd.Function, $intern_22, ChatController$lambda$7$Type);
_.apply_0 = function apply_461(arg0){
  return $lambda$7_2(this.$$outer_0, this.ref_1, arg0);
}
;
function ChatController$lambda$8$Type(ref_0, s_1){
  this.ref_0 = ref_0;
  this.s_1 = s_1;
}

defineClass(2806, $wnd.Function, $intern_22, ChatController$lambda$8$Type);
_.apply_0 = function apply_462(arg0){
  return lambda$8_2(this.ref_0, this.s_1, arg0);
}
;
function ChatController$lambda$9$Type($$outer_0, ref_1, sourceIndex_2){
  this.$$outer_0 = $$outer_0;
  this.ref_1 = ref_1;
  this.sourceIndex_2 = sourceIndex_2;
}

defineClass(2787, $wnd.Function, $intern_22, ChatController$lambda$9$Type);
_.apply_0 = function apply_463(arg0){
  return $lambda$9_5(this.$$outer_0, this.ref_1, this.sourceIndex_2, arg0);
}
;
_.sourceIndex_2 = 0;
function $apply_6(this$static, next){
  var msgs, refs, toRevoke;
  msgs = new ArrayList_1(this$static.newMessages);
  $addAll_0(msgs, next.newMessages);
  refs = new ArrayList_1(this$static.mediaToCopy);
  $addAll_0(refs, next.mediaToCopy);
  toRevoke = new HashSet_1(this$static.toRevokeAccess);
  $addAll(toRevoke, next.toRevokeAccess);
  return new ChatUpdate_0(next.state, msgs, refs, toRevoke, $flatMap(this$static.priv, makeLambdaFunction(ChatUpdate$lambda$0$Type.prototype.apply_0, ChatUpdate$lambda$0$Type, [next])));
}

function $withState_0(this$static, c){
  return new ChatUpdate_0(c, this$static.newMessages, this$static.mediaToCopy, this$static.toRevokeAccess, this$static.priv);
}

function ChatUpdate(state, newMessages, mediaToCopy, toRevokeAccess){
  ChatUpdate_0.call(this, state, newMessages, mediaToCopy, toRevokeAccess, ($clinit_Optional() , $clinit_Optional() , EMPTY));
}

function ChatUpdate_0(state, newMessages, mediaToCopy, toRevokeAccess, priv){
  this.state = state;
  this.newMessages = newMessages;
  this.mediaToCopy = mediaToCopy;
  this.toRevokeAccess = toRevokeAccess;
  this.priv = priv;
}

function lambda$0_7(next_0, a_1){
  return $map(next_0.priv, makeLambdaFunction(ChatUpdate$0methodref$apply$Type.prototype.apply_0, ChatUpdate$0methodref$apply$Type, [a_1]));
}

defineClass(113, 1, {113:1}, ChatUpdate, ChatUpdate_0);
var Lpeergos_shared_messaging_ChatUpdate_2_classLit = createForClass('peergos.shared.messaging', 'ChatUpdate', 113);
function ChatUpdate$0methodref$apply$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3523, $wnd.Function, $intern_22, ChatUpdate$0methodref$apply$Type);
_.apply_0 = function apply_464(arg0){
  return $apply_7(this.$$outer_0, castTo(arg0, 247));
}
;
function ChatUpdate$lambda$0$Type(next_0){
  this.next_0 = next_0;
}

defineClass(3522, $wnd.Function, $intern_22, ChatUpdate$lambda$0$Type);
_.apply_0 = function apply_465(arg0){
  return lambda$0_7(this.next_0, arg0);
}
;
function $addMessages(this$static, initialVersion, committer, msgIndex, msgs){
  var buf, msg, msg$iterator, msgData, raw, sizes;
  buf = new ByteArrayOutputStream;
  sizes = new ArrayList;
  for (msg$iterator = msgs.iterator(); msg$iterator.hasNext_0();) {
    msg = castTo(msg$iterator.next_1(), 137);
    try {
      msgData = $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject$CborByteArray_2_classLit, 1), $intern_0, 27, 0, [new CborObject$CborByteArray(msg.signature), new CborObject$CborByteArray($toByteArray_2($toCbor_36(msg.msg)))]))));
      checkCriticalNotNull(msgData);
      $write_2(buf, msgData, 0, msgData.length);
      $add(sizes, valueOf_1(msgData.length));
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (!instanceOf($e0, 62))
        throw toJs($e0);
    }
  }
  raw = $toByteArray(buf);
  return $thenCompose($clean(this$static.messages, initialVersion, committer, this$static.network, this$static.crypto_0), makeLambdaFunction(FileBackedMessageStore$lambda$17$Type.prototype.apply_0, FileBackedMessageStore$lambda$17$Type, [this$static, raw, sizes, msgIndex, committer]));
}

function $findOffset(this$static, r, buf, previousIndex, previousByteOffset, index_0, remainingBytes){
  var din, toRead;
  if (compare_1(remainingBytes, 0) == 0)
    return new CompletableFuture_0(new Pair(valueOf_2(previousByteOffset), valueOf_1(toInt_0(sub_1(index_0, previousIndex)))));
  toRead = gt(remainingBytes, buf.length)?buf.length:toInt_0(remainingBytes);
  din = new DataInputStream(new ByteArrayInputStream(buf));
  return $thenCompose(r.readIntoArray(buf, 0, toRead), makeLambdaFunction(FileBackedMessageStore$lambda$2$Type.prototype.apply_0, FileBackedMessageStore$lambda$2$Type, [this$static, previousIndex, previousByteOffset, din, index_0, r, buf, remainingBytes]));
}

function $getChunkByteOffset(this$static, index_0){
  if (lt($getSize(this$static.messages), $intern_70))
    return new CompletableFuture_0(new Pair(valueOf_2(0), valueOf_1(toInt_0(index_0))));
  return $thenCompose($getInputStream_2(this$static.indexFile, $get_32(this$static.indexFile.version, this$static.indexFile.pointer.capability.writer).props, this$static.network, this$static.crypto_0, makeLambdaFunction(FileBackedMessageStore$lambda$0$Type.prototype.accept_5, FileBackedMessageStore$lambda$0$Type, [])), makeLambdaFunction(FileBackedMessageStore$lambda$1$Type.prototype.apply_0, FileBackedMessageStore$lambda$1$Type, [this$static, index_0]));
}

function $getMessages(this$static, fromIndex, toIndex){
  var res;
  res = new ArrayList;
  return $thenApply($thenCompose($getInputStream_2(this$static.messages, $get_32(this$static.messages.version, this$static.messages.pointer.capability.writer).props, this$static.network, this$static.crypto_0, makeLambdaFunction(FileBackedMessageStore$lambda$10$Type.prototype.accept_5, FileBackedMessageStore$lambda$10$Type, [])), makeLambdaFunction(FileBackedMessageStore$lambda$11$Type.prototype.apply_0, FileBackedMessageStore$lambda$11$Type, [this$static, res, toIndex, fromIndex])), makeLambdaFunction(FileBackedMessageStore$lambda$16$Type.prototype.apply_0, FileBackedMessageStore$lambda$16$Type, [res]));
}

function $getMessagesFrom(this$static, index_0){
  var res;
  res = new ArrayList;
  return $thenApply($thenCompose($getInputStream_2(this$static.messages, $get_32(this$static.messages.version, this$static.messages.pointer.capability.writer).props, this$static.network, this$static.crypto_0, makeLambdaFunction(FileBackedMessageStore$lambda$3$Type.prototype.accept_5, FileBackedMessageStore$lambda$3$Type, [])), makeLambdaFunction(FileBackedMessageStore$lambda$4$Type.prototype.apply_0, FileBackedMessageStore$lambda$4$Type, [this$static, res, index_0])), makeLambdaFunction(FileBackedMessageStore$lambda$9$Type.prototype.apply_0, FileBackedMessageStore$lambda$9$Type, [res]));
}

function $lambda$1_6(this$static, index_1, reader_1){
  return $findOffset(this$static, reader_1, initUnidimensionalArray(B_classLit, $intern_28, 8, $intern_65, 15, 1), 0, 0, index_1, $getSize(this$static.indexFile));
}

function $lambda$11_1(this$static, res_1, toIndex_2, fromIndex_4, reader_3){
  return $thenCompose($getChunkByteOffset(this$static, fromIndex_4), makeLambdaFunction(FileBackedMessageStore$lambda$12$Type.prototype.apply_0, FileBackedMessageStore$lambda$12$Type, [this$static, res_1, toIndex_2, fromIndex_4, reader_3]));
}

function $lambda$12_3(this$static, res_1, toIndex_2, fromIndex_4, reader_6, p_4){
  return $thenCompose(reader_6.seek_1(castTo(p_4.left, 69).value_0), makeLambdaFunction(FileBackedMessageStore$lambda$13$Type.prototype.apply_0, FileBackedMessageStore$lambda$13$Type, [this$static, res_1, p_4, toIndex_2, fromIndex_4]));
}

function $lambda$13_3(this$static, res_1, p_2, toIndex_3, fromIndex_5, seeked_4){
  return seeked_4.parseLimitedStream(makeLambdaFunction(FileBackedMessageStore$2methodref$fromCbor$Type.prototype.apply_0, FileBackedMessageStore$2methodref$fromCbor$Type, []), new FileBackedMessageStore$3methodref$add$Type(res_1), castTo(p_2.right, 100).value_0, toInt_0(sub_1(toIndex_3, fromIndex_5)), sub_1($getSize(this$static.messages), castTo(p_2.left, 69).value_0));
}

function $lambda$17_5(this$static, raw_1, sizes_2, msgIndex_3, committer_5, p_4){
  return $thenCompose($overwriteSection(castTo(p_4.left, 19), castTo(p_4.right, 43), committer_5, new AsyncReader$ArrayBacked(raw_1), $getSize(castTo(p_4.left, 19)), add_1($getSize(castTo(p_4.left, 19)), raw_1.length), this$static.network, this$static.crypto_0, makeLambdaFunction(FileBackedMessageStore$lambda$18$Type.prototype.accept_5, FileBackedMessageStore$lambda$18$Type, [])), makeLambdaFunction(FileBackedMessageStore$lambda$19$Type.prototype.apply_0, FileBackedMessageStore$lambda$19$Type, [this$static, p_4, raw_1, sizes_2, msgIndex_3, committer_5]));
}

function $lambda$19_2(this$static, p_1, raw_2, sizes_3, msgIndex_4, committer_6, s2_5){
  var bout, count, dout, newChunk, size_0, totalSize, twoLongs;
  size_0 = $getSize(castTo(p_1.left, 19));
  newChunk = gt(div(add_1(raw_2.length, size_0), $intern_70), div(size_0, $intern_70));
  if (!newChunk)
    return new CompletableFuture_0(s2_5);
  bout = new ByteArrayOutputStream;
  dout = new DataOutputStream(bout);
  count = 0;
  totalSize = 0;
  while (count < sizes_3.array.length) {
    totalSize += (checkCriticalElementIndex(count, sizes_3.array.length) , castTo(sizes_3.array[count], 100)).value_0;
    ++count;
    if (gt(div(add_1(totalSize, size_0), $intern_70), div(size_0, $intern_70)))
      break;
  }
  try {
    $writeInt(dout, toInt_0(shr_0(add_1(msgIndex_4, count), 32)));
    $writeInt(dout, toInt_0(add_1(msgIndex_4, count)));
    $writeInt(dout, toInt_0(shr_0(add_1(size_0, totalSize), 32)));
    $writeInt(dout, toInt_0(add_1(size_0, totalSize)));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (!instanceOf($e0, 62))
      throw toJs($e0);
  }
  twoLongs = $toByteArray(bout);
  return $overwriteSection(this$static.indexFile, s2_5, committer_6, new AsyncReader$ArrayBacked(twoLongs), $getSize(this$static.indexFile), add_1($getSize(this$static.indexFile), twoLongs.length), this$static.network, this$static.crypto_0, makeLambdaFunction(FileBackedMessageStore$lambda$20$Type.prototype.accept_5, FileBackedMessageStore$lambda$20$Type, []));
}

function $lambda$2_4(this$static, previousIndex_1, previousByteOffset_3, din_5, index_6, r_8, buf_9, remainingBytes_10, read_7){
  var byteOffset, i, msgIndex, prevBytes, prevIndex;
  prevIndex = previousIndex_1;
  prevBytes = previousByteOffset_3;
  for (i = 0; i < (read_7.value_0 / 16 | 0); i++) {
    try {
      msgIndex = $readLong(din_5);
      byteOffset = $readLong(din_5);
      if (compare_1(msgIndex, index_6) > 0)
        return new CompletableFuture_0(new Pair(valueOf_2(prevBytes), valueOf_1(toInt_0(sub_1(index_6, prevIndex)))));
      prevIndex = msgIndex;
      prevBytes = byteOffset;
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (!instanceOf($e0, 62))
        throw toJs($e0);
    }
  }
  return $findOffset(this$static, r_8, buf_9, prevIndex, prevBytes, index_6, sub_1(remainingBytes_10, read_7.value_0));
}

function $lambda$4_4(this$static, res_1, index_2, reader_2){
  return $thenCompose($getChunkByteOffset(this$static, index_2), makeLambdaFunction(FileBackedMessageStore$lambda$5$Type.prototype.apply_0, FileBackedMessageStore$lambda$5$Type, [this$static, res_1, reader_2]));
}

function $lambda$5_5(this$static, res_1, reader_2, p_2){
  return $thenCompose(reader_2.seek_1(castTo(p_2.left, 69).value_0), makeLambdaFunction(FileBackedMessageStore$lambda$6$Type.prototype.apply_0, FileBackedMessageStore$lambda$6$Type, [this$static, res_1, p_2]));
}

function $lambda$6_4(this$static, res_1, p_2, seeked_2){
  return seeked_2.parseLimitedStream(makeLambdaFunction(FileBackedMessageStore$0methodref$fromCbor$Type.prototype.apply_0, FileBackedMessageStore$0methodref$fromCbor$Type, []), new FileBackedMessageStore$1methodref$add$Type(res_1), castTo(p_2.right, 100).value_0, $intern_1, sub_1($getSize(this$static.messages), castTo(p_2.left, 69).value_0));
}

function $revokeAccess(this$static, usernames, s, c){
  return $unShareReadAccessWith_0(this$static.context, this$static.sharedDir, usernames, s, c);
}

function FileBackedMessageStore(messages, indexFile, context, sharedDir){
  this.messages = messages;
  this.indexFile = indexFile;
  this.network = context.network;
  this.crypto_0 = context.crypto;
  this.context = context;
  this.sharedDir = sharedDir;
}

defineClass(1150, 1, {}, FileBackedMessageStore);
var Lpeergos_shared_messaging_FileBackedMessageStore_2_classLit = createForClass('peergos.shared.messaging', 'FileBackedMessageStore', 1150);
function FileBackedMessageStore$0methodref$fromCbor$Type(){
}

defineClass(3513, $wnd.Function, $intern_22, FileBackedMessageStore$0methodref$fromCbor$Type);
_.apply_0 = function apply_466(arg0){
  return fromCbor_52(castTo(arg0, 7));
}
;
function FileBackedMessageStore$1methodref$add$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1151, 1, $intern_32, FileBackedMessageStore$1methodref$add$Type);
_.accept = function accept_48(arg0){
  $add(this.$$outer_0, castTo(arg0, 137));
}
;
_.andThen = function andThen_24(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_messaging_FileBackedMessageStore$1methodref$add$Type_2_classLit = createForClass('peergos.shared.messaging', 'FileBackedMessageStore/1methodref$add$Type', 1151);
function FileBackedMessageStore$2methodref$fromCbor$Type(){
}

defineClass(3516, $wnd.Function, $intern_22, FileBackedMessageStore$2methodref$fromCbor$Type);
_.apply_0 = function apply_467(arg0){
  return fromCbor_52(castTo(arg0, 7));
}
;
function FileBackedMessageStore$3methodref$add$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1152, 1, $intern_32, FileBackedMessageStore$3methodref$add$Type);
_.accept = function accept_49(arg0){
  $add(this.$$outer_0, castTo(arg0, 137));
}
;
_.andThen = function andThen_25(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_messaging_FileBackedMessageStore$3methodref$add$Type_2_classLit = createForClass('peergos.shared.messaging', 'FileBackedMessageStore/3methodref$add$Type', 1152);
function FileBackedMessageStore$lambda$0$Type(){
}

defineClass(3501, $wnd.Function, {}, FileBackedMessageStore$lambda$0$Type);
_.accept_5 = function accept_50(arg0){
}
;
function FileBackedMessageStore$lambda$1$Type($$outer_0, index_1){
  this.$$outer_0 = $$outer_0;
  this.index_1 = index_1;
}

defineClass(3502, $wnd.Function, $intern_22, FileBackedMessageStore$lambda$1$Type);
_.apply_0 = function apply_468(arg0){
  return $lambda$1_6(this.$$outer_0, this.index_1, arg0);
}
;
_.index_1 = 0;
function FileBackedMessageStore$lambda$10$Type(){
}

defineClass(3507, $wnd.Function, {}, FileBackedMessageStore$lambda$10$Type);
_.accept_5 = function accept_51(arg0){
}
;
function FileBackedMessageStore$lambda$11$Type($$outer_0, res_1, toIndex_2, fromIndex_4){
  this.$$outer_0 = $$outer_0;
  this.res_1 = res_1;
  this.toIndex_2 = toIndex_2;
  this.fromIndex_4 = fromIndex_4;
}

defineClass(3508, $wnd.Function, $intern_22, FileBackedMessageStore$lambda$11$Type);
_.apply_0 = function apply_469(arg0){
  return $lambda$11_1(this.$$outer_0, this.res_1, this.toIndex_2, this.fromIndex_4, arg0);
}
;
_.fromIndex_4 = 0;
_.toIndex_2 = 0;
function FileBackedMessageStore$lambda$12$Type($$outer_0, res_1, toIndex_2, fromIndex_4, reader_6){
  this.$$outer_0 = $$outer_0;
  this.res_1 = res_1;
  this.toIndex_2 = toIndex_2;
  this.fromIndex_4 = fromIndex_4;
  this.reader_6 = reader_6;
}

defineClass(3514, $wnd.Function, $intern_22, FileBackedMessageStore$lambda$12$Type);
_.apply_0 = function apply_470(arg0){
  return $lambda$12_3(this.$$outer_0, this.res_1, this.toIndex_2, this.fromIndex_4, this.reader_6, arg0);
}
;
_.fromIndex_4 = 0;
_.toIndex_2 = 0;
function FileBackedMessageStore$lambda$13$Type($$outer_0, res_1, p_2, toIndex_3, fromIndex_5){
  this.$$outer_0 = $$outer_0;
  this.res_1 = res_1;
  this.p_2 = p_2;
  this.toIndex_3 = toIndex_3;
  this.fromIndex_5 = fromIndex_5;
}

defineClass(3515, $wnd.Function, $intern_22, FileBackedMessageStore$lambda$13$Type);
_.apply_0 = function apply_471(arg0){
  return $lambda$13_3(this.$$outer_0, this.res_1, this.p_2, this.toIndex_3, this.fromIndex_5, arg0);
}
;
_.fromIndex_5 = 0;
_.toIndex_3 = 0;
function FileBackedMessageStore$lambda$16$Type(res_0){
  this.res_0 = res_0;
}

defineClass(3509, $wnd.Function, $intern_22, FileBackedMessageStore$lambda$16$Type);
_.apply_0 = function apply_472(arg0){
  return this.res_0;
}
;
function FileBackedMessageStore$lambda$17$Type($$outer_0, raw_1, sizes_2, msgIndex_3, committer_5){
  this.$$outer_0 = $$outer_0;
  this.raw_1 = raw_1;
  this.sizes_2 = sizes_2;
  this.msgIndex_3 = msgIndex_3;
  this.committer_5 = committer_5;
}

defineClass(3510, $wnd.Function, $intern_22, FileBackedMessageStore$lambda$17$Type);
_.apply_0 = function apply_473(arg0){
  return $lambda$17_5(this.$$outer_0, this.raw_1, this.sizes_2, this.msgIndex_3, this.committer_5, arg0);
}
;
_.msgIndex_3 = 0;
function FileBackedMessageStore$lambda$18$Type(){
}

defineClass(3517, $wnd.Function, {}, FileBackedMessageStore$lambda$18$Type);
_.accept_5 = function accept_52(arg0){
}
;
function FileBackedMessageStore$lambda$19$Type($$outer_0, p_1, raw_2, sizes_3, msgIndex_4, committer_6){
  this.$$outer_0 = $$outer_0;
  this.p_1 = p_1;
  this.raw_2 = raw_2;
  this.sizes_3 = sizes_3;
  this.msgIndex_4 = msgIndex_4;
  this.committer_6 = committer_6;
}

defineClass(3518, $wnd.Function, $intern_22, FileBackedMessageStore$lambda$19$Type);
_.apply_0 = function apply_474(arg0){
  return $lambda$19_2(this.$$outer_0, this.p_1, this.raw_2, this.sizes_3, this.msgIndex_4, this.committer_6, arg0);
}
;
_.msgIndex_4 = 0;
function FileBackedMessageStore$lambda$2$Type($$outer_0, previousIndex_1, previousByteOffset_3, din_5, index_6, r_8, buf_9, remainingBytes_10){
  this.$$outer_0 = $$outer_0;
  this.previousIndex_1 = previousIndex_1;
  this.previousByteOffset_3 = previousByteOffset_3;
  this.din_5 = din_5;
  this.index_6 = index_6;
  this.r_8 = r_8;
  this.buf_9 = buf_9;
  this.remainingBytes_10 = remainingBytes_10;
}

defineClass(3503, $wnd.Function, $intern_22, FileBackedMessageStore$lambda$2$Type);
_.apply_0 = function apply_475(arg0){
  return $lambda$2_4(this.$$outer_0, this.previousIndex_1, this.previousByteOffset_3, this.din_5, this.index_6, this.r_8, this.buf_9, this.remainingBytes_10, arg0);
}
;
_.index_6 = 0;
_.previousByteOffset_3 = 0;
_.previousIndex_1 = 0;
_.remainingBytes_10 = 0;
function FileBackedMessageStore$lambda$20$Type(){
}

defineClass(3519, $wnd.Function, {}, FileBackedMessageStore$lambda$20$Type);
_.accept_5 = function accept_53(arg0){
}
;
function FileBackedMessageStore$lambda$3$Type(){
}

defineClass(3504, $wnd.Function, {}, FileBackedMessageStore$lambda$3$Type);
_.accept_5 = function accept_54(arg0){
}
;
function FileBackedMessageStore$lambda$4$Type($$outer_0, res_1, index_2){
  this.$$outer_0 = $$outer_0;
  this.res_1 = res_1;
  this.index_2 = index_2;
}

defineClass(3505, $wnd.Function, $intern_22, FileBackedMessageStore$lambda$4$Type);
_.apply_0 = function apply_476(arg0){
  return $lambda$4_4(this.$$outer_0, this.res_1, this.index_2, arg0);
}
;
_.index_2 = 0;
function FileBackedMessageStore$lambda$5$Type($$outer_0, res_1, reader_2){
  this.$$outer_0 = $$outer_0;
  this.res_1 = res_1;
  this.reader_2 = reader_2;
}

defineClass(3511, $wnd.Function, $intern_22, FileBackedMessageStore$lambda$5$Type);
_.apply_0 = function apply_477(arg0){
  return $lambda$5_5(this.$$outer_0, this.res_1, this.reader_2, arg0);
}
;
function FileBackedMessageStore$lambda$6$Type($$outer_0, res_1, p_2){
  this.$$outer_0 = $$outer_0;
  this.res_1 = res_1;
  this.p_2 = p_2;
}

defineClass(3512, $wnd.Function, $intern_22, FileBackedMessageStore$lambda$6$Type);
_.apply_0 = function apply_478(arg0){
  return $lambda$6_4(this.$$outer_0, this.res_1, this.p_2, arg0);
}
;
function FileBackedMessageStore$lambda$9$Type(res_0){
  this.res_0 = res_0;
}

defineClass(3506, $wnd.Function, $intern_22, FileBackedMessageStore$lambda$9$Type);
_.apply_0 = function apply_479(arg0){
  return this.res_0;
}
;
function $toCbor_34(this$static){
  var result, transformed;
  result = new TreeMap;
  $put_6(result, 'a', this$static.author);
  $put_6(result, 't', this$static.updateTimestamp);
  $put_6(result, 'v', new CborObject$CborString(this$static.value_0));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(result), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function GroupProperty(author, updateTimestamp, value_0){
  this.author = author;
  this.updateTimestamp = updateTimestamp;
  this.value_0 = value_0;
}

function fromCbor_43(cbor){
  var author, m, timestamp, value_0;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Incorrect cbor: ' + cbor));
  m = castTo(cbor, 18);
  author = castTo($get_13(m, 'a', makeLambdaFunction(GroupProperty$0methodref$fromCbor$Type.prototype.apply_0, GroupProperty$0methodref$fromCbor$Type, [])), 103);
  timestamp = castTo($get_13(m, 't', makeLambdaFunction(GroupProperty$1methodref$fromCbor$Type.prototype.apply_0, GroupProperty$1methodref$fromCbor$Type, [])), 194);
  value_0 = castTo(castTo($get_0(m.values_0, new CborObject$CborString('v')), 7), 13).value_0;
  return new GroupProperty(author, timestamp, value_0);
}

defineClass(230, 1, {7:1, 230:1}, GroupProperty);
_.serialize = function serialize_60(){
  return $toByteArray_2($toCbor_34(this));
}
;
_.equals_0 = function equals_66(o){
  var that;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_messaging_GroupProperty_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 230);
  return equals_28(this.author, that.author) && equals_28(this.updateTimestamp, that.updateTimestamp) && this.value_0 == that.value_0;
}
;
_.hashCode_1 = function hashCode_64(){
  return hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.author, this.updateTimestamp, this.value_0]));
}
;
_.toCbor = function toCbor_52(){
  return $toCbor_34(this);
}
;
var Lpeergos_shared_messaging_GroupProperty_2_classLit = createForClass('peergos.shared.messaging', 'GroupProperty', 230);
function GroupProperty$0methodref$fromCbor$Type(){
}

defineClass(3476, $wnd.Function, $intern_22, GroupProperty$0methodref$fromCbor$Type);
_.apply_0 = function apply_480(arg0){
  return fromCbor_44(castTo(arg0, 7));
}
;
function GroupProperty$1methodref$fromCbor$Type(){
}

defineClass(3477, $wnd.Function, $intern_22, GroupProperty$1methodref$fromCbor$Type);
_.apply_0 = function apply_481(arg0){
  return fromCbor_53(castTo(arg0, 7));
}
;
function $compareTo_17(this$static, other){
  return compare_12(this$static.id_0, other.id_0);
}

function $equals_19(this$static, obj){
  if (!instanceOf(obj, 103))
    return false;
  return equals_17(this$static.id_0, castTo(obj, 103).id_0);
}

function $fork(this$static, counter){
  var descendant;
  descendant = initUnidimensionalArray(I_classLit, $intern_29, 8, this$static.id_0.length + 1, 15, 1);
  arraycopy(this$static.id_0, 0, descendant, 0, this$static.id_0.length);
  descendant[this$static.id_0.length] = counter;
  return new Id_1(descendant);
}

function Id_0(){
  Id_1.call(this, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [0]));
}

function Id_1(id_0){
  this.id_0 = id_0;
}

function compare_12(a, b){
  var i;
  if (maskUndefined(a) === maskUndefined(b)) {
    return 0;
  }
   else if (a != null && b != null) {
    i = mismatch(a, b, $wnd.Math.min(a.length, b.length));
    return i >= 0?compare_4(a[i], b[i]):a.length - b.length;
  }
   else {
    return a == null?-1:1;
  }
}

function fromCbor_44(cbor){
  if (!instanceOf(cbor, 21))
    throw toJs(new IllegalStateException_0('Incorrect cbor: ' + cbor));
  return new Id_1($toArray_1($mapToInt($map_2(castTo(cbor, 21), makeLambdaFunction(Id$lambda$1$Type.prototype.apply_0, Id$lambda$1$Type, [])).stream(), new Id$lambda$2$Type)));
}

function mismatch(a, b, length_0){
  var i;
  i = 0;
  while (i < length_0) {
    if (a[i] != b[i]) {
      return i;
    }
    ++i;
  }
  return -1;
}

defineClass(103, 1, {57:1, 7:1, 103:1}, Id_0, Id_1);
_.compareTo_0 = function compareTo_18(other){
  return $compareTo_17(this, castTo(other, 103));
}
;
_.serialize = function serialize_61(){
  return $toByteArray_2(new CborObject$CborList(castTo($collect_0($mapToObj(stream_4(this.id_0), new Id$0methodref$ctor$Type), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17)));
}
;
_.equals_0 = function equals_67(obj){
  return $equals_19(this, obj);
}
;
_.hashCode_1 = function hashCode_65(){
  return hashCode_18(this.id_0);
}
;
_.toCbor = function toCbor_53(){
  return new CborObject$CborList(castTo($collect_0($mapToObj(stream_4(this.id_0), new Id$0methodref$ctor$Type), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17));
}
;
_.toString_0 = function toString_60(){
  return '[' + castToString($collect_0($map_0($mapToObj(stream_4(this.id_0), new IntStreamImpl$3methodref$valueOf$Type), makeLambdaFunction(Id$lambda$3$Type.prototype.apply_0, Id$lambda$3$Type, [])), of_3(new Collectors$lambda$15$Type(',', ''), new Collectors$9methodref$add$Type, new Collectors$10methodref$merge$Type, makeLambdaFunction(Collectors$11methodref$toString$Type.prototype.apply_0, Collectors$11methodref$toString$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [])))) + ']';
}
;
var Lpeergos_shared_messaging_Id_2_classLit = createForClass('peergos.shared.messaging', 'Id', 103);
function Id$0methodref$ctor$Type(){
}

defineClass(474, 1, {}, Id$0methodref$ctor$Type);
_.apply_2 = function apply_482(arg0){
  return new CborObject$CborLong(arg0);
}
;
var Lpeergos_shared_messaging_Id$0methodref$ctor$Type_2_classLit = createForClass('peergos.shared.messaging', 'Id/0methodref$ctor$Type', 474);
function Id$lambda$1$Type(){
}

defineClass(2716, $wnd.Function, $intern_22, Id$lambda$1$Type);
_.apply_0 = function apply_483(arg0){
  return valueOf_1(toInt_0(castTo(castTo(arg0, 7), 29).value_0));
}
;
function Id$lambda$2$Type(){
}

defineClass(876, 1, {}, Id$lambda$2$Type);
_.applyAsInt = function applyAsInt(arg0){
  return castTo(arg0, 100).value_0;
}
;
var Lpeergos_shared_messaging_Id$lambda$2$Type_2_classLit = createForClass('peergos.shared.messaging', 'Id/lambda$2$Type', 876);
function Id$lambda$3$Type(){
}

defineClass(2717, $wnd.Function, $intern_22, Id$lambda$3$Type);
_.apply_0 = function apply_484(arg0){
  return '' + castTo(arg0, 100).value_0;
}
;
function $copy_0(this$static){
  return new Member_0(this$static.username, this$static.id_0, this$static.identity, this$static.chatIdentity, this$static.messagesMergedUpto, this$static.membersInvited, this$static.removed);
}

function $incrementInvited(this$static){
  return new Member_0(this$static.username, this$static.id_0, this$static.identity, this$static.chatIdentity, this$static.messagesMergedUpto, this$static.membersInvited + 1, this$static.removed);
}

function $incrementMessages(this$static){
  return new Member_0(this$static.username, this$static.id_0, this$static.identity, this$static.chatIdentity, add_1(this$static.messagesMergedUpto, 1), this$static.membersInvited, this$static.removed);
}

function $removed(this$static){
  return new Member_0(this$static.username, this$static.id_0, this$static.identity, this$static.chatIdentity, this$static.messagesMergedUpto, this$static.membersInvited, true);
}

function $toCbor_35(this$static){
  var result, transformed;
  result = new TreeMap;
  $put_6(result, 'u', new CborObject$CborString(this$static.username));
  $put_6(result, 'i', this$static.id_0);
  $put_6(result, 'p', this$static.identity);
  $ifPresent(this$static.chatIdentity, new Member$lambda$0$Type(result));
  $put_6(result, 'm', new CborObject$CborLong(this$static.messagesMergedUpto));
  $put_6(result, 'c', new CborObject$CborLong(this$static.membersInvited));
  $put_6(result, 'r', new CborObject$CborBoolean(this$static.removed));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(result), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function Member(username, id_0, identity, messagesMergedUpto){
  Member_0.call(this, username, id_0, identity, ($clinit_Optional() , $clinit_Optional() , EMPTY), messagesMergedUpto, 0, false);
}

function Member_0(username, id_0, identity, chatIdentity, messagesMergedUpto, membersInvited, removed){
  this.username = username;
  this.id_0 = id_0;
  this.identity = identity;
  this.chatIdentity = chatIdentity;
  this.messagesMergedUpto = messagesMergedUpto;
  this.membersInvited = membersInvited;
  this.removed = removed;
}

function fromCbor_45(cbor){
  var chatIdentity, id_0, m, membersInvited, messagesMergedUpTo, publicIdentity, removed, username, val;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Incorrect cbor: ' + cbor));
  m = castTo(cbor, 18);
  username = castTo(castTo($get_0(m.values_0, new CborObject$CborString('u')), 7), 13).value_0;
  id_0 = castTo($get_13(m, 'i', makeLambdaFunction(Member$0methodref$fromCbor$Type.prototype.apply_0, Member$0methodref$fromCbor$Type, [])), 103);
  publicIdentity = castTo($get_13(m, 'p', makeLambdaFunction(Member$1methodref$fromCbor$Type.prototype.apply_0, Member$1methodref$fromCbor$Type, [])), 55);
  chatIdentity = $getOptional(m, 's', makeLambdaFunction(Member$2methodref$fromCbor$Type.prototype.apply_0, Member$2methodref$fromCbor$Type, []));
  messagesMergedUpTo = castTo(castTo($get_0(m.values_0, new CborObject$CborString('m')), 7), 29).value_0;
  membersInvited = toInt_0(castTo(castTo($get_0(m.values_0, new CborObject$CborString('c')), 7), 29).value_0);
  removed = (val = castTo(castTo($get_0(m.values_0, new CborObject$CborString('r')), 7), 63) , !!val && val.value_0);
  return new Member_0(username, id_0, publicIdentity, chatIdentity, messagesMergedUpTo, membersInvited, removed);
}

defineClass(76, 1, {7:1, 76:1}, Member, Member_0);
_.serialize = function serialize_62(){
  return $toByteArray_2($toCbor_35(this));
}
;
_.equals_0 = function equals_68(o){
  var member;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_messaging_Member_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  member = castTo(o, 76);
  return eq(this.messagesMergedUpto, member.messagesMergedUpto) && this.membersInvited == member.membersInvited && this.removed == member.removed && this.username == member.username && equals_28(this.id_0, member.id_0) && equals_28(this.identity, member.identity) && equals_28(this.chatIdentity, member.chatIdentity);
}
;
_.hashCode_1 = function hashCode_66(){
  return hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.username, this.id_0, this.identity, this.chatIdentity, valueOf_2(this.messagesMergedUpto), valueOf_1(this.membersInvited), ($clinit_Boolean() , this.removed?true:false)]));
}
;
_.toCbor = function toCbor_54(){
  return $toCbor_35(this);
}
;
_.membersInvited = 0;
_.messagesMergedUpto = 0;
_.removed = false;
var Lpeergos_shared_messaging_Member_2_classLit = createForClass('peergos.shared.messaging', 'Member', 76);
function Member$0methodref$fromCbor$Type(){
}

defineClass(3401, $wnd.Function, $intern_22, Member$0methodref$fromCbor$Type);
_.apply_0 = function apply_485(arg0){
  return fromCbor_44(castTo(arg0, 7));
}
;
function Member$1methodref$fromCbor$Type(){
}

defineClass(3402, $wnd.Function, $intern_22, Member$1methodref$fromCbor$Type);
_.apply_0 = function apply_486(arg0){
  return fromCbor_23(castTo(arg0, 7));
}
;
function Member$2methodref$fromCbor$Type(){
}

defineClass(3403, $wnd.Function, $intern_22, Member$2methodref$fromCbor$Type);
_.apply_0 = function apply_487(arg0){
  return fromCbor_11(castTo(arg0, 7));
}
;
function Member$lambda$0$Type(result_0){
  this.result_0 = result_0;
}

defineClass(1063, 1, $intern_32, Member$lambda$0$Type);
_.accept = function accept_55(arg0){
  $put_6(this.result_0, 's', castTo(arg0, 219));
}
;
_.andThen = function andThen_26(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_messaging_Member$lambda$0$Type_2_classLit = createForClass('peergos.shared.messaging', 'Member/lambda$0$Type', 1063);
function $toCbor_36(this$static){
  var result, transformed;
  result = new TreeMap;
  $put_6(result, 'a', this$static.author);
  $put_6(result, 't', this$static.timestamp);
  $put_6(result, 'u', new CborObject$CborLong(add_1(mul_0($intern_49, $toEpochSecond(this$static.creationTime, ($clinit_ZoneOffset() , UTC_0))), this$static.creationTime.time.nano / $intern_50 | 0)));
  $put_6(result, 'r', new CborObject$CborList(this$static.previousMessages));
  $put_6(result, 'p', this$static.payload);
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(result), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function $toString_8(this$static){
  return this$static.author + '(' + this$static.timestamp + ') - ' + this$static.payload;
}

function MessageEnvelope(author, timestamp, creationTime, previousMessages, payload){
  this.author = author;
  this.timestamp = timestamp;
  this.creationTime = creationTime;
  this.previousMessages = previousMessages;
  this.payload = payload;
}

function fromCbor_46(cbor){
  var author, creationTime, m, payload, previousMessages, timestamp;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Incorrect cbor: ' + cbor));
  m = castTo(cbor, 18);
  author = castTo($get_13(m, 'a', makeLambdaFunction(MessageEnvelope$0methodref$fromCbor$Type.prototype.apply_0, MessageEnvelope$0methodref$fromCbor$Type, [])), 103);
  timestamp = castTo($get_13(m, 't', makeLambdaFunction(MessageEnvelope$1methodref$fromCbor$Type.prototype.apply_0, MessageEnvelope$1methodref$fromCbor$Type, [])), 194);
  creationTime = castTo($get_13(m, 'u', makeLambdaFunction(MessageEnvelope$lambda$2$Type.prototype.apply_0, MessageEnvelope$lambda$2$Type, [])), 201);
  previousMessages = $getList(m, 'r', makeLambdaFunction(MessageEnvelope$2methodref$fromCbor$Type.prototype.apply_0, MessageEnvelope$2methodref$fromCbor$Type, []));
  payload = castTo($get_13(m, 'p', makeLambdaFunction(MessageEnvelope$3methodref$fromCbor$Type.prototype.apply_0, MessageEnvelope$3methodref$fromCbor$Type, [])), 234);
  return new MessageEnvelope(author, timestamp, creationTime, previousMessages, payload);
}

function parseUtcMillis(millis){
  return ofEpochSecond(div(millis, $intern_49), toInt_0(mod_0(millis, $intern_49)) * $intern_50, ($clinit_ZoneOffset() , UTC_0));
}

defineClass(220, 1, {7:1, 220:1}, MessageEnvelope);
_.serialize = function serialize_63(){
  return $toByteArray_2($toCbor_36(this));
}
;
_.equals = function equals_69(o){
  var that;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_messaging_MessageEnvelope_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 220);
  return equals_28(this.author, that.author) && equals_28(this.timestamp, that.timestamp) && equals_28(this.creationTime, that.creationTime) && equals_28(this.payload, that.payload);
}
;
_.equals_0 = function(o){
  return this.equals(o);
}
;
_.hashCode = function hashCode_67(){
  return hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.author, this.timestamp, this.creationTime, this.payload]));
}
;
_.hashCode_1 = function(){
  return this.hashCode();
}
;
_.toCbor = function toCbor_55(){
  return $toCbor_36(this);
}
;
_.toString = function toString_61(){
  return $toString_8(this);
}
;
_.toString_0 = function(){
  return this.toString();
}
;
var Lpeergos_shared_messaging_MessageEnvelope_2_classLit = createForClass('peergos.shared.messaging', 'MessageEnvelope', 220);
function MessageEnvelope$0methodref$fromCbor$Type(){
}

defineClass(2711, $wnd.Function, $intern_22, MessageEnvelope$0methodref$fromCbor$Type);
_.apply_0 = function apply_488(arg0){
  return fromCbor_44(castTo(arg0, 7));
}
;
function MessageEnvelope$1methodref$fromCbor$Type(){
}

defineClass(2712, $wnd.Function, $intern_22, MessageEnvelope$1methodref$fromCbor$Type);
_.apply_0 = function apply_489(arg0){
  return fromCbor_53(castTo(arg0, 7));
}
;
function MessageEnvelope$2methodref$fromCbor$Type(){
}

defineClass(2714, $wnd.Function, $intern_22, MessageEnvelope$2methodref$fromCbor$Type);
_.apply_0 = function apply_490(arg0){
  return fromCbor_48(castTo(arg0, 7));
}
;
function MessageEnvelope$3methodref$fromCbor$Type(){
}

defineClass(2715, $wnd.Function, $intern_22, MessageEnvelope$3methodref$fromCbor$Type);
_.apply_0 = function apply_491(arg0){
  return fromCbor_59(castTo(arg0, 7));
}
;
function MessageEnvelope$lambda$2$Type(){
}

defineClass(2713, $wnd.Function, $intern_22, MessageEnvelope$lambda$2$Type);
_.apply_0 = function apply_492(arg0){
  return parseUtcMillis(castTo(castTo(arg0, 7), 29).value_0);
}
;
function $toCbor_37(this$static){
  var result, transformed;
  result = new TreeMap;
  $put_6(result, 'e', $toCbor_36(this$static.envelope));
  $put_6(result, 'r', $toCbor_38(this$static.ref));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(result), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function MessagePair(envelope, ref){
  this.envelope = envelope;
  this.ref = ref;
}

function fromCbor_47(cbor){
  var envelope, m, ref;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Incorrect cbor: ' + cbor));
  m = castTo(cbor, 18);
  envelope = castTo($get_13(m, 'e', makeLambdaFunction(MessagePair$0methodref$fromCbor$Type.prototype.apply_0, MessagePair$0methodref$fromCbor$Type, [])), 220);
  ref = castTo($get_13(m, 'r', makeLambdaFunction(MessagePair$1methodref$fromCbor$Type.prototype.apply_0, MessagePair$1methodref$fromCbor$Type, [])), 152);
  return new MessagePair(envelope, ref);
}

defineClass(402, 1, {7:1, 402:1}, MessagePair);
_.serialize = function serialize_64(){
  return $toByteArray_2($toCbor_37(this));
}
;
_.equals = function equals_70(o){
  var that;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_messaging_MessagePair_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 402);
  return equals_28(this.envelope, that.envelope) && equals_28(this.ref, that.ref);
}
;
_.equals_0 = function(o){
  return this.equals(o);
}
;
_.hashCode = function hashCode_68(){
  return hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.envelope, this.ref]));
}
;
_.hashCode_1 = function(){
  return this.hashCode();
}
;
_.toCbor = function toCbor_56(){
  return $toCbor_37(this);
}
;
_.toString = function toString_62(){
  return this.envelope + ' - ' + this.ref;
}
;
_.toString_0 = function(){
  return this.toString();
}
;
var Lpeergos_shared_messaging_MessagePair_2_classLit = createForClass('peergos.shared.messaging', 'MessagePair', 402);
function MessagePair$0methodref$fromCbor$Type(){
}

defineClass(2724, $wnd.Function, $intern_22, MessagePair$0methodref$fromCbor$Type);
_.apply_0 = function apply_493(arg0){
  return fromCbor_46(castTo(arg0, 7));
}
;
function MessagePair$1methodref$fromCbor$Type(){
}

defineClass(2725, $wnd.Function, $intern_22, MessagePair$1methodref$fromCbor$Type);
_.apply_0 = function apply_494(arg0){
  return fromCbor_48(castTo(arg0, 7));
}
;
function $equals_20(this$static, o){
  var that;
  if (maskUndefined(this$static) === maskUndefined(o))
    return true;
  if (o == null || Lpeergos_shared_messaging_MessageRef_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 152);
  return equals_28(this$static.envelopeHash, that.envelopeHash);
}

function $toCbor_38(this$static){
  var result, transformed;
  result = new TreeMap;
  $put_6(result, 'h', new CborObject$CborByteArray(this$static.envelopeHash.toBytes()));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(result), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function MessageRef(envelopeHash){
  this.envelopeHash = envelopeHash;
}

function fromCbor_48(cbor){
  var h, m;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Incorrect cbor: ' + cbor));
  m = castTo(cbor, 18);
  h = decode_1(castTo(castTo($get_0(m.values_0, new CborObject$CborString('h')), 7), 27).value_0);
  return new MessageRef(h);
}

defineClass(152, 1, {7:1, 152:1}, MessageRef);
_.serialize = function serialize_65(){
  return $toByteArray_2($toCbor_38(this));
}
;
_.equals = function equals_71(o){
  return $equals_20(this, o);
}
;
_.equals_0 = function(o){
  return this.equals(o);
}
;
_.hashCode = function hashCode_69(){
  return hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.envelopeHash]));
}
;
_.hashCode_1 = function(){
  return this.hashCode();
}
;
_.toCbor = function toCbor_57(){
  return $toCbor_38(this);
}
;
_.toString = function toString_63(){
  return this.envelopeHash.toString();
}
;
_.toString_0 = function(){
  return this.toString();
}
;
var Lpeergos_shared_messaging_MessageRef_2_classLit = createForClass('peergos.shared.messaging', 'MessageRef', 152);
function $getChatSharedDir(this$static, chatUid){
  return get_176(this$static.context.username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['.messaging', chatUid, 'shared']));
}

function $getMessageStoreMirror(this$static, username, uuid){
  return $thenCompose($thenApply($getByPath_6(this$static.context, get_176(username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['.messaging', uuid]))), makeLambdaFunction(Messenger$5methodref$get$Type.prototype.apply_0, Messenger$5methodref$get$Type, [])), makeLambdaFunction(Messenger$lambda$69$Type.prototype.apply_0, Messenger$lambda$69$Type, [this$static]));
}

function $initChat(this$static, appName){
  var chat, chatId, prefix, privateChatState, rawChat, rawPrivateChatState;
  prefix = appName != null?'chat-' + appName + '$':'chat$';
  chatId = prefix + this$static.context.username + '$' + ($clinit_UUID() , new UUID(uuid_1())).uuid;
  chat = createNew(chatId, this$static.context.username, this$static.context.signer.publicKeyHash);
  rawChat = $toByteArray_2($toCbor_33(chat));
  privateChatState = generateChatIdentity(this$static.crypto_0);
  rawPrivateChatState = $toByteArray_2($toCbor_39(privateChatState));
  return $thenCompose($thenCompose($thenCompose($thenApply($thenCompose($thenCompose($thenCompose($getUserRoot(this$static.context), makeLambdaFunction(Messenger$lambda$17$Type.prototype.apply_0, Messenger$lambda$17$Type, [this$static])), makeLambdaFunction(Messenger$lambda$18$Type.prototype.apply_0, Messenger$lambda$18$Type, [this$static, chatId])), makeLambdaFunction(Messenger$lambda$19$Type.prototype.apply_0, Messenger$lambda$19$Type, [this$static, chatId])), makeLambdaFunction(Messenger$0methodref$get$Type.prototype.apply_0, Messenger$0methodref$get$Type, [])), makeLambdaFunction(Messenger$lambda$0$Type.prototype.apply_0, Messenger$lambda$0$Type, [this$static, rawChat, rawPrivateChatState, chatId, chat, privateChatState])), makeLambdaFunction(Messenger$lambda$15$Type.prototype.apply_0, Messenger$lambda$15$Type, [this$static])), makeLambdaFunction(Messenger$lambda$16$Type.prototype.apply_0, Messenger$lambda$16$Type, [this$static]));
}

function $lambda$0_12(this$static, rawChat_1, rawPrivateChatState_2, chatId_3, chat_4, privateChatState_5, chatRoot_5){
  return $thenCompose($thenCompose($thenCompose($thenCompose($thenCompose($thenCompose($thenCompose($getOrMkdirs(chatRoot_5, get_176('shared', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])), this$static.context.network, false, $map(this$static.context.mirrorBat, makeLambdaFunction(UserContext$13methodref$id$Type.prototype.apply_0, UserContext$13methodref$id$Type, [])), this$static.crypto_0), makeLambdaFunction(Messenger$lambda$1$Type.prototype.apply_0, Messenger$lambda$1$Type, [this$static, chatRoot_5])), makeLambdaFunction(Messenger$lambda$4$Type.prototype.apply_0, Messenger$lambda$4$Type, [this$static])), makeLambdaFunction(Messenger$lambda$6$Type.prototype.apply_0, Messenger$lambda$6$Type, [this$static])), makeLambdaFunction(Messenger$lambda$8$Type.prototype.apply_0, Messenger$lambda$8$Type, [this$static, rawChat_1])), makeLambdaFunction(Messenger$lambda$10$Type.prototype.apply_0, Messenger$lambda$10$Type, [this$static, chatRoot_5])), makeLambdaFunction(Messenger$lambda$11$Type.prototype.apply_0, Messenger$lambda$11$Type, [this$static, rawPrivateChatState_2])), makeLambdaFunction(Messenger$lambda$13$Type.prototype.apply_0, Messenger$lambda$13$Type, [this$static, chatId_3, chat_4, privateChatState_5]));
}

function $lambda$1_7(this$static, chatRoot_1, chatSharedDir_1){
  return $thenCompose($getUpdated(chatRoot_1, this$static.network), makeLambdaFunction(Messenger$lambda$2$Type.prototype.apply_0, Messenger$lambda$2$Type, [this$static, chatSharedDir_1]));
}

function $lambda$10_1(this$static, chatRoot_1, x_1){
  return $getUpdated_0(chatRoot_1, x_1.version, this$static.network);
}

function $lambda$11_2(this$static, rawPrivateChatState_1, updatedChatRoot_1){
  return $uploadOrReplaceFile_0(updatedChatRoot_1, 'private-chat-state.cbor', new AsyncReader$ArrayBacked(rawPrivateChatState_1), rawPrivateChatState_1.length, this$static.network, this$static.crypto_0, makeLambdaFunction(Messenger$lambda$12$Type.prototype.accept_5, Messenger$lambda$12$Type, []), $randomBytes(this$static.crypto_0.random, 32), ($clinit_Optional() , new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(this$static.crypto_0.random, 32)))))), $mirrorBatId(updatedChatRoot_1.pointer.fileAccess));
}

function $lambda$13_4(this$static, chatId_1, chat_2, privateChatState_3, newRoot_3){
  return $thenApply(getChatMessageStore(newRoot_3, this$static.context), makeLambdaFunction(Messenger$lambda$14$Type.prototype.apply_0, Messenger$lambda$14$Type, [this$static, chatId_1, chat_2, privateChatState_3, newRoot_3]));
}

function $lambda$14_1(this$static, chatId_1, chat_2, privateChatState_3, newRoot_4, messageStore_4){
  return new ChatController(chatId_1, chat_2, messageStore_4, privateChatState_3, newRoot_4, this$static.cache_0, this$static.context);
}

function $lambda$15_2(this$static, controller_0){
  return $join_1(controller_0, this$static.context.signer);
}

function $lambda$16_4(this$static, controller_0){
  return $addAdmin(controller_0, this$static.context.username);
}

function $lambda$17_6(this$static, home_0){
  return $getOrMkdirs(home_0, get_176('.messaging', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])), this$static.context.network, true, $map(this$static.context.mirrorBat, makeLambdaFunction(UserContext$13methodref$id$Type.prototype.apply_0, UserContext$13methodref$id$Type, [])), this$static.context.crypto);
}

function $lambda$18_1(this$static, chatId_1, chatsRoot_1){
  return $mkdir_1(chatsRoot_1, chatId_1, this$static.context.network, false, $mirrorBatId(chatsRoot_1.pointer.fileAccess), this$static.crypto_0);
}

function $lambda$19_3(this$static, chatId_1, updated_1){
  return $getChild_2(updated_1, chatId_1, this$static.network);
}

function $lambda$2_5(this$static, chatSharedDir_1, updatedChatRoot_1){
  return $thenCompose($setProperties(chatSharedDir_1, ($ensureUnmodified(chatSharedDir_1) , chatSharedDir_1.props), this$static.hasher, this$static.network, ($clinit_Optional() , new Optional(checkCriticalNotNull(updatedChatRoot_1)))), makeLambdaFunction(Messenger$lambda$3$Type.prototype.apply_0, Messenger$lambda$3$Type, [this$static, chatSharedDir_1]));
}

function $lambda$21_2(this$static, chatSharedDir_1, usernames_2, res_2){
  return $thenApply($shareReadAccessWith(this$static.context, chatSharedDir_1, new HashSet_1(usernames_2)), makeLambdaFunction(Messenger$lambda$22$Type.prototype.apply_0, Messenger$lambda$22$Type, [res_2]));
}

function $lambda$25(this$static, sourceChatSharedDir_1, rawPrivateChatState_2, chatId_2){
  return $thenCompose($thenCompose($thenCompose($thenCompose($thenApply($thenCompose($thenCompose($thenCompose($getUserRoot(this$static.context), makeLambdaFunction(Messenger$lambda$17$Type.prototype.apply_0, Messenger$lambda$17$Type, [this$static])), makeLambdaFunction(Messenger$lambda$18$Type.prototype.apply_0, Messenger$lambda$18$Type, [this$static, chatId_2])), makeLambdaFunction(Messenger$lambda$19$Type.prototype.apply_0, Messenger$lambda$19$Type, [this$static, chatId_2])), makeLambdaFunction(Messenger$0methodref$get$Type.prototype.apply_0, Messenger$0methodref$get$Type, [])), makeLambdaFunction(Messenger$lambda$26$Type.prototype.apply_0, Messenger$lambda$26$Type, [this$static, sourceChatSharedDir_1, rawPrivateChatState_2])), makeLambdaFunction(Messenger$lambda$38$Type.prototype.apply_0, Messenger$lambda$38$Type, [this$static, chatId_2, sourceChatSharedDir_1])), makeLambdaFunction(Messenger$lambda$39$Type.prototype.apply_0, Messenger$lambda$39$Type, [this$static, chatId_2])), makeLambdaFunction(Messenger$lambda$40$Type.prototype.apply_0, Messenger$lambda$40$Type, [this$static]));
}

function $lambda$26_0(this$static, sourceChatSharedDir_1, rawPrivateChatState_2, chatRoot_2){
  return $thenCompose($getOrMkdirs(chatRoot_2, get_176('shared', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])), this$static.network, false, $map(this$static.context.mirrorBat, makeLambdaFunction(UserContext$13methodref$id$Type.prototype.apply_0, UserContext$13methodref$id$Type, [])), this$static.crypto_0), makeLambdaFunction(Messenger$lambda$27$Type.prototype.apply_0, Messenger$lambda$27$Type, [this$static, sourceChatSharedDir_1, chatRoot_2, rawPrivateChatState_2]));
}

function $lambda$27(this$static, sourceChatSharedDir_1, chatRoot_2, rawPrivateChatState_3, shared_3){
  return $thenCompose($thenCompose($thenCompose($thenCompose($thenCompose($thenCompose(getChatState(sourceChatSharedDir_1, this$static.network, this$static.crypto_0), makeLambdaFunction(Messenger$lambda$28$Type.prototype.apply_0, Messenger$lambda$28$Type, [this$static, shared_3])), makeLambdaFunction(Messenger$lambda$30$Type.prototype.apply_0, Messenger$lambda$30$Type, [this$static, sourceChatSharedDir_1])), makeLambdaFunction(Messenger$lambda$31$Type.prototype.apply_0, Messenger$lambda$31$Type, [this$static, shared_3])), makeLambdaFunction(Messenger$lambda$33$Type.prototype.apply_0, Messenger$lambda$33$Type, [this$static, sourceChatSharedDir_1])), makeLambdaFunction(Messenger$lambda$34$Type.prototype.apply_0, Messenger$lambda$34$Type, [this$static, shared_3])), makeLambdaFunction(Messenger$lambda$36$Type.prototype.apply_0, Messenger$lambda$36$Type, [this$static, chatRoot_2, rawPrivateChatState_3]));
}

function $lambda$28_0(this$static, shared_1, mirrorState_1){
  var ourVersion, rawChat;
  ourVersion = $copy(mirrorState_1, new Member_0(this$static.context.username, $getMember(mirrorState_1, this$static.context.username).id_0, this$static.context.signer.publicKeyHash, ($clinit_Optional() , $clinit_Optional() , EMPTY), castTo($get_3(mirrorState_1.members, mirrorState_1.host), 76).messagesMergedUpto, 0, false));
  rawChat = $toByteArray_2($toCbor_33(ourVersion));
  return $uploadOrReplaceFile_0(shared_1, 'peergos-chat-state.cbor', new AsyncReader$ArrayBacked(rawChat), rawChat.length, this$static.network, this$static.crypto_0, makeLambdaFunction(Messenger$lambda$29$Type.prototype.accept_5, Messenger$lambda$29$Type, []), $randomBytes(this$static.crypto_0.random, 32), new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(this$static.crypto_0.random, 32))))), $mirrorBatId(shared_1.pointer.fileAccess));
}

function $lambda$3_5(this$static, chatSharedDir_1){
  return $getUpdated(chatSharedDir_1, this$static.network);
}

function $lambda$30_1(this$static, sourceChatSharedDir_1){
  return $getChild_2(sourceChatSharedDir_1, 'peergos-chat-messages.cborstream', this$static.network);
}

function $lambda$31_1(this$static, shared_1, msgs_1){
  return $thenCompose($getUpdated(shared_1, this$static.network), makeLambdaFunction(Messenger$lambda$32$Type.prototype.apply_0, Messenger$lambda$32$Type, [this$static, msgs_1]));
}

function $lambda$32_0(this$static, msgs_1, updatedShared_1){
  return $copyTo_0((checkCriticalElement(msgs_1.ref != null) , castTo(msgs_1.ref, 19)), updatedShared_1, this$static.context);
}

function $lambda$33_0(this$static, sourceChatSharedDir_1){
  return $getChild_2(sourceChatSharedDir_1, 'peergos-chat-messages.index.bin', this$static.network);
}

function $lambda$34_0(this$static, shared_1, msgsIndex_1){
  return $thenCompose($getUpdated(shared_1, this$static.network), makeLambdaFunction(Messenger$lambda$35$Type.prototype.apply_0, Messenger$lambda$35$Type, [this$static, msgsIndex_1]));
}

function $lambda$35_1(this$static, msgsIndex_1, updatedShared_1){
  return $copyTo_0((checkCriticalElement(msgsIndex_1.ref != null) , castTo(msgsIndex_1.ref, 19)), updatedShared_1, this$static.context);
}

function $lambda$36_0(this$static, chatRoot_1, rawPrivateChatState_2){
  return $uploadOrReplaceFile_0(chatRoot_1, 'private-chat-state.cbor', new AsyncReader$ArrayBacked(rawPrivateChatState_2), rawPrivateChatState_2.length, this$static.network, this$static.crypto_0, makeLambdaFunction(Messenger$lambda$37$Type.prototype.accept_5, Messenger$lambda$37$Type, []), $randomBytes(this$static.crypto_0.random, 32), ($clinit_Optional() , new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(this$static.crypto_0.random, 32)))))), $mirrorBatId(chatRoot_1.pointer.fileAccess));
}

function $lambda$38_0(this$static, chatId_1, sourceChatSharedDir_2){
  return $shareReadAccessWith(this$static.context, $resolve(get_176(this$static.context.username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['.messaging', chatId_1])), 'shared'), singleton(sourceChatSharedDir_2.ownername));
}

function $lambda$39_0(this$static, chatId_1){
  return $thenCompose($thenApply($getByPath_6(this$static.context, get_176(this$static.context.username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['.messaging', chatId_1]))), makeLambdaFunction(Messenger$4methodref$get$Type.prototype.apply_0, Messenger$4methodref$get$Type, [])), makeLambdaFunction(Messenger$lambda$60$Type.prototype.apply_0, Messenger$lambda$60$Type, [this$static]));
}

function $lambda$4_5(this$static, chatSharedDir_0){
  return $uploadOrReplaceFile_0(chatSharedDir_0, 'peergos-chat-messages.cborstream', new AsyncReader$ArrayBacked(initUnidimensionalArray(B_classLit, $intern_28, 8, 0, 15, 1)), 0, this$static.network, this$static.crypto_0, makeLambdaFunction(Messenger$lambda$5$Type.prototype.accept_5, Messenger$lambda$5$Type, []), $randomBytes(this$static.crypto_0.random, 32), ($clinit_Optional() , new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(this$static.crypto_0.random, 32)))))), $mirrorBatId(chatSharedDir_0.pointer.fileAccess));
}

function $lambda$40_1(this$static, controller_0){
  return $join_1(controller_0, this$static.context.signer);
}

function $lambda$41_0(this$static, rawPrivateChatState_1, dopt_1){
  return $uploadOrReplaceFile_0((checkCriticalElement(dopt_1.ref != null) , castTo(dopt_1.ref, 19)), 'private-chat-state.cbor', new AsyncReader$ArrayBacked(rawPrivateChatState_1), rawPrivateChatState_1.length, this$static.network, this$static.crypto_0, makeLambdaFunction(Messenger$lambda$42$Type.prototype.accept_5, Messenger$lambda$42$Type, []), $randomBytes(this$static.crypto_0.random, 32), ($clinit_Optional() , new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(this$static.crypto_0.random, 32)))))), $mirrorBatId((checkCriticalElement(dopt_1.ref != null) , castTo(dopt_1.ref, 19)).pointer.fileAccess));
}

function $lambda$44_1(this$static, current_1, mirrorUsername_2){
  return $thenCompose($getMessageStoreMirror(this$static, mirrorUsername_2, current_1.chatUuid), makeLambdaFunction(Messenger$lambda$46$Type.prototype.apply_0, Messenger$lambda$46$Type, [current_1, mirrorUsername_2]));
}

function $lambda$45_1(this$static, current_1, mirrorUsername_2, t_2){
  var updatedPrivate, chatPath, rawPrivateChatState;
  if (!castTo($collect_0($map_0($filter($filter(new StreamImpl(null, new Spliterators$IteratorSpliterator($values(current_1.state.members), 0)), new ChatController$lambda$3$Type), new ChatController$lambda$4$Type), makeLambdaFunction(ChatController$lambda$5$Type.prototype.apply_0, ChatController$lambda$5$Type, [])), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47).contains(mirrorUsername_2) && $toString_0(t_2, t_2.getMessage()).indexOf('java.util.NoSuchElementException') > -1) {
    if ($getAdmins(current_1.state).contains($host(current_1.state).username)) {
      return $removeMember(this$static, current_1, mirrorUsername_2);
    }
     else {
      if (current_1.privateChatState.deletedMembers.contains(mirrorUsername_2))
        return new CompletableFuture_0(current_1);
      updatedPrivate = $addDeleted(current_1.privateChatState, mirrorUsername_2);
      return chatPath = get_176(this$static.context.username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['.messaging', current_1.chatUuid])) , rawPrivateChatState = $toByteArray_2($toCbor_39(updatedPrivate)) , $thenApply($thenCompose($getByPath_6(this$static.context, chatPath), makeLambdaFunction(Messenger$lambda$41$Type.prototype.apply_0, Messenger$lambda$41$Type, [this$static, rawPrivateChatState])), makeLambdaFunction(Messenger$lambda$43$Type.prototype.apply_0, Messenger$lambda$43$Type, [current_1, updatedPrivate]));
    }
  }
  return new CompletableFuture_0(current_1);
}

function $lambda$49_0(this$static, pendingMembers_1, c_1, n_2){
  return asyncExceptionally(new Messenger$lambda$51$Type(this$static, c_1, n_2), makeLambdaFunction(Messenger$lambda$52$Type.prototype.apply_0, Messenger$lambda$52$Type, [pendingMembers_1, n_2, c_1]));
}

function $lambda$53(this$static, length_1, uuid_2, media_3, monitor_4, p_4){
  return $thenCompose($uploadAndReturnFile_0(castTo(p_4.right, 19), uuid_2, media_3, length_1, false, monitor_4, $mirrorBatId(castTo(p_4.right, 19).pointer.fileAccess), this$static.network, this$static.crypto_0), makeLambdaFunction(Messenger$lambda$54$Type.prototype.apply_0, Messenger$lambda$54$Type, [this$static, length_1, p_4, uuid_2, media_3]));
}

function $lambda$54_0(this$static, length_1, p_2, uuid_3, media_4, f_4){
  return $thenApply($thenCompose(media_4.reset(), makeLambdaFunction(Messenger$lambda$55$Type.prototype.apply_0, Messenger$lambda$55$Type, [this$static, length_1])), makeLambdaFunction(Messenger$lambda$56$Type.prototype.apply_0, Messenger$lambda$56$Type, [f_4, p_2, uuid_3]));
}

function $lambda$55_0(this$static, length_1, r_1){
  return $hashFromStream(this$static.crypto_0.hasher, r_1, length_1);
}

function $lambda$57_0(this$static, dirFromHome_1, home_1){
  return $thenApply($getOrMkdirs(home_1, dirFromHome_1, this$static.network, true, $map(this$static.context.mirrorBat, makeLambdaFunction(UserContext$13methodref$id$Type.prototype.apply_0, UserContext$13methodref$id$Type, [])), this$static.crypto_0), makeLambdaFunction(Messenger$lambda$58$Type.prototype.apply_0, Messenger$lambda$58$Type, [this$static, dirFromHome_1]));
}

function $lambda$58(this$static, dirFromHome_1, dir_1){
  return new Pair($resolve(get_176('/' + this$static.context.username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])), dirFromHome_1.pathString), dir_1);
}

function $lambda$6_5(this$static, chatSharedDir_0){
  return $uploadOrReplaceFile_0(chatSharedDir_0, 'peergos-chat-messages.index.bin', new AsyncReader$ArrayBacked(initUnidimensionalArray(B_classLit, $intern_28, 8, 16, 15, 1)), 16, this$static.network, this$static.crypto_0, makeLambdaFunction(Messenger$lambda$7$Type.prototype.accept_5, Messenger$lambda$7$Type, []), $randomBytes(this$static.crypto_0.random, 32), ($clinit_Optional() , new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(this$static.crypto_0.random, 32)))))), $mirrorBatId(chatSharedDir_0.pointer.fileAccess));
}

function $lambda$60(this$static, d_0){
  return getChatController(d_0, this$static.context, this$static.cache_0);
}

function $lambda$61(this$static, chatPath_1, popt_1){
  return $thenCompose($getChild_2((checkCriticalElement(popt_1.ref != null) , castTo(popt_1.ref, 19)), $getFileName(chatPath_1).pathString, this$static.network), makeLambdaFunction(Messenger$lambda$62$Type.prototype.apply_0, Messenger$lambda$62$Type, [this$static, popt_1, chatPath_1]));
}

function $lambda$62(this$static, popt_1, chatPath_2, copt_2){
  return $remove_16((checkCriticalElement(copt_2.ref != null) , castTo(copt_2.ref, 19)), (checkCriticalElement(popt_1.ref != null) , castTo(popt_1.ref, 19)), chatPath_2, this$static.context);
}

function $lambda$64(this$static, home_0){
  return $getOrMkdirs(home_0, get_176('.messaging', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])), this$static.network, true, $map(this$static.context.mirrorBat, makeLambdaFunction(UserContext$13methodref$id$Type.prototype.apply_0, UserContext$13methodref$id$Type, [])), this$static.crypto_0);
}

function $lambda$65(this$static, chatsRoot_0){
  return $getChildren_4(chatsRoot_0, this$static.hasher, this$static.network);
}

function $lambda$66_0(this$static, chatDirs_0){
  return combineAll(castTo($collect_0($map_0(chatDirs_0.stream(), makeLambdaFunction(Messenger$lambda$67$Type.prototype.apply_0, Messenger$lambda$67$Type, [this$static])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 54));
}

function $lambda$67(this$static, d_0){
  return getChatController(d_0, this$static.context, this$static.cache_0);
}

function $lambda$69_0(this$static, d_0){
  return getChatMessageStore(d_0, this$static.context);
}

function $lambda$8_2(this$static, rawChat_1, chatSharedDir_1){
  return $uploadOrReplaceFile_0(chatSharedDir_1, 'peergos-chat-state.cbor', new AsyncReader$ArrayBacked(rawChat_1), rawChat_1.length, this$static.network, this$static.crypto_0, makeLambdaFunction(Messenger$lambda$9$Type.prototype.accept_5, Messenger$lambda$9$Type, []), $randomBytes(this$static.crypto_0.random, 32), ($clinit_Optional() , new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(this$static.crypto_0.random, 32)))))), $mirrorBatId(chatSharedDir_1.pointer.fileAccess));
}

function $mergeMessages(this$static, current, mirrorUsername){
  var memberNames;
  if ($equals_0(mirrorUsername, this$static.context.username) || current.privateChatState.deletedMembers.contains(mirrorUsername) && (memberNames = castTo($collect_0($map_0($filter($filter(new StreamImpl(null, new Spliterators$IteratorSpliterator($values(current.state.members), 0)), new ChatController$lambda$0$Type), new ChatController$lambda$1$Type(current)), makeLambdaFunction(ChatController$lambda$2$Type.prototype.apply_0, ChatController$lambda$2$Type, [])), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47) , !(memberNames.contains(this$static.context.username) && memberNames.size() == 1))) {
    return new CompletableFuture_0(current);
  }
  return asyncExceptionally(new Messenger$lambda$44$Type(this$static, current, mirrorUsername), makeLambdaFunction(Messenger$lambda$45$Type.prototype.apply_0, Messenger$lambda$45$Type, [this$static, current, mirrorUsername]));
}

function $removeMember(this$static, current, username){
  var member, msg;
  member = $getMember(current.state, username);
  if (!member)
    throw toJs(new IllegalStateException_0('No member in chat with that name!'));
  msg = new RemoveMember_0(current.chatUuid, member.id_0);
  if (!$equals_0(username, this$static.context.username) && !$getAdmins(current.state).contains(this$static.context.username))
    throw toJs(new IllegalStateException_0('Only admins can remove other members!'));
  return $applyAndCommit(current, makeLambdaFunction(ChatController$lambda$16$Type.prototype.apply_0, ChatController$lambda$16$Type, [current, msg]), current.context.username);
}

function Messenger(context){
  this.cache_0 = new LRUCache($intern_49);
  this.context = context;
  this.network = context.network;
  this.crypto_0 = context.crypto;
  this.hasher = context.crypto.hasher;
}

function lambda$43(current_0, state_1){
  return new ChatController(current_0.chatUuid, current_0.state, current_0.store, state_1, current_0.root, current_0.cache_0, current_0.context);
}

function lambda$46_1(current_0, mirrorUsername_1, mirrorStore_2){
  var mirrorHost;
  return mirrorHost = $getMember(current_0.state, mirrorUsername_1) , $applyAndCommit(current_0, makeLambdaFunction(ChatController$lambda$19$Type.prototype.apply_0, ChatController$lambda$19$Type, [current_0, mirrorHost, mirrorStore_2]), mirrorUsername_1);
}

function lambda$50_0(){
  throw toJs(new IllegalStateException);
}

function lambda$52(pendingMembers_0, n_1, c_2, t_3){
  return pendingMembers_0.contains(n_1)?new CompletableFuture_0(c_2):errored(t_3);
}

function lambda$56_0(f_0, p_1, uuid_2, hash_3){
  return new Pair($getType(($ensureUnmodified(f_0) , f_0.props)), new FileRef($resolve(castTo(p_1.left, 95), uuid_2).pathString, $readOnly(f_0.pointer.capability), hash_3));
}

defineClass(1226, 1, {}, Messenger);
_.cloneLocallyAndJoin = function cloneLocallyAndJoin(sourceChatSharedDir){
  var privateChatState, rawPrivateChatState;
  privateChatState = generateChatIdentity(this.crypto_0);
  rawPrivateChatState = $toByteArray_2($toCbor_39(privateChatState));
  return $thenCompose($thenApply($thenApply($retrieveParent(sourceChatSharedDir, this.network), makeLambdaFunction(Messenger$1methodref$get$Type.prototype.apply_0, Messenger$1methodref$get$Type, [])), makeLambdaFunction(Messenger$lambda$24$Type.prototype.apply_0, Messenger$lambda$24$Type, [])), makeLambdaFunction(Messenger$lambda$25$Type.prototype.apply_0, Messenger$lambda$25$Type, [this, sourceChatSharedDir, rawPrivateChatState]));
}
;
_.createAppChat = function createAppChat(appName){
  return $initChat(this, appName);
}
;
_.createChat = function createChat(){
  return $initChat(this, null);
}
;
_.deleteChat = function deleteChat(chat){
  var chatPath, parentPath;
  chatPath = get_176(this.context.username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['.messaging', chat.chatUuid]));
  parentPath = $getParent(chatPath);
  return $thenApply($thenCompose($getByPath_6(this.context, parentPath), makeLambdaFunction(Messenger$lambda$61$Type.prototype.apply_0, Messenger$lambda$61$Type, [this, chatPath])), makeLambdaFunction(Messenger$lambda$63$Type.prototype.apply_0, Messenger$lambda$63$Type, []));
}
;
_.getChat = function getChat(uuid){
  return $thenCompose($thenApply($getByPath_6(this.context, get_176(this.context.username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['.messaging', uuid]))), makeLambdaFunction(Messenger$4methodref$get$Type.prototype.apply_0, Messenger$4methodref$get$Type, [])), makeLambdaFunction(Messenger$lambda$60$Type.prototype.apply_0, Messenger$lambda$60$Type, [this]));
}
;
_.invite = function invite_0(chat, usernames, identities){
  var chatSharedDir;
  chatSharedDir = $getChatSharedDir(this, chat.chatUuid);
  return $thenCompose($applyAndCommit(chat, makeLambdaFunction(ChatController$lambda$18$Type.prototype.apply_0, ChatController$lambda$18$Type, [chat, usernames, identities]), chat.context.username), makeLambdaFunction(Messenger$lambda$21$Type.prototype.apply_0, Messenger$lambda$21$Type, [this, chatSharedDir, usernames]));
}
;
_.listChats = function listChats(){
  return $thenCompose($thenCompose($thenCompose($getUserRoot(this.context), makeLambdaFunction(Messenger$lambda$64$Type.prototype.apply_0, Messenger$lambda$64$Type, [this])), makeLambdaFunction(Messenger$lambda$65$Type.prototype.apply_0, Messenger$lambda$65$Type, [this])), makeLambdaFunction(Messenger$lambda$66$Type.prototype.apply_0, Messenger$lambda$66$Type, [this]));
}
;
_.mergeAllUpdates = function mergeAllUpdates(current, soc){
  var following, pendingMembers, toPullFrom;
  following = castTo($collect_0($map_0(soc.followingRoots.stream(), makeLambdaFunction(SocialState$lambda$6$Type.prototype.apply_0, SocialState$lambda$6$Type, [])), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47);
  toPullFrom = castTo($collect_0($filter(castTo($collect_0($map_0($filter($filter(new StreamImpl(null, new Spliterators$IteratorSpliterator($values(current.state.members), 0)), new ChatController$lambda$0$Type), new ChatController$lambda$1$Type(current)), makeLambdaFunction(ChatController$lambda$2$Type.prototype.apply_0, ChatController$lambda$2$Type, [])), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [UNORDERED, IDENTITY_FINISH]))), 47).stream(), new Messenger$2methodref$contains$Type(following)), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [IDENTITY_FINISH]))), 17);
  pendingMembers = castTo($collect_0($filter(castTo($collect_0($map_0($filter($filter(new StreamImpl(null, new Spliterators$IteratorSpliterator($values(current.state.members), 0)), new ChatController$lambda$3$Type), new ChatController$lambda$4$Type), makeLambdaFunction(ChatController$lambda$5$Type.prototype.apply_0, ChatController$lambda$5$Type, [])), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [UNORDERED, IDENTITY_FINISH]))), 47).stream(), new Messenger$3methodref$contains$Type(following)), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [UNORDERED, IDENTITY_FINISH]))), 47);
  return reduceAll(toPullFrom, current, new Messenger$lambda$49$Type(this, pendingMembers), new Messenger$lambda$50$Type);
}
;
_.mergeMessages = function mergeMessages(current, mirrorUsername){
  return $mergeMessages(this, current, mirrorUsername);
}
;
_.removeMember = function removeMember(current, username){
  return $removeMember(this, current, username);
}
;
_.sendMessage = function sendMessage_0(current, message){
  return $applyAndCommit(current, makeLambdaFunction(ChatController$lambda$16$Type.prototype.apply_0, ChatController$lambda$16$Type, [current, message]), current.context.username);
}
;
_.setGroupProperty = function setGroupProperty(current, key, value_0){
  return $sendMessage_1(current, new SetGroupState(key, value_0));
}
;
_.uploadMedia = function uploadMedia(current, media_0, fileExtension, length_0, postTime, monitor){
  var dirFromHome, uuid;
  uuid = ($clinit_UUID() , new UUID(uuid_1())).uuid + '.' + fileExtension;
  return $thenCompose((dirFromHome = $resolve(get_176('.messaging', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [current.chatUuid, 'shared', 'media'])), get_176('' + postTime.date.year, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['' + postTime.date.month])).pathString) , $thenCompose($getUserRoot(this.context), makeLambdaFunction(Messenger$lambda$57$Type.prototype.apply_0, Messenger$lambda$57$Type, [this, dirFromHome]))), makeLambdaFunction(Messenger$lambda$53$Type.prototype.apply_0, Messenger$lambda$53$Type, [this, length_0, uuid, media_0, monitor]));
}
;
var Lpeergos_shared_messaging_Messenger_2_classLit = createForClass('peergos.shared.messaging', 'Messenger', 1226);
function Messenger$0methodref$get$Type(){
}

defineClass(1311, $wnd.Function, $intern_22, Messenger$0methodref$get$Type);
_.apply_0 = function apply_495(arg0){
  return $get_6(castTo(arg0, 12));
}
;
function Messenger$1methodref$get$Type(){
}

defineClass(2731, $wnd.Function, $intern_22, Messenger$1methodref$get$Type);
_.apply_0 = function apply_496(arg0){
  return $get_6(castTo(arg0, 12));
}
;
function Messenger$2methodref$contains$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(881, 1, {}, Messenger$2methodref$contains$Type);
_.test_0 = function test_15(arg0){
  return this.$$outer_0.contains(arg0);
}
;
var Lpeergos_shared_messaging_Messenger$2methodref$contains$Type_2_classLit = createForClass('peergos.shared.messaging', 'Messenger/2methodref$contains$Type', 881);
function Messenger$3methodref$contains$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(882, 1, {}, Messenger$3methodref$contains$Type);
_.test_0 = function test_16(arg0){
  return this.$$outer_0.contains(arg0);
}
;
var Lpeergos_shared_messaging_Messenger$3methodref$contains$Type_2_classLit = createForClass('peergos.shared.messaging', 'Messenger/3methodref$contains$Type', 882);
function Messenger$4methodref$get$Type(){
}

defineClass(1312, $wnd.Function, $intern_22, Messenger$4methodref$get$Type);
_.apply_0 = function apply_497(arg0){
  return $get_6(castTo(arg0, 12));
}
;
function Messenger$5methodref$get$Type(){
}

defineClass(2744, $wnd.Function, $intern_22, Messenger$5methodref$get$Type);
_.apply_0 = function apply_498(arg0){
  return $get_6(castTo(arg0, 12));
}
;
function Messenger$lambda$0$Type($$outer_0, rawChat_1, rawPrivateChatState_2, chatId_3, chat_4, privateChatState_5){
  this.$$outer_0 = $$outer_0;
  this.rawChat_1 = rawChat_1;
  this.rawPrivateChatState_2 = rawPrivateChatState_2;
  this.chatId_3 = chatId_3;
  this.chat_4 = chat_4;
  this.privateChatState_5 = privateChatState_5;
}

defineClass(2726, $wnd.Function, $intern_22, Messenger$lambda$0$Type);
_.apply_0 = function apply_499(arg0){
  return $lambda$0_12(this.$$outer_0, this.rawChat_1, this.rawPrivateChatState_2, this.chatId_3, this.chat_4, this.privateChatState_5, arg0);
}
;
function Messenger$lambda$1$Type($$outer_0, chatRoot_1){
  this.$$outer_0 = $$outer_0;
  this.chatRoot_1 = chatRoot_1;
}

defineClass(2746, $wnd.Function, $intern_22, Messenger$lambda$1$Type);
_.apply_0 = function apply_500(arg0){
  return $lambda$1_7(this.$$outer_0, this.chatRoot_1, arg0);
}
;
function Messenger$lambda$10$Type($$outer_0, chatRoot_1){
  this.$$outer_0 = $$outer_0;
  this.chatRoot_1 = chatRoot_1;
}

defineClass(2750, $wnd.Function, $intern_22, Messenger$lambda$10$Type);
_.apply_0 = function apply_501(arg0){
  return $lambda$10_1(this.$$outer_0, this.chatRoot_1, arg0);
}
;
function Messenger$lambda$11$Type($$outer_0, rawPrivateChatState_1){
  this.$$outer_0 = $$outer_0;
  this.rawPrivateChatState_1 = rawPrivateChatState_1;
}

defineClass(2751, $wnd.Function, $intern_22, Messenger$lambda$11$Type);
_.apply_0 = function apply_502(arg0){
  return $lambda$11_2(this.$$outer_0, this.rawPrivateChatState_1, arg0);
}
;
function Messenger$lambda$12$Type(){
}

defineClass(2758, $wnd.Function, {}, Messenger$lambda$12$Type);
_.accept_5 = function accept_56(arg0){
}
;
function Messenger$lambda$13$Type($$outer_0, chatId_1, chat_2, privateChatState_3){
  this.$$outer_0 = $$outer_0;
  this.chatId_1 = chatId_1;
  this.chat_2 = chat_2;
  this.privateChatState_3 = privateChatState_3;
}

defineClass(2752, $wnd.Function, $intern_22, Messenger$lambda$13$Type);
_.apply_0 = function apply_503(arg0){
  return $lambda$13_4(this.$$outer_0, this.chatId_1, this.chat_2, this.privateChatState_3, arg0);
}
;
function Messenger$lambda$14$Type($$outer_0, chatId_1, chat_2, privateChatState_3, newRoot_4){
  this.$$outer_0 = $$outer_0;
  this.chatId_1 = chatId_1;
  this.chat_2 = chat_2;
  this.privateChatState_3 = privateChatState_3;
  this.newRoot_4 = newRoot_4;
}

defineClass(2759, $wnd.Function, $intern_22, Messenger$lambda$14$Type);
_.apply_0 = function apply_504(arg0){
  return $lambda$14_1(this.$$outer_0, this.chatId_1, this.chat_2, this.privateChatState_3, this.newRoot_4, arg0);
}
;
function Messenger$lambda$15$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2727, $wnd.Function, $intern_22, Messenger$lambda$15$Type);
_.apply_0 = function apply_505(arg0){
  return $lambda$15_2(this.$$outer_0, arg0);
}
;
function Messenger$lambda$16$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2728, $wnd.Function, $intern_22, Messenger$lambda$16$Type);
_.apply_0 = function apply_506(arg0){
  return $lambda$16_4(this.$$outer_0, arg0);
}
;
function Messenger$lambda$17$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1308, $wnd.Function, $intern_22, Messenger$lambda$17$Type);
_.apply_0 = function apply_507(arg0){
  return $lambda$17_6(this.$$outer_0, arg0);
}
;
function Messenger$lambda$18$Type($$outer_0, chatId_1){
  this.$$outer_0 = $$outer_0;
  this.chatId_1 = chatId_1;
}

defineClass(1309, $wnd.Function, $intern_22, Messenger$lambda$18$Type);
_.apply_0 = function apply_508(arg0){
  return $lambda$18_1(this.$$outer_0, this.chatId_1, arg0);
}
;
function Messenger$lambda$19$Type($$outer_0, chatId_1){
  this.$$outer_0 = $$outer_0;
  this.chatId_1 = chatId_1;
}

defineClass(1310, $wnd.Function, $intern_22, Messenger$lambda$19$Type);
_.apply_0 = function apply_509(arg0){
  return $lambda$19_3(this.$$outer_0, this.chatId_1, arg0);
}
;
function Messenger$lambda$2$Type($$outer_0, chatSharedDir_1){
  this.$$outer_0 = $$outer_0;
  this.chatSharedDir_1 = chatSharedDir_1;
}

defineClass(2753, $wnd.Function, $intern_22, Messenger$lambda$2$Type);
_.apply_0 = function apply_510(arg0){
  return $lambda$2_5(this.$$outer_0, this.chatSharedDir_1, arg0);
}
;
function Messenger$lambda$21$Type($$outer_0, chatSharedDir_1, usernames_2){
  this.$$outer_0 = $$outer_0;
  this.chatSharedDir_1 = chatSharedDir_1;
  this.usernames_2 = usernames_2;
}

defineClass(2730, $wnd.Function, $intern_22, Messenger$lambda$21$Type);
_.apply_0 = function apply_511(arg0){
  return $lambda$21_2(this.$$outer_0, this.chatSharedDir_1, this.usernames_2, arg0);
}
;
function Messenger$lambda$22$Type(res_0){
  this.res_0 = res_0;
}

defineClass(2760, $wnd.Function, $intern_22, Messenger$lambda$22$Type);
_.apply_0 = function apply_512(arg0){
  return this.res_0;
}
;
function Messenger$lambda$24$Type(){
}

defineClass(2732, $wnd.Function, $intern_22, Messenger$lambda$24$Type);
_.apply_0 = function apply_513(arg0){
  return ($ensureUnmodified(castTo(arg0, 19)) , castTo(arg0, 19).props).name;
}
;
function Messenger$lambda$25$Type($$outer_0, sourceChatSharedDir_1, rawPrivateChatState_2){
  this.$$outer_0 = $$outer_0;
  this.sourceChatSharedDir_1 = sourceChatSharedDir_1;
  this.rawPrivateChatState_2 = rawPrivateChatState_2;
}

defineClass(2733, $wnd.Function, $intern_22, Messenger$lambda$25$Type);
_.apply_0 = function apply_514(arg0){
  return $lambda$25(this.$$outer_0, this.sourceChatSharedDir_1, this.rawPrivateChatState_2, arg0);
}
;
function Messenger$lambda$26$Type($$outer_0, sourceChatSharedDir_1, rawPrivateChatState_2){
  this.$$outer_0 = $$outer_0;
  this.sourceChatSharedDir_1 = sourceChatSharedDir_1;
  this.rawPrivateChatState_2 = rawPrivateChatState_2;
}

defineClass(2761, $wnd.Function, $intern_22, Messenger$lambda$26$Type);
_.apply_0 = function apply_515(arg0){
  return $lambda$26_0(this.$$outer_0, this.sourceChatSharedDir_1, this.rawPrivateChatState_2, arg0);
}
;
function Messenger$lambda$27$Type($$outer_0, sourceChatSharedDir_1, chatRoot_2, rawPrivateChatState_3){
  this.$$outer_0 = $$outer_0;
  this.sourceChatSharedDir_1 = sourceChatSharedDir_1;
  this.chatRoot_2 = chatRoot_2;
  this.rawPrivateChatState_3 = rawPrivateChatState_3;
}

defineClass(2765, $wnd.Function, $intern_22, Messenger$lambda$27$Type);
_.apply_0 = function apply_516(arg0){
  return $lambda$27(this.$$outer_0, this.sourceChatSharedDir_1, this.chatRoot_2, this.rawPrivateChatState_3, arg0);
}
;
function Messenger$lambda$28$Type($$outer_0, shared_1){
  this.$$outer_0 = $$outer_0;
  this.shared_1 = shared_1;
}

defineClass(2766, $wnd.Function, $intern_22, Messenger$lambda$28$Type);
_.apply_0 = function apply_517(arg0){
  return $lambda$28_0(this.$$outer_0, this.shared_1, arg0);
}
;
function Messenger$lambda$29$Type(){
}

defineClass(2772, $wnd.Function, {}, Messenger$lambda$29$Type);
_.accept_5 = function accept_57(arg0){
}
;
function Messenger$lambda$3$Type($$outer_0, chatSharedDir_1){
  this.$$outer_0 = $$outer_0;
  this.chatSharedDir_1 = chatSharedDir_1;
}

defineClass(2754, $wnd.Function, $intern_22, Messenger$lambda$3$Type);
_.apply_0 = function apply_518(arg0){
  return $lambda$3_5(this.$$outer_0, this.chatSharedDir_1);
}
;
function Messenger$lambda$30$Type($$outer_0, sourceChatSharedDir_1){
  this.$$outer_0 = $$outer_0;
  this.sourceChatSharedDir_1 = sourceChatSharedDir_1;
}

defineClass(2767, $wnd.Function, $intern_22, Messenger$lambda$30$Type);
_.apply_0 = function apply_519(arg0){
  return $lambda$30_1(this.$$outer_0, this.sourceChatSharedDir_1);
}
;
function Messenger$lambda$31$Type($$outer_0, shared_1){
  this.$$outer_0 = $$outer_0;
  this.shared_1 = shared_1;
}

defineClass(2768, $wnd.Function, $intern_22, Messenger$lambda$31$Type);
_.apply_0 = function apply_520(arg0){
  return $lambda$31_1(this.$$outer_0, this.shared_1, arg0);
}
;
function Messenger$lambda$32$Type($$outer_0, msgs_1){
  this.$$outer_0 = $$outer_0;
  this.msgs_1 = msgs_1;
}

defineClass(2773, $wnd.Function, $intern_22, Messenger$lambda$32$Type);
_.apply_0 = function apply_521(arg0){
  return $lambda$32_0(this.$$outer_0, this.msgs_1, arg0);
}
;
function Messenger$lambda$33$Type($$outer_0, sourceChatSharedDir_1){
  this.$$outer_0 = $$outer_0;
  this.sourceChatSharedDir_1 = sourceChatSharedDir_1;
}

defineClass(2769, $wnd.Function, $intern_22, Messenger$lambda$33$Type);
_.apply_0 = function apply_522(arg0){
  return $lambda$33_0(this.$$outer_0, this.sourceChatSharedDir_1);
}
;
function Messenger$lambda$34$Type($$outer_0, shared_1){
  this.$$outer_0 = $$outer_0;
  this.shared_1 = shared_1;
}

defineClass(2770, $wnd.Function, $intern_22, Messenger$lambda$34$Type);
_.apply_0 = function apply_523(arg0){
  return $lambda$34_0(this.$$outer_0, this.shared_1, arg0);
}
;
function Messenger$lambda$35$Type($$outer_0, msgsIndex_1){
  this.$$outer_0 = $$outer_0;
  this.msgsIndex_1 = msgsIndex_1;
}

defineClass(2774, $wnd.Function, $intern_22, Messenger$lambda$35$Type);
_.apply_0 = function apply_524(arg0){
  return $lambda$35_1(this.$$outer_0, this.msgsIndex_1, arg0);
}
;
function Messenger$lambda$36$Type($$outer_0, chatRoot_1, rawPrivateChatState_2){
  this.$$outer_0 = $$outer_0;
  this.chatRoot_1 = chatRoot_1;
  this.rawPrivateChatState_2 = rawPrivateChatState_2;
}

defineClass(2771, $wnd.Function, $intern_22, Messenger$lambda$36$Type);
_.apply_0 = function apply_525(arg0){
  return $lambda$36_0(this.$$outer_0, this.chatRoot_1, this.rawPrivateChatState_2);
}
;
function Messenger$lambda$37$Type(){
}

defineClass(2775, $wnd.Function, {}, Messenger$lambda$37$Type);
_.accept_5 = function accept_58(arg0){
}
;
function Messenger$lambda$38$Type($$outer_0, chatId_1, sourceChatSharedDir_2){
  this.$$outer_0 = $$outer_0;
  this.chatId_1 = chatId_1;
  this.sourceChatSharedDir_2 = sourceChatSharedDir_2;
}

defineClass(2762, $wnd.Function, $intern_22, Messenger$lambda$38$Type);
_.apply_0 = function apply_526(arg0){
  return $lambda$38_0(this.$$outer_0, this.chatId_1, this.sourceChatSharedDir_2);
}
;
function Messenger$lambda$39$Type($$outer_0, chatId_1){
  this.$$outer_0 = $$outer_0;
  this.chatId_1 = chatId_1;
}

defineClass(2763, $wnd.Function, $intern_22, Messenger$lambda$39$Type);
_.apply_0 = function apply_527(arg0){
  return $lambda$39_0(this.$$outer_0, this.chatId_1);
}
;
function Messenger$lambda$4$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2747, $wnd.Function, $intern_22, Messenger$lambda$4$Type);
_.apply_0 = function apply_528(arg0){
  return $lambda$4_5(this.$$outer_0, arg0);
}
;
function Messenger$lambda$40$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2764, $wnd.Function, $intern_22, Messenger$lambda$40$Type);
_.apply_0 = function apply_529(arg0){
  return $lambda$40_1(this.$$outer_0, arg0);
}
;
function Messenger$lambda$41$Type($$outer_0, rawPrivateChatState_1){
  this.$$outer_0 = $$outer_0;
  this.rawPrivateChatState_1 = rawPrivateChatState_1;
}

defineClass(2734, $wnd.Function, $intern_22, Messenger$lambda$41$Type);
_.apply_0 = function apply_530(arg0){
  return $lambda$41_0(this.$$outer_0, this.rawPrivateChatState_1, arg0);
}
;
function Messenger$lambda$42$Type(){
}

defineClass(2776, $wnd.Function, {}, Messenger$lambda$42$Type);
_.accept_5 = function accept_59(arg0){
}
;
function Messenger$lambda$43$Type(current_0, state_1){
  this.current_0 = current_0;
  this.state_1 = state_1;
}

defineClass(2735, $wnd.Function, $intern_22, Messenger$lambda$43$Type);
_.apply_0 = function apply_531(arg0){
  return lambda$43(this.current_0, this.state_1);
}
;
function Messenger$lambda$44$Type($$outer_0, current_1, mirrorUsername_2){
  this.$$outer_0 = $$outer_0;
  this.current_1 = current_1;
  this.mirrorUsername_2 = mirrorUsername_2;
}

defineClass(880, 1, {}, Messenger$lambda$44$Type);
_.get_0 = function get_40(){
  return $lambda$44_1(this.$$outer_0, this.current_1, this.mirrorUsername_2);
}
;
var Lpeergos_shared_messaging_Messenger$lambda$44$Type_2_classLit = createForClass('peergos.shared.messaging', 'Messenger/lambda$44$Type', 880);
function Messenger$lambda$45$Type($$outer_0, current_1, mirrorUsername_2){
  this.$$outer_0 = $$outer_0;
  this.current_1 = current_1;
  this.mirrorUsername_2 = mirrorUsername_2;
}

defineClass(2736, $wnd.Function, $intern_22, Messenger$lambda$45$Type);
_.apply_0 = function apply_532(arg0){
  return $lambda$45_1(this.$$outer_0, this.current_1, this.mirrorUsername_2, arg0);
}
;
function Messenger$lambda$46$Type(current_0, mirrorUsername_1){
  this.current_0 = current_0;
  this.mirrorUsername_1 = mirrorUsername_1;
}

defineClass(2777, $wnd.Function, $intern_22, Messenger$lambda$46$Type);
_.apply_0 = function apply_533(arg0){
  return lambda$46_1(this.current_0, this.mirrorUsername_1, arg0);
}
;
function Messenger$lambda$49$Type($$outer_0, pendingMembers_1){
  this.$$outer_0 = $$outer_0;
  this.pendingMembers_1 = pendingMembers_1;
}

defineClass(884, 1, $intern_34, Messenger$lambda$49$Type);
_.apply_1 = function apply_534(arg0, arg1){
  return $lambda$49_0(this.$$outer_0, this.pendingMembers_1, arg0, arg1);
}
;
var Lpeergos_shared_messaging_Messenger$lambda$49$Type_2_classLit = createForClass('peergos.shared.messaging', 'Messenger/lambda$49$Type', 884);
function Messenger$lambda$5$Type(){
}

defineClass(2755, $wnd.Function, {}, Messenger$lambda$5$Type);
_.accept_5 = function accept_60(arg0){
}
;
function Messenger$lambda$50$Type(){
}

defineClass(885, 1, $intern_34, Messenger$lambda$50$Type);
_.apply_1 = function apply_535(arg0, arg1){
  return lambda$50_0();
}
;
var Lpeergos_shared_messaging_Messenger$lambda$50$Type_2_classLit = createForClass('peergos.shared.messaging', 'Messenger/lambda$50$Type', 885);
function Messenger$lambda$51$Type($$outer_0, c_1, n_2){
  this.$$outer_0 = $$outer_0;
  this.c_1 = c_1;
  this.n_2 = n_2;
}

defineClass(883, 1, {}, Messenger$lambda$51$Type);
_.get_0 = function get_41(){
  return $mergeMessages(this.$$outer_0, this.c_1, this.n_2);
}
;
var Lpeergos_shared_messaging_Messenger$lambda$51$Type_2_classLit = createForClass('peergos.shared.messaging', 'Messenger/lambda$51$Type', 883);
function Messenger$lambda$52$Type(pendingMembers_0, n_1, c_2){
  this.pendingMembers_0 = pendingMembers_0;
  this.n_1 = n_1;
  this.c_2 = c_2;
}

defineClass(2779, $wnd.Function, $intern_22, Messenger$lambda$52$Type);
_.apply_0 = function apply_536(arg0){
  return lambda$52(this.pendingMembers_0, this.n_1, this.c_2, arg0);
}
;
function Messenger$lambda$53$Type($$outer_0, length_1, uuid_2, media_3, monitor_4){
  this.$$outer_0 = $$outer_0;
  this.length_1 = length_1;
  this.uuid_2 = uuid_2;
  this.media_3 = media_3;
  this.monitor_4 = monitor_4;
}

defineClass(2738, $wnd.Function, $intern_22, Messenger$lambda$53$Type);
_.apply_0 = function apply_537(arg0){
  return $lambda$53(this.$$outer_0, this.length_1, this.uuid_2, this.media_3, this.monitor_4, arg0);
}
;
_.length_1 = 0;
function Messenger$lambda$54$Type($$outer_0, length_1, p_2, uuid_3, media_4){
  this.$$outer_0 = $$outer_0;
  this.length_1 = length_1;
  this.p_2 = p_2;
  this.uuid_3 = uuid_3;
  this.media_4 = media_4;
}

defineClass(2780, $wnd.Function, $intern_22, Messenger$lambda$54$Type);
_.apply_0 = function apply_538(arg0){
  return $lambda$54_0(this.$$outer_0, this.length_1, this.p_2, this.uuid_3, this.media_4, arg0);
}
;
_.length_1 = 0;
function Messenger$lambda$55$Type($$outer_0, length_1){
  this.$$outer_0 = $$outer_0;
  this.length_1 = length_1;
}

defineClass(2781, $wnd.Function, $intern_22, Messenger$lambda$55$Type);
_.apply_0 = function apply_539(arg0){
  return $lambda$55_0(this.$$outer_0, this.length_1, arg0);
}
;
_.length_1 = 0;
function Messenger$lambda$56$Type(f_0, p_1, uuid_2){
  this.f_0 = f_0;
  this.p_1 = p_1;
  this.uuid_2 = uuid_2;
}

defineClass(2782, $wnd.Function, $intern_22, Messenger$lambda$56$Type);
_.apply_0 = function apply_540(arg0){
  return lambda$56_0(this.f_0, this.p_1, this.uuid_2, arg0);
}
;
function Messenger$lambda$57$Type($$outer_0, dirFromHome_1){
  this.$$outer_0 = $$outer_0;
  this.dirFromHome_1 = dirFromHome_1;
}

defineClass(2737, $wnd.Function, $intern_22, Messenger$lambda$57$Type);
_.apply_0 = function apply_541(arg0){
  return $lambda$57_0(this.$$outer_0, this.dirFromHome_1, arg0);
}
;
function Messenger$lambda$58$Type($$outer_0, dirFromHome_1){
  this.$$outer_0 = $$outer_0;
  this.dirFromHome_1 = dirFromHome_1;
}

defineClass(2783, $wnd.Function, $intern_22, Messenger$lambda$58$Type);
_.apply_0 = function apply_542(arg0){
  return $lambda$58(this.$$outer_0, this.dirFromHome_1, arg0);
}
;
function Messenger$lambda$6$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2748, $wnd.Function, $intern_22, Messenger$lambda$6$Type);
_.apply_0 = function apply_543(arg0){
  return $lambda$6_5(this.$$outer_0, arg0);
}
;
function Messenger$lambda$60$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1313, $wnd.Function, $intern_22, Messenger$lambda$60$Type);
_.apply_0 = function apply_544(arg0){
  return $lambda$60(this.$$outer_0, arg0);
}
;
function Messenger$lambda$61$Type($$outer_0, chatPath_1){
  this.$$outer_0 = $$outer_0;
  this.chatPath_1 = chatPath_1;
}

defineClass(2739, $wnd.Function, $intern_22, Messenger$lambda$61$Type);
_.apply_0 = function apply_545(arg0){
  return $lambda$61(this.$$outer_0, this.chatPath_1, arg0);
}
;
function Messenger$lambda$62$Type($$outer_0, popt_1, chatPath_2){
  this.$$outer_0 = $$outer_0;
  this.popt_1 = popt_1;
  this.chatPath_2 = chatPath_2;
}

defineClass(2784, $wnd.Function, $intern_22, Messenger$lambda$62$Type);
_.apply_0 = function apply_546(arg0){
  return $lambda$62(this.$$outer_0, this.popt_1, this.chatPath_2, arg0);
}
;
function Messenger$lambda$63$Type(){
}

defineClass(2740, $wnd.Function, $intern_22, Messenger$lambda$63$Type);
_.apply_0 = function apply_547(arg0){
  return $clinit_Boolean() , true;
}
;
function Messenger$lambda$64$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2741, $wnd.Function, $intern_22, Messenger$lambda$64$Type);
_.apply_0 = function apply_548(arg0){
  return $lambda$64(this.$$outer_0, arg0);
}
;
function Messenger$lambda$65$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2742, $wnd.Function, $intern_22, Messenger$lambda$65$Type);
_.apply_0 = function apply_549(arg0){
  return $lambda$65(this.$$outer_0, arg0);
}
;
function Messenger$lambda$66$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2743, $wnd.Function, $intern_22, Messenger$lambda$66$Type);
_.apply_0 = function apply_550(arg0){
  return $lambda$66_0(this.$$outer_0, arg0);
}
;
function Messenger$lambda$67$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2785, $wnd.Function, $intern_22, Messenger$lambda$67$Type);
_.apply_0 = function apply_551(arg0){
  return $lambda$67(this.$$outer_0, arg0);
}
;
function Messenger$lambda$69$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2745, $wnd.Function, $intern_22, Messenger$lambda$69$Type);
_.apply_0 = function apply_552(arg0){
  return $lambda$69_0(this.$$outer_0, arg0);
}
;
function Messenger$lambda$7$Type(){
}

defineClass(2756, $wnd.Function, {}, Messenger$lambda$7$Type);
_.accept_5 = function accept_61(arg0){
}
;
function Messenger$lambda$8$Type($$outer_0, rawChat_1){
  this.$$outer_0 = $$outer_0;
  this.rawChat_1 = rawChat_1;
}

defineClass(2749, $wnd.Function, $intern_22, Messenger$lambda$8$Type);
_.apply_0 = function apply_553(arg0){
  return $lambda$8_2(this.$$outer_0, this.rawChat_1, arg0);
}
;
function Messenger$lambda$9$Type(){
}

defineClass(2757, $wnd.Function, {}, Messenger$lambda$9$Type);
_.accept_5 = function accept_62(arg0){
}
;
function $addDeleted(this$static, username){
  var newDeleted;
  newDeleted = new HashSet_1(this$static.deletedMembers);
  $putStringValue(newDeleted.map_0, username, newDeleted);
  return new PrivateChatState(this$static.chatIdentity, this$static.chatIdPublic, newDeleted);
}

function $apply_7(this$static, newer){
  var newDeleted;
  newDeleted = new HashSet_1(this$static.deletedMembers);
  $addAll(newDeleted, newer.deletedMembers);
  return new PrivateChatState(newer.chatIdentity, newer.chatIdPublic, newDeleted);
}

function $toCbor_39(this$static){
  var deleted, result, transformed;
  result = new TreeMap;
  $put_6(result, 'ci', this$static.chatIdentity);
  $put_6(result, 'p', this$static.chatIdPublic);
  deleted = castTo($collect_0($map_0($sorted(new StreamImpl(null, this$static.deletedMembers.spliterator_0())), makeLambdaFunction(PrivateChatState$0methodref$ctor$Type.prototype.apply_0, PrivateChatState$0methodref$ctor$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  $put_6(result, 'd', new CborObject$CborList(deleted));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(result), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function PrivateChatState(chatIdentity, chatIdPublic, deletedMembers){
  this.chatIdentity = chatIdentity;
  this.chatIdPublic = chatIdPublic;
  this.deletedMembers = deletedMembers;
}

function fromCbor_49(cbor){
  var chatIdPublic, chatIdentity, deleted, m;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Incorrect cbor: ' + cbor));
  m = castTo(cbor, 18);
  chatIdentity = castTo($get_13(m, 'ci', makeLambdaFunction(PrivateChatState$1methodref$fromCbor$Type.prototype.apply_0, PrivateChatState$1methodref$fromCbor$Type, [])), 105);
  chatIdPublic = castTo($get_13(m, 'p', makeLambdaFunction(PrivateChatState$2methodref$fromCbor$Type.prototype.apply_0, PrivateChatState$2methodref$fromCbor$Type, [])), 233);
  deleted = $getList(m, 'd', makeLambdaFunction(PrivateChatState$3methodref$getString$Type.prototype.apply_0, PrivateChatState$3methodref$getString$Type, []));
  return new PrivateChatState(chatIdentity, chatIdPublic, new HashSet_1(deleted));
}

defineClass(247, 1, {7:1, 247:1}, PrivateChatState);
_.serialize = function serialize_66(){
  return $toByteArray_2($toCbor_39(this));
}
;
_.toCbor = function toCbor_58(){
  return $toCbor_39(this);
}
;
var Lpeergos_shared_messaging_PrivateChatState_2_classLit = createForClass('peergos.shared.messaging', 'PrivateChatState', 247);
function PrivateChatState$0methodref$ctor$Type(){
}

defineClass(2835, $wnd.Function, $intern_22, PrivateChatState$0methodref$ctor$Type);
_.apply_0 = function apply_554(arg0){
  return new CborObject$CborString(castToString(arg0));
}
;
function PrivateChatState$1methodref$fromCbor$Type(){
}

defineClass(2836, $wnd.Function, $intern_22, PrivateChatState$1methodref$fromCbor$Type);
_.apply_0 = function apply_555(arg0){
  return fromCbor_13(castTo(arg0, 7));
}
;
function PrivateChatState$2methodref$fromCbor$Type(){
}

defineClass(2837, $wnd.Function, $intern_22, PrivateChatState$2methodref$fromCbor$Type);
_.apply_0 = function apply_556(arg0){
  return fromCbor_16(castTo(arg0, 7));
}
;
function PrivateChatState$3methodref$getString$Type(){
}

defineClass(2838, $wnd.Function, $intern_22, PrivateChatState$3methodref$getString$Type);
_.apply_0 = function apply_557(arg0){
  return castTo(castTo(arg0, 7), 13).value_0;
}
;
function $toCbor_40(this$static){
  var result, transformed, transformed0, transformed1, transformedAttachmentMap, transformedAuthorMap;
  result = new TreeMap;
  $put_6(result, 'c', new CborObject$CborString(this$static.chatId));
  $put_6(result, 'r', new CborObject$CborBoolean(this$static.result));
  $put_6(result, 's', new CborObject$CborLong(this$static.startIndex));
  transformedAuthorMap = castTo($collect_0(this$static.authorMap.entrySet_0().stream(), toMap(makeLambdaFunction(ReadMessagesResponse$lambda$0$Type.prototype.apply_0, ReadMessagesResponse$lambda$0$Type, []), makeLambdaFunction(ReadMessagesResponse$lambda$1$Type.prototype.apply_0, ReadMessagesResponse$lambda$1$Type, []), new ReadMessagesResponse$lambda$2$Type, new ReadMessagesResponse$0methodref$ctor$Type)), 68);
  $put_6(result, 'a', (transformed0 = castTo($collect_0(transformedAuthorMap.entrySet_0().stream(), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed0)));
  transformedAttachmentMap = castTo($collect_0(this$static.attachmentMap.entrySet_0().stream(), toMap(makeLambdaFunction(ReadMessagesResponse$lambda$4$Type.prototype.apply_0, ReadMessagesResponse$lambda$4$Type, []), makeLambdaFunction(ReadMessagesResponse$lambda$5$Type.prototype.apply_0, ReadMessagesResponse$lambda$5$Type, []), new ReadMessagesResponse$lambda$6$Type, new ReadMessagesResponse$1methodref$ctor$Type)), 68);
  $put_6(result, 't', (transformed1 = castTo($collect_0(transformedAttachmentMap.entrySet_0().stream(), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed1)));
  $put_6(result, 'p', new CborObject$CborList(this$static.messagePairs));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(result), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function ReadMessagesResponse(result, chatId, startIndex, authorMap, attachmentMap, messagePairs){
  this.chatId = chatId;
  this.result = result;
  this.startIndex = startIndex;
  this.authorMap = authorMap;
  this.attachmentMap = attachmentMap;
  this.messagePairs = messagePairs;
}

function fromCbor_50(cbor){
  var attachmentMap, authorMap, chatId, fromString, m, messagePairs, result, startIndex, val;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Incorrect cbor: ' + cbor));
  m = castTo(cbor, 18);
  chatId = castTo(castTo($get_0(m.values_0, new CborObject$CborString('c')), 7), 13).value_0;
  result = ($clinit_Boolean() , val = castTo(castTo($get_0(m.values_0, new CborObject$CborString('r')), 7), 63) , !!val && val.value_0?true:false);
  startIndex = valueOf_2(castTo(castTo($get_0(m.values_0, new CborObject$CborString('s')), 7), 29).value_0);
  messagePairs = instanceOf(cbor, 18)?$getList(castTo(cbor, 18), 'p', makeLambdaFunction(ReadMessagesResponse$2methodref$fromCbor$Type.prototype.apply_0, ReadMessagesResponse$2methodref$fromCbor$Type, [])):($clinit_Collections() , $clinit_Collections() , EMPTY_LIST);
  fromString = makeLambdaFunction(ReadMessagesResponse$lambda$9$Type.prototype.apply_0, ReadMessagesResponse$lambda$9$Type, []);
  authorMap = $toMap(castTo(castTo($get_0(m.values_0, new CborObject$CborString('a')), 7), 18), fromString, fromString);
  attachmentMap = $toMap(castTo(castTo($get_0(m.values_0, new CborObject$CborString('t')), 7), 18), fromString, fromString);
  return new ReadMessagesResponse((checkCriticalNotNull(result) , result), chatId, toInt_0(startIndex.value_0), authorMap, attachmentMap, messagePairs);
}

defineClass(902, 1, $intern_67, ReadMessagesResponse);
_.serialize = function serialize_67(){
  return $toByteArray_2($toCbor_40(this));
}
;
_.toCbor = function toCbor_59(){
  return $toCbor_40(this);
}
;
_.result = false;
_.startIndex = 0;
var Lpeergos_shared_messaging_ReadMessagesResponse_2_classLit = createForClass('peergos.shared.messaging', 'ReadMessagesResponse', 902);
function ReadMessagesResponse$0methodref$ctor$Type(){
}

defineClass(904, 1, {}, ReadMessagesResponse$0methodref$ctor$Type);
_.get_0 = function get_42(){
  return new TreeMap;
}
;
var Lpeergos_shared_messaging_ReadMessagesResponse$0methodref$ctor$Type_2_classLit = createForClass('peergos.shared.messaging', 'ReadMessagesResponse/0methodref$ctor$Type', 904);
function ReadMessagesResponse$1methodref$ctor$Type(){
}

defineClass(906, 1, {}, ReadMessagesResponse$1methodref$ctor$Type);
_.get_0 = function get_43(){
  return new TreeMap;
}
;
var Lpeergos_shared_messaging_ReadMessagesResponse$1methodref$ctor$Type_2_classLit = createForClass('peergos.shared.messaging', 'ReadMessagesResponse/1methodref$ctor$Type', 906);
function ReadMessagesResponse$2methodref$fromCbor$Type(){
}

defineClass(2869, $wnd.Function, $intern_22, ReadMessagesResponse$2methodref$fromCbor$Type);
_.apply_0 = function apply_558(arg0){
  return fromCbor_47(castTo(arg0, 7));
}
;
function ReadMessagesResponse$lambda$0$Type(){
}

defineClass(2865, $wnd.Function, $intern_22, ReadMessagesResponse$lambda$0$Type);
_.apply_0 = function apply_559(arg0){
  return castToString(castTo(arg0, 40).getKey());
}
;
function ReadMessagesResponse$lambda$1$Type(){
}

defineClass(2866, $wnd.Function, $intern_22, ReadMessagesResponse$lambda$1$Type);
_.apply_0 = function apply_560(arg0){
  return new CborObject$CborString(castToString(castTo(arg0, 40).getValue()));
}
;
function ReadMessagesResponse$lambda$2$Type(){
}

defineClass(903, 1, $intern_34, ReadMessagesResponse$lambda$2$Type);
_.apply_1 = function apply_561(arg0, arg1){
  return castTo(arg0, 7);
}
;
var Lpeergos_shared_messaging_ReadMessagesResponse$lambda$2$Type_2_classLit = createForClass('peergos.shared.messaging', 'ReadMessagesResponse/lambda$2$Type', 903);
function ReadMessagesResponse$lambda$4$Type(){
}

defineClass(2867, $wnd.Function, $intern_22, ReadMessagesResponse$lambda$4$Type);
_.apply_0 = function apply_562(arg0){
  return castToString(castTo(arg0, 40).getKey());
}
;
function ReadMessagesResponse$lambda$5$Type(){
}

defineClass(2868, $wnd.Function, $intern_22, ReadMessagesResponse$lambda$5$Type);
_.apply_0 = function apply_563(arg0){
  return new CborObject$CborString(castToString(castTo(arg0, 40).getValue()));
}
;
function ReadMessagesResponse$lambda$6$Type(){
}

defineClass(905, 1, $intern_34, ReadMessagesResponse$lambda$6$Type);
_.apply_1 = function apply_564(arg0, arg1){
  return castTo(arg0, 7);
}
;
var Lpeergos_shared_messaging_ReadMessagesResponse$lambda$6$Type_2_classLit = createForClass('peergos.shared.messaging', 'ReadMessagesResponse/lambda$6$Type', 905);
function ReadMessagesResponse$lambda$9$Type(){
}

defineClass(2870, $wnd.Function, $intern_22, ReadMessagesResponse$lambda$9$Type);
_.apply_0 = function apply_565(arg0){
  return castTo(castTo(arg0, 7), 13).value_0;
}
;
function $toCbor_41(this$static){
  var result, transformed;
  result = new TreeMap;
  $put_6(result, 'm', this$static.message);
  this$static.messageToReplyTo.ref != null && $put_6(result, 'r', castTo($get_6(this$static.messageToReplyTo), 7));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(result), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function SendMessageRequest(message, messageToReplyTo){
  this.message = message;
  this.messageToReplyTo = messageToReplyTo;
}

function fromCbor_51(cbor){
  var m, message, messageToReplyTo;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Incorrect cbor: ' + cbor));
  m = castTo(cbor, 18);
  message = castTo($get_13(m, 'm', makeLambdaFunction(SendMessageRequest$0methodref$fromCbor$Type.prototype.apply_0, SendMessageRequest$0methodref$fromCbor$Type, [])), 234);
  messageToReplyTo = $containsKey_0(m.values_0, new CborObject$CborString('r'))?($clinit_Optional() , new Optional(checkCriticalNotNull(castTo($get_13(m, 'r', makeLambdaFunction(SendMessageRequest$1methodref$fromCbor$Type.prototype.apply_0, SendMessageRequest$1methodref$fromCbor$Type, [])), 220)))):($clinit_Optional() , $clinit_Optional() , EMPTY);
  return new SendMessageRequest(message, messageToReplyTo);
}

defineClass(907, 1, $intern_67, SendMessageRequest);
_.serialize = function serialize_68(){
  return $toByteArray_2($toCbor_41(this));
}
;
_.toCbor = function toCbor_60(){
  return $toCbor_41(this);
}
;
var Lpeergos_shared_messaging_SendMessageRequest_2_classLit = createForClass('peergos.shared.messaging', 'SendMessageRequest', 907);
function SendMessageRequest$0methodref$fromCbor$Type(){
}

defineClass(2871, $wnd.Function, $intern_22, SendMessageRequest$0methodref$fromCbor$Type);
_.apply_0 = function apply_566(arg0){
  return fromCbor_59(castTo(arg0, 7));
}
;
function SendMessageRequest$1methodref$fromCbor$Type(){
}

defineClass(2872, $wnd.Function, $intern_22, SendMessageRequest$1methodref$fromCbor$Type);
_.apply_0 = function apply_567(arg0){
  return fromCbor_46(castTo(arg0, 7));
}
;
function SignedMessage(signature, msg){
  this.signature = signature;
  this.msg = msg;
}

function fromCbor_52(cbor){
  var list, msg, signature;
  if (!instanceOf(cbor, 21))
    throw toJs(new IllegalStateException_0('Incorrect cbor: ' + cbor));
  list = castTo(cbor, 21);
  signature = castTo($get_11(list, 0, makeLambdaFunction(SignedMessage$lambda$0$Type.prototype.apply_0, SignedMessage$lambda$0$Type, [])), 11);
  msg = fromCbor_46(fromByteArray(castTo($get_11(list, 1, makeLambdaFunction(SignedMessage$lambda$1$Type.prototype.apply_0, SignedMessage$lambda$1$Type, [])), 11)));
  return new SignedMessage(signature, msg);
}

defineClass(137, 1, {7:1, 137:1}, SignedMessage);
_.serialize = function serialize_69(){
  return $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject$CborByteArray_2_classLit, 1), $intern_0, 27, 0, [new CborObject$CborByteArray(this.signature), new CborObject$CborByteArray($toByteArray_2($toCbor_36(this.msg)))]))));
}
;
_.equals_0 = function equals_72(o){
  var that;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_messaging_SignedMessage_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 137);
  return equals_16(this.signature, that.signature) && equals_28(this.msg, that.msg);
}
;
_.hashCode_1 = function hashCode_70(){
  var result;
  result = hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.msg]));
  result = 31 * result + hashCode_17(this.signature);
  return result;
}
;
_.toCbor = function toCbor_61(){
  return new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject$CborByteArray_2_classLit, 1), $intern_0, 27, 0, [new CborObject$CborByteArray(this.signature), new CborObject$CborByteArray($toByteArray_2($toCbor_36(this.msg)))])));
}
;
_.toString_0 = function toString_64(){
  return $toString_8(this.msg);
}
;
var Lpeergos_shared_messaging_SignedMessage_2_classLit = createForClass('peergos.shared.messaging', 'SignedMessage', 137);
function SignedMessage$lambda$0$Type(){
}

defineClass(3536, $wnd.Function, $intern_22, SignedMessage$lambda$0$Type);
_.apply_0 = function apply_568(arg0){
  return castTo(castTo(arg0, 7), 27).value_0;
}
;
function SignedMessage$lambda$1$Type(){
}

defineClass(3537, $wnd.Function, $intern_22, SignedMessage$lambda$1$Type);
_.apply_0 = function apply_569(arg0){
  return castTo(castTo(arg0, 7), 27).value_0;
}
;
function $getEventCounter(this$static, member){
  var res;
  res = castTo($get_0(this$static.time, member), 69);
  if (!res)
    throw toJs(new IllegalStateException_0('Id not present in clock!'));
  return res.value_0;
}

function $hasGreaterCounterThan(this$static, b){
  var e, e$iterator;
  for (e$iterator = new TreeMap$EntryIterator((new TreeMap$EntrySet(this$static.time)).this$01_0); $hasNext(e$iterator.iter);) {
    e = e$iterator.last = castTo($next(e$iterator.iter), 40);
    if ($hasId(b, castTo(e.getKey(), 103)) && gt(castTo(e.getValue(), 69).value_0, $getEventCounter(b, castTo(e.getKey(), 103))))
      return true;
  }
  return false;
}

function $hasId(this$static, member){
  return $containsKey_0(this$static.time, member);
}

function $increment(this$static, member){
  var counter, res;
  counter = castTo($get_0(this$static.time, member), 69);
  res = new TreeMap_2(this$static.time);
  $put_6(res, member, valueOf_2(add_1(counter.value_0, 1)));
  return new TreeClock(res);
}

function $isBeforeOrEqual(this$static, b){
  var e, e$iterator;
  for (e$iterator = new TreeMap$EntryIterator((new TreeMap$EntrySet(this$static.time)).this$01_0); $hasNext(e$iterator.iter);) {
    e = e$iterator.last = castTo($next(e$iterator.iter), 40);
    if (!$hasId(b, castTo(e.getKey(), 103)) || gt(castTo(e.getValue(), 69).value_0, $getEventCounter(b, castTo(e.getKey(), 103))))
      return false;
  }
  return true;
}

function $isConcurrentWith(this$static, b){
  return $hasGreaterCounterThan(this$static, b) && $hasGreaterCounterThan(b, this$static);
}

function $merge_2(this$static, other){
  var e, e$iterator, res;
  res = new TreeMap_2(this$static.time);
  for (e$iterator = new TreeMap$EntryIterator((new TreeMap$EntrySet(other.time)).this$01_0); $hasNext(e$iterator.iter);) {
    e = e$iterator.last = castTo($next(e$iterator.iter), 40);
    (!$containsKey_0(res, e.getKey()) || lt(castTo($get_0(res, e.getKey()), 69).value_0, castTo(e.getValue(), 69).value_0)) && $put_6(res, castTo(e.getKey(), 103), castTo(e.getValue(), 69));
  }
  return new TreeClock(res);
}

function $toCbor_42(this$static){
  var e, e$iterator, mapping, res;
  res = new ArrayList;
  for (e$iterator = new TreeMap$EntryIterator((new TreeMap$EntrySet(this$static.time)).this$01_0); $hasNext(e$iterator.iter);) {
    e = e$iterator.last = castTo($next(e$iterator.iter), 40);
    mapping = castTo(concat($mapToObj(stream_4(castTo(e.getKey(), 103).id_0), new TreeClock$lambda$2$Type), new StreamImpl(null, new Spliterators$IteratorSpliterator(singleton(castTo(e.getValue(), 69)), 1))).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
    res.array[res.array.length] = mapping;
  }
  return build_0(res, makeLambdaFunction(TreeClock$lambda$3$Type.prototype.apply_0, TreeClock$lambda$3$Type, []));
}

function $withMember(this$static, member){
  var res;
  res = new TreeMap_2(this$static.time);
  $put_6(res, member, valueOf_2(0));
  return new TreeClock(res);
}

function TreeClock(time){
  this.time = time;
}

function fromCbor_53(cbor){
  var mappings;
  if (!instanceOf(cbor, 21))
    throw toJs(new IllegalStateException_0('Incorrect cbor: ' + cbor));
  mappings = new TreeMap;
  $map_2(castTo(cbor, 21), makeLambdaFunction(TreeClock$lambda$5$Type.prototype.apply_0, TreeClock$lambda$5$Type, [])).forEach(new TreeClock$lambda$7$Type(mappings));
  return new TreeClock(mappings);
}

function init_1(members){
  var member, member$iterator, res;
  res = new TreeMap;
  for (member$iterator = new AbstractList$IteratorImpl(members); member$iterator.i < member$iterator.this$01_0.size();) {
    member = (checkCriticalElement(member$iterator.i < member$iterator.this$01_0.size()) , castTo(member$iterator.this$01_0.getAtIndex(member$iterator.last = member$iterator.i++), 103));
    $put_6(res, member, valueOf_2(0));
  }
  return new TreeClock(res);
}

function lambda$7_3(mappings_0, m_1){
  return $put_6(mappings_0, new Id_1($toArray_1($mapToInt(m_1.subList(0, m_1.size() - 1).stream(), new TreeClock$1methodref$intValue$Type))), castTo(m_1.getAtIndex(m_1.size() - 1), 69));
}

defineClass(194, 1, {7:1, 194:1}, TreeClock);
_.serialize = function serialize_70(){
  return $toByteArray_2($toCbor_42(this));
}
;
_.equals_0 = function equals_73(o){
  var treeClock;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_messaging_TreeClock_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  treeClock = castTo(o, 194);
  return equals_28(this.time, treeClock.time);
}
;
_.hashCode_1 = function hashCode_71(){
  return hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.time]));
}
;
_.toCbor = function toCbor_62(){
  return $toCbor_42(this);
}
;
_.toString_0 = function toString_65(){
  return castToString($collect_0($map_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(this.time), 1)), makeLambdaFunction(TreeClock$lambda$9$Type.prototype.apply_0, TreeClock$lambda$9$Type, [])), of_3(new Collectors$lambda$15$Type(',', ''), new Collectors$9methodref$add$Type, new Collectors$10methodref$merge$Type, makeLambdaFunction(Collectors$11methodref$toString$Type.prototype.apply_0, Collectors$11methodref$toString$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, []))));
}
;
var Lpeergos_shared_messaging_TreeClock_2_classLit = createForClass('peergos.shared.messaging', 'TreeClock', 194);
function TreeClock$0methodref$ctor$Type(){
}

defineClass(2721, $wnd.Function, $intern_22, TreeClock$0methodref$ctor$Type);
_.apply_0 = function apply_570(arg0){
  return new CborObject$CborLong(castTo(arg0, 69).value_0);
}
;
function TreeClock$1methodref$intValue$Type(){
}

defineClass(878, 1, {}, TreeClock$1methodref$intValue$Type);
_.applyAsInt = function applyAsInt_0(arg0){
  return toInt_0(castTo(arg0, 69).value_0);
}
;
var Lpeergos_shared_messaging_TreeClock$1methodref$intValue$Type_2_classLit = createForClass('peergos.shared.messaging', 'TreeClock/1methodref$intValue$Type', 878);
function TreeClock$lambda$2$Type(){
}

defineClass(877, 1, {}, TreeClock$lambda$2$Type);
_.apply_2 = function apply_571(arg0){
  return valueOf_2(arg0);
}
;
var Lpeergos_shared_messaging_TreeClock$lambda$2$Type_2_classLit = createForClass('peergos.shared.messaging', 'TreeClock/lambda$2$Type', 877);
function TreeClock$lambda$3$Type(){
}

defineClass(2718, $wnd.Function, $intern_22, TreeClock$lambda$3$Type);
_.apply_0 = function apply_572(arg0){
  return build_0(castTo(arg0, 17), makeLambdaFunction(TreeClock$0methodref$ctor$Type.prototype.apply_0, TreeClock$0methodref$ctor$Type, []));
}
;
function TreeClock$lambda$5$Type(){
}

defineClass(2719, $wnd.Function, $intern_22, TreeClock$lambda$5$Type);
_.apply_0 = function apply_573(arg0){
  return $map_2(castTo(castTo(arg0, 7), 21), makeLambdaFunction(TreeClock$lambda$6$Type.prototype.apply_0, TreeClock$lambda$6$Type, []));
}
;
function TreeClock$lambda$6$Type(){
}

defineClass(2722, $wnd.Function, $intern_22, TreeClock$lambda$6$Type);
_.apply_0 = function apply_574(arg0){
  return valueOf_2(castTo(castTo(arg0, 7), 29).value_0);
}
;
function TreeClock$lambda$7$Type(mappings_0){
  this.mappings_0 = mappings_0;
}

defineClass(879, 1, $intern_32, TreeClock$lambda$7$Type);
_.accept = function accept_63(arg0){
  lambda$7_3(this.mappings_0, arg0);
}
;
_.andThen = function andThen_27(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_messaging_TreeClock$lambda$7$Type_2_classLit = createForClass('peergos.shared.messaging', 'TreeClock/lambda$7$Type', 879);
function TreeClock$lambda$9$Type(){
}

defineClass(2720, $wnd.Function, $intern_22, TreeClock$lambda$9$Type);
_.apply_0 = function apply_575(arg0){
  return castTo(arg0, 40).getKey() + ':' + castTo(arg0, 40).getValue();
}
;
function $clinit_Message(){
  $clinit_Message = emptyMethod;
  byValue_7 = new HashMap;
}

function fromCbor_59(cbor){
  $clinit_Message();
  var category, map_0;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Incorrect cbor: ' + cbor));
  map_0 = castTo(cbor, 18);
  category = castTo($get_13(map_0, 'c', makeLambdaFunction(Message$lambda$0$Type.prototype.apply_0, Message$lambda$0$Type, [])), 160);
  switch (category.ordinal_0) {
    case 0:
      return fromCbor_58(cbor);
    case 1:
      return fromCbor_57(cbor);
    case 2:
      return fromCbor_54(cbor);
    case 3:
      return fromCbor_62(cbor);
    case 4:
      return fromCbor_61(cbor);
    case 6:
      return fromCbor_56(cbor);
    case 5:
      return fromCbor_55(cbor);
    case 7:
      return fromCbor_60(cbor);
    default:throw toJs(new IllegalStateException_0('Invalid message type!'));
  }
}

var byValue_7;
function $toCbor_43(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'c', new CborObject$CborLong(($clinit_Message$Type() , Application).value));
  $put_6(state, 'b', new CborObject$CborList(this$static.body));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function ApplicationMessage(body_0){
  this.body = body_0;
}

function attachment_0(text_0, attachments){
  var attachmentList, body_0;
  attachmentList = castTo($collect_0($map_0(attachments.stream(), makeLambdaFunction(ApplicationMessage$lambda$2$Type.prototype.apply_0, ApplicationMessage$lambda$2$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  body_0 = new ArrayList;
  $add(body_0, new Text_0(text_0));
  $addAll_0(body_0, attachmentList);
  return new ApplicationMessage(body_0);
}

function fromCbor_54(cbor){
  var body_0, m;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor! ' + cbor));
  m = castTo(cbor, 18);
  body_0 = $getList(m, 'b', makeLambdaFunction(ApplicationMessage$1methodref$fromCbor$Type.prototype.apply_0, ApplicationMessage$1methodref$fromCbor$Type, []));
  return new ApplicationMessage(body_0);
}

function text_1(text_0){
  return new ApplicationMessage(($clinit_Collections() , new Collections$SingletonList(new Text_0(text_0))));
}

defineClass(222, 1, {7:1, 222:1, 234:1}, ApplicationMessage);
_.serialize = function serialize_71(){
  return $toByteArray_2($toCbor_43(this));
}
;
_.toCbor = function toCbor_64(){
  return $toCbor_43(this);
}
;
_.equals = function equals_74(o){
  var that;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_messaging_messages_ApplicationMessage_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 222);
  return equals_28(this.body, that.body);
}
;
_.equals_0 = function(o){
  return this.equals(o);
}
;
_.hashCode = function hashCode_72(){
  return hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.body]));
}
;
_.hashCode_1 = function(){
  return this.hashCode();
}
;
_.toCbor = function toCbor_63(){
  return $toCbor_43(this);
}
;
_.toString = function toString_66(){
  return castToString($collect_0($map_0(this.body.stream(), makeLambdaFunction(ApplicationMessage$0methodref$toString$Type.prototype.apply_0, ApplicationMessage$0methodref$toString$Type, [])), of_3(new Collectors$5methodref$ctor$Type, new Collectors$6methodref$append$Type, new Collectors$7methodref$append$Type, makeLambdaFunction(Collectors$8methodref$toString$Type.prototype.apply_0, Collectors$8methodref$toString$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, []))));
}
;
_.toString_0 = function(){
  return this.toString();
}
;
_.type = function type_2(){
  return $clinit_Message$Type() , Application;
}
;
var Lpeergos_shared_messaging_messages_ApplicationMessage_2_classLit = createForClass('peergos.shared.messaging.messages', 'ApplicationMessage', 222);
function ApplicationMessage$0methodref$toString$Type(){
}

defineClass(2873, $wnd.Function, $intern_22, ApplicationMessage$0methodref$toString$Type);
_.apply_0 = function apply_576(arg0){
  return toString_5(arg0);
}
;
function ApplicationMessage$1methodref$fromCbor$Type(){
}

defineClass(2874, $wnd.Function, $intern_22, ApplicationMessage$1methodref$fromCbor$Type);
_.apply_0 = function apply_577(arg0){
  return fromCbor_26(castTo(arg0, 7));
}
;
function ApplicationMessage$lambda$2$Type(){
}

defineClass(2875, $wnd.Function, $intern_22, ApplicationMessage$lambda$2$Type);
_.apply_0 = function apply_578(arg0){
  return new Reference(castTo(arg0, 177));
}
;
function $toCbor_44(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'c', new CborObject$CborLong(($clinit_Message$Type() , Delete).value));
  $put_6(state, 'r', this$static.target);
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function DeleteMessage(target){
  this.target = target;
}

function build_9(target, hasher){
  return $thenApply($bareHash(hasher, $toByteArray_2($toCbor_36(target))), makeLambdaFunction(DeleteMessage$lambda$1$Type.prototype.apply_0, DeleteMessage$lambda$1$Type, []));
}

function fromCbor_55(cbor){
  var m, target;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor! ' + cbor));
  m = castTo(cbor, 18);
  target = castTo($get_13(m, 'r', makeLambdaFunction(DeleteMessage$0methodref$fromCbor$Type.prototype.apply_0, DeleteMessage$0methodref$fromCbor$Type, [])), 152);
  return new DeleteMessage(target);
}

defineClass(355, 1, {7:1, 355:1, 234:1}, DeleteMessage);
_.serialize = function serialize_72(){
  return $toByteArray_2($toCbor_44(this));
}
;
_.toCbor = function toCbor_66(){
  return $toCbor_44(this);
}
;
_.equals = function equals_75(o){
  var that;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_messaging_messages_DeleteMessage_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 355);
  return equals_28(this.target, that.target);
}
;
_.equals_0 = function(o){
  return this.equals(o);
}
;
_.hashCode = function hashCode_73(){
  return hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.target]));
}
;
_.hashCode_1 = function(){
  return this.hashCode();
}
;
_.toCbor = function toCbor_65(){
  return $toCbor_44(this);
}
;
_.type = function type_3(){
  return $clinit_Message$Type() , Delete;
}
;
var Lpeergos_shared_messaging_messages_DeleteMessage_2_classLit = createForClass('peergos.shared.messaging.messages', 'DeleteMessage', 355);
function DeleteMessage$0methodref$fromCbor$Type(){
}

defineClass(2876, $wnd.Function, $intern_22, DeleteMessage$0methodref$fromCbor$Type);
_.apply_0 = function apply_579(arg0){
  return fromCbor_48(castTo(arg0, 7));
}
;
function DeleteMessage$lambda$1$Type(){
}

defineClass(2877, $wnd.Function, $intern_22, DeleteMessage$lambda$1$Type);
_.apply_0 = function apply_580(arg0){
  return new DeleteMessage(new MessageRef(castTo(arg0, 58)));
}
;
function $toCbor_45(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'c', new CborObject$CborLong(($clinit_Message$Type() , Edit).value));
  $put_6(state, 'r', this$static.priorVersion);
  $put_6(state, 'b', this$static.content);
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function EditMessage(priorVersion, content_0){
  this.priorVersion = priorVersion;
  this.content = content_0;
}

function build_10(prior, content_0, hasher){
  return $thenApply($bareHash(hasher, $toByteArray_2($toCbor_36(prior))), makeLambdaFunction(EditMessage$lambda$2$Type.prototype.apply_0, EditMessage$lambda$2$Type, [content_0]));
}

function fromCbor_56(cbor){
  var content_0, m, parent_0;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor! ' + cbor));
  m = castTo(cbor, 18);
  parent_0 = castTo($get_13(m, 'r', makeLambdaFunction(EditMessage$0methodref$fromCbor$Type.prototype.apply_0, EditMessage$0methodref$fromCbor$Type, [])), 152);
  content_0 = castTo($get_13(m, 'b', makeLambdaFunction(EditMessage$1methodref$fromCbor$Type.prototype.apply_0, EditMessage$1methodref$fromCbor$Type, [])), 222);
  return new EditMessage(parent_0, content_0);
}

function lambda$2_4(content_0, h_1){
  return new EditMessage(new MessageRef(h_1), content_0);
}

defineClass(356, 1, {7:1, 356:1, 234:1}, EditMessage);
_.serialize = function serialize_73(){
  return $toByteArray_2($toCbor_45(this));
}
;
_.toCbor = function toCbor_68(){
  return $toCbor_45(this);
}
;
_.equals = function equals_76(o){
  var replyTo;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_messaging_messages_EditMessage_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  replyTo = castTo(o, 356);
  return equals_28(this.priorVersion, replyTo.priorVersion) && equals_28(this.content, replyTo.content);
}
;
_.equals_0 = function(o){
  return this.equals(o);
}
;
_.hashCode = function hashCode_74(){
  return hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.priorVersion, this.content]));
}
;
_.hashCode_1 = function(){
  return this.hashCode();
}
;
_.toCbor = function toCbor_67(){
  return $toCbor_45(this);
}
;
_.type = function type_4(){
  return $clinit_Message$Type() , Edit;
}
;
var Lpeergos_shared_messaging_messages_EditMessage_2_classLit = createForClass('peergos.shared.messaging.messages', 'EditMessage', 356);
function EditMessage$0methodref$fromCbor$Type(){
}

defineClass(2878, $wnd.Function, $intern_22, EditMessage$0methodref$fromCbor$Type);
_.apply_0 = function apply_581(arg0){
  return fromCbor_48(castTo(arg0, 7));
}
;
function EditMessage$1methodref$fromCbor$Type(){
}

defineClass(2879, $wnd.Function, $intern_22, EditMessage$1methodref$fromCbor$Type);
_.apply_0 = function apply_582(arg0){
  return fromCbor_54(castTo(arg0, 7));
}
;
function EditMessage$lambda$2$Type(content_0){
  this.content_0 = content_0;
}

defineClass(2880, $wnd.Function, $intern_22, EditMessage$lambda$2$Type);
_.apply_0 = function apply_583(arg0){
  return lambda$2_4(this.content_0, arg0);
}
;
function $toCbor_46(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'c', new CborObject$CborLong(($clinit_Message$Type() , Invite_0).value));
  $put_6(state, 'u', new CborObject$CborString(this$static.username));
  $put_6(state, 'r', this$static.recipientId);
  $put_6(state, 'i', this$static.identity);
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function Invite(username, identity, recipientId){
  this.username = username;
  this.identity = identity;
  this.recipientId = recipientId;
}

function fromCbor_57(cbor){
  var identity, m, recipientId, username;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor! ' + cbor));
  m = castTo(cbor, 18);
  username = castTo(castTo($get_0(m.values_0, new CborObject$CborString('u')), 7), 13).value_0;
  recipientId = castTo($get_13(m, 'r', makeLambdaFunction(Invite$0methodref$fromCbor$Type.prototype.apply_0, Invite$0methodref$fromCbor$Type, [])), 103);
  identity = castTo($get_13(m, 'i', makeLambdaFunction(Invite$1methodref$fromCbor$Type.prototype.apply_0, Invite$1methodref$fromCbor$Type, [])), 55);
  return new Invite(username, identity, recipientId);
}

defineClass(322, 1, {7:1, 322:1, 234:1}, Invite);
_.serialize = function serialize_74(){
  return $toByteArray_2($toCbor_46(this));
}
;
_.toCbor = function toCbor_69(){
  return $toCbor_46(this);
}
;
_.equals_0 = function equals_77(o){
  var invite;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_messaging_messages_Invite_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  invite = castTo(o, 322);
  return this.username == invite.username && equals_28(this.identity, invite.identity) && equals_28(this.recipientId, invite.recipientId);
}
;
_.hashCode_1 = function hashCode_75(){
  return hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.username, this.identity, this.recipientId]));
}
;
_.toString_0 = function toString_67(){
  return 'INVITE(' + this.username + ')';
}
;
_.type = function type_5(){
  return $clinit_Message$Type() , Invite_0;
}
;
var Lpeergos_shared_messaging_messages_Invite_2_classLit = createForClass('peergos.shared.messaging.messages', 'Invite', 322);
function Invite$0methodref$fromCbor$Type(){
}

defineClass(3399, $wnd.Function, $intern_22, Invite$0methodref$fromCbor$Type);
_.apply_0 = function apply_584(arg0){
  return fromCbor_44(castTo(arg0, 7));
}
;
function Invite$1methodref$fromCbor$Type(){
}

defineClass(3400, $wnd.Function, $intern_22, Invite$1methodref$fromCbor$Type);
_.apply_0 = function apply_585(arg0){
  return fromCbor_23(castTo(arg0, 7));
}
;
function $toCbor_47(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'c', new CborObject$CborLong(($clinit_Message$Type() , Join_0).value));
  $put_6(state, 'u', new CborObject$CborString(this$static.username));
  $put_6(state, 'i', this$static.identity);
  $put_6(state, 'ci', this$static.chatIdentity);
  $put_6(state, 'p', this$static.chatIdPublic);
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function Join(username, identity, chatIdentity, chatIdPublic){
  this.username = username;
  this.identity = identity;
  this.chatIdentity = chatIdentity;
  this.chatIdPublic = chatIdPublic;
}

function fromCbor_58(cbor){
  var chatIdPublic, chatIdentity, identity, m, username;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor! ' + cbor));
  m = castTo(cbor, 18);
  username = castTo(castTo($get_0(m.values_0, new CborObject$CborString('u')), 7), 13).value_0;
  identity = castTo($get_13(m, 'i', makeLambdaFunction(Join$0methodref$fromCbor$Type.prototype.apply_0, Join$0methodref$fromCbor$Type, [])), 55);
  chatIdentity = castTo($get_13(m, 'ci', makeLambdaFunction(Join$1methodref$fromCbor$Type.prototype.apply_0, Join$1methodref$fromCbor$Type, [])), 219);
  chatIdPublic = castTo($get_13(m, 'p', makeLambdaFunction(Join$2methodref$fromCbor$Type.prototype.apply_0, Join$2methodref$fromCbor$Type, [])), 233);
  return new Join(username, identity, chatIdentity, chatIdPublic);
}

defineClass(282, 1, {7:1, 282:1, 234:1}, Join);
_.serialize = function serialize_75(){
  return $toByteArray_2($toCbor_47(this));
}
;
_.toCbor = function toCbor_70(){
  return $toCbor_47(this);
}
;
_.equals_0 = function equals_78(o){
  var join_0;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_messaging_messages_Join_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  join_0 = castTo(o, 282);
  return this.username == join_0.username && equals_28(this.identity, join_0.identity) && equals_28(this.chatIdentity, join_0.chatIdentity) && equals_28(this.chatIdPublic, join_0.chatIdPublic);
}
;
_.hashCode_1 = function hashCode_76(){
  return hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.username, this.identity, this.chatIdentity, this.chatIdPublic]));
}
;
_.toString_0 = function toString_68(){
  return 'JOIN(' + this.username + ')';
}
;
_.type = function type_6(){
  return $clinit_Message$Type() , Join_0;
}
;
var Lpeergos_shared_messaging_messages_Join_2_classLit = createForClass('peergos.shared.messaging.messages', 'Join', 282);
function Join$0methodref$fromCbor$Type(){
}

defineClass(3396, $wnd.Function, $intern_22, Join$0methodref$fromCbor$Type);
_.apply_0 = function apply_586(arg0){
  return fromCbor_23(castTo(arg0, 7));
}
;
function Join$1methodref$fromCbor$Type(){
}

defineClass(3397, $wnd.Function, $intern_22, Join$1methodref$fromCbor$Type);
_.apply_0 = function apply_587(arg0){
  return fromCbor_11(castTo(arg0, 7));
}
;
function Join$2methodref$fromCbor$Type(){
}

defineClass(3398, $wnd.Function, $intern_22, Join$2methodref$fromCbor$Type);
_.apply_0 = function apply_588(arg0){
  return fromCbor_16(castTo(arg0, 7));
}
;
function $clinit_Message$Type(){
  $clinit_Message$Type = emptyMethod;
  Join_0 = new Message$Type('Join', 0, 0);
  Invite_0 = new Message$Type('Invite', 1, 1);
  Application = new Message$Type('Application', 2, 2);
  GroupState = new Message$Type('GroupState', 3, 3);
  ReplyTo = new Message$Type('ReplyTo', 4, 4);
  Delete = new Message$Type('Delete', 5, 5);
  Edit = new Message$Type('Edit', 6, 6);
  RemoveMember = new Message$Type('RemoveMember', 7, 7);
}

function Message$Type(enum$name, enum$ordinal, value_0){
  Enum.call(this, enum$name, enum$ordinal);
  this.value = value_0;
  ($clinit_Message() , byValue_7).put(valueOf_1(value_0), this);
}

function byValue_8(val){
  $clinit_Message$Type();
  if (!($clinit_Message() , byValue_7).containsKey(valueOf_1(val)))
    throw toJs(new IllegalStateException_0('Unknown message type: ' + val));
  return castTo(byValue_7.get(valueOf_1(val)), 160);
}

function valueOf_11(name_0){
  $clinit_Message$Type();
  return valueOf_0(($clinit_Message$Type$Map() , $MAP_2), name_0);
}

function values_14(){
  $clinit_Message$Type();
  return stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_messaging_messages_Message$Type_2_classLit, 1), $intern_33, 160, 0, [Join_0, Invite_0, Application, GroupState, ReplyTo, Delete, Edit, RemoveMember]);
}

defineClass(160, 52, {4:1, 57:1, 52:1, 160:1}, Message$Type);
_.value = 0;
var Application, Delete, Edit, GroupState, Invite_0, Join_0, RemoveMember, ReplyTo;
var Lpeergos_shared_messaging_messages_Message$Type_2_classLit = createForEnum('peergos.shared.messaging.messages', 'Message/Type', 160, values_14);
function $clinit_Message$Type$Map(){
  $clinit_Message$Type$Map = emptyMethod;
  $MAP_2 = createValueOfMap(($clinit_Message$Type() , stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_messaging_messages_Message$Type_2_classLit, 1), $intern_33, 160, 0, [Join_0, Invite_0, Application, GroupState, ReplyTo, Delete, Edit, RemoveMember])));
}

var $MAP_2;
function Message$lambda$0$Type(){
}

defineClass(2723, $wnd.Function, $intern_22, Message$lambda$0$Type);
_.apply_0 = function apply_589(arg0){
  return $clinit_Message() , byValue_8(toInt_0(castTo(castTo(arg0, 7), 29).value_0));
}
;
function $toCbor_48(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'c', new CborObject$CborLong(($clinit_Message$Type() , RemoveMember).value));
  $put_6(state, 'u', new CborObject$CborString(this$static.chatUid));
  $put_6(state, 'm', this$static.memberToRemove);
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function RemoveMember_0(chatUid, memberToRemove){
  this.chatUid = chatUid;
  this.memberToRemove = memberToRemove;
}

function fromCbor_60(cbor){
  var chatUid, m, member;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor! ' + cbor));
  m = castTo(cbor, 18);
  chatUid = castTo(castTo($get_0(m.values_0, new CborObject$CborString('u')), 7), 13).value_0;
  member = castTo($get_13(m, 'm', makeLambdaFunction(RemoveMember$0methodref$fromCbor$Type.prototype.apply_0, RemoveMember$0methodref$fromCbor$Type, [])), 103);
  return new RemoveMember_0(chatUid, member);
}

defineClass(310, 1, {7:1, 234:1, 310:1}, RemoveMember_0);
_.serialize = function serialize_76(){
  return $toByteArray_2($toCbor_48(this));
}
;
_.toCbor = function toCbor_72(){
  return $toCbor_48(this);
}
;
_.equals = function equals_79(o){
  var that;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_messaging_messages_RemoveMember_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 310);
  return this.chatUid == that.chatUid && equals_28(this.memberToRemove, that.memberToRemove);
}
;
_.equals_0 = function(o){
  return this.equals(o);
}
;
_.hashCode = function hashCode_77(){
  return hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.chatUid, this.memberToRemove]));
}
;
_.hashCode_1 = function(){
  return this.hashCode();
}
;
_.toCbor = function toCbor_71(){
  return $toCbor_48(this);
}
;
_.type = function type_7(){
  return $clinit_Message$Type() , RemoveMember;
}
;
var Lpeergos_shared_messaging_messages_RemoveMember_2_classLit = createForClass('peergos.shared.messaging.messages', 'RemoveMember', 310);
function RemoveMember$0methodref$fromCbor$Type(){
}

defineClass(2881, $wnd.Function, $intern_22, RemoveMember$0methodref$fromCbor$Type);
_.apply_0 = function apply_590(arg0){
  return fromCbor_44(castTo(arg0, 7));
}
;
function $toCbor_49(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'c', new CborObject$CborLong(($clinit_Message$Type() , ReplyTo).value));
  $put_6(state, 'r', this$static.parent);
  $put_6(state, 'b', this$static.content);
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function ReplyTo_0(parent_0, content_0){
  this.parent = parent_0;
  this.content = content_0;
}

function build_11(parent_0, content_0, hasher){
  return $thenApply($bareHash(hasher, $toByteArray_2($toCbor_36(parent_0))), makeLambdaFunction(ReplyTo$lambda$2$Type.prototype.apply_0, ReplyTo$lambda$2$Type, [content_0]));
}

function fromCbor_61(cbor){
  var content_0, m, parent_0;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor! ' + cbor));
  m = castTo(cbor, 18);
  parent_0 = castTo($get_13(m, 'r', makeLambdaFunction(ReplyTo$0methodref$fromCbor$Type.prototype.apply_0, ReplyTo$0methodref$fromCbor$Type, [])), 152);
  content_0 = castTo($get_13(m, 'b', makeLambdaFunction(ReplyTo$1methodref$fromCbor$Type.prototype.apply_0, ReplyTo$1methodref$fromCbor$Type, [])), 222);
  return new ReplyTo_0(parent_0, content_0);
}

function lambda$2_5(content_0, h_1){
  return new ReplyTo_0(new MessageRef(h_1), content_0);
}

defineClass(311, 1, {7:1, 234:1, 311:1}, ReplyTo_0);
_.serialize = function serialize_77(){
  return $toByteArray_2($toCbor_49(this));
}
;
_.toCbor = function toCbor_74(){
  return $toCbor_49(this);
}
;
_.equals = function equals_80(o){
  var replyTo;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_messaging_messages_ReplyTo_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  replyTo = castTo(o, 311);
  return equals_28(this.parent, replyTo.parent) && equals_28(this.content, replyTo.content);
}
;
_.equals_0 = function(o){
  return this.equals(o);
}
;
_.hashCode = function hashCode_78(){
  return hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.parent, this.content]));
}
;
_.hashCode_1 = function(){
  return this.hashCode();
}
;
_.toCbor = function toCbor_73(){
  return $toCbor_49(this);
}
;
_.type = function type_8(){
  return $clinit_Message$Type() , ReplyTo;
}
;
var Lpeergos_shared_messaging_messages_ReplyTo_2_classLit = createForClass('peergos.shared.messaging.messages', 'ReplyTo', 311);
function ReplyTo$0methodref$fromCbor$Type(){
}

defineClass(2882, $wnd.Function, $intern_22, ReplyTo$0methodref$fromCbor$Type);
_.apply_0 = function apply_591(arg0){
  return fromCbor_48(castTo(arg0, 7));
}
;
function ReplyTo$1methodref$fromCbor$Type(){
}

defineClass(2883, $wnd.Function, $intern_22, ReplyTo$1methodref$fromCbor$Type);
_.apply_0 = function apply_592(arg0){
  return fromCbor_54(castTo(arg0, 7));
}
;
function ReplyTo$lambda$2$Type(content_0){
  this.content_0 = content_0;
}

defineClass(2884, $wnd.Function, $intern_22, ReplyTo$lambda$2$Type);
_.apply_0 = function apply_593(arg0){
  return lambda$2_5(this.content_0, arg0);
}
;
function $toCbor_50(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'c', new CborObject$CborLong(($clinit_Message$Type() , GroupState).value));
  $put_6(state, 'k', new CborObject$CborString(this$static.key));
  $put_6(state, 'v', new CborObject$CborString(this$static.value));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function SetGroupState(key, value_0){
  this.key = key;
  this.value = value_0;
}

function fromCbor_62(cbor){
  var key, m, value_0;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor! ' + cbor));
  m = castTo(cbor, 18);
  key = castToString($get_13(m, 'k', makeLambdaFunction(SetGroupState$lambda$0$Type.prototype.apply_0, SetGroupState$lambda$0$Type, [])));
  value_0 = castToString($get_13(m, 'v', makeLambdaFunction(SetGroupState$lambda$1$Type.prototype.apply_0, SetGroupState$lambda$1$Type, [])));
  return new SetGroupState(key, value_0);
}

defineClass(250, 1, {7:1, 234:1, 250:1}, SetGroupState);
_.serialize = function serialize_78(){
  return $toByteArray_2($toCbor_50(this));
}
;
_.toCbor = function toCbor_76(){
  return $toCbor_50(this);
}
;
_.equals = function equals_81(o){
  var that;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_messaging_messages_SetGroupState_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 250);
  return this.key == that.key && this.value == that.value;
}
;
_.equals_0 = function(o){
  return this.equals(o);
}
;
_.hashCode = function hashCode_79(){
  return hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.key, this.value]));
}
;
_.hashCode_1 = function(){
  return this.hashCode();
}
;
_.toCbor = function toCbor_75(){
  return $toCbor_50(this);
}
;
_.toString = function toString_69(){
  return 'SET-GROUP-STATE(' + this.key + ', ' + this.value + ')';
}
;
_.toString_0 = function(){
  return this.toString();
}
;
_.type = function type_9(){
  return $clinit_Message$Type() , GroupState;
}
;
var Lpeergos_shared_messaging_messages_SetGroupState_2_classLit = createForClass('peergos.shared.messaging.messages', 'SetGroupState', 250);
function SetGroupState$lambda$0$Type(){
}

defineClass(2885, $wnd.Function, $intern_22, SetGroupState$lambda$0$Type);
_.apply_0 = function apply_594(arg0){
  return castTo(castTo(arg0, 7), 13).value_0;
}
;
function SetGroupState$lambda$1$Type(){
}

defineClass(2886, $wnd.Function, $intern_22, SetGroupState$lambda$1$Type);
_.apply_0 = function apply_595(arg0){
  return castTo(castTo(arg0, 7), 13).value_0;
}
;
function $addWrite(this$static, w, newHash, prevHash, prevSequence){
  var last, last0, writer;
  if ((prevHash == newHash || !!prevHash && $equals_7(prevHash, newHash)) && (this$static.writerUpdates.array.length == 0 || !$equals_7(castTo($get_1(this$static.writerUpdates, this$static.writerUpdates.array.length - 1), 132).currentHash, newHash)))
    throw toJs(new IllegalStateException_0('Noop pointer update!'));
  writer = w.publicKeyHash;
  $put(this$static.writers, writer, w);
  if (this$static.writerUpdates.array.length == 0) {
    $add(this$static.writerUpdates, new BufferedPointers$WriterUpdate(writer, prevHash, newHash, castTo($orElse($map(prevSequence, makeLambdaFunction(PointerUpdate$lambda$0$Type.prototype.apply_0, PointerUpdate$lambda$0$Type, [])), ($clinit_Optional() , new Optional(checkCriticalNotNull(valueOf_2(1))))), 12)));
  }
   else {
    last0 = castTo($get_1(this$static.writerUpdates, this$static.writerUpdates.array.length - 1), 132);
    $equals_13(last0.writer, writer)?$set_0(this$static.writerUpdates, this$static.writerUpdates.array.length - 1, new BufferedPointers$WriterUpdate(writer, last0.prevHash, newHash, last0.currentSequence)):$add(this$static.writerUpdates, new BufferedPointers$WriterUpdate(writer, prevHash, newHash, castTo($orElse($map(prevSequence, makeLambdaFunction(PointerUpdate$lambda$0$Type.prototype.apply_0, PointerUpdate$lambda$0$Type, [])), ($clinit_Optional() , new Optional(checkCriticalNotNull(valueOf_2(1))))), 12)));
  }
  last = castTo($get_1(this$static.writerUpdates, this$static.writerUpdates.array.length - 1), 132);
  $put(this$static.latest, w.publicKeyHash, last);
  return new PointerUpdate(last.prevHash, last.currentHash, last.currentSequence);
}

function $clear_5(this$static){
  $reset(this$static.writers);
  this$static.writerUpdates.array = initUnidimensionalArray(Ljava_lang_Object_2_classLit, $intern_0, 1, 0, 5, 1);
  $reset(this$static.latest);
}

function $commit_1(this$static, owner, signer, casUpdate){
  var signed;
  signed = $signMessage(signer.secret, $toByteArray_2($toCbor_51(casUpdate)));
  return this$static.target.setPointer_0(owner, signer.publicKeyHash, signed);
}

function $getCommittedPointerTarget(this$static, writer){
  return $flatMap($findFirst($map_0($filter(new StreamImpl(null, new Spliterators$IteratorSpliterator(this$static.writerUpdates, 16)), new BufferedPointers$lambda$0$Type(writer)), makeLambdaFunction(BufferedPointers$lambda$1$Type.prototype.apply_0, BufferedPointers$lambda$1$Type, []))), makeLambdaFunction(BufferedPointers$lambda$2$Type.prototype.apply_0, BufferedPointers$lambda$2$Type, []));
}

function BufferedPointers(target){
  this.writers = new HashMap;
  this.latest = new HashMap;
  this.writerUpdates = new ArrayList;
  if (instanceOf(target, 280))
    throw toJs(new IllegalStateException_0('Nested BufferedPointers!'));
  this.target = target;
}

function lambda$0_8(writer_0, u_1){
  return $equals_13(u_1.writer, writer_0);
}

defineClass(280, 1, {280:1}, BufferedPointers);
_.clearCache = function clearCache_0(){
  return new BufferedPointers(this.target.clearCache());
}
;
_.getPointer = function getPointer_0(owner, writer){
  throw toJs(new IllegalStateException_0("Shouldn't get here!"));
}
;
_.getPointerTarget = function getPointerTarget_0(owner, writer, ipfs){
  var cached;
  cached = castTo($get(this.latest, writer), 132);
  if (cached) {
    return new CompletableFuture_0(new PointerUpdate(cached.prevHash, cached.currentHash, cached.currentSequence));
  }
  return this.target.getPointerTarget(owner, writer, ipfs);
}
;
_.setPointer = function setPointer_1(owner, writer, casUpdate){
  $addWrite(this, writer, casUpdate.updated, casUpdate.original, casUpdate.sequence);
  return new CompletableFuture_0(($clinit_Boolean() , true));
}
;
_.setPointer_0 = function setPointer_2(owner, writer, writerSignedBtreeRootHash){
  throw toJs(new IllegalStateException_0("Shouldn't get here!"));
}
;
var Lpeergos_shared_mutable_BufferedPointers_2_classLit = createForClass('peergos.shared.mutable', 'BufferedPointers', 280);
function BufferedPointers$WriterUpdate(writer, prevHash, currentHash, currentSequence){
  this.writer = writer;
  this.prevHash = prevHash;
  this.currentHash = currentHash;
  this.currentSequence = currentSequence;
}

defineClass(132, 1, {132:1}, BufferedPointers$WriterUpdate);
_.toString_0 = function toString_70(){
  return this.writer + ':' + this.prevHash + ' => ' + this.currentSequence + this.currentHash;
}
;
var Lpeergos_shared_mutable_BufferedPointers$WriterUpdate_2_classLit = createForClass('peergos.shared.mutable', 'BufferedPointers/WriterUpdate', 132);
function BufferedPointers$lambda$0$Type(writer_0){
  this.writer_0 = writer_0;
}

defineClass(952, 1, {}, BufferedPointers$lambda$0$Type);
_.test_0 = function test_17(arg0){
  return lambda$0_8(this.writer_0, arg0);
}
;
var Lpeergos_shared_mutable_BufferedPointers$lambda$0$Type_2_classLit = createForClass('peergos.shared.mutable', 'BufferedPointers/lambda$0$Type', 952);
function BufferedPointers$lambda$1$Type(){
}

defineClass(3073, $wnd.Function, $intern_22, BufferedPointers$lambda$1$Type);
_.apply_0 = function apply_596(arg0){
  return castTo(arg0, 132).prevHash;
}
;
function BufferedPointers$lambda$2$Type(){
}

defineClass(3074, $wnd.Function, $intern_22, BufferedPointers$lambda$2$Type);
_.apply_0 = function apply_597(arg0){
  return $map(castTo(arg0, 93).hash_0?($clinit_Optional() , new Optional(checkCriticalNotNull(castTo(arg0, 93).hash_0))):($clinit_Optional() , $clinit_Optional() , EMPTY), makeLambdaFunction(BufferedPointers$lambda$3$Type.prototype.apply_0, BufferedPointers$lambda$3$Type, []));
}
;
function BufferedPointers$lambda$3$Type(){
}

defineClass(3075, $wnd.Function, $intern_22, BufferedPointers$lambda$3$Type);
_.apply_0 = function apply_598(arg0){
  return castTo(castTo(arg0, 58), 44);
}
;
function BufferedPointers$lambda$4$Type(){
}

defineClass(1503, $wnd.Function, $intern_22, BufferedPointers$lambda$4$Type);
_.apply_0 = function apply_599(arg0){
  return $stream($toOptional(castTo(arg0, 132).currentHash));
}
;
function BufferedPointers$lambda$5$Type(){
}

defineClass(1504, $wnd.Function, $intern_22, BufferedPointers$lambda$5$Type);
_.apply_0 = function apply_600(arg0){
  return castTo(castTo(arg0, 58), 44);
}
;
function $getPointer_0(this$static, owner, writer){
  var cached;
  cached = castTo($get(this$static.cache_0, writer), 20);
  if (!!cached && ($clinit_System() , lt(sub_1(fromDouble_0(Date.now()), castTo(cached.right, 69).value_0), this$static.cacheTTL)))
    return new CompletableFuture_0(castTo(cached.left, 12));
  return $thenApply($getPointer_3(this$static.target, owner, writer), makeLambdaFunction(CachingPointers$lambda$0$Type.prototype.apply_0, CachingPointers$lambda$0$Type, [this$static, writer]));
}

function $lambda$0_13(this$static, writer_1, m_1){
  $put(this$static.cache_0, writer_1, new Pair(m_1, valueOf_2(($clinit_System() , fromDouble_0(Date.now())))));
  return m_1;
}

function $lambda$1_8(this$static, writer_1, writerSignedBtreeRootHash_2, res_2){
  (checkCriticalNotNull(res_2) , res_2) && $put(this$static.cache_0, writer_1, new Pair(($clinit_Optional() , new Optional(checkCriticalNotNull(writerSignedBtreeRootHash_2))), valueOf_2(($clinit_System() , fromDouble_0(Date.now())))));
  return res_2;
}

function $setPointer_0(this$static, ownerPublicKey, writer, writerSignedBtreeRootHash){
  $remove(this$static.cache_0, writer);
  return $thenApply($setPointer_6(this$static.target, ownerPublicKey, writer, writerSignedBtreeRootHash), makeLambdaFunction(CachingPointers$lambda$1$Type.prototype.apply_0, CachingPointers$lambda$1$Type, [this$static, writer, writerSignedBtreeRootHash]));
}

function CachingPointers(target, cacheTTL){
  this.cache_0 = new HashMap;
  this.target = target;
  this.cacheTTL = cacheTTL;
}

defineClass(953, 1, {}, CachingPointers);
_.getPointerTarget = function getPointerTarget_1(owner, writer, ipfs){
  return $thenCompose($getPointer_0(this, owner, writer), makeLambdaFunction(MutablePointers$lambda$0$Type.prototype.apply_0, MutablePointers$lambda$0$Type, [owner, writer, ipfs]));
}
;
_.setPointer = function setPointer_3(owner, writer, casUpdate){
  var signed;
  return signed = $signMessage(writer.secret, $toByteArray_2($toCbor_51(casUpdate))) , $setPointer_0(this, owner, writer.publicKeyHash, signed);
}
;
_.clearCache = function clearCache_1(){
  $reset(this.cache_0);
  return this;
}
;
_.getPointer = function getPointer_1(owner, writer){
  return $getPointer_0(this, owner, writer);
}
;
_.setPointer_0 = function setPointer_4(ownerPublicKey, writer, writerSignedBtreeRootHash){
  return $setPointer_0(this, ownerPublicKey, writer, writerSignedBtreeRootHash);
}
;
_.cacheTTL = 0;
var Lpeergos_shared_mutable_CachingPointers_2_classLit = createForClass('peergos.shared.mutable', 'CachingPointers', 953);
function CachingPointers$lambda$0$Type($$outer_0, writer_1){
  this.$$outer_0 = $$outer_0;
  this.writer_1 = writer_1;
}

defineClass(3076, $wnd.Function, $intern_22, CachingPointers$lambda$0$Type);
_.apply_0 = function apply_601(arg0){
  return $lambda$0_13(this.$$outer_0, this.writer_1, arg0);
}
;
function CachingPointers$lambda$1$Type($$outer_0, writer_1, writerSignedBtreeRootHash_2){
  this.$$outer_0 = $$outer_0;
  this.writer_1 = writer_1;
  this.writerSignedBtreeRootHash_2 = writerSignedBtreeRootHash_2;
}

defineClass(3077, $wnd.Function, $intern_22, CachingPointers$lambda$1$Type);
_.apply_0 = function apply_602(arg0){
  return $lambda$1_8(this.$$outer_0, this.writer_1, this.writerSignedBtreeRootHash_2, arg0);
}
;
function $clinit_HttpMutablePointers(){
  $clinit_HttpMutablePointers = emptyMethod;
  LOG_1 = ($clinit_Logger() , getLogger());
}

function $getPointer_1(urlPrefix, poster, owner, writer){
  var ioe, t1, t2;
  t1 = ($clinit_System() , fromDouble_0(Date.now()));
  try {
    return $thenApply($get_28(poster, urlPrefix + 'peergos/v0/mutable/' + 'getPointer?owner=' + owner + '&writer=' + writer, ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)), makeLambdaFunction(HttpMutablePointers$lambda$1$Type.prototype.apply_0, HttpMutablePointers$lambda$1$Type, []));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 51)) {
      ioe = $e0;
      $log(LOG_1, ($clinit_Level() , WARNING), ioe.getMessage(), ioe);
      return new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY));
    }
     else 
      throw toJs($e0);
  }
   finally {
    t2 = fromDouble_0(Date.now());
    $info(LOG_1, 'HttpMutablePointers.get took ' + toString_4(sub_1(t2, t1)) + 'mS for (' + owner + ', ' + writer + ')');
  }
}

function $getPointer_2(this$static, targetId, owner, writer){
  return $getPointer_1('/p2p/' + targetId.toString() + '/http' + '/', this$static.p2p, owner, writer);
}

function $setPointer_1(urlPrefix, poster, owner, writer, writerSignedPayload){
  var t1, t2;
  t1 = ($clinit_System() , fromDouble_0(Date.now()));
  try {
    return $thenApply($post_0(poster, $canonicalise(poster, urlPrefix + 'peergos/v0/mutable/' + 'setPointer?owner=' + owner + '&writer=' + writer), writerSignedPayload), makeLambdaFunction(HttpMutablePointers$lambda$0$Type.prototype.apply_0, HttpMutablePointers$lambda$0$Type, []));
  }
   finally {
    t2 = fromDouble_0(Date.now());
    $info(LOG_1, 'HttpMutablePointers.set took ' + toString_4(sub_1(t2, t1)) + 'mS');
  }
}

function $setPointer_2(this$static, ownerPublicKey, sharingPublicKey, sharingKeySignedPayload){
  return $setPointer_1(this$static.directUrlPrefix, this$static.direct, ownerPublicKey, sharingPublicKey, sharingKeySignedPayload);
}

function $setPointer_3(this$static, targetId, ownerPublicKey, sharingPublicKey, sharingKeySignedPayload){
  return $setPointer_1('/p2p/' + targetId.toString() + '/http' + '/', this$static.p2p, ownerPublicKey, sharingPublicKey, sharingKeySignedPayload);
}

function HttpMutablePointers(direct, p2p){
  $clinit_HttpMutablePointers();
  $info(LOG_1, 'Creating Http Mutable Pointers API at ' + direct + ' and ' + p2p);
  this.directUrlPrefix = '';
  this.direct = direct;
  this.p2p = p2p;
}

function lambda$0_9(res_0){
  $clinit_HttpMutablePointers();
  var din, e;
  din = new DataInputStream(new ByteArrayInputStream(res_0));
  try {
    return $clinit_Boolean() , $readByte(din) != 0?true:false;
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 62)) {
      e = $e0;
      throw toJs(new RuntimeException_2(e));
    }
     else 
      throw toJs($e0);
  }
}

defineClass(494, 1, {}, HttpMutablePointers);
_.getPointerTarget = function getPointerTarget_2(owner, writer, ipfs){
  return $thenCompose($getPointer_1(this.directUrlPrefix, this.direct, owner, writer), makeLambdaFunction(MutablePointers$lambda$0$Type.prototype.apply_0, MutablePointers$lambda$0$Type, [owner, writer, ipfs]));
}
;
_.setPointer = function setPointer_5(owner, writer, casUpdate){
  var signed;
  return signed = $signMessage(writer.secret, $toByteArray_2($toCbor_51(casUpdate))) , $setPointer_2(this, owner, writer.publicKeyHash, signed);
}
;
_.clearCache = function clearCache_2(){
  return this;
}
;
_.getPointer = function getPointer_2(owner, writer){
  return $getPointer_1(this.directUrlPrefix, this.direct, owner, writer);
}
;
_.setPointer_0 = function setPointer_6(ownerPublicKey, sharingPublicKey, sharingKeySignedPayload){
  return $setPointer_2(this, ownerPublicKey, sharingPublicKey, sharingKeySignedPayload);
}
;
var LOG_1;
var Lpeergos_shared_mutable_HttpMutablePointers_2_classLit = createForClass('peergos.shared.mutable', 'HttpMutablePointers', 494);
function HttpMutablePointers$lambda$0$Type(){
}

defineClass(3110, $wnd.Function, $intern_22, HttpMutablePointers$lambda$0$Type);
_.apply_0 = function apply_603(arg0){
  return lambda$0_9(arg0);
}
;
function HttpMutablePointers$lambda$1$Type(){
}

defineClass(3111, $wnd.Function, $intern_22, HttpMutablePointers$lambda$1$Type);
_.apply_0 = function apply_604(arg0){
  return $clinit_HttpMutablePointers() , castTo(arg0, 11).length == 0?($clinit_Optional() , $clinit_Optional() , EMPTY):($clinit_Optional() , new Optional(checkCriticalNotNull(castTo(arg0, 11))));
}
;
function MutablePointers$lambda$0$Type(owner_0, writer_1, ipfs_2){
  this.owner_0 = owner_0;
  this.writer_1 = writer_1;
  this.ipfs_2 = ipfs_2;
}

defineClass(332, $wnd.Function, $intern_22, MutablePointers$lambda$0$Type);
_.apply_0 = function apply_605(arg0){
  return lambda$0_10(this.owner_0, this.writer_1, this.ipfs_2, arg0);
}
;
function MutablePointers$lambda$1$Type(pointerCas_0){
  this.pointerCas_0 = pointerCas_0;
}

defineClass(1476, $wnd.Function, $intern_22, MutablePointers$lambda$1$Type);
_.apply_0 = function apply_606(arg0){
  return lambda$1_4(this.pointerCas_0, arg0);
}
;
function MutablePointers$lambda$2$Type(pointerCas_0){
  this.pointerCas_0 = pointerCas_0;
}

defineClass(1477, $wnd.Function, $intern_22, MutablePointers$lambda$2$Type);
_.apply_0 = function apply_607(arg0){
  return lambda$2_6(this.pointerCas_0, arg0);
}
;
function $lambda$0_14(this$static, owner_1, writer_2, writerSignedBtreeRootHash_3, res_3){
  (checkCriticalNotNull(res_3) , res_3) && $put_22(this$static.cache_0, owner_1, writer_2, writerSignedBtreeRootHash_3);
  return res_3;
}

function $lambda$1_9(this$static, owner_1, writer_2){
  if (this$static.online.testedState.value_0)
    return $thenApply(this$static.target.getPointer(owner_1, writer_2), makeLambdaFunction(OfflinePointerCache$lambda$3$Type.prototype.apply_0, OfflinePointerCache$lambda$3$Type, [this$static, owner_1, writer_2]));
  $updateAsync(this$static.online);
  return $get_22(this$static.cache_0, owner_1, writer_2);
}

function $lambda$2_6(this$static, owner_1, writer_2, t_2){
  if ($isOfflineException(this$static.online, t_2))
    return $get_22(this$static.cache_0, owner_1, writer_2);
  return errored(t_2);
}

function $lambda$3_6(this$static, owner_1, writer_2, res_2){
  $ifPresent(res_2, new OfflinePointerCache$lambda$4$Type(this$static, owner_1, writer_2));
  return res_2;
}

function $lambda$4_6(this$static, owner_1, writer_2, p_2){
  return $put_22(this$static.cache_0, owner_1, writer_2, p_2);
}

function $setPointer_4(this$static, owner, writer, writerSignedBtreeRootHash){
  return $thenApply(this$static.target.setPointer_0(owner, writer, writerSignedBtreeRootHash), makeLambdaFunction(OfflinePointerCache$lambda$0$Type.prototype.apply_0, OfflinePointerCache$lambda$0$Type, [this$static, owner, writer, writerSignedBtreeRootHash]));
}

function OfflinePointerCache(target, cache, online){
  this.target = target;
  this.cache_0 = cache;
  this.online = online;
}

defineClass(500, 1, {}, OfflinePointerCache);
_.getPointerTarget = function getPointerTarget_3(owner, writer, ipfs){
  return $thenCompose(asyncExceptionally(new OfflinePointerCache$lambda$1$Type(this, owner, writer), makeLambdaFunction(OfflinePointerCache$lambda$2$Type.prototype.apply_0, OfflinePointerCache$lambda$2$Type, [this, owner, writer])), makeLambdaFunction(MutablePointers$lambda$0$Type.prototype.apply_0, MutablePointers$lambda$0$Type, [owner, writer, ipfs]));
}
;
_.setPointer = function setPointer_7(owner, writer, casUpdate){
  var signed;
  return signed = $signMessage(writer.secret, $toByteArray_2($toCbor_51(casUpdate))) , $setPointer_4(this, owner, writer.publicKeyHash, signed);
}
;
_.clearCache = function clearCache_3(){
  return new OfflinePointerCache(this.target.clearCache(), this.cache_0, this.online);
}
;
_.getPointer = function getPointer_3(owner, writer){
  return asyncExceptionally(new OfflinePointerCache$lambda$1$Type(this, owner, writer), makeLambdaFunction(OfflinePointerCache$lambda$2$Type.prototype.apply_0, OfflinePointerCache$lambda$2$Type, [this, owner, writer]));
}
;
_.setPointer_0 = function setPointer_8(owner, writer, writerSignedBtreeRootHash){
  return $setPointer_4(this, owner, writer, writerSignedBtreeRootHash);
}
;
var Lpeergos_shared_mutable_OfflinePointerCache_2_classLit = createForClass('peergos.shared.mutable', 'OfflinePointerCache', 500);
function OfflinePointerCache$lambda$0$Type($$outer_0, owner_1, writer_2, writerSignedBtreeRootHash_3){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.writerSignedBtreeRootHash_3 = writerSignedBtreeRootHash_3;
}

defineClass(3191, $wnd.Function, $intern_22, OfflinePointerCache$lambda$0$Type);
_.apply_0 = function apply_608(arg0){
  return $lambda$0_14(this.$$outer_0, this.owner_1, this.writer_2, this.writerSignedBtreeRootHash_3, arg0);
}
;
function OfflinePointerCache$lambda$1$Type($$outer_0, owner_1, writer_2){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
}

defineClass(501, 1, {}, OfflinePointerCache$lambda$1$Type);
_.get_0 = function get_44(){
  return $lambda$1_9(this.$$outer_0, this.owner_1, this.writer_2);
}
;
var Lpeergos_shared_mutable_OfflinePointerCache$lambda$1$Type_2_classLit = createForClass('peergos.shared.mutable', 'OfflinePointerCache/lambda$1$Type', 501);
function OfflinePointerCache$lambda$2$Type($$outer_0, owner_1, writer_2){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
}

defineClass(1321, $wnd.Function, $intern_22, OfflinePointerCache$lambda$2$Type);
_.apply_0 = function apply_609(arg0){
  return $lambda$2_6(this.$$outer_0, this.owner_1, this.writer_2, arg0);
}
;
function OfflinePointerCache$lambda$3$Type($$outer_0, owner_1, writer_2){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
}

defineClass(3192, $wnd.Function, $intern_22, OfflinePointerCache$lambda$3$Type);
_.apply_0 = function apply_610(arg0){
  return $lambda$3_6(this.$$outer_0, this.owner_1, this.writer_2, arg0);
}
;
function OfflinePointerCache$lambda$4$Type($$outer_0, owner_1, writer_2){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
}

defineClass(1002, 1, $intern_32, OfflinePointerCache$lambda$4$Type);
_.accept = function accept_64(arg0){
  $lambda$4_6(this.$$outer_0, this.owner_1, this.writer_2, arg0);
}
;
_.andThen = function andThen_28(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_mutable_OfflinePointerCache$lambda$4$Type_2_classLit = createForClass('peergos.shared.mutable', 'OfflinePointerCache/lambda$4$Type', 1002);
function $doUpdate(current, update, signer){
  var currentSeq, currentVal, newVal;
  if (current.ref != null && equals_16((checkCriticalElement(current.ref != null) , castTo(current.ref, 11)), update))
    return false;
  currentVal = $map($map($map(current, makeLambdaFunction(PointerCache$0methodref$unsignMessage$Type.prototype.apply_0, PointerCache$0methodref$unsignMessage$Type, [signer])), makeLambdaFunction(PointerCache$1methodref$fromByteArray$Type.prototype.apply_0, PointerCache$1methodref$fromByteArray$Type, [])), makeLambdaFunction(PointerCache$2methodref$fromCbor$Type.prototype.apply_0, PointerCache$2methodref$fromCbor$Type, []));
  newVal = fromCbor_63(fromByteArray($unsignMessage(signer, update)));
  if (currentVal.ref != null && (checkCriticalElement(currentVal.ref != null) , castTo(currentVal.ref, 111)).sequence.ref != null) {
    currentSeq = castTo($get_6((checkCriticalElement(currentVal.ref != null) , castTo(currentVal.ref, 111)).sequence), 69).value_0;
    if (newVal.sequence.ref == null || lt(castTo($get_6(newVal.sequence), 69).value_0, currentSeq))
      throw toJs(new IllegalStateException_0('Invalid pointer update! Sequence number must increase.'));
  }
  return true;
}

function PointerCache$0methodref$unsignMessage$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3196, $wnd.Function, $intern_22, PointerCache$0methodref$unsignMessage$Type);
_.apply_0 = function apply_611(arg0){
  return $unsignMessage(this.$$outer_0, castTo(arg0, 11));
}
;
function PointerCache$1methodref$fromByteArray$Type(){
}

defineClass(3197, $wnd.Function, $intern_22, PointerCache$1methodref$fromByteArray$Type);
_.apply_0 = function apply_612(arg0){
  return fromByteArray(castTo(arg0, 11));
}
;
function PointerCache$2methodref$fromCbor$Type(){
}

defineClass(3198, $wnd.Function, $intern_22, PointerCache$2methodref$fromCbor$Type);
_.apply_0 = function apply_613(arg0){
  return fromCbor_63(castTo(arg0, 48));
}
;
function $toCbor_51(this$static){
  if (this$static.sequence.ref != null)
    return new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [$toCbor(this$static.original), $toCbor(this$static.updated), new CborObject$CborLong(castTo($get_6(this$static.sequence), 69).value_0)])));
  return new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [$toCbor(this$static.original), $toCbor(this$static.updated)])));
}

function PointerUpdate(original, updated, sequence){
  if (original == updated || !!original && $equals_7(original, updated))
    throw toJs(new IllegalStateException_0('Tried to create a CAS pair with original == target!'));
  this.original = original;
  this.updated = updated;
  this.sequence = sequence;
}

function fromCbor_63(cbor){
  var value_0;
  if (!instanceOf(cbor, 21))
    throw toJs(new IllegalStateException_0('Incorrect cbor for HashCasPair: ' + cbor));
  value_0 = castTo(cbor, 21).value_0;
  return new PointerUpdate(fromCbor_0(castTo(value_0.getAtIndex(0), 7)), fromCbor_0(castTo(value_0.getAtIndex(1), 7)), value_0.size() < 3?($clinit_Optional() , $clinit_Optional() , EMPTY):($clinit_Optional() , new Optional(checkCriticalNotNull(valueOf_2(castTo(value_0.getAtIndex(2), 29).value_0)))));
}

defineClass(111, 1, {7:1, 111:1}, PointerUpdate);
_.serialize = function serialize_79(){
  return $toByteArray_2($toCbor_51(this));
}
;
_.toCbor = function toCbor_77(){
  return $toCbor_51(this);
}
;
_.toString_0 = function toString_71(){
  return $orElse(this.sequence, valueOf_2(0)) + '(' + $toString_7(this.original) + ', ' + $toString_7(this.updated) + ')';
}
;
var Lpeergos_shared_mutable_PointerUpdate_2_classLit = createForClass('peergos.shared.mutable', 'PointerUpdate', 111);
function PointerUpdate$lambda$0$Type(){
}

defineClass(377, $wnd.Function, $intern_22, PointerUpdate$lambda$0$Type);
_.apply_0 = function apply_614(arg0){
  return $clinit_Optional() , new Optional(checkCriticalNotNull(valueOf_2(add_1(castTo(arg0, 69).value_0, 1))));
}
;
function $lambda$0_15(this$static, owner_1, writer_2, writerSignedBtreeRootHash_3){
  return this$static.local.setPointer_0(owner_1, writer_2, writerSignedBtreeRootHash_3);
}

function $lambda$1_10(this$static, owner_1, writer_2, writerSignedBtreeRootHash_3, target_3){
  return $setPointer_3(this$static.p2p, target_3, owner_1, writer_2, writerSignedBtreeRootHash_3);
}

function $lambda$2_7(this$static, owner_1, writer_2){
  return this$static.local.getPointer(owner_1, writer_2);
}

function $lambda$3_7(this$static, owner_1, writer_2, target_2){
  return $getPointer_2(this$static.p2p, target_2, owner_1, writer_2);
}

function $setPointer_5(this$static, owner, writer, writerSignedBtreeRootHash){
  var lastArg;
  return redirectCall(this$static.core, (lastArg = owner , new ProxyingMutablePointers$lambda$0$Type(this$static, owner, writer, writerSignedBtreeRootHash) , makeLambdaFunction(ProxyingMutablePointers$lambda$1$Type.prototype.apply_0, ProxyingMutablePointers$lambda$1$Type, [this$static, owner, writer, writerSignedBtreeRootHash]) , lastArg));
}

function ProxyingMutablePointers(serverId, core, local, p2p){
  this.serverId = serverId;
  this.core = core;
  this.local = local;
  this.p2p = p2p;
}

defineClass(504, 1, {}, ProxyingMutablePointers);
_.getPointerTarget = function getPointerTarget_4(owner, writer, ipfs){
  var lastArg;
  return redirectCall(this.core, (lastArg = owner , new ProxyingMutablePointers$lambda$2$Type(this, owner, writer) , makeLambdaFunction(ProxyingMutablePointers$lambda$3$Type.prototype.apply_0, ProxyingMutablePointers$lambda$3$Type, [this, owner, writer]) , lastArg)).$_nullMethod(makeLambdaFunction(MutablePointers$lambda$0$Type.prototype.apply_0, MutablePointers$lambda$0$Type, [owner, writer, ipfs]));
}
;
_.setPointer = function setPointer_9(owner, writer, casUpdate){
  var signed;
  return signed = $signMessage(writer.secret, $toByteArray_2($toCbor_51(casUpdate))) , $setPointer_5(this, owner, writer.publicKeyHash, signed);
}
;
_.clearCache = function clearCache_4(){
  return new ProxyingMutablePointers(this.serverId, this.core, this.local.clearCache(), this.p2p);
}
;
_.getPointer = function getPointer_4(owner, writer){
  var lastArg;
  return redirectCall(this.core, (lastArg = owner , new ProxyingMutablePointers$lambda$2$Type(this, owner, writer) , makeLambdaFunction(ProxyingMutablePointers$lambda$3$Type.prototype.apply_0, ProxyingMutablePointers$lambda$3$Type, [this, owner, writer]) , lastArg));
}
;
_.setPointer_0 = function setPointer_10(owner, writer, writerSignedBtreeRootHash){
  return $setPointer_5(this, owner, writer, writerSignedBtreeRootHash);
}
;
var Lpeergos_shared_mutable_ProxyingMutablePointers_2_classLit = createForClass('peergos.shared.mutable', 'ProxyingMutablePointers', 504);
function ProxyingMutablePointers$lambda$0$Type($$outer_0, owner_1, writer_2, writerSignedBtreeRootHash_3){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.writerSignedBtreeRootHash_3 = writerSignedBtreeRootHash_3;
}

defineClass(1012, 1, {}, ProxyingMutablePointers$lambda$0$Type);
_.get_0 = function get_45(){
  return $lambda$0_15(this.$$outer_0, this.owner_1, this.writer_2, this.writerSignedBtreeRootHash_3);
}
;
var Lpeergos_shared_mutable_ProxyingMutablePointers$lambda$0$Type_2_classLit = createForClass('peergos.shared.mutable', 'ProxyingMutablePointers/lambda$0$Type', 1012);
function ProxyingMutablePointers$lambda$1$Type($$outer_0, owner_1, writer_2, writerSignedBtreeRootHash_3){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.writerSignedBtreeRootHash_3 = writerSignedBtreeRootHash_3;
}

defineClass(3223, $wnd.Function, $intern_22, ProxyingMutablePointers$lambda$1$Type);
_.apply_0 = function apply_615(arg0){
  return $lambda$1_10(this.$$outer_0, this.owner_1, this.writer_2, this.writerSignedBtreeRootHash_3, arg0);
}
;
function ProxyingMutablePointers$lambda$2$Type($$outer_0, owner_1, writer_2){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
}

defineClass(505, 1, {}, ProxyingMutablePointers$lambda$2$Type);
_.get_0 = function get_46(){
  return $lambda$2_7(this.$$outer_0, this.owner_1, this.writer_2);
}
;
var Lpeergos_shared_mutable_ProxyingMutablePointers$lambda$2$Type_2_classLit = createForClass('peergos.shared.mutable', 'ProxyingMutablePointers/lambda$2$Type', 505);
function ProxyingMutablePointers$lambda$3$Type($$outer_0, owner_1, writer_2){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
}

defineClass(1326, $wnd.Function, $intern_22, ProxyingMutablePointers$lambda$3$Type);
_.apply_0 = function apply_616(arg0){
  return $lambda$3_7(this.$$outer_0, this.owner_1, this.writer_2, arg0);
}
;
function $getPointer_3(this$static, owner, writer){
  return $recurse(this$static, 3, new RetryMutablePointers$lambda$7$Type(this$static, owner, writer));
}

function $lambda$2_8(this$static, retriesLeft_1, f_2, res_3, e_3){
  retriesLeft_1 == 1?$completeExceptionally(res_3, e_3):instanceOf(e_3, 391)?$completeExceptionally(res_3, e_3):instanceOf(e_3, 312)?$completeExceptionally(res_3, e_3):$retryAfter(this$static, new RetryMutablePointers$lambda$3$Type(this$static, retriesLeft_1, f_2, res_3), (4 - retriesLeft_1) * $intern_49 + $nextInt(this$static.random_0, 500));
  return null;
}

function $lambda$3_8(this$static, retriesLeft_1, f_2, res_3){
  return $exceptionally($thenAccept($recurse(this$static, retriesLeft_1 - 1, f_2), new RetryMutablePointers$2methodref$complete$Type(res_3)), makeLambdaFunction(RetryMutablePointers$lambda$5$Type.prototype.apply_0, RetryMutablePointers$lambda$5$Type, [res_3]));
}

function $lambda$6_6(this$static, owner_1, writer_2, writerSignedBtreeRootHash_3){
  return this$static.target.setPointer_0(owner_1, writer_2, writerSignedBtreeRootHash_3);
}

function $lambda$7_3(this$static, owner_1, writer_2){
  return this$static.target.getPointer(owner_1, writer_2);
}

function $recurse(this$static, retriesLeft, f){
  var res, t;
  res = new CompletableFuture;
  try {
    $exceptionally($thenAccept(castTo(f.get_0(), 6), new RetryMutablePointers$1methodref$complete$Type(res)), makeLambdaFunction(RetryMutablePointers$lambda$2$Type.prototype.apply_0, RetryMutablePointers$lambda$2$Type, [this$static, retriesLeft, f, res]));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 33)) {
      t = $e0;
      $completeExceptionally(res, t);
    }
     else 
      throw toJs($e0);
  }
  return res;
}

function $retryAfter(this$static, method, milliseconds){
  $schedule(this$static.executor, new RetryMutablePointers$0methodref$get$Type(method), milliseconds, ($clinit_TimeUnit() , MILLISECONDS));
}

function $setPointer_6(this$static, owner, writer, writerSignedBtreeRootHash){
  return $recurse(this$static, 3, new RetryMutablePointers$lambda$6$Type(this$static, owner, writer, writerSignedBtreeRootHash));
}

function RetryMutablePointers(target){
  this.random_0 = new Random_0;
  this.executor = new ScheduledThreadPoolExecutor;
  this.target = target;
}

defineClass(418, 1, {}, RetryMutablePointers);
_.getPointerTarget = function getPointerTarget_5(owner, writer, ipfs){
  return $thenCompose($recurse(this, 3, new RetryMutablePointers$lambda$7$Type(this, owner, writer)), makeLambdaFunction(MutablePointers$lambda$0$Type.prototype.apply_0, MutablePointers$lambda$0$Type, [owner, writer, ipfs]));
}
;
_.setPointer = function setPointer_11(owner, writer, casUpdate){
  var signed;
  return signed = $signMessage(writer.secret, $toByteArray_2($toCbor_51(casUpdate))) , $setPointer_6(this, owner, writer.publicKeyHash, signed);
}
;
_.clearCache = function clearCache_5(){
  return new RetryMutablePointers(this.target.clearCache());
}
;
_.getPointer = function getPointer_5(owner, writer){
  return $getPointer_3(this, owner, writer);
}
;
_.setPointer_0 = function setPointer_12(owner, writer, writerSignedBtreeRootHash){
  return $setPointer_6(this, owner, writer, writerSignedBtreeRootHash);
}
;
var Lpeergos_shared_mutable_RetryMutablePointers_2_classLit = createForClass('peergos.shared.mutable', 'RetryMutablePointers', 418);
function RetryMutablePointers$0methodref$get$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(955, 1, {}, RetryMutablePointers$0methodref$get$Type);
_.call_0 = function call_1(){
  return $get_17(this.$$outer_0);
}
;
var Lpeergos_shared_mutable_RetryMutablePointers$0methodref$get$Type_2_classLit = createForClass('peergos.shared.mutable', 'RetryMutablePointers/0methodref$get$Type', 955);
function RetryMutablePointers$1methodref$complete$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(956, 1, $intern_32, RetryMutablePointers$1methodref$complete$Type);
_.accept = function accept_65(arg0){
  $complete(this.$$outer_0, arg0);
}
;
_.andThen = function andThen_29(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_mutable_RetryMutablePointers$1methodref$complete$Type_2_classLit = createForClass('peergos.shared.mutable', 'RetryMutablePointers/1methodref$complete$Type', 956);
function RetryMutablePointers$2methodref$complete$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(957, 1, $intern_32, RetryMutablePointers$2methodref$complete$Type);
_.accept = function accept_66(arg0){
  $complete(this.$$outer_0, arg0);
}
;
_.andThen = function andThen_30(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_mutable_RetryMutablePointers$2methodref$complete$Type_2_classLit = createForClass('peergos.shared.mutable', 'RetryMutablePointers/2methodref$complete$Type', 957);
function RetryMutablePointers$lambda$2$Type($$outer_0, retriesLeft_1, f_2, res_3){
  this.$$outer_0 = $$outer_0;
  this.retriesLeft_1 = retriesLeft_1;
  this.f_2 = f_2;
  this.res_3 = res_3;
}

defineClass(3086, $wnd.Function, $intern_22, RetryMutablePointers$lambda$2$Type);
_.apply_0 = function apply_617(arg0){
  return $lambda$2_8(this.$$outer_0, this.retriesLeft_1, this.f_2, this.res_3, arg0);
}
;
_.retriesLeft_1 = 0;
function $get_17(this$static){
  return $lambda$3_8(this$static.$$outer_0, this$static.retriesLeft_1, this$static.f_2, this$static.res_3);
}

function RetryMutablePointers$lambda$3$Type($$outer_0, retriesLeft_1, f_2, res_3){
  this.$$outer_0 = $$outer_0;
  this.retriesLeft_1 = retriesLeft_1;
  this.f_2 = f_2;
  this.res_3 = res_3;
}

defineClass(958, 1, {}, RetryMutablePointers$lambda$3$Type);
_.get_0 = function get_47(){
  return $get_17(this);
}
;
_.retriesLeft_1 = 0;
var Lpeergos_shared_mutable_RetryMutablePointers$lambda$3$Type_2_classLit = createForClass('peergos.shared.mutable', 'RetryMutablePointers/lambda$3$Type', 958);
function RetryMutablePointers$lambda$5$Type(res_0){
  this.res_0 = res_0;
}

defineClass(3087, $wnd.Function, $intern_22, RetryMutablePointers$lambda$5$Type);
_.apply_0 = function apply_618(arg0){
  return $completeExceptionally(this.res_0, castTo(arg0, 33)) , null;
}
;
function RetryMutablePointers$lambda$6$Type($$outer_0, owner_1, writer_2, writerSignedBtreeRootHash_3){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.writerSignedBtreeRootHash_3 = writerSignedBtreeRootHash_3;
}

defineClass(959, 1, {}, RetryMutablePointers$lambda$6$Type);
_.get_0 = function get_48(){
  return $lambda$6_6(this.$$outer_0, this.owner_1, this.writer_2, this.writerSignedBtreeRootHash_3);
}
;
var Lpeergos_shared_mutable_RetryMutablePointers$lambda$6$Type_2_classLit = createForClass('peergos.shared.mutable', 'RetryMutablePointers/lambda$6$Type', 959);
function RetryMutablePointers$lambda$7$Type($$outer_0, owner_1, writer_2){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
}

defineClass(491, 1, {}, RetryMutablePointers$lambda$7$Type);
_.get_0 = function get_49(){
  return $lambda$7_3(this.$$outer_0, this.owner_1, this.writer_2);
}
;
var Lpeergos_shared_mutable_RetryMutablePointers$lambda$7$Type_2_classLit = createForClass('peergos.shared.mutable', 'RetryMutablePointers/lambda$7$Type', 491);
function $toCbor_52(this$static){
  var result, transformed;
  result = new TreeMap;
  $put_6(result, 'k', $toCbor_11(this$static.dummySource));
  $put_6(result, 'f', new CborObject$CborByteArray(this$static.followRequest.cipherText.cipherText));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(result), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function BlindFollowRequest(dummySource, followRequest){
  this.dummySource = dummySource;
  this.followRequest = followRequest;
}

function build_12(targetBoxer, request, random, boxer){
  var tmp;
  tmp = random_2(random, boxer);
  return new BlindFollowRequest(tmp.publicBoxingKey, build_5(tmp.secretBoxingKey, targetBoxer, request));
}

function fromCbor_64(cbor){
  var dummysource, followRequest;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor for BlindFollowRequest: ' + cbor));
  dummysource = fromCbor_15($get_12(castTo(cbor, 18), 'k'));
  followRequest = new PaddedAsymmetricCipherText(fromCbor_7($get_12(castTo(cbor, 18), 'f')));
  return new BlindFollowRequest(dummysource, followRequest);
}

defineClass(470, 1, $intern_67, BlindFollowRequest);
_.serialize = function serialize_80(){
  return $toByteArray_2($toCbor_52(this));
}
;
_.toCbor = function toCbor_78(){
  return $toCbor_52(this);
}
;
var Lpeergos_shared_social_BlindFollowRequest_2_classLit = createForClass('peergos.shared.social', 'BlindFollowRequest', 470);
function $toCbor_53(this$static){
  var result, transformed;
  result = new TreeMap;
  $ifPresent(this$static.entry, new FollowRequest$lambda$0$Type(result));
  $ifPresent(this$static.key, new FollowRequest$lambda$1$Type(result));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(result), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function FollowRequest(entry, key){
  this.entry = entry;
  this.key = key;
}

function fromCbor_65(cbor){
  var entryPoint, key;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor for FollowRequest: ' + cbor));
  entryPoint = $map(ofNullable($get_12(castTo(cbor, 18), 'e')), makeLambdaFunction(FollowRequest$0methodref$fromCbor$Type.prototype.apply_0, FollowRequest$0methodref$fromCbor$Type, []));
  key = $map(ofNullable($get_12(castTo(cbor, 18), 'k')), makeLambdaFunction(FollowRequest$1methodref$fromCbor$Type.prototype.apply_0, FollowRequest$1methodref$fromCbor$Type, []));
  return new FollowRequest(entryPoint, key);
}

defineClass(244, 1, {7:1, 244:1}, FollowRequest);
_.serialize = function serialize_81(){
  return $toByteArray_2($toCbor_53(this));
}
;
_.isAccepted = function isAccepted(){
  return this.entry.ref != null;
}
;
_.isReciprocated = function isReciprocated(){
  return this.key.ref != null;
}
;
_.toCbor = function toCbor_79(){
  return $toCbor_53(this);
}
;
_.toString = function toString_72(){
  return this.entry + ' - ' + (this.key.ref != null);
}
;
_.toString_0 = function(){
  return this.toString();
}
;
var Lpeergos_shared_social_FollowRequest_2_classLit = createForClass('peergos.shared.social', 'FollowRequest', 244);
function FollowRequest$0methodref$fromCbor$Type(){
}

defineClass(2524, $wnd.Function, $intern_22, FollowRequest$0methodref$fromCbor$Type);
_.apply_0 = function apply_619(arg0){
  return fromCbor_80(castTo(arg0, 7));
}
;
function FollowRequest$1methodref$fromCbor$Type(){
}

defineClass(2525, $wnd.Function, $intern_22, FollowRequest$1methodref$fromCbor$Type);
_.apply_0 = function apply_620(arg0){
  return fromCbor_24(castTo(arg0, 7));
}
;
function FollowRequest$lambda$0$Type(result_0){
  this.result_0 = result_0;
}

defineClass(835, 1, $intern_32, FollowRequest$lambda$0$Type);
_.accept = function accept_67(arg0){
  $put_6(this.result_0, 'e', $toCbor_70(castTo(arg0, 60)));
}
;
_.andThen = function andThen_31(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_social_FollowRequest$lambda$0$Type_2_classLit = createForClass('peergos.shared.social', 'FollowRequest/lambda$0$Type', 835);
function FollowRequest$lambda$1$Type(result_0){
  this.result_0 = result_0;
}

defineClass(836, 1, $intern_32, FollowRequest$lambda$1$Type);
_.accept = function accept_68(arg0){
  $put_6(this.result_0, 'k', $toCbor_15(castTo(arg0, 161)));
}
;
_.andThen = function andThen_32(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_social_FollowRequest$lambda$1$Type_2_classLit = createForClass('peergos.shared.social', 'FollowRequest/lambda$1$Type', 836);
function FollowRequestWithCipherText(req, cipher){
  this.req = req;
  this.cipher = cipher;
}

defineClass(344, 1, {344:1}, FollowRequestWithCipherText);
_.getEntry = function getEntry(){
  return castTo($get_6(this.req.entry), 60);
}
;
var Lpeergos_shared_social_FollowRequestWithCipherText_2_classLit = createForClass('peergos.shared.social', 'FollowRequestWithCipherText', 344);
function $clinit_HttpSocialNetwork(){
  $clinit_HttpSocialNetwork = emptyMethod;
  LOG_2 = ($clinit_Logger() , getLogger());
}

function $getFollowRequests(urlPrefix, poster, owner, signedTime){
  return $thenApply($get_28(poster, urlPrefix + 'peergos/v0/social/' + 'getFollowRequests?owner=' + encode_8(owner.target.toString()) + '&auth=' + bytesToHex(signedTime), ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)), makeLambdaFunction(HttpSocialNetwork$lambda$1$Type.prototype.apply_0, HttpSocialNetwork$lambda$1$Type, []));
}

function $getFollowRequests_0(this$static, owner, signedTime){
  return $getFollowRequests('', this$static.direct, owner, signedTime);
}

function $getFollowRequests_1(this$static, targetServerId, owner, signedTime){
  return $getFollowRequests('/p2p/' + targetServerId.toString() + '/http' + '/', this$static.p2p, owner, signedTime);
}

function $removeFollowRequest(urlPrefix, poster, owner, signedRequest){
  return $thenApply($postUnzip(poster, urlPrefix + 'peergos/v0/social/' + 'removeFollowRequest?owner=' + encode_8(owner.target.toString()), signedRequest), makeLambdaFunction(HttpSocialNetwork$lambda$2$Type.prototype.apply_0, HttpSocialNetwork$lambda$2$Type, []));
}

function $removeFollowRequest_0(this$static, owner, signedRequest){
  return $removeFollowRequest('', this$static.direct, owner, signedRequest);
}

function $removeFollowRequest_1(this$static, targetServerId, owner, data_0){
  return $removeFollowRequest('/p2p/' + targetServerId.toString() + '/http' + '/', this$static.p2p, owner, data_0);
}

function $sendFollowRequest(urlPrefix, poster, target, encryptedPermission){
  return $thenApply($postUnzip(poster, urlPrefix + 'peergos/v0/social/' + 'followRequest?owner=' + encode_8(target.target.toString()), encryptedPermission), makeLambdaFunction(HttpSocialNetwork$lambda$0$Type.prototype.apply_0, HttpSocialNetwork$lambda$0$Type, []));
}

function $sendFollowRequest_0(this$static, target, encryptedPermission){
  return $sendFollowRequest('', this$static.direct, target, encryptedPermission);
}

function $sendFollowRequest_1(this$static, targetServerId, target, encryptedPermission){
  return $sendFollowRequest('/p2p/' + targetServerId.toString() + '/http' + '/', this$static.p2p, target, encryptedPermission);
}

function HttpSocialNetwork(direct, p2p){
  $clinit_HttpSocialNetwork();
  $info(LOG_2, 'Creating HTTP SocialNetwork API at ' + direct + ' and ' + p2p);
  this.direct = direct;
  this.p2p = p2p;
}

function encode_8(component){
  var e;
  try {
    return encode_1(component);
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 136)) {
      e = $e0;
      throw toJs(new RuntimeException_2(e));
    }
     else 
      throw toJs($e0);
  }
}

function lambda$0_11(res_0){
  $clinit_HttpSocialNetwork();
  var din, e;
  din = new DataInputStream(new ByteArrayInputStream(res_0));
  try {
    return $clinit_Boolean() , $readByte(din) != 0?true:false;
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 62)) {
      e = $e0;
      throw toJs(new RuntimeException_2(e));
    }
     else 
      throw toJs($e0);
  }
}

function lambda$1_5(res_0){
  $clinit_HttpSocialNetwork();
  var din, e;
  din = new DataInputStream(new ByteArrayInputStream(res_0));
  try {
    return deserializeByteArray(din, $intern_11);
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 62)) {
      e = $e0;
      throw toJs(new RuntimeException_2(e));
    }
     else 
      throw toJs($e0);
  }
}

function lambda$2_7(res_0){
  $clinit_HttpSocialNetwork();
  var din, e;
  din = new DataInputStream(new ByteArrayInputStream(res_0));
  try {
    return $clinit_Boolean() , $readByte(din) != 0?true:false;
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 62)) {
      e = $e0;
      throw toJs(new RuntimeException_2(e));
    }
     else 
      throw toJs($e0);
  }
}

defineClass(496, 1, {}, HttpSocialNetwork);
_.getFollowRequests = function getFollowRequests(owner, signedTime){
  return $getFollowRequests_0(this, owner, signedTime);
}
;
_.removeFollowRequest = function removeFollowRequest(owner, signedRequest){
  return $removeFollowRequest_0(this, owner, signedRequest);
}
;
_.sendFollowRequest = function sendFollowRequest(target, encryptedPermission){
  return $sendFollowRequest_0(this, target, encryptedPermission);
}
;
var LOG_2;
var Lpeergos_shared_social_HttpSocialNetwork_2_classLit = createForClass('peergos.shared.social', 'HttpSocialNetwork', 496);
function HttpSocialNetwork$lambda$0$Type(){
}

defineClass(3121, $wnd.Function, $intern_22, HttpSocialNetwork$lambda$0$Type);
_.apply_0 = function apply_621(arg0){
  return lambda$0_11(arg0);
}
;
function HttpSocialNetwork$lambda$1$Type(){
}

defineClass(3122, $wnd.Function, $intern_22, HttpSocialNetwork$lambda$1$Type);
_.apply_0 = function apply_622(arg0){
  return lambda$1_5(arg0);
}
;
function HttpSocialNetwork$lambda$2$Type(){
}

defineClass(3123, $wnd.Function, $intern_22, HttpSocialNetwork$lambda$2$Type);
_.apply_0 = function apply_623(arg0){
  return lambda$2_7(arg0);
}
;
function $add_4(this$static, diff){
  var current, e, e$iterator, gDiff, updated;
  if (neq(this$static.readCapBytes, diff.priorReadByteOffset))
    throw toJs(new IllegalStateException_0('Applying cap diff to wrong base'));
  if (neq(this$static.writeCapBytes, diff.priorWriteByteOffset))
    throw toJs(new IllegalStateException_0('Applying cap diff to wrong base'));
  updated = new HashMap_1(this$static.groups);
  for (e$iterator = diff.groupDiffs.entrySet_0().iterator(); e$iterator.hasNext_0();) {
    e = castTo(e$iterator.next_1(), 40);
    current = castTo(this$static.groups.get(e.getKey()), 163);
    gDiff = castTo(e.getValue(), 107);
    !current?$putStringValue(updated, castToString(e.getKey()), new ProcessedCaps(gDiff.newCaps.readCaps.retrievedCapabilities.size(), gDiff.newCaps.writeCaps.retrievedCapabilities.size(), add_1(gDiff.priorReadByteOffset, gDiff.newCaps.readCaps.bytesRead), add_1(gDiff.priorWriteByteOffset, gDiff.newCaps.writeCaps.bytesRead), ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP))):$putStringValue(updated, castToString(e.getKey()), $add_4(current, gDiff));
  }
  return new ProcessedCaps(this$static.readCaps + diff.newCaps.readCaps.retrievedCapabilities.size(), this$static.writeCaps + diff.newCaps.writeCaps.retrievedCapabilities.size(), add_1(diff.priorReadByteOffset, diff.newCaps.readCaps.bytesRead), add_1(diff.priorWriteByteOffset, diff.newCaps.writeCaps.bytesRead), updated);
}

function $createGroupDiff(this$static, name_0, diff){
  var empty, groups;
  groups = new HashMap;
  name_0 == null?$put_3(groups.hashCodeMap, null, diff):$put_4(groups.stringMap, name_0, diff);
  return new CapsDiff(this$static.readCapBytes, this$static.writeCapBytes, (empty = new CapabilitiesFromUser(0, ($clinit_Collections() , $clinit_Collections() , EMPTY_LIST)) , new CapsDiff$ReadAndWriteCaps(empty, empty)), groups);
}

function $toCbor_54(this$static){
  var e, e$iterator, groups, state, transformed, transformed0;
  state = new TreeMap;
  $put_6(state, 'rc', new CborObject$CborLong(this$static.readCaps));
  $put_6(state, 'wc', new CborObject$CborLong(this$static.writeCaps));
  $put_6(state, 'rb', new CborObject$CborLong(this$static.readCapBytes));
  $put_6(state, 'wb', new CborObject$CborLong(this$static.writeCapBytes));
  groups = new TreeMap;
  for (e$iterator = this$static.groups.entrySet_0().iterator(); e$iterator.hasNext_0();) {
    e = castTo(e$iterator.next_1(), 40);
    $put_6(groups, castToString(e.getKey()), $toCbor_54(castTo(e.getValue(), 163)));
  }
  $put_6(state, 'g', (transformed0 = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(groups), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed0)));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function ProcessedCaps(readCaps, writeCaps, readCapBytes, writeCapBytes, groups){
  this.readCaps = readCaps;
  this.writeCaps = writeCaps;
  this.readCapBytes = readCapBytes;
  this.writeCapBytes = writeCapBytes;
  this.groups = groups;
}

function fromCbor_66(cbor){
  var groups, m, readCapBytes, readCaps, writeCapBytes, writeCaps;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor! ' + cbor));
  m = castTo(cbor, 18);
  readCaps = toInt_0(castTo(castTo($get_0(m.values_0, new CborObject$CborString('rc')), 7), 29).value_0);
  writeCaps = toInt_0(castTo(castTo($get_0(m.values_0, new CborObject$CborString('wc')), 7), 29).value_0);
  readCapBytes = castTo(castTo($get_0(m.values_0, new CborObject$CborString('rb')), 7), 29).value_0;
  writeCapBytes = castTo(castTo($get_0(m.values_0, new CborObject$CborString('wb')), 7), 29).value_0;
  groups = $getMap_0(m, makeLambdaFunction(ProcessedCaps$lambda$0$Type.prototype.apply_0, ProcessedCaps$lambda$0$Type, []), makeLambdaFunction(ProcessedCaps$0methodref$fromCbor$Type.prototype.apply_0, ProcessedCaps$0methodref$fromCbor$Type, []));
  return new ProcessedCaps(readCaps, writeCaps, readCapBytes, writeCapBytes, groups);
}

defineClass(163, 1, {7:1, 163:1}, ProcessedCaps);
_.serialize = function serialize_82(){
  return $toByteArray_2($toCbor_54(this));
}
;
_.toCbor = function toCbor_80(){
  return $toCbor_54(this);
}
;
_.readCapBytes = 0;
_.readCaps = 0;
_.writeCapBytes = 0;
_.writeCaps = 0;
var Lpeergos_shared_social_ProcessedCaps_2_classLit = createForClass('peergos.shared.social', 'ProcessedCaps', 163);
function ProcessedCaps$0methodref$fromCbor$Type(){
}

defineClass(3529, $wnd.Function, $intern_22, ProcessedCaps$0methodref$fromCbor$Type);
_.apply_0 = function apply_624(arg0){
  return fromCbor_66(castTo(arg0, 7));
}
;
function ProcessedCaps$lambda$0$Type(){
}

defineClass(3528, $wnd.Function, $intern_22, ProcessedCaps$lambda$0$Type);
_.apply_0 = function apply_625(arg0){
  return castTo(castTo(arg0, 7), 13).value_0;
}
;
function $lambda$0_16(this$static, targetUser_1, encryptedPermission_2){
  return $sendFollowRequest_0(this$static.local, targetUser_1, encryptedPermission_2);
}

function $lambda$1_11(this$static, targetUser_1, encryptedPermission_2, targetServer_2){
  return $sendFollowRequest_1(this$static.p2p, targetServer_2, targetUser_1, encryptedPermission_2);
}

function $lambda$2_9(this$static, owner_1, signedTime_2){
  return $getFollowRequests_0(this$static.local, owner_1, signedTime_2);
}

function $lambda$3_9(this$static, owner_1, signedTime_2, targetServer_2){
  return $getFollowRequests_1(this$static.p2p, targetServer_2, owner_1, signedTime_2);
}

function $lambda$4_7(this$static, owner_1, signedRequest_2){
  return $removeFollowRequest_0(this$static.local, owner_1, signedRequest_2);
}

function $lambda$5_6(this$static, owner_1, signedRequest_2, targetServer_2){
  return $removeFollowRequest_1(this$static.p2p, targetServer_2, owner_1, signedRequest_2);
}

function ProxyingSocialNetwork(core, local, p2p){
  this.core = core;
  this.local = local;
  this.p2p = p2p;
}

defineClass(1013, 1, {}, ProxyingSocialNetwork);
_.getFollowRequests = function getFollowRequests_0(owner, signedTime){
  var lastArg;
  return redirectCall(this.core, (lastArg = owner , new ProxyingSocialNetwork$lambda$2$Type(this, owner, signedTime) , makeLambdaFunction(ProxyingSocialNetwork$lambda$3$Type.prototype.apply_0, ProxyingSocialNetwork$lambda$3$Type, [this, owner, signedTime]) , lastArg));
}
;
_.removeFollowRequest = function removeFollowRequest_0(owner, signedRequest){
  var lastArg;
  return redirectCall(this.core, (lastArg = owner , new ProxyingSocialNetwork$lambda$4$Type(this, owner, signedRequest) , makeLambdaFunction(ProxyingSocialNetwork$lambda$5$Type.prototype.apply_0, ProxyingSocialNetwork$lambda$5$Type, [this, owner, signedRequest]) , lastArg));
}
;
_.sendFollowRequest = function sendFollowRequest_0(targetUser, encryptedPermission){
  var lastArg;
  return redirectCall(this.core, (lastArg = targetUser , new ProxyingSocialNetwork$lambda$0$Type(this, targetUser, encryptedPermission) , makeLambdaFunction(ProxyingSocialNetwork$lambda$1$Type.prototype.apply_0, ProxyingSocialNetwork$lambda$1$Type, [this, targetUser, encryptedPermission]) , lastArg));
}
;
var Lpeergos_shared_social_ProxyingSocialNetwork_2_classLit = createForClass('peergos.shared.social', 'ProxyingSocialNetwork', 1013);
function ProxyingSocialNetwork$lambda$0$Type($$outer_0, targetUser_1, encryptedPermission_2){
  this.$$outer_0 = $$outer_0;
  this.targetUser_1 = targetUser_1;
  this.encryptedPermission_2 = encryptedPermission_2;
}

defineClass(1014, 1, {}, ProxyingSocialNetwork$lambda$0$Type);
_.get_0 = function get_50(){
  return $lambda$0_16(this.$$outer_0, this.targetUser_1, this.encryptedPermission_2);
}
;
var Lpeergos_shared_social_ProxyingSocialNetwork$lambda$0$Type_2_classLit = createForClass('peergos.shared.social', 'ProxyingSocialNetwork/lambda$0$Type', 1014);
function ProxyingSocialNetwork$lambda$1$Type($$outer_0, targetUser_1, encryptedPermission_2){
  this.$$outer_0 = $$outer_0;
  this.targetUser_1 = targetUser_1;
  this.encryptedPermission_2 = encryptedPermission_2;
}

defineClass(3224, $wnd.Function, $intern_22, ProxyingSocialNetwork$lambda$1$Type);
_.apply_0 = function apply_626(arg0){
  return $lambda$1_11(this.$$outer_0, this.targetUser_1, this.encryptedPermission_2, arg0);
}
;
function ProxyingSocialNetwork$lambda$2$Type($$outer_0, owner_1, signedTime_2){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.signedTime_2 = signedTime_2;
}

defineClass(1015, 1, {}, ProxyingSocialNetwork$lambda$2$Type);
_.get_0 = function get_51(){
  return $lambda$2_9(this.$$outer_0, this.owner_1, this.signedTime_2);
}
;
var Lpeergos_shared_social_ProxyingSocialNetwork$lambda$2$Type_2_classLit = createForClass('peergos.shared.social', 'ProxyingSocialNetwork/lambda$2$Type', 1015);
function ProxyingSocialNetwork$lambda$3$Type($$outer_0, owner_1, signedTime_2){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.signedTime_2 = signedTime_2;
}

defineClass(3225, $wnd.Function, $intern_22, ProxyingSocialNetwork$lambda$3$Type);
_.apply_0 = function apply_627(arg0){
  return $lambda$3_9(this.$$outer_0, this.owner_1, this.signedTime_2, arg0);
}
;
function ProxyingSocialNetwork$lambda$4$Type($$outer_0, owner_1, signedRequest_2){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.signedRequest_2 = signedRequest_2;
}

defineClass(1016, 1, {}, ProxyingSocialNetwork$lambda$4$Type);
_.get_0 = function get_52(){
  return $lambda$4_7(this.$$outer_0, this.owner_1, this.signedRequest_2);
}
;
var Lpeergos_shared_social_ProxyingSocialNetwork$lambda$4$Type_2_classLit = createForClass('peergos.shared.social', 'ProxyingSocialNetwork/lambda$4$Type', 1016);
function ProxyingSocialNetwork$lambda$5$Type($$outer_0, owner_1, signedRequest_2){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.signedRequest_2 = signedRequest_2;
}

defineClass(3226, $wnd.Function, $intern_22, ProxyingSocialNetwork$lambda$5$Type);
_.apply_0 = function apply_628(arg0){
  return $lambda$5_6(this.$$outer_0, this.owner_1, this.signedRequest_2, arg0);
}
;
function $toCbor_55(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'c', this$static.cap);
  $put_6(state, 'o', new CborObject$CborString(this$static.owner));
  $put_6(state, 's', new CborObject$CborString(this$static.sharer));
  $put_6(state, 'p', new CborObject$CborString(this$static.path));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function SharedItem(cap, owner, sharer, path){
  this.cap = cap;
  this.owner = owner;
  this.sharer = sharer;
  this.path = path;
}

function fromCbor_67(cbor){
  var cap, m, owner, path, sharer;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor! ' + cbor));
  m = castTo(cbor, 18);
  cap = castTo($getObject(m, 'c', makeLambdaFunction(SharedItem$0methodref$fromCbor$Type.prototype.apply_0, SharedItem$0methodref$fromCbor$Type, [])), 71);
  owner = castTo(castTo($get_0(m.values_0, new CborObject$CborString('o')), 7), 13).value_0;
  sharer = castTo(castTo($get_0(m.values_0, new CborObject$CborString('s')), 7), 13).value_0;
  path = castTo(castTo($get_0(m.values_0, new CborObject$CborString('p')), 7), 13).value_0;
  return new SharedItem(cap, owner, sharer, path);
}

defineClass(168, 1, {7:1, 168:1}, SharedItem);
_.serialize = function serialize_83(){
  return $toByteArray_2($toCbor_55(this));
}
;
_.equals = function equals_82(o){
  var that;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_social_SharedItem_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 168);
  return equals_28(this.cap, that.cap) && this.owner == that.owner && this.sharer == that.sharer && this.path == that.path;
}
;
_.equals_0 = function(o){
  return this.equals(o);
}
;
_.hashCode = function hashCode_80(){
  return hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.cap, this.owner, this.sharer, this.path]));
}
;
_.hashCode_1 = function(){
  return this.hashCode();
}
;
_.toCbor = function toCbor_81(){
  return $toCbor_55(this);
}
;
_.toString = function toString_73(){
  return this.path + ' via ' + this.sharer;
}
;
_.toString_0 = function(){
  return this.toString();
}
;
var Lpeergos_shared_social_SharedItem_2_classLit = createForClass('peergos.shared.social', 'SharedItem', 168);
function SharedItem$0methodref$fromCbor$Type(){
}

defineClass(2602, $wnd.Function, $intern_22, SharedItem$0methodref$fromCbor$Type);
_.apply_0 = function apply_629(arg0){
  return fromCbor_99(castTo(arg0, 7));
}
;
function $addToFeed(this$static, v, newItems){
  if (newItems.isEmpty())
    return $thenApply($thenCompose($thenApply($getUpdated_0(this$static.dataDir, v, this$static.network), makeLambdaFunction(SocialFeed$lambda$85$Type.prototype.apply_0, SocialFeed$lambda$85$Type, [this$static])), makeLambdaFunction(SocialFeed$lambda$86$Type.prototype.apply_0, SocialFeed$lambda$86$Type, [this$static, v])), makeLambdaFunction(SocialFeed$lambda$71$Type.prototype.apply_0, SocialFeed$lambda$71$Type, [this$static]));
  return $thenCompose($thenCompose($getFiles(this$static.context, newItems), makeLambdaFunction(SocialFeed$9methodref$mergeCommentReferences$Type.prototype.apply_0, SocialFeed$9methodref$mergeCommentReferences$Type, [this$static])), makeLambdaFunction(SocialFeed$lambda$72$Type.prototype.apply_0, SocialFeed$lambda$72$Type, [this$static, newItems]));
}

function $appendToFeedAndCommitState(this$static, data_0, records){
  return $thenCompose($applyComplexUpdate(this$static.network.synchronizer, $owner(this$static.dataDir), $signingPair(this$static.dataDir), new SocialFeed$lambda$77$Type(this$static, data_0, records), new WriteSynchronizer$lambda$23$Type), makeLambdaFunction(SocialFeed$10methodref$setVersion$Type.prototype.apply_0, SocialFeed$10methodref$setVersion$Type, [this$static]));
}

function $getFriendUpdate(this$static, friend, s, c, network){
  var current;
  current = castTo($getOrDefault(this$static.currentCapBytesProcessed, friend.ownerName, new ProcessedCaps(0, 0, 0, 0, ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP))), 163);
  return $thenCompose($thenCompose($ensureFriendUptodate(friend.cache_0, friend.ownerName, friend.sharedDir, friend.groups, s, c, network), makeLambdaFunction(FriendSourcedTrieNode$lambda$3$Type.prototype.apply_0, FriendSourcedTrieNode$lambda$3$Type, [friend, network, c])), makeLambdaFunction(SocialFeed$lambda$65$Type.prototype.apply_0, SocialFeed$lambda$65$Type, [friend, current, s, network]));
}

function $getShared(this$static, from, to, crypto_0, network){
  return $thenCompose($thenCompose($getChild_2(this$static.dataDir, 'feed-index.cbor', this$static.network), makeLambdaFunction(SocialFeed$lambda$14$Type.prototype.apply_0, SocialFeed$lambda$14$Type, [])), makeLambdaFunction(SocialFeed$lambda$15$Type.prototype.apply_0, SocialFeed$lambda$15$Type, [this$static, from, to, network, crypto_0]));
}

function $getUpdatedState(this$static, dataDir){
  return $thenCompose($getUpdated(dataDir, this$static.network), makeLambdaFunction(SocialFeed$lambda$92$Type.prototype.apply_0, SocialFeed$lambda$92$Type, [this$static]));
}

function $lambda$0_17(this$static, dir_1, home_1){
  return $getOrMkdirs(home_1, dir_1, this$static.network, true, $map(this$static.context.mirrorBat, makeLambdaFunction(UserContext$13methodref$id$Type.prototype.apply_0, UserContext$13methodref$id$Type, [])), this$static.crypto_0);
}

function $lambda$1_12(this$static, post_1, dir_2, postFilename_3, reader_4, raw_5, postDir_5){
  return $thenApply($uploadAndReturnFile(postDir_5, postFilename_3, reader_4, raw_5.length, false, $mirrorBatId(postDir_5.pointer.fileAccess), this$static.network, this$static.crypto_0), makeLambdaFunction(SocialFeed$lambda$2$Type.prototype.apply_0, SocialFeed$lambda$2$Type, [post_1, dir_2, postFilename_3]));
}

function $lambda$10_2(this$static, length_1, r_1){
  return $hashFromStream(this$static.crypto_0.hasher, r_1, length_1);
}

function $lambda$12_4(this$static, dirFromHome_1, home_1){
  return $thenApply($getOrMkdirs(home_1, dirFromHome_1, this$static.network, true, $map(this$static.context.mirrorBat, makeLambdaFunction(UserContext$13methodref$id$Type.prototype.apply_0, UserContext$13methodref$id$Type, [])), this$static.crypto_0), makeLambdaFunction(SocialFeed$lambda$13$Type.prototype.apply_0, SocialFeed$lambda$13$Type, [this$static, dirFromHome_1]));
}

function $lambda$13_5(this$static, dirFromHome_1, dir_1){
  return new Pair($resolve(get_176('/' + this$static.context.username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])), dirFromHome_1.pathString), dir_1);
}

function $lambda$15_3(this$static, from_1, to_2, network_3, crypto_4, start_4){
  return $thenCompose($getChild_2(this$static.dataDir, 'feed.cbor', network_3), makeLambdaFunction(SocialFeed$lambda$16$Type.prototype.apply_0, SocialFeed$lambda$16$Type, [this$static, start_4, from_1, to_2, network_3, crypto_4]));
}

function $lambda$16_5(this$static, start_1, from_2, to_3, network_4, crypto_5, fopt_5){
  return castTo($orElse($map(fopt_5, makeLambdaFunction(SocialFeed$lambda$17$Type.prototype.apply_0, SocialFeed$lambda$17$Type, [this$static, start_1, from_2, to_3, network_4, crypto_5])), new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_LIST))), 87);
}

function $lambda$17_7(this$static, start_1, from_2, to_3, network_4, crypto_5, f_5){
  return $thenCompose($thenCompose($getInputStream_0(f_5, network_4, crypto_5, makeLambdaFunction(SocialFeed$lambda$18$Type.prototype.accept_5, SocialFeed$lambda$18$Type, [])), makeLambdaFunction(SocialFeed$lambda$19$Type.prototype.apply_0, SocialFeed$lambda$19$Type, [start_1])), makeLambdaFunction(SocialFeed$lambda$20$Type.prototype.apply_0, SocialFeed$lambda$20$Type, [this$static, from_2, start_1, to_3]));
}

function $lambda$20_3(this$static, from_1, start_2, to_3, stream_3){
  var res;
  res = new ArrayList;
  return $thenApply(stream_3.parseLimitedStream(makeLambdaFunction(SocialFeed$1methodref$fromCbor$Type.prototype.apply_0, SocialFeed$1methodref$fromCbor$Type, []), new SocialFeed$2methodref$add$Type(res), from_1 - castTo(start_2.right, 100).value_0, $wnd.Math.min(this$static.feedSizeRecords, to_3) - from_1, this$static.feedSizeBytes), makeLambdaFunction(SocialFeed$lambda$23$Type.prototype.apply_0, SocialFeed$lambda$23$Type, [res]));
}

function $lambda$26_1(this$static, p_0){
  return $thenApply(parse_7(castTo(p_0.right, 19), makeLambdaFunction(SocialFeed$4methodref$fromCbor$Type.prototype.apply_0, SocialFeed$4methodref$fromCbor$Type, []), this$static.network, this$static.crypto_0), makeLambdaFunction(SocialFeed$lambda$28$Type.prototype.apply_0, SocialFeed$lambda$28$Type, [p_0]));
}

function $lambda$29(this$static, retrieved_0){
  var commentsOnOurs;
  commentsOnOurs = castTo($collect_0($filter(retrieved_0.stream(), new SocialFeed$lambda$30$Type(this$static)), groupingBy(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)])))), 68);
  return combineAllInOrder(castTo($collect_0($map_0(commentsOnOurs.entrySet_0().stream(), makeLambdaFunction(SocialFeed$lambda$33$Type.prototype.apply_0, SocialFeed$lambda$33$Type, [this$static])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [IDENTITY_FINISH]))), 54));
}

function $lambda$3_10(this$static, p_0){
  return $thenApply($addToFeed(this$static, castTo(p_0.right, 19).version, new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_social_SharedItem_2_classLit, 1), $intern_0, 168, 0, [new SharedItem($readOnly(castTo(p_0.right, 19).pointer.capability), this$static.context.username, this$static.context.username, castTo(p_0.left, 95).pathString)]))), makeLambdaFunction(SocialFeed$lambda$4$Type.prototype.apply_0, SocialFeed$lambda$4$Type, [p_0]));
}

function $lambda$30_2(this$static, t_0){
  return $booleanValue(castToBoolean($orElse($map(castTo(t_0.right, 178).parent, makeLambdaFunction(SocialFeed$lambda$31$Type.prototype.apply_0, SocialFeed$lambda$31$Type, [this$static])), ($clinit_Boolean() , false))));
}

function $lambda$31_2(this$static, p_0){
  return $clinit_Boolean() , $startsWith(p_0.path, '/' + this$static.context.username)?true:false;
}

function $lambda$33_1(this$static, e_0){
  return $mergeCommentsIntoParent(this$static, castToString(e_0.getKey()), castTo(e_0.getValue(), 17));
}

function $lambda$35_2(this$static, t_0){
  return $thenCompose($getInputStream_0(castTo(t_0.middle, 19), this$static.network, this$static.crypto_0, makeLambdaFunction(SocialFeed$lambda$36$Type.prototype.accept_5, SocialFeed$lambda$36$Type, [])), makeLambdaFunction(SocialFeed$lambda$37$Type.prototype.apply_0, SocialFeed$lambda$37$Type, [this$static, t_0]));
}

function $lambda$37_0(this$static, t_1, reader_1){
  return $thenApply($hashFromStream(this$static.crypto_0.hasher, reader_1, $getSize(castTo(t_1.middle, 19))), makeLambdaFunction(SocialFeed$lambda$38$Type.prototype.apply_0, SocialFeed$lambda$38$Type, [t_1]));
}

function $lambda$39_1(this$static, parentPath_1, refs_1){
  return $thenCompose($getByPath_4(this$static.context, parentPath_1), makeLambdaFunction(SocialFeed$lambda$40$Type.prototype.apply_0, SocialFeed$lambda$40$Type, [this$static, refs_1]));
}

function $lambda$40_2(this$static, refs_1, fopt_1){
  if (fopt_1.ref == null)
    return new CompletableFuture_0(($clinit_Boolean() , false));
  if (!$equals_0('application/vnd.peergos-post', $getFileProperties((checkCriticalElement(fopt_1.ref != null) , castTo(fopt_1.ref, 19))).mimeType))
    return new CompletableFuture_0(($clinit_Boolean() , true));
  return $thenCompose(parse_7((checkCriticalElement(fopt_1.ref != null) , castTo(fopt_1.ref, 19)), makeLambdaFunction(SocialFeed$5methodref$fromCbor$Type.prototype.apply_0, SocialFeed$5methodref$fromCbor$Type, []), this$static.network, this$static.crypto_0), makeLambdaFunction(SocialFeed$lambda$42$Type.prototype.apply_0, SocialFeed$lambda$42$Type, [this$static, refs_1, fopt_1]));
}

function $lambda$42_0(this$static, refs_1, fopt_2, parent_2){
  var raw, withComments;
  withComments = $addComments(parent_2, refs_1);
  raw = $toByteArray_2($toCbor_57(withComments));
  return $thenApply($overwriteFile((checkCriticalElement(fopt_2.ref != null) , castTo(fopt_2.ref, 19)), new AsyncReader$ArrayBacked(raw), raw.length, this$static.network, this$static.crypto_0, makeLambdaFunction(SocialFeed$lambda$43$Type.prototype.accept_5, SocialFeed$lambda$43$Type, [])), makeLambdaFunction(SocialFeed$lambda$44$Type.prototype.apply_0, SocialFeed$lambda$44$Type, [this$static]));
}

function $lambda$44_2(this$static, x_0){
  this$static.dataDir = $withVersion_0(this$static.dataDir, x_0.version);
  return $clinit_Boolean() , true;
}

function $lambda$46_0(this$static, f_0){
  this$static.stateFile = f_0;
  return $clinit_Boolean() , true;
}

function $lambda$47_0(this$static, s_0, c_1){
  return $thenCompose($thenCompose($getFollowingNodes(this$static.context), makeLambdaFunction(SocialFeed$lambda$48$Type.prototype.apply_0, SocialFeed$lambda$48$Type, [this$static, s_0])), makeLambdaFunction(SocialFeed$lambda$60$Type.prototype.apply_0, SocialFeed$lambda$60$Type, [this$static, c_1]));
}

function $lambda$48_0(this$static, s_1, friends_1){
  var identity, pointers;
  pointers = castTo($collect_0($map_0(friends_1.stream(), makeLambdaFunction(SocialFeed$lambda$49$Type.prototype.apply_0, SocialFeed$lambda$49$Type, [this$static])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  return $thenApply($thenApply((identity = new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_LIST)) , castTo($reduce(pointers.stream(), identity, new Futures$lambda$6$Type), 6)), makeLambdaFunction(SocialFeed$lambda$52$Type.prototype.apply_0, SocialFeed$lambda$52$Type, [])), makeLambdaFunction(SocialFeed$lambda$56$Type.prototype.apply_0, SocialFeed$lambda$56$Type, [s_1]));
}

function $lambda$49_1(this$static, f_0){
  return $exceptionally($thenApply($getLatestVersion(f_0, this$static.network), makeLambdaFunction(SocialFeed$lambda$50$Type.prototype.apply_0, SocialFeed$lambda$50$Type, [f_0])), makeLambdaFunction(SocialFeed$lambda$51$Type.prototype.apply_0, SocialFeed$lambda$51$Type, []));
}

function $lambda$5_7(this$static, post_1, dir_2, uuid_3, raw_4, fopt_4){
  return $thenApply($overwriteFile((checkCriticalElement(fopt_4.ref != null) , castTo(fopt_4.ref, 19)), new AsyncReader$ArrayBacked(raw_4), raw_4.length, this$static.network, this$static.crypto_0, makeLambdaFunction(SocialFeed$lambda$6$Type.prototype.accept_5, SocialFeed$lambda$6$Type, [])), makeLambdaFunction(SocialFeed$lambda$7$Type.prototype.apply_0, SocialFeed$lambda$7$Type, [post_1, dir_2, uuid_3]));
}

function $lambda$60_0(this$static, c_1, fv_1){
  return reduceAll_0(castTo(fv_1.left, 47).stream(), new Pair(castTo(fv_1.right, 43), new StreamImpl$Empty(null)), new SocialFeed$lambda$61$Type(this$static, c_1), new SocialFeed$lambda$62$Type);
}

function $lambda$61_0(this$static, c_1, p_1, friend_2){
  return $thenApply($getFriendUpdate(this$static, friend_2, castTo(p_1.left, 43), c_1, this$static.network), makeLambdaFunction(SocialFeed$lambda$63$Type.prototype.apply_0, SocialFeed$lambda$63$Type, [p_1]));
}

function $lambda$64_0(this$static, updates_0){
  return $mergeUpdates(this$static, castTo(updates_0.left, 43), castTo(castTo(updates_0.right, 147).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 54));
}

function $lambda$72_0(this$static, newItems_1){
  var bout, data_0, e, item_0, item$iterator;
  bout = new ByteArrayOutputStream;
  for (item$iterator = newItems_1.iterator(); item$iterator.hasNext_0();) {
    item_0 = castTo(item$iterator.next_1(), 168);
    try {
      $write(bout, $toByteArray_2($toCbor_55(item_0)));
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 62)) {
        e = $e0;
        throw toJs(new RuntimeException_2(e));
      }
       else 
        throw toJs($e0);
    }
  }
  data_0 = $toByteArray(bout);
  return $thenApply(asyncExceptionally(new SocialFeed$lambda$73$Type(this$static, data_0, newItems_1), makeLambdaFunction(SocialFeed$lambda$74$Type.prototype.apply_0, SocialFeed$lambda$74$Type, [this$static, data_0, newItems_1])), makeLambdaFunction(SocialFeed$lambda$76$Type.prototype.apply_0, SocialFeed$lambda$76$Type, [this$static]));
}

function $lambda$74_0(this$static, data_1, newItems_2){
  return $thenCompose($thenApply($getUpdatedState(this$static, this$static.dataDir), makeLambdaFunction(SocialFeed$lambda$88$Type.prototype.apply_0, SocialFeed$lambda$88$Type, [this$static])), makeLambdaFunction(SocialFeed$lambda$75$Type.prototype.apply_0, SocialFeed$lambda$75$Type, [this$static, data_1, newItems_2]));
}

function $lambda$77(this$static, data_1, records_2, s_2, c_3){
  return $thenCompose($thenCompose($getUpdated_0(this$static.dataDir, s_2, this$static.network), makeLambdaFunction(SocialFeed$lambda$78$Type.prototype.apply_0, SocialFeed$lambda$78$Type, [this$static, c_3, data_1])), makeLambdaFunction(SocialFeed$lambda$82$Type.prototype.apply_0, SocialFeed$lambda$82$Type, [this$static, records_2, data_1, c_3]));
}

function $lambda$78(this$static, c_1, data_2, updated_2){
  return $thenCompose($getChild_2(updated_2, 'feed.cbor', this$static.network), makeLambdaFunction(SocialFeed$lambda$79$Type.prototype.apply_0, SocialFeed$lambda$79$Type, [this$static, updated_2, c_1, data_2]));
}

function $lambda$79_0(this$static, updated_1, c_2, data_3, feedOpt_3){
  if (feedOpt_3.ref == null)
    return $uploadFileSection_1(updated_1, updated_1.version, c_2, 'feed.cbor', new AsyncReader$ArrayBacked(data_3), false, 0, data_3.length, ($clinit_Optional() , $clinit_Optional() , EMPTY), false, false, this$static.network, this$static.crypto_0, makeLambdaFunction(SocialFeed$lambda$80$Type.prototype.accept_5, SocialFeed$lambda$80$Type, []), $randomBytes(this$static.crypto_0.random, 32), (null , EMPTY), new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(this$static.crypto_0.random, 32))))), $mirrorBatId(updated_1.pointer.fileAccess));
  if (neq($getSize((checkCriticalElement(feedOpt_3.ref != null) , castTo(feedOpt_3.ref, 19))), this$static.feedSizeBytes))
    throw toJs(new IllegalStateException_0('Feed size incorrect!'));
  return $append_5((checkCriticalElement(feedOpt_3.ref != null) , castTo(feedOpt_3.ref, 19)), data_3, this$static.network, this$static.crypto_0, c_2, makeLambdaFunction(SocialFeed$lambda$81$Type.prototype.accept_5, SocialFeed$lambda$81$Type, []));
}

function $lambda$8_3(this$static, length_1, uuid_2, media_3, monitor_4, p_4){
  return $thenCompose($uploadAndReturnFile_0(castTo(p_4.right, 19), uuid_2, media_3, length_1, false, monitor_4, $mirrorBatId(castTo(p_4.right, 19).pointer.fileAccess), this$static.network, this$static.crypto_0), makeLambdaFunction(SocialFeed$lambda$9$Type.prototype.apply_0, SocialFeed$lambda$9$Type, [this$static, length_1, p_4, uuid_2, media_3]));
}

function $lambda$82_0(this$static, records_1, data_2, c_3, s2_3){
  var raw;
  this$static.feedSizeRecords += records_1;
  this$static.feedSizeBytes = add_1(this$static.feedSizeBytes, data_2.length);
  raw = $toByteArray_2($toCbor_56(new SocialFeed$FeedState(this$static.lastSeenIndex, this$static.feedSizeRecords, this$static.feedSizeBytes, this$static.currentCapBytesProcessed)));
  return $overwriteFile_0(this$static.stateFile, new AsyncReader$ArrayBacked(raw), raw.length, this$static.network, this$static.crypto_0, makeLambdaFunction(SocialFeed$lambda$83$Type.prototype.accept_5, SocialFeed$lambda$83$Type, []), s2_3, c_3);
}

function $lambda$85(this$static, u_0){
  this$static.dataDir = u_0;
  return $clinit_Boolean() , true;
}

function $lambda$86_0(this$static, s_1){
  return $thenApply($getUpdated_0(this$static.stateFile, s_1, this$static.network), makeLambdaFunction(SocialFeed$lambda$87$Type.prototype.apply_0, SocialFeed$lambda$87$Type, [this$static, s_1]));
}

function $lambda$87(this$static, s_1, us_1){
  this$static.stateFile = us_1;
  return s_1;
}

function $lambda$88(this$static, p_0){
  this$static.dataDir = castTo(p_0.left, 19);
  this$static.feedSizeBytes = castTo(p_0.right, 227).feedSizeBytes;
  this$static.feedSizeRecords = castTo(p_0.right, 227).feedSizeRecords;
  this$static.lastSeenIndex = castTo(p_0.right, 227).lastSeenIndex;
  return $clinit_Boolean() , true;
}

function $lambda$9_6(this$static, length_1, p_2, uuid_3, media_4, f_4){
  return $thenApply($thenCompose(media_4.reset(), makeLambdaFunction(SocialFeed$lambda$10$Type.prototype.apply_0, SocialFeed$lambda$10$Type, [this$static, length_1])), makeLambdaFunction(SocialFeed$lambda$11$Type.prototype.apply_0, SocialFeed$lambda$11$Type, [f_4, p_2, uuid_3]));
}

function $lambda$92(this$static, updatedDataDir_0){
  return $thenCompose($getChild_2(updatedDataDir_0, 'feed-state.cbor', this$static.context.network), makeLambdaFunction(SocialFeed$lambda$93$Type.prototype.apply_0, SocialFeed$lambda$93$Type, [this$static, updatedDataDir_0]));
}

function $lambda$93(this$static, updatedDataDir_1, fopt_1){
  if (fopt_1.ref == null)
    throw toJs(new IllegalStateException_0('Social feed state file not present!'));
  return $thenApply(readFully_0((checkCriticalElement(fopt_1.ref != null) , castTo(fopt_1.ref, 19)), this$static.context.crypto, this$static.context.network), makeLambdaFunction(SocialFeed$lambda$94$Type.prototype.apply_0, SocialFeed$lambda$94$Type, [updatedDataDir_1]));
}

function $mergeCommentReferences(this$static, items){
  var posts;
  posts = castTo($collect_0($filter(items.stream(), new SocialFeed$lambda$25$Type), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  return $thenApply($thenCompose(combineAllInOrder(castTo($collect_0($map_0(posts.stream(), makeLambdaFunction(SocialFeed$lambda$26$Type.prototype.apply_0, SocialFeed$lambda$26$Type, [this$static])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [IDENTITY_FINISH]))), 54)), makeLambdaFunction(SocialFeed$lambda$29$Type.prototype.apply_0, SocialFeed$lambda$29$Type, [this$static])), makeLambdaFunction(SocialFeed$lambda$34$Type.prototype.apply_0, SocialFeed$lambda$34$Type, [items]));
}

function $mergeCommentsIntoParent(this$static, parentPath, comments){
  return $thenCompose(combineAllInOrder(castTo($collect_0($map_0(comments.stream(), makeLambdaFunction(SocialFeed$lambda$35$Type.prototype.apply_0, SocialFeed$lambda$35$Type, [this$static])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 54)), makeLambdaFunction(SocialFeed$lambda$39$Type.prototype.apply_0, SocialFeed$lambda$39$Type, [this$static, parentPath]));
}

function $mergeUpdates(this$static, v, updates){
  var forFeed, newCaps, update, update$iterator, updated;
  forFeed = new ArrayList;
  for (update$iterator = updates.iterator(); update$iterator.hasNext_0();) {
    update = castTo(update$iterator.next_1(), 203);
    updated = $add_4(castTo(update.middle, 163), castTo(update.right, 107));
    $putStringValue(this$static.currentCapBytesProcessed, castToString(update.left), updated);
    newCaps = $getNewCaps(castTo(update.right, 107));
    $forEach_2($map_0(newCaps.stream(), makeLambdaFunction(SocialFeed$lambda$67$Type.prototype.apply_0, SocialFeed$lambda$67$Type, [update])), new SocialFeed$8methodref$add$Type(forFeed));
  }
  return $addToFeed(this$static, v, forFeed);
}

function $setVersion(this$static, s){
  return $thenCompose($thenApply($getUpdated_0(this$static.dataDir, s, this$static.network), makeLambdaFunction(SocialFeed$lambda$85$Type.prototype.apply_0, SocialFeed$lambda$85$Type, [this$static])), makeLambdaFunction(SocialFeed$lambda$86$Type.prototype.apply_0, SocialFeed$lambda$86$Type, [this$static, s]));
}

function $update_3(this$static){
  var owner;
  owner = this$static.context.signer.publicKeyHash;
  return $thenCompose($applyComplexComputation(this$static.network.synchronizer, owner, $signingPair(this$static.dataDir), new SocialFeed$lambda$47$Type(this$static)), makeLambdaFunction(SocialFeed$lambda$64$Type.prototype.apply_0, SocialFeed$lambda$64$Type, [this$static]));
}

function SocialFeed(dataDir, stateFile, state, context){
  this.dataDir = dataDir;
  this.stateFile = stateFile;
  this.lastSeenIndex = state.lastSeenIndex;
  this.feedSizeRecords = state.feedSizeRecords;
  this.feedSizeBytes = state.feedSizeBytes;
  this.currentCapBytesProcessed = new HashMap_1(state.currentCapBytesProcessed);
  this.context = context;
  this.network = context.network;
  this.crypto_0 = context.crypto;
}

function getDirFromHome(post){
  return get_176('.posts', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['' + post.postTime.date.year, '' + post.postTime.date.month]));
}

function lambda$11_4(f_0, p_1, uuid_2, hash_3){
  return new Pair($getType(($ensureUnmodified(f_0) , f_0.props)), new FileRef($resolve(castTo(p_1.left, 95), uuid_2).pathString, $readOnly(f_0.pointer.capability), hash_3));
}

function lambda$19(start_0, stream_1){
  return stream_1.seek_1(castTo(start_0.left, 69).value_0);
}

function lambda$2_8(post_0, dir_1, postFilename_2, f_3){
  return new Pair($resolve($resolve(get_176(post_0.author, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])), dir_1.pathString), postFilename_2), f_3);
}

function lambda$28(p_0, sp_1){
  return new Triple(castTo(p_0.left, 168), castTo(p_0.right, 19), sp_1);
}

function lambda$38_0(t_0, h_1){
  return new FileRef(castTo(t_0.left, 168).path, castTo(t_0.left, 168).cap, h_1);
}

function lambda$50_1(f_0, v_1){
  return $clinit_Optional() , new Optional(checkCriticalNotNull(new Pair(f_0, v_1)));
}

function lambda$56_1(s_0, combined_1){
  return new Pair(castTo($orElse($map(combined_1, makeLambdaFunction(SocialFeed$lambda$57$Type.prototype.apply_0, SocialFeed$lambda$57$Type, [])), ($clinit_Collections() , $clinit_Collections() , EMPTY_SET)), 47), castTo($orElse($map($map(combined_1, makeLambdaFunction(SocialFeed$lambda$58$Type.prototype.apply_0, SocialFeed$lambda$58$Type, [])), makeLambdaFunction(SocialFeed$7methodref$mergeAndOverwriteWith$Type.prototype.apply_0, SocialFeed$7methodref$mergeAndOverwriteWith$Type, [s_0])), s_0), 43));
}

function lambda$63_0(p_0, res_1){
  return new Pair(castTo(res_1.left, 43), concat(castTo(p_0.right, 147), $stream(castTo(res_1.right, 12))));
}

function lambda$65_1(friend_0, current_1, s_2, network_3, p_4){
  return $thenApply($getCapsFrom(friend_0.cache_0, friend_0.sharedDir, friend_0.groups, current_1, s_2, network_3), makeLambdaFunction(SocialFeed$lambda$66$Type.prototype.apply_0, SocialFeed$lambda$66$Type, [p_4, friend_0, current_1]));
}

function lambda$66_0(p_0, friend_1, current_2, diff_3){
  if (eq(diff_3.newCaps.readCaps.bytesRead, 0) && eq(diff_3.newCaps.writeCaps.bytesRead, 0) && !$anyMatch(diff_3.groupDiffs.values().stream(), new Predicate$lambda$2$Type(new CapsDiff$0methodref$isEmpty$Type)))
    return new Pair(castTo(p_0.left, 43), ($clinit_Optional() , $clinit_Optional() , EMPTY));
  return new Pair(castTo(p_0.left, 43), ($clinit_Optional() , new Optional(checkCriticalNotNull(new SocialFeed$Update(friend_1.ownerName, current_2, diff_3)))));
}

function lambda$67(update_0, c_1){
  return new SharedItem(c_1.cap, $getName_0(get_176(c_1.path, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])), 0).pathString, castToString(update_0.left), c_1.path);
}

function lambda$7_4(post_0, dir_1, uuid_2, f_3){
  return new Pair($resolve($resolve(get_176(post_0.author, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])), dir_1.pathString), uuid_2), f_3);
}

function lambda$89(dataDir_0, context_1, fopt_2){
  if (fopt_2.ref == null)
    throw toJs(new IllegalStateException_0('Social feed state file not present!'));
  return $thenApply($thenApply(readFully_0((checkCriticalElement(fopt_2.ref != null) , castTo(fopt_2.ref, 19)), context_1.crypto, context_1.network), makeLambdaFunction(SocialFeed$lambda$90$Type.prototype.apply_0, SocialFeed$lambda$90$Type, [])), makeLambdaFunction(SocialFeed$lambda$91$Type.prototype.apply_0, SocialFeed$lambda$91$Type, [dataDir_0, fopt_2, context_1]));
}

function lambda$91_0(dataDir_0, fopt_1, context_2, s_3){
  return new SocialFeed(dataDir_0, (checkCriticalElement(fopt_1.ref != null) , castTo(fopt_1.ref, 19)), s_3, context_2);
}

function lambda$94_0(updatedDataDir_0, arr_1){
  return new Pair(updatedDataDir_0, fromCbor_68(deserialize(new CborDecoder(new ByteArrayInputStream(arr_1)), arr_1.length)));
}

function lambda$95_0(c_0, home_1){
  return $getOrMkdirs(home_1, get_176('.feed', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])), c_0.network, true, $map(c_0.mirrorBat, makeLambdaFunction(UserContext$13methodref$id$Type.prototype.apply_0, UserContext$13methodref$id$Type, [])), c_0.crypto);
}

function lambda$96_0(c_0, feedDir_1){
  var empty, rawEmpty;
  empty = new SocialFeed$FeedState(0, 0, 0, ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP));
  rawEmpty = $toByteArray_2($toCbor_56(empty));
  return $thenCompose($thenApply($uploadAndReturnFile(feedDir_1, 'feed-state.cbor', new AsyncReader$ArrayBacked(rawEmpty), rawEmpty.length, false, $mirrorBatId(feedDir_1.pointer.fileAccess), c_0.network, c_0.crypto), makeLambdaFunction(SocialFeed$lambda$97$Type.prototype.apply_0, SocialFeed$lambda$97$Type, [feedDir_1, empty, c_0])), makeLambdaFunction(SocialFeed$11methodref$update$Type.prototype.apply_0, SocialFeed$11methodref$update$Type, []));
}

function lambda$97(feedDir_0, empty_1, c_2, stateFile_3){
  return new SocialFeed(feedDir_0, stateFile_3, empty_1, c_2);
}

function load_1(dataDir, context){
  return $thenCompose($getChild_2(dataDir, 'feed-state.cbor', context.network), makeLambdaFunction(SocialFeed$lambda$89$Type.prototype.apply_0, SocialFeed$lambda$89$Type, [dataDir, context]));
}

defineClass(363, 1, {363:1}, SocialFeed);
_.createNewPost = function createNewPost(post){
  var dir_0, postFilename, raw, reader;
  if (!$equals_0(post.author, this.context.username))
    throw toJs(new IllegalStateException_0('You can only post as yourself!'));
  postFilename = ($clinit_UUID() , new UUID(uuid_1())).uuid + '.cbor';
  dir_0 = get_176('.posts', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['' + post.postTime.date.year, '' + post.postTime.date.month]));
  raw = $toByteArray_2($toCbor_57(post));
  reader = new AsyncReader$ArrayBacked(raw);
  return $thenCompose($thenCompose($thenCompose($getUserRoot(this.context), makeLambdaFunction(SocialFeed$lambda$0$Type.prototype.apply_0, SocialFeed$lambda$0$Type, [this, dir_0])), makeLambdaFunction(SocialFeed$lambda$1$Type.prototype.apply_0, SocialFeed$lambda$1$Type, [this, post, dir_0, postFilename, reader, raw])), makeLambdaFunction(SocialFeed$lambda$3$Type.prototype.apply_0, SocialFeed$lambda$3$Type, [this]));
}
;
_.getFeedSize = function getFeedSize(){
  return this.feedSizeRecords;
}
;
_.getLastSeenIndex = function getLastSeenIndex(){
  return this.lastSeenIndex;
}
;
_.getShared = function getShared(from, to, crypto_0, network){
  return $getShared(this, from, to, crypto_0, network);
}
;
_.getSharedFiles = function getSharedFiles(from, to){
  return $thenCompose($getShared(this, from, to, this.crypto_0, this.network), makeLambdaFunction(SocialFeed$3methodref$getFiles$Type.prototype.apply_0, SocialFeed$3methodref$getFiles$Type, [this.context]));
}
;
_.hasUnseen = function hasUnseen(){
  return this.lastSeenIndex < this.feedSizeRecords;
}
;
_.setLastSeenIndex = function setLastSeenIndex(newLastSeenIndex){
  var raw;
  this.lastSeenIndex = newLastSeenIndex;
  return raw = $toByteArray_2($toCbor_56(new SocialFeed$FeedState(this.lastSeenIndex, this.feedSizeRecords, this.feedSizeBytes, this.currentCapBytesProcessed))) , $thenApply($overwriteFile(this.stateFile, new AsyncReader$ArrayBacked(raw), raw.length, this.network, this.crypto_0, makeLambdaFunction(SocialFeed$lambda$45$Type.prototype.accept_5, SocialFeed$lambda$45$Type, [])), makeLambdaFunction(SocialFeed$lambda$46$Type.prototype.apply_0, SocialFeed$lambda$46$Type, [this]));
}
;
_.update = function update_1(){
  return $update_3(this);
}
;
_.updatePost = function updatePost(uuid, post){
  var completePath, dir_0, raw;
  if (!$equals_0(post.author, this.context.username))
    throw toJs(new IllegalStateException_0('You can only post as yourself!'));
  dir_0 = getDirFromHome(castTo(post.previousVersions.getAtIndex(0), 178));
  raw = $toByteArray_2($toCbor_57(post));
  completePath = this.context.username + '/' + $resolve(dir_0, uuid).pathString;
  return $thenCompose($getByPath_4(this.context, completePath), makeLambdaFunction(SocialFeed$lambda$5$Type.prototype.apply_0, SocialFeed$lambda$5$Type, [this, post, dir_0, uuid, raw]));
}
;
_.uploadMediaForPost = function uploadMediaForPost(media_0, length_0, postTime, monitor){
  var dirFromHome, uuid;
  uuid = ($clinit_UUID() , new UUID(uuid_1())).uuid;
  return $thenCompose((dirFromHome = get_176('.posts', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['' + postTime.date.year, 'media'])) , $thenCompose($getUserRoot(this.context), makeLambdaFunction(SocialFeed$lambda$12$Type.prototype.apply_0, SocialFeed$lambda$12$Type, [this, dirFromHome]))), makeLambdaFunction(SocialFeed$lambda$8$Type.prototype.apply_0, SocialFeed$lambda$8$Type, [this, length_0, uuid, media_0, monitor]));
}
;
_.feedSizeBytes = 0;
_.feedSizeRecords = 0;
_.lastSeenIndex = 0;
var Lpeergos_shared_social_SocialFeed_2_classLit = createForClass('peergos.shared.social', 'SocialFeed', 363);
function SocialFeed$10methodref$setVersion$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3296, $wnd.Function, $intern_22, SocialFeed$10methodref$setVersion$Type);
_.apply_0 = function apply_630(arg0){
  return $setVersion(this.$$outer_0, castTo(arg0, 43));
}
;
function SocialFeed$11methodref$update$Type(){
}

defineClass(3354, $wnd.Function, $intern_22, SocialFeed$11methodref$update$Type);
_.apply_0 = function apply_631(arg0){
  return $update_3(castTo(arg0, 363));
}
;
function SocialFeed$1methodref$fromCbor$Type(){
}

defineClass(3312, $wnd.Function, $intern_22, SocialFeed$1methodref$fromCbor$Type);
_.apply_0 = function apply_632(arg0){
  return fromCbor_67(castTo(arg0, 7));
}
;
function SocialFeed$2methodref$add$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1027, 1, $intern_32, SocialFeed$2methodref$add$Type);
_.accept = function accept_69(arg0){
  $add(this.$$outer_0, castTo(arg0, 168));
}
;
_.andThen = function andThen_33(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_social_SocialFeed$2methodref$add$Type_2_classLit = createForClass('peergos.shared.social', 'SocialFeed/2methodref$add$Type', 1027);
function SocialFeed$3methodref$getFiles$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3284, $wnd.Function, $intern_22, SocialFeed$3methodref$getFiles$Type);
_.apply_0 = function apply_633(arg0){
  return $getFiles(this.$$outer_0, castTo(arg0, 17));
}
;
function SocialFeed$4methodref$fromCbor$Type(){
}

defineClass(3314, $wnd.Function, $intern_22, SocialFeed$4methodref$fromCbor$Type);
_.apply_0 = function apply_634(arg0){
  return fromCbor_69(castTo(arg0, 7));
}
;
function SocialFeed$5methodref$fromCbor$Type(){
}

defineClass(3322, $wnd.Function, $intern_22, SocialFeed$5methodref$fromCbor$Type);
_.apply_0 = function apply_635(arg0){
  return fromCbor_69(castTo(arg0, 7));
}
;
function SocialFeed$6methodref$stream$Type(){
}

defineClass(3357, $wnd.Function, $intern_22, SocialFeed$6methodref$stream$Type);
_.apply_0 = function apply_636(arg0){
  return $stream(castTo(arg0, 12));
}
;
function SocialFeed$7methodref$mergeAndOverwriteWith$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3335, $wnd.Function, $intern_22, SocialFeed$7methodref$mergeAndOverwriteWith$Type);
_.apply_0 = function apply_637(arg0){
  return $mergeAndOverwriteWith(this.$$outer_0, castTo(arg0, 43));
}
;
function SocialFeed$8methodref$add$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1034, 1, $intern_32, SocialFeed$8methodref$add$Type);
_.accept = function accept_70(arg0){
  $add(this.$$outer_0, castTo(arg0, 168));
}
;
_.andThen = function andThen_34(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_social_SocialFeed$8methodref$add$Type_2_classLit = createForClass('peergos.shared.social', 'SocialFeed/8methodref$add$Type', 1034);
function SocialFeed$9methodref$mergeCommentReferences$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3294, $wnd.Function, $intern_22, SocialFeed$9methodref$mergeCommentReferences$Type);
_.apply_0 = function apply_638(arg0){
  return $mergeCommentReferences(this.$$outer_0, castTo(arg0, 17));
}
;
function $toCbor_56(this$static){
  var e, e$iterator, processed, state, transformed, transformed0;
  state = new TreeMap;
  $put_6(state, 's', new CborObject$CborLong(this$static.lastSeenIndex));
  $put_6(state, 'r', new CborObject$CborLong(this$static.feedSizeRecords));
  $put_6(state, 'b', new CborObject$CborLong(this$static.feedSizeBytes));
  processed = new TreeMap;
  for (e$iterator = this$static.currentCapBytesProcessed.entrySet_0().iterator(); e$iterator.hasNext_0();) {
    e = castTo(e$iterator.next_1(), 40);
    $put_6(processed, castToString(e.getKey()), $toCbor_54(castTo(e.getValue(), 163)));
  }
  $put_6(state, 'p', (transformed0 = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(processed), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed0)));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function SocialFeed$FeedState(lastSeenIndex, feedSizeRecords, feedSizeBytes, currentCapBytesProcessed){
  this.lastSeenIndex = lastSeenIndex;
  this.feedSizeRecords = feedSizeRecords;
  this.feedSizeBytes = feedSizeBytes;
  this.currentCapBytesProcessed = currentCapBytesProcessed;
}

function fromCbor_68(cbor){
  var feedSizeBytes, feedSizeRecords, lastSeenIndex, m, processedBytes;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor for FeedState! ' + cbor));
  m = castTo(cbor, 18);
  lastSeenIndex = toInt_0(castTo(castTo($get_0(m.values_0, new CborObject$CborString('s')), 7), 29).value_0);
  feedSizeRecords = toInt_0(castTo(castTo($get_0(m.values_0, new CborObject$CborString('r')), 7), 29).value_0);
  feedSizeBytes = castTo(castTo($get_0(m.values_0, new CborObject$CborString('b')), 7), 29).value_0;
  processedBytes = $toMap(castTo(castTo($get_0(m.values_0, new CborObject$CborString('p')), 7), 18), makeLambdaFunction(SocialFeed$FeedState$lambda$0$Type.prototype.apply_0, SocialFeed$FeedState$lambda$0$Type, []), makeLambdaFunction(SocialFeed$FeedState$0methodref$fromCbor$Type.prototype.apply_0, SocialFeed$FeedState$0methodref$fromCbor$Type, []));
  return new SocialFeed$FeedState(lastSeenIndex, feedSizeRecords, feedSizeBytes, processedBytes);
}

defineClass(227, 1, {7:1, 227:1}, SocialFeed$FeedState);
_.serialize = function serialize_84(){
  return $toByteArray_2($toCbor_56(this));
}
;
_.toCbor = function toCbor_82(){
  return $toCbor_56(this);
}
;
_.feedSizeBytes = 0;
_.feedSizeRecords = 0;
_.lastSeenIndex = 0;
var Lpeergos_shared_social_SocialFeed$FeedState_2_classLit = createForClass('peergos.shared.social', 'SocialFeed/FeedState', 227);
function SocialFeed$FeedState$0methodref$fromCbor$Type(){
}

defineClass(3356, $wnd.Function, $intern_22, SocialFeed$FeedState$0methodref$fromCbor$Type);
_.apply_0 = function apply_639(arg0){
  return fromCbor_66(castTo(arg0, 7));
}
;
function SocialFeed$FeedState$lambda$0$Type(){
}

defineClass(3355, $wnd.Function, $intern_22, SocialFeed$FeedState$lambda$0$Type);
_.apply_0 = function apply_640(arg0){
  return castTo(castTo(arg0, 7), 13).value_0;
}
;
function Triple(left, middle, right){
  this.left = left;
  this.middle = middle;
  this.right = right;
}

defineClass(203, 1, {203:1}, Triple);
_.equals_0 = function equals_83(o){
  var triple;
  if (this === o)
    return true;
  if (o == null || this.___clazz != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  triple = castTo(o, 203);
  if (this.left != null?!equals_Ljava_lang_Object__Z__devirtual$(this.left, triple.left):triple.left != null)
    return false;
  if (this.middle != null?!equals_Ljava_lang_Object__Z__devirtual$(this.middle, triple.middle):triple.middle != null)
    return false;
  return this.right != null?equals_Ljava_lang_Object__Z__devirtual$(this.right, triple.right):triple.right == null;
}
;
_.hashCode_1 = function hashCode_81(){
  var result;
  result = this.left != null?hashCode__I__devirtual$(this.left):0;
  result = 31 * result + (this.middle != null?hashCode__I__devirtual$(this.middle):0);
  result = 31 * result + (this.right != null?hashCode__I__devirtual$(this.right):0);
  return result;
}
;
_.toString_0 = function toString_74(){
  return '(' + toString_5(this.left) + ', ' + toString_5(this.middle) + ', ' + toString_5(this.right) + ')';
}
;
var Lpeergos_shared_util_Triple_2_classLit = createForClass('peergos.shared.util', 'Triple', 203);
function SocialFeed$Update(left, middle, right){
  Triple.call(this, left, middle, right);
}

defineClass(1026, 203, {203:1}, SocialFeed$Update);
var Lpeergos_shared_social_SocialFeed$Update_2_classLit = createForClass('peergos.shared.social', 'SocialFeed/Update', 1026);
function SocialFeed$lambda$0$Type($$outer_0, dir_1){
  this.$$outer_0 = $$outer_0;
  this.dir_1 = dir_1;
}

defineClass(3274, $wnd.Function, $intern_22, SocialFeed$lambda$0$Type);
_.apply_0 = function apply_641(arg0){
  return $lambda$0_17(this.$$outer_0, this.dir_1, arg0);
}
;
function SocialFeed$lambda$1$Type($$outer_0, post_1, dir_2, postFilename_3, reader_4, raw_5){
  this.$$outer_0 = $$outer_0;
  this.post_1 = post_1;
  this.dir_2 = dir_2;
  this.postFilename_3 = postFilename_3;
  this.reader_4 = reader_4;
  this.raw_5 = raw_5;
}

defineClass(3275, $wnd.Function, $intern_22, SocialFeed$lambda$1$Type);
_.apply_0 = function apply_642(arg0){
  return $lambda$1_12(this.$$outer_0, this.post_1, this.dir_2, this.postFilename_3, this.reader_4, this.raw_5, arg0);
}
;
function SocialFeed$lambda$10$Type($$outer_0, length_1){
  this.$$outer_0 = $$outer_0;
  this.length_1 = length_1;
}

defineClass(3304, $wnd.Function, $intern_22, SocialFeed$lambda$10$Type);
_.apply_0 = function apply_643(arg0){
  return $lambda$10_2(this.$$outer_0, this.length_1, arg0);
}
;
_.length_1 = 0;
function SocialFeed$lambda$11$Type(f_0, p_1, uuid_2){
  this.f_0 = f_0;
  this.p_1 = p_1;
  this.uuid_2 = uuid_2;
}

defineClass(3305, $wnd.Function, $intern_22, SocialFeed$lambda$11$Type);
_.apply_0 = function apply_644(arg0){
  return lambda$11_4(this.f_0, this.p_1, this.uuid_2, arg0);
}
;
function SocialFeed$lambda$12$Type($$outer_0, dirFromHome_1){
  this.$$outer_0 = $$outer_0;
  this.dirFromHome_1 = dirFromHome_1;
}

defineClass(3278, $wnd.Function, $intern_22, SocialFeed$lambda$12$Type);
_.apply_0 = function apply_645(arg0){
  return $lambda$12_4(this.$$outer_0, this.dirFromHome_1, arg0);
}
;
function SocialFeed$lambda$13$Type($$outer_0, dirFromHome_1){
  this.$$outer_0 = $$outer_0;
  this.dirFromHome_1 = dirFromHome_1;
}

defineClass(3306, $wnd.Function, $intern_22, SocialFeed$lambda$13$Type);
_.apply_0 = function apply_646(arg0){
  return $lambda$13_5(this.$$outer_0, this.dirFromHome_1, arg0);
}
;
function SocialFeed$lambda$14$Type(){
}

defineClass(3282, $wnd.Function, $intern_22, SocialFeed$lambda$14$Type);
_.apply_0 = function apply_647(arg0){
  return new CompletableFuture_0(new Pair(valueOf_2(0), valueOf_1(0)));
}
;
function SocialFeed$lambda$15$Type($$outer_0, from_1, to_2, network_3, crypto_4){
  this.$$outer_0 = $$outer_0;
  this.from_1 = from_1;
  this.to_2 = to_2;
  this.network_3 = network_3;
  this.crypto_4 = crypto_4;
}

defineClass(3283, $wnd.Function, $intern_22, SocialFeed$lambda$15$Type);
_.apply_0 = function apply_648(arg0){
  return $lambda$15_3(this.$$outer_0, this.from_1, this.to_2, this.network_3, this.crypto_4, arg0);
}
;
_.from_1 = 0;
_.to_2 = 0;
function SocialFeed$lambda$16$Type($$outer_0, start_1, from_2, to_3, network_4, crypto_5){
  this.$$outer_0 = $$outer_0;
  this.start_1 = start_1;
  this.from_2 = from_2;
  this.to_3 = to_3;
  this.network_4 = network_4;
  this.crypto_5 = crypto_5;
}

defineClass(3307, $wnd.Function, $intern_22, SocialFeed$lambda$16$Type);
_.apply_0 = function apply_649(arg0){
  return $lambda$16_5(this.$$outer_0, this.start_1, this.from_2, this.to_3, this.network_4, this.crypto_5, arg0);
}
;
_.from_2 = 0;
_.to_3 = 0;
function SocialFeed$lambda$17$Type($$outer_0, start_1, from_2, to_3, network_4, crypto_5){
  this.$$outer_0 = $$outer_0;
  this.start_1 = start_1;
  this.from_2 = from_2;
  this.to_3 = to_3;
  this.network_4 = network_4;
  this.crypto_5 = crypto_5;
}

defineClass(3308, $wnd.Function, $intern_22, SocialFeed$lambda$17$Type);
_.apply_0 = function apply_650(arg0){
  return $lambda$17_7(this.$$outer_0, this.start_1, this.from_2, this.to_3, this.network_4, this.crypto_5, arg0);
}
;
_.from_2 = 0;
_.to_3 = 0;
function SocialFeed$lambda$18$Type(){
}

defineClass(3309, $wnd.Function, {}, SocialFeed$lambda$18$Type);
_.accept_5 = function accept_71(arg0){
}
;
function SocialFeed$lambda$19$Type(start_0){
  this.start_0 = start_0;
}

defineClass(3310, $wnd.Function, $intern_22, SocialFeed$lambda$19$Type);
_.apply_0 = function apply_651(arg0){
  return lambda$19(this.start_0, arg0);
}
;
function SocialFeed$lambda$2$Type(post_0, dir_1, postFilename_2){
  this.post_0 = post_0;
  this.dir_1 = dir_1;
  this.postFilename_2 = postFilename_2;
}

defineClass(3299, $wnd.Function, $intern_22, SocialFeed$lambda$2$Type);
_.apply_0 = function apply_652(arg0){
  return lambda$2_8(this.post_0, this.dir_1, this.postFilename_2, arg0);
}
;
function SocialFeed$lambda$20$Type($$outer_0, from_1, start_2, to_3){
  this.$$outer_0 = $$outer_0;
  this.from_1 = from_1;
  this.start_2 = start_2;
  this.to_3 = to_3;
}

defineClass(3311, $wnd.Function, $intern_22, SocialFeed$lambda$20$Type);
_.apply_0 = function apply_653(arg0){
  return $lambda$20_3(this.$$outer_0, this.from_1, this.start_2, this.to_3, arg0);
}
;
_.from_1 = 0;
_.to_3 = 0;
function SocialFeed$lambda$23$Type(res_0){
  this.res_0 = res_0;
}

defineClass(3313, $wnd.Function, $intern_22, SocialFeed$lambda$23$Type);
_.apply_0 = function apply_654(arg0){
  return this.res_0;
}
;
function SocialFeed$lambda$25$Type(){
}

defineClass(1028, 1, {}, SocialFeed$lambda$25$Type);
_.test_0 = function test_18(arg0){
  return $equals_0('application/vnd.peergos-post', $getFileProperties(castTo(castTo(arg0, 20).right, 19)).mimeType);
}
;
var Lpeergos_shared_social_SocialFeed$lambda$25$Type_2_classLit = createForClass('peergos.shared.social', 'SocialFeed/lambda$25$Type', 1028);
function SocialFeed$lambda$26$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3285, $wnd.Function, $intern_22, SocialFeed$lambda$26$Type);
_.apply_0 = function apply_655(arg0){
  return $lambda$26_1(this.$$outer_0, arg0);
}
;
function SocialFeed$lambda$28$Type(p_0){
  this.p_0 = p_0;
}

defineClass(3315, $wnd.Function, $intern_22, SocialFeed$lambda$28$Type);
_.apply_0 = function apply_656(arg0){
  return lambda$28(this.p_0, arg0);
}
;
function SocialFeed$lambda$29$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3286, $wnd.Function, $intern_22, SocialFeed$lambda$29$Type);
_.apply_0 = function apply_657(arg0){
  return $lambda$29(this.$$outer_0, arg0);
}
;
function SocialFeed$lambda$3$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3276, $wnd.Function, $intern_22, SocialFeed$lambda$3$Type);
_.apply_0 = function apply_658(arg0){
  return $lambda$3_10(this.$$outer_0, arg0);
}
;
function SocialFeed$lambda$30$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1029, 1, {}, SocialFeed$lambda$30$Type);
_.test_0 = function test_19(arg0){
  return $lambda$30_2(this.$$outer_0, arg0);
}
;
var Lpeergos_shared_social_SocialFeed$lambda$30$Type_2_classLit = createForClass('peergos.shared.social', 'SocialFeed/lambda$30$Type', 1029);
function SocialFeed$lambda$31$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3317, $wnd.Function, $intern_22, SocialFeed$lambda$31$Type);
_.apply_0 = function apply_659(arg0){
  return $lambda$31_2(this.$$outer_0, arg0);
}
;
function SocialFeed$lambda$33$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3316, $wnd.Function, $intern_22, SocialFeed$lambda$33$Type);
_.apply_0 = function apply_660(arg0){
  return $lambda$33_1(this.$$outer_0, arg0);
}
;
function SocialFeed$lambda$34$Type(items_0){
  this.items_0 = items_0;
}

defineClass(3287, $wnd.Function, $intern_22, SocialFeed$lambda$34$Type);
_.apply_0 = function apply_661(arg0){
  return this.items_0;
}
;
function SocialFeed$lambda$35$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3288, $wnd.Function, $intern_22, SocialFeed$lambda$35$Type);
_.apply_0 = function apply_662(arg0){
  return $lambda$35_2(this.$$outer_0, arg0);
}
;
function SocialFeed$lambda$36$Type(){
}

defineClass(3318, $wnd.Function, {}, SocialFeed$lambda$36$Type);
_.accept_5 = function accept_72(arg0){
}
;
function SocialFeed$lambda$37$Type($$outer_0, t_1){
  this.$$outer_0 = $$outer_0;
  this.t_1 = t_1;
}

defineClass(3319, $wnd.Function, $intern_22, SocialFeed$lambda$37$Type);
_.apply_0 = function apply_663(arg0){
  return $lambda$37_0(this.$$outer_0, this.t_1, arg0);
}
;
function SocialFeed$lambda$38$Type(t_0){
  this.t_0 = t_0;
}

defineClass(3320, $wnd.Function, $intern_22, SocialFeed$lambda$38$Type);
_.apply_0 = function apply_664(arg0){
  return lambda$38_0(this.t_0, arg0);
}
;
function SocialFeed$lambda$39$Type($$outer_0, parentPath_1){
  this.$$outer_0 = $$outer_0;
  this.parentPath_1 = parentPath_1;
}

defineClass(3289, $wnd.Function, $intern_22, SocialFeed$lambda$39$Type);
_.apply_0 = function apply_665(arg0){
  return $lambda$39_1(this.$$outer_0, this.parentPath_1, arg0);
}
;
function SocialFeed$lambda$4$Type(p_0){
  this.p_0 = p_0;
}

defineClass(3300, $wnd.Function, $intern_22, SocialFeed$lambda$4$Type);
_.apply_0 = function apply_666(arg0){
  return this.p_0;
}
;
function SocialFeed$lambda$40$Type($$outer_0, refs_1){
  this.$$outer_0 = $$outer_0;
  this.refs_1 = refs_1;
}

defineClass(3321, $wnd.Function, $intern_22, SocialFeed$lambda$40$Type);
_.apply_0 = function apply_667(arg0){
  return $lambda$40_2(this.$$outer_0, this.refs_1, arg0);
}
;
function SocialFeed$lambda$42$Type($$outer_0, refs_1, fopt_2){
  this.$$outer_0 = $$outer_0;
  this.refs_1 = refs_1;
  this.fopt_2 = fopt_2;
}

defineClass(3323, $wnd.Function, $intern_22, SocialFeed$lambda$42$Type);
_.apply_0 = function apply_668(arg0){
  return $lambda$42_0(this.$$outer_0, this.refs_1, this.fopt_2, arg0);
}
;
function SocialFeed$lambda$43$Type(){
}

defineClass(3324, $wnd.Function, {}, SocialFeed$lambda$43$Type);
_.accept_5 = function accept_73(arg0){
}
;
function SocialFeed$lambda$44$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3325, $wnd.Function, $intern_22, SocialFeed$lambda$44$Type);
_.apply_0 = function apply_669(arg0){
  return $lambda$44_2(this.$$outer_0, arg0);
}
;
function SocialFeed$lambda$45$Type(){
}

defineClass(3280, $wnd.Function, {}, SocialFeed$lambda$45$Type);
_.accept_5 = function accept_74(arg0){
}
;
function SocialFeed$lambda$46$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3281, $wnd.Function, $intern_22, SocialFeed$lambda$46$Type);
_.apply_0 = function apply_670(arg0){
  return $lambda$46_0(this.$$outer_0, arg0);
}
;
function SocialFeed$lambda$47$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1033, 1, {}, SocialFeed$lambda$47$Type);
_.apply_3 = function apply_671(arg0, arg1){
  return $lambda$47_0(this.$$outer_0, arg0, arg1);
}
;
var Lpeergos_shared_social_SocialFeed$lambda$47$Type_2_classLit = createForClass('peergos.shared.social', 'SocialFeed/lambda$47$Type', 1033);
function SocialFeed$lambda$48$Type($$outer_0, s_1){
  this.$$outer_0 = $$outer_0;
  this.s_1 = s_1;
}

defineClass(3326, $wnd.Function, $intern_22, SocialFeed$lambda$48$Type);
_.apply_0 = function apply_672(arg0){
  return $lambda$48_0(this.$$outer_0, this.s_1, arg0);
}
;
function SocialFeed$lambda$49$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3328, $wnd.Function, $intern_22, SocialFeed$lambda$49$Type);
_.apply_0 = function apply_673(arg0){
  return $lambda$49_1(this.$$outer_0, arg0);
}
;
function SocialFeed$lambda$5$Type($$outer_0, post_1, dir_2, uuid_3, raw_4){
  this.$$outer_0 = $$outer_0;
  this.post_1 = post_1;
  this.dir_2 = dir_2;
  this.uuid_3 = uuid_3;
  this.raw_4 = raw_4;
}

defineClass(3277, $wnd.Function, $intern_22, SocialFeed$lambda$5$Type);
_.apply_0 = function apply_674(arg0){
  return $lambda$5_7(this.$$outer_0, this.post_1, this.dir_2, this.uuid_3, this.raw_4, arg0);
}
;
function SocialFeed$lambda$50$Type(f_0){
  this.f_0 = f_0;
}

defineClass(3331, $wnd.Function, $intern_22, SocialFeed$lambda$50$Type);
_.apply_0 = function apply_675(arg0){
  return lambda$50_1(this.f_0, arg0);
}
;
function SocialFeed$lambda$51$Type(){
}

defineClass(3332, $wnd.Function, $intern_22, SocialFeed$lambda$51$Type);
_.apply_0 = function apply_676(arg0){
  return $clinit_Optional() , $clinit_Optional() , EMPTY;
}
;
function SocialFeed$lambda$52$Type(){
}

defineClass(3329, $wnd.Function, $intern_22, SocialFeed$lambda$52$Type);
_.apply_0 = function apply_677(arg0){
  return $reduce_1($map_0($flatMap_0(castTo(arg0, 17).stream(), makeLambdaFunction(SocialFeed$6methodref$stream$Type.prototype.apply_0, SocialFeed$6methodref$stream$Type, [])), makeLambdaFunction(SocialFeed$lambda$54$Type.prototype.apply_0, SocialFeed$lambda$54$Type, [])), new SocialFeed$lambda$55$Type);
}
;
function SocialFeed$lambda$54$Type(){
}

defineClass(3358, $wnd.Function, $intern_22, SocialFeed$lambda$54$Type);
_.apply_0 = function apply_678(arg0){
  return new Pair(new StreamImpl(null, new Spliterators$IteratorSpliterator(singleton(castTo(castTo(arg0, 20).left, 241)), 1)), castTo(castTo(arg0, 20).right, 43));
}
;
function SocialFeed$lambda$55$Type(){
}

defineClass(1030, 1, $intern_34, SocialFeed$lambda$55$Type);
_.apply_1 = function apply_679(arg0, arg1){
  return new Pair(concat(castTo(castTo(arg0, 20).left, 147), castTo(castTo(arg1, 20).left, 147)), $merge_3(castTo(castTo(arg0, 20).right, 43), castTo(castTo(arg1, 20).right, 43)));
}
;
var Lpeergos_shared_social_SocialFeed$lambda$55$Type_2_classLit = createForClass('peergos.shared.social', 'SocialFeed/lambda$55$Type', 1030);
function SocialFeed$lambda$56$Type(s_0){
  this.s_0 = s_0;
}

defineClass(3330, $wnd.Function, $intern_22, SocialFeed$lambda$56$Type);
_.apply_0 = function apply_680(arg0){
  return lambda$56_1(this.s_0, arg0);
}
;
function SocialFeed$lambda$57$Type(){
}

defineClass(3333, $wnd.Function, $intern_22, SocialFeed$lambda$57$Type);
_.apply_0 = function apply_681(arg0){
  return castTo(castTo(castTo(arg0, 20).left, 147).collect_0(of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47);
}
;
function SocialFeed$lambda$58$Type(){
}

defineClass(3334, $wnd.Function, $intern_22, SocialFeed$lambda$58$Type);
_.apply_0 = function apply_682(arg0){
  return castTo(castTo(arg0, 20).right, 43);
}
;
function SocialFeed$lambda$6$Type(){
}

defineClass(3301, $wnd.Function, {}, SocialFeed$lambda$6$Type);
_.accept_5 = function accept_75(arg0){
}
;
function SocialFeed$lambda$60$Type($$outer_0, c_1){
  this.$$outer_0 = $$outer_0;
  this.c_1 = c_1;
}

defineClass(3327, $wnd.Function, $intern_22, SocialFeed$lambda$60$Type);
_.apply_0 = function apply_683(arg0){
  return $lambda$60_0(this.$$outer_0, this.c_1, arg0);
}
;
function SocialFeed$lambda$61$Type($$outer_0, c_1){
  this.$$outer_0 = $$outer_0;
  this.c_1 = c_1;
}

defineClass(1031, 1, $intern_34, SocialFeed$lambda$61$Type);
_.apply_1 = function apply_684(arg0, arg1){
  return $lambda$61_0(this.$$outer_0, this.c_1, arg0, arg1);
}
;
var Lpeergos_shared_social_SocialFeed$lambda$61$Type_2_classLit = createForClass('peergos.shared.social', 'SocialFeed/lambda$61$Type', 1031);
function SocialFeed$lambda$62$Type(){
}

defineClass(1032, 1, $intern_34, SocialFeed$lambda$62$Type);
_.apply_1 = function apply_685(arg0, arg1){
  return castTo(arg1, 20);
}
;
var Lpeergos_shared_social_SocialFeed$lambda$62$Type_2_classLit = createForClass('peergos.shared.social', 'SocialFeed/lambda$62$Type', 1032);
function SocialFeed$lambda$63$Type(p_0){
  this.p_0 = p_0;
}

defineClass(3336, $wnd.Function, $intern_22, SocialFeed$lambda$63$Type);
_.apply_0 = function apply_686(arg0){
  return lambda$63_0(this.p_0, arg0);
}
;
function SocialFeed$lambda$64$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3290, $wnd.Function, $intern_22, SocialFeed$lambda$64$Type);
_.apply_0 = function apply_687(arg0){
  return $lambda$64_0(this.$$outer_0, arg0);
}
;
function SocialFeed$lambda$65$Type(friend_0, current_1, s_2, network_3){
  this.friend_0 = friend_0;
  this.current_1 = current_1;
  this.s_2 = s_2;
  this.network_3 = network_3;
}

defineClass(3291, $wnd.Function, $intern_22, SocialFeed$lambda$65$Type);
_.apply_0 = function apply_688(arg0){
  return lambda$65_1(this.friend_0, this.current_1, this.s_2, this.network_3, arg0);
}
;
function SocialFeed$lambda$66$Type(p_0, friend_1, current_2){
  this.p_0 = p_0;
  this.friend_1 = friend_1;
  this.current_2 = current_2;
}

defineClass(3337, $wnd.Function, $intern_22, SocialFeed$lambda$66$Type);
_.apply_0 = function apply_689(arg0){
  return lambda$66_0(this.p_0, this.friend_1, this.current_2, arg0);
}
;
function SocialFeed$lambda$67$Type(update_0){
  this.update_0 = update_0;
}

defineClass(3292, $wnd.Function, $intern_22, SocialFeed$lambda$67$Type);
_.apply_0 = function apply_690(arg0){
  return lambda$67(this.update_0, arg0);
}
;
function SocialFeed$lambda$7$Type(post_0, dir_1, uuid_2){
  this.post_0 = post_0;
  this.dir_1 = dir_1;
  this.uuid_2 = uuid_2;
}

defineClass(3302, $wnd.Function, $intern_22, SocialFeed$lambda$7$Type);
_.apply_0 = function apply_691(arg0){
  return lambda$7_4(this.post_0, this.dir_1, this.uuid_2, arg0);
}
;
function SocialFeed$lambda$71$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3293, $wnd.Function, $intern_22, SocialFeed$lambda$71$Type);
_.apply_0 = function apply_692(arg0){
  return this.$$outer_0;
}
;
function SocialFeed$lambda$72$Type($$outer_0, newItems_1){
  this.$$outer_0 = $$outer_0;
  this.newItems_1 = newItems_1;
}

defineClass(3295, $wnd.Function, $intern_22, SocialFeed$lambda$72$Type);
_.apply_0 = function apply_693(arg0){
  return $lambda$72_0(this.$$outer_0, this.newItems_1);
}
;
function SocialFeed$lambda$73$Type($$outer_0, data_1, newItems_2){
  this.$$outer_0 = $$outer_0;
  this.data_1 = data_1;
  this.newItems_2 = newItems_2;
}

defineClass(1035, 1, {}, SocialFeed$lambda$73$Type);
_.get_0 = function get_53(){
  return $appendToFeedAndCommitState(this.$$outer_0, this.data_1, this.newItems_2.size());
}
;
var Lpeergos_shared_social_SocialFeed$lambda$73$Type_2_classLit = createForClass('peergos.shared.social', 'SocialFeed/lambda$73$Type', 1035);
function SocialFeed$lambda$74$Type($$outer_0, data_1, newItems_2){
  this.$$outer_0 = $$outer_0;
  this.data_1 = data_1;
  this.newItems_2 = newItems_2;
}

defineClass(3338, $wnd.Function, $intern_22, SocialFeed$lambda$74$Type);
_.apply_0 = function apply_694(arg0){
  return $lambda$74_0(this.$$outer_0, this.data_1, this.newItems_2);
}
;
function SocialFeed$lambda$75$Type($$outer_0, data_1, newItems_2){
  this.$$outer_0 = $$outer_0;
  this.data_1 = data_1;
  this.newItems_2 = newItems_2;
}

defineClass(3341, $wnd.Function, $intern_22, SocialFeed$lambda$75$Type);
_.apply_0 = function apply_695(arg0){
  return $appendToFeedAndCommitState(this.$$outer_0, this.data_1, this.newItems_2.size());
}
;
function SocialFeed$lambda$76$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3339, $wnd.Function, $intern_22, SocialFeed$lambda$76$Type);
_.apply_0 = function apply_696(arg0){
  return this.$$outer_0;
}
;
function SocialFeed$lambda$77$Type($$outer_0, data_1, records_2){
  this.$$outer_0 = $$outer_0;
  this.data_1 = data_1;
  this.records_2 = records_2;
}

defineClass(1036, 1, {}, SocialFeed$lambda$77$Type);
_.apply_3 = function apply_697(arg0, arg1){
  return $lambda$77(this.$$outer_0, this.data_1, this.records_2, arg0, arg1);
}
;
_.records_2 = 0;
var Lpeergos_shared_social_SocialFeed$lambda$77$Type_2_classLit = createForClass('peergos.shared.social', 'SocialFeed/lambda$77$Type', 1036);
function SocialFeed$lambda$78$Type($$outer_0, c_1, data_2){
  this.$$outer_0 = $$outer_0;
  this.c_1 = c_1;
  this.data_2 = data_2;
}

defineClass(3342, $wnd.Function, $intern_22, SocialFeed$lambda$78$Type);
_.apply_0 = function apply_698(arg0){
  return $lambda$78(this.$$outer_0, this.c_1, this.data_2, arg0);
}
;
function SocialFeed$lambda$79$Type($$outer_0, updated_1, c_2, data_3){
  this.$$outer_0 = $$outer_0;
  this.updated_1 = updated_1;
  this.c_2 = c_2;
  this.data_3 = data_3;
}

defineClass(3344, $wnd.Function, $intern_22, SocialFeed$lambda$79$Type);
_.apply_0 = function apply_699(arg0){
  return $lambda$79_0(this.$$outer_0, this.updated_1, this.c_2, this.data_3, arg0);
}
;
function SocialFeed$lambda$8$Type($$outer_0, length_1, uuid_2, media_3, monitor_4){
  this.$$outer_0 = $$outer_0;
  this.length_1 = length_1;
  this.uuid_2 = uuid_2;
  this.media_3 = media_3;
  this.monitor_4 = monitor_4;
}

defineClass(3279, $wnd.Function, $intern_22, SocialFeed$lambda$8$Type);
_.apply_0 = function apply_700(arg0){
  return $lambda$8_3(this.$$outer_0, this.length_1, this.uuid_2, this.media_3, this.monitor_4, arg0);
}
;
_.length_1 = 0;
function SocialFeed$lambda$80$Type(){
}

defineClass(3345, $wnd.Function, {}, SocialFeed$lambda$80$Type);
_.accept_5 = function accept_76(arg0){
}
;
function SocialFeed$lambda$81$Type(){
}

defineClass(3346, $wnd.Function, {}, SocialFeed$lambda$81$Type);
_.accept_5 = function accept_77(arg0){
}
;
function SocialFeed$lambda$82$Type($$outer_0, records_1, data_2, c_3){
  this.$$outer_0 = $$outer_0;
  this.records_1 = records_1;
  this.data_2 = data_2;
  this.c_3 = c_3;
}

defineClass(3343, $wnd.Function, $intern_22, SocialFeed$lambda$82$Type);
_.apply_0 = function apply_701(arg0){
  return $lambda$82_0(this.$$outer_0, this.records_1, this.data_2, this.c_3, arg0);
}
;
_.records_1 = 0;
function SocialFeed$lambda$83$Type(){
}

defineClass(3347, $wnd.Function, {}, SocialFeed$lambda$83$Type);
_.accept_5 = function accept_78(arg0){
}
;
function SocialFeed$lambda$85$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1327, $wnd.Function, $intern_22, SocialFeed$lambda$85$Type);
_.apply_0 = function apply_702(arg0){
  return $lambda$85(this.$$outer_0, arg0);
}
;
function SocialFeed$lambda$86$Type($$outer_0, s_1){
  this.$$outer_0 = $$outer_0;
  this.s_1 = s_1;
}

defineClass(1328, $wnd.Function, $intern_22, SocialFeed$lambda$86$Type);
_.apply_0 = function apply_703(arg0){
  return $lambda$86_0(this.$$outer_0, this.s_1);
}
;
function SocialFeed$lambda$87$Type($$outer_0, s_1){
  this.$$outer_0 = $$outer_0;
  this.s_1 = s_1;
}

defineClass(3348, $wnd.Function, $intern_22, SocialFeed$lambda$87$Type);
_.apply_0 = function apply_704(arg0){
  return $lambda$87(this.$$outer_0, this.s_1, arg0);
}
;
function SocialFeed$lambda$88$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3340, $wnd.Function, $intern_22, SocialFeed$lambda$88$Type);
_.apply_0 = function apply_705(arg0){
  return $lambda$88(this.$$outer_0, arg0);
}
;
function SocialFeed$lambda$89$Type(dataDir_0, context_1){
  this.dataDir_0 = dataDir_0;
  this.context_1 = context_1;
}

defineClass(3297, $wnd.Function, $intern_22, SocialFeed$lambda$89$Type);
_.apply_0 = function apply_706(arg0){
  return lambda$89(this.dataDir_0, this.context_1, arg0);
}
;
function SocialFeed$lambda$9$Type($$outer_0, length_1, p_2, uuid_3, media_4){
  this.$$outer_0 = $$outer_0;
  this.length_1 = length_1;
  this.p_2 = p_2;
  this.uuid_3 = uuid_3;
  this.media_4 = media_4;
}

defineClass(3303, $wnd.Function, $intern_22, SocialFeed$lambda$9$Type);
_.apply_0 = function apply_707(arg0){
  return $lambda$9_6(this.$$outer_0, this.length_1, this.p_2, this.uuid_3, this.media_4, arg0);
}
;
_.length_1 = 0;
function SocialFeed$lambda$90$Type(){
}

defineClass(3349, $wnd.Function, $intern_22, SocialFeed$lambda$90$Type);
_.apply_0 = function apply_708(arg0){
  return fromCbor_68(deserialize(new CborDecoder(new ByteArrayInputStream(castTo(arg0, 11))), castTo(arg0, 11).length));
}
;
function SocialFeed$lambda$91$Type(dataDir_0, fopt_1, context_2){
  this.dataDir_0 = dataDir_0;
  this.fopt_1 = fopt_1;
  this.context_2 = context_2;
}

defineClass(3350, $wnd.Function, $intern_22, SocialFeed$lambda$91$Type);
_.apply_0 = function apply_709(arg0){
  return lambda$91_0(this.dataDir_0, this.fopt_1, this.context_2, arg0);
}
;
function SocialFeed$lambda$92$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3298, $wnd.Function, $intern_22, SocialFeed$lambda$92$Type);
_.apply_0 = function apply_710(arg0){
  return $lambda$92(this.$$outer_0, arg0);
}
;
function SocialFeed$lambda$93$Type($$outer_0, updatedDataDir_1){
  this.$$outer_0 = $$outer_0;
  this.updatedDataDir_1 = updatedDataDir_1;
}

defineClass(3351, $wnd.Function, $intern_22, SocialFeed$lambda$93$Type);
_.apply_0 = function apply_711(arg0){
  return $lambda$93(this.$$outer_0, this.updatedDataDir_1, arg0);
}
;
function SocialFeed$lambda$94$Type(updatedDataDir_0){
  this.updatedDataDir_0 = updatedDataDir_0;
}

defineClass(3352, $wnd.Function, $intern_22, SocialFeed$lambda$94$Type);
_.apply_0 = function apply_712(arg0){
  return lambda$94_0(this.updatedDataDir_0, arg0);
}
;
function SocialFeed$lambda$95$Type(c_0){
  this.c_0 = c_0;
}

defineClass(2168, $wnd.Function, $intern_22, SocialFeed$lambda$95$Type);
_.apply_0 = function apply_713(arg0){
  return lambda$95_0(this.c_0, arg0);
}
;
function SocialFeed$lambda$96$Type(c_0){
  this.c_0 = c_0;
}

defineClass(2169, $wnd.Function, $intern_22, SocialFeed$lambda$96$Type);
_.apply_0 = function apply_714(arg0){
  return lambda$96_0(this.c_0, arg0);
}
;
function SocialFeed$lambda$97$Type(feedDir_0, empty_1, c_2){
  this.feedDir_0 = feedDir_0;
  this.empty_1 = empty_1;
  this.c_2 = c_2;
}

defineClass(3353, $wnd.Function, $intern_22, SocialFeed$lambda$97$Type);
_.apply_0 = function apply_715(arg0){
  return lambda$97(this.feedDir_0, this.empty_1, this.c_2, arg0);
}
;
function $addComments(this$static, newComments){
  var comment, comment$iterator, updatedComments;
  updatedComments = new ArrayList_1(this$static.comments);
  for (comment$iterator = newComments.iterator(); comment$iterator.hasNext_0();) {
    comment = castTo(comment$iterator.next_1(), 177);
    $indexOf_1(updatedComments, comment, 0) != -1 || (updatedComments.array[updatedComments.array.length] = comment , true);
  }
  return new SocialPost(this$static.author, this$static.body, this$static.postTime, this$static.shareTo, this$static.parent, this$static.previousVersions, updatedComments);
}

function $toCbor_57(this$static){
  var state, transformed, withMimeType;
  state = new TreeMap;
  $put_6(state, 'a', new CborObject$CborString(this$static.author));
  $put_6(state, 'b', new CborObject$CborList(this$static.body));
  $put_6(state, 't', new CborObject$CborLong($toEpochSecond(this$static.postTime, ($clinit_ZoneOffset() , UTC_0))));
  $put_6(state, 's', new CborObject$CborString($name(this$static.shareTo)));
  $ifPresent(this$static.parent, new SocialPost$lambda$1$Type(state));
  this$static.previousVersions.isEmpty() || $put_6(state, 'v', new CborObject$CborList(this$static.previousVersions));
  this$static.comments.isEmpty() || $put_6(state, 'd', new CborObject$CborList(this$static.comments));
  withMimeType = new ArrayList;
  $add(withMimeType, new CborObject$CborLong(17));
  $add(withMimeType, (transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed)));
  return new CborObject$CborList(withMimeType);
}

function SocialPost(author, body_0, postTime, shareTo, parent_0, previousVersions, comments){
  this.author = author;
  this.body = body_0;
  this.postTime = postTime;
  this.shareTo = shareTo;
  this.parent = parent_0;
  this.previousVersions = previousVersions;
  this.comments = comments;
}

function createComment(parent_0, fromParent, author, body_0){
  return new SocialPost(author, body_0, ($clinit_LocalDateTime() , now_4()), fromParent, ($clinit_Optional() , new Optional(checkCriticalNotNull(parent_0))), ($clinit_Collections() , $clinit_Collections() , EMPTY_LIST), (null , EMPTY_LIST));
}

function createInitialPost(author, body_0, resharing){
  return new SocialPost(author, body_0, ($clinit_LocalDateTime() , now_4()), resharing, ($clinit_Optional() , $clinit_Optional() , EMPTY), ($clinit_Collections() , $clinit_Collections() , EMPTY_LIST), (null , EMPTY_LIST));
}

function fromCbor_69(cbor){
  var author, body_0, comments, m, mimeType, parent_0, postTime, previousVersions, shareTo, withMimeType;
  if (!instanceOf(cbor, 21))
    throw toJs(new IllegalStateException_0('Invalid cbor! ' + cbor));
  withMimeType = castTo(cbor, 21);
  mimeType = castTo(withMimeType.value_0.getAtIndex(0), 29).value_0;
  if (compare_1(mimeType, 17) != 0)
    throw toJs(new IllegalStateException_0('Invalid mimetype for SocialPost: ' + toString_4(mimeType)));
  m = castTo($get_11(withMimeType, 1, makeLambdaFunction(SocialPost$lambda$2$Type.prototype.apply_0, SocialPost$lambda$2$Type, [])), 18);
  author = castTo(castTo($get_0(m.values_0, new CborObject$CborString('a')), 7), 13).value_0;
  body_0 = $getList(m, 'b', makeLambdaFunction(SocialPost$1methodref$fromCbor$Type.prototype.apply_0, SocialPost$1methodref$fromCbor$Type, []));
  postTime = castTo($get_13(m, 't', makeLambdaFunction(SocialPost$lambda$4$Type.prototype.apply_0, SocialPost$lambda$4$Type, [])), 201);
  shareTo = valueOf_12(castTo(castTo($get_0(m.values_0, new CborObject$CborString('s')), 7), 13).value_0);
  parent_0 = $getOptional(m, 'p', makeLambdaFunction(SocialPost$2methodref$fromCbor$Type.prototype.apply_0, SocialPost$2methodref$fromCbor$Type, []));
  previousVersions = $getList(m, 'v', makeLambdaFunction(SocialPost$3methodref$fromCbor$Type.prototype.apply_0, SocialPost$3methodref$fromCbor$Type, []));
  comments = $getList(m, 'd', makeLambdaFunction(SocialPost$4methodref$fromCbor$Type.prototype.apply_0, SocialPost$4methodref$fromCbor$Type, []));
  return new SocialPost(author, body_0, postTime, shareTo, parent_0, previousVersions, comments);
}

defineClass(178, 1, {7:1, 178:1}, SocialPost);
_.serialize = function serialize_85(){
  return $toByteArray_2($toCbor_57(this));
}
;
_.addComment = function addComment(comment){
  var updatedComments;
  updatedComments = new ArrayList_1(this.comments);
  this.comments.contains(comment) || (updatedComments.array[updatedComments.array.length] = comment , true);
  return new SocialPost(this.author, this.body, this.postTime, this.shareTo, this.parent, this.previousVersions, updatedComments);
}
;
_.addComments = function addComments(newComments){
  return $addComments(this, newComments);
}
;
_.contentHash = function contentHash_0(h){
  return $bareHash(h, $toByteArray_2($toCbor_57(new SocialPost(this.author, this.body, this.postTime, this.shareTo, this.parent, this.previousVersions, ($clinit_Collections() , $clinit_Collections() , EMPTY_LIST)))));
}
;
_.edit = function edit(body_0, postTime){
  var versions;
  versions = new ArrayList_1(this.previousVersions);
  versions.array[versions.array.length] = this;
  return new SocialPost(this.author, body_0, postTime, this.shareTo, this.parent, versions, this.comments);
}
;
_.references = function references(){
  return castTo($collect_0($flatMap_0(this.body.stream(), makeLambdaFunction(SocialPost$lambda$0$Type.prototype.apply_0, SocialPost$lambda$0$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
}
;
_.toCbor = function toCbor_83(){
  return $toCbor_57(this);
}
;
var Lpeergos_shared_social_SocialPost_2_classLit = createForClass('peergos.shared.social', 'SocialPost', 178);
function SocialPost$1methodref$fromCbor$Type(){
}

defineClass(2889, $wnd.Function, $intern_22, SocialPost$1methodref$fromCbor$Type);
_.apply_0 = function apply_716(arg0){
  return fromCbor_26(castTo(arg0, 7));
}
;
function SocialPost$2methodref$fromCbor$Type(){
}

defineClass(2891, $wnd.Function, $intern_22, SocialPost$2methodref$fromCbor$Type);
_.apply_0 = function apply_717(arg0){
  return fromCbor_27(castTo(arg0, 7));
}
;
function SocialPost$3methodref$fromCbor$Type(){
}

defineClass(2892, $wnd.Function, $intern_22, SocialPost$3methodref$fromCbor$Type);
_.apply_0 = function apply_718(arg0){
  return fromCbor_69(castTo(arg0, 7));
}
;
function SocialPost$4methodref$fromCbor$Type(){
}

defineClass(2893, $wnd.Function, $intern_22, SocialPost$4methodref$fromCbor$Type);
_.apply_0 = function apply_719(arg0){
  return fromCbor_27(castTo(arg0, 7));
}
;
function $toCbor_58(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'p', new CborObject$CborString(this$static.path));
  $put_6(state, 'c', this$static.cap);
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function SocialPost$MutableRef(path, cap){
  this.path = path;
  this.cap = cap;
}

defineClass(476, 1, {7:1, 476:1}, SocialPost$MutableRef);
_.serialize = function serialize_86(){
  return $toByteArray_2($toCbor_58(this));
}
;
_.equals_0 = function equals_84(o){
  var that;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_social_SocialPost$MutableRef_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 476);
  return $equals_0(this.path, that.path) && $equals_24(this.cap, that.cap);
}
;
_.hashCode_1 = function hashCode_82(){
  return hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.path, this.cap]));
}
;
_.toCbor = function toCbor_84(){
  return $toCbor_58(this);
}
;
var Lpeergos_shared_social_SocialPost$MutableRef_2_classLit = createForClass('peergos.shared.social', 'SocialPost/MutableRef', 476);
function $clinit_SocialPost$Resharing(){
  $clinit_SocialPost$Resharing = emptyMethod;
  Author = new SocialPost$Resharing('Author', 0);
  Friends = new SocialPost$Resharing('Friends', 1);
  Followers = new SocialPost$Resharing('Followers', 2);
  Public = new SocialPost$Resharing('Public', 3);
}

function SocialPost$Resharing(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function valueOf_12(name_0){
  $clinit_SocialPost$Resharing();
  return valueOf_0(($clinit_SocialPost$Resharing$Map() , $MAP_3), name_0);
}

function values_15(){
  $clinit_SocialPost$Resharing();
  return stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_social_SocialPost$Resharing_2_classLit, 1), $intern_33, 251, 0, [Author, Friends, Followers, Public]);
}

defineClass(251, 52, {4:1, 57:1, 52:1, 251:1}, SocialPost$Resharing);
var Author, Followers, Friends, Public;
var Lpeergos_shared_social_SocialPost$Resharing_2_classLit = createForEnum('peergos.shared.social', 'SocialPost/Resharing', 251, values_15);
function $clinit_SocialPost$Resharing$Map(){
  $clinit_SocialPost$Resharing$Map = emptyMethod;
  $MAP_3 = createValueOfMap(($clinit_SocialPost$Resharing() , stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_social_SocialPost$Resharing_2_classLit, 1), $intern_33, 251, 0, [Author, Friends, Followers, Public])));
}

var $MAP_3;
function SocialPost$lambda$0$Type(){
}

defineClass(2887, $wnd.Function, $intern_22, SocialPost$lambda$0$Type);
_.apply_0 = function apply_720(arg0){
  return $stream(castTo(arg0, 448).reference());
}
;
function SocialPost$lambda$1$Type(state_0){
  this.state_0 = state_0;
}

defineClass(908, 1, $intern_32, SocialPost$lambda$1$Type);
_.accept = function accept_79(arg0){
  $put_6(this.state_0, 'p', castTo(arg0, 177));
}
;
_.andThen = function andThen_35(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_social_SocialPost$lambda$1$Type_2_classLit = createForClass('peergos.shared.social', 'SocialPost/lambda$1$Type', 908);
function SocialPost$lambda$2$Type(){
}

defineClass(2888, $wnd.Function, $intern_22, SocialPost$lambda$2$Type);
_.apply_0 = function apply_721(arg0){
  return castTo(castTo(arg0, 7), 18);
}
;
function SocialPost$lambda$4$Type(){
}

defineClass(2890, $wnd.Function, $intern_22, SocialPost$lambda$4$Type);
_.apply_0 = function apply_722(arg0){
  return ofEpochSecond(castTo(castTo(arg0, 7), 29).value_0, 0, ($clinit_ZoneOffset() , UTC_0));
}
;
function $toCbor_59(this$static){
  var props, transformed;
  props = new TreeMap;
  $put_6(props, 'w', new CborObject$CborBoolean(this$static.directWrites));
  $put_6(props, 'pr', new CborObject$CborBoolean(this$static.publicReads));
  $put_6(props, 'ar', new CborObject$CborBoolean(this$static.authedReads));
  $ifPresent(this$static.basePublicReadUrl, new BlockStoreProperties$lambda$0$Type(props));
  $ifPresent(this$static.baseAuthedUrl, new BlockStoreProperties$lambda$1$Type(props));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(props), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function BlockStoreProperties(directWrites, publicReads, authedReads, basePublicReadUrl, baseAuthedUrl){
  this.directWrites = directWrites;
  this.publicReads = publicReads;
  this.authedReads = authedReads;
  this.basePublicReadUrl = basePublicReadUrl;
  this.baseAuthedUrl = baseAuthedUrl;
}

function fromCbor_70(cbor){
  var authedReads, baseAuthed, basePublic, directWrites, map_0, publicReads, val, val0, val1;
  map_0 = castTo(cbor, 18);
  basePublic = $getOptional(map_0, 'b', makeLambdaFunction(BlockStoreProperties$lambda$2$Type.prototype.apply_0, BlockStoreProperties$lambda$2$Type, []));
  baseAuthed = $getOptional(map_0, 'ba', makeLambdaFunction(BlockStoreProperties$lambda$3$Type.prototype.apply_0, BlockStoreProperties$lambda$3$Type, []));
  directWrites = (val0 = castTo(castTo($get_0(map_0.values_0, new CborObject$CborString('w')), 7), 63) , !!val0 && val0.value_0);
  publicReads = (val1 = castTo(castTo($get_0(map_0.values_0, new CborObject$CborString('pr')), 7), 63) , !!val1 && val1.value_0);
  authedReads = (val = castTo(castTo($get_0(map_0.values_0, new CborObject$CborString('ar')), 7), 63) , !!val && val.value_0);
  return new BlockStoreProperties(directWrites, publicReads, authedReads, basePublic, baseAuthed);
}

defineClass(202, 1, {7:1, 202:1}, BlockStoreProperties);
_.serialize = function serialize_87(){
  return $toByteArray_2($toCbor_59(this));
}
;
_.toCbor = function toCbor_85(){
  return $toCbor_59(this);
}
;
_.authedReads = false;
_.directWrites = false;
_.publicReads = false;
var Lpeergos_shared_storage_BlockStoreProperties_2_classLit = createForClass('peergos.shared.storage', 'BlockStoreProperties', 202);
function BlockStoreProperties$lambda$0$Type(props_0){
  this.props_0 = props_0;
}

defineClass(642, 1, $intern_32, BlockStoreProperties$lambda$0$Type);
_.accept = function accept_80(arg0){
  $put_6(this.props_0, 'b', new CborObject$CborString(castToString(arg0)));
}
;
_.andThen = function andThen_36(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_storage_BlockStoreProperties$lambda$0$Type_2_classLit = createForClass('peergos.shared.storage', 'BlockStoreProperties/lambda$0$Type', 642);
function BlockStoreProperties$lambda$1$Type(props_0){
  this.props_0 = props_0;
}

defineClass(643, 1, $intern_32, BlockStoreProperties$lambda$1$Type);
_.accept = function accept_81(arg0){
  $put_6(this.props_0, 'ba', new CborObject$CborString(castToString(arg0)));
}
;
_.andThen = function andThen_37(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_storage_BlockStoreProperties$lambda$1$Type_2_classLit = createForClass('peergos.shared.storage', 'BlockStoreProperties/lambda$1$Type', 643);
function BlockStoreProperties$lambda$2$Type(){
}

defineClass(1684, $wnd.Function, $intern_22, BlockStoreProperties$lambda$2$Type);
_.apply_0 = function apply_723(arg0){
  return castTo(castTo(arg0, 7), 13).value_0;
}
;
function BlockStoreProperties$lambda$3$Type(){
}

defineClass(1685, $wnd.Function, $intern_22, BlockStoreProperties$lambda$3$Type);
_.apply_0 = function apply_724(arg0){
  return castTo(castTo(arg0, 7), 13).value_0;
}
;
function $put_14(this$static, owner, writer, signature, block, tid){
  return $thenApply(this$static.put_1(owner, writer, ($clinit_Collections() , new Collections$SingletonList(signature)), new Collections$SingletonList(block), tid), makeLambdaFunction(ContentAddressedStorage$lambda$1$Type.prototype.apply_0, ContentAddressedStorage$lambda$1$Type, []));
}

function DelegatingStorage(target){
  this.target_0 = target;
}

defineClass(361, 1, {});
_.getChampLookup_0 = function getChampLookup_2(owner, root, champKey, bat, committedRoot, hasher){
  var cache;
  return cache = new CachingStorage(this) , $thenApply($thenApply($thenApply($thenCompose(create_4(owner, root, makeLambdaFunction(ContentAddressedStorage$lambda$3$Type.prototype.apply_0, ContentAddressedStorage$lambda$3$Type, []), cache, hasher, makeLambdaFunction(ContentAddressedStorage$lambda$4$Type.prototype.apply_0, ContentAddressedStorage$lambda$4$Type, [])), makeLambdaFunction(ContentAddressedStorage$lambda$5$Type.prototype.apply_0, ContentAddressedStorage$lambda$5$Type, [champKey])), makeLambdaFunction(ContentAddressedStorage$lambda$6$Type.prototype.apply_0, ContentAddressedStorage$lambda$6$Type, [])), makeLambdaFunction(ContentAddressedStorage$lambda$9$Type.prototype.apply_0, ContentAddressedStorage$lambda$9$Type, [cache, owner, bat])), makeLambdaFunction(ContentAddressedStorage$lambda$10$Type.prototype.apply_0, ContentAddressedStorage$lambda$10$Type, [cache]));
}
;
_.getSigningKey = function getSigningKey_0(owner, hash){
  return $thenApply(hash.type == ($clinit_Multihash$Type() , id_3)?new CompletableFuture_0(($clinit_Optional() , new Optional(checkCriticalNotNull(fromByteArray(copyOfRange(hash.hash_0, 0, hash.hash_0.length)))))):this.get_1(owner, hash.target, ($clinit_Optional() , $clinit_Optional() , EMPTY)), makeLambdaFunction(ContentAddressedStorage$lambda$13$Type.prototype.apply_0, ContentAddressedStorage$lambda$13$Type, []));
}
;
_.put_0 = function put_10(owner, writer, block, hasher, tid){
  return $thenCompose(hasher.scriptJS.sha256(block), makeLambdaFunction(ContentAddressedStorage$lambda$0$Type.prototype.apply_0, ContentAddressedStorage$lambda$0$Type, [this, owner, writer, block, tid]));
}
;
_.put_2 = function put_12(owner, writer, signature, block, tid){
  return $put_14(this, owner, writer, signature, block, tid);
}
;
_.putBoxingKey = function putBoxingKey_0(owner, signature, key, tid){
  return $putBoxingKey(this, owner, signature, key, tid);
}
;
_.putSigningKey = function putSigningKey_1(signature, owner, newKey, tid){
  return new CompletableFuture_0(new PublicKeyHash(new Cid(1, ($clinit_Cid$Codec() , DagCbor), ($clinit_Multihash$Type() , id_3), $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborLong(($clinit_PublicSigningKey$Type() , Ed25519).value), new CborObject$CborByteArray(newKey.publicKey)])))))));
}
;
_.putSigningKey_0 = function putSigningKey_2(signature, owner, writer, newKey, tid){
  return new CompletableFuture_0(new PublicKeyHash(new Cid(1, ($clinit_Cid$Codec() , DagCbor), ($clinit_Multihash$Type() , id_3), $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborLong(($clinit_PublicSigningKey$Type() , Ed25519).value), new CborObject$CborByteArray(newKey.publicKey)])))))));
}
;
_.blockStoreProperties = function blockStoreProperties_1(){
  return this.target_0.blockStoreProperties();
}
;
_.clearBlockCache = function clearBlockCache_0(){
  this.target_0.clearBlockCache();
}
;
_.closeTransaction = function closeTransaction_0(owner, tid){
  return this.target_0.closeTransaction(owner, tid);
}
;
_.downloadFragments = function downloadFragments_1(owner, hashes, bats, h, monitor, spaceIncreaseFactor){
  return this.target_0.downloadFragments(owner, hashes, bats, h, monitor, spaceIncreaseFactor);
}
;
_.get_1 = function get_54(owner, hash, bat){
  return this.target_0.get_1(owner, hash, bat);
}
;
_.getChampLookup = function getChampLookup_1(owner, root, champKey, bat, committedRoot){
  return this.target_0.getChampLookup(owner, root, champKey, bat, committedRoot);
}
;
_.getRaw = function getRaw_0(owner, hash, bat){
  return this.target_0.getRaw(owner, hash, bat);
}
;
_.id_1 = function id_4(){
  return this.target_0.id_1();
}
;
_.put_1 = function put_11(owner, writer, signedHashes, blocks, tid){
  return this.target_0.put_1(owner, writer, signedHashes, blocks, tid);
}
;
_.putRaw = function putRaw_0(owner, writer, signatures, blocks, tid, progressCounter){
  return this.target_0.putRaw(owner, writer, signatures, blocks, tid, progressCounter);
}
;
_.startTransaction = function startTransaction_0(owner){
  return this.target_0.startTransaction(owner);
}
;
var Lpeergos_shared_storage_DelegatingStorage_2_classLit = createForClass('peergos.shared.storage', 'DelegatingStorage', 361);
function $clone(this$static){
  return new BufferedStorage(this$static.target, this$static.hasher);
}

function $commit_2(this$static, owner, writer, tid){
  var batches, cborBatches, cborCount, count, e, e$iterator, forWriter, rawBatches, rawcount, toRemove, val, val$iterator;
  forWriter = new ArrayList;
  toRemove = new HashSet;
  for (e$iterator = new LinkedHashMap$EntrySet$EntryIterator(new LinkedHashMap$EntrySet(this$static.storage)); e$iterator.next_0 != e$iterator.this$11.this$01.head;) {
    e = $next_3(e$iterator);
    if (!equals_28(castTo(e.value_0, 109).writer, writer))
      continue;
    $add(forWriter, castTo(e.value_0, 109));
    $add_1(toRemove, castTo(e.key, 44));
  }
  $forEach(toRemove, new BufferedStorage$3methodref$remove$Type(this$static.storage));
  cborBatches = new ArrayList;
  rawBatches = new ArrayList;
  cborCount = 0;
  rawcount = 0;
  cborBatches.array.length != 0 && !castTo($get_1(cborBatches, cborBatches.array.length - 1), 17).isEmpty() && $add(cborBatches, new ArrayList);
  rawBatches.array.length != 0 && !castTo($get_1(rawBatches, rawBatches.array.length - 1), 17).isEmpty() && $add(rawBatches, new ArrayList);
  for (val$iterator = new ArrayList$1(forWriter); val$iterator.i < val$iterator.this$01.array.length;) {
    val = castTo($next_0(val$iterator), 109);
    batches = val.isRaw?rawBatches:cborBatches;
    count = val.isRaw?rawcount:cborCount;
    count % 50 == 0 && $add(batches, new ArrayList);
    castTo($get_1(batches, batches.array.length - 1), 17).add(val);
    count = (count + 1) % 50;
    val.isRaw?(rawcount = count):(cborCount = count);
  }
  return $thenApply($thenCompose(combineAllInOrder(castTo($collect_0($map_0($filter(new StreamImpl(null, new Spliterators$IteratorSpliterator(rawBatches, 16)), new BufferedStorage$lambda$26$Type), makeLambdaFunction(BufferedStorage$lambda$27$Type.prototype.apply_0, BufferedStorage$lambda$27$Type, [this$static, owner, writer, tid])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 54)), makeLambdaFunction(BufferedStorage$lambda$34$Type.prototype.apply_0, BufferedStorage$lambda$34$Type, [this$static, owner, writer, tid, cborBatches])), makeLambdaFunction(BufferedStorage$lambda$39$Type.prototype.apply_0, BufferedStorage$lambda$39$Type, []));
}

function $gc(this$static, roots){
  var all, i, i0, reachable, root, root$iterator;
  all = new ArrayList_1(new AbstractMap$1(this$static.storage));
  reachable = new ArrayList;
  for (i0 = 0; i0 < all.array.length; i0++)
    $add(reachable, ($clinit_Boolean() , false));
  for (root$iterator = roots.iterator(); root$iterator.hasNext_0();) {
    root = castTo(root$iterator.next_1(), 44);
    markReachable(root, reachable, all, this$static.storage);
  }
  for (i = 0; i < all.array.length; i++) {
    $booleanValue((checkCriticalElementIndex(i, reachable.array.length) , castToBoolean(reachable.array[i]))) || $remove_7(this$static.storage, (checkCriticalElementIndex(i, all.array.length) , all.array[i]));
  }
}

function $getAllWriterData(this$static, updates){
  return castTo($collect_0($map_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(updates, 16)), makeLambdaFunction(BufferedStorage$lambda$23$Type.prototype.apply_0, BufferedStorage$lambda$23$Type, [this$static])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
}

function $getChampLookup(this$static, owner, root, champKey, bat, committedRoot, hasher){
  var cache;
  cache = new CachingStorage(new LocalOnlyStorage(new BufferedStorage$1(this$static), new BufferedStorage$lambda$2$Type(this$static, owner, champKey, bat, committedRoot, root), hasher));
  return $thenApply($thenApply($thenApply($thenCompose(create_4(owner, root, makeLambdaFunction(BufferedStorage$lambda$7$Type.prototype.apply_0, BufferedStorage$lambda$7$Type, []), cache, hasher, makeLambdaFunction(BufferedStorage$lambda$8$Type.prototype.apply_0, BufferedStorage$lambda$8$Type, [])), makeLambdaFunction(BufferedStorage$lambda$9$Type.prototype.apply_0, BufferedStorage$lambda$9$Type, [champKey])), makeLambdaFunction(BufferedStorage$lambda$10$Type.prototype.apply_0, BufferedStorage$lambda$10$Type, [])), makeLambdaFunction(BufferedStorage$lambda$13$Type.prototype.apply_0, BufferedStorage$lambda$13$Type, [cache, owner, bat])), makeLambdaFunction(BufferedStorage$lambda$14$Type.prototype.apply_0, BufferedStorage$lambda$14$Type, [cache]));
}

function $getRaw(this$static, owner, hash, bat){
  var local;
  local = castTo($get_5(this$static.storage, hash), 109);
  if (local)
    return new CompletableFuture_0(($clinit_Optional() , new Optional(checkCriticalNotNull(local.block))));
  return this$static.target.getRaw(owner, hash, bat);
}

function $hashToCid(this$static, input_0, isRaw){
  return $hash(this$static.hasher, input_0, isRaw);
}

function $lambda$0_18(this$static, owner_1, root_2, champKey_3, bat_4, committedRoot_5){
  return $getChampLookup(this$static, owner_1, root_2, champKey_3, bat_4, committedRoot_5, this$static.hasher);
}

function $lambda$1_13(this$static, owner_1, root_2, champKey_3, bat_4, committedRoot_5){
  return this$static.target.getChampLookup(owner_1, root_2, champKey_3, bat_4, committedRoot_5);
}

function $lambda$15_4(this$static, writer_1, signatures_2, blocks_3, isRaw_4, progressConsumer_5, i_5){
  return $thenApply($hashToCid(this$static, castTo(blocks_3.getAtIndex(i_5), 11), isRaw_4), makeLambdaFunction(BufferedStorage$lambda$16$Type.prototype.apply_0, BufferedStorage$lambda$16$Type, [this$static, writer_1, signatures_2, i_5, blocks_3, isRaw_4, progressConsumer_5]));
}

function $lambda$16_6(this$static, writer_1, signatures_2, i_3, blocks_4, isRaw_5, progressConsumer_6, cid_6){
  return $put_16(this$static, cid_6, new OpLog$BlockWrite(writer_1, castTo(signatures_2.getAtIndex(i_3), 11), castTo(blocks_4.getAtIndex(i_3), 11), isRaw_5, progressConsumer_6));
}

function $lambda$2_10(this$static, owner_1, champKey_2, bat_3, committedRoot_4, root_5){
  return committedRoot_4.ref != null?$thenCompose($thenApply($thenApply($getRaw(this$static, owner_1, (checkCriticalElement(committedRoot_4.ref != null) , castTo(committedRoot_4.ref, 44)), ($clinit_Optional() , $clinit_Optional() , EMPTY)), makeLambdaFunction(BufferedStorage$lambda$17$Type.prototype.apply_0, BufferedStorage$lambda$17$Type, [])), makeLambdaFunction(BufferedStorage$lambda$3$Type.prototype.apply_0, BufferedStorage$lambda$3$Type, [])), makeLambdaFunction(BufferedStorage$lambda$6$Type.prototype.apply_0, BufferedStorage$lambda$6$Type, [this$static, owner_1, champKey_2, bat_3])):this$static.target.getChampLookup(owner_1, root_5, champKey_2, bat_3, ($clinit_Optional() , $clinit_Optional() , EMPTY));
}

function $lambda$23_2(this$static, u_0){
  return new Pair(u_0, $map_1(u_0.currentHash, makeLambdaFunction(BufferedStorage$lambda$24$Type.prototype.apply_0, BufferedStorage$lambda$24$Type, [this$static, u_0])));
}

function $lambda$24_1(this$static, u_1, h_1){
  return new CommittedWriterData(u_1.currentHash, fromCbor_98(fromByteArray(castTo($get_5(this$static.storage, h_1), 109).block)), u_1.currentSequence);
}

function $lambda$27_0(this$static, owner_1, writer_2, tid_3, batch_3){
  return $thenApply(this$static.target.putRaw(owner_1, writer_2, castTo($collect_0($map_0(batch_3.stream(), makeLambdaFunction(BufferedStorage$lambda$28$Type.prototype.apply_0, BufferedStorage$lambda$28$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17), castTo($collect_0($map_0(batch_3.stream(), makeLambdaFunction(BufferedStorage$lambda$29$Type.prototype.apply_0, BufferedStorage$lambda$29$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [IDENTITY_FINISH]))), 17), tid_3, makeLambdaFunction(BufferedStorage$lambda$30$Type.prototype.accept_5, BufferedStorage$lambda$30$Type, [])), makeLambdaFunction(BufferedStorage$lambda$31$Type.prototype.apply_0, BufferedStorage$lambda$31$Type, [batch_3]));
}

function $lambda$34_1(this$static, owner_1, writer_2, tid_3, cborBatches_4){
  return combineAllInOrder(castTo($collect_0($map_0($filter(new StreamImpl(null, new Spliterators$IteratorSpliterator(cborBatches_4, 16)), new BufferedStorage$lambda$35$Type), makeLambdaFunction(BufferedStorage$lambda$36$Type.prototype.apply_0, BufferedStorage$lambda$36$Type, [this$static, owner_1, writer_2, tid_3])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 54));
}

function $lambda$36_1(this$static, owner_1, writer_2, tid_3, batch_3){
  return this$static.target.put_1(owner_1, writer_2, castTo($collect_0($map_0(batch_3.stream(), makeLambdaFunction(BufferedStorage$lambda$37$Type.prototype.apply_0, BufferedStorage$lambda$37$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17), castTo($collect_0($map_0(batch_3.stream(), makeLambdaFunction(BufferedStorage$lambda$38$Type.prototype.apply_0, BufferedStorage$lambda$38$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [IDENTITY_FINISH]))), 17), tid_3);
}

function $lambda$6_7(this$static, owner_1, champKey_2, bat_3, champRoot_3){
  return this$static.target.getChampLookup(owner_1, (checkCriticalElement(champRoot_3.ref != null) , castTo(champRoot_3.ref, 44)), champKey_2, bat_3, ($clinit_Optional() , $clinit_Optional() , EMPTY));
}

function $put_15(this$static, writer, blocks, signatures, isRaw, progressConsumer){
  return combineAllInOrder(castTo(range_0(0, blocks.size()).mapToObj(new BufferedStorage$lambda$15$Type(this$static, writer, signatures, blocks, isRaw, progressConsumer)).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 54));
}

function $put_16(this$static, cid, block){
  $put_5(this$static.storage, cid, block);
  return cid;
}

function $signBlocks(this$static, writers){
  $putAll(this$static.storage, castTo($collect_0($map_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new LinkedHashMap$EntrySet(this$static.storage), 1)), makeLambdaFunction(BufferedStorage$lambda$20$Type.prototype.apply_0, BufferedStorage$lambda$20$Type, [writers])), toMap(makeLambdaFunction(BufferedStorage$lambda$21$Type.prototype.apply_0, BufferedStorage$lambda$21$Type, []), makeLambdaFunction(BufferedStorage$lambda$22$Type.prototype.apply_0, BufferedStorage$lambda$22$Type, []), new Collectors$lambda$44$Type, new Collectors$22methodref$ctor$Type)), 68));
  return new CompletableFuture_0(($clinit_Boolean() , true));
}

function $withStorage(this$static, modifiedStorage){
  return new BufferedStorage($apply_2(modifiedStorage, this$static.target), this$static.hasher);
}

function BufferedStorage(target, hasher){
  this.target_0 = target;
  this.storage = new LinkedHashMap;
  if (instanceOf(target, 279))
    throw toJs(new IllegalStateException_0('Nested BufferedStorage!'));
  this.target = target;
  this.hasher = hasher;
}

function lambda$13_1(cache_0, owner_1, bat_2, btreeValue_3){
  if (btreeValue_3.hash_0)
    return $get_18(cache_0, owner_1, castTo($get_9(btreeValue_3), 44), bat_2);
  return $clinit_Optional() , $clinit_Optional() , EMPTY;
}

function lambda$20_0(writers_0, e_1){
  var block;
  block = castTo(e_1.getValue(), 109);
  return new Pair(castTo(e_1.getKey(), 44), new OpLog$BlockWrite(block.writer, block.signature.length > 0?block.signature:$signMessage(castTo($get(writers_0, block.writer), 105).secret, $getHash(castTo(e_1.getKey(), 44))), block.block, block.isRaw, block.progressMonitor));
}

function lambda$31_1(batch_0, res_1){
  $forEach_2(batch_0.stream(), new BufferedStorage$lambda$32$Type);
  return res_1;
}

function lambda$33_0(w_0, m_1){
  m_1(valueOf_2(w_0.block.length));
}

function lambda$9_2(champKey_0, tree_1){
  var key;
  return key = new ByteArrayWrapper(champKey_0) , $thenCompose(castTo(tree_1.keyHasher.call(null, key), 6), makeLambdaFunction(ChampWrapper$lambda$3$Type.prototype.apply_0, ChampWrapper$lambda$3$Type, [tree_1, key]));
}

function markReachable(current, reachable, all, storage){
  var block, index_0, link_0, link$iterator, links_0;
  block = castTo(storage.get(current), 109);
  if (!block)
    return;
  index_0 = all.indexOf(current);
  reachable.setAtIndex(index_0, ($clinit_Boolean() , true));
  if (current.codec == ($clinit_Cid$Codec() , Raw))
    return;
  links_0 = fromByteArray(block.block).links_0();
  for (link$iterator = links_0.iterator(); link$iterator.hasNext_0();) {
    link_0 = castTo(link$iterator.next_1(), 58);
    markReachable(castTo(link_0, 44), reachable, all, storage);
  }
}

defineClass(279, 361, {279:1}, BufferedStorage);
_.closeTransaction = function closeTransaction_1(owner, tid){
  return new CompletableFuture_0(($clinit_Boolean() , true));
}
;
_.downloadFragments = function downloadFragments_2(owner, hashes, bats, h, monitor, spaceIncreaseFactor){
  var futures, identity;
  return $clinit_NetworkAccess() , futures = castTo(castTo(range_0(0, hashes.size()).mapToObj(new NetworkAccess$lambda$90$Type).parallel(), 147).map_1(makeLambdaFunction(NetworkAccess$lambda$91$Type.prototype.apply_0, NetworkAccess$lambda$91$Type, [monitor, spaceIncreaseFactor, hashes, this, owner, bats])).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17) , $thenApply((identity = new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_LIST)) , castTo($reduce(futures.stream(), identity, new Futures$lambda$6$Type), 6)), makeLambdaFunction(NetworkAccess$lambda$97$Type.prototype.apply_0, NetworkAccess$lambda$97$Type, []));
}
;
_.get_1 = function get_55(owner, hash, bat){
  return $thenApply($getRaw(this, owner, hash, bat), makeLambdaFunction(BufferedStorage$lambda$17$Type.prototype.apply_0, BufferedStorage$lambda$17$Type, []));
}
;
_.getChampLookup = function getChampLookup_3(owner, root, champKey, bat, committedRoot){
  if ($size(this.storage.map_0) == 0)
    return this.target.getChampLookup(owner, root, champKey, bat, committedRoot);
  return asyncExceptionally(new BufferedStorage$lambda$0$Type(this, owner, root, champKey, bat, committedRoot), makeLambdaFunction(BufferedStorage$lambda$1$Type.prototype.apply_0, BufferedStorage$lambda$1$Type, [this, owner, root, champKey, bat, committedRoot]));
}
;
_.getChampLookup_0 = function getChampLookup_4(owner, root, champKey, bat, committedRoot, hasher){
  return $getChampLookup(this, owner, root, champKey, bat, committedRoot, hasher);
}
;
_.getRaw = function getRaw_1(owner, hash, bat){
  return $getRaw(this, owner, hash, bat);
}
;
_.put_0 = function put_13(owner, writer, block, hasher, tid){
  return $thenApply($put_15(this, writer.publicKeyHash, ($clinit_Collections() , new Collections$SingletonList(block)), new Collections$SingletonList(initUnidimensionalArray(B_classLit, $intern_28, 8, 0, 15, 1)), false, ($clinit_Optional() , $clinit_Optional() , EMPTY)), makeLambdaFunction(BufferedStorage$lambda$19$Type.prototype.apply_0, BufferedStorage$lambda$19$Type, []));
}
;
_.put_1 = function put_14(owner, writer, signedHashes, blocks, tid){
  return $put_15(this, writer, blocks, signedHashes, false, ($clinit_Optional() , $clinit_Optional() , EMPTY));
}
;
_.putRaw = function putRaw_1(owner, writer, signatures, blocks, tid, progressConsumer){
  return $put_15(this, writer, blocks, signatures, true, ($clinit_Optional() , new Optional(checkCriticalNotNull(progressConsumer))));
}
;
_.startTransaction = function startTransaction_1(owner){
  var tid;
  tid = new TransactionId(($clinit_System() , '' + toString_4(fromDouble_0(Date.now()))));
  return new CompletableFuture_0(tid);
}
;
var Lpeergos_shared_storage_BufferedStorage_2_classLit = createForClass('peergos.shared.storage', 'BufferedStorage', 279);
function BufferedStorage$0methodref$fromCbor$Type(){
}

defineClass(3068, $wnd.Function, $intern_22, BufferedStorage$0methodref$fromCbor$Type);
_.apply_0 = function apply_725(arg0){
  return fromCbor_98(castTo(arg0, 48));
}
;
function $lambda$1_14(this$static, hash_1){
  return ofNullable(castTo($get(this$static.localCache, hash_1), 11));
}

function BufferedStorage$1(this$0){
  this.this$01 = this$0;
  this.localCache = new HashMap;
}

defineClass(943, 1, {}, BufferedStorage$1);
_.clear_1 = function clear_22(){
  throw toJs(new IllegalStateException_0('Unimplemented!'));
}
;
_.get_2 = function get_56(hash){
  return new CompletableFuture_0($or($map(ofNullable(castTo($get_5(this.this$01.storage, hash), 109)), makeLambdaFunction(BufferedStorage$1$lambda$0$Type.prototype.apply_0, BufferedStorage$1$lambda$0$Type, [])), new BufferedStorage$1$lambda$1$Type(this, hash)));
}
;
_.put_3 = function put_15(hash, data_0){
  $put(this.localCache, hash, data_0);
  return new CompletableFuture_0(($clinit_Boolean() , true));
}
;
var Lpeergos_shared_storage_BufferedStorage$1_2_classLit = createForClass('peergos.shared.storage', 'BufferedStorage/1', 943);
function BufferedStorage$1$lambda$0$Type(){
}

defineClass(3067, $wnd.Function, $intern_22, BufferedStorage$1$lambda$0$Type);
_.apply_0 = function apply_726(arg0){
  return castTo(arg0, 109).block;
}
;
function BufferedStorage$1$lambda$1$Type($$outer_0, hash_1){
  this.$$outer_0 = $$outer_0;
  this.hash_1 = hash_1;
}

defineClass(944, 1, {}, BufferedStorage$1$lambda$1$Type);
_.get_0 = function get_57(){
  return $lambda$1_14(this.$$outer_0, this.hash_1);
}
;
var Lpeergos_shared_storage_BufferedStorage$1$lambda$1$Type_2_classLit = createForClass('peergos.shared.storage', 'BufferedStorage/1/lambda$1$Type', 944);
function BufferedStorage$1methodref$of$Type(){
}

defineClass(3071, $wnd.Function, $intern_22, BufferedStorage$1methodref$of$Type);
_.apply_0 = function apply_727(arg0){
  return $clinit_MaybeMultihash() , new MaybeMultihash(castTo(arg0, 58));
}
;
function BufferedStorage$2methodref$fromByteArray$Type(){
}

defineClass(3072, $wnd.Function, $intern_22, BufferedStorage$2methodref$fromByteArray$Type);
_.apply_0 = function apply_728(arg0){
  return fromByteArray(castTo(arg0, 11));
}
;
function BufferedStorage$3methodref$remove$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(947, 1, $intern_32, BufferedStorage$3methodref$remove$Type);
_.accept = function accept_82(arg0){
  $remove_7(this.$$outer_0, arg0);
}
;
_.andThen = function andThen_38(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_storage_BufferedStorage$3methodref$remove$Type_2_classLit = createForClass('peergos.shared.storage', 'BufferedStorage/3methodref$remove$Type', 947);
function BufferedStorage$lambda$0$Type($$outer_0, owner_1, root_2, champKey_3, bat_4, committedRoot_5){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.root_2 = root_2;
  this.champKey_3 = champKey_3;
  this.bat_4 = bat_4;
  this.committedRoot_5 = committedRoot_5;
}

defineClass(942, 1, {}, BufferedStorage$lambda$0$Type);
_.get_0 = function get_58(){
  return $lambda$0_18(this.$$outer_0, this.owner_1, this.root_2, this.champKey_3, this.bat_4, this.committedRoot_5);
}
;
var Lpeergos_shared_storage_BufferedStorage$lambda$0$Type_2_classLit = createForClass('peergos.shared.storage', 'BufferedStorage/lambda$0$Type', 942);
function BufferedStorage$lambda$1$Type($$outer_0, owner_1, root_2, champKey_3, bat_4, committedRoot_5){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.root_2 = root_2;
  this.champKey_3 = champKey_3;
  this.bat_4 = bat_4;
  this.committedRoot_5 = committedRoot_5;
}

defineClass(3041, $wnd.Function, $intern_22, BufferedStorage$lambda$1$Type);
_.apply_0 = function apply_729(arg0){
  return $lambda$1_13(this.$$outer_0, this.owner_1, this.root_2, this.champKey_3, this.bat_4, this.committedRoot_5);
}
;
function BufferedStorage$lambda$10$Type(){
}

defineClass(3045, $wnd.Function, $intern_22, BufferedStorage$lambda$10$Type);
_.apply_0 = function apply_730(arg0){
  return castTo($orElse($map($map(castTo(arg0, 12), makeLambdaFunction(BufferedStorage$lambda$11$Type.prototype.apply_0, BufferedStorage$lambda$11$Type, [])), makeLambdaFunction(BufferedStorage$1methodref$of$Type.prototype.apply_0, BufferedStorage$1methodref$of$Type, [])), ($clinit_MaybeMultihash() , $clinit_MaybeMultihash() , EMPTY_0)), 93);
}
;
function BufferedStorage$lambda$11$Type(){
}

defineClass(3070, $wnd.Function, $intern_22, BufferedStorage$lambda$11$Type);
_.apply_0 = function apply_731(arg0){
  return castTo(arg0, 53).target;
}
;
function BufferedStorage$lambda$13$Type(cache_0, owner_1, bat_2){
  this.cache_0 = cache_0;
  this.owner_1 = owner_1;
  this.bat_2 = bat_2;
}

defineClass(3046, $wnd.Function, $intern_22, BufferedStorage$lambda$13$Type);
_.apply_0 = function apply_732(arg0){
  return lambda$13_1(this.cache_0, this.owner_1, this.bat_2, arg0);
}
;
function BufferedStorage$lambda$14$Type(cache_0){
  this.cache_0 = cache_0;
}

defineClass(3047, $wnd.Function, $intern_22, BufferedStorage$lambda$14$Type);
_.apply_0 = function apply_733(arg0){
  return new ArrayList_1(new AbstractMap$2(this.cache_0.cache_0));
}
;
function BufferedStorage$lambda$15$Type($$outer_0, writer_1, signatures_2, blocks_3, isRaw_4, progressConsumer_5){
  this.$$outer_0 = $$outer_0;
  this.writer_1 = writer_1;
  this.signatures_2 = signatures_2;
  this.blocks_3 = blocks_3;
  this.isRaw_4 = isRaw_4;
  this.progressConsumer_5 = progressConsumer_5;
}

defineClass(946, 1, {}, BufferedStorage$lambda$15$Type);
_.apply_2 = function apply_734(arg0){
  return $lambda$15_4(this.$$outer_0, this.writer_1, this.signatures_2, this.blocks_3, this.isRaw_4, this.progressConsumer_5, arg0);
}
;
_.isRaw_4 = false;
var Lpeergos_shared_storage_BufferedStorage$lambda$15$Type_2_classLit = createForClass('peergos.shared.storage', 'BufferedStorage/lambda$15$Type', 946);
function BufferedStorage$lambda$16$Type($$outer_0, writer_1, signatures_2, i_3, blocks_4, isRaw_5, progressConsumer_6){
  this.$$outer_0 = $$outer_0;
  this.writer_1 = writer_1;
  this.signatures_2 = signatures_2;
  this.i_3 = i_3;
  this.blocks_4 = blocks_4;
  this.isRaw_5 = isRaw_5;
  this.progressConsumer_6 = progressConsumer_6;
}

defineClass(3058, $wnd.Function, $intern_22, BufferedStorage$lambda$16$Type);
_.apply_0 = function apply_735(arg0){
  return $lambda$16_6(this.$$outer_0, this.writer_1, this.signatures_2, this.i_3, this.blocks_4, this.isRaw_5, this.progressConsumer_6, arg0);
}
;
_.i_3 = 0;
_.isRaw_5 = false;
function BufferedStorage$lambda$17$Type(){
}

defineClass(1317, $wnd.Function, $intern_22, BufferedStorage$lambda$17$Type);
_.apply_0 = function apply_736(arg0){
  return $map(castTo(arg0, 12), makeLambdaFunction(BufferedStorage$2methodref$fromByteArray$Type.prototype.apply_0, BufferedStorage$2methodref$fromByteArray$Type, []));
}
;
function BufferedStorage$lambda$19$Type(){
}

defineClass(3048, $wnd.Function, $intern_22, BufferedStorage$lambda$19$Type);
_.apply_0 = function apply_737(arg0){
  return castTo(castTo(arg0, 17).getAtIndex(0), 44);
}
;
function BufferedStorage$lambda$2$Type($$outer_0, owner_1, champKey_2, bat_3, committedRoot_4, root_5){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.champKey_2 = champKey_2;
  this.bat_3 = bat_3;
  this.committedRoot_4 = committedRoot_4;
  this.root_5 = root_5;
}

defineClass(945, 1, {}, BufferedStorage$lambda$2$Type);
_.get_0 = function get_59(){
  return $lambda$2_10(this.$$outer_0, this.owner_1, this.champKey_2, this.bat_3, this.committedRoot_4, this.root_5);
}
;
var Lpeergos_shared_storage_BufferedStorage$lambda$2$Type_2_classLit = createForClass('peergos.shared.storage', 'BufferedStorage/lambda$2$Type', 945);
function BufferedStorage$lambda$20$Type(writers_0){
  this.writers_0 = writers_0;
}

defineClass(3049, $wnd.Function, $intern_22, BufferedStorage$lambda$20$Type);
_.apply_0 = function apply_738(arg0){
  return lambda$20_0(this.writers_0, arg0);
}
;
function BufferedStorage$lambda$21$Type(){
}

defineClass(3050, $wnd.Function, $intern_22, BufferedStorage$lambda$21$Type);
_.apply_0 = function apply_739(arg0){
  return castTo(castTo(arg0, 20).left, 44);
}
;
function BufferedStorage$lambda$22$Type(){
}

defineClass(3051, $wnd.Function, $intern_22, BufferedStorage$lambda$22$Type);
_.apply_0 = function apply_740(arg0){
  return castTo(castTo(arg0, 20).right, 109);
}
;
function BufferedStorage$lambda$23$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3052, $wnd.Function, $intern_22, BufferedStorage$lambda$23$Type);
_.apply_0 = function apply_741(arg0){
  return $lambda$23_2(this.$$outer_0, arg0);
}
;
function BufferedStorage$lambda$24$Type($$outer_0, u_1){
  this.$$outer_0 = $$outer_0;
  this.u_1 = u_1;
}

defineClass(3059, $wnd.Function, $intern_22, BufferedStorage$lambda$24$Type);
_.apply_0 = function apply_742(arg0){
  return $lambda$24_1(this.$$outer_0, this.u_1, arg0);
}
;
function BufferedStorage$lambda$26$Type(){
}

defineClass(948, 1, {}, BufferedStorage$lambda$26$Type);
_.test_0 = function test_20(arg0){
  return !castTo(arg0, 17).isEmpty();
}
;
var Lpeergos_shared_storage_BufferedStorage$lambda$26$Type_2_classLit = createForClass('peergos.shared.storage', 'BufferedStorage/lambda$26$Type', 948);
function BufferedStorage$lambda$27$Type($$outer_0, owner_1, writer_2, tid_3){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.tid_3 = tid_3;
}

defineClass(3053, $wnd.Function, $intern_22, BufferedStorage$lambda$27$Type);
_.apply_0 = function apply_743(arg0){
  return $lambda$27_0(this.$$outer_0, this.owner_1, this.writer_2, this.tid_3, arg0);
}
;
function BufferedStorage$lambda$28$Type(){
}

defineClass(3060, $wnd.Function, $intern_22, BufferedStorage$lambda$28$Type);
_.apply_0 = function apply_744(arg0){
  return castTo(arg0, 109).signature;
}
;
function BufferedStorage$lambda$29$Type(){
}

defineClass(3061, $wnd.Function, $intern_22, BufferedStorage$lambda$29$Type);
_.apply_0 = function apply_745(arg0){
  return castTo(arg0, 109).block;
}
;
function BufferedStorage$lambda$3$Type(){
}

defineClass(3056, $wnd.Function, $intern_22, BufferedStorage$lambda$3$Type);
_.apply_0 = function apply_746(arg0){
  return $flatMap($map(castTo(arg0, 12), makeLambdaFunction(BufferedStorage$0methodref$fromCbor$Type.prototype.apply_0, BufferedStorage$0methodref$fromCbor$Type, [])), makeLambdaFunction(BufferedStorage$lambda$5$Type.prototype.apply_0, BufferedStorage$lambda$5$Type, []));
}
;
function BufferedStorage$lambda$30$Type(){
}

defineClass(3062, $wnd.Function, {}, BufferedStorage$lambda$30$Type);
_.accept_5 = function accept_83(arg0){
}
;
function BufferedStorage$lambda$31$Type(batch_0){
  this.batch_0 = batch_0;
}

defineClass(3063, $wnd.Function, $intern_22, BufferedStorage$lambda$31$Type);
_.apply_0 = function apply_747(arg0){
  return lambda$31_1(this.batch_0, arg0);
}
;
function BufferedStorage$lambda$32$Type(){
}

defineClass(950, 1, $intern_32, BufferedStorage$lambda$32$Type);
_.accept = function accept_84(arg0){
  $ifPresent(castTo(arg0, 109).progressMonitor, new BufferedStorage$lambda$33$Type(castTo(arg0, 109)));
}
;
_.andThen = function andThen_39(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_storage_BufferedStorage$lambda$32$Type_2_classLit = createForClass('peergos.shared.storage', 'BufferedStorage/lambda$32$Type', 950);
function BufferedStorage$lambda$33$Type(w_0){
  this.w_0 = w_0;
}

defineClass(949, 1, $intern_32, BufferedStorage$lambda$33$Type);
_.accept = function accept_85(arg0){
  lambda$33_0(this.w_0, arg0);
}
;
_.andThen = function andThen_40(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_storage_BufferedStorage$lambda$33$Type_2_classLit = createForClass('peergos.shared.storage', 'BufferedStorage/lambda$33$Type', 949);
function BufferedStorage$lambda$34$Type($$outer_0, owner_1, writer_2, tid_3, cborBatches_4){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.tid_3 = tid_3;
  this.cborBatches_4 = cborBatches_4;
}

defineClass(3054, $wnd.Function, $intern_22, BufferedStorage$lambda$34$Type);
_.apply_0 = function apply_748(arg0){
  return $lambda$34_1(this.$$outer_0, this.owner_1, this.writer_2, this.tid_3, this.cborBatches_4);
}
;
function BufferedStorage$lambda$35$Type(){
}

defineClass(951, 1, {}, BufferedStorage$lambda$35$Type);
_.test_0 = function test_21(arg0){
  return !castTo(arg0, 17).isEmpty();
}
;
var Lpeergos_shared_storage_BufferedStorage$lambda$35$Type_2_classLit = createForClass('peergos.shared.storage', 'BufferedStorage/lambda$35$Type', 951);
function BufferedStorage$lambda$36$Type($$outer_0, owner_1, writer_2, tid_3){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.tid_3 = tid_3;
}

defineClass(3064, $wnd.Function, $intern_22, BufferedStorage$lambda$36$Type);
_.apply_0 = function apply_749(arg0){
  return $lambda$36_1(this.$$outer_0, this.owner_1, this.writer_2, this.tid_3, arg0);
}
;
function BufferedStorage$lambda$37$Type(){
}

defineClass(3065, $wnd.Function, $intern_22, BufferedStorage$lambda$37$Type);
_.apply_0 = function apply_750(arg0){
  return castTo(arg0, 109).signature;
}
;
function BufferedStorage$lambda$38$Type(){
}

defineClass(3066, $wnd.Function, $intern_22, BufferedStorage$lambda$38$Type);
_.apply_0 = function apply_751(arg0){
  return castTo(arg0, 109).block;
}
;
function BufferedStorage$lambda$39$Type(){
}

defineClass(3055, $wnd.Function, $intern_22, BufferedStorage$lambda$39$Type);
_.apply_0 = function apply_752(arg0){
  return $clinit_Boolean() , true;
}
;
function BufferedStorage$lambda$40$Type(){
}

defineClass(490, 1, {}, BufferedStorage$lambda$40$Type);
_.applyAsInt = function applyAsInt_1(arg0){
  return castTo(arg0, 109).block.length;
}
;
var Lpeergos_shared_storage_BufferedStorage$lambda$40$Type_2_classLit = createForClass('peergos.shared.storage', 'BufferedStorage/lambda$40$Type', 490);
function BufferedStorage$lambda$5$Type(){
}

defineClass(3069, $wnd.Function, $intern_22, BufferedStorage$lambda$5$Type);
_.apply_0 = function apply_753(arg0){
  return castTo(arg0, 121).tree;
}
;
function BufferedStorage$lambda$6$Type($$outer_0, owner_1, champKey_2, bat_3){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.champKey_2 = champKey_2;
  this.bat_3 = bat_3;
}

defineClass(3057, $wnd.Function, $intern_22, BufferedStorage$lambda$6$Type);
_.apply_0 = function apply_754(arg0){
  return $lambda$6_7(this.$$outer_0, this.owner_1, this.champKey_2, this.bat_3, arg0);
}
;
function BufferedStorage$lambda$7$Type(){
}

defineClass(3042, $wnd.Function, $intern_22, BufferedStorage$lambda$7$Type);
_.apply_0 = function apply_755(arg0){
  return new CompletableFuture_0(castTo(arg0, 80).data_0);
}
;
function BufferedStorage$lambda$8$Type(){
}

defineClass(3043, $wnd.Function, $intern_22, BufferedStorage$lambda$8$Type);
_.apply_0 = function apply_756(arg0){
  return castTo(castTo(arg0, 7), 53);
}
;
function BufferedStorage$lambda$9$Type(champKey_0){
  this.champKey_0 = champKey_0;
}

defineClass(3044, $wnd.Function, $intern_22, BufferedStorage$lambda$9$Type);
_.apply_0 = function apply_757(arg0){
  return lambda$9_2(this.champKey_0, arg0);
}
;
function $get_18(this$static, owner, key, bat){
  var pipe, result;
  if ($containsKey_2(this$static.cache_0, key))
    return new CompletableFuture_0(($clinit_Optional() , new Optional(checkCriticalNotNull(fromByteArray(castTo($get_5(this$static.cache_0, key), 11))))));
  if ($containsKey_2(this$static.pending, key))
    return castTo($get_5(this$static.pending, key), 6);
  pipe = new CompletableFuture;
  $put_5(this$static.pending, key, pipe);
  result = new CompletableFuture;
  $exceptionally($thenAccept(this$static.target.get_1(owner, key, bat), new CachingStorage$lambda$1$Type(this$static, key, pipe, result)), makeLambdaFunction(CachingStorage$lambda$2$Type.prototype.apply_0, CachingStorage$lambda$2$Type, [this$static, key, pipe, result]));
  return result;
}

function $lambda$0_19(this$static, blocks_1, res_1){
  var block, i;
  for (i = 0; i < blocks_1.size(); i++) {
    block = castTo(blocks_1.getAtIndex(i), 11);
    block.length < this$static.maxValueSize && $put_5(this$static.cache_0, castTo(res_1.getAtIndex(i), 58), block);
  }
  return res_1;
}

function $lambda$1_15(this$static, key_1, pipe_2, result_3, cborOpt_3){
  var value_0;
  if (cborOpt_3.ref != null) {
    value_0 = (checkCriticalElement(cborOpt_3.ref != null) , castTo(cborOpt_3.ref, 48)).toByteArray_0();
    value_0.length > 0 && value_0.length < this$static.maxValueSize && $put_5(this$static.cache_0, key_1, value_0);
  }
  $remove_7(this$static.pending, key_1);
  $complete(pipe_2, cborOpt_3);
  $complete(result_3, cborOpt_3);
}

function $lambda$2_11(this$static, key_1, pipe_2, result_3, t_3){
  $remove_7(this$static.pending, key_1);
  $completeExceptionally(pipe_2, t_3);
  $completeExceptionally(result_3, t_3);
  return null;
}

function $lambda$3_11(this$static, blocks_1, res_1){
  var block, i;
  for (i = 0; i < blocks_1.size(); i++) {
    block = castTo(blocks_1.getAtIndex(i), 11);
    block.length < this$static.maxValueSize && $put_5(this$static.cache_0, castTo(res_1.getAtIndex(i), 58), block);
  }
  return res_1;
}

function $lambda$4_8(this$static, key_1, pipe_2, rawOpt_2){
  var value_0;
  if (rawOpt_2.ref != null) {
    value_0 = (checkCriticalElement(rawOpt_2.ref != null) , castTo(rawOpt_2.ref, 11));
    value_0.length > 0 && value_0.length < this$static.maxValueSize && $put_5(this$static.cache_0, key_1, value_0);
  }
  $remove_7(this$static.pendingRaw, key_1);
  $complete(pipe_2, rawOpt_2);
  return rawOpt_2;
}

function $lambda$5_8(this$static, key_1, pipe_2, t_2){
  $remove_7(this$static.pending, key_1);
  $completeExceptionally(pipe_2, t_2);
  return $clinit_Optional() , $clinit_Optional() , EMPTY;
}

function CachingStorage(target){
  DelegatingStorage.call(this, target);
  this.target = target;
  this.cache_0 = new LRUCache(100);
  this.maxValueSize = $intern_11;
  this.pending = new LRUCache(100);
  this.pendingRaw = new LRUCache(100);
}

defineClass(179, 361, {}, CachingStorage);
_.blockStoreProperties = function blockStoreProperties_2(){
  return this.target.blockStoreProperties();
}
;
_.clearBlockCache = function clearBlockCache_1(){
  $clear_2(this.cache_0);
  this.target.clearBlockCache();
}
;
_.get_1 = function get_60(owner, key, bat){
  return $get_18(this, owner, key, bat);
}
;
_.getRaw = function getRaw_2(owner, key, bat){
  var pipe;
  if ($containsKey_2(this.cache_0, key))
    return new CompletableFuture_0(($clinit_Optional() , new Optional(checkCriticalNotNull(castTo($get_5(this.cache_0, key), 11)))));
  if ($containsKey_2(this.pendingRaw, key))
    return castTo($get_5(this.pendingRaw, key), 6);
  pipe = new CompletableFuture;
  $put_5(this.pendingRaw, key, pipe);
  return $exceptionally($thenApply(this.target.getRaw(owner, key, bat), makeLambdaFunction(CachingStorage$lambda$4$Type.prototype.apply_0, CachingStorage$lambda$4$Type, [this, key, pipe])), makeLambdaFunction(CachingStorage$lambda$5$Type.prototype.apply_0, CachingStorage$lambda$5$Type, [this, key, pipe]));
}
;
_.put_1 = function put_16(owner, writer, signedHashes, blocks, tid){
  return $thenApply(this.target.put_1(owner, writer, signedHashes, blocks, tid), makeLambdaFunction(CachingStorage$lambda$0$Type.prototype.apply_0, CachingStorage$lambda$0$Type, [this, blocks]));
}
;
_.putRaw = function putRaw_2(owner, writer, signatures, blocks, tid, progressConsumer){
  return $thenApply(this.target.putRaw(owner, writer, signatures, blocks, tid, progressConsumer), makeLambdaFunction(CachingStorage$lambda$3$Type.prototype.apply_0, CachingStorage$lambda$3$Type, [this, blocks]));
}
;
_.maxValueSize = 0;
var Lpeergos_shared_storage_CachingStorage_2_classLit = createForClass('peergos.shared.storage', 'CachingStorage', 179);
function CachingStorage$lambda$0$Type($$outer_0, blocks_1){
  this.$$outer_0 = $$outer_0;
  this.blocks_1 = blocks_1;
}

defineClass(3433, $wnd.Function, $intern_22, CachingStorage$lambda$0$Type);
_.apply_0 = function apply_758(arg0){
  return $lambda$0_19(this.$$outer_0, this.blocks_1, arg0);
}
;
function CachingStorage$lambda$1$Type($$outer_0, key_1, pipe_2, result_3){
  this.$$outer_0 = $$outer_0;
  this.key_1 = key_1;
  this.pipe_2 = pipe_2;
  this.result_3 = result_3;
}

defineClass(1092, 1, $intern_32, CachingStorage$lambda$1$Type);
_.accept = function accept_86(arg0){
  $lambda$1_15(this.$$outer_0, this.key_1, this.pipe_2, this.result_3, arg0);
}
;
_.andThen = function andThen_41(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_storage_CachingStorage$lambda$1$Type_2_classLit = createForClass('peergos.shared.storage', 'CachingStorage/lambda$1$Type', 1092);
function CachingStorage$lambda$2$Type($$outer_0, key_1, pipe_2, result_3){
  this.$$outer_0 = $$outer_0;
  this.key_1 = key_1;
  this.pipe_2 = pipe_2;
  this.result_3 = result_3;
}

defineClass(3434, $wnd.Function, $intern_22, CachingStorage$lambda$2$Type);
_.apply_0 = function apply_759(arg0){
  return $lambda$2_11(this.$$outer_0, this.key_1, this.pipe_2, this.result_3, arg0);
}
;
function CachingStorage$lambda$3$Type($$outer_0, blocks_1){
  this.$$outer_0 = $$outer_0;
  this.blocks_1 = blocks_1;
}

defineClass(3435, $wnd.Function, $intern_22, CachingStorage$lambda$3$Type);
_.apply_0 = function apply_760(arg0){
  return $lambda$3_11(this.$$outer_0, this.blocks_1, arg0);
}
;
function CachingStorage$lambda$4$Type($$outer_0, key_1, pipe_2){
  this.$$outer_0 = $$outer_0;
  this.key_1 = key_1;
  this.pipe_2 = pipe_2;
}

defineClass(3436, $wnd.Function, $intern_22, CachingStorage$lambda$4$Type);
_.apply_0 = function apply_761(arg0){
  return $lambda$4_8(this.$$outer_0, this.key_1, this.pipe_2, arg0);
}
;
function CachingStorage$lambda$5$Type($$outer_0, key_1, pipe_2){
  this.$$outer_0 = $$outer_0;
  this.key_1 = key_1;
  this.pipe_2 = pipe_2;
}

defineClass(3437, $wnd.Function, $intern_22, CachingStorage$lambda$5$Type);
_.apply_0 = function apply_762(arg0){
  return $lambda$5_8(this.$$outer_0, this.key_1, this.pipe_2, arg0);
}
;
function $cache(this$static, h, block){
  block.length < this$static.maxValueSize && $put_5(this$static.cache_0, h, block);
  return true;
}

function $lambda$1_16(this$static, blocks_0){
  return $thenApply(combineAllInOrder(castTo($collect_0($map_0(blocks_0.stream(), makeLambdaFunction(CachingVerifyingStorage$lambda$2$Type.prototype.apply_0, CachingVerifyingStorage$lambda$2$Type, [this$static])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 54)), makeLambdaFunction(CachingVerifyingStorage$lambda$4$Type.prototype.apply_0, CachingVerifyingStorage$lambda$4$Type, [blocks_0]));
}

function $lambda$10_3(this$static, key_1, cbor_1){
  return $thenApply($verify(this$static, cbor_1.toByteArray_0(), key_1, new CachingVerifyingStorage$lambda$11$Type(cbor_1)), makeLambdaFunction(CachingVerifyingStorage$0methodref$of$Type.prototype.apply_0, CachingVerifyingStorage$0methodref$of$Type, []));
}

function $lambda$14_2(this$static, key_1, pipe_2, result_3, cborOpt_3){
  var value_0;
  if (cborOpt_3.ref != null) {
    value_0 = (checkCriticalElement(cborOpt_3.ref != null) , castTo(cborOpt_3.ref, 48)).toByteArray_0();
    value_0.length > 0 && (value_0.length < this$static.maxValueSize && $put_5(this$static.cache_0, key_1, value_0) , true);
  }
  $remove_7(this$static.pending, key_1);
  $complete(pipe_2, cborOpt_3);
  $complete(result_3, cborOpt_3);
}

function $lambda$15_5(this$static, key_1, pipe_2, result_3, t_3){
  $remove_7(this$static.pending, key_1);
  $completeExceptionally(pipe_2, t_3);
  $completeExceptionally(result_3, t_3);
  return null;
}

function $lambda$16_7(this$static, blocks_1, hashes_1){
  return combineAllInOrder(castTo($collect_0($map_0(hashes_1.stream(), makeLambdaFunction(CachingVerifyingStorage$lambda$17$Type.prototype.apply_0, CachingVerifyingStorage$lambda$17$Type, [this$static, blocks_1, hashes_1])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 54));
}

function $lambda$17_8(this$static, blocks_1, hashes_2, h_2){
  return $verify(this$static, castTo(blocks_1.getAtIndex(hashes_2.indexOf(h_2)), 11), h_2, new CachingVerifyingStorage$lambda$18$Type(h_2));
}

function $lambda$19_4(this$static, blocks_1, res_1){
  var block, i;
  for (i = 0; i < blocks_1.size(); i++) {
    block = castTo(blocks_1.getAtIndex(i), 11);
    $cache(this$static, castTo(res_1.getAtIndex(i), 58), block);
  }
  return res_1;
}

function $lambda$2_12(this$static, b_0){
  return $thenApply($hash(this$static.hasher, b_0, false), makeLambdaFunction(CachingVerifyingStorage$lambda$3$Type.prototype.apply_0, CachingVerifyingStorage$lambda$3$Type, [this$static, b_0]));
}

function $lambda$20_4(this$static, key_1, arrOpt_1){
  return castTo($orElseGet($map(arrOpt_1, makeLambdaFunction(CachingVerifyingStorage$lambda$21$Type.prototype.apply_0, CachingVerifyingStorage$lambda$21$Type, [this$static, key_1])), new CachingVerifyingStorage$lambda$24$Type), 87);
}

function $lambda$21_3(this$static, key_1, bytes_1){
  return $thenApply($verify(this$static, bytes_1, key_1, new CachingVerifyingStorage$lambda$22$Type(bytes_1)), makeLambdaFunction(CachingVerifyingStorage$1methodref$of$Type.prototype.apply_0, CachingVerifyingStorage$1methodref$of$Type, []));
}

function $lambda$25_0(this$static, key_1, pipe_2, rawOpt_2){
  var value_0;
  if (rawOpt_2.ref != null) {
    value_0 = (checkCriticalElement(rawOpt_2.ref != null) , castTo(rawOpt_2.ref, 11));
    value_0.length > 0 && (value_0.length < this$static.maxValueSize && $put_5(this$static.cache_0, key_1, value_0) , true);
  }
  $remove_7(this$static.pendingRaw, key_1);
  $complete(pipe_2, rawOpt_2);
  return rawOpt_2;
}

function $lambda$26_2(this$static, key_1, pipe_2, t_2){
  $remove_7(this$static.pendingRaw, key_1);
  $completeExceptionally(pipe_2, t_2);
  return null;
}

function $lambda$3_12(this$static, b_1, h_1){
  return $clinit_Boolean() , b_1.length < this$static.maxValueSize && $put_5(this$static.cache_0, h_1, b_1) , true;
}

function $lambda$5_9(this$static, blocks_1, hashes_1){
  return combineAllInOrder(castTo($collect_0($map_0(hashes_1.stream(), makeLambdaFunction(CachingVerifyingStorage$lambda$6$Type.prototype.apply_0, CachingVerifyingStorage$lambda$6$Type, [this$static, blocks_1, hashes_1])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 54));
}

function $lambda$6_8(this$static, blocks_1, hashes_2, h_2){
  return $verify(this$static, castTo(blocks_1.getAtIndex(hashes_2.indexOf(h_2)), 11), h_2, new CachingVerifyingStorage$lambda$7$Type(h_2));
}

function $lambda$8_4(this$static, blocks_1, res_1){
  var block, i;
  for (i = 0; i < blocks_1.size(); i++) {
    block = castTo(blocks_1.getAtIndex(i), 11);
    $cache(this$static, castTo(res_1.getAtIndex(i), 58), block);
  }
  return res_1;
}

function $lambda$9_7(this$static, key_1, cborOpt_1){
  return castTo($orElseGet($map(cborOpt_1, makeLambdaFunction(CachingVerifyingStorage$lambda$10$Type.prototype.apply_0, CachingVerifyingStorage$lambda$10$Type, [this$static, key_1])), new CachingVerifyingStorage$lambda$13$Type), 87);
}

function $verify(this$static, data_0, claimed, result){
  switch (claimed.type.ordinal_0) {
    case 1:
      return $thenApply($sha256(this$static.hasher, data_0), makeLambdaFunction(CachingVerifyingStorage$lambda$0$Type.prototype.apply_0, CachingVerifyingStorage$lambda$0$Type, [claimed, result]));
    case 0:
      if (equals_16(data_0, copyOfRange(claimed.hash_0, 0, claimed.hash_0.length)))
        return new CompletableFuture_0(result.get_0());
      throw toJs(new IllegalStateException_0("Incorrect identity hash! This shouldn't ever  happen."));
    default:throw toJs(new IllegalStateException_0('Unimplemented hash algorithm: ' + claimed.type));
  }
}

function CachingVerifyingStorage(target, nodeId, hasher){
  DelegatingStorage.call(this, target);
  this.target = target;
  this.cache_0 = new LRUCache($intern_49);
  this.pending = new LRUCache(100);
  this.pendingRaw = new LRUCache(100);
  this.maxValueSize = 102400;
  this.nodeId = nodeId;
  this.hasher = hasher;
}

function lambda$0_12(claimed_0, result_1, hash_2){
  var computed;
  computed = new Multihash(($clinit_Multihash$Type() , sha2_256), hash_2);
  !!claimed_0 && (computed = build_7(claimed_0.version, claimed_0.codec, computed));
  if (computed.equals(claimed_0))
    return result_1.get_0();
  throw toJs(new IllegalStateException_0('Incorrect hash! Are you under attack? Expected: ' + claimed_0 + ' actual: ' + computed));
}

defineClass(492, 361, {}, CachingVerifyingStorage);
_.blockStoreProperties = function blockStoreProperties_3(){
  return $blockStoreProperties_0(this.target);
}
;
_.clearBlockCache = function clearBlockCache_2(){
  $clear_2(this.cache_0);
}
;
_.get_1 = function get_61(owner, key, bat){
  var pipe, result;
  if ($containsKey_2(this.cache_0, key))
    return new CompletableFuture_0(($clinit_Optional() , new Optional(checkCriticalNotNull(fromByteArray(castTo($get_5(this.cache_0, key), 11))))));
  if ($containsKey_2(this.pending, key))
    return castTo($get_5(this.pending, key), 6);
  pipe = new CompletableFuture;
  $put_5(this.pending, key, pipe);
  result = new CompletableFuture;
  $exceptionally($thenAccept($thenCompose($get_24(this.target, owner, key, bat), makeLambdaFunction(CachingVerifyingStorage$lambda$9$Type.prototype.apply_0, CachingVerifyingStorage$lambda$9$Type, [this, key])), new CachingVerifyingStorage$lambda$14$Type(this, key, pipe, result)), makeLambdaFunction(CachingVerifyingStorage$lambda$15$Type.prototype.apply_0, CachingVerifyingStorage$lambda$15$Type, [this, key, pipe, result]));
  return result;
}
;
_.getChampLookup = function getChampLookup_5(owner, root, champKey, bat, committedRoot){
  return $thenCompose($getChampLookup_4(this.target, owner, root, champKey, bat, committedRoot), makeLambdaFunction(CachingVerifyingStorage$lambda$1$Type.prototype.apply_0, CachingVerifyingStorage$lambda$1$Type, [this]));
}
;
_.getRaw = function getRaw_3(owner, key, bat){
  var pipe;
  if ($containsKey_2(this.cache_0, key))
    return new CompletableFuture_0(($clinit_Optional() , new Optional(checkCriticalNotNull(castTo($get_5(this.cache_0, key), 11)))));
  if ($containsKey_2(this.pendingRaw, key))
    return castTo($get_5(this.pendingRaw, key), 6);
  pipe = new CompletableFuture;
  $put_5(this.pendingRaw, key, pipe);
  $exceptionally($thenApply($thenCompose($getRaw_2(this.target, owner, key, bat), makeLambdaFunction(CachingVerifyingStorage$lambda$20$Type.prototype.apply_0, CachingVerifyingStorage$lambda$20$Type, [this, key])), makeLambdaFunction(CachingVerifyingStorage$lambda$25$Type.prototype.apply_0, CachingVerifyingStorage$lambda$25$Type, [this, key, pipe])), makeLambdaFunction(CachingVerifyingStorage$lambda$26$Type.prototype.apply_0, CachingVerifyingStorage$lambda$26$Type, [this, key, pipe]));
  return pipe;
}
;
_.id_1 = function id_6(){
  return new CompletableFuture_0(this.nodeId);
}
;
_.put_1 = function put_17(owner, writer, signedHashes, blocks, tid){
  return $thenApply($thenCompose($put_24(this.target, owner, writer, signedHashes, blocks, tid), makeLambdaFunction(CachingVerifyingStorage$lambda$5$Type.prototype.apply_0, CachingVerifyingStorage$lambda$5$Type, [this, blocks])), makeLambdaFunction(CachingVerifyingStorage$lambda$8$Type.prototype.apply_0, CachingVerifyingStorage$lambda$8$Type, [this, blocks]));
}
;
_.putRaw = function putRaw_3(owner, writer, signatures, blocks, tid, progressConsumer){
  return $thenApply($thenCompose($putRaw_0(this.target, owner, writer, signatures, blocks, tid, progressConsumer), makeLambdaFunction(CachingVerifyingStorage$lambda$16$Type.prototype.apply_0, CachingVerifyingStorage$lambda$16$Type, [this, blocks])), makeLambdaFunction(CachingVerifyingStorage$lambda$19$Type.prototype.apply_0, CachingVerifyingStorage$lambda$19$Type, [this, blocks]));
}
;
_.maxValueSize = 0;
var Lpeergos_shared_storage_CachingVerifyingStorage_2_classLit = createForClass('peergos.shared.storage', 'CachingVerifyingStorage', 492);
function CachingVerifyingStorage$0methodref$of$Type(){
}

defineClass(3104, $wnd.Function, $intern_22, CachingVerifyingStorage$0methodref$of$Type);
_.apply_0 = function apply_763(arg0){
  return $clinit_Optional() , new Optional(checkCriticalNotNull(castTo(arg0, 48)));
}
;
function CachingVerifyingStorage$1methodref$of$Type(){
}

defineClass(3107, $wnd.Function, $intern_22, CachingVerifyingStorage$1methodref$of$Type);
_.apply_0 = function apply_764(arg0){
  return $clinit_Optional() , new Optional(checkCriticalNotNull(castTo(arg0, 11)));
}
;
function CachingVerifyingStorage$lambda$0$Type(claimed_0, result_1){
  this.claimed_0 = claimed_0;
  this.result_1 = result_1;
}

defineClass(3088, $wnd.Function, $intern_22, CachingVerifyingStorage$lambda$0$Type);
_.apply_0 = function apply_765(arg0){
  return lambda$0_12(this.claimed_0, this.result_1, arg0);
}
;
function CachingVerifyingStorage$lambda$1$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3089, $wnd.Function, $intern_22, CachingVerifyingStorage$lambda$1$Type);
_.apply_0 = function apply_766(arg0){
  return $lambda$1_16(this.$$outer_0, arg0);
}
;
function CachingVerifyingStorage$lambda$10$Type($$outer_0, key_1){
  this.$$outer_0 = $$outer_0;
  this.key_1 = key_1;
}

defineClass(3103, $wnd.Function, $intern_22, CachingVerifyingStorage$lambda$10$Type);
_.apply_0 = function apply_767(arg0){
  return $lambda$10_3(this.$$outer_0, this.key_1, arg0);
}
;
function CachingVerifyingStorage$lambda$11$Type(cbor_0){
  this.cbor_0 = cbor_0;
}

defineClass(961, 1, {}, CachingVerifyingStorage$lambda$11$Type);
_.get_0 = function get_62(){
  return this.cbor_0;
}
;
var Lpeergos_shared_storage_CachingVerifyingStorage$lambda$11$Type_2_classLit = createForClass('peergos.shared.storage', 'CachingVerifyingStorage/lambda$11$Type', 961);
function CachingVerifyingStorage$lambda$13$Type(){
}

defineClass(962, 1, {}, CachingVerifyingStorage$lambda$13$Type);
_.get_0 = function get_63(){
  return new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY));
}
;
var Lpeergos_shared_storage_CachingVerifyingStorage$lambda$13$Type_2_classLit = createForClass('peergos.shared.storage', 'CachingVerifyingStorage/lambda$13$Type', 962);
function CachingVerifyingStorage$lambda$14$Type($$outer_0, key_1, pipe_2, result_3){
  this.$$outer_0 = $$outer_0;
  this.key_1 = key_1;
  this.pipe_2 = pipe_2;
  this.result_3 = result_3;
}

defineClass(963, 1, $intern_32, CachingVerifyingStorage$lambda$14$Type);
_.accept = function accept_87(arg0){
  $lambda$14_2(this.$$outer_0, this.key_1, this.pipe_2, this.result_3, arg0);
}
;
_.andThen = function andThen_42(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_storage_CachingVerifyingStorage$lambda$14$Type_2_classLit = createForClass('peergos.shared.storage', 'CachingVerifyingStorage/lambda$14$Type', 963);
function CachingVerifyingStorage$lambda$15$Type($$outer_0, key_1, pipe_2, result_3){
  this.$$outer_0 = $$outer_0;
  this.key_1 = key_1;
  this.pipe_2 = pipe_2;
  this.result_3 = result_3;
}

defineClass(3093, $wnd.Function, $intern_22, CachingVerifyingStorage$lambda$15$Type);
_.apply_0 = function apply_768(arg0){
  return $lambda$15_5(this.$$outer_0, this.key_1, this.pipe_2, this.result_3, arg0);
}
;
function CachingVerifyingStorage$lambda$16$Type($$outer_0, blocks_1){
  this.$$outer_0 = $$outer_0;
  this.blocks_1 = blocks_1;
}

defineClass(3094, $wnd.Function, $intern_22, CachingVerifyingStorage$lambda$16$Type);
_.apply_0 = function apply_769(arg0){
  return $lambda$16_7(this.$$outer_0, this.blocks_1, arg0);
}
;
function CachingVerifyingStorage$lambda$17$Type($$outer_0, blocks_1, hashes_2){
  this.$$outer_0 = $$outer_0;
  this.blocks_1 = blocks_1;
  this.hashes_2 = hashes_2;
}

defineClass(3105, $wnd.Function, $intern_22, CachingVerifyingStorage$lambda$17$Type);
_.apply_0 = function apply_770(arg0){
  return $lambda$17_8(this.$$outer_0, this.blocks_1, this.hashes_2, arg0);
}
;
function CachingVerifyingStorage$lambda$18$Type(h_0){
  this.h_0 = h_0;
}

defineClass(964, 1, {}, CachingVerifyingStorage$lambda$18$Type);
_.get_0 = function get_64(){
  return this.h_0;
}
;
var Lpeergos_shared_storage_CachingVerifyingStorage$lambda$18$Type_2_classLit = createForClass('peergos.shared.storage', 'CachingVerifyingStorage/lambda$18$Type', 964);
function CachingVerifyingStorage$lambda$19$Type($$outer_0, blocks_1){
  this.$$outer_0 = $$outer_0;
  this.blocks_1 = blocks_1;
}

defineClass(3095, $wnd.Function, $intern_22, CachingVerifyingStorage$lambda$19$Type);
_.apply_0 = function apply_771(arg0){
  return $lambda$19_4(this.$$outer_0, this.blocks_1, arg0);
}
;
function CachingVerifyingStorage$lambda$2$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3099, $wnd.Function, $intern_22, CachingVerifyingStorage$lambda$2$Type);
_.apply_0 = function apply_772(arg0){
  return $lambda$2_12(this.$$outer_0, arg0);
}
;
function CachingVerifyingStorage$lambda$20$Type($$outer_0, key_1){
  this.$$outer_0 = $$outer_0;
  this.key_1 = key_1;
}

defineClass(3096, $wnd.Function, $intern_22, CachingVerifyingStorage$lambda$20$Type);
_.apply_0 = function apply_773(arg0){
  return $lambda$20_4(this.$$outer_0, this.key_1, arg0);
}
;
function CachingVerifyingStorage$lambda$21$Type($$outer_0, key_1){
  this.$$outer_0 = $$outer_0;
  this.key_1 = key_1;
}

defineClass(3106, $wnd.Function, $intern_22, CachingVerifyingStorage$lambda$21$Type);
_.apply_0 = function apply_774(arg0){
  return $lambda$21_3(this.$$outer_0, this.key_1, arg0);
}
;
function CachingVerifyingStorage$lambda$22$Type(bytes_0){
  this.bytes_0 = bytes_0;
}

defineClass(965, 1, {}, CachingVerifyingStorage$lambda$22$Type);
_.get_0 = function get_65(){
  return this.bytes_0;
}
;
var Lpeergos_shared_storage_CachingVerifyingStorage$lambda$22$Type_2_classLit = createForClass('peergos.shared.storage', 'CachingVerifyingStorage/lambda$22$Type', 965);
function CachingVerifyingStorage$lambda$24$Type(){
}

defineClass(966, 1, {}, CachingVerifyingStorage$lambda$24$Type);
_.get_0 = function get_66(){
  return new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY));
}
;
var Lpeergos_shared_storage_CachingVerifyingStorage$lambda$24$Type_2_classLit = createForClass('peergos.shared.storage', 'CachingVerifyingStorage/lambda$24$Type', 966);
function CachingVerifyingStorage$lambda$25$Type($$outer_0, key_1, pipe_2){
  this.$$outer_0 = $$outer_0;
  this.key_1 = key_1;
  this.pipe_2 = pipe_2;
}

defineClass(3097, $wnd.Function, $intern_22, CachingVerifyingStorage$lambda$25$Type);
_.apply_0 = function apply_775(arg0){
  return $lambda$25_0(this.$$outer_0, this.key_1, this.pipe_2, arg0);
}
;
function CachingVerifyingStorage$lambda$26$Type($$outer_0, key_1, pipe_2){
  this.$$outer_0 = $$outer_0;
  this.key_1 = key_1;
  this.pipe_2 = pipe_2;
}

defineClass(3098, $wnd.Function, $intern_22, CachingVerifyingStorage$lambda$26$Type);
_.apply_0 = function apply_776(arg0){
  return $lambda$26_2(this.$$outer_0, this.key_1, this.pipe_2, arg0);
}
;
function CachingVerifyingStorage$lambda$3$Type($$outer_0, b_1){
  this.$$outer_0 = $$outer_0;
  this.b_1 = b_1;
}

defineClass(3101, $wnd.Function, $intern_22, CachingVerifyingStorage$lambda$3$Type);
_.apply_0 = function apply_777(arg0){
  return $lambda$3_12(this.$$outer_0, this.b_1, arg0);
}
;
function CachingVerifyingStorage$lambda$4$Type(blocks_0){
  this.blocks_0 = blocks_0;
}

defineClass(3100, $wnd.Function, $intern_22, CachingVerifyingStorage$lambda$4$Type);
_.apply_0 = function apply_778(arg0){
  return this.blocks_0;
}
;
function CachingVerifyingStorage$lambda$5$Type($$outer_0, blocks_1){
  this.$$outer_0 = $$outer_0;
  this.blocks_1 = blocks_1;
}

defineClass(3090, $wnd.Function, $intern_22, CachingVerifyingStorage$lambda$5$Type);
_.apply_0 = function apply_779(arg0){
  return $lambda$5_9(this.$$outer_0, this.blocks_1, arg0);
}
;
function CachingVerifyingStorage$lambda$6$Type($$outer_0, blocks_1, hashes_2){
  this.$$outer_0 = $$outer_0;
  this.blocks_1 = blocks_1;
  this.hashes_2 = hashes_2;
}

defineClass(3102, $wnd.Function, $intern_22, CachingVerifyingStorage$lambda$6$Type);
_.apply_0 = function apply_780(arg0){
  return $lambda$6_8(this.$$outer_0, this.blocks_1, this.hashes_2, arg0);
}
;
function CachingVerifyingStorage$lambda$7$Type(h_0){
  this.h_0 = h_0;
}

defineClass(960, 1, {}, CachingVerifyingStorage$lambda$7$Type);
_.get_0 = function get_67(){
  return this.h_0;
}
;
var Lpeergos_shared_storage_CachingVerifyingStorage$lambda$7$Type_2_classLit = createForClass('peergos.shared.storage', 'CachingVerifyingStorage/lambda$7$Type', 960);
function CachingVerifyingStorage$lambda$8$Type($$outer_0, blocks_1){
  this.$$outer_0 = $$outer_0;
  this.blocks_1 = blocks_1;
}

defineClass(3091, $wnd.Function, $intern_22, CachingVerifyingStorage$lambda$8$Type);
_.apply_0 = function apply_781(arg0){
  return $lambda$8_4(this.$$outer_0, this.blocks_1, arg0);
}
;
function CachingVerifyingStorage$lambda$9$Type($$outer_0, key_1){
  this.$$outer_0 = $$outer_0;
  this.key_1 = key_1;
}

defineClass(3092, $wnd.Function, $intern_22, CachingVerifyingStorage$lambda$9$Type);
_.apply_0 = function apply_782(arg0){
  return $lambda$9_7(this.$$outer_0, this.key_1, arg0);
}
;
function CasException(actualExisting, claimedExisting){
  RuntimeException_0.call(this, 'CAS exception updating cryptree node. existing: ' + actualExisting + ', claimed: ' + claimedExisting);
}

function CasException_0(msg){
  RuntimeException_0.call(this, msg);
}

defineClass(312, 35, {4:1, 51:1, 35:1, 33:1, 312:1}, CasException, CasException_0);
var Lpeergos_shared_storage_CasException_2_classLit = createForClass('peergos.shared.storage', 'CasException', 312);
function ContentAddressedStorage$7methodref$of$Type(){
}

defineClass(1474, $wnd.Function, $intern_22, ContentAddressedStorage$7methodref$of$Type);
_.apply_0 = function apply_783(arg0){
  return $clinit_MaybeMultihash() , new MaybeMultihash(castTo(arg0, 58));
}
;
function ContentAddressedStorage$8methodref$ctor$Type(){
}

defineClass(1432, $wnd.Function, $intern_22, ContentAddressedStorage$8methodref$ctor$Type);
_.apply_0 = function apply_784(arg0){
  return new PublicKeyHash(castTo(arg0, 44));
}
;
function ContentAddressedStorage$9methodref$fromCbor$Type(){
}

defineClass(1475, $wnd.Function, $intern_22, ContentAddressedStorage$9methodref$fromCbor$Type);
_.apply_0 = function apply_785(arg0){
  return fromCbor_16(castTo(arg0, 7));
}
;
function $authReads(this$static, blocks){
  if (!this$static.isPeergosServer)
    return errored(new IllegalStateException_0('Cannot auth reads when not talking to a Peergos server!'));
  return $thenApply($postUnzip_0(this$static.poster, 'api/v0/blockstore/auth-reads', $toByteArray_2(new CborObject$CborList(blocks))), makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$2$Type.prototype.apply_0, ContentAddressedStorage$HTTP$lambda$2$Type, []));
}

function $authWrites(this$static, owner, writer, signedHashes, blockSizes, batIds, tid){
  var req, sizes;
  if (!this$static.isPeergosServer)
    return errored(new IllegalStateException_0('Cannot auth writes when not talking to a Peergos server!'));
  sizes = castTo($collect_0($map_0(blockSizes.stream(), makeLambdaFunction(ContentAddressedStorage$HTTP$1methodref$longValue$Type.prototype.apply_0, ContentAddressedStorage$HTTP$1methodref$longValue$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  req = new WriteAuthRequest(signedHashes, sizes, batIds);
  return $thenApply($postUnzip_0(this$static.poster, 'api/v0/blockstore/auth?owner=' + encode_9(owner.target.toString()) + '&writer=' + encode_9(writer.target.toString()) + '&transaction=' + encode_9(tid.id_0) + '&raw=' + true, $toByteArray_2($toCbor_65(req))), makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$5$Type.prototype.apply_0, ContentAddressedStorage$HTTP$lambda$5$Type, []));
}

function $blockStoreProperties(this$static){
  if (!this$static.isPeergosServer)
    return new CompletableFuture_0(new BlockStoreProperties(false, false, false, ($clinit_Optional() , $clinit_Optional() , EMPTY), (null , EMPTY)));
  return $thenApply($get_28(this$static.poster, 'api/v0/blockstore/props', ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)), makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$1$Type.prototype.apply_0, ContentAddressedStorage$HTTP$lambda$1$Type, []));
}

function $bulkPut(this$static, owner, writer, signatures, blocks, format, tid, progressConsumer){
  var FRAGMENTs_PER_QUERY, futures, grouped, groupedSignatures, identity, sizes;
  FRAGMENTs_PER_QUERY = this$static.isPeergosServer?1:1;
  grouped = ($clinit_ArrayOps() , castTo(range_0(0, (blocks.size() + FRAGMENTs_PER_QUERY - 1) / FRAGMENTs_PER_QUERY | 0).mapToObj(new ArrayOps$lambda$0$Type(blocks, FRAGMENTs_PER_QUERY)).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17));
  groupedSignatures = castTo(range_0(0, (signatures.size() + FRAGMENTs_PER_QUERY - 1) / FRAGMENTs_PER_QUERY | 0).mapToObj(new ArrayOps$lambda$0$Type(signatures, FRAGMENTs_PER_QUERY)).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [IDENTITY_FINISH]))), 17);
  sizes = castTo($collect_0($map_0(grouped.stream(), makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$16$Type.prototype.apply_0, ContentAddressedStorage$HTTP$lambda$16$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [IDENTITY_FINISH]))), 17);
  futures = castTo(range_0(0, grouped.size()).parallel_0().mapToObj(new ContentAddressedStorage$HTTP$lambda$18$Type(this$static, progressConsumer, sizes, owner, writer, groupedSignatures, grouped, format, tid)).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [IDENTITY_FINISH]))), 17);
  return $thenApply((identity = new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_LIST)) , castTo($reduce(futures.stream(), identity, new Futures$lambda$6$Type), 6)), makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$20$Type.prototype.apply_0, ContentAddressedStorage$HTTP$lambda$20$Type, []));
}

function $closeTransaction(this$static, owner, tid){
  if (!this$static.isPeergosServer)
    return new CompletableFuture_0(($clinit_Boolean() , true));
  return $thenApply($get_28(this$static.poster, 'api/v0/transaction/close?arg=' + tid.id_0 + '&owner=' + encode_9(owner.target.toString()), ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)), makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$8$Type.prototype.apply_0, ContentAddressedStorage$HTTP$lambda$8$Type, []));
}

function $get_19(this$static, owner, hash, bat){
  if (hash.type == ($clinit_Multihash$Type() , id_3))
    return new CompletableFuture_0(($clinit_Optional() , new Optional(checkCriticalNotNull(fromByteArray(copyOfRange(hash.hash_0, 0, hash.hash_0.length))))));
  if (this$static.isPeergosServer)
    return $thenApply($get_28(this$static.poster, 'api/v0/block/get?stream-channels=true&arg=' + hash + '&owner=' + encode_9(owner.target.toString()) + castToString($orElse($map(bat, makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$27$Type.prototype.apply_0, ContentAddressedStorage$HTTP$lambda$27$Type, [])), '')), ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)), makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$28$Type.prototype.apply_0, ContentAddressedStorage$HTTP$lambda$28$Type, []));
  return $thenCompose($thenCompose($thenApply($get_28(this$static.poster, 'api/v0/id', ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)), makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$0$Type.prototype.apply_0, ContentAddressedStorage$HTTP$lambda$0$Type, [])), makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$29$Type.prototype.apply_0, ContentAddressedStorage$HTTP$lambda$29$Type, [this$static, hash, bat])), makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$32$Type.prototype.apply_0, ContentAddressedStorage$HTTP$lambda$32$Type, [this$static, hash, owner]));
}

function $getChampLookup_0(this$static, owner, root, champKey, bat, committedRoot){
  if (!this$static.isPeergosServer) {
    return $getChampLookup_1(this$static, owner, root, champKey, bat, this$static.hasher);
  }
  return $thenApply($thenApply($thenApply($get_28(this$static.poster, 'api/v0/champ/get?arg=' + root.toString() + '&arg=' + bytesToHex(champKey) + '&owner=' + encode_9(owner.target.toString()) + castToString($orElse($map(bat, makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$9$Type.prototype.apply_0, ContentAddressedStorage$HTTP$lambda$9$Type, [])), '')), ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)), makeLambdaFunction(ContentAddressedStorage$HTTP$3methodref$fromByteArray$Type.prototype.apply_0, ContentAddressedStorage$HTTP$3methodref$fromByteArray$Type, [])), makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$11$Type.prototype.apply_0, ContentAddressedStorage$HTTP$lambda$11$Type, [])), makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$12$Type.prototype.apply_0, ContentAddressedStorage$HTTP$lambda$12$Type, []));
}

function $getChampLookup_1(this$static, owner, root, champKey, bat, hasher){
  var cache;
  return cache = new CachingStorage(this$static) , $thenApply($thenApply($thenApply($thenCompose(create_4(owner, root, makeLambdaFunction(ContentAddressedStorage$lambda$3$Type.prototype.apply_0, ContentAddressedStorage$lambda$3$Type, []), cache, hasher, makeLambdaFunction(ContentAddressedStorage$lambda$4$Type.prototype.apply_0, ContentAddressedStorage$lambda$4$Type, [])), makeLambdaFunction(ContentAddressedStorage$lambda$5$Type.prototype.apply_0, ContentAddressedStorage$lambda$5$Type, [champKey])), makeLambdaFunction(ContentAddressedStorage$lambda$6$Type.prototype.apply_0, ContentAddressedStorage$lambda$6$Type, [])), makeLambdaFunction(ContentAddressedStorage$lambda$9$Type.prototype.apply_0, ContentAddressedStorage$lambda$9$Type, [cache, owner, bat])), makeLambdaFunction(ContentAddressedStorage$lambda$10$Type.prototype.apply_0, ContentAddressedStorage$lambda$10$Type, [cache]));
}

function $getRaw_0(this$static, owner, hash, bat){
  if (hash.type == ($clinit_Multihash$Type() , id_3))
    return new CompletableFuture_0(($clinit_Optional() , new Optional(checkCriticalNotNull(copyOfRange(hash.hash_0, 0, hash.hash_0.length)))));
  if (this$static.isPeergosServer)
    return $thenApply($get_28(this$static.poster, 'api/v0/block/get?stream-channels=true&arg=' + hash + '&owner=' + encode_9(owner.target.toString()) + castToString($orElse($map(bat, makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$34$Type.prototype.apply_0, ContentAddressedStorage$HTTP$lambda$34$Type, [])), '')), ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)), makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$35$Type.prototype.apply_0, ContentAddressedStorage$HTTP$lambda$35$Type, []));
  return $thenApply($thenCompose($thenCompose($thenApply($get_28(this$static.poster, 'api/v0/id', ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)), makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$0$Type.prototype.apply_0, ContentAddressedStorage$HTTP$lambda$0$Type, [])), makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$36$Type.prototype.apply_0, ContentAddressedStorage$HTTP$lambda$36$Type, [this$static, hash, bat])), makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$39$Type.prototype.apply_0, ContentAddressedStorage$HTTP$lambda$39$Type, [this$static, hash, owner])), makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$40$Type.prototype.apply_0, ContentAddressedStorage$HTTP$lambda$40$Type, []));
}

function $lambda$18_2(this$static, progressConsumer_1, sizes_2, owner_3, writer_4, groupedSignatures_5, grouped_6, format_7, tid_8, i_8){
  return $thenApply($put_17(this$static, owner_3, writer_4, castTo(groupedSignatures_5.getAtIndex(i_8), 17), castTo(grouped_6.getAtIndex(i_8), 17), format_7, tid_8), makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$19$Type.prototype.apply_0, ContentAddressedStorage$HTTP$lambda$19$Type, [progressConsumer_1, sizes_2, i_8]));
}

function $lambda$29_0(this$static, hash_1, bat_2, ourId_2){
  return castTo($orElse($map(bat_2, makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$30$Type.prototype.apply_0, ContentAddressedStorage$HTTP$lambda$30$Type, [this$static, hash_1, ourId_2, bat_2])), new CompletableFuture_0('')), 87);
}

function $lambda$30_3(this$static, hash_1, ourId_2, bat_3, b_3){
  var now_0;
  return $thenApply($generateAuth(b_3.bat, hash_1, ourId_2, (now_0 = ($clinit_ZoneOffset() , $clinit_LocalDateTime() , now_4()) , $replaceAll($replaceAll(($toString_1(now_0.date) + 'T' + $toString_3(now_0.time)).substr(0, 19), '-', ''), ':', '') + 'Z'), (checkCriticalElement(bat_3.ref != null) , castTo(bat_3.ref, 112)).id_0, this$static.hasher), makeLambdaFunction(ContentAddressedStorage$HTTP$5methodref$encode$Type.prototype.apply_0, ContentAddressedStorage$HTTP$5methodref$encode$Type, []));
}

function $lambda$32_1(this$static, hash_1, owner_2, auth_2){
  return $thenApply($get_28(this$static.poster, 'api/v0/block/get?stream-channels=true&arg=' + hash_1 + '&owner=' + encode_9(owner_2.target.toString()) + '&auth=' + auth_2, ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)), makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$33$Type.prototype.apply_0, ContentAddressedStorage$HTTP$lambda$33$Type, []));
}

function $lambda$36_2(this$static, hash_1, bat_2, ourId_2){
  return castTo($orElse($map(bat_2, makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$37$Type.prototype.apply_0, ContentAddressedStorage$HTTP$lambda$37$Type, [this$static, hash_1, ourId_2, bat_2])), new CompletableFuture_0('')), 87);
}

function $lambda$37_1(this$static, hash_1, ourId_2, bat_3, b_3){
  var now_0;
  return $thenApply($generateAuth(b_3.bat, hash_1, ourId_2, (now_0 = ($clinit_ZoneOffset() , $clinit_LocalDateTime() , now_4()) , $replaceAll($replaceAll(($toString_1(now_0.date) + 'T' + $toString_3(now_0.time)).substr(0, 19), '-', ''), ':', '') + 'Z'), (checkCriticalElement(bat_3.ref != null) , castTo(bat_3.ref, 112)).id_0, this$static.hasher), makeLambdaFunction(ContentAddressedStorage$HTTP$6methodref$encode$Type.prototype.apply_0, ContentAddressedStorage$HTTP$6methodref$encode$Type, []));
}

function $lambda$39_2(this$static, hash_1, owner_2, auth_2){
  return $get_28(this$static.poster, 'api/v0/block/get?stream-channels=true&arg=' + hash_1 + '&owner=' + encode_9(owner_2.target.toString()) + '&auth=' + auth_2, ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP));
}

function $put_17(this$static, owner, writer, signatures, blocks, format, tid){
  var block, block$iterator, timeoutMillis;
  for (block$iterator = blocks.iterator(); block$iterator.hasNext_0();) {
    block = castTo(block$iterator.next_1(), 11);
    if (block.length > 1048676)
      throw toJs(new IllegalStateException_0('Invalid block size: ' + block.length + ', blocks must be smaller than 1MiB!'));
  }
  timeoutMillis = blocks.size() > 1?30000:-1;
  return $thenApply($thenApply($postMultipart_0(this$static.poster, 'api/v0/block/put?format=' + format + '&owner=' + encode_9(owner.target.toString()) + '&transaction=' + encode_9(tid.id_0) + '&writer=' + encode_9(writer.target.toString()) + '&signatures=' + castToString($reduce_0($map_0(signatures.stream(), makeLambdaFunction(ContentAddressedStorage$HTTP$4methodref$bytesToHex$Type.prototype.apply_0, ContentAddressedStorage$HTTP$4methodref$bytesToHex$Type, [])), '', new ContentAddressedStorage$HTTP$lambda$23$Type)).substr(1), blocks, timeoutMillis), makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$24$Type.prototype.apply_0, ContentAddressedStorage$HTTP$lambda$24$Type, [])), makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$26$Type.prototype.apply_0, ContentAddressedStorage$HTTP$lambda$26$Type, [blocks]));
}

function $startTransaction(this$static, owner){
  if (!this$static.isPeergosServer)
    return new CompletableFuture_0(new TransactionId('' + toString_4($nextInt(this$static.r, $intern_1))));
  return $thenApply($get_28(this$static.poster, 'api/v0/transaction/start?owner=' + encode_9(owner.target.toString()), ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)), makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$7$Type.prototype.apply_0, ContentAddressedStorage$HTTP$lambda$7$Type, []));
}

function ContentAddressedStorage$HTTP(poster, hasher){
  this.r = new Random;
  this.poster = poster;
  this.isPeergosServer = true;
  this.hasher = hasher;
}

function encode_9(component){
  var e;
  try {
    return encode_1(component);
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 136)) {
      e = $e0;
      throw toJs(new RuntimeException_2(e));
    }
     else 
      throw toJs($e0);
  }
}

function getObjectHash(rawJson){
  var hash, json, val;
  json = castTo(rawJson, 68);
  hash = castToString(json.get('Hash'));
  if (hash == null) {
    val = json.get('Key');
    if (instanceOfString(val))
      hash = castToString(val);
    else if (instanceOf(val, 68))
      hash = castToString(castTo(val, 68).get('/'));
    else 
      throw toJs(new IllegalStateException_0("Couldn't parse hash from response!"));
  }
  return decode_2(hash);
}

function lambda$19_0(progressConsumer_0, sizes_1, i_2, hash_3){
  progressConsumer_0 != null && progressConsumer_0(valueOf_2(castTo(sizes_1.getAtIndex(i_2), 100).value_0));
  return hash_3;
}

function lambda$26_0(blocks_0, hashes_1){
  if (hashes_1.size() != blocks_0.size())
    throw toJs(new IllegalStateException_0('Incorrect number of hashes returned from bulk write: ' + hashes_1.size() + ' != ' + blocks_0.size()));
  return hashes_1;
}

defineClass(583, 1, {}, ContentAddressedStorage$HTTP);
_.clearBlockCache = function clearBlockCache_3(){
}
;
_.downloadFragments = function downloadFragments_3(owner, hashes, bats, h, monitor, spaceIncreaseFactor){
  var futures, identity;
  return $clinit_NetworkAccess() , futures = castTo(castTo(range_0(0, hashes.size()).mapToObj(new NetworkAccess$lambda$90$Type).parallel(), 147).map_1(makeLambdaFunction(NetworkAccess$lambda$91$Type.prototype.apply_0, NetworkAccess$lambda$91$Type, [monitor, spaceIncreaseFactor, hashes, this, owner, bats])).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17) , $thenApply((identity = new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_LIST)) , castTo($reduce(futures.stream(), identity, new Futures$lambda$6$Type), 6)), makeLambdaFunction(NetworkAccess$lambda$97$Type.prototype.apply_0, NetworkAccess$lambda$97$Type, []));
}
;
_.getChampLookup_0 = function getChampLookup_7(owner, root, champKey, bat, committedRoot, hasher){
  return $getChampLookup_1(this, owner, root, champKey, bat, hasher);
}
;
_.getSigningKey = function getSigningKey_1(owner, hash){
  return $thenApply(hash.type == ($clinit_Multihash$Type() , id_3)?new CompletableFuture_0(($clinit_Optional() , new Optional(checkCriticalNotNull(fromByteArray(copyOfRange(hash.hash_0, 0, hash.hash_0.length)))))):$get_19(this, owner, hash.target, ($clinit_Optional() , $clinit_Optional() , EMPTY)), makeLambdaFunction(ContentAddressedStorage$lambda$13$Type.prototype.apply_0, ContentAddressedStorage$lambda$13$Type, []));
}
;
_.put_0 = function put_18(owner, writer, block, hasher, tid){
  return $thenCompose(hasher.scriptJS.sha256(block), makeLambdaFunction(ContentAddressedStorage$lambda$0$Type.prototype.apply_0, ContentAddressedStorage$lambda$0$Type, [this, owner, writer, block, tid]));
}
;
_.put_2 = function put_20(owner, writer, signature, block, tid){
  return $thenApply($bulkPut(this, owner, writer, ($clinit_Collections() , new Collections$SingletonList(signature)), new Collections$SingletonList(block), 'dag-cbor', tid, makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$14$Type.prototype.accept_5, ContentAddressedStorage$HTTP$lambda$14$Type, [])), makeLambdaFunction(ContentAddressedStorage$lambda$1$Type.prototype.apply_0, ContentAddressedStorage$lambda$1$Type, []));
}
;
_.putBoxingKey = function putBoxingKey_1(owner, signature, key, tid){
  return $putBoxingKey(this, owner, signature, key, tid);
}
;
_.putSigningKey = function putSigningKey_3(signature, owner, newKey, tid){
  return new CompletableFuture_0(new PublicKeyHash(new Cid(1, ($clinit_Cid$Codec() , DagCbor), ($clinit_Multihash$Type() , id_3), $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborLong(($clinit_PublicSigningKey$Type() , Ed25519).value), new CborObject$CborByteArray(newKey.publicKey)])))))));
}
;
_.putSigningKey_0 = function putSigningKey_4(signature, owner, writer, newKey, tid){
  return new CompletableFuture_0(new PublicKeyHash(new Cid(1, ($clinit_Cid$Codec() , DagCbor), ($clinit_Multihash$Type() , id_3), $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborLong(($clinit_PublicSigningKey$Type() , Ed25519).value), new CborObject$CborByteArray(newKey.publicKey)])))))));
}
;
_.blockStoreProperties = function blockStoreProperties_4(){
  return $blockStoreProperties(this);
}
;
_.closeTransaction = function closeTransaction_2(owner, tid){
  return $closeTransaction(this, owner, tid);
}
;
_.get_1 = function get_68(owner, hash, bat){
  return $get_19(this, owner, hash, bat);
}
;
_.getChampLookup = function getChampLookup_6(owner, root, champKey, bat, committedRoot){
  return $getChampLookup_0(this, owner, root, champKey, bat, committedRoot);
}
;
_.getRaw = function getRaw_4(owner, hash, bat){
  return $getRaw_0(this, owner, hash, bat);
}
;
_.id_1 = function id_7(){
  return $thenApply($get_28(this.poster, 'api/v0/id', ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)), makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$0$Type.prototype.apply_0, ContentAddressedStorage$HTTP$lambda$0$Type, []));
}
;
_.put_1 = function put_19(owner, writer, signedHashes, blocks, tid){
  return $bulkPut(this, owner, writer, signedHashes, blocks, 'dag-cbor', tid, makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$14$Type.prototype.accept_5, ContentAddressedStorage$HTTP$lambda$14$Type, []));
}
;
_.putRaw = function putRaw_4(owner, writer, signatures, blocks, tid, progressConsumer){
  return $thenApply($bulkPut(this, owner, writer, signatures, blocks, 'raw', tid, progressConsumer), makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$15$Type.prototype.apply_0, ContentAddressedStorage$HTTP$lambda$15$Type, []));
}
;
_.startTransaction = function startTransaction_2(owner){
  return $startTransaction(this, owner);
}
;
_.isPeergosServer = false;
var Lpeergos_shared_storage_ContentAddressedStorage$HTTP_2_classLit = createForClass('peergos.shared.storage', 'ContentAddressedStorage/HTTP', 583);
function ContentAddressedStorage$HTTP$0methodref$fromCbor$Type(){
}

defineClass(1468, $wnd.Function, $intern_22, ContentAddressedStorage$HTTP$0methodref$fromCbor$Type);
_.apply_0 = function apply_786(arg0){
  return fromCbor_72(castTo(arg0, 7));
}
;
function ContentAddressedStorage$HTTP$1methodref$longValue$Type(){
}

defineClass(1435, $wnd.Function, $intern_22, ContentAddressedStorage$HTTP$1methodref$longValue$Type);
_.apply_0 = function apply_787(arg0){
  return valueOf_2(castTo(arg0, 100).value_0);
}
;
function ContentAddressedStorage$HTTP$2methodref$fromCbor$Type(){
}

defineClass(1469, $wnd.Function, $intern_22, ContentAddressedStorage$HTTP$2methodref$fromCbor$Type);
_.apply_0 = function apply_788(arg0){
  return fromCbor_72(castTo(arg0, 7));
}
;
function ContentAddressedStorage$HTTP$3methodref$fromByteArray$Type(){
}

defineClass(1440, $wnd.Function, $intern_22, ContentAddressedStorage$HTTP$3methodref$fromByteArray$Type);
_.apply_0 = function apply_789(arg0){
  return fromByteArray(castTo(arg0, 11));
}
;
function ContentAddressedStorage$HTTP$4methodref$bytesToHex$Type(){
}

defineClass(1445, $wnd.Function, $intern_22, ContentAddressedStorage$HTTP$4methodref$bytesToHex$Type);
_.apply_0 = function apply_790(arg0){
  return bytesToHex(castTo(arg0, 11));
}
;
function ContentAddressedStorage$HTTP$5methodref$encode$Type(){
}

defineClass(1459, $wnd.Function, $intern_22, ContentAddressedStorage$HTTP$5methodref$encode$Type);
_.apply_0 = function apply_791(arg0){
  return bytesToHex($toByteArray_2($toCbor_68(castTo(arg0, 374))));
}
;
function ContentAddressedStorage$HTTP$6methodref$encode$Type(){
}

defineClass(1462, $wnd.Function, $intern_22, ContentAddressedStorage$HTTP$6methodref$encode$Type);
_.apply_0 = function apply_792(arg0){
  return bytesToHex($toByteArray_2($toCbor_68(castTo(arg0, 374))));
}
;
function ContentAddressedStorage$HTTP$lambda$0$Type(){
}

defineClass(442, $wnd.Function, $intern_22, ContentAddressedStorage$HTTP$lambda$0$Type);
_.apply_0 = function apply_793(arg0){
  return decodePeerId(castToString(castTo(parse_1($create_0(castTo(arg0, 11), 0, castTo(arg0, 11).length, ($clinit_EmulatedCharset() , UTF_8_0)), initUnidimensionalArray(I_classLit, $intern_29, 8, 1, 15, 1)), 68).get('ID')));
}
;
function ContentAddressedStorage$HTTP$lambda$1$Type(){
}

defineClass(1433, $wnd.Function, $intern_22, ContentAddressedStorage$HTTP$lambda$1$Type);
_.apply_0 = function apply_794(arg0){
  return fromCbor_70(deserialize(new CborDecoder(new ByteArrayInputStream(castTo(arg0, 11))), castTo(arg0, 11).length));
}
;
function ContentAddressedStorage$HTTP$lambda$11$Type(){
}

defineClass(1441, $wnd.Function, $intern_22, ContentAddressedStorage$HTTP$lambda$11$Type);
_.apply_0 = function apply_795(arg0){
  return castTo(castTo(arg0, 48), 21);
}
;
function ContentAddressedStorage$HTTP$lambda$12$Type(){
}

defineClass(1442, $wnd.Function, $intern_22, ContentAddressedStorage$HTTP$lambda$12$Type);
_.apply_0 = function apply_796(arg0){
  return $map_2(castTo(arg0, 21), makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$13$Type.prototype.apply_0, ContentAddressedStorage$HTTP$lambda$13$Type, []));
}
;
function ContentAddressedStorage$HTTP$lambda$13$Type(){
}

defineClass(1470, $wnd.Function, $intern_22, ContentAddressedStorage$HTTP$lambda$13$Type);
_.apply_0 = function apply_797(arg0){
  return castTo(castTo(arg0, 7), 27).value_0;
}
;
function ContentAddressedStorage$HTTP$lambda$14$Type(){
}

defineClass(1190, $wnd.Function, {}, ContentAddressedStorage$HTTP$lambda$14$Type);
_.accept_5 = function accept_88(arg0){
}
;
function ContentAddressedStorage$HTTP$lambda$15$Type(){
}

defineClass(1252, $wnd.Function, $intern_22, ContentAddressedStorage$HTTP$lambda$15$Type);
_.apply_0 = function apply_798(arg0){
  return castTo(arg0, 17);
}
;
function ContentAddressedStorage$HTTP$lambda$16$Type(){
}

defineClass(1443, $wnd.Function, $intern_22, ContentAddressedStorage$HTTP$lambda$16$Type);
_.apply_0 = function apply_799(arg0){
  return valueOf_1(toInt_0($collect($mapToInt(castTo(arg0, 17).stream(), new ContentAddressedStorage$HTTP$lambda$17$Type)).sum));
}
;
function ContentAddressedStorage$HTTP$lambda$17$Type(){
}

defineClass(585, 1, {}, ContentAddressedStorage$HTTP$lambda$17$Type);
_.applyAsInt = function applyAsInt_2(arg0){
  return castTo(arg0, 11).length;
}
;
var Lpeergos_shared_storage_ContentAddressedStorage$HTTP$lambda$17$Type_2_classLit = createForClass('peergos.shared.storage', 'ContentAddressedStorage/HTTP/lambda$17$Type', 585);
function ContentAddressedStorage$HTTP$lambda$18$Type($$outer_0, progressConsumer_1, sizes_2, owner_3, writer_4, groupedSignatures_5, grouped_6, format_7, tid_8){
  this.$$outer_0 = $$outer_0;
  this.progressConsumer_1 = progressConsumer_1;
  this.sizes_2 = sizes_2;
  this.owner_3 = owner_3;
  this.writer_4 = writer_4;
  this.groupedSignatures_5 = groupedSignatures_5;
  this.grouped_6 = grouped_6;
  this.format_7 = format_7;
  this.tid_8 = tid_8;
}

defineClass(586, 1, {}, ContentAddressedStorage$HTTP$lambda$18$Type);
_.apply_2 = function apply_800(arg0){
  return $lambda$18_2(this.$$outer_0, this.progressConsumer_1, this.sizes_2, this.owner_3, this.writer_4, this.groupedSignatures_5, this.grouped_6, this.format_7, this.tid_8, arg0);
}
;
var Lpeergos_shared_storage_ContentAddressedStorage$HTTP$lambda$18$Type_2_classLit = createForClass('peergos.shared.storage', 'ContentAddressedStorage/HTTP/lambda$18$Type', 586);
function ContentAddressedStorage$HTTP$lambda$19$Type(progressConsumer_0, sizes_1, i_2){
  this.progressConsumer_0 = progressConsumer_0;
  this.sizes_1 = sizes_1;
  this.i_2 = i_2;
}

defineClass(1457, $wnd.Function, $intern_22, ContentAddressedStorage$HTTP$lambda$19$Type);
_.apply_0 = function apply_801(arg0){
  return lambda$19_0(this.progressConsumer_0, this.sizes_1, this.i_2, arg0);
}
;
_.i_2 = 0;
function ContentAddressedStorage$HTTP$lambda$2$Type(){
}

defineClass(1434, $wnd.Function, $intern_22, ContentAddressedStorage$HTTP$lambda$2$Type);
_.apply_0 = function apply_802(arg0){
  return castTo($collect_0($map_0(castTo(fromByteArray(castTo(arg0, 11)), 21).value_0.stream(), makeLambdaFunction(ContentAddressedStorage$HTTP$0methodref$fromCbor$Type.prototype.apply_0, ContentAddressedStorage$HTTP$0methodref$fromCbor$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
}
;
function ContentAddressedStorage$HTTP$lambda$20$Type(){
}

defineClass(1444, $wnd.Function, $intern_22, ContentAddressedStorage$HTTP$lambda$20$Type);
_.apply_0 = function apply_803(arg0){
  return castTo($collect_0($flatMap_0(castTo(arg0, 17).stream(), makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$21$Type.prototype.apply_0, ContentAddressedStorage$HTTP$lambda$21$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
}
;
function ContentAddressedStorage$HTTP$lambda$21$Type(){
}

defineClass(1471, $wnd.Function, $intern_22, ContentAddressedStorage$HTTP$lambda$21$Type);
_.apply_0 = function apply_804(arg0){
  return castTo(arg0, 17).stream();
}
;
function ContentAddressedStorage$HTTP$lambda$23$Type(){
}

defineClass(587, 1, $intern_34, ContentAddressedStorage$HTTP$lambda$23$Type);
_.apply_1 = function apply_805(arg0, arg1){
  return castToString(arg0) + ',' + castToString(arg1);
}
;
var Lpeergos_shared_storage_ContentAddressedStorage$HTTP$lambda$23$Type_2_classLit = createForClass('peergos.shared.storage', 'ContentAddressedStorage/HTTP/lambda$23$Type', 587);
function ContentAddressedStorage$HTTP$lambda$24$Type(){
}

defineClass(1446, $wnd.Function, $intern_22, ContentAddressedStorage$HTTP$lambda$24$Type);
_.apply_0 = function apply_806(arg0){
  return castTo($collect_0($map_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(parseStream($create(castTo(arg0, 11))), 16)), makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$25$Type.prototype.apply_0, ContentAddressedStorage$HTTP$lambda$25$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
}
;
function ContentAddressedStorage$HTTP$lambda$25$Type(){
}

defineClass(1472, $wnd.Function, $intern_22, ContentAddressedStorage$HTTP$lambda$25$Type);
_.apply_0 = function apply_807(arg0){
  return getObjectHash(arg0);
}
;
function ContentAddressedStorage$HTTP$lambda$26$Type(blocks_0){
  this.blocks_0 = blocks_0;
}

defineClass(1447, $wnd.Function, $intern_22, ContentAddressedStorage$HTTP$lambda$26$Type);
_.apply_0 = function apply_808(arg0){
  return lambda$26_0(this.blocks_0, arg0);
}
;
function ContentAddressedStorage$HTTP$lambda$27$Type(){
}

defineClass(1448, $wnd.Function, $intern_22, ContentAddressedStorage$HTTP$lambda$27$Type);
_.apply_0 = function apply_809(arg0){
  return '&bat=' + encode_6(($clinit_Multibase$Base() , Base58BTC), $toByteArray_2($toCbor_67(castTo(arg0, 112))));
}
;
function ContentAddressedStorage$HTTP$lambda$28$Type(){
}

defineClass(1449, $wnd.Function, $intern_22, ContentAddressedStorage$HTTP$lambda$28$Type);
_.apply_0 = function apply_810(arg0){
  return castTo(arg0, 11).length == 0?($clinit_Optional() , $clinit_Optional() , EMPTY):($clinit_Optional() , new Optional(checkCriticalNotNull(deserialize(new CborDecoder(new ByteArrayInputStream(castTo(arg0, 11))), castTo(arg0, 11).length))));
}
;
function ContentAddressedStorage$HTTP$lambda$29$Type($$outer_0, hash_1, bat_2){
  this.$$outer_0 = $$outer_0;
  this.hash_1 = hash_1;
  this.bat_2 = bat_2;
}

defineClass(1450, $wnd.Function, $intern_22, ContentAddressedStorage$HTTP$lambda$29$Type);
_.apply_0 = function apply_811(arg0){
  return $lambda$29_0(this.$$outer_0, this.hash_1, this.bat_2, arg0);
}
;
function ContentAddressedStorage$HTTP$lambda$30$Type($$outer_0, hash_1, ourId_2, bat_3){
  this.$$outer_0 = $$outer_0;
  this.hash_1 = hash_1;
  this.ourId_2 = ourId_2;
  this.bat_3 = bat_3;
}

defineClass(1458, $wnd.Function, $intern_22, ContentAddressedStorage$HTTP$lambda$30$Type);
_.apply_0 = function apply_812(arg0){
  return $lambda$30_3(this.$$outer_0, this.hash_1, this.ourId_2, this.bat_3, arg0);
}
;
function ContentAddressedStorage$HTTP$lambda$32$Type($$outer_0, hash_1, owner_2){
  this.$$outer_0 = $$outer_0;
  this.hash_1 = hash_1;
  this.owner_2 = owner_2;
}

defineClass(1451, $wnd.Function, $intern_22, ContentAddressedStorage$HTTP$lambda$32$Type);
_.apply_0 = function apply_813(arg0){
  return $lambda$32_1(this.$$outer_0, this.hash_1, this.owner_2, arg0);
}
;
function ContentAddressedStorage$HTTP$lambda$33$Type(){
}

defineClass(1460, $wnd.Function, $intern_22, ContentAddressedStorage$HTTP$lambda$33$Type);
_.apply_0 = function apply_814(arg0){
  return castTo(arg0, 11).length == 0?($clinit_Optional() , $clinit_Optional() , EMPTY):($clinit_Optional() , new Optional(checkCriticalNotNull(deserialize(new CborDecoder(new ByteArrayInputStream(castTo(arg0, 11))), castTo(arg0, 11).length))));
}
;
function ContentAddressedStorage$HTTP$lambda$34$Type(){
}

defineClass(1452, $wnd.Function, $intern_22, ContentAddressedStorage$HTTP$lambda$34$Type);
_.apply_0 = function apply_815(arg0){
  return '&bat=' + encode_6(($clinit_Multibase$Base() , Base58BTC), $toByteArray_2($toCbor_67(castTo(arg0, 112))));
}
;
function ContentAddressedStorage$HTTP$lambda$35$Type(){
}

defineClass(1453, $wnd.Function, $intern_22, ContentAddressedStorage$HTTP$lambda$35$Type);
_.apply_0 = function apply_816(arg0){
  return castTo(arg0, 11).length == 0?($clinit_Optional() , $clinit_Optional() , EMPTY):($clinit_Optional() , new Optional(checkCriticalNotNull(castTo(arg0, 11))));
}
;
function ContentAddressedStorage$HTTP$lambda$36$Type($$outer_0, hash_1, bat_2){
  this.$$outer_0 = $$outer_0;
  this.hash_1 = hash_1;
  this.bat_2 = bat_2;
}

defineClass(1454, $wnd.Function, $intern_22, ContentAddressedStorage$HTTP$lambda$36$Type);
_.apply_0 = function apply_817(arg0){
  return $lambda$36_2(this.$$outer_0, this.hash_1, this.bat_2, arg0);
}
;
function ContentAddressedStorage$HTTP$lambda$37$Type($$outer_0, hash_1, ourId_2, bat_3){
  this.$$outer_0 = $$outer_0;
  this.hash_1 = hash_1;
  this.ourId_2 = ourId_2;
  this.bat_3 = bat_3;
}

defineClass(1461, $wnd.Function, $intern_22, ContentAddressedStorage$HTTP$lambda$37$Type);
_.apply_0 = function apply_818(arg0){
  return $lambda$37_1(this.$$outer_0, this.hash_1, this.ourId_2, this.bat_3, arg0);
}
;
function ContentAddressedStorage$HTTP$lambda$39$Type($$outer_0, hash_1, owner_2){
  this.$$outer_0 = $$outer_0;
  this.hash_1 = hash_1;
  this.owner_2 = owner_2;
}

defineClass(1455, $wnd.Function, $intern_22, ContentAddressedStorage$HTTP$lambda$39$Type);
_.apply_0 = function apply_819(arg0){
  return $lambda$39_2(this.$$outer_0, this.hash_1, this.owner_2, arg0);
}
;
function ContentAddressedStorage$HTTP$lambda$40$Type(){
}

defineClass(1456, $wnd.Function, $intern_22, ContentAddressedStorage$HTTP$lambda$40$Type);
_.apply_0 = function apply_820(arg0){
  return castTo(arg0, 11).length == 0?($clinit_Optional() , $clinit_Optional() , EMPTY):($clinit_Optional() , new Optional(checkCriticalNotNull(castTo(arg0, 11))));
}
;
function ContentAddressedStorage$HTTP$lambda$5$Type(){
}

defineClass(1436, $wnd.Function, $intern_22, ContentAddressedStorage$HTTP$lambda$5$Type);
_.apply_0 = function apply_821(arg0){
  return castTo($collect_0($map_0(castTo(fromByteArray(castTo(arg0, 11)), 21).value_0.stream(), makeLambdaFunction(ContentAddressedStorage$HTTP$2methodref$fromCbor$Type.prototype.apply_0, ContentAddressedStorage$HTTP$2methodref$fromCbor$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
}
;
function ContentAddressedStorage$HTTP$lambda$7$Type(){
}

defineClass(1437, $wnd.Function, $intern_22, ContentAddressedStorage$HTTP$lambda$7$Type);
_.apply_0 = function apply_822(arg0){
  return new TransactionId($create_0(castTo(arg0, 11), 0, castTo(arg0, 11).length, ($clinit_EmulatedCharset() , UTF_8_0)));
}
;
function ContentAddressedStorage$HTTP$lambda$8$Type(){
}

defineClass(1438, $wnd.Function, $intern_22, ContentAddressedStorage$HTTP$lambda$8$Type);
_.apply_0 = function apply_823(arg0){
  return $clinit_Boolean() , $equals_0($create_0(castTo(arg0, 11), 0, castTo(arg0, 11).length, ($clinit_EmulatedCharset() , UTF_8_0)), '1')?true:false;
}
;
function ContentAddressedStorage$HTTP$lambda$9$Type(){
}

defineClass(1439, $wnd.Function, $intern_22, ContentAddressedStorage$HTTP$lambda$9$Type);
_.apply_0 = function apply_824(arg0){
  return '&bat=' + encode_6(($clinit_Multibase$Base() , Base58BTC), $toByteArray_2($toCbor_67(castTo(arg0, 112))));
}
;
function $get_20(this$static, owner, object, bat){
  return this$static.local.get_1(owner, object, bat);
}

function $lambda$0_21(this$static, owner_1){
  return this$static.local.startTransaction(owner_1);
}

function $lambda$1_17(this$static, owner_1, target_1){
  return $startTransaction_0(this$static.p2p, target_1, owner_1);
}

function $lambda$2_13(this$static, owner_1, tid_2){
  return this$static.local.closeTransaction(owner_1, tid_2);
}

function $lambda$3_13(this$static, owner_1, tid_2, target_2){
  return $closeTransaction_0(this$static.p2p, target_2, owner_1, tid_2);
}

function $lambda$4_9(this$static, owner_1, root_2, champKey_3, bat_4, committedRoot_5){
  return this$static.local.getChampLookup(owner_1, root_2, champKey_3, bat_4, committedRoot_5);
}

function $lambda$5_10(this$static, owner_1, root_2, champKey_3, bat_4, target_4){
  return $getChampLookup_2(this$static.p2p, target_4, owner_1, root_2, champKey_3, bat_4);
}

function $lambda$6_9(this$static, owner_1, writer_2, signedHashes_3, blocks_4, tid_5){
  return this$static.local.put_1(owner_1, writer_2, signedHashes_3, blocks_4, tid_5);
}

function $lambda$7_4(this$static, owner_1, writer_2, signedHashes_3, blocks_4, tid_5, target_5){
  return $put_19(this$static.p2p, target_5, owner_1, writer_2, signedHashes_3, blocks_4, tid_5);
}

function $lambda$8_5(this$static, owner_1, writer_2, signatures_3, blocks_4, tid_5, progressConsumer_6){
  return this$static.local.putRaw(owner_1, writer_2, signatures_3, blocks_4, tid_5, progressConsumer_6);
}

function $lambda$9_8(this$static, owner_1, writer_2, signatures_3, blocks_4, tid_5, target_6){
  return $putRaw(this$static.p2p, target_6, owner_1, writer_2, signatures_3, blocks_4, tid_5);
}

function $put_18(this$static, owner, writer, signedHashes, blocks, tid){
  var lastArg;
  return redirectCall(this$static.core, (lastArg = owner , new ContentAddressedStorage$Proxying$lambda$6$Type(this$static, owner, writer, signedHashes, blocks, tid) , makeLambdaFunction(ContentAddressedStorage$Proxying$lambda$7$Type.prototype.apply_0, ContentAddressedStorage$Proxying$lambda$7$Type, [this$static, owner, writer, signedHashes, blocks, tid]) , lastArg));
}

function ContentAddressedStorage$Proxying(local, p2p, core){
  this.local = local;
  this.p2p = p2p;
  this.core = core;
}

defineClass(584, 1, {}, ContentAddressedStorage$Proxying);
_.clearBlockCache = function clearBlockCache_4(){
}
;
_.downloadFragments = function downloadFragments_4(owner, hashes, bats, h, monitor, spaceIncreaseFactor){
  var futures, identity;
  return $clinit_NetworkAccess() , futures = castTo(castTo(range_0(0, hashes.size()).mapToObj(new NetworkAccess$lambda$90$Type).parallel(), 147).map_1(makeLambdaFunction(NetworkAccess$lambda$91$Type.prototype.apply_0, NetworkAccess$lambda$91$Type, [monitor, spaceIncreaseFactor, hashes, this, owner, bats])).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17) , $thenApply((identity = new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_LIST)) , castTo($reduce(futures.stream(), identity, new Futures$lambda$6$Type), 6)), makeLambdaFunction(NetworkAccess$lambda$97$Type.prototype.apply_0, NetworkAccess$lambda$97$Type, []));
}
;
_.getChampLookup_0 = function getChampLookup_9(owner, root, champKey, bat, committedRoot, hasher){
  var cache;
  return cache = new CachingStorage(this) , $thenApply($thenApply($thenApply($thenCompose(create_4(owner, root, makeLambdaFunction(ContentAddressedStorage$lambda$3$Type.prototype.apply_0, ContentAddressedStorage$lambda$3$Type, []), cache, hasher, makeLambdaFunction(ContentAddressedStorage$lambda$4$Type.prototype.apply_0, ContentAddressedStorage$lambda$4$Type, [])), makeLambdaFunction(ContentAddressedStorage$lambda$5$Type.prototype.apply_0, ContentAddressedStorage$lambda$5$Type, [champKey])), makeLambdaFunction(ContentAddressedStorage$lambda$6$Type.prototype.apply_0, ContentAddressedStorage$lambda$6$Type, [])), makeLambdaFunction(ContentAddressedStorage$lambda$9$Type.prototype.apply_0, ContentAddressedStorage$lambda$9$Type, [cache, owner, bat])), makeLambdaFunction(ContentAddressedStorage$lambda$10$Type.prototype.apply_0, ContentAddressedStorage$lambda$10$Type, [cache]));
}
;
_.getSigningKey = function getSigningKey_2(owner, hash){
  return $thenApply(hash.type == ($clinit_Multihash$Type() , id_3)?new CompletableFuture_0(($clinit_Optional() , new Optional(checkCriticalNotNull(fromByteArray(copyOfRange(hash.hash_0, 0, hash.hash_0.length)))))):$get_20(this, owner, hash.target, ($clinit_Optional() , $clinit_Optional() , EMPTY)), makeLambdaFunction(ContentAddressedStorage$lambda$13$Type.prototype.apply_0, ContentAddressedStorage$lambda$13$Type, []));
}
;
_.put_0 = function put_21(owner, writer, block, hasher, tid){
  return $thenCompose(hasher.scriptJS.sha256(block), makeLambdaFunction(ContentAddressedStorage$lambda$0$Type.prototype.apply_0, ContentAddressedStorage$lambda$0$Type, [this, owner, writer, block, tid]));
}
;
_.put_2 = function put_23(owner, writer, signature, block, tid){
  return $put_18(this, owner, writer, ($clinit_Collections() , new Collections$SingletonList(signature)), new Collections$SingletonList(block), tid).$_nullMethod();
}
;
_.putBoxingKey = function putBoxingKey_2(owner, signature, key, tid){
  return $putBoxingKey(this, owner, signature, key, tid);
}
;
_.putSigningKey = function putSigningKey_5(signature, owner, newKey, tid){
  return new CompletableFuture_0(new PublicKeyHash(new Cid(1, ($clinit_Cid$Codec() , DagCbor), ($clinit_Multihash$Type() , id_3), $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborLong(($clinit_PublicSigningKey$Type() , Ed25519).value), new CborObject$CborByteArray(newKey.publicKey)])))))));
}
;
_.putSigningKey_0 = function putSigningKey_6(signature, owner, writer, newKey, tid){
  return new CompletableFuture_0(new PublicKeyHash(new Cid(1, ($clinit_Cid$Codec() , DagCbor), ($clinit_Multihash$Type() , id_3), $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborLong(($clinit_PublicSigningKey$Type() , Ed25519).value), new CborObject$CborByteArray(newKey.publicKey)])))))));
}
;
_.blockStoreProperties = function blockStoreProperties_5(){
  return this.local.blockStoreProperties();
}
;
_.closeTransaction = function closeTransaction_3(owner, tid){
  var lastArg;
  return redirectCall(this.core, (lastArg = owner , new ContentAddressedStorage$Proxying$lambda$2$Type(this, owner, tid) , makeLambdaFunction(ContentAddressedStorage$Proxying$lambda$3$Type.prototype.apply_0, ContentAddressedStorage$Proxying$lambda$3$Type, [this, owner, tid]) , lastArg));
}
;
_.get_1 = function get_69(owner, object, bat){
  return $get_20(this, owner, object, bat);
}
;
_.getChampLookup = function getChampLookup_8(owner, root, champKey, bat, committedRoot){
  var lastArg;
  return redirectCall(this.core, (lastArg = owner , new ContentAddressedStorage$Proxying$lambda$4$Type(this, owner, root, champKey, bat, committedRoot) , makeLambdaFunction(ContentAddressedStorage$Proxying$lambda$5$Type.prototype.apply_0, ContentAddressedStorage$Proxying$lambda$5$Type, [this, owner, root, champKey, bat]) , lastArg));
}
;
_.getRaw = function getRaw_5(owner, object, bat){
  return this.local.getRaw(owner, object, bat);
}
;
_.id_1 = function id_8(){
  return this.local.id_1();
}
;
_.put_1 = function put_22(owner, writer, signedHashes, blocks, tid){
  return $put_18(this, owner, writer, signedHashes, blocks, tid);
}
;
_.putRaw = function putRaw_5(owner, writer, signatures, blocks, tid, progressConsumer){
  var lastArg;
  return redirectCall(this.core, (lastArg = owner , new ContentAddressedStorage$Proxying$lambda$8$Type(this, owner, writer, signatures, blocks, tid, progressConsumer) , makeLambdaFunction(ContentAddressedStorage$Proxying$lambda$9$Type.prototype.apply_0, ContentAddressedStorage$Proxying$lambda$9$Type, [this, owner, writer, signatures, blocks, tid]) , lastArg));
}
;
_.startTransaction = function startTransaction_3(owner){
  var lastArg;
  return redirectCall(this.core, (lastArg = owner , new ContentAddressedStorage$Proxying$lambda$0$Type(this, owner) , makeLambdaFunction(ContentAddressedStorage$Proxying$lambda$1$Type.prototype.apply_0, ContentAddressedStorage$Proxying$lambda$1$Type, [this, owner]) , lastArg));
}
;
var Lpeergos_shared_storage_ContentAddressedStorage$Proxying_2_classLit = createForClass('peergos.shared.storage', 'ContentAddressedStorage/Proxying', 584);
function ContentAddressedStorage$Proxying$lambda$0$Type($$outer_0, owner_1){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
}

defineClass(588, 1, {}, ContentAddressedStorage$Proxying$lambda$0$Type);
_.get_0 = function get_70(){
  return $lambda$0_21(this.$$outer_0, this.owner_1);
}
;
var Lpeergos_shared_storage_ContentAddressedStorage$Proxying$lambda$0$Type_2_classLit = createForClass('peergos.shared.storage', 'ContentAddressedStorage/Proxying/lambda$0$Type', 588);
function ContentAddressedStorage$Proxying$lambda$1$Type($$outer_0, owner_1){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
}

defineClass(1463, $wnd.Function, $intern_22, ContentAddressedStorage$Proxying$lambda$1$Type);
_.apply_0 = function apply_825(arg0){
  return $lambda$1_17(this.$$outer_0, this.owner_1, arg0);
}
;
function ContentAddressedStorage$Proxying$lambda$2$Type($$outer_0, owner_1, tid_2){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.tid_2 = tid_2;
}

defineClass(589, 1, {}, ContentAddressedStorage$Proxying$lambda$2$Type);
_.get_0 = function get_71(){
  return $lambda$2_13(this.$$outer_0, this.owner_1, this.tid_2);
}
;
var Lpeergos_shared_storage_ContentAddressedStorage$Proxying$lambda$2$Type_2_classLit = createForClass('peergos.shared.storage', 'ContentAddressedStorage/Proxying/lambda$2$Type', 589);
function ContentAddressedStorage$Proxying$lambda$3$Type($$outer_0, owner_1, tid_2){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.tid_2 = tid_2;
}

defineClass(1464, $wnd.Function, $intern_22, ContentAddressedStorage$Proxying$lambda$3$Type);
_.apply_0 = function apply_826(arg0){
  return $lambda$3_13(this.$$outer_0, this.owner_1, this.tid_2, arg0);
}
;
function ContentAddressedStorage$Proxying$lambda$4$Type($$outer_0, owner_1, root_2, champKey_3, bat_4, committedRoot_5){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.root_2 = root_2;
  this.champKey_3 = champKey_3;
  this.bat_4 = bat_4;
  this.committedRoot_5 = committedRoot_5;
}

defineClass(590, 1, {}, ContentAddressedStorage$Proxying$lambda$4$Type);
_.get_0 = function get_72(){
  return $lambda$4_9(this.$$outer_0, this.owner_1, this.root_2, this.champKey_3, this.bat_4, this.committedRoot_5);
}
;
var Lpeergos_shared_storage_ContentAddressedStorage$Proxying$lambda$4$Type_2_classLit = createForClass('peergos.shared.storage', 'ContentAddressedStorage/Proxying/lambda$4$Type', 590);
function ContentAddressedStorage$Proxying$lambda$5$Type($$outer_0, owner_1, root_2, champKey_3, bat_4){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.root_2 = root_2;
  this.champKey_3 = champKey_3;
  this.bat_4 = bat_4;
}

defineClass(1465, $wnd.Function, $intern_22, ContentAddressedStorage$Proxying$lambda$5$Type);
_.apply_0 = function apply_827(arg0){
  return $lambda$5_10(this.$$outer_0, this.owner_1, this.root_2, this.champKey_3, this.bat_4, arg0);
}
;
function ContentAddressedStorage$Proxying$lambda$6$Type($$outer_0, owner_1, writer_2, signedHashes_3, blocks_4, tid_5){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.signedHashes_3 = signedHashes_3;
  this.blocks_4 = blocks_4;
  this.tid_5 = tid_5;
}

defineClass(591, 1, {}, ContentAddressedStorage$Proxying$lambda$6$Type);
_.get_0 = function get_73(){
  return $lambda$6_9(this.$$outer_0, this.owner_1, this.writer_2, this.signedHashes_3, this.blocks_4, this.tid_5);
}
;
var Lpeergos_shared_storage_ContentAddressedStorage$Proxying$lambda$6$Type_2_classLit = createForClass('peergos.shared.storage', 'ContentAddressedStorage/Proxying/lambda$6$Type', 591);
function ContentAddressedStorage$Proxying$lambda$7$Type($$outer_0, owner_1, writer_2, signedHashes_3, blocks_4, tid_5){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.signedHashes_3 = signedHashes_3;
  this.blocks_4 = blocks_4;
  this.tid_5 = tid_5;
}

defineClass(1466, $wnd.Function, $intern_22, ContentAddressedStorage$Proxying$lambda$7$Type);
_.apply_0 = function apply_828(arg0){
  return $lambda$7_4(this.$$outer_0, this.owner_1, this.writer_2, this.signedHashes_3, this.blocks_4, this.tid_5, arg0);
}
;
function ContentAddressedStorage$Proxying$lambda$8$Type($$outer_0, owner_1, writer_2, signatures_3, blocks_4, tid_5, progressConsumer_6){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.signatures_3 = signatures_3;
  this.blocks_4 = blocks_4;
  this.tid_5 = tid_5;
  this.progressConsumer_6 = progressConsumer_6;
}

defineClass(592, 1, {}, ContentAddressedStorage$Proxying$lambda$8$Type);
_.get_0 = function get_74(){
  return $lambda$8_5(this.$$outer_0, this.owner_1, this.writer_2, this.signatures_3, this.blocks_4, this.tid_5, this.progressConsumer_6);
}
;
var Lpeergos_shared_storage_ContentAddressedStorage$Proxying$lambda$8$Type_2_classLit = createForClass('peergos.shared.storage', 'ContentAddressedStorage/Proxying/lambda$8$Type', 592);
function ContentAddressedStorage$Proxying$lambda$9$Type($$outer_0, owner_1, writer_2, signatures_3, blocks_4, tid_5){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.signatures_3 = signatures_3;
  this.blocks_4 = blocks_4;
  this.tid_5 = tid_5;
}

defineClass(1467, $wnd.Function, $intern_22, ContentAddressedStorage$Proxying$lambda$9$Type);
_.apply_0 = function apply_829(arg0){
  return $lambda$9_8(this.$$outer_0, this.owner_1, this.writer_2, this.signatures_3, this.blocks_4, this.tid_5, arg0);
}
;
function ContentAddressedStorage$lambda$0$Type($$outer_0, owner_1, writer_2, block_3, tid_4){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.block_3 = block_3;
  this.tid_4 = tid_4;
}

defineClass(287, $wnd.Function, $intern_22, ContentAddressedStorage$lambda$0$Type);
_.apply_0 = function apply_830(arg0){
  return $lambda$0_20(this.$$outer_0, this.owner_1, this.writer_2, this.block_3, this.tid_4, arg0);
}
;
function ContentAddressedStorage$lambda$1$Type(){
}

defineClass(375, $wnd.Function, $intern_22, ContentAddressedStorage$lambda$1$Type);
_.apply_0 = function apply_831(arg0){
  return castTo(castTo(arg0, 17).getAtIndex(0), 44);
}
;
function ContentAddressedStorage$lambda$10$Type(cache_0){
  this.cache_0 = cache_0;
}

defineClass(262, $wnd.Function, $intern_22, ContentAddressedStorage$lambda$10$Type);
_.apply_0 = function apply_832(arg0){
  return new ArrayList_1(new AbstractMap$2(this.cache_0.cache_0));
}
;
function ContentAddressedStorage$lambda$13$Type(){
}

defineClass(288, $wnd.Function, $intern_22, ContentAddressedStorage$lambda$13$Type);
_.apply_0 = function apply_833(arg0){
  return $map(castTo($orElse(($clinit_Optional() , !castTo(arg0, 12)?EMPTY:new Optional(checkCriticalNotNull(castTo(arg0, 12)))), (null , EMPTY)), 12), makeLambdaFunction(ContentAddressedStorage$9methodref$fromCbor$Type.prototype.apply_0, ContentAddressedStorage$9methodref$fromCbor$Type, []));
}
;
function ContentAddressedStorage$lambda$3$Type(){
}

defineClass(257, $wnd.Function, $intern_22, ContentAddressedStorage$lambda$3$Type);
_.apply_0 = function apply_834(arg0){
  return new CompletableFuture_0(castTo(arg0, 80).data_0);
}
;
function ContentAddressedStorage$lambda$4$Type(){
}

defineClass(258, $wnd.Function, $intern_22, ContentAddressedStorage$lambda$4$Type);
_.apply_0 = function apply_835(arg0){
  return castTo(castTo(arg0, 7), 53);
}
;
function ContentAddressedStorage$lambda$5$Type(champKey_0){
  this.champKey_0 = champKey_0;
}

defineClass(259, $wnd.Function, $intern_22, ContentAddressedStorage$lambda$5$Type);
_.apply_0 = function apply_836(arg0){
  return lambda$5_5(this.champKey_0, arg0);
}
;
function ContentAddressedStorage$lambda$6$Type(){
}

defineClass(260, $wnd.Function, $intern_22, ContentAddressedStorage$lambda$6$Type);
_.apply_0 = function apply_837(arg0){
  return castTo($orElse($map($map(castTo(arg0, 12), makeLambdaFunction(ContentAddressedStorage$lambda$7$Type.prototype.apply_0, ContentAddressedStorage$lambda$7$Type, [])), makeLambdaFunction(ContentAddressedStorage$7methodref$of$Type.prototype.apply_0, ContentAddressedStorage$7methodref$of$Type, [])), ($clinit_MaybeMultihash() , $clinit_MaybeMultihash() , EMPTY_0)), 93);
}
;
function ContentAddressedStorage$lambda$7$Type(){
}

defineClass(1473, $wnd.Function, $intern_22, ContentAddressedStorage$lambda$7$Type);
_.apply_0 = function apply_838(arg0){
  return castTo(arg0, 53).target;
}
;
function ContentAddressedStorage$lambda$9$Type(cache_0, owner_1, bat_2){
  this.cache_0 = cache_0;
  this.owner_1 = owner_1;
  this.bat_2 = bat_2;
}

defineClass(261, $wnd.Function, $intern_22, ContentAddressedStorage$lambda$9$Type);
_.apply_0 = function apply_839(arg0){
  return lambda$9_3(this.cache_0, this.owner_1, this.bat_2, arg0);
}
;
function $closeTransaction_0(this$static, targetServerId, owner, tid){
  return $thenApply($get_28(this$static.poster, '/p2p/' + targetServerId.toString() + '/http' + '/' + 'api/v0/' + 'transaction/close?arg=' + tid.id_0 + '&owner=' + encode_10(owner.target.toString()), ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)), makeLambdaFunction(ContentAddressedStorageProxy$HTTP$lambda$1$Type.prototype.apply_0, ContentAddressedStorageProxy$HTTP$lambda$1$Type, []));
}

function $getChampLookup_2(this$static, targetServerId, owner, root, champKey, bat){
  return $thenApply($thenApply($thenApply($get_28(this$static.poster, '/p2p/' + targetServerId.toString() + '/http' + '/' + 'api/v0/' + 'champ/get?arg=' + root.toString() + '&arg=' + bytesToHex(champKey) + '&owner=' + encode_10(owner.target.toString()) + castToString($orElse($map(bat, makeLambdaFunction(ContentAddressedStorageProxy$HTTP$lambda$2$Type.prototype.apply_0, ContentAddressedStorageProxy$HTTP$lambda$2$Type, [])), '')), ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)), makeLambdaFunction(ContentAddressedStorageProxy$HTTP$0methodref$fromByteArray$Type.prototype.apply_0, ContentAddressedStorageProxy$HTTP$0methodref$fromByteArray$Type, [])), makeLambdaFunction(ContentAddressedStorageProxy$HTTP$lambda$4$Type.prototype.apply_0, ContentAddressedStorageProxy$HTTP$lambda$4$Type, [])), makeLambdaFunction(ContentAddressedStorageProxy$HTTP$lambda$5$Type.prototype.apply_0, ContentAddressedStorageProxy$HTTP$lambda$5$Type, []));
}

function $put_19(this$static, targetServerId, owner, writer, signatures, blocks, tid){
  return $thenApply($postMultipart(this$static.poster, '/p2p/' + targetServerId.toString() + '/http' + '/' + 'api/v0/' + 'block/put?format=' + 'dag-cbor' + '&owner=' + encode_10(owner.target.toString()) + '&transaction=' + encode_10(tid.id_0) + '&writer=' + encode_10(writer.target.toString()) + '&signatures=' + castToString($reduce_0($map_0(signatures.stream(), makeLambdaFunction(ContentAddressedStorageProxy$HTTP$1methodref$bytesToHex$Type.prototype.apply_0, ContentAddressedStorageProxy$HTTP$1methodref$bytesToHex$Type, [])), '', new ContentAddressedStorageProxy$HTTP$lambda$8$Type)).substr(1), blocks), makeLambdaFunction(ContentAddressedStorageProxy$HTTP$lambda$9$Type.prototype.apply_0, ContentAddressedStorageProxy$HTTP$lambda$9$Type, []));
}

function $putRaw(this$static, targetServerId, owner, writer, signatures, blocks, tid){
  return $thenApply($postMultipart(this$static.poster, '/p2p/' + targetServerId.toString() + '/http' + '/' + 'api/v0/' + 'block/put?format=' + 'raw' + '&owner=' + encode_10(owner.target.toString()) + '&transaction=' + encode_10(tid.id_0) + '&writer=' + encode_10(writer.target.toString()) + '&signatures=' + castToString($reduce_0($map_0(signatures.stream(), makeLambdaFunction(ContentAddressedStorageProxy$HTTP$1methodref$bytesToHex$Type.prototype.apply_0, ContentAddressedStorageProxy$HTTP$1methodref$bytesToHex$Type, [])), '', new ContentAddressedStorageProxy$HTTP$lambda$8$Type)).substr(1), blocks), makeLambdaFunction(ContentAddressedStorageProxy$HTTP$lambda$9$Type.prototype.apply_0, ContentAddressedStorageProxy$HTTP$lambda$9$Type, []));
}

function $startTransaction_0(this$static, targetServerId, owner){
  return $thenApply($get_28(this$static.poster, '/p2p/' + targetServerId.toString() + '/http' + '/' + 'api/v0/' + 'transaction/start' + '?owner=' + encode_10(owner.target.toString()), ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)), makeLambdaFunction(ContentAddressedStorageProxy$HTTP$lambda$0$Type.prototype.apply_0, ContentAddressedStorageProxy$HTTP$lambda$0$Type, []));
}

function ContentAddressedStorageProxy$HTTP(poster){
  this.poster = poster;
}

function encode_10(component){
  var e;
  try {
    return encode_1(component);
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 136)) {
      e = $e0;
      throw toJs(new RuntimeException_2(e));
    }
     else 
      throw toJs($e0);
  }
}

defineClass(1011, 1, {}, ContentAddressedStorageProxy$HTTP);
var Lpeergos_shared_storage_ContentAddressedStorageProxy$HTTP_2_classLit = createForClass('peergos.shared.storage', 'ContentAddressedStorageProxy/HTTP', 1011);
function ContentAddressedStorageProxy$HTTP$0methodref$fromByteArray$Type(){
}

defineClass(3218, $wnd.Function, $intern_22, ContentAddressedStorageProxy$HTTP$0methodref$fromByteArray$Type);
_.apply_0 = function apply_840(arg0){
  return fromByteArray(castTo(arg0, 11));
}
;
function ContentAddressedStorageProxy$HTTP$1methodref$bytesToHex$Type(){
}

defineClass(1324, $wnd.Function, $intern_22, ContentAddressedStorageProxy$HTTP$1methodref$bytesToHex$Type);
_.apply_0 = function apply_841(arg0){
  return bytesToHex(castTo(arg0, 11));
}
;
function ContentAddressedStorageProxy$HTTP$lambda$0$Type(){
}

defineClass(3215, $wnd.Function, $intern_22, ContentAddressedStorageProxy$HTTP$lambda$0$Type);
_.apply_0 = function apply_842(arg0){
  return new TransactionId($create_0(castTo(arg0, 11), 0, castTo(arg0, 11).length, ($clinit_EmulatedCharset() , UTF_8_0)));
}
;
function ContentAddressedStorageProxy$HTTP$lambda$1$Type(){
}

defineClass(3216, $wnd.Function, $intern_22, ContentAddressedStorageProxy$HTTP$lambda$1$Type);
_.apply_0 = function apply_843(arg0){
  return $clinit_Boolean() , $equals_0($create_0(castTo(arg0, 11), 0, castTo(arg0, 11).length, ($clinit_EmulatedCharset() , UTF_8_0)), '1')?true:false;
}
;
function ContentAddressedStorageProxy$HTTP$lambda$10$Type(){
}

defineClass(3222, $wnd.Function, $intern_22, ContentAddressedStorageProxy$HTTP$lambda$10$Type);
_.apply_0 = function apply_844(arg0){
  var json, hash;
  return json = castTo(arg0, 68) , hash = castToString(json.get('Hash')) , hash == null && (hash = castToString(json.get('Key'))) , decode_2(hash);
}
;
function ContentAddressedStorageProxy$HTTP$lambda$2$Type(){
}

defineClass(3217, $wnd.Function, $intern_22, ContentAddressedStorageProxy$HTTP$lambda$2$Type);
_.apply_0 = function apply_845(arg0){
  return '&bat=' + encode_6(($clinit_Multibase$Base() , Base58BTC), $toByteArray_2($toCbor_67(castTo(arg0, 112))));
}
;
function ContentAddressedStorageProxy$HTTP$lambda$4$Type(){
}

defineClass(3219, $wnd.Function, $intern_22, ContentAddressedStorageProxy$HTTP$lambda$4$Type);
_.apply_0 = function apply_846(arg0){
  return castTo(castTo(arg0, 48), 21);
}
;
function ContentAddressedStorageProxy$HTTP$lambda$5$Type(){
}

defineClass(3220, $wnd.Function, $intern_22, ContentAddressedStorageProxy$HTTP$lambda$5$Type);
_.apply_0 = function apply_847(arg0){
  return $map_2(castTo(arg0, 21), makeLambdaFunction(ContentAddressedStorageProxy$HTTP$lambda$6$Type.prototype.apply_0, ContentAddressedStorageProxy$HTTP$lambda$6$Type, []));
}
;
function ContentAddressedStorageProxy$HTTP$lambda$6$Type(){
}

defineClass(3221, $wnd.Function, $intern_22, ContentAddressedStorageProxy$HTTP$lambda$6$Type);
_.apply_0 = function apply_848(arg0){
  return castTo(castTo(arg0, 7), 27).value_0;
}
;
function ContentAddressedStorageProxy$HTTP$lambda$8$Type(){
}

defineClass(503, 1, $intern_34, ContentAddressedStorageProxy$HTTP$lambda$8$Type);
_.apply_1 = function apply_849(arg0, arg1){
  return castToString(arg0) + ',' + castToString(arg1);
}
;
var Lpeergos_shared_storage_ContentAddressedStorageProxy$HTTP$lambda$8$Type_2_classLit = createForClass('peergos.shared.storage', 'ContentAddressedStorageProxy/HTTP/lambda$8$Type', 503);
function ContentAddressedStorageProxy$HTTP$lambda$9$Type(){
}

defineClass(1325, $wnd.Function, $intern_22, ContentAddressedStorageProxy$HTTP$lambda$9$Type);
_.apply_0 = function apply_850(arg0){
  return castTo($collect_0($map_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(parseStream($create(castTo(arg0, 11))), 16)), makeLambdaFunction(ContentAddressedStorageProxy$HTTP$lambda$10$Type.prototype.apply_0, ContentAddressedStorageProxy$HTTP$lambda$10$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
}
;
function DecodedSpaceRequest(source, decoded){
  this.source = source;
  this.decoded = decoded;
}

function decodeSpaceRequests(in_0, core, dht){
  return $thenApply(combineAllInOrder(castTo($collect_0($map_0(in_0.stream(), makeLambdaFunction(DecodedSpaceRequest$lambda$0$Type.prototype.apply_0, DecodedSpaceRequest$lambda$0$Type, [dht, core])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 54)), makeLambdaFunction(DecodedSpaceRequest$lambda$3$Type.prototype.apply_0, DecodedSpaceRequest$lambda$3$Type, []));
}

function lambda$0_13(dht_0, core_1, req_2){
  return $thenApply($thenCompose(core_1.getPublicKeyHash(req_2.username), makeLambdaFunction(DecodedSpaceRequest$lambda$1$Type.prototype.apply_0, DecodedSpaceRequest$lambda$1$Type, [req_2, dht_0])), makeLambdaFunction(DecodedSpaceRequest$lambda$2$Type.prototype.apply_0, DecodedSpaceRequest$lambda$2$Type, [req_2]));
}

function lambda$1_6(req_0, dht_1, keyHashOpt_2){
  var identityHash;
  if (keyHashOpt_2.ref == null)
    throw toJs(new IllegalStateException_0("Couldn't retrieve public key for " + req_0.username));
  identityHash = (checkCriticalElement(keyHashOpt_2.ref != null) , castTo(keyHashOpt_2.ref, 55));
  return dht_1.getSigningKey(identityHash, identityHash);
}

function lambda$2_9(req_0, keyOpt_1){
  var e, parsed, pubKey, raw;
  if (keyOpt_1.ref == null)
    throw toJs(new IllegalStateException_0("Couldn't retrieve public key for " + req_0.username));
  try {
    pubKey = (checkCriticalElement(keyOpt_1.ref != null) , castTo(keyOpt_1.ref, 233));
    raw = $unsignMessage(pubKey, req_0.signedRequest);
    parsed = fromCbor_74(deserialize(new CborDecoder(new ByteArrayInputStream(raw)), raw.length));
    return $clinit_Optional() , new Optional(checkCriticalNotNull(new DecodedSpaceRequest(req_0, parsed)));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 51)) {
      e = $e0;
      $printStackTraceImpl(e, ($clinit_System() , err_0), '', '');
      return $clinit_Optional() , $clinit_Optional() , EMPTY;
    }
     else 
      throw toJs($e0);
  }
}

defineClass(801, 1, {}, DecodedSpaceRequest);
_.getSizeInMiB = function getSizeInMiB(){
  return toInt_0(div(this.decoded.bytes, $intern_11));
}
;
_.getUsername = function getUsername_3(){
  return this.source.username;
}
;
_.toString = function toString_75(){
  return $toString_9(this.decoded);
}
;
_.toString_0 = function(){
  return this.toString();
}
;
var Lpeergos_shared_storage_DecodedSpaceRequest_2_classLit = createForClass('peergos.shared.storage', 'DecodedSpaceRequest', 801);
function DecodedSpaceRequest$0methodref$stream$Type(){
}

defineClass(2320, $wnd.Function, $intern_22, DecodedSpaceRequest$0methodref$stream$Type);
_.apply_0 = function apply_851(arg0){
  return $stream(castTo(arg0, 12));
}
;
function DecodedSpaceRequest$lambda$0$Type(dht_0, core_1){
  this.dht_0 = dht_0;
  this.core_1 = core_1;
}

defineClass(2316, $wnd.Function, $intern_22, DecodedSpaceRequest$lambda$0$Type);
_.apply_0 = function apply_852(arg0){
  return lambda$0_13(this.dht_0, this.core_1, arg0);
}
;
function DecodedSpaceRequest$lambda$1$Type(req_0, dht_1){
  this.req_0 = req_0;
  this.dht_1 = dht_1;
}

defineClass(2318, $wnd.Function, $intern_22, DecodedSpaceRequest$lambda$1$Type);
_.apply_0 = function apply_853(arg0){
  return lambda$1_6(this.req_0, this.dht_1, arg0);
}
;
function DecodedSpaceRequest$lambda$2$Type(req_0){
  this.req_0 = req_0;
}

defineClass(2319, $wnd.Function, $intern_22, DecodedSpaceRequest$lambda$2$Type);
_.apply_0 = function apply_854(arg0){
  return lambda$2_9(this.req_0, arg0);
}
;
function DecodedSpaceRequest$lambda$3$Type(){
}

defineClass(2317, $wnd.Function, $intern_22, DecodedSpaceRequest$lambda$3$Type);
_.apply_0 = function apply_855(arg0){
  return castTo($collect_0($flatMap_0(castTo(arg0, 17).stream(), makeLambdaFunction(DecodedSpaceRequest$0methodref$stream$Type.prototype.apply_0, DecodedSpaceRequest$0methodref$stream$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
}
;
function $bulkPutRaw(this$static, owner, writer, signatures, blocks, tid, progressCounter){
  var batIds, res, sizes;
  res = new CompletableFuture;
  sizes = castTo($collect_0($map_0(blocks.stream(), makeLambdaFunction(DirectS3BlockStore$lambda$6$Type.prototype.apply_0, DirectS3BlockStore$lambda$6$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  batIds = castTo($collect_0($map_0(blocks.stream(), makeLambdaFunction(DirectS3BlockStore$0methodref$getRawBlockBats$Type.prototype.apply_0, DirectS3BlockStore$0methodref$getRawBlockBats$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [IDENTITY_FINISH]))), 17);
  $exceptionally($thenApply($thenCompose($authWrites(this$static.fallback, owner, writer, signatures, sizes, batIds, tid), makeLambdaFunction(DirectS3BlockStore$lambda$8$Type.prototype.apply_0, DirectS3BlockStore$lambda$8$Type, [this$static, blocks, progressCounter])), makeLambdaFunction(DirectS3BlockStore$1methodref$complete$Type.prototype.apply_0, DirectS3BlockStore$1methodref$complete$Type, [res])), makeLambdaFunction(DirectS3BlockStore$2methodref$completeExceptionally$Type.prototype.apply_0, DirectS3BlockStore$2methodref$completeExceptionally$Type, [res]));
  return res;
}

function $getChampLookup_3(this$static, owner, root, champKey, bat, hasher){
  var cache;
  return cache = new CachingStorage(this$static) , $thenApply($thenApply($thenApply($thenCompose(create_4(owner, root, makeLambdaFunction(ContentAddressedStorage$lambda$3$Type.prototype.apply_0, ContentAddressedStorage$lambda$3$Type, []), cache, hasher, makeLambdaFunction(ContentAddressedStorage$lambda$4$Type.prototype.apply_0, ContentAddressedStorage$lambda$4$Type, [])), makeLambdaFunction(ContentAddressedStorage$lambda$5$Type.prototype.apply_0, ContentAddressedStorage$lambda$5$Type, [champKey])), makeLambdaFunction(ContentAddressedStorage$lambda$6$Type.prototype.apply_0, ContentAddressedStorage$lambda$6$Type, [])), makeLambdaFunction(ContentAddressedStorage$lambda$9$Type.prototype.apply_0, ContentAddressedStorage$lambda$9$Type, [cache, owner, bat])), makeLambdaFunction(ContentAddressedStorage$lambda$10$Type.prototype.apply_0, ContentAddressedStorage$lambda$10$Type, [cache]));
}

function $getRaw_1(this$static, owner, hash, bat){
  var res, padded, padStart;
  if (hash.type == ($clinit_Multihash$Type() , id_3))
    return new CompletableFuture_0(($clinit_Optional() , new Optional(checkCriticalNotNull(copyOfRange(hash.hash_0, 0, hash.hash_0.length)))));
  if (this$static.publicReads) {
    res = new CompletableFuture;
    $exceptionally($thenAccept($thenApply($get_28(this$static.direct, castToString($get_6(this$static.basePublicReadUrl)) + ('' + (padded = newString($encode_0(new Base32, hash.toBytes()), forName('UTF-8')) , padStart = padded.indexOf('=') , padStart > 0?padded.substr(0, padStart):padded)), ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)), makeLambdaFunction(DirectS3BlockStore$6methodref$of$Type.prototype.apply_0, DirectS3BlockStore$6methodref$of$Type, [])), new DirectS3BlockStore$7methodref$complete$Type(res)), makeLambdaFunction(DirectS3BlockStore$lambda$29$Type.prototype.apply_0, DirectS3BlockStore$lambda$29$Type, [this$static, hash, bat, res, owner]));
    return res;
  }
  if (this$static.authedReads && hash.codec == ($clinit_Cid$Codec() , Raw)) {
    res = new CompletableFuture;
    $exceptionally($thenAccept($thenApply($thenCompose($authReads(this$static.fallback, new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_storage_MirrorCap_2_classLit, 1), $intern_0, 281, 0, [new MirrorCap(hash, bat)]))), makeLambdaFunction(DirectS3BlockStore$lambda$36$Type.prototype.apply_0, DirectS3BlockStore$lambda$36$Type, [this$static])), makeLambdaFunction(DirectS3BlockStore$11methodref$of$Type.prototype.apply_0, DirectS3BlockStore$11methodref$of$Type, [])), new DirectS3BlockStore$12methodref$complete$Type(res)), makeLambdaFunction(DirectS3BlockStore$lambda$39$Type.prototype.apply_0, DirectS3BlockStore$lambda$39$Type, [this$static, owner, hash, bat, res]));
    return res;
  }
  return $getRaw_0(this$static.fallback, owner, hash, bat);
}

function $lambda$0_22(this$static, owner_1, user_1){
  return $thenApply($getChain(this$static.core, user_1), makeLambdaFunction(DirectS3BlockStore$lambda$1$Type.prototype.apply_0, DirectS3BlockStore$lambda$1$Type, [this$static, user_1, owner_1]));
}

function $lambda$1_18(this$static, user_1, owner_2, chain_2){
  var mainNode, storageProviders;
  if (chain_2.isEmpty())
    throw toJs(new IllegalStateException_0('Empty chain returned for ' + user_1));
  storageProviders = castTo(chain_2.getAtIndex(chain_2.size() - 1), 72).claim.storageProviders;
  mainNode = castTo(storageProviders.getAtIndex(0), 58);
  $put_5(this$static.storageNodeByOwner, owner_2, mainNode);
  $info(($clinit_Logger() , getLogger()), "Are we on owner's node? " + mainNode + ' == ' + this$static.nodeId);
  return $clinit_Boolean() , mainNode.equals(this$static.nodeId)?true:false;
}

function $lambda$13_6(this$static, hashes_1, bats_2, monitor_3, owner_4, spaceIncreaseFactor_6, onOwners_6){
  var allResults, auths, indexAndHash, nonIdentity;
  if (!(checkCriticalNotNull(onOwners_6) , onOwners_6))
    return downloadFragments(owner_4, hashes_1, bats_2, this$static.fallback, monitor_3, spaceIncreaseFactor_6);
  indexAndHash = castTo(range_0(0, hashes_1.size()).mapToObj(new DirectS3BlockStore$lambda$14$Type(hashes_1)).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  nonIdentity = castTo($collect_0($filter(indexAndHash.stream(), new DirectS3BlockStore$lambda$15$Type), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [IDENTITY_FINISH]))), 17);
  auths = nonIdentity.isEmpty()?new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_LIST)):$authReads(this$static.fallback, castTo($collect_0($map_0(nonIdentity.stream(), makeLambdaFunction(DirectS3BlockStore$lambda$16$Type.prototype.apply_0, DirectS3BlockStore$lambda$16$Type, [bats_2])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [IDENTITY_FINISH]))), 17));
  allResults = new CompletableFuture;
  $exceptionally($thenAccept($thenApply($thenCompose(auths, makeLambdaFunction(DirectS3BlockStore$lambda$17$Type.prototype.apply_0, DirectS3BlockStore$lambda$17$Type, [this$static, monitor_3, nonIdentity])), makeLambdaFunction(DirectS3BlockStore$lambda$20$Type.prototype.apply_0, DirectS3BlockStore$lambda$20$Type, [hashes_1])), new DirectS3BlockStore$3methodref$complete$Type(allResults)), makeLambdaFunction(DirectS3BlockStore$lambda$22$Type.prototype.apply_0, DirectS3BlockStore$lambda$22$Type, [this$static, owner_4, hashes_1, bats_2, monitor_3, spaceIncreaseFactor_6, allResults]));
  return allResults;
}

function $lambda$17_9(this$static, monitor_1, nonIdentity_2, preAuthedGets_2){
  return combineAllInOrder(castTo(range_0(0, preAuthedGets_2.size()).parallel_0().mapToObj(new DirectS3BlockStore$lambda$18$Type(this$static, monitor_1, nonIdentity_2, preAuthedGets_2)).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 54));
}

function $lambda$18_3(this$static, monitor_1, nonIdentity_2, preAuthedGets_3, i_3){
  return $thenApply($get_28(this$static.direct, castTo(preAuthedGets_3.getAtIndex(i_3), 231).base, castTo(preAuthedGets_3.getAtIndex(i_3), 231).fields), makeLambdaFunction(DirectS3BlockStore$lambda$19$Type.prototype.apply_0, DirectS3BlockStore$lambda$19$Type, [monitor_1, nonIdentity_2, i_3]));
}

function $lambda$2_14(this$static, owner_1, writer_2, tid_3, progressCounter_4, blocks_5, signatures_6, ownersNode_6){
  var futures, grouped, groupedSignatures, identity;
  if ((checkCriticalNotNull(ownersNode_6) , ownersNode_6) && this$static.directWrites) {
    grouped = ($clinit_ArrayOps() , castTo(range_0(0, (blocks_5.size() + 6 - 1) / 6 | 0).mapToObj(new ArrayOps$lambda$0$Type(blocks_5, 6)).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17));
    groupedSignatures = castTo(range_0(0, (signatures_6.size() + 6 - 1) / 6 | 0).mapToObj(new ArrayOps$lambda$0$Type(signatures_6, 6)).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [IDENTITY_FINISH]))), 17);
    futures = castTo(range_0(0, grouped.size()).parallel_0().mapToObj(new DirectS3BlockStore$lambda$3$Type(this$static, owner_1, writer_2, groupedSignatures, grouped, tid_3, progressCounter_4)).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [IDENTITY_FINISH]))), 17);
    return $thenApply((identity = new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_LIST)) , castTo($reduce(futures.stream(), identity, new Futures$lambda$6$Type), 6)), makeLambdaFunction(DirectS3BlockStore$lambda$4$Type.prototype.apply_0, DirectS3BlockStore$lambda$4$Type, []));
  }
  return $thenApply($bulkPut(this$static.fallback, owner_1, writer_2, signatures_6, blocks_5, 'raw', tid_3, progressCounter_4), makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$15$Type.prototype.apply_0, ContentAddressedStorage$HTTP$lambda$15$Type, []));
}

function $lambda$22_1(this$static, owner_1, hashes_2, bats_3, monitor_5, spaceIncreaseFactor_6, allResults_8){
  var futures, identity;
  $exceptionally($thenAccept(($clinit_NetworkAccess() , futures = castTo(castTo(range_0(0, hashes_2.size()).mapToObj(new NetworkAccess$lambda$90$Type).parallel(), 147).map_1(makeLambdaFunction(NetworkAccess$lambda$91$Type.prototype.apply_0, NetworkAccess$lambda$91$Type, [monitor_5, spaceIncreaseFactor_6, hashes_2, this$static, owner_1, bats_3])).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17) , $thenApply((identity = new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_LIST)) , castTo($reduce(futures.stream(), identity, new Futures$lambda$6$Type), 6)), makeLambdaFunction(NetworkAccess$lambda$97$Type.prototype.apply_0, NetworkAccess$lambda$97$Type, []))), new DirectS3BlockStore$4methodref$complete$Type(allResults_8)), makeLambdaFunction(DirectS3BlockStore$lambda$24$Type.prototype.apply_0, DirectS3BlockStore$lambda$24$Type, [allResults_8]));
  return null;
}

function $lambda$29_1(this$static, hash_1, bat_2, res_3, owner_4){
  $exceptionally($thenAccept($thenApply($thenCompose($authReads(this$static.fallback, new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_storage_MirrorCap_2_classLit, 1), $intern_0, 281, 0, [new MirrorCap(hash_1, bat_2)]))), makeLambdaFunction(DirectS3BlockStore$lambda$30$Type.prototype.apply_0, DirectS3BlockStore$lambda$30$Type, [this$static])), makeLambdaFunction(DirectS3BlockStore$8methodref$of$Type.prototype.apply_0, DirectS3BlockStore$8methodref$of$Type, [])), new DirectS3BlockStore$9methodref$complete$Type(res_3)), makeLambdaFunction(DirectS3BlockStore$lambda$33$Type.prototype.apply_0, DirectS3BlockStore$lambda$33$Type, [this$static, owner_4, hash_1, bat_2, res_3]));
  return null;
}

function $lambda$3_14(this$static, owner_1, writer_2, groupedSignatures_3, grouped_4, tid_5, progressCounter_6, i_6){
  return $bulkPutRaw(this$static, owner_1, writer_2, castTo(groupedSignatures_3.getAtIndex(i_6), 17), castTo(grouped_4.getAtIndex(i_6), 17), tid_5, progressCounter_6);
}

function $lambda$30_4(this$static, preAuthedGet_0){
  return $get_28(this$static.direct, castTo(preAuthedGet_0.getAtIndex(0), 231).base, ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP));
}

function $lambda$33_2(this$static, owner_1, hash_2, bat_3, res_4){
  $exceptionally($thenAccept($getRaw_0(this$static.fallback, owner_1, hash_2, bat_3), new DirectS3BlockStore$10methodref$complete$Type(res_4)), makeLambdaFunction(DirectS3BlockStore$lambda$35$Type.prototype.apply_0, DirectS3BlockStore$lambda$35$Type, [res_4]));
  return null;
}

function $lambda$36_3(this$static, preAuthedGet_0){
  return $get_28(this$static.direct, castTo(preAuthedGet_0.getAtIndex(0), 231).base, castTo(preAuthedGet_0.getAtIndex(0), 231).fields);
}

function $lambda$39_3(this$static, owner_1, hash_2, bat_3, res_4){
  $exceptionally($thenAccept($getRaw_0(this$static.fallback, owner_1, hash_2, bat_3), new DirectS3BlockStore$13methodref$complete$Type(res_4)), makeLambdaFunction(DirectS3BlockStore$lambda$41$Type.prototype.apply_0, DirectS3BlockStore$lambda$41$Type, [res_4]));
  return null;
}

function $lambda$42_1(this$static, owner_1, root_2, champKey_3, bat_4, committedRoot_5){
  return $getChampLookup_0(this$static.fallback, owner_1, root_2, champKey_3, bat_4, committedRoot_5);
}

function $lambda$43_0(this$static, owner_1, root_2, champKey_3, bat_4, committedRoot_5, t_5){
  if (!instanceOf(t_5, 478))
    return errored(t_5);
  return $getChampLookup_3(this$static, owner_1, root_2, champKey_3, bat_4, this$static.hasher);
}

function $lambda$8_6(this$static, blocks_1, progressCounter_2, preAuthed_2){
  var finalI, futures, i, identity, size_0, targetName, url_0;
  futures = new ArrayList;
  for (i = 0; i < blocks_1.size(); i++) {
    url_0 = castTo(preAuthed_2.getAtIndex(i), 231);
    targetName = keyToHash($substring(url_0.base, url_0.base.lastIndexOf('/') + 1));
    size_0 = valueOf_2(castTo(blocks_1.getAtIndex(i), 11).length);
    finalI = i;
    $add(futures, $thenApply(($clinit_RetryStorage() , recurse_3(3, 3, new DirectS3BlockStore$lambda$9$Type(this$static, url_0, blocks_1, finalI))), makeLambdaFunction(DirectS3BlockStore$lambda$10$Type.prototype.apply_0, DirectS3BlockStore$lambda$10$Type, [progressCounter_2, size_0, targetName])));
  }
  return identity = new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_LIST)) , castTo($reduce(new StreamImpl(null, new Spliterators$IteratorSpliterator(futures, 16)), identity, new Futures$lambda$6$Type), 6);
}

function $lambda$9_9(this$static, url_1, blocks_2, finalI_3){
  return $put_25(this$static.direct, url_1.base, castTo(blocks_2.getAtIndex(finalI_3), 11), url_1.fields);
}

function $onOwnersNode(this$static, owner){
  var cached;
  cached = castTo($get_5(this$static.storageNodeByOwner, owner), 58);
  if (cached)
    return new CompletableFuture_0(($clinit_Boolean() , cached.equals(this$static.nodeId)?true:false));
  return $thenCompose($getUsername(this$static.core, owner), makeLambdaFunction(DirectS3BlockStore$lambda$0$Type.prototype.apply_0, DirectS3BlockStore$lambda$0$Type, [this$static, owner]));
}

function $put_20(this$static, owner, writer, signedHashes, blocks, tid){
  return $bulkPut(this$static.fallback, owner, writer, signedHashes, blocks, 'dag-cbor', tid, makeLambdaFunction(ContentAddressedStorage$HTTP$lambda$14$Type.prototype.accept_5, ContentAddressedStorage$HTTP$lambda$14$Type, []));
}

function DirectS3BlockStore(blockStoreProperties, direct, fallback, nodeId, core, hasher){
  this.storageNodeByOwner = new LRUCache(100);
  this.directWrites = blockStoreProperties.directWrites;
  this.publicReads = blockStoreProperties.publicReads;
  this.authedReads = blockStoreProperties.authedReads;
  this.basePublicReadUrl = blockStoreProperties.basePublicReadUrl;
  this.baseAuthedUrl = blockStoreProperties.baseAuthedUrl;
  this.direct = direct;
  this.fallback = fallback;
  this.nodeId = nodeId;
  this.core = core;
  this.hasher = hasher;
}

function keyToHash(keyFileName){
  var decoded;
  decoded = $decode(new Base32, getBytes_1(keyFileName, forName('UTF-8')));
  return cast(decoded);
}

function lambda$10_5(progressCounter_0, size_1, targetName_2){
  progressCounter_0(size_1);
  return targetName_2;
}

function lambda$14_2(hashes_0, i_1){
  return new Pair(valueOf_1(i_1), castTo(hashes_0.getAtIndex(i_1), 44));
}

function lambda$16_3(bats_0, p_1){
  return new MirrorCap(castTo(p_1.right, 44), bats_0.size() > castTo(p_1.left, 100).value_0?($clinit_Optional() , new Optional(checkCriticalNotNull(castTo(bats_0.getAtIndex(castTo(p_1.left, 100).value_0), 112)))):($clinit_Optional() , $clinit_Optional() , EMPTY));
}

function lambda$19_1(monitor_0, nonIdentity_1, i_2, b_3){
  var hashAndIndex;
  monitor_0(valueOf_2(b_3.length));
  hashAndIndex = castTo(nonIdentity_1.getAtIndex(i_2), 20);
  return new Pair(castTo(hashAndIndex.left, 100), new FragmentWithHash(new Fragment(b_3), ($clinit_Optional() , new Optional(checkCriticalNotNull(castTo(hashAndIndex.right, 44))))));
}

function lambda$20_1(hashes_0, retrieved_1){
  var i, identity, p, p$iterator, res;
  res = initUnidimensionalArray(Lpeergos_shared_user_fs_FragmentWithHash_2_classLit, $intern_0, 131, hashes_0.size(), 0, 1);
  for (p$iterator = retrieved_1.iterator(); p$iterator.hasNext_0();) {
    p = castTo(p$iterator.next_1(), 20);
    res[castTo(p.left, 100).value_0] = castTo(p.right, 131);
  }
  for (i = 0; i < hashes_0.size(); i++)
    if (!res[i]) {
      identity = castTo(hashes_0.getAtIndex(i), 58);
      if (identity.type != ($clinit_Multihash$Type() , id_3))
        throw toJs(new IllegalStateException_0('Hash should be identity!'));
      res[i] = new FragmentWithHash(new Fragment(copyOfRange(identity.hash_0, 0, identity.hash_0.length)), ($clinit_Optional() , $clinit_Optional() , EMPTY));
    }
  return new Arrays$ArrayList(res);
}

defineClass(981, 1, {}, DirectS3BlockStore);
_.clearBlockCache = function clearBlockCache_5(){
}
;
_.getChampLookup_0 = function getChampLookup_11(owner, root, champKey, bat, committedRoot, hasher){
  return $getChampLookup_3(this, owner, root, champKey, bat, hasher);
}
;
_.getSigningKey = function getSigningKey_3(owner, hash){
  return $thenApply(hash.type == ($clinit_Multihash$Type() , id_3)?new CompletableFuture_0(($clinit_Optional() , new Optional(checkCriticalNotNull(fromByteArray(copyOfRange(hash.hash_0, 0, hash.hash_0.length)))))):$thenApply($getRaw_1(this, owner, hash.target, ($clinit_Optional() , $clinit_Optional() , EMPTY)), makeLambdaFunction(DirectS3BlockStore$lambda$25$Type.prototype.apply_0, DirectS3BlockStore$lambda$25$Type, [])), makeLambdaFunction(ContentAddressedStorage$lambda$13$Type.prototype.apply_0, ContentAddressedStorage$lambda$13$Type, []));
}
;
_.put_0 = function put_24(owner, writer, block, hasher, tid){
  return $thenCompose(hasher.scriptJS.sha256(block), makeLambdaFunction(ContentAddressedStorage$lambda$0$Type.prototype.apply_0, ContentAddressedStorage$lambda$0$Type, [this, owner, writer, block, tid]));
}
;
_.put_2 = function put_26(owner, writer, signature, block, tid){
  return $thenApply($put_20(this, owner, writer, ($clinit_Collections() , new Collections$SingletonList(signature)), new Collections$SingletonList(block), tid), makeLambdaFunction(ContentAddressedStorage$lambda$1$Type.prototype.apply_0, ContentAddressedStorage$lambda$1$Type, []));
}
;
_.putBoxingKey = function putBoxingKey_3(owner, signature, key, tid){
  return $putBoxingKey(this, owner, signature, key, tid);
}
;
_.putSigningKey = function putSigningKey_7(signature, owner, newKey, tid){
  return new CompletableFuture_0(new PublicKeyHash(new Cid(1, ($clinit_Cid$Codec() , DagCbor), ($clinit_Multihash$Type() , id_3), $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborLong(($clinit_PublicSigningKey$Type() , Ed25519).value), new CborObject$CborByteArray(newKey.publicKey)])))))));
}
;
_.putSigningKey_0 = function putSigningKey_8(signature, owner, writer, newKey, tid){
  return new CompletableFuture_0(new PublicKeyHash(new Cid(1, ($clinit_Cid$Codec() , DagCbor), ($clinit_Multihash$Type() , id_3), $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborLong(($clinit_PublicSigningKey$Type() , Ed25519).value), new CborObject$CborByteArray(newKey.publicKey)])))))));
}
;
_.blockStoreProperties = function blockStoreProperties_6(){
  return new CompletableFuture_0(new BlockStoreProperties(this.directWrites, this.publicReads, this.authedReads, this.basePublicReadUrl, this.baseAuthedUrl));
}
;
_.closeTransaction = function closeTransaction_4(owner, tid){
  return $closeTransaction(this.fallback, owner, tid);
}
;
_.downloadFragments = function downloadFragments_5(owner, hashes, bats, h, monitor, spaceIncreaseFactor){
  if (this.publicReads || !this.authedReads)
    return downloadFragments(owner, hashes, bats, this.fallback, monitor, spaceIncreaseFactor);
  return $thenCompose($onOwnersNode(this, owner), makeLambdaFunction(DirectS3BlockStore$lambda$13$Type.prototype.apply_0, DirectS3BlockStore$lambda$13$Type, [this, hashes, bats, monitor, owner, spaceIncreaseFactor]));
}
;
_.get_1 = function get_75(owner, hash, bat){
  return $thenApply($getRaw_1(this, owner, hash, bat), makeLambdaFunction(DirectS3BlockStore$lambda$25$Type.prototype.apply_0, DirectS3BlockStore$lambda$25$Type, []));
}
;
_.getChampLookup = function getChampLookup_10(owner, root, champKey, bat, committedRoot){
  return asyncExceptionally(new DirectS3BlockStore$lambda$42$Type(this, owner, root, champKey, bat, committedRoot), makeLambdaFunction(DirectS3BlockStore$lambda$43$Type.prototype.apply_0, DirectS3BlockStore$lambda$43$Type, [this, owner, root, champKey, bat, committedRoot]));
}
;
_.getRaw = function getRaw_6(owner, hash, bat){
  return $getRaw_1(this, owner, hash, bat);
}
;
_.id_1 = function id_9(){
  return new CompletableFuture_0(this.nodeId);
}
;
_.put_1 = function put_25(owner, writer, signedHashes, blocks, tid){
  return $put_20(this, owner, writer, signedHashes, blocks, tid);
}
;
_.putRaw = function putRaw_6(owner, writer, signatures, blocks, tid, progressCounter){
  return $thenCompose($onOwnersNode(this, owner), makeLambdaFunction(DirectS3BlockStore$lambda$2$Type.prototype.apply_0, DirectS3BlockStore$lambda$2$Type, [this, owner, writer, tid, progressCounter, blocks, signatures]));
}
;
_.startTransaction = function startTransaction_4(owner){
  return $startTransaction(this.fallback, owner);
}
;
_.authedReads = false;
_.directWrites = false;
_.publicReads = false;
var Lpeergos_shared_storage_DirectS3BlockStore_2_classLit = createForClass('peergos.shared.storage', 'DirectS3BlockStore', 981);
function DirectS3BlockStore$0methodref$getRawBlockBats$Type(){
}

defineClass(3139, $wnd.Function, $intern_22, DirectS3BlockStore$0methodref$getRawBlockBats$Type);
_.apply_0 = function apply_856(arg0){
  return getRawBlockBats(castTo(arg0, 11));
}
;
function DirectS3BlockStore$10methodref$complete$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(991, 1, $intern_32, DirectS3BlockStore$10methodref$complete$Type);
_.accept = function accept_89(arg0){
  $complete(this.$$outer_0, castTo(arg0, 12));
}
;
_.andThen = function andThen_43(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_storage_DirectS3BlockStore$10methodref$complete$Type_2_classLit = createForClass('peergos.shared.storage', 'DirectS3BlockStore/10methodref$complete$Type', 991);
function DirectS3BlockStore$11methodref$of$Type(){
}

defineClass(3147, $wnd.Function, $intern_22, DirectS3BlockStore$11methodref$of$Type);
_.apply_0 = function apply_857(arg0){
  return $clinit_Optional() , new Optional(checkCriticalNotNull(castTo(arg0, 11)));
}
;
function DirectS3BlockStore$12methodref$complete$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(992, 1, $intern_32, DirectS3BlockStore$12methodref$complete$Type);
_.accept = function accept_90(arg0){
  $complete(this.$$outer_0, castTo(arg0, 12));
}
;
_.andThen = function andThen_44(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_storage_DirectS3BlockStore$12methodref$complete$Type_2_classLit = createForClass('peergos.shared.storage', 'DirectS3BlockStore/12methodref$complete$Type', 992);
function DirectS3BlockStore$13methodref$complete$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(993, 1, $intern_32, DirectS3BlockStore$13methodref$complete$Type);
_.accept = function accept_91(arg0){
  $complete(this.$$outer_0, castTo(arg0, 12));
}
;
_.andThen = function andThen_45(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_storage_DirectS3BlockStore$13methodref$complete$Type_2_classLit = createForClass('peergos.shared.storage', 'DirectS3BlockStore/13methodref$complete$Type', 993);
function DirectS3BlockStore$1methodref$complete$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3141, $wnd.Function, $intern_22, DirectS3BlockStore$1methodref$complete$Type);
_.apply_0 = function apply_858(arg0){
  return $clinit_Boolean() , $complete(this.$$outer_0, castTo(arg0, 17))?true:false;
}
;
function DirectS3BlockStore$2methodref$completeExceptionally$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3142, $wnd.Function, $intern_22, DirectS3BlockStore$2methodref$completeExceptionally$Type);
_.apply_0 = function apply_859(arg0){
  return $clinit_Boolean() , $completeExceptionally(this.$$outer_0, castTo(arg0, 33))?true:false;
}
;
function DirectS3BlockStore$3methodref$complete$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(987, 1, $intern_32, DirectS3BlockStore$3methodref$complete$Type);
_.accept = function accept_92(arg0){
  $complete(this.$$outer_0, castTo(arg0, 17));
}
;
_.andThen = function andThen_46(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_storage_DirectS3BlockStore$3methodref$complete$Type_2_classLit = createForClass('peergos.shared.storage', 'DirectS3BlockStore/3methodref$complete$Type', 987);
function DirectS3BlockStore$4methodref$complete$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(988, 1, $intern_32, DirectS3BlockStore$4methodref$complete$Type);
_.accept = function accept_93(arg0){
  $complete(this.$$outer_0, castTo(arg0, 17));
}
;
_.andThen = function andThen_47(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_storage_DirectS3BlockStore$4methodref$complete$Type_2_classLit = createForClass('peergos.shared.storage', 'DirectS3BlockStore/4methodref$complete$Type', 988);
function DirectS3BlockStore$5methodref$fromByteArray$Type(){
}

defineClass(3165, $wnd.Function, $intern_22, DirectS3BlockStore$5methodref$fromByteArray$Type);
_.apply_0 = function apply_860(arg0){
  return fromByteArray(castTo(arg0, 11));
}
;
function DirectS3BlockStore$6methodref$of$Type(){
}

defineClass(3144, $wnd.Function, $intern_22, DirectS3BlockStore$6methodref$of$Type);
_.apply_0 = function apply_861(arg0){
  return $clinit_Optional() , new Optional(checkCriticalNotNull(castTo(arg0, 11)));
}
;
function DirectS3BlockStore$7methodref$complete$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(989, 1, $intern_32, DirectS3BlockStore$7methodref$complete$Type);
_.accept = function accept_94(arg0){
  $complete(this.$$outer_0, castTo(arg0, 12));
}
;
_.andThen = function andThen_48(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_storage_DirectS3BlockStore$7methodref$complete$Type_2_classLit = createForClass('peergos.shared.storage', 'DirectS3BlockStore/7methodref$complete$Type', 989);
function DirectS3BlockStore$8methodref$of$Type(){
}

defineClass(3160, $wnd.Function, $intern_22, DirectS3BlockStore$8methodref$of$Type);
_.apply_0 = function apply_862(arg0){
  return $clinit_Optional() , new Optional(checkCriticalNotNull(castTo(arg0, 11)));
}
;
function DirectS3BlockStore$9methodref$complete$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(990, 1, $intern_32, DirectS3BlockStore$9methodref$complete$Type);
_.accept = function accept_95(arg0){
  $complete(this.$$outer_0, castTo(arg0, 12));
}
;
_.andThen = function andThen_49(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_storage_DirectS3BlockStore$9methodref$complete$Type_2_classLit = createForClass('peergos.shared.storage', 'DirectS3BlockStore/9methodref$complete$Type', 990);
function DirectS3BlockStore$lambda$0$Type($$outer_0, owner_1){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
}

defineClass(3136, $wnd.Function, $intern_22, DirectS3BlockStore$lambda$0$Type);
_.apply_0 = function apply_863(arg0){
  return $lambda$0_22(this.$$outer_0, this.owner_1, arg0);
}
;
function DirectS3BlockStore$lambda$1$Type($$outer_0, user_1, owner_2){
  this.$$outer_0 = $$outer_0;
  this.user_1 = user_1;
  this.owner_2 = owner_2;
}

defineClass(3150, $wnd.Function, $intern_22, DirectS3BlockStore$lambda$1$Type);
_.apply_0 = function apply_864(arg0){
  return $lambda$1_18(this.$$outer_0, this.user_1, this.owner_2, arg0);
}
;
function DirectS3BlockStore$lambda$10$Type(progressCounter_0, size_1, targetName_2){
  this.progressCounter_0 = progressCounter_0;
  this.size_1 = size_1;
  this.targetName_2 = targetName_2;
}

defineClass(3152, $wnd.Function, $intern_22, DirectS3BlockStore$lambda$10$Type);
_.apply_0 = function apply_865(arg0){
  return lambda$10_5(this.progressCounter_0, this.size_1, this.targetName_2);
}
;
function DirectS3BlockStore$lambda$13$Type($$outer_0, hashes_1, bats_2, monitor_3, owner_4, spaceIncreaseFactor_6){
  this.$$outer_0 = $$outer_0;
  this.hashes_1 = hashes_1;
  this.bats_2 = bats_2;
  this.monitor_3 = monitor_3;
  this.owner_4 = owner_4;
  this.spaceIncreaseFactor_6 = spaceIncreaseFactor_6;
}

defineClass(3143, $wnd.Function, $intern_22, DirectS3BlockStore$lambda$13$Type);
_.apply_0 = function apply_866(arg0){
  return $lambda$13_6(this.$$outer_0, this.hashes_1, this.bats_2, this.monitor_3, this.owner_4, this.spaceIncreaseFactor_6, arg0);
}
;
_.spaceIncreaseFactor_6 = 0;
function DirectS3BlockStore$lambda$14$Type(hashes_0){
  this.hashes_0 = hashes_0;
}

defineClass(984, 1, {}, DirectS3BlockStore$lambda$14$Type);
_.apply_2 = function apply_867(arg0){
  return lambda$14_2(this.hashes_0, arg0);
}
;
var Lpeergos_shared_storage_DirectS3BlockStore$lambda$14$Type_2_classLit = createForClass('peergos.shared.storage', 'DirectS3BlockStore/lambda$14$Type', 984);
function DirectS3BlockStore$lambda$15$Type(){
}

defineClass(985, 1, {}, DirectS3BlockStore$lambda$15$Type);
_.test_0 = function test_22(arg0){
  return castTo(castTo(arg0, 20).right, 44).type != ($clinit_Multihash$Type() , id_3);
}
;
var Lpeergos_shared_storage_DirectS3BlockStore$lambda$15$Type_2_classLit = createForClass('peergos.shared.storage', 'DirectS3BlockStore/lambda$15$Type', 985);
function DirectS3BlockStore$lambda$16$Type(bats_0){
  this.bats_0 = bats_0;
}

defineClass(3153, $wnd.Function, $intern_22, DirectS3BlockStore$lambda$16$Type);
_.apply_0 = function apply_868(arg0){
  return lambda$16_3(this.bats_0, arg0);
}
;
function DirectS3BlockStore$lambda$17$Type($$outer_0, monitor_1, nonIdentity_2){
  this.$$outer_0 = $$outer_0;
  this.monitor_1 = monitor_1;
  this.nonIdentity_2 = nonIdentity_2;
}

defineClass(3154, $wnd.Function, $intern_22, DirectS3BlockStore$lambda$17$Type);
_.apply_0 = function apply_869(arg0){
  return $lambda$17_9(this.$$outer_0, this.monitor_1, this.nonIdentity_2, arg0);
}
;
function DirectS3BlockStore$lambda$18$Type($$outer_0, monitor_1, nonIdentity_2, preAuthedGets_3){
  this.$$outer_0 = $$outer_0;
  this.monitor_1 = monitor_1;
  this.nonIdentity_2 = nonIdentity_2;
  this.preAuthedGets_3 = preAuthedGets_3;
}

defineClass(986, 1, {}, DirectS3BlockStore$lambda$18$Type);
_.apply_2 = function apply_870(arg0){
  return $lambda$18_3(this.$$outer_0, this.monitor_1, this.nonIdentity_2, this.preAuthedGets_3, arg0);
}
;
var Lpeergos_shared_storage_DirectS3BlockStore$lambda$18$Type_2_classLit = createForClass('peergos.shared.storage', 'DirectS3BlockStore/lambda$18$Type', 986);
function DirectS3BlockStore$lambda$19$Type(monitor_0, nonIdentity_1, i_2){
  this.monitor_0 = monitor_0;
  this.nonIdentity_1 = nonIdentity_1;
  this.i_2 = i_2;
}

defineClass(3157, $wnd.Function, $intern_22, DirectS3BlockStore$lambda$19$Type);
_.apply_0 = function apply_871(arg0){
  return lambda$19_1(this.monitor_0, this.nonIdentity_1, this.i_2, arg0);
}
;
_.i_2 = 0;
function DirectS3BlockStore$lambda$2$Type($$outer_0, owner_1, writer_2, tid_3, progressCounter_4, blocks_5, signatures_6){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.tid_3 = tid_3;
  this.progressCounter_4 = progressCounter_4;
  this.blocks_5 = blocks_5;
  this.signatures_6 = signatures_6;
}

defineClass(3137, $wnd.Function, $intern_22, DirectS3BlockStore$lambda$2$Type);
_.apply_0 = function apply_872(arg0){
  return $lambda$2_14(this.$$outer_0, this.owner_1, this.writer_2, this.tid_3, this.progressCounter_4, this.blocks_5, this.signatures_6, arg0);
}
;
function DirectS3BlockStore$lambda$20$Type(hashes_0){
  this.hashes_0 = hashes_0;
}

defineClass(3155, $wnd.Function, $intern_22, DirectS3BlockStore$lambda$20$Type);
_.apply_0 = function apply_873(arg0){
  return lambda$20_1(this.hashes_0, arg0);
}
;
function DirectS3BlockStore$lambda$22$Type($$outer_0, owner_1, hashes_2, bats_3, monitor_5, spaceIncreaseFactor_6, allResults_8){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.hashes_2 = hashes_2;
  this.bats_3 = bats_3;
  this.monitor_5 = monitor_5;
  this.spaceIncreaseFactor_6 = spaceIncreaseFactor_6;
  this.allResults_8 = allResults_8;
}

defineClass(3156, $wnd.Function, $intern_22, DirectS3BlockStore$lambda$22$Type);
_.apply_0 = function apply_874(arg0){
  return $lambda$22_1(this.$$outer_0, this.owner_1, this.hashes_2, this.bats_3, this.monitor_5, this.spaceIncreaseFactor_6, this.allResults_8);
}
;
_.spaceIncreaseFactor_6 = 0;
function DirectS3BlockStore$lambda$24$Type(allResults_0){
  this.allResults_0 = allResults_0;
}

defineClass(3158, $wnd.Function, $intern_22, DirectS3BlockStore$lambda$24$Type);
_.apply_0 = function apply_875(arg0){
  return $completeExceptionally(this.allResults_0, castTo(arg0, 33)) , null;
}
;
function DirectS3BlockStore$lambda$25$Type(){
}

defineClass(1318, $wnd.Function, $intern_22, DirectS3BlockStore$lambda$25$Type);
_.apply_0 = function apply_876(arg0){
  return $map(castTo(arg0, 12), makeLambdaFunction(DirectS3BlockStore$5methodref$fromByteArray$Type.prototype.apply_0, DirectS3BlockStore$5methodref$fromByteArray$Type, []));
}
;
function DirectS3BlockStore$lambda$29$Type($$outer_0, hash_1, bat_2, res_3, owner_4){
  this.$$outer_0 = $$outer_0;
  this.hash_1 = hash_1;
  this.bat_2 = bat_2;
  this.res_3 = res_3;
  this.owner_4 = owner_4;
}

defineClass(3145, $wnd.Function, $intern_22, DirectS3BlockStore$lambda$29$Type);
_.apply_0 = function apply_877(arg0){
  return $lambda$29_1(this.$$outer_0, this.hash_1, this.bat_2, this.res_3, this.owner_4);
}
;
function DirectS3BlockStore$lambda$3$Type($$outer_0, owner_1, writer_2, groupedSignatures_3, grouped_4, tid_5, progressCounter_6){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.groupedSignatures_3 = groupedSignatures_3;
  this.grouped_4 = grouped_4;
  this.tid_5 = tid_5;
  this.progressCounter_6 = progressCounter_6;
}

defineClass(982, 1, {}, DirectS3BlockStore$lambda$3$Type);
_.apply_2 = function apply_878(arg0){
  return $lambda$3_14(this.$$outer_0, this.owner_1, this.writer_2, this.groupedSignatures_3, this.grouped_4, this.tid_5, this.progressCounter_6, arg0);
}
;
var Lpeergos_shared_storage_DirectS3BlockStore$lambda$3$Type_2_classLit = createForClass('peergos.shared.storage', 'DirectS3BlockStore/lambda$3$Type', 982);
function DirectS3BlockStore$lambda$30$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3159, $wnd.Function, $intern_22, DirectS3BlockStore$lambda$30$Type);
_.apply_0 = function apply_879(arg0){
  return $lambda$30_4(this.$$outer_0, arg0);
}
;
function DirectS3BlockStore$lambda$33$Type($$outer_0, owner_1, hash_2, bat_3, res_4){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.hash_2 = hash_2;
  this.bat_3 = bat_3;
  this.res_4 = res_4;
}

defineClass(3161, $wnd.Function, $intern_22, DirectS3BlockStore$lambda$33$Type);
_.apply_0 = function apply_880(arg0){
  return $lambda$33_2(this.$$outer_0, this.owner_1, this.hash_2, this.bat_3, this.res_4);
}
;
function DirectS3BlockStore$lambda$35$Type(res_0){
  this.res_0 = res_0;
}

defineClass(3162, $wnd.Function, $intern_22, DirectS3BlockStore$lambda$35$Type);
_.apply_0 = function apply_881(arg0){
  return $completeExceptionally(this.res_0, castTo(arg0, 33)) , null;
}
;
function DirectS3BlockStore$lambda$36$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3146, $wnd.Function, $intern_22, DirectS3BlockStore$lambda$36$Type);
_.apply_0 = function apply_882(arg0){
  return $lambda$36_3(this.$$outer_0, arg0);
}
;
function DirectS3BlockStore$lambda$39$Type($$outer_0, owner_1, hash_2, bat_3, res_4){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.hash_2 = hash_2;
  this.bat_3 = bat_3;
  this.res_4 = res_4;
}

defineClass(3148, $wnd.Function, $intern_22, DirectS3BlockStore$lambda$39$Type);
_.apply_0 = function apply_883(arg0){
  return $lambda$39_3(this.$$outer_0, this.owner_1, this.hash_2, this.bat_3, this.res_4);
}
;
function DirectS3BlockStore$lambda$4$Type(){
}

defineClass(3151, $wnd.Function, $intern_22, DirectS3BlockStore$lambda$4$Type);
_.apply_0 = function apply_884(arg0){
  return castTo($collect_0($flatMap_0(castTo(arg0, 17).stream(), makeLambdaFunction(DirectS3BlockStore$lambda$5$Type.prototype.apply_0, DirectS3BlockStore$lambda$5$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
}
;
function DirectS3BlockStore$lambda$41$Type(res_0){
  this.res_0 = res_0;
}

defineClass(3163, $wnd.Function, $intern_22, DirectS3BlockStore$lambda$41$Type);
_.apply_0 = function apply_885(arg0){
  return $completeExceptionally(this.res_0, castTo(arg0, 33)) , null;
}
;
function DirectS3BlockStore$lambda$42$Type($$outer_0, owner_1, root_2, champKey_3, bat_4, committedRoot_5){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.root_2 = root_2;
  this.champKey_3 = champKey_3;
  this.bat_4 = bat_4;
  this.committedRoot_5 = committedRoot_5;
}

defineClass(994, 1, {}, DirectS3BlockStore$lambda$42$Type);
_.get_0 = function get_76(){
  return $lambda$42_1(this.$$outer_0, this.owner_1, this.root_2, this.champKey_3, this.bat_4, this.committedRoot_5);
}
;
var Lpeergos_shared_storage_DirectS3BlockStore$lambda$42$Type_2_classLit = createForClass('peergos.shared.storage', 'DirectS3BlockStore/lambda$42$Type', 994);
function DirectS3BlockStore$lambda$43$Type($$outer_0, owner_1, root_2, champKey_3, bat_4, committedRoot_5){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.root_2 = root_2;
  this.champKey_3 = champKey_3;
  this.bat_4 = bat_4;
  this.committedRoot_5 = committedRoot_5;
}

defineClass(3149, $wnd.Function, $intern_22, DirectS3BlockStore$lambda$43$Type);
_.apply_0 = function apply_886(arg0){
  return $lambda$43_0(this.$$outer_0, this.owner_1, this.root_2, this.champKey_3, this.bat_4, this.committedRoot_5, arg0);
}
;
function DirectS3BlockStore$lambda$5$Type(){
}

defineClass(3164, $wnd.Function, $intern_22, DirectS3BlockStore$lambda$5$Type);
_.apply_0 = function apply_887(arg0){
  return castTo(arg0, 17).stream();
}
;
function DirectS3BlockStore$lambda$6$Type(){
}

defineClass(3138, $wnd.Function, $intern_22, DirectS3BlockStore$lambda$6$Type);
_.apply_0 = function apply_888(arg0){
  return valueOf_1(castTo(arg0, 11).length);
}
;
function DirectS3BlockStore$lambda$8$Type($$outer_0, blocks_1, progressCounter_2){
  this.$$outer_0 = $$outer_0;
  this.blocks_1 = blocks_1;
  this.progressCounter_2 = progressCounter_2;
}

defineClass(3140, $wnd.Function, $intern_22, DirectS3BlockStore$lambda$8$Type);
_.apply_0 = function apply_889(arg0){
  return $lambda$8_6(this.$$outer_0, this.blocks_1, this.progressCounter_2, arg0);
}
;
function DirectS3BlockStore$lambda$9$Type($$outer_0, url_1, blocks_2, finalI_3){
  this.$$outer_0 = $$outer_0;
  this.url_1 = url_1;
  this.blocks_2 = blocks_2;
  this.finalI_3 = finalI_3;
}

defineClass(983, 1, {}, DirectS3BlockStore$lambda$9$Type);
_.get_0 = function get_77(){
  return $lambda$9_9(this.$$outer_0, this.url_1, this.blocks_2, this.finalI_3);
}
;
_.finalI_3 = 0;
var Lpeergos_shared_storage_DirectS3BlockStore$lambda$9$Type_2_classLit = createForClass('peergos.shared.storage', 'DirectS3BlockStore/lambda$9$Type', 983);
function HttpFileNotFoundException(){
  RuntimeException_0.call(this, 'Http 404: File not found exception!');
}

defineClass(477, 35, {4:1, 51:1, 35:1, 33:1, 477:1}, HttpFileNotFoundException);
var Lpeergos_shared_storage_HttpFileNotFoundException_2_classLit = createForClass('peergos.shared.storage', 'HttpFileNotFoundException', 477);
function $requestQuota_0(this$static, username, identity, space){
  var req, signedRequest;
  req = new QuotaControl$SpaceRequest(username, space, ($clinit_System() , fromDouble_0(Date.now())), ($clinit_Optional() , $clinit_Optional() , EMPTY));
  signedRequest = $signMessage(identity.secret, $toByteArray_2($toCbor_64(req)));
  return this$static.requestQuota_0(identity.publicKeyHash, signedRequest);
}

function $clinit_HttpSpaceUsage(){
  $clinit_HttpSpaceUsage = emptyMethod;
  LOG_3 = ($clinit_Logger() , getLogger());
}

function $getPaymentProperties(urlPrefix, poster, owner, newClientSecret, signedTime){
  return $thenApply($get_28(poster, urlPrefix + 'peergos/v0/storage/' + 'payment-properties?owner=' + encode_11(owner.target.toString()) + '&new-client-secret=' + newClientSecret + '&auth=' + bytesToHex(signedTime), ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)), makeLambdaFunction(HttpSpaceUsage$lambda$1$Type.prototype.apply_0, HttpSpaceUsage$lambda$1$Type, []));
}

function $getPaymentProperties_0(this$static, owner, newClientSecret, signedTime){
  return $getPaymentProperties('', this$static.direct, owner, newClientSecret, signedTime);
}

function $getPaymentProperties_1(this$static, targetServerId, owner, newClientSecret, signedTime){
  return $getPaymentProperties('/p2p/' + targetServerId.toString() + '/http' + '/', this$static.p2p, owner, newClientSecret, signedTime);
}

function $getQuota(urlPrefix, poster, owner, signedTime){
  return $thenApply($get_28(poster, urlPrefix + 'peergos/v0/storage/' + 'quota?owner=' + encode_11(owner.target.toString()) + '&auth=' + bytesToHex(signedTime), ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)), makeLambdaFunction(HttpSpaceUsage$lambda$2$Type.prototype.apply_0, HttpSpaceUsage$lambda$2$Type, []));
}

function $getQuota_0(this$static, owner, signedTime){
  return $getQuota('', this$static.direct, owner, signedTime);
}

function $getQuota_1(this$static, targetServerId, owner, signedTime){
  return $getQuota('/p2p/' + targetServerId.toString() + '/http' + '/', this$static.p2p, owner, signedTime);
}

function $getUsage(urlPrefix, poster, owner, signedTime){
  return $thenApply($get_28(poster, urlPrefix + 'peergos/v0/storage/' + 'usage?owner=' + encode_11(owner.target.toString()) + '&auth=' + bytesToHex(signedTime), ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)), makeLambdaFunction(HttpSpaceUsage$lambda$0$Type.prototype.apply_0, HttpSpaceUsage$lambda$0$Type, []));
}

function $getUsage_0(this$static, owner, signedTime){
  return $getUsage('', this$static.direct, owner, signedTime);
}

function $getUsage_1(this$static, targetServerId, owner, signedTime){
  return $getUsage('/p2p/' + targetServerId.toString() + '/http' + '/', this$static.p2p, owner, signedTime);
}

function $requestQuota(this$static, owner, signedRequest){
  return $requestSpace('', this$static.direct, owner, signedRequest);
}

function $requestSpace(urlPrefix, poster, owner, signedRequest){
  return $thenApply($get_28(poster, urlPrefix + 'peergos/v0/storage/' + 'request?owner=' + encode_11(owner.target.toString()) + '&req=' + bytesToHex(signedRequest), ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)), makeLambdaFunction(HttpSpaceUsage$lambda$3$Type.prototype.apply_0, HttpSpaceUsage$lambda$3$Type, []));
}

function $requestSpace_0(this$static, targetServerId, owner, signedRequest){
  return $requestSpace('/p2p/' + targetServerId.toString() + '/http' + '/', this$static.p2p, owner, signedRequest);
}

function HttpSpaceUsage(direct, p2p){
  $clinit_HttpSpaceUsage();
  $info(LOG_3, 'Creating HTTP SpaceUsage API at ' + direct + ' and ' + p2p);
  this.direct = direct;
  this.p2p = p2p;
}

function encode_11(component){
  var e;
  try {
    return encode_1(component);
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 136)) {
      e = $e0;
      throw toJs(new RuntimeException_2(e));
    }
     else 
      throw toJs($e0);
  }
}

defineClass(497, 1, {}, HttpSpaceUsage);
_.requestQuota = function requestQuota(username, identity, space){
  return $requestQuota_0(this, username, identity, space);
}
;
_.getPaymentProperties_0 = function getPaymentProperties(owner, newClientSecret, signedTime){
  return $getPaymentProperties_0(this, owner, newClientSecret, signedTime);
}
;
_.getQuota_0 = function getQuota(owner, signedTime){
  return $getQuota_0(this, owner, signedTime);
}
;
_.getUsage = function getUsage(owner, signedTime){
  return $getUsage_0(this, owner, signedTime);
}
;
_.requestQuota_0 = function requestQuota_0(owner, signedRequest){
  return $requestQuota(this, owner, signedRequest);
}
;
var LOG_3;
var Lpeergos_shared_storage_HttpSpaceUsage_2_classLit = createForClass('peergos.shared.storage', 'HttpSpaceUsage', 497);
function HttpSpaceUsage$lambda$0$Type(){
}

defineClass(3124, $wnd.Function, $intern_22, HttpSpaceUsage$lambda$0$Type);
_.apply_0 = function apply_890(arg0){
  return $clinit_HttpSpaceUsage() , valueOf_2(castTo(fromByteArray(castTo(arg0, 11)), 29).value_0);
}
;
function HttpSpaceUsage$lambda$1$Type(){
}

defineClass(3125, $wnd.Function, $intern_22, HttpSpaceUsage$lambda$1$Type);
_.apply_0 = function apply_891(arg0){
  return $clinit_HttpSpaceUsage() , fromCbor_71(deserialize(new CborDecoder(new ByteArrayInputStream(castTo(arg0, 11))), castTo(arg0, 11).length));
}
;
function HttpSpaceUsage$lambda$2$Type(){
}

defineClass(3126, $wnd.Function, $intern_22, HttpSpaceUsage$lambda$2$Type);
_.apply_0 = function apply_892(arg0){
  return $clinit_HttpSpaceUsage() , valueOf_2(castTo(fromByteArray(castTo(arg0, 11)), 29).value_0);
}
;
function HttpSpaceUsage$lambda$3$Type(){
}

defineClass(3127, $wnd.Function, $intern_22, HttpSpaceUsage$lambda$3$Type);
_.apply_0 = function apply_893(arg0){
  return $clinit_HttpSpaceUsage() , fromCbor_71(fromByteArray(castTo(arg0, 11)));
}
;
function call_2(owner, processor, ipfs){
  var res;
  res = new CompletableFuture;
  $exceptionally($thenCompose(ipfs.startTransaction(owner), makeLambdaFunction(IpfsTransaction$lambda$0$Type.prototype.apply_0, IpfsTransaction$lambda$0$Type, [res, ipfs, owner, processor])), makeLambdaFunction(IpfsTransaction$lambda$6$Type.prototype.apply_0, IpfsTransaction$lambda$6$Type, [res]));
  return res;
}

function lambda$0_14(res_0, ipfs_1, owner_2, processor_3, tid_4){
  return $exceptionally($thenCompose(castTo(processor_3(tid_4), 6), makeLambdaFunction(IpfsTransaction$lambda$1$Type.prototype.apply_0, IpfsTransaction$lambda$1$Type, [res_0, ipfs_1, owner_2, tid_4])), makeLambdaFunction(IpfsTransaction$lambda$3$Type.prototype.apply_0, IpfsTransaction$lambda$3$Type, [res_0, ipfs_1, owner_2, tid_4]));
}

function lambda$1_7(res_0, ipfs_1, owner_2, tid_3, v_4){
  return $thenApply(ipfs_1.closeTransaction(owner_2, tid_3), makeLambdaFunction(IpfsTransaction$lambda$2$Type.prototype.apply_0, IpfsTransaction$lambda$2$Type, [res_0, v_4]));
}

function lambda$2_10(res_0, v_1){
  return $clinit_Boolean() , $complete(res_0, v_1)?true:false;
}

function lambda$3_2(res_0, ipfs_1, owner_2, tid_3, t_4){
  $exceptionally($thenApply(ipfs_1.closeTransaction(owner_2, tid_3), makeLambdaFunction(IpfsTransaction$lambda$4$Type.prototype.apply_0, IpfsTransaction$lambda$4$Type, [res_0, t_4])), makeLambdaFunction(IpfsTransaction$lambda$5$Type.prototype.apply_0, IpfsTransaction$lambda$5$Type, [res_0]));
  return $clinit_Boolean() , false;
}

function lambda$4_2(res_0, t_1){
  return $clinit_Boolean() , $completeExceptionally(res_0, t_1)?true:false;
}

function IpfsTransaction$lambda$0$Type(res_0, ipfs_1, owner_2, processor_3){
  this.res_0 = res_0;
  this.ipfs_1 = ipfs_1;
  this.owner_2 = owner_2;
  this.processor_3 = processor_3;
}

defineClass(3239, $wnd.Function, $intern_22, IpfsTransaction$lambda$0$Type);
_.apply_0 = function apply_894(arg0){
  return lambda$0_14(this.res_0, this.ipfs_1, this.owner_2, this.processor_3, arg0);
}
;
function IpfsTransaction$lambda$1$Type(res_0, ipfs_1, owner_2, tid_3){
  this.res_0 = res_0;
  this.ipfs_1 = ipfs_1;
  this.owner_2 = owner_2;
  this.tid_3 = tid_3;
}

defineClass(3241, $wnd.Function, $intern_22, IpfsTransaction$lambda$1$Type);
_.apply_0 = function apply_895(arg0){
  return lambda$1_7(this.res_0, this.ipfs_1, this.owner_2, this.tid_3, arg0);
}
;
function IpfsTransaction$lambda$2$Type(res_0, v_1){
  this.res_0 = res_0;
  this.v_1 = v_1;
}

defineClass(3243, $wnd.Function, $intern_22, IpfsTransaction$lambda$2$Type);
_.apply_0 = function apply_896(arg0){
  return lambda$2_10(this.res_0, this.v_1);
}
;
function IpfsTransaction$lambda$3$Type(res_0, ipfs_1, owner_2, tid_3){
  this.res_0 = res_0;
  this.ipfs_1 = ipfs_1;
  this.owner_2 = owner_2;
  this.tid_3 = tid_3;
}

defineClass(3242, $wnd.Function, $intern_22, IpfsTransaction$lambda$3$Type);
_.apply_0 = function apply_897(arg0){
  return lambda$3_2(this.res_0, this.ipfs_1, this.owner_2, this.tid_3, arg0);
}
;
function IpfsTransaction$lambda$4$Type(res_0, t_1){
  this.res_0 = res_0;
  this.t_1 = t_1;
}

defineClass(3244, $wnd.Function, $intern_22, IpfsTransaction$lambda$4$Type);
_.apply_0 = function apply_898(arg0){
  return lambda$4_2(this.res_0, this.t_1);
}
;
function IpfsTransaction$lambda$5$Type(res_0){
  this.res_0 = res_0;
}

defineClass(3245, $wnd.Function, $intern_22, IpfsTransaction$lambda$5$Type);
_.apply_0 = function apply_899(arg0){
  return $clinit_Boolean() , $completeExceptionally(this.res_0, castTo(arg0, 33))?true:false;
}
;
function IpfsTransaction$lambda$6$Type(res_0){
  this.res_0 = res_0;
}

defineClass(3240, $wnd.Function, $intern_22, IpfsTransaction$lambda$6$Type);
_.apply_0 = function apply_900(arg0){
  return $clinit_Boolean() , $completeExceptionally(this.res_0, castTo(arg0, 33))?true:false;
}
;
function $getEntryData(this$static, username){
  return $thenApply(this$static.cache_0.getEntryData(username), makeLambdaFunction(JSAccountCache$lambda$0$Type.prototype.apply_0, JSAccountCache$lambda$0$Type, []));
}

function $setLoginData(this$static, login){
  var entrySerialized;
  entrySerialized = $toByteArray_2($toCbor_5(login.entryPoints.allEntryPoints.cipherText));
  return this$static.cache_0.setLoginData(login.username, entrySerialized);
}

function JSAccountCache(){
  this.cache_0 = new $wnd.accountCache.NativeJSAccountCache;
  this.cache_0.init();
}

function lambda$0_15(entryPoints_0){
  if (entryPoints_0 == null) {
    throw toJs(new RuntimeException_0('Client Offline!'));
  }
  return $clinit_UserStaticData() , new UserStaticData_0(new PaddedCipherText(fromCbor_9(deserialize(new CborDecoder(new ByteArrayInputStream(entryPoints_0)), entryPoints_0.length))));
}

defineClass(1010, 1, {}, JSAccountCache);
var Lpeergos_shared_storage_JSAccountCache_2_classLit = createForClass('peergos.shared.storage', 'JSAccountCache', 1010);
function JSAccountCache$lambda$0$Type(){
}

defineClass(3214, $wnd.Function, $intern_22, JSAccountCache$lambda$0$Type);
_.apply_0 = function apply_901(arg0){
  return lambda$0_15(arg0);
}
;
function $getUserBats(this$static, username, loginRoot){
  return $thenApply(this$static.cache_0.getUserBats(username), makeLambdaFunction(JSBatCache$lambda$0$Type.prototype.apply_0, JSBatCache$lambda$0$Type, [username, loginRoot]));
}

function $setUserBats(this$static, username, bats, loginRoot){
  return this$static.cache_0.setUserBats(username, $toByteArray_2($toCbor_5(build_2(loginRoot, new BatList(bats)))));
}

function JSBatCache(){
  this.cache_0 = new $wnd.batCache.NativeJSBatCache;
  this.cache_0.init();
}

function lambda$0_16(username_0, loginRoot_1, encryptedBats_2){
  if (encryptedBats_2 == null) {
    throw toJs(new RuntimeException_0('No BAT cached for user: ' + username_0));
  }
  return castTo($decrypt_0(fromCbor_9(deserialize(new CborDecoder(new ByteArrayInputStream(encryptedBats_2)), encryptedBats_2.length)), loginRoot_1, makeLambdaFunction(JSBatCache$0methodref$fromCbor$Type.prototype.apply_0, JSBatCache$0methodref$fromCbor$Type, [])), 370).bats;
}

defineClass(1004, 1, {1199:1}, JSBatCache);
var Lpeergos_shared_storage_JSBatCache_2_classLit = createForClass('peergos.shared.storage', 'JSBatCache', 1004);
function JSBatCache$0methodref$fromCbor$Type(){
}

defineClass(3201, $wnd.Function, $intern_22, JSBatCache$0methodref$fromCbor$Type);
_.apply_0 = function apply_902(arg0){
  return fromCbor_77(castTo(arg0, 7));
}
;
function JSBatCache$lambda$0$Type(username_0, loginRoot_1){
  this.username_0 = username_0;
  this.loginRoot_1 = loginRoot_1;
}

defineClass(3200, $wnd.Function, $intern_22, JSBatCache$lambda$0$Type);
_.apply_0 = function apply_903(arg0){
  return lambda$0_16(this.username_0, this.loginRoot_1, arg0);
}
;
function $get_21(this$static, hash){
  return this$static.cache_0.get(hash);
}

function $put_21(this$static, hash, data_0){
  return this$static.cache_0.put(hash, data_0);
}

function JSBlockCache(maxSizeMiB){
  this.cache_0 = new $wnd.cache.NativeJSCache;
  this.cache_0.init(maxSizeMiB);
}

defineClass(1001, 1, {}, JSBlockCache);
_.clear_1 = function clear_23(){
  return this.cache_0.clear();
}
;
_.get_2 = function get_78(hash){
  return $get_21(this, hash);
}
;
_.put_3 = function put_27(hash, data_0){
  return $put_21(this, hash, data_0);
}
;
var Lpeergos_shared_storage_JSBlockCache_2_classLit = createForClass('peergos.shared.storage', 'JSBlockCache', 1001);
function $getChain_0(this$static, username){
  return $thenApply(this$static.cache_0.getChain(username), makeLambdaFunction(JSPkiCache$lambda$0$Type.prototype.apply_0, JSPkiCache$lambda$0$Type, []));
}

function $getUsername_0(this$static, key){
  return $thenApply(this$static.cache_0.getUsername($create($encode($toByteArray_2(new CborObject$CborMerkleLink(key.target))))), makeLambdaFunction(JSPkiCache$lambda$1$Type.prototype.apply_0, JSPkiCache$lambda$1$Type, []));
}

function $setChain(this$static, username, chain){
  var i, owner, serialisedOwner, serialisedUserPublicKeyLinks;
  serialisedUserPublicKeyLinks = initUnidimensionalArray(Ljava_lang_String_2_classLit, $intern_17, 2, chain.size(), 6, 1);
  for (i = 0; i < chain.size(); i++) {
    serialisedUserPublicKeyLinks[i] = encode_6(($clinit_Multibase$Base() , Base58BTC), $toByteArray_2($toCbor_3(castTo(chain.getAtIndex(i), 72))));
  }
  owner = castTo(chain.getAtIndex(chain.size() - 1), 72).owner;
  serialisedOwner = $create($encode($toByteArray_2(new CborObject$CborMerkleLink(owner.target))));
  return this$static.cache_0.setChain(username, serialisedUserPublicKeyLinks, serialisedOwner);
}

function JSPkiCache(){
  this.cache_0 = new $wnd.pkiCache.NativeJSPkiCache;
  this.cache_0.init();
}

function lambda$0_17(serialisedUserPublicKeyLinks_0){
  var list, userPublicKeyLink, userPublicKeyLink$iterator;
  if (serialisedUserPublicKeyLinks_0.isEmpty())
    throw toJs(new RuntimeException_0('Client Offline!'));
  list = new ArrayList;
  for (userPublicKeyLink$iterator = serialisedUserPublicKeyLinks_0.iterator(); userPublicKeyLink$iterator.hasNext_0();) {
    userPublicKeyLink = castToString(userPublicKeyLink$iterator.next_1());
    $add(list, fromCbor_4(fromByteArray(decode_8(userPublicKeyLink))));
  }
  return list;
}

function lambda$1_8(username_0){
  if (username_0.length == 0) {
    throw toJs(new RuntimeException_0('Client Offline!'));
  }
  return username_0;
}

defineClass(1007, 1, {}, JSPkiCache);
var Lpeergos_shared_storage_JSPkiCache_2_classLit = createForClass('peergos.shared.storage', 'JSPkiCache', 1007);
function JSPkiCache$lambda$0$Type(){
}

defineClass(3207, $wnd.Function, $intern_22, JSPkiCache$lambda$0$Type);
_.apply_0 = function apply_904(arg0){
  return lambda$0_17(arg0);
}
;
function JSPkiCache$lambda$1$Type(){
}

defineClass(3208, $wnd.Function, $intern_22, JSPkiCache$lambda$1$Type);
_.apply_0 = function apply_905(arg0){
  return lambda$1_8(arg0);
}
;
function $get_22(this$static, owner, writer){
  return this$static.cache_0.get(owner, writer);
}

function $lambda$0_23(this$static, signedUpdate_1, owner_2, writer_3, current_3){
  return $thenCompose(this$static.storage.getSigningKey(owner_2, writer_3), makeLambdaFunction(JSPointerCache$lambda$1$Type.prototype.apply_0, JSPointerCache$lambda$1$Type, [this$static, current_3, signedUpdate_1, owner_2, writer_3]));
}

function $lambda$1_19(this$static, current_1, signedUpdate_2, owner_3, writer_4, signerOpt_4){
  if (signerOpt_4.ref == null)
    throw toJs(new IllegalStateException_0("Couldn't retrieve signing key!"));
  if ($doUpdate(current_1, signedUpdate_2, (checkCriticalElement(signerOpt_4.ref != null) , castTo(signerOpt_4.ref, 233))))
    return this$static.cache_0.put(owner_3, writer_4, signedUpdate_2);
  return new CompletableFuture_0(($clinit_Boolean() , false));
}

function $put_22(this$static, owner, writer, signedUpdate){
  return $thenCompose(this$static.cache_0.get(owner, writer), makeLambdaFunction(JSPointerCache$lambda$0$Type.prototype.apply_0, JSPointerCache$lambda$0$Type, [this$static, signedUpdate, owner, writer]));
}

function JSPointerCache(storage){
  this.cache_0 = new $wnd.pointerCache.NativeJSPointerCache;
  this.cache_0.init(2000);
  this.storage = storage;
}

defineClass(1003, 1, {}, JSPointerCache);
var Lpeergos_shared_storage_JSPointerCache_2_classLit = createForClass('peergos.shared.storage', 'JSPointerCache', 1003);
function JSPointerCache$lambda$0$Type($$outer_0, signedUpdate_1, owner_2, writer_3){
  this.$$outer_0 = $$outer_0;
  this.signedUpdate_1 = signedUpdate_1;
  this.owner_2 = owner_2;
  this.writer_3 = writer_3;
}

defineClass(3194, $wnd.Function, $intern_22, JSPointerCache$lambda$0$Type);
_.apply_0 = function apply_906(arg0){
  return $lambda$0_23(this.$$outer_0, this.signedUpdate_1, this.owner_2, this.writer_3, arg0);
}
;
function JSPointerCache$lambda$1$Type($$outer_0, current_1, signedUpdate_2, owner_3, writer_4){
  this.$$outer_0 = $$outer_0;
  this.current_1 = current_1;
  this.signedUpdate_2 = signedUpdate_2;
  this.owner_3 = owner_3;
  this.writer_4 = writer_4;
}

defineClass(3195, $wnd.Function, $intern_22, JSPointerCache$lambda$1$Type);
_.apply_0 = function apply_907(arg0){
  return $lambda$1_19(this.$$outer_0, this.current_1, this.signedUpdate_2, this.owner_3, this.writer_4, arg0);
}
;
function $get_23(this$static, hash){
  return $thenApply($thenCompose(this$static.cache_0.get_2(hash), makeLambdaFunction(LocalOnlyStorage$lambda$0$Type.prototype.apply_0, LocalOnlyStorage$lambda$0$Type, [this$static, hash])), makeLambdaFunction(LocalOnlyStorage$lambda$5$Type.prototype.apply_0, LocalOnlyStorage$lambda$5$Type, []));
}

function $lambda$0_24(this$static, hash_1, opt_1){
  if (opt_1.ref != null)
    return new CompletableFuture_0(opt_1);
  return $thenCompose($thenCompose(castTo(this$static.bulkFetcher.get_0(), 6), makeLambdaFunction(LocalOnlyStorage$lambda$1$Type.prototype.apply_0, LocalOnlyStorage$lambda$1$Type, [this$static])), makeLambdaFunction(LocalOnlyStorage$lambda$4$Type.prototype.apply_0, LocalOnlyStorage$lambda$4$Type, [this$static, hash_1]));
}

function $lambda$1_20(this$static, blocks_0){
  return combineAll(castTo($collect_0($map_0(blocks_0.stream(), makeLambdaFunction(LocalOnlyStorage$lambda$2$Type.prototype.apply_0, LocalOnlyStorage$lambda$2$Type, [this$static])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 54));
}

function $lambda$2_15(this$static, data_0){
  return $thenApply($sha256(this$static.h_0, data_0), makeLambdaFunction(LocalOnlyStorage$lambda$3$Type.prototype.apply_0, LocalOnlyStorage$lambda$3$Type, [this$static, data_0]));
}

function $lambda$3_15(this$static, data_1, hashb_1){
  return this$static.cache_0.put_3(new Cid(1, ($clinit_Cid$Codec() , DagCbor), ($clinit_Multihash$Type() , sha2_256), hashb_1), data_1);
}

function $lambda$4_10(this$static, hash_1){
  return this$static.cache_0.get_2(hash_1);
}

function $put_23(){
  throw toJs(new IllegalStateException_0('Unimplemented!'));
}

function LocalOnlyStorage(cache, bulkFetcher, h){
  this.cache_0 = cache;
  this.bulkFetcher = bulkFetcher;
  this.h_0 = h;
}

defineClass(524, 1, {}, LocalOnlyStorage);
_.getChampLookup_0 = function getChampLookup_13(owner, root, champKey, bat, committedRoot, hasher){
  var cache;
  return cache = new CachingStorage(this) , $thenApply($thenApply($thenApply($thenCompose(create_4(owner, root, makeLambdaFunction(ContentAddressedStorage$lambda$3$Type.prototype.apply_0, ContentAddressedStorage$lambda$3$Type, []), cache, hasher, makeLambdaFunction(ContentAddressedStorage$lambda$4$Type.prototype.apply_0, ContentAddressedStorage$lambda$4$Type, [])), makeLambdaFunction(ContentAddressedStorage$lambda$5$Type.prototype.apply_0, ContentAddressedStorage$lambda$5$Type, [champKey])), makeLambdaFunction(ContentAddressedStorage$lambda$6$Type.prototype.apply_0, ContentAddressedStorage$lambda$6$Type, [])), makeLambdaFunction(ContentAddressedStorage$lambda$9$Type.prototype.apply_0, ContentAddressedStorage$lambda$9$Type, [cache, owner, bat])), makeLambdaFunction(ContentAddressedStorage$lambda$10$Type.prototype.apply_0, ContentAddressedStorage$lambda$10$Type, [cache]));
}
;
_.getSigningKey = function getSigningKey_4(owner, hash){
  var lastArg;
  return $thenApply(hash.type == ($clinit_Multihash$Type() , id_3)?new CompletableFuture_0(($clinit_Optional() , new Optional(checkCriticalNotNull(fromByteArray(copyOfRange(hash.hash_0, 0, hash.hash_0.length)))))):$get_23(this, (lastArg = hash.target , $clinit_Optional() , $clinit_Optional() , EMPTY , lastArg)), makeLambdaFunction(ContentAddressedStorage$lambda$13$Type.prototype.apply_0, ContentAddressedStorage$lambda$13$Type, []));
}
;
_.put_0 = function put_28(owner, writer, block, hasher, tid){
  return $thenCompose(hasher.scriptJS.sha256(block), makeLambdaFunction(ContentAddressedStorage$lambda$0$Type.prototype.apply_0, ContentAddressedStorage$lambda$0$Type, [this, owner, writer, block, tid]));
}
;
_.put_2 = function put_30(owner, writer, signature, block, tid){
  return ($clinit_Collections() , new Collections$SingletonList(signature) , $clinit_Collections() , new Collections$SingletonList(block) , $put_23()).$_nullMethod();
}
;
_.putBoxingKey = function putBoxingKey_4(owner, signature, key, tid){
  return $putBoxingKey(this, owner, signature, key, tid);
}
;
_.putSigningKey = function putSigningKey_9(signature, owner, newKey, tid){
  return new CompletableFuture_0(new PublicKeyHash(new Cid(1, ($clinit_Cid$Codec() , DagCbor), ($clinit_Multihash$Type() , id_3), $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborLong(($clinit_PublicSigningKey$Type() , Ed25519).value), new CborObject$CborByteArray(newKey.publicKey)])))))));
}
;
_.putSigningKey_0 = function putSigningKey_10(signature, owner, writer, newKey, tid){
  return new CompletableFuture_0(new PublicKeyHash(new Cid(1, ($clinit_Cid$Codec() , DagCbor), ($clinit_Multihash$Type() , id_3), $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborLong(($clinit_PublicSigningKey$Type() , Ed25519).value), new CborObject$CborByteArray(newKey.publicKey)])))))));
}
;
_.blockStoreProperties = function blockStoreProperties_7(){
  return new CompletableFuture_0(new BlockStoreProperties(false, false, false, ($clinit_Optional() , $clinit_Optional() , EMPTY), (null , EMPTY)));
}
;
_.clearBlockCache = function clearBlockCache_6(){
  this.cache_0.clear_1();
}
;
_.closeTransaction = function closeTransaction_5(owner, tid){
  throw toJs(new IllegalStateException_0('Unimplemented!'));
}
;
_.downloadFragments = function downloadFragments_6(owner, hashes, bats, h, monitor, spaceIncreaseFactor){
  throw toJs(new IllegalStateException_0('Unimplemented!'));
}
;
_.get_1 = function get_79(owner, hash, bat){
  return $get_23(this, hash);
}
;
_.getChampLookup = function getChampLookup_12(owner, root, champKey, bat, committedRoot){
  throw toJs(new IllegalStateException_0('Unimplemented!'));
}
;
_.getRaw = function getRaw_7(owner, hash, bat){
  return $thenCompose(this.cache_0.get_2(hash), makeLambdaFunction(LocalOnlyStorage$lambda$0$Type.prototype.apply_0, LocalOnlyStorage$lambda$0$Type, [this, hash]));
}
;
_.id_1 = function id_10(){
  return new CompletableFuture_0(new Cid(1, ($clinit_Cid$Codec() , LibP2pKey), ($clinit_Multihash$Type() , sha2_256), initUnidimensionalArray(B_classLit, $intern_28, 8, 32, 15, 1)));
}
;
_.put_1 = function put_29(owner, writer, signedHashes, blocks, tid){
  return $put_23();
}
;
_.putRaw = function putRaw_7(owner, writer, signatures, blocks, tid, progressCounter){
  throw toJs(new IllegalStateException_0('Unimplemented!'));
}
;
_.startTransaction = function startTransaction_5(owner){
  throw toJs(new IllegalStateException_0('Unimplemented!'));
}
;
var Lpeergos_shared_storage_LocalOnlyStorage_2_classLit = createForClass('peergos.shared.storage', 'LocalOnlyStorage', 524);
function LocalOnlyStorage$0methodref$fromByteArray$Type(){
}

defineClass(3443, $wnd.Function, $intern_22, LocalOnlyStorage$0methodref$fromByteArray$Type);
_.apply_0 = function apply_908(arg0){
  return fromByteArray(castTo(arg0, 11));
}
;
function LocalOnlyStorage$lambda$0$Type($$outer_0, hash_1){
  this.$$outer_0 = $$outer_0;
  this.hash_1 = hash_1;
}

defineClass(1335, $wnd.Function, $intern_22, LocalOnlyStorage$lambda$0$Type);
_.apply_0 = function apply_909(arg0){
  return $lambda$0_24(this.$$outer_0, this.hash_1, arg0);
}
;
function LocalOnlyStorage$lambda$1$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3439, $wnd.Function, $intern_22, LocalOnlyStorage$lambda$1$Type);
_.apply_0 = function apply_910(arg0){
  return $lambda$1_20(this.$$outer_0, arg0);
}
;
function LocalOnlyStorage$lambda$2$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3441, $wnd.Function, $intern_22, LocalOnlyStorage$lambda$2$Type);
_.apply_0 = function apply_911(arg0){
  return $lambda$2_15(this.$$outer_0, arg0);
}
;
function LocalOnlyStorage$lambda$3$Type($$outer_0, data_1){
  this.$$outer_0 = $$outer_0;
  this.data_1 = data_1;
}

defineClass(3442, $wnd.Function, $intern_22, LocalOnlyStorage$lambda$3$Type);
_.apply_0 = function apply_912(arg0){
  return $lambda$3_15(this.$$outer_0, this.data_1, arg0);
}
;
function LocalOnlyStorage$lambda$4$Type($$outer_0, hash_1){
  this.$$outer_0 = $$outer_0;
  this.hash_1 = hash_1;
}

defineClass(3440, $wnd.Function, $intern_22, LocalOnlyStorage$lambda$4$Type);
_.apply_0 = function apply_913(arg0){
  return $lambda$4_10(this.$$outer_0, this.hash_1);
}
;
function LocalOnlyStorage$lambda$5$Type(){
}

defineClass(3438, $wnd.Function, $intern_22, LocalOnlyStorage$lambda$5$Type);
_.apply_0 = function apply_914(arg0){
  return $map(castTo(arg0, 12), makeLambdaFunction(LocalOnlyStorage$0methodref$fromByteArray$Type.prototype.apply_0, LocalOnlyStorage$0methodref$fromByteArray$Type, []));
}
;
function $toCbor_60(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'h', new CborObject$CborByteArray(this$static.hash_0.toBytes()));
  $ifPresent(this$static.bat, new MirrorCap$lambda$0$Type(state));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function MirrorCap(hash, bat){
  this.hash_0 = hash;
  this.bat = bat;
}

defineClass(281, 1, {7:1, 281:1}, MirrorCap);
_.serialize = function serialize_88(){
  return $toByteArray_2($toCbor_60(this));
}
;
_.toCbor = function toCbor_86(){
  return $toCbor_60(this);
}
;
var Lpeergos_shared_storage_MirrorCap_2_classLit = createForClass('peergos.shared.storage', 'MirrorCap', 281);
function MirrorCap$lambda$0$Type(state_0){
  this.state_0 = state_0;
}

defineClass(1102, 1, $intern_32, MirrorCap$lambda$0$Type);
_.accept = function accept_96(arg0){
  $put_6(this.state_0, 'b', castTo(arg0, 112));
}
;
_.andThen = function andThen_50(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_storage_MirrorCap$lambda$0$Type_2_classLit = createForClass('peergos.shared.storage', 'MirrorCap/lambda$0$Type', 1102);
function $toCbor_61(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'freeQuota', new CborObject$CborLong(this$static.freeQuota));
  $put_6(state, 'desiredQuota', new CborObject$CborLong(this$static.desiredQuota));
  $ifPresent(this$static.paymentServerUrl, new PaymentProperties$lambda$0$Type(state));
  $ifPresent(this$static.error, new PaymentProperties$lambda$1$Type(state));
  this$static.clientSecret.ref != null && $put_6(state, 'client_secret', new CborObject$CborString(castToString($get_6(this$static.clientSecret))));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function PaymentProperties(paymentServerUrl, error, clientSecret, freeQuota, desiredQuota){
  this.paymentServerUrl = paymentServerUrl;
  this.error = error;
  this.clientSecret = clientSecret;
  this.freeQuota = freeQuota;
  this.desiredQuota = desiredQuota;
}

function fromCbor_71(cbor){
  var client_secret, desiredQuota, err, freeQuota, m, url_0;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor for FileProperties! ' + cbor));
  m = castTo(cbor, 18);
  url_0 = $getOptional(m, 'url', makeLambdaFunction(PaymentProperties$lambda$2$Type.prototype.apply_0, PaymentProperties$lambda$2$Type, []));
  err = $getOptional(m, 'err', makeLambdaFunction(PaymentProperties$lambda$3$Type.prototype.apply_0, PaymentProperties$lambda$3$Type, []));
  client_secret = $getOptional(m, 'client_secret', makeLambdaFunction(PaymentProperties$lambda$4$Type.prototype.apply_0, PaymentProperties$lambda$4$Type, []));
  freeQuota = castTo(castTo($get_0(m.values_0, new CborObject$CborString('freeQuota')), 7), 29).value_0;
  desiredQuota = castTo(castTo($get_0(m.values_0, new CborObject$CborString('desiredQuota')), 7), 29).value_0;
  return new PaymentProperties(url_0, err, client_secret, freeQuota, desiredQuota);
}

defineClass(398, 1, {7:1, 398:1}, PaymentProperties);
_.serialize = function serialize_89(){
  return $toByteArray_2($toCbor_61(this));
}
;
_.desiredMb = function desiredMb(){
  return toInt_0(div(this.desiredQuota, $intern_50));
}
;
_.freeMb = function freeMb(){
  return toInt_0(div(this.freeQuota, $intern_50));
}
;
_.getClientSecret = function getClientSecret(){
  return castToString($orElse(this.clientSecret, ''));
}
;
_.getError = function getError(){
  return castToString($get_6(this.error));
}
;
_.getUrl = function getUrl(){
  return castToString($get_6(this.paymentServerUrl));
}
;
_.hasError = function hasError(){
  return this.error.ref != null;
}
;
_.isPaid = function isPaid(){
  return this.paymentServerUrl.ref != null;
}
;
_.toCbor = function toCbor_87(){
  return $toCbor_61(this);
}
;
_.desiredQuota = 0;
_.freeQuota = 0;
var Lpeergos_shared_storage_PaymentProperties_2_classLit = createForClass('peergos.shared.storage', 'PaymentProperties', 398);
function PaymentProperties$lambda$0$Type(state_0){
  this.state_0 = state_0;
}

defineClass(840, 1, $intern_32, PaymentProperties$lambda$0$Type);
_.accept = function accept_97(arg0){
  $put_6(this.state_0, 'url', new CborObject$CborString(castToString(arg0)));
}
;
_.andThen = function andThen_51(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_storage_PaymentProperties$lambda$0$Type_2_classLit = createForClass('peergos.shared.storage', 'PaymentProperties/lambda$0$Type', 840);
function PaymentProperties$lambda$1$Type(state_0){
  this.state_0 = state_0;
}

defineClass(841, 1, $intern_32, PaymentProperties$lambda$1$Type);
_.accept = function accept_98(arg0){
  $put_6(this.state_0, 'err', new CborObject$CborString(castToString(arg0)));
}
;
_.andThen = function andThen_52(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_storage_PaymentProperties$lambda$1$Type_2_classLit = createForClass('peergos.shared.storage', 'PaymentProperties/lambda$1$Type', 841);
function PaymentProperties$lambda$2$Type(){
}

defineClass(2556, $wnd.Function, $intern_22, PaymentProperties$lambda$2$Type);
_.apply_0 = function apply_915(arg0){
  return castTo(castTo(arg0, 7), 13).value_0;
}
;
function PaymentProperties$lambda$3$Type(){
}

defineClass(2557, $wnd.Function, $intern_22, PaymentProperties$lambda$3$Type);
_.apply_0 = function apply_916(arg0){
  return castTo(castTo(arg0, 7), 13).value_0;
}
;
function PaymentProperties$lambda$4$Type(){
}

defineClass(2558, $wnd.Function, $intern_22, PaymentProperties$lambda$4$Type);
_.apply_0 = function apply_917(arg0){
  return castTo(castTo(arg0, 7), 13).value_0;
}
;
function $toCbor_62(this$static){
  var e, e$iterator, headers, props, transformed, transformed0;
  props = new TreeMap;
  $put_6(props, 'b', new CborObject$CborString(this$static.base));
  headers = new TreeMap;
  for (e$iterator = this$static.fields.entrySet_0().iterator(); e$iterator.hasNext_0();) {
    e = castTo(e$iterator.next_1(), 40);
    $put_6(headers, castToString(e.getKey()), new CborObject$CborString(castToString(e.getValue())));
  }
  $put_6(props, 'h', (transformed0 = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(headers), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed0)));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(props), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function PresignedUrl(base, fields){
  this.base = base;
  this.fields = fields;
}

function fromCbor_72(cbor){
  var base, headers, map_0;
  map_0 = castTo(cbor, 18);
  base = castTo(castTo($get_0(map_0.values_0, new CborObject$CborString('b')), 7), 13).value_0;
  headers = $toMap(castTo(castTo($get_0(map_0.values_0, new CborObject$CborString('h')), 7), 18), makeLambdaFunction(PresignedUrl$lambda$0$Type.prototype.apply_0, PresignedUrl$lambda$0$Type, []), makeLambdaFunction(PresignedUrl$lambda$1$Type.prototype.apply_0, PresignedUrl$lambda$1$Type, []));
  return new PresignedUrl(base, headers);
}

defineClass(231, 1, {7:1, 231:1}, PresignedUrl);
_.serialize = function serialize_90(){
  return $toByteArray_2($toCbor_62(this));
}
;
_.toCbor = function toCbor_88(){
  return $toCbor_62(this);
}
;
var Lpeergos_shared_storage_PresignedUrl_2_classLit = createForClass('peergos.shared.storage', 'PresignedUrl', 231);
function PresignedUrl$lambda$0$Type(){
}

defineClass(3520, $wnd.Function, $intern_22, PresignedUrl$lambda$0$Type);
_.apply_0 = function apply_918(arg0){
  return castTo(castTo(arg0, 7), 13).value_0;
}
;
function PresignedUrl$lambda$1$Type(){
}

defineClass(3521, $wnd.Function, $intern_22, PresignedUrl$lambda$1$Type);
_.apply_0 = function apply_919(arg0){
  return castTo(castTo(arg0, 7), 13).value_0;
}
;
function $lambda$0_25(this$static, targetUser_1, signedTime_2){
  return $getUsage_0(this$static.local, targetUser_1, signedTime_2);
}

function $lambda$1_21(this$static, targetUser_1, signedTime_2, targetServer_2){
  return $getUsage_1(this$static.p2p, targetServer_2, targetUser_1, signedTime_2);
}

function $lambda$2_16(this$static, owner_1, newClientSecret_2, signedTime_3){
  return $getPaymentProperties_0(this$static.local, owner_1, newClientSecret_2, signedTime_3);
}

function $lambda$3_16(this$static, owner_1, newClientSecret_2, signedTime_3, targetServer_3){
  return $getPaymentProperties_1(this$static.p2p, targetServer_3, owner_1, newClientSecret_2, signedTime_3);
}

function $lambda$4_11(this$static, owner_1, signedTime_2){
  return $getQuota_0(this$static.local, owner_1, signedTime_2);
}

function $lambda$5_11(this$static, owner_1, signedTime_2, targetServer_2){
  return $getQuota_1(this$static.p2p, targetServer_2, owner_1, signedTime_2);
}

function $lambda$6_10(this$static, owner_1, signedRequest_2){
  return $requestQuota(this$static.local, owner_1, signedRequest_2);
}

function $lambda$7_5(this$static, owner_1, signedRequest_2, targetServer_2){
  return $requestSpace_0(this$static.p2p, targetServer_2, owner_1, signedRequest_2);
}

function ProxyingSpaceUsage(core, local, p2p){
  this.core = core;
  this.local = local;
  this.p2p = p2p;
}

defineClass(1017, 1, {}, ProxyingSpaceUsage);
_.requestQuota = function requestQuota_1(username, identity, space){
  return $requestQuota_0(this, username, identity, space);
}
;
_.getPaymentProperties_0 = function getPaymentProperties_0(owner, newClientSecret, signedTime){
  var lastArg;
  return redirectCall(this.core, (lastArg = owner , new ProxyingSpaceUsage$lambda$2$Type(this, owner, newClientSecret, signedTime) , makeLambdaFunction(ProxyingSpaceUsage$lambda$3$Type.prototype.apply_0, ProxyingSpaceUsage$lambda$3$Type, [this, owner, newClientSecret, signedTime]) , lastArg));
}
;
_.getQuota_0 = function getQuota_0(owner, signedTime){
  var lastArg;
  return redirectCall(this.core, (lastArg = owner , new ProxyingSpaceUsage$lambda$4$Type(this, owner, signedTime) , makeLambdaFunction(ProxyingSpaceUsage$lambda$5$Type.prototype.apply_0, ProxyingSpaceUsage$lambda$5$Type, [this, owner, signedTime]) , lastArg));
}
;
_.getUsage = function getUsage_0(targetUser, signedTime){
  var lastArg;
  return redirectCall(this.core, (lastArg = targetUser , new ProxyingSpaceUsage$lambda$0$Type(this, targetUser, signedTime) , makeLambdaFunction(ProxyingSpaceUsage$lambda$1$Type.prototype.apply_0, ProxyingSpaceUsage$lambda$1$Type, [this, targetUser, signedTime]) , lastArg));
}
;
_.requestQuota_0 = function requestQuota_2(owner, signedRequest){
  var lastArg;
  return redirectCall(this.core, (lastArg = owner , new ProxyingSpaceUsage$lambda$6$Type(this, owner, signedRequest) , makeLambdaFunction(ProxyingSpaceUsage$lambda$7$Type.prototype.apply_0, ProxyingSpaceUsage$lambda$7$Type, [this, owner, signedRequest]) , lastArg));
}
;
var Lpeergos_shared_storage_ProxyingSpaceUsage_2_classLit = createForClass('peergos.shared.storage', 'ProxyingSpaceUsage', 1017);
function ProxyingSpaceUsage$lambda$0$Type($$outer_0, targetUser_1, signedTime_2){
  this.$$outer_0 = $$outer_0;
  this.targetUser_1 = targetUser_1;
  this.signedTime_2 = signedTime_2;
}

defineClass(1018, 1, {}, ProxyingSpaceUsage$lambda$0$Type);
_.get_0 = function get_80(){
  return $lambda$0_25(this.$$outer_0, this.targetUser_1, this.signedTime_2);
}
;
var Lpeergos_shared_storage_ProxyingSpaceUsage$lambda$0$Type_2_classLit = createForClass('peergos.shared.storage', 'ProxyingSpaceUsage/lambda$0$Type', 1018);
function ProxyingSpaceUsage$lambda$1$Type($$outer_0, targetUser_1, signedTime_2){
  this.$$outer_0 = $$outer_0;
  this.targetUser_1 = targetUser_1;
  this.signedTime_2 = signedTime_2;
}

defineClass(3227, $wnd.Function, $intern_22, ProxyingSpaceUsage$lambda$1$Type);
_.apply_0 = function apply_920(arg0){
  return $lambda$1_21(this.$$outer_0, this.targetUser_1, this.signedTime_2, arg0);
}
;
function ProxyingSpaceUsage$lambda$2$Type($$outer_0, owner_1, newClientSecret_2, signedTime_3){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.newClientSecret_2 = newClientSecret_2;
  this.signedTime_3 = signedTime_3;
}

defineClass(1019, 1, {}, ProxyingSpaceUsage$lambda$2$Type);
_.get_0 = function get_81(){
  return $lambda$2_16(this.$$outer_0, this.owner_1, this.newClientSecret_2, this.signedTime_3);
}
;
_.newClientSecret_2 = false;
var Lpeergos_shared_storage_ProxyingSpaceUsage$lambda$2$Type_2_classLit = createForClass('peergos.shared.storage', 'ProxyingSpaceUsage/lambda$2$Type', 1019);
function ProxyingSpaceUsage$lambda$3$Type($$outer_0, owner_1, newClientSecret_2, signedTime_3){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.newClientSecret_2 = newClientSecret_2;
  this.signedTime_3 = signedTime_3;
}

defineClass(3228, $wnd.Function, $intern_22, ProxyingSpaceUsage$lambda$3$Type);
_.apply_0 = function apply_921(arg0){
  return $lambda$3_16(this.$$outer_0, this.owner_1, this.newClientSecret_2, this.signedTime_3, arg0);
}
;
_.newClientSecret_2 = false;
function ProxyingSpaceUsage$lambda$4$Type($$outer_0, owner_1, signedTime_2){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.signedTime_2 = signedTime_2;
}

defineClass(1020, 1, {}, ProxyingSpaceUsage$lambda$4$Type);
_.get_0 = function get_82(){
  return $lambda$4_11(this.$$outer_0, this.owner_1, this.signedTime_2);
}
;
var Lpeergos_shared_storage_ProxyingSpaceUsage$lambda$4$Type_2_classLit = createForClass('peergos.shared.storage', 'ProxyingSpaceUsage/lambda$4$Type', 1020);
function ProxyingSpaceUsage$lambda$5$Type($$outer_0, owner_1, signedTime_2){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.signedTime_2 = signedTime_2;
}

defineClass(3229, $wnd.Function, $intern_22, ProxyingSpaceUsage$lambda$5$Type);
_.apply_0 = function apply_922(arg0){
  return $lambda$5_11(this.$$outer_0, this.owner_1, this.signedTime_2, arg0);
}
;
function ProxyingSpaceUsage$lambda$6$Type($$outer_0, owner_1, signedRequest_2){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.signedRequest_2 = signedRequest_2;
}

defineClass(1021, 1, {}, ProxyingSpaceUsage$lambda$6$Type);
_.get_0 = function get_83(){
  return $lambda$6_10(this.$$outer_0, this.owner_1, this.signedRequest_2);
}
;
var Lpeergos_shared_storage_ProxyingSpaceUsage$lambda$6$Type_2_classLit = createForClass('peergos.shared.storage', 'ProxyingSpaceUsage/lambda$6$Type', 1021);
function ProxyingSpaceUsage$lambda$7$Type($$outer_0, owner_1, signedRequest_2){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.signedRequest_2 = signedRequest_2;
}

defineClass(3230, $wnd.Function, $intern_22, ProxyingSpaceUsage$lambda$7$Type);
_.apply_0 = function apply_923(arg0){
  return $lambda$7_5(this.$$outer_0, this.owner_1, this.signedRequest_2, arg0);
}
;
function $toCbor_63(this$static){
  var props, transformed;
  props = new TreeMap;
  $put_6(props, 'u', new CborObject$CborString(this$static.username));
  $put_6(props, 'r', new CborObject$CborByteArray(this$static.signedRequest));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(props), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function QuotaControl$LabelledSignedSpaceRequest(username, signedRequest){
  this.username = username;
  this.signedRequest = signedRequest;
}

function fromCbor_73(cbor){
  var map_0, req, username;
  map_0 = castTo(cbor, 18);
  username = castTo(castTo($get_0(map_0.values_0, new CborObject$CborString('u')), 7), 13).value_0;
  req = castTo(castTo($get_0(map_0.values_0, new CborObject$CborString('r')), 7), 27).value_0;
  return new QuotaControl$LabelledSignedSpaceRequest(username, req);
}

defineClass(611, 1, $intern_67, QuotaControl$LabelledSignedSpaceRequest);
_.serialize = function serialize_91(){
  return $toByteArray_2($toCbor_63(this));
}
;
_.toCbor = function toCbor_89(){
  return $toCbor_63(this);
}
;
var Lpeergos_shared_storage_QuotaControl$LabelledSignedSpaceRequest_2_classLit = createForClass('peergos.shared.storage', 'QuotaControl/LabelledSignedSpaceRequest', 611);
function $toCbor_64(this$static){
  var props, transformed;
  props = new TreeMap;
  $put_6(props, 'u', new CborObject$CborString(this$static.username));
  $put_6(props, 's', new CborObject$CborLong(this$static.bytes));
  $put_6(props, 't', new CborObject$CborLong(this$static.utcMillis));
  this$static.paymentProof.ref != null && $put_6(props, 'p', new CborObject$CborByteArray(castTo($get_6(this$static.paymentProof), 11)));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(props), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function $toString_9(this$static){
  return this$static.username + ' ' + toString_4(div(div(this$static.bytes, $intern_65), $intern_65)) + ' MiB ' + ofEpochSecond(div(this$static.utcMillis, $intern_49), 0, ($clinit_ZoneOffset() , UTC_0));
}

function QuotaControl$SpaceRequest(username, bytes, utcMillis, paymentProof){
  if (paymentProof.ref != null && (checkCriticalElement(paymentProof.ref != null) , castTo(paymentProof.ref, 11)).length > $intern_15)
    throw toJs(new IllegalStateException_0('Payment proof too big!'));
  this.username = username;
  this.bytes = bytes;
  this.utcMillis = utcMillis;
  this.paymentProof = paymentProof;
}

function fromCbor_74(cbor){
  var bytes, map_0, proof, time, username;
  map_0 = castTo(cbor, 18);
  username = castTo(castTo($get_0(map_0.values_0, new CborObject$CborString('u')), 7), 13).value_0;
  bytes = castTo(castTo($get_0(map_0.values_0, new CborObject$CborString('s')), 7), 29).value_0;
  time = castTo(castTo($get_0(map_0.values_0, new CborObject$CborString('t')), 7), 29).value_0;
  proof = $map(ofNullable(castTo(castTo($get_0(map_0.values_0, new CborObject$CborString('p')), 7), 27)), makeLambdaFunction(CborObject$CborMap$lambda$5$Type.prototype.apply_0, CborObject$CborMap$lambda$5$Type, []));
  return new QuotaControl$SpaceRequest(username, bytes, time, proof);
}

defineClass(394, 1, $intern_67, QuotaControl$SpaceRequest);
_.serialize = function serialize_92(){
  return $toByteArray_2($toCbor_64(this));
}
;
_.toCbor = function toCbor_90(){
  return $toCbor_64(this);
}
;
_.toString_0 = function toString_76(){
  return $toString_9(this);
}
;
_.bytes = 0;
_.utcMillis = 0;
var Lpeergos_shared_storage_QuotaControl$SpaceRequest_2_classLit = createForClass('peergos.shared.storage', 'QuotaControl/SpaceRequest', 394);
function RateLimitException(){
  RuntimeException.call(this);
}

defineClass(478, 35, {4:1, 51:1, 35:1, 33:1, 478:1}, RateLimitException);
var Lpeergos_shared_storage_RateLimitException_2_classLit = createForClass('peergos.shared.storage', 'RateLimitException', 478);
function $clinit_RetryStorage(){
  $clinit_RetryStorage = emptyMethod;
  random_11 = new Random_0;
  executor = new ScheduledThreadPoolExecutor;
}

function $blockStoreProperties_0(this$static){
  return $runWithRetry(this$static, new RetryStorage$lambda$6$Type(this$static));
}

function $get_24(this$static, owner, hash, bat){
  return $runWithRetry(this$static, new RetryStorage$lambda$11$Type(this$static, owner, hash, bat));
}

function $getChampLookup_4(this$static, owner, root, champKey, bat, committedRoot){
  return $runWithRetry(this$static, new RetryStorage$lambda$14$Type(this$static, owner, root, champKey, bat, committedRoot));
}

function $getRaw_2(this$static, owner, hash, bat){
  return $runWithRetry(this$static, new RetryStorage$lambda$13$Type(this$static, owner, hash, bat));
}

function $lambda$10_4(this$static, owner_1, writer_2, signatures_3, blocks_4, tid_5){
  return this$static.target.put_1(owner_1, writer_2, signatures_3, blocks_4, tid_5);
}

function $lambda$11_3(this$static, owner_1, hash_2, bat_3){
  return this$static.target.get_1(owner_1, hash_2, bat_3);
}

function $lambda$12_5(this$static, owner_1, writer_2, signatures_3, blocks_4, tid_5, progressCounter_6){
  return this$static.target.putRaw(owner_1, writer_2, signatures_3, blocks_4, tid_5, progressCounter_6);
}

function $lambda$13_7(this$static, owner_1, hash_2, bat_3){
  return this$static.target.getRaw(owner_1, hash_2, bat_3);
}

function $lambda$14_3(this$static, owner_1, root_2, champKey_3, bat_4, committedRoot_5){
  return this$static.target.getChampLookup(owner_1, root_2, champKey_3, bat_4, committedRoot_5);
}

function $lambda$16_8(this$static, owner_1, hashes_2, bats_3, h_4, monitor_5, spaceIncreaseFactor_6){
  return this$static.target.downloadFragments(owner_1, hashes_2, bats_3, h_4, monitor_5, spaceIncreaseFactor_6);
}

function $lambda$8_7(this$static, owner_1){
  return this$static.target.startTransaction(owner_1);
}

function $lambda$9_10(this$static, owner_1, tid_2){
  return this$static.target.closeTransaction(owner_1, tid_2);
}

function $put_24(this$static, owner, writer, signatures, blocks, tid){
  return $runWithRetry(this$static, new RetryStorage$lambda$10$Type(this$static, owner, writer, signatures, blocks, tid));
}

function $putRaw_0(this$static, owner, writer, signatures, blocks, tid, progressCounter){
  return $runWithRetry(this$static, new RetryStorage$lambda$12$Type(this$static, owner, writer, signatures, blocks, tid, progressCounter));
}

function $runWithRetry(this$static, f){
  return recurse_3(this$static.maxAttempts, this$static.maxAttempts, f);
}

function RetryStorage(target){
  $clinit_RetryStorage();
  this.target = target;
  this.maxAttempts = 3;
}

function lambda$2_11(retriesLeft_0, maxAttempts_1, f_2, res_3, e_4){
  $clinit_RetryStorage();
  retriesLeft_0 == 1?$completeExceptionally(res_3, e_4):instanceOf(e_4, 479)?$completeExceptionally(res_3, e_4):instanceOf(e_4, 477)?$completeExceptionally(res_3, e_4):instanceOf(e_4, 391)?$completeExceptionally(res_3, e_4):retryAfter(new RetryStorage$lambda$3$Type(retriesLeft_0, maxAttempts_1, f_2, res_3), (maxAttempts_1 + 1 - retriesLeft_0) * $intern_49 + $nextInt(random_11, 500));
  return null;
}

function lambda$3_3(retriesLeft_0, maxAttempts_1, f_2, res_3){
  $clinit_RetryStorage();
  return $exceptionally($thenAccept(recurse_3(retriesLeft_0 - 1, maxAttempts_1, f_2), new RetryStorage$2methodref$complete$Type(res_3)), makeLambdaFunction(RetryStorage$lambda$5$Type.prototype.apply_0, RetryStorage$lambda$5$Type, [res_3]));
}

function recurse_3(retriesLeft, maxAttempts, f){
  $clinit_RetryStorage();
  var res, t;
  res = new CompletableFuture;
  try {
    $exceptionally($thenAccept(castTo(f.get_0(), 6), new RetryStorage$1methodref$complete$Type(res)), makeLambdaFunction(RetryStorage$lambda$2$Type.prototype.apply_0, RetryStorage$lambda$2$Type, [retriesLeft, maxAttempts, f, res]));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 33)) {
      t = $e0;
      $completeExceptionally(res, t);
    }
     else 
      throw toJs($e0);
  }
  return res;
}

function retryAfter(method, milliseconds){
  $schedule(executor, new RetryStorage$0methodref$get$Type(method), milliseconds, ($clinit_TimeUnit() , MILLISECONDS));
}

defineClass(493, 1, {}, RetryStorage);
_.clearBlockCache = function clearBlockCache_7(){
}
;
_.getChampLookup_0 = function getChampLookup_15(owner, root, champKey, bat, committedRoot, hasher){
  var cache;
  return cache = new CachingStorage(this) , $thenApply($thenApply($thenApply($thenCompose(create_4(owner, root, makeLambdaFunction(ContentAddressedStorage$lambda$3$Type.prototype.apply_0, ContentAddressedStorage$lambda$3$Type, []), cache, hasher, makeLambdaFunction(ContentAddressedStorage$lambda$4$Type.prototype.apply_0, ContentAddressedStorage$lambda$4$Type, [])), makeLambdaFunction(ContentAddressedStorage$lambda$5$Type.prototype.apply_0, ContentAddressedStorage$lambda$5$Type, [champKey])), makeLambdaFunction(ContentAddressedStorage$lambda$6$Type.prototype.apply_0, ContentAddressedStorage$lambda$6$Type, [])), makeLambdaFunction(ContentAddressedStorage$lambda$9$Type.prototype.apply_0, ContentAddressedStorage$lambda$9$Type, [cache, owner, bat])), makeLambdaFunction(ContentAddressedStorage$lambda$10$Type.prototype.apply_0, ContentAddressedStorage$lambda$10$Type, [cache]));
}
;
_.getSigningKey = function getSigningKey_5(owner, hash){
  return $thenApply(hash.type == ($clinit_Multihash$Type() , id_3)?new CompletableFuture_0(($clinit_Optional() , new Optional(checkCriticalNotNull(fromByteArray(copyOfRange(hash.hash_0, 0, hash.hash_0.length)))))):$get_24(this, owner, hash.target, ($clinit_Optional() , $clinit_Optional() , EMPTY)), makeLambdaFunction(ContentAddressedStorage$lambda$13$Type.prototype.apply_0, ContentAddressedStorage$lambda$13$Type, []));
}
;
_.put_0 = function put_31(owner, writer, block, hasher, tid){
  return $thenCompose(hasher.scriptJS.sha256(block), makeLambdaFunction(ContentAddressedStorage$lambda$0$Type.prototype.apply_0, ContentAddressedStorage$lambda$0$Type, [this, owner, writer, block, tid]));
}
;
_.put_2 = function put_33(owner, writer, signature, block, tid){
  return $thenApply($put_24(this, owner, writer, ($clinit_Collections() , new Collections$SingletonList(signature)), new Collections$SingletonList(block), tid), makeLambdaFunction(ContentAddressedStorage$lambda$1$Type.prototype.apply_0, ContentAddressedStorage$lambda$1$Type, []));
}
;
_.putBoxingKey = function putBoxingKey_5(owner, signature, key, tid){
  return $putBoxingKey(this, owner, signature, key, tid);
}
;
_.putSigningKey = function putSigningKey_11(signature, owner, newKey, tid){
  return new CompletableFuture_0(new PublicKeyHash(new Cid(1, ($clinit_Cid$Codec() , DagCbor), ($clinit_Multihash$Type() , id_3), $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborLong(($clinit_PublicSigningKey$Type() , Ed25519).value), new CborObject$CborByteArray(newKey.publicKey)])))))));
}
;
_.putSigningKey_0 = function putSigningKey_12(signature, owner, writer, newKey, tid){
  return new CompletableFuture_0(new PublicKeyHash(new Cid(1, ($clinit_Cid$Codec() , DagCbor), ($clinit_Multihash$Type() , id_3), $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborLong(($clinit_PublicSigningKey$Type() , Ed25519).value), new CborObject$CborByteArray(newKey.publicKey)])))))));
}
;
_.blockStoreProperties = function blockStoreProperties_8(){
  return $blockStoreProperties_0(this);
}
;
_.closeTransaction = function closeTransaction_6(owner, tid){
  return $runWithRetry(this, new RetryStorage$lambda$9$Type(this, owner, tid));
}
;
_.downloadFragments = function downloadFragments_7(owner, hashes, bats, h, monitor, spaceIncreaseFactor){
  return $runWithRetry(this, new RetryStorage$lambda$16$Type(this, owner, hashes, bats, h, monitor, spaceIncreaseFactor));
}
;
_.get_1 = function get_84(owner, hash, bat){
  return $get_24(this, owner, hash, bat);
}
;
_.getChampLookup = function getChampLookup_14(owner, root, champKey, bat, committedRoot){
  return $getChampLookup_4(this, owner, root, champKey, bat, committedRoot);
}
;
_.getRaw = function getRaw_8(owner, hash, bat){
  return $getRaw_2(this, owner, hash, bat);
}
;
_.id_1 = function id_11(){
  return $runWithRetry(this, new RetryStorage$lambda$7$Type(this));
}
;
_.put_1 = function put_32(owner, writer, signatures, blocks, tid){
  return $put_24(this, owner, writer, signatures, blocks, tid);
}
;
_.putRaw = function putRaw_8(owner, writer, signatures, blocks, tid, progressCounter){
  return $putRaw_0(this, owner, writer, signatures, blocks, tid, progressCounter);
}
;
_.startTransaction = function startTransaction_6(owner){
  return $runWithRetry(this, new RetryStorage$lambda$8$Type(this, owner));
}
;
_.maxAttempts = 0;
var executor, random_11;
var Lpeergos_shared_storage_RetryStorage_2_classLit = createForClass('peergos.shared.storage', 'RetryStorage', 493);
function RetryStorage$0methodref$get$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(967, 1, {}, RetryStorage$0methodref$get$Type);
_.call_0 = function call_3(){
  return $get_25(this.$$outer_0);
}
;
var Lpeergos_shared_storage_RetryStorage$0methodref$get$Type_2_classLit = createForClass('peergos.shared.storage', 'RetryStorage/0methodref$get$Type', 967);
function RetryStorage$1methodref$complete$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(968, 1, $intern_32, RetryStorage$1methodref$complete$Type);
_.accept = function accept_99(arg0){
  $complete(this.$$outer_0, arg0);
}
;
_.andThen = function andThen_53(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_storage_RetryStorage$1methodref$complete$Type_2_classLit = createForClass('peergos.shared.storage', 'RetryStorage/1methodref$complete$Type', 968);
function RetryStorage$2methodref$complete$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(969, 1, $intern_32, RetryStorage$2methodref$complete$Type);
_.accept = function accept_100(arg0){
  $complete(this.$$outer_0, arg0);
}
;
_.andThen = function andThen_54(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_storage_RetryStorage$2methodref$complete$Type_2_classLit = createForClass('peergos.shared.storage', 'RetryStorage/2methodref$complete$Type', 969);
function RetryStorage$lambda$10$Type($$outer_0, owner_1, writer_2, signatures_3, blocks_4, tid_5){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.signatures_3 = signatures_3;
  this.blocks_4 = blocks_4;
  this.tid_5 = tid_5;
}

defineClass(975, 1, {}, RetryStorage$lambda$10$Type);
_.get_0 = function get_85(){
  return $lambda$10_4(this.$$outer_0, this.owner_1, this.writer_2, this.signatures_3, this.blocks_4, this.tid_5);
}
;
var Lpeergos_shared_storage_RetryStorage$lambda$10$Type_2_classLit = createForClass('peergos.shared.storage', 'RetryStorage/lambda$10$Type', 975);
function RetryStorage$lambda$11$Type($$outer_0, owner_1, hash_2, bat_3){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.hash_2 = hash_2;
  this.bat_3 = bat_3;
}

defineClass(976, 1, {}, RetryStorage$lambda$11$Type);
_.get_0 = function get_86(){
  return $lambda$11_3(this.$$outer_0, this.owner_1, this.hash_2, this.bat_3);
}
;
var Lpeergos_shared_storage_RetryStorage$lambda$11$Type_2_classLit = createForClass('peergos.shared.storage', 'RetryStorage/lambda$11$Type', 976);
function RetryStorage$lambda$12$Type($$outer_0, owner_1, writer_2, signatures_3, blocks_4, tid_5, progressCounter_6){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.signatures_3 = signatures_3;
  this.blocks_4 = blocks_4;
  this.tid_5 = tid_5;
  this.progressCounter_6 = progressCounter_6;
}

defineClass(977, 1, {}, RetryStorage$lambda$12$Type);
_.get_0 = function get_87(){
  return $lambda$12_5(this.$$outer_0, this.owner_1, this.writer_2, this.signatures_3, this.blocks_4, this.tid_5, this.progressCounter_6);
}
;
var Lpeergos_shared_storage_RetryStorage$lambda$12$Type_2_classLit = createForClass('peergos.shared.storage', 'RetryStorage/lambda$12$Type', 977);
function RetryStorage$lambda$13$Type($$outer_0, owner_1, hash_2, bat_3){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.hash_2 = hash_2;
  this.bat_3 = bat_3;
}

defineClass(978, 1, {}, RetryStorage$lambda$13$Type);
_.get_0 = function get_88(){
  return $lambda$13_7(this.$$outer_0, this.owner_1, this.hash_2, this.bat_3);
}
;
var Lpeergos_shared_storage_RetryStorage$lambda$13$Type_2_classLit = createForClass('peergos.shared.storage', 'RetryStorage/lambda$13$Type', 978);
function RetryStorage$lambda$14$Type($$outer_0, owner_1, root_2, champKey_3, bat_4, committedRoot_5){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.root_2 = root_2;
  this.champKey_3 = champKey_3;
  this.bat_4 = bat_4;
  this.committedRoot_5 = committedRoot_5;
}

defineClass(979, 1, {}, RetryStorage$lambda$14$Type);
_.get_0 = function get_89(){
  return $lambda$14_3(this.$$outer_0, this.owner_1, this.root_2, this.champKey_3, this.bat_4, this.committedRoot_5);
}
;
var Lpeergos_shared_storage_RetryStorage$lambda$14$Type_2_classLit = createForClass('peergos.shared.storage', 'RetryStorage/lambda$14$Type', 979);
function RetryStorage$lambda$16$Type($$outer_0, owner_1, hashes_2, bats_3, h_4, monitor_5, spaceIncreaseFactor_6){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.hashes_2 = hashes_2;
  this.bats_3 = bats_3;
  this.h_4 = h_4;
  this.monitor_5 = monitor_5;
  this.spaceIncreaseFactor_6 = spaceIncreaseFactor_6;
}

defineClass(980, 1, {}, RetryStorage$lambda$16$Type);
_.get_0 = function get_90(){
  return $lambda$16_8(this.$$outer_0, this.owner_1, this.hashes_2, this.bats_3, this.h_4, this.monitor_5, this.spaceIncreaseFactor_6);
}
;
_.spaceIncreaseFactor_6 = 0;
var Lpeergos_shared_storage_RetryStorage$lambda$16$Type_2_classLit = createForClass('peergos.shared.storage', 'RetryStorage/lambda$16$Type', 980);
function RetryStorage$lambda$2$Type(retriesLeft_0, maxAttempts_1, f_2, res_3){
  this.retriesLeft_0 = retriesLeft_0;
  this.maxAttempts_1 = maxAttempts_1;
  this.f_2 = f_2;
  this.res_3 = res_3;
}

defineClass(3108, $wnd.Function, $intern_22, RetryStorage$lambda$2$Type);
_.apply_0 = function apply_924(arg0){
  return lambda$2_11(this.retriesLeft_0, this.maxAttempts_1, this.f_2, this.res_3, arg0);
}
;
_.maxAttempts_1 = 0;
_.retriesLeft_0 = 0;
function $get_25(this$static){
  return lambda$3_3(this$static.retriesLeft_0, this$static.maxAttempts_1, this$static.f_2, this$static.res_3);
}

function RetryStorage$lambda$3$Type(retriesLeft_0, maxAttempts_1, f_2, res_3){
  this.retriesLeft_0 = retriesLeft_0;
  this.maxAttempts_1 = maxAttempts_1;
  this.f_2 = f_2;
  this.res_3 = res_3;
}

defineClass(970, 1, {}, RetryStorage$lambda$3$Type);
_.get_0 = function get_91(){
  return $get_25(this);
}
;
_.maxAttempts_1 = 0;
_.retriesLeft_0 = 0;
var Lpeergos_shared_storage_RetryStorage$lambda$3$Type_2_classLit = createForClass('peergos.shared.storage', 'RetryStorage/lambda$3$Type', 970);
function RetryStorage$lambda$5$Type(res_0){
  this.res_0 = res_0;
}

defineClass(3109, $wnd.Function, $intern_22, RetryStorage$lambda$5$Type);
_.apply_0 = function apply_925(arg0){
  return $clinit_RetryStorage() , $completeExceptionally(this.res_0, castTo(arg0, 33)) , null;
}
;
function RetryStorage$lambda$6$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(971, 1, {}, RetryStorage$lambda$6$Type);
_.get_0 = function get_92(){
  return this.$$outer_0.target.blockStoreProperties();
}
;
var Lpeergos_shared_storage_RetryStorage$lambda$6$Type_2_classLit = createForClass('peergos.shared.storage', 'RetryStorage/lambda$6$Type', 971);
function RetryStorage$lambda$7$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(972, 1, {}, RetryStorage$lambda$7$Type);
_.get_0 = function get_93(){
  return this.$$outer_0.target.id_1();
}
;
var Lpeergos_shared_storage_RetryStorage$lambda$7$Type_2_classLit = createForClass('peergos.shared.storage', 'RetryStorage/lambda$7$Type', 972);
function RetryStorage$lambda$8$Type($$outer_0, owner_1){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
}

defineClass(973, 1, {}, RetryStorage$lambda$8$Type);
_.get_0 = function get_94(){
  return $lambda$8_7(this.$$outer_0, this.owner_1);
}
;
var Lpeergos_shared_storage_RetryStorage$lambda$8$Type_2_classLit = createForClass('peergos.shared.storage', 'RetryStorage/lambda$8$Type', 973);
function RetryStorage$lambda$9$Type($$outer_0, owner_1, tid_2){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.tid_2 = tid_2;
}

defineClass(974, 1, {}, RetryStorage$lambda$9$Type);
_.get_0 = function get_95(){
  return $lambda$9_10(this.$$outer_0, this.owner_1, this.tid_2);
}
;
var Lpeergos_shared_storage_RetryStorage$lambda$9$Type_2_classLit = createForClass('peergos.shared.storage', 'RetryStorage/lambda$9$Type', 974);
function StorageQuotaExceededException(msg){
  RuntimeException_0.call(this, msg);
}

defineClass(479, 35, {4:1, 51:1, 35:1, 33:1, 479:1}, StorageQuotaExceededException);
var Lpeergos_shared_storage_StorageQuotaExceededException_2_classLit = createForClass('peergos.shared.storage', 'StorageQuotaExceededException', 479);
function TransactionId(id_0){
  this.id_0 = id_0;
}

defineClass(239, 1, {239:1}, TransactionId);
_.toString_0 = function toString_77(){
  return this.id_0;
}
;
var Lpeergos_shared_storage_TransactionId_2_classLit = createForClass('peergos.shared.storage', 'TransactionId', 239);
function $cacheBlocks(this$static, blocks, hasher){
  $execute(($clinit_ForkJoinPool() , $clinit_ForkJoinPool() , instance_0), new UnauthedCachingStorage$lambda$23$Type(this$static, hasher, blocks));
  return blocks;
}

function $getRaw_3(this$static, owner, key, bat){
  return $thenCompose($get_21(this$static.cache_0, key), makeLambdaFunction(UnauthedCachingStorage$lambda$0$Type.prototype.apply_0, UnauthedCachingStorage$lambda$0$Type, [this$static, key, owner, bat]));
}

function $lambda$0_26(this$static, key_1, owner_2, bat_3, res_3){
  var pipe;
  if (res_3.ref != null)
    return new CompletableFuture_0(res_3);
  if ($containsKey_2(this$static.pending, key_1))
    return castTo($get_5(this$static.pending, key_1), 87);
  pipe = new CompletableFuture;
  $put_5(this$static.pending, key_1, pipe);
  return $exceptionally($thenApply(this$static.target.getRaw(owner_2, key_1, bat_3), makeLambdaFunction(UnauthedCachingStorage$lambda$1$Type.prototype.apply_0, UnauthedCachingStorage$lambda$1$Type, [this$static, key_1, pipe])), makeLambdaFunction(UnauthedCachingStorage$lambda$2$Type.prototype.apply_0, UnauthedCachingStorage$lambda$2$Type, [this$static, key_1, pipe]));
}

function $lambda$1_22(this$static, key_1, pipe_2, blockOpt_2){
  var value_0;
  if (blockOpt_2.ref != null) {
    value_0 = (checkCriticalElement(blockOpt_2.ref != null) , castTo(blockOpt_2.ref, 11));
    $put_21(this$static.cache_0, key_1, value_0);
  }
  $remove_7(this$static.pending, key_1);
  $complete(pipe_2, blockOpt_2);
  return blockOpt_2;
}

function $lambda$10_5(this$static, owner_1, champKey_2, bat_3, champRoot_3){
  return this$static.target.getChampLookup(owner_1, (checkCriticalElement(champRoot_3.ref != null) , castTo(champRoot_3.ref, 44)), champKey_2, bat_3, ($clinit_Optional() , $clinit_Optional() , EMPTY));
}

function $lambda$11_4(this$static, hasher_1, blocks_1){
  return $execute(($clinit_ForkJoinPool() , $clinit_ForkJoinPool() , instance_0), new UnauthedCachingStorage$lambda$23$Type(this$static, hasher_1, blocks_1)) , blocks_1;
}

function $lambda$2_17(this$static, key_1, pipe_2, t_2){
  $remove_7(this$static.pending, key_1);
  $completeExceptionally(pipe_2, t_2);
  return $clinit_Optional() , $clinit_Optional() , EMPTY;
}

function $lambda$20_5(this$static, owner_1, root_2, champKey_3, bat_4, committedRoot_5, hasher_6){
  return this$static.target.getChampLookup_0(owner_1, root_2, champKey_3, bat_4, committedRoot_5, hasher_6);
}

function $lambda$21_4(this$static, owner_1, root_2, champKey_3, bat_4, hasher_6){
  var cache;
  return cache = new CachingStorage(this$static) , $thenApply($thenApply($thenApply($thenCompose(create_4(owner_1, root_2, makeLambdaFunction(ContentAddressedStorage$lambda$3$Type.prototype.apply_0, ContentAddressedStorage$lambda$3$Type, []), cache, hasher_6, makeLambdaFunction(ContentAddressedStorage$lambda$4$Type.prototype.apply_0, ContentAddressedStorage$lambda$4$Type, [])), makeLambdaFunction(ContentAddressedStorage$lambda$5$Type.prototype.apply_0, ContentAddressedStorage$lambda$5$Type, [champKey_3])), makeLambdaFunction(ContentAddressedStorage$lambda$6$Type.prototype.apply_0, ContentAddressedStorage$lambda$6$Type, [])), makeLambdaFunction(ContentAddressedStorage$lambda$9$Type.prototype.apply_0, ContentAddressedStorage$lambda$9$Type, [cache, owner_1, bat_4])), makeLambdaFunction(ContentAddressedStorage$lambda$10$Type.prototype.apply_0, ContentAddressedStorage$lambda$10$Type, [cache]));
}

function $lambda$22_2(this$static, hasher_1, blocks_1){
  return $execute(($clinit_ForkJoinPool() , $clinit_ForkJoinPool() , instance_0), new UnauthedCachingStorage$lambda$23$Type(this$static, hasher_1, blocks_1)) , blocks_1;
}

function $lambda$23_3(this$static, hasher_1, blocks_2){
  return $thenAccept(combineAll(castTo($collect_0($map_0(blocks_2.stream(), makeLambdaFunction(UnauthedCachingStorage$lambda$24$Type.prototype.apply_0, UnauthedCachingStorage$lambda$24$Type, [hasher_1])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 54)), new UnauthedCachingStorage$lambda$26$Type(this$static));
}

function $lambda$26_3(this$static, hashed_0){
  $forEach_2(hashed_0.stream(), new UnauthedCachingStorage$lambda$27$Type(this$static));
}

function $lambda$27_1(this$static, p_0){
  return $put_21(this$static.cache_0, castTo(p_0.left, 44), castTo(p_0.right, 80).data_0);
}

function $lambda$28_1(this$static, blocks_1, res_1){
  var block, i;
  for (i = 0; i < blocks_1.size(); i++) {
    block = castTo(blocks_1.getAtIndex(i), 11);
    $put_21(this$static.cache_0, castTo(res_1.getAtIndex(i), 44), block);
  }
  return res_1;
}

function $lambda$3_17(this$static, owner_1, root_2, champKey_3, bat_4, committedRoot_5){
  return $localChampLookup(this$static, owner_1, root_2, champKey_3, bat_4, committedRoot_5, this$static.hasher);
}

function $lambda$31_3(this$static, blocks_1, res_1){
  var block, i;
  for (i = 0; i < blocks_1.size(); i++) {
    block = castTo(blocks_1.getAtIndex(i), 11);
    $put_21(this$static.cache_0, castTo(res_1.getAtIndex(i), 44), block);
  }
  return res_1;
}

function $lambda$4_12(this$static, owner_1, root_2, champKey_3, bat_4, committedRoot_5){
  return $thenApply(this$static.target.getChampLookup(owner_1, root_2, champKey_3, bat_4, committedRoot_5), makeLambdaFunction(UnauthedCachingStorage$lambda$5$Type.prototype.apply_0, UnauthedCachingStorage$lambda$5$Type, [this$static]));
}

function $lambda$5_12(this$static, blocks_0){
  return $cacheBlocks(this$static, blocks_0, this$static.hasher);
}

function $lambda$6_11(this$static, owner_1, champKey_2, bat_3, hasher_4, committedRoot_5, root_6){
  return $thenApply(committedRoot_5.ref != null?$thenCompose($thenApply($thenApply($getRaw_3(this$static, owner_1, (checkCriticalElement(committedRoot_5.ref != null) , castTo(committedRoot_5.ref, 44)), ($clinit_Optional() , $clinit_Optional() , EMPTY)), makeLambdaFunction(UnauthedCachingStorage$lambda$29$Type.prototype.apply_0, UnauthedCachingStorage$lambda$29$Type, [])), makeLambdaFunction(UnauthedCachingStorage$lambda$7$Type.prototype.apply_0, UnauthedCachingStorage$lambda$7$Type, [])), makeLambdaFunction(UnauthedCachingStorage$lambda$10$Type.prototype.apply_0, UnauthedCachingStorage$lambda$10$Type, [this$static, owner_1, champKey_2, bat_3])):this$static.target.getChampLookup(owner_1, root_6, champKey_2, bat_3, ($clinit_Optional() , $clinit_Optional() , EMPTY)), makeLambdaFunction(UnauthedCachingStorage$lambda$11$Type.prototype.apply_0, UnauthedCachingStorage$lambda$11$Type, [this$static, hasher_4]));
}

function $localChampLookup(this$static, owner, root, champKey, bat, committedRoot, hasher){
  var cache;
  cache = new CachingStorage(new LocalOnlyStorage(this$static.cache_0, new UnauthedCachingStorage$lambda$6$Type(this$static, owner, champKey, bat, hasher, committedRoot, root), hasher));
  return $thenApply($thenApply($thenApply($thenCompose(create_4(owner, root, makeLambdaFunction(UnauthedCachingStorage$lambda$12$Type.prototype.apply_0, UnauthedCachingStorage$lambda$12$Type, []), cache, hasher, makeLambdaFunction(UnauthedCachingStorage$lambda$13$Type.prototype.apply_0, UnauthedCachingStorage$lambda$13$Type, [])), makeLambdaFunction(UnauthedCachingStorage$lambda$14$Type.prototype.apply_0, UnauthedCachingStorage$lambda$14$Type, [champKey])), makeLambdaFunction(UnauthedCachingStorage$lambda$15$Type.prototype.apply_0, UnauthedCachingStorage$lambda$15$Type, [])), makeLambdaFunction(UnauthedCachingStorage$lambda$18$Type.prototype.apply_0, UnauthedCachingStorage$lambda$18$Type, [cache, owner, bat])), makeLambdaFunction(UnauthedCachingStorage$lambda$19$Type.prototype.apply_0, UnauthedCachingStorage$lambda$19$Type, [cache]));
}

function UnauthedCachingStorage(target, cache, hasher){
  DelegatingStorage.call(this, target);
  this.target = target;
  this.cache_0 = cache;
  this.pending = new LRUCache(200);
  this.hasher = hasher;
}

function lambda$14_3(champKey_0, tree_1){
  var key;
  return key = new ByteArrayWrapper(champKey_0) , $thenCompose(castTo(tree_1.keyHasher.call(null, key), 6), makeLambdaFunction(ChampWrapper$lambda$3$Type.prototype.apply_0, ChampWrapper$lambda$3$Type, [tree_1, key]));
}

function lambda$18_2(cache_0, owner_1, bat_2, btreeValue_3){
  if (btreeValue_3.hash_0)
    return $get_18(cache_0, owner_1, castTo($get_9(btreeValue_3), 44), bat_2);
  return $clinit_Optional() , $clinit_Optional() , EMPTY;
}

function lambda$24_0(hasher_0, b_1){
  return $thenApply($thenApply(hasher_0.scriptJS.sha256(b_1), makeLambdaFunction(Hasher$lambda$0$Type.prototype.apply_0, Hasher$lambda$0$Type, [false])), makeLambdaFunction(UnauthedCachingStorage$lambda$25$Type.prototype.apply_0, UnauthedCachingStorage$lambda$25$Type, [b_1]));
}

function lambda$25_1(b_0, c_1){
  return new Pair(c_1, new ByteArrayWrapper(b_0));
}

defineClass(995, 361, {}, UnauthedCachingStorage);
_.blockStoreProperties = function blockStoreProperties_9(){
  return this.target.blockStoreProperties();
}
;
_.clearBlockCache = function clearBlockCache_8(){
  this.cache_0.cache_0.clear();
  this.target.clearBlockCache();
}
;
_.get_1 = function get_96(owner, key, bat){
  return $thenApply($thenCompose($get_21(this.cache_0, key), makeLambdaFunction(UnauthedCachingStorage$lambda$0$Type.prototype.apply_0, UnauthedCachingStorage$lambda$0$Type, [this, key, owner, bat])), makeLambdaFunction(UnauthedCachingStorage$lambda$29$Type.prototype.apply_0, UnauthedCachingStorage$lambda$29$Type, []));
}
;
_.getChampLookup = function getChampLookup_16(owner, root, champKey, bat, committedRoot){
  return asyncExceptionally(new UnauthedCachingStorage$lambda$3$Type(this, owner, root, champKey, bat, committedRoot), makeLambdaFunction(UnauthedCachingStorage$lambda$4$Type.prototype.apply_0, UnauthedCachingStorage$lambda$4$Type, [this, owner, root, champKey, bat, committedRoot]));
}
;
_.getChampLookup_0 = function getChampLookup_17(owner, root, champKey, bat, committedRoot, hasher){
  ($clinit_System() , out_0).println_0('UnauthedCachingStorage::getChampLookup ' + root);
  return $thenApply(asyncExceptionally(new UnauthedCachingStorage$lambda$20$Type(this, owner, root, champKey, bat, committedRoot, hasher), makeLambdaFunction(UnauthedCachingStorage$lambda$21$Type.prototype.apply_0, UnauthedCachingStorage$lambda$21$Type, [this, owner, root, champKey, bat, hasher])), makeLambdaFunction(UnauthedCachingStorage$lambda$22$Type.prototype.apply_0, UnauthedCachingStorage$lambda$22$Type, [this, hasher]));
}
;
_.getRaw = function getRaw_9(owner, key, bat){
  return $getRaw_3(this, owner, key, bat);
}
;
_.put_1 = function put_34(owner, writer, signedHashes, blocks, tid){
  return $thenApply(this.target.put_1(owner, writer, signedHashes, blocks, tid), makeLambdaFunction(UnauthedCachingStorage$lambda$28$Type.prototype.apply_0, UnauthedCachingStorage$lambda$28$Type, [this, blocks]));
}
;
_.putRaw = function putRaw_9(owner, writer, signatures, blocks, tid, progressConsumer){
  return $thenApply(this.target.putRaw(owner, writer, signatures, blocks, tid, progressConsumer), makeLambdaFunction(UnauthedCachingStorage$lambda$31$Type.prototype.apply_0, UnauthedCachingStorage$lambda$31$Type, [this, blocks]));
}
;
var Lpeergos_shared_storage_UnauthedCachingStorage_2_classLit = createForClass('peergos.shared.storage', 'UnauthedCachingStorage', 995);
function UnauthedCachingStorage$0methodref$fromCbor$Type(){
}

defineClass(3185, $wnd.Function, $intern_22, UnauthedCachingStorage$0methodref$fromCbor$Type);
_.apply_0 = function apply_926(arg0){
  return fromCbor_98(castTo(arg0, 48));
}
;
function UnauthedCachingStorage$1methodref$of$Type(){
}

defineClass(3188, $wnd.Function, $intern_22, UnauthedCachingStorage$1methodref$of$Type);
_.apply_0 = function apply_927(arg0){
  return $clinit_MaybeMultihash() , new MaybeMultihash(castTo(arg0, 58));
}
;
function UnauthedCachingStorage$2methodref$fromByteArray$Type(){
}

defineClass(3189, $wnd.Function, $intern_22, UnauthedCachingStorage$2methodref$fromByteArray$Type);
_.apply_0 = function apply_928(arg0){
  return fromByteArray(castTo(arg0, 11));
}
;
function UnauthedCachingStorage$lambda$0$Type($$outer_0, key_1, owner_2, bat_3){
  this.$$outer_0 = $$outer_0;
  this.key_1 = key_1;
  this.owner_2 = owner_2;
  this.bat_3 = bat_3;
}

defineClass(1319, $wnd.Function, $intern_22, UnauthedCachingStorage$lambda$0$Type);
_.apply_0 = function apply_929(arg0){
  return $lambda$0_26(this.$$outer_0, this.key_1, this.owner_2, this.bat_3, arg0);
}
;
function UnauthedCachingStorage$lambda$1$Type($$outer_0, key_1, pipe_2){
  this.$$outer_0 = $$outer_0;
  this.key_1 = key_1;
  this.pipe_2 = pipe_2;
}

defineClass(3177, $wnd.Function, $intern_22, UnauthedCachingStorage$lambda$1$Type);
_.apply_0 = function apply_930(arg0){
  return $lambda$1_22(this.$$outer_0, this.key_1, this.pipe_2, arg0);
}
;
function UnauthedCachingStorage$lambda$10$Type($$outer_0, owner_1, champKey_2, bat_3){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.champKey_2 = champKey_2;
  this.bat_3 = bat_3;
}

defineClass(3181, $wnd.Function, $intern_22, UnauthedCachingStorage$lambda$10$Type);
_.apply_0 = function apply_931(arg0){
  return $lambda$10_5(this.$$outer_0, this.owner_1, this.champKey_2, this.bat_3, arg0);
}
;
function UnauthedCachingStorage$lambda$11$Type($$outer_0, hasher_1){
  this.$$outer_0 = $$outer_0;
  this.hasher_1 = hasher_1;
}

defineClass(3182, $wnd.Function, $intern_22, UnauthedCachingStorage$lambda$11$Type);
_.apply_0 = function apply_932(arg0){
  return $lambda$11_4(this.$$outer_0, this.hasher_1, arg0);
}
;
function UnauthedCachingStorage$lambda$12$Type(){
}

defineClass(3167, $wnd.Function, $intern_22, UnauthedCachingStorage$lambda$12$Type);
_.apply_0 = function apply_933(arg0){
  return new CompletableFuture_0(castTo(arg0, 80).data_0);
}
;
function UnauthedCachingStorage$lambda$13$Type(){
}

defineClass(3168, $wnd.Function, $intern_22, UnauthedCachingStorage$lambda$13$Type);
_.apply_0 = function apply_934(arg0){
  return castTo(castTo(arg0, 7), 53);
}
;
function UnauthedCachingStorage$lambda$14$Type(champKey_0){
  this.champKey_0 = champKey_0;
}

defineClass(3169, $wnd.Function, $intern_22, UnauthedCachingStorage$lambda$14$Type);
_.apply_0 = function apply_935(arg0){
  return lambda$14_3(this.champKey_0, arg0);
}
;
function UnauthedCachingStorage$lambda$15$Type(){
}

defineClass(3170, $wnd.Function, $intern_22, UnauthedCachingStorage$lambda$15$Type);
_.apply_0 = function apply_936(arg0){
  return castTo($orElse($map($map(castTo(arg0, 12), makeLambdaFunction(UnauthedCachingStorage$lambda$16$Type.prototype.apply_0, UnauthedCachingStorage$lambda$16$Type, [])), makeLambdaFunction(UnauthedCachingStorage$1methodref$of$Type.prototype.apply_0, UnauthedCachingStorage$1methodref$of$Type, [])), ($clinit_MaybeMultihash() , $clinit_MaybeMultihash() , EMPTY_0)), 93);
}
;
function UnauthedCachingStorage$lambda$16$Type(){
}

defineClass(3187, $wnd.Function, $intern_22, UnauthedCachingStorage$lambda$16$Type);
_.apply_0 = function apply_937(arg0){
  return castTo(arg0, 53).target;
}
;
function UnauthedCachingStorage$lambda$18$Type(cache_0, owner_1, bat_2){
  this.cache_0 = cache_0;
  this.owner_1 = owner_1;
  this.bat_2 = bat_2;
}

defineClass(3171, $wnd.Function, $intern_22, UnauthedCachingStorage$lambda$18$Type);
_.apply_0 = function apply_938(arg0){
  return lambda$18_2(this.cache_0, this.owner_1, this.bat_2, arg0);
}
;
function UnauthedCachingStorage$lambda$19$Type(cache_0){
  this.cache_0 = cache_0;
}

defineClass(3172, $wnd.Function, $intern_22, UnauthedCachingStorage$lambda$19$Type);
_.apply_0 = function apply_939(arg0){
  return new ArrayList_1(new AbstractMap$2(this.cache_0.cache_0));
}
;
function UnauthedCachingStorage$lambda$2$Type($$outer_0, key_1, pipe_2){
  this.$$outer_0 = $$outer_0;
  this.key_1 = key_1;
  this.pipe_2 = pipe_2;
}

defineClass(3178, $wnd.Function, $intern_22, UnauthedCachingStorage$lambda$2$Type);
_.apply_0 = function apply_940(arg0){
  return $lambda$2_17(this.$$outer_0, this.key_1, this.pipe_2, arg0);
}
;
function UnauthedCachingStorage$lambda$20$Type($$outer_0, owner_1, root_2, champKey_3, bat_4, committedRoot_5, hasher_6){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.root_2 = root_2;
  this.champKey_3 = champKey_3;
  this.bat_4 = bat_4;
  this.committedRoot_5 = committedRoot_5;
  this.hasher_6 = hasher_6;
}

defineClass(998, 1, {}, UnauthedCachingStorage$lambda$20$Type);
_.get_0 = function get_97(){
  return $lambda$20_5(this.$$outer_0, this.owner_1, this.root_2, this.champKey_3, this.bat_4, this.committedRoot_5, this.hasher_6);
}
;
var Lpeergos_shared_storage_UnauthedCachingStorage$lambda$20$Type_2_classLit = createForClass('peergos.shared.storage', 'UnauthedCachingStorage/lambda$20$Type', 998);
function UnauthedCachingStorage$lambda$21$Type($$outer_0, owner_1, root_2, champKey_3, bat_4, hasher_6){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.root_2 = root_2;
  this.champKey_3 = champKey_3;
  this.bat_4 = bat_4;
  this.hasher_6 = hasher_6;
}

defineClass(3173, $wnd.Function, $intern_22, UnauthedCachingStorage$lambda$21$Type);
_.apply_0 = function apply_941(arg0){
  return $lambda$21_4(this.$$outer_0, this.owner_1, this.root_2, this.champKey_3, this.bat_4, this.hasher_6);
}
;
function UnauthedCachingStorage$lambda$22$Type($$outer_0, hasher_1){
  this.$$outer_0 = $$outer_0;
  this.hasher_1 = hasher_1;
}

defineClass(3174, $wnd.Function, $intern_22, UnauthedCachingStorage$lambda$22$Type);
_.apply_0 = function apply_942(arg0){
  return $lambda$22_2(this.$$outer_0, this.hasher_1, arg0);
}
;
function UnauthedCachingStorage$lambda$23$Type($$outer_0, hasher_1, blocks_2){
  this.$$outer_0 = $$outer_0;
  this.hasher_1 = hasher_1;
  this.blocks_2 = blocks_2;
}

defineClass(419, 1, {}, UnauthedCachingStorage$lambda$23$Type);
_.run = function run_3(){
  $lambda$23_3(this.$$outer_0, this.hasher_1, this.blocks_2);
}
;
var Lpeergos_shared_storage_UnauthedCachingStorage$lambda$23$Type_2_classLit = createForClass('peergos.shared.storage', 'UnauthedCachingStorage/lambda$23$Type', 419);
function UnauthedCachingStorage$lambda$24$Type(hasher_0){
  this.hasher_0 = hasher_0;
}

defineClass(3183, $wnd.Function, $intern_22, UnauthedCachingStorage$lambda$24$Type);
_.apply_0 = function apply_943(arg0){
  return lambda$24_0(this.hasher_0, arg0);
}
;
function UnauthedCachingStorage$lambda$25$Type(b_0){
  this.b_0 = b_0;
}

defineClass(3184, $wnd.Function, $intern_22, UnauthedCachingStorage$lambda$25$Type);
_.apply_0 = function apply_944(arg0){
  return lambda$25_1(this.b_0, arg0);
}
;
function UnauthedCachingStorage$lambda$26$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass($intern_49, 1, $intern_32, UnauthedCachingStorage$lambda$26$Type);
_.accept = function accept_101(arg0){
  $lambda$26_3(this.$$outer_0, arg0);
}
;
_.andThen = function andThen_55(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_storage_UnauthedCachingStorage$lambda$26$Type_2_classLit = createForClass('peergos.shared.storage', 'UnauthedCachingStorage/lambda$26$Type', $intern_49);
function UnauthedCachingStorage$lambda$27$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(999, 1, $intern_32, UnauthedCachingStorage$lambda$27$Type);
_.accept = function accept_102(arg0){
  $lambda$27_1(this.$$outer_0, arg0);
}
;
_.andThen = function andThen_56(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_storage_UnauthedCachingStorage$lambda$27$Type_2_classLit = createForClass('peergos.shared.storage', 'UnauthedCachingStorage/lambda$27$Type', 999);
function UnauthedCachingStorage$lambda$28$Type($$outer_0, blocks_1){
  this.$$outer_0 = $$outer_0;
  this.blocks_1 = blocks_1;
}

defineClass(3175, $wnd.Function, $intern_22, UnauthedCachingStorage$lambda$28$Type);
_.apply_0 = function apply_945(arg0){
  return $lambda$28_1(this.$$outer_0, this.blocks_1, arg0);
}
;
function UnauthedCachingStorage$lambda$29$Type(){
}

defineClass(1320, $wnd.Function, $intern_22, UnauthedCachingStorage$lambda$29$Type);
_.apply_0 = function apply_946(arg0){
  return $map(castTo(arg0, 12), makeLambdaFunction(UnauthedCachingStorage$2methodref$fromByteArray$Type.prototype.apply_0, UnauthedCachingStorage$2methodref$fromByteArray$Type, []));
}
;
function UnauthedCachingStorage$lambda$3$Type($$outer_0, owner_1, root_2, champKey_3, bat_4, committedRoot_5){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.root_2 = root_2;
  this.champKey_3 = champKey_3;
  this.bat_4 = bat_4;
  this.committedRoot_5 = committedRoot_5;
}

defineClass(996, 1, {}, UnauthedCachingStorage$lambda$3$Type);
_.get_0 = function get_98(){
  return $lambda$3_17(this.$$outer_0, this.owner_1, this.root_2, this.champKey_3, this.bat_4, this.committedRoot_5);
}
;
var Lpeergos_shared_storage_UnauthedCachingStorage$lambda$3$Type_2_classLit = createForClass('peergos.shared.storage', 'UnauthedCachingStorage/lambda$3$Type', 996);
function UnauthedCachingStorage$lambda$31$Type($$outer_0, blocks_1){
  this.$$outer_0 = $$outer_0;
  this.blocks_1 = blocks_1;
}

defineClass(3176, $wnd.Function, $intern_22, UnauthedCachingStorage$lambda$31$Type);
_.apply_0 = function apply_947(arg0){
  return $lambda$31_3(this.$$outer_0, this.blocks_1, arg0);
}
;
function UnauthedCachingStorage$lambda$4$Type($$outer_0, owner_1, root_2, champKey_3, bat_4, committedRoot_5){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.root_2 = root_2;
  this.champKey_3 = champKey_3;
  this.bat_4 = bat_4;
  this.committedRoot_5 = committedRoot_5;
}

defineClass(3166, $wnd.Function, $intern_22, UnauthedCachingStorage$lambda$4$Type);
_.apply_0 = function apply_948(arg0){
  return $lambda$4_12(this.$$outer_0, this.owner_1, this.root_2, this.champKey_3, this.bat_4, this.committedRoot_5);
}
;
function UnauthedCachingStorage$lambda$5$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3179, $wnd.Function, $intern_22, UnauthedCachingStorage$lambda$5$Type);
_.apply_0 = function apply_949(arg0){
  return $lambda$5_12(this.$$outer_0, arg0);
}
;
function UnauthedCachingStorage$lambda$6$Type($$outer_0, owner_1, champKey_2, bat_3, hasher_4, committedRoot_5, root_6){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.champKey_2 = champKey_2;
  this.bat_3 = bat_3;
  this.hasher_4 = hasher_4;
  this.committedRoot_5 = committedRoot_5;
  this.root_6 = root_6;
}

defineClass(997, 1, {}, UnauthedCachingStorage$lambda$6$Type);
_.get_0 = function get_99(){
  return $lambda$6_11(this.$$outer_0, this.owner_1, this.champKey_2, this.bat_3, this.hasher_4, this.committedRoot_5, this.root_6);
}
;
var Lpeergos_shared_storage_UnauthedCachingStorage$lambda$6$Type_2_classLit = createForClass('peergos.shared.storage', 'UnauthedCachingStorage/lambda$6$Type', 997);
function UnauthedCachingStorage$lambda$7$Type(){
}

defineClass(3180, $wnd.Function, $intern_22, UnauthedCachingStorage$lambda$7$Type);
_.apply_0 = function apply_950(arg0){
  return $flatMap($map(castTo(arg0, 12), makeLambdaFunction(UnauthedCachingStorage$0methodref$fromCbor$Type.prototype.apply_0, UnauthedCachingStorage$0methodref$fromCbor$Type, [])), makeLambdaFunction(UnauthedCachingStorage$lambda$9$Type.prototype.apply_0, UnauthedCachingStorage$lambda$9$Type, []));
}
;
function UnauthedCachingStorage$lambda$9$Type(){
}

defineClass(3186, $wnd.Function, $intern_22, UnauthedCachingStorage$lambda$9$Type);
_.apply_0 = function apply_951(arg0){
  return castTo(arg0, 121).tree;
}
;
function $toCbor_65(this$static){
  var props, transformed;
  props = new TreeMap;
  $put_6(props, 's', new CborObject$CborList(castTo($collect_0($map_0(this$static.signatures.stream(), makeLambdaFunction(WriteAuthRequest$0methodref$ctor$Type.prototype.apply_0, WriteAuthRequest$0methodref$ctor$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17)));
  $put_6(props, 'l', new CborObject$CborList(castTo($collect_0($map_0(this$static.sizes.stream(), makeLambdaFunction(WriteAuthRequest$1methodref$ctor$Type.prototype.apply_0, WriteAuthRequest$1methodref$ctor$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [IDENTITY_FINISH]))), 17)));
  $put_6(props, 'b', new CborObject$CborList(castTo($collect_0($map_0(this$static.batIds.stream(), makeLambdaFunction(WriteAuthRequest$2methodref$ctor$Type.prototype.apply_0, WriteAuthRequest$2methodref$ctor$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [IDENTITY_FINISH]))), 17)));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(props), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function WriteAuthRequest(signatures, sizes, batIds){
  this.signatures = signatures;
  this.sizes = sizes;
  this.batIds = batIds;
}

defineClass(1177, 1, $intern_67, WriteAuthRequest);
_.serialize = function serialize_93(){
  return $toByteArray_2($toCbor_65(this));
}
;
_.toCbor = function toCbor_91(){
  return $toCbor_65(this);
}
;
var Lpeergos_shared_storage_WriteAuthRequest_2_classLit = createForClass('peergos.shared.storage', 'WriteAuthRequest', 1177);
function WriteAuthRequest$0methodref$ctor$Type(){
}

defineClass(3561, $wnd.Function, $intern_22, WriteAuthRequest$0methodref$ctor$Type);
_.apply_0 = function apply_952(arg0){
  return new CborObject$CborByteArray(castTo(arg0, 11));
}
;
function WriteAuthRequest$1methodref$ctor$Type(){
}

defineClass(3562, $wnd.Function, $intern_22, WriteAuthRequest$1methodref$ctor$Type);
_.apply_0 = function apply_953(arg0){
  return new CborObject$CborLong(castTo(arg0, 69).value_0);
}
;
function WriteAuthRequest$2methodref$ctor$Type(){
}

defineClass(3563, $wnd.Function, $intern_22, WriteAuthRequest$2methodref$ctor$Type);
_.apply_0 = function apply_954(arg0){
  return new CborObject$CborList(castTo(arg0, 17));
}
;
function $clinit_Bat(){
  $clinit_Bat = emptyMethod;
  RAW_BLOCK_MAGIC_PREFIX = stampJavaTypeInfo(getClassLiteralForArray(B_classLit, 1), $intern_28, 8, 15, [113, 29, 16, -49, 61, 50, 47, 43]);
}

function $calculateId(this$static, h){
  return $thenApply($hash(h, $toByteArray_2($toCbor_66(this$static)), true), makeLambdaFunction(Bat$0methodref$ctor$Type.prototype.apply_0, Bat$0methodref$ctor$Type, []));
}

function $equals_21(this$static, obj){
  if (!instanceOf(obj, 61))
    return false;
  return equals_16(this$static.secret, castTo(obj, 61).secret);
}

function $generateAuth(this$static, block, sourceNode, datetime, batId, h){
  var req;
  if (batId.type == ($clinit_Multihash$Type() , id_3))
    throw toJs(new IllegalStateException_0('Cannot use identity multihash in S3 signatures!'));
  req = new S3Request(encode_4($toBytes(new Multihash(sourceNode.type, copyOfRange(sourceNode.hash_0, 0, sourceNode.hash_0.length)))), 'api/v0/block/get?arg=' + encode_4(block.toBytes()), ($clinit_Optional() , new Optional(checkCriticalNotNull(valueOf_1(300)))), ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP), encode_4(batId.toBytes()), datetime);
  return $thenApply(computeSignature(req, encode_6(($clinit_Multibase$Base() , Base58BTC), this$static.secret), h), makeLambdaFunction(Bat$lambda$1$Type.prototype.apply_0, Bat$lambda$1$Type, [datetime, batId]));
}

function $toCbor_66(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 's', new CborObject$CborByteArray(this$static.secret));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function Bat(secret){
  $clinit_Bat();
  if (secret.length != 32)
    throw toJs(new IllegalStateException_0('Invalid BAT length: ' + secret.length));
  this.secret = secret;
}

function createRawBlockPrefix(inlineBat, mirrorBat){
  $clinit_Bat();
  var bats, bout, cbor, e;
  bout = new ByteArrayOutputStream;
  try {
    $write(bout, RAW_BLOCK_MAGIC_PREFIX);
    bats = castTo(concat($map_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(singleton(inlineBat), 1)), makeLambdaFunction(Bat$1methodref$inline$Type.prototype.apply_0, Bat$1methodref$inline$Type, [])), mirrorBat.ref != null?new StreamImpl(null, new Spliterators$IteratorSpliterator(singleton(mirrorBat.ref), 1)):new StreamImpl$Empty(null)).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
    cbor = new CborObject$CborList(bats);
    $write(bout, $toByteArray_2(cbor));
    return $toByteArray(bout);
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 62)) {
      e = $e0;
      throw toJs(new RuntimeException_2(e));
    }
     else 
      throw toJs($e0);
  }
}

function fromCbor_75(cbor){
  $clinit_Bat();
  var m;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Incorrect cbor for Bat: ' + cbor));
  m = castTo(cbor, 18);
  return new Bat(castTo(castTo($get_0(m.values_0, new CborObject$CborString('s')), 7), 27).value_0);
}

function getRawBlockBats(block){
  $clinit_Bat();
  var bin, magicLength;
  magicLength = RAW_BLOCK_MAGIC_PREFIX.length;
  if (!equalArrays_0(block, magicLength, RAW_BLOCK_MAGIC_PREFIX, magicLength))
    return $clinit_Collections() , $clinit_Collections() , EMPTY_LIST;
  bin = new ByteArrayInputStream(block);
  $skip(bin, magicLength);
  return $map_2(castTo(read_9(bin, block.length), 21), makeLambdaFunction(Bat$2methodref$fromCbor$Type.prototype.apply_0, Bat$2methodref$fromCbor$Type, []));
}

function lambda$1_9(expirySeconds_0, datetime_1, batId_2, signature_3){
  $clinit_Bat();
  return new BlockAuth(hexToBytes(signature_3), expirySeconds_0, datetime_1, batId_2);
}

function removeRawBlockBatPrefix(block){
  $clinit_Bat();
  var bin, magicLength, start_0;
  magicLength = RAW_BLOCK_MAGIC_PREFIX.length;
  if (!equalArrays_0(block, magicLength, RAW_BLOCK_MAGIC_PREFIX, magicLength))
    return block;
  bin = new ByteArrayInputStream(block);
  $skip(bin, magicLength);
  start_0 = magicLength + read_9(bin, block.length).serialize().length;
  return copyOfRange(block, start_0, block.length);
}

defineClass(61, 1, {7:1, 61:1}, Bat);
_.serialize = function serialize_94(){
  return $toByteArray_2($toCbor_66(this));
}
;
_.equals_0 = function equals_85(obj){
  return $equals_21(this, obj);
}
;
_.hashCode_1 = function hashCode_83(){
  return hashCode_17(this.secret);
}
;
_.toCbor = function toCbor_92(){
  return $toCbor_66(this);
}
;
var RAW_BLOCK_MAGIC_PREFIX;
var Lpeergos_shared_storage_auth_Bat_2_classLit = createForClass('peergos.shared.storage.auth', 'Bat', 61);
function Bat$0methodref$ctor$Type(){
}

defineClass(1303, $wnd.Function, $intern_22, Bat$0methodref$ctor$Type);
_.apply_0 = function apply_955(arg0){
  return new BatId(castTo(arg0, 44));
}
;
function Bat$1methodref$inline$Type(){
}

defineClass(2560, $wnd.Function, $intern_22, Bat$1methodref$inline$Type);
_.apply_0 = function apply_956(arg0){
  return inline(castTo(arg0, 61));
}
;
function Bat$2methodref$fromCbor$Type(){
}

defineClass(2561, $wnd.Function, $intern_22, Bat$2methodref$fromCbor$Type);
_.apply_0 = function apply_957(arg0){
  return fromCbor_76(castTo(arg0, 7));
}
;
function Bat$lambda$1$Type(datetime_1, batId_2){
  this.expirySeconds_0 = 300;
  this.datetime_1 = datetime_1;
  this.batId_2 = batId_2;
}

defineClass(2559, $wnd.Function, $intern_22, Bat$lambda$1$Type);
_.apply_0 = function apply_958(arg0){
  return lambda$1_9(this.expirySeconds_0, this.datetime_1, this.batId_2, arg0);
}
;
_.expirySeconds_0 = 0;
function BatId(id_0){
  this.id_0 = id_0;
}

function fromCbor_76(cbor){
  if (!instanceOf(cbor, 27))
    throw toJs(new IllegalStateException_0('Incorrect cbor for BatId: ' + cbor));
  return new BatId(cast(castTo(cbor, 27).value_0));
}

function inline(b){
  return new BatId(new Cid(1, ($clinit_Cid$Codec() , Raw), ($clinit_Multihash$Type() , id_3), b.secret));
}

function sha256_1(b, h){
  return $thenApply($sha256(h, b.secret), makeLambdaFunction(BatId$lambda$0$Type.prototype.apply_0, BatId$lambda$0$Type, []));
}

defineClass(167, 1, {7:1, 167:1}, BatId);
_.serialize = function serialize_95(){
  return $toByteArray_2(new CborObject$CborByteArray(this.id_0.toBytes()));
}
;
_.equals_0 = function equals_86(o){
  if (this === o)
    return true;
  if (!instanceOf(o, 167))
    return false;
  return this.id_0.equals(castTo(o, 167).id_0);
}
;
_.hashCode_1 = function hashCode_84(){
  return this.id_0.hashCode();
}
;
_.toCbor = function toCbor_93(){
  return new CborObject$CborByteArray(this.id_0.toBytes());
}
;
_.toString_0 = function toString_78(){
  return this.id_0.toString();
}
;
var Lpeergos_shared_storage_auth_BatId_2_classLit = createForClass('peergos.shared.storage.auth', 'BatId', 167);
function BatId$lambda$0$Type(){
}

defineClass(2562, $wnd.Function, $intern_22, BatId$lambda$0$Type);
_.apply_0 = function apply_959(arg0){
  return new BatId(new Cid(1, ($clinit_Cid$Codec() , Raw), ($clinit_Multihash$Type() , sha2_256), castTo(arg0, 11)));
}
;
function BatList(bats){
  this.bats = bats;
}

function fromCbor_77(cbor){
  if (!instanceOf(cbor, 21))
    throw toJs(new IllegalStateException_0('Invalid cbor for bat list: ' + cbor));
  return new BatList($map_2(castTo(cbor, 21), makeLambdaFunction(BatList$0methodref$fromCbor$Type.prototype.apply_0, BatList$0methodref$fromCbor$Type, [])));
}

defineClass(370, 1, {7:1, 370:1}, BatList);
_.serialize = function serialize_96(){
  return $toByteArray_2(new CborObject$CborList(this.bats));
}
;
_.toCbor = function toCbor_94(){
  return new CborObject$CborList(this.bats);
}
;
var Lpeergos_shared_storage_auth_BatList_2_classLit = createForClass('peergos.shared.storage.auth', 'BatList', 370);
function BatList$0methodref$fromCbor$Type(){
}

defineClass(3445, $wnd.Function, $intern_22, BatList$0methodref$fromCbor$Type);
_.apply_0 = function apply_960(arg0){
  return fromCbor_78(castTo(arg0, 7));
}
;
function $toCbor_67(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'b', this$static.bat);
  $put_6(state, 'i', new CborObject$CborByteArray(this$static.id_0.toBytes()));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function BatWithId(bat, id_0){
  if (id_0.type == ($clinit_Multihash$Type() , id_3))
    throw toJs(new IllegalStateException_0('Cannot use identity cid here!'));
  if (id_0.codec != ($clinit_Cid$Codec() , Raw))
    throw toJs(new IllegalStateException_0('BatId codec must be Raw!'));
  this.bat = bat;
  this.id_0 = id_0;
}

function fromCbor_78(cbor){
  var m;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Incorrect cbor for Bat: ' + cbor));
  m = castTo(cbor, 18);
  return new BatWithId(castTo($get_13(m, 'b', makeLambdaFunction(BatWithId$0methodref$fromCbor$Type.prototype.apply_0, BatWithId$0methodref$fromCbor$Type, [])), 61), castTo($get_13(m, 'i', makeLambdaFunction(BatWithId$lambda$1$Type.prototype.apply_0, BatWithId$lambda$1$Type, [])), 44));
}

defineClass(112, 1, {7:1, 112:1}, BatWithId);
_.serialize = function serialize_97(){
  return $toByteArray_2($toCbor_67(this));
}
;
_.equals_0 = function equals_87(obj){
  if (!instanceOf(obj, 112))
    return false;
  return $equals_21(this.bat, castTo(obj, 112).bat) && this.id_0.equals(castTo(obj, 112).id_0);
}
;
_.hashCode_1 = function hashCode_85(){
  return hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.bat, this.id_0]));
}
;
_.toCbor = function toCbor_95(){
  return $toCbor_67(this);
}
;
var Lpeergos_shared_storage_auth_BatWithId_2_classLit = createForClass('peergos.shared.storage.auth', 'BatWithId', 112);
function BatWithId$0methodref$fromCbor$Type(){
}

defineClass(3272, $wnd.Function, $intern_22, BatWithId$0methodref$fromCbor$Type);
_.apply_0 = function apply_961(arg0){
  return fromCbor_75(castTo(arg0, 7));
}
;
function BatWithId$lambda$1$Type(){
}

defineClass(3273, $wnd.Function, $intern_22, BatWithId$lambda$1$Type);
_.apply_0 = function apply_962(arg0){
  return cast(castTo(castTo(arg0, 7), 27).value_0);
}
;
function $toCbor_68(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'e', new CborObject$CborLong(this$static.expirySeconds));
  $put_6(state, 't', new CborObject$CborLong(timeToPackedLong(this$static.awsDatetime)));
  $put_6(state, 'b', new CborObject$CborByteArray(this$static.batId.toBytes()));
  $put_6(state, 's', new CborObject$CborByteArray(this$static.signature));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function BlockAuth(signature, expirySeconds, awsDatetime, batId){
  if (batId.type == ($clinit_Multihash$Type() , id_3))
    throw toJs(new IllegalStateException_0('Cannot inline BAT in auth!'));
  this.signature = signature;
  this.expirySeconds = expirySeconds;
  this.awsDatetime = awsDatetime;
  this.batId = batId;
}

function timeToPackedLong(t){
  var day, hour, minute, month, second, year;
  year = __parseAndValidateInt(t.substr(0, 4), 10) - 2000;
  month = __parseAndValidateInt(t.substr(4, 2), 10);
  day = __parseAndValidateInt(t.substr(6, 2), 10);
  hour = __parseAndValidateInt(t.substr(9, 2), 10);
  minute = __parseAndValidateInt(t.substr(11, 2), 10);
  second = __parseAndValidateInt(t.substr(13, 2), 10);
  return second | minute << 6 | hour << 12 | day << 17 | month << 22 | year << 26;
}

defineClass(374, 1, {7:1, 374:1}, BlockAuth);
_.serialize = function serialize_98(){
  return $toByteArray_2($toCbor_68(this));
}
;
_.toCbor = function toCbor_96(){
  return $toCbor_68(this);
}
;
_.expirySeconds = 0;
var Lpeergos_shared_storage_auth_BlockAuth_2_classLit = createForClass('peergos.shared.storage.auth', 'BlockAuth', 374);
function $clinit_HttpBatCave(){
  $clinit_HttpBatCave = emptyMethod;
  $clinit_Logger();
  getLogger();
}

function $addBat_0(poster, username, id_0, bat, auth){
  return $thenApply($get_28(poster, 'peergos/v0/bats/addBat?username=' + username + '&batid=' + id_0.id_0 + '&bat=' + encode_6(($clinit_Multibase$Base() , Base58BTC), bat.secret) + '&auth=' + bytesToHex(auth), ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)), makeLambdaFunction(HttpBatCave$lambda$2$Type.prototype.apply_0, HttpBatCave$lambda$2$Type, []));
}

function HttpBatCave(direct){
  $clinit_HttpBatCave();
  this.direct = direct;
}

defineClass(498, 1, {}, HttpBatCave);
_.addBat = function addBat_1(username, id_0, bat, identity){
  return $addBat(this, username, id_0, bat, identity);
}
;
_.getUserBats_0 = function getUserBats_1(username, identity){
  return $getUserBats_0(this, username, identity);
}
;
_.addBat_0 = function addBat_2(username, id_0, bat, auth){
  return $addBat_0(this.direct, username, id_0, bat, auth);
}
;
_.getUserBats_1 = function getUserBats_2(username, auth){
  return $thenApply($get_28(this.direct, 'peergos/v0/bats/getUserBats?username=' + username + '&auth=' + bytesToHex(auth), ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)), makeLambdaFunction(HttpBatCave$lambda$0$Type.prototype.apply_0, HttpBatCave$lambda$0$Type, []));
}
;
var Lpeergos_shared_storage_auth_HttpBatCave_2_classLit = createForClass('peergos.shared.storage.auth', 'HttpBatCave', 498);
function HttpBatCave$0methodref$fromCbor$Type(){
}

defineClass(3130, $wnd.Function, $intern_22, HttpBatCave$0methodref$fromCbor$Type);
_.apply_0 = function apply_963(arg0){
  return fromCbor_78(castTo(arg0, 7));
}
;
function HttpBatCave$lambda$0$Type(){
}

defineClass(3128, $wnd.Function, $intern_22, HttpBatCave$lambda$0$Type);
_.apply_0 = function apply_964(arg0){
  return $clinit_HttpBatCave() , castTo($collect_0($map_0(castTo(fromByteArray(castTo(arg0, 11)), 21).value_0.stream(), makeLambdaFunction(HttpBatCave$0methodref$fromCbor$Type.prototype.apply_0, HttpBatCave$0methodref$fromCbor$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
}
;
function HttpBatCave$lambda$2$Type(){
}

defineClass(3129, $wnd.Function, $intern_22, HttpBatCave$lambda$2$Type);
_.apply_0 = function apply_965(arg0){
  return $clinit_HttpBatCave() , $clinit_Boolean() , castTo(deserialize(new CborDecoder(new ByteArrayInputStream(castTo(arg0, 11))), castTo(arg0, 11).length), 63).value_0?true:false;
}
;
function $getCanonicalHeaders(this$static){
  var e, e$iterator, originalHeaders, res;
  res = new TreeMap;
  originalHeaders = $getOriginalHeaders(this$static);
  for (e$iterator = new LinkedHashMap$EntrySet$EntryIterator(new LinkedHashMap$EntrySet(originalHeaders)); e$iterator.next_0 != e$iterator.this$11.this$01.head;) {
    e = $next_3(e$iterator);
    $put_6(res, castToString(e.key).toLowerCase(), castToString(e.value_0));
  }
  return res;
}

function $getOriginalHeaders(this$static){
  var res;
  res = new LinkedHashMap;
  $put_5(res, 'Host', this$static.host);
  if (!this$static.useAuthHeader)
    return res;
  $put_5(res, 'x-amz-date', this$static.datetime);
  $put_5(res, 'x-amz-content-sha256', this$static.contentSha256);
  $clinit_Collections();
  $clinit_Collections$EmptyListIterator();
  this$static.allowPublicReads && $put_5(res, 'x-amz-acl', 'public-read');
  return res;
}

function $getQueryParameters(this$static){
  var res;
  res = new TreeMap;
  $putAll(res, this$static.extraQueryParameters);
  if (!this$static.useAuthHeader) {
    $put_6(res, 'X-Amz-Algorithm', 'AWS4-HMAC-SHA256');
    $put_6(res, 'X-Amz-Credential', this$static.accessKeyId + '/' + this$static.shortDate + '/' + this$static.region + '/s3/aws4_request');
    $put_6(res, 'X-Amz-Date', this$static.datetime);
    $ifPresent(this$static.expiresSeconds, new S3Request$lambda$11$Type(res));
    $put_6(res, 'X-Amz-SignedHeaders', 'host');
  }
  return res;
}

function $toCanonicalRequest(this$static){
  var e, e$iterator, headers, res;
  res = new StringBuilder;
  $append_4(res, this$static.verb + '\n');
  $append_4(res, '/' + this$static.key + '\n');
  $append_4(res, castToString($collect_0($map_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet($getQueryParameters(this$static)), 1)), makeLambdaFunction(S3Request$lambda$9$Type.prototype.apply_0, S3Request$lambda$9$Type, [])), of_3(new Collectors$lambda$15$Type('&', ''), new Collectors$9methodref$add$Type, new Collectors$10methodref$merge$Type, makeLambdaFunction(Collectors$11methodref$toString$Type.prototype.apply_0, Collectors$11methodref$toString$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [])))));
  res.string += '\n';
  headers = $getCanonicalHeaders(this$static);
  for (e$iterator = new TreeMap$EntryIterator((new TreeMap$EntrySet(headers)).this$01_0); $hasNext(e$iterator.iter);) {
    e = e$iterator.last = castTo($next(e$iterator.iter), 40);
    $append_4(res, castToString(e.getKey()).toLowerCase() + ':' + castToString(e.getValue()) + '\n');
  }
  res.string += '\n';
  $append_4(res, castToString($collect_0($sorted(new StreamImpl(null, new SortedSet$1(new AbstractNavigableMap$NavigableKeySet($getCanonicalHeaders(this$static))))), of_3(new Collectors$lambda$15$Type(';', ''), new Collectors$9methodref$add$Type, new Collectors$10methodref$merge$Type, makeLambdaFunction(Collectors$11methodref$toString$Type.prototype.apply_0, Collectors$11methodref$toString$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [])))) + '\n');
  $append_4(res, this$static.contentSha256);
  return res.string;
}

function S3Request(host, key, expiresSeconds, extraQueryParameters, accessKeyId, datetime){
  if (datetime.length != 16)
    throw toJs(new IllegalStateException_0('Invalid datetime: ' + datetime));
  this.verb = 'GET';
  this.host = host;
  this.key = key;
  this.contentSha256 = 'UNSIGNED-PAYLOAD';
  this.expiresSeconds = expiresSeconds;
  this.allowPublicReads = false;
  this.useAuthHeader = true;
  this.extraQueryParameters = extraQueryParameters;
  this.accessKeyId = accessKeyId;
  this.region = 'eu-central-1';
  this.shortDate = datetime.substr(0, 8);
  this.datetime = datetime;
}

function computeSignature(policy, s3SecretKey, hasher){
  var shortDate, stringToSign, res;
  stringToSign = (res = new StringBuilder , res.string += 'AWS4-HMAC-SHA256\n' , $append_4(res, policy.datetime + '\n') , $append_4(res, policy.shortDate + '/' + policy.region + '/s3/aws4_request' + '\n') , $append_4(res, bytesToHex(sha256($getBytes($toCanonicalRequest(policy), ($clinit_EmulatedCharset() , UTF_8_0))))) , res.string);
  shortDate = policy.shortDate;
  return $thenApply($thenCompose($thenCompose($thenCompose($thenCompose($hmacSha256(hasher, $getBytes('AWS4' + s3SecretKey, UTF_8_0), $getBytes(shortDate, UTF_8_0)), makeLambdaFunction(S3Request$lambda$4$Type.prototype.apply_0, S3Request$lambda$4$Type, [hasher, policy])), makeLambdaFunction(S3Request$lambda$5$Type.prototype.apply_0, S3Request$lambda$5$Type, [hasher])), makeLambdaFunction(S3Request$lambda$6$Type.prototype.apply_0, S3Request$lambda$6$Type, [hasher])), makeLambdaFunction(S3Request$lambda$7$Type.prototype.apply_0, S3Request$lambda$7$Type, [hasher, stringToSign])), makeLambdaFunction(S3Request$0methodref$bytesToHex$Type.prototype.apply_0, S3Request$0methodref$bytesToHex$Type, []));
}

function lambda$4_3(hasher_0, policy_1, dateKey_2){
  return $hmacSha256(hasher_0, dateKey_2, $getBytes(policy_1.region, ($clinit_EmulatedCharset() , UTF_8_0)));
}

function lambda$7_5(hasher_0, stringToSign_1, signingKey_2){
  return $hmacSha256(hasher_0, signingKey_2, $getBytes(stringToSign_1, ($clinit_EmulatedCharset() , UTF_8_0)));
}

function urlEncode(in_0){
  var e;
  try {
    return encode_1(in_0);
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 136)) {
      e = $e0;
      throw toJs(new RuntimeException_2(e));
    }
     else 
      throw toJs($e0);
  }
}

defineClass(1165, 1, {}, S3Request);
_.allowPublicReads = false;
_.useAuthHeader = false;
var Lpeergos_shared_storage_auth_S3Request_2_classLit = createForClass('peergos.shared.storage.auth', 'S3Request', 1165);
function S3Request$0methodref$bytesToHex$Type(){
}

defineClass(3542, $wnd.Function, $intern_22, S3Request$0methodref$bytesToHex$Type);
_.apply_0 = function apply_966(arg0){
  return bytesToHex(castTo(arg0, 11));
}
;
function S3Request$lambda$11$Type(res_0){
  this.res_0 = res_0;
}

defineClass(1166, 1, $intern_32, S3Request$lambda$11$Type);
_.accept = function accept_103(arg0){
  $put_6(this.res_0, 'X-Amz-Expires', '' + castTo(arg0, 100));
}
;
_.andThen = function andThen_57(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_storage_auth_S3Request$lambda$11$Type_2_classLit = createForClass('peergos.shared.storage.auth', 'S3Request/lambda$11$Type', 1166);
function S3Request$lambda$4$Type(hasher_0, policy_1){
  this.hasher_0 = hasher_0;
  this.policy_1 = policy_1;
}

defineClass(3538, $wnd.Function, $intern_22, S3Request$lambda$4$Type);
_.apply_0 = function apply_967(arg0){
  return lambda$4_3(this.hasher_0, this.policy_1, arg0);
}
;
function S3Request$lambda$5$Type(hasher_0){
  this.hasher_0 = hasher_0;
}

defineClass(3539, $wnd.Function, $intern_22, S3Request$lambda$5$Type);
_.apply_0 = function apply_968(arg0){
  return $hmacSha256(this.hasher_0, castTo(arg0, 11), ($clinit_EmulatedCharset() , UTF_8_0).getBytes('s3'));
}
;
function S3Request$lambda$6$Type(hasher_0){
  this.hasher_0 = hasher_0;
}

defineClass(3540, $wnd.Function, $intern_22, S3Request$lambda$6$Type);
_.apply_0 = function apply_969(arg0){
  return $hmacSha256(this.hasher_0, castTo(arg0, 11), ($clinit_EmulatedCharset() , UTF_8_0).getBytes('aws4_request'));
}
;
function S3Request$lambda$7$Type(hasher_0, stringToSign_1){
  this.hasher_0 = hasher_0;
  this.stringToSign_1 = stringToSign_1;
}

defineClass(3541, $wnd.Function, $intern_22, S3Request$lambda$7$Type);
_.apply_0 = function apply_970(arg0){
  return lambda$7_5(this.hasher_0, this.stringToSign_1, arg0);
}
;
function S3Request$lambda$9$Type(){
}

defineClass(3543, $wnd.Function, $intern_22, S3Request$lambda$9$Type);
_.apply_0 = function apply_971(arg0){
  return urlEncode(castToString(castTo(arg0, 40).getKey())) + '=' + urlEncode(castToString(castTo(arg0, 40).getValue()));
}
;
function $toCbor_69(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'f', new CborObject$CborBoolean(this$static.free));
  $put_6(state, 'p', new CborObject$CborBoolean(this$static.paid));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function AllowedSignups(free, paid){
  this.free = free;
  this.paid = paid;
}

function fromCbor_79(cbor){
  var m, val, val0;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Incorrect cbor for CryptreeNode: ' + cbor));
  m = castTo(cbor, 18);
  return new AllowedSignups((val0 = castTo(castTo($get_0(m.values_0, new CborObject$CborString('f')), 7), 63) , !!val0 && val0.value_0), (val = castTo(castTo($get_0(m.values_0, new CborObject$CborString('p')), 7), 63) , !!val && val.value_0));
}

defineClass(909, 1, $intern_67, AllowedSignups);
_.serialize = function serialize_99(){
  return $toByteArray_2($toCbor_69(this));
}
;
_.toCbor = function toCbor_97(){
  return $toCbor_69(this);
}
;
_.free = false;
_.paid = false;
var Lpeergos_shared_storage_controller_AllowedSignups_2_classLit = createForClass('peergos.shared.storage.controller', 'AllowedSignups', 909);
function $approveSpaceRequest(this$static, adminIdentity, instanceIdentity, signedRequest){
  return $thenApply($get_28(this$static.poster, 'peergos/v0/admin/approve?admin=' + encode_12(adminIdentity.target.toString()) + '&instance=' + encode_12(instanceIdentity.toString()) + '&req=' + bytesToHex(signedRequest), ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)), makeLambdaFunction(HttpInstanceAdmin$lambda$3$Type.prototype.apply_0, HttpInstanceAdmin$lambda$3$Type, []));
}

function $getPendingSpaceRequests(this$static, adminIdentity, instanceIdentity, signedTime){
  return $thenApply($get_28(this$static.poster, 'peergos/v0/admin/pending?admin=' + encode_12(adminIdentity.target.toString()) + '&instance=' + encode_12(instanceIdentity.toString()) + '&auth=' + bytesToHex(signedTime), ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)), makeLambdaFunction(HttpInstanceAdmin$lambda$1$Type.prototype.apply_0, HttpInstanceAdmin$lambda$1$Type, []));
}

function HttpInstanceAdmin(poster){
  this.poster = poster;
}

function encode_12(component){
  var e;
  try {
    return encode_1(component);
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 136)) {
      e = $e0;
      throw toJs(new RuntimeException_2(e));
    }
     else 
      throw toJs($e0);
  }
}

defineClass(499, 1, {}, HttpInstanceAdmin);
_.acceptingSignups = function acceptingSignups(){
  return $thenApply($get_28(this.poster, 'peergos/v0/admin/signups', ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)), makeLambdaFunction(HttpInstanceAdmin$lambda$4$Type.prototype.apply_0, HttpInstanceAdmin$lambda$4$Type, []));
}
;
_.addToWaitList = function addToWaitList(email){
  return $thenApply($get_28(this.poster, 'peergos/v0/admin/waitlist?email=' + email, ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)), makeLambdaFunction(HttpInstanceAdmin$lambda$5$Type.prototype.apply_0, HttpInstanceAdmin$lambda$5$Type, []));
}
;
var Lpeergos_shared_storage_controller_HttpInstanceAdmin_2_classLit = createForClass('peergos.shared.storage.controller', 'HttpInstanceAdmin', 499);
function HttpInstanceAdmin$0methodref$fromCbor$Type(){
}

defineClass(3135, $wnd.Function, $intern_22, HttpInstanceAdmin$0methodref$fromCbor$Type);
_.apply_0 = function apply_972(arg0){
  return fromCbor_73(castTo(arg0, 7));
}
;
function HttpInstanceAdmin$lambda$1$Type(){
}

defineClass(3131, $wnd.Function, $intern_22, HttpInstanceAdmin$lambda$1$Type);
_.apply_0 = function apply_973(arg0){
  return $map_2(castTo(deserialize(new CborDecoder(new ByteArrayInputStream(castTo(arg0, 11))), castTo(arg0, 11).length), 21), makeLambdaFunction(HttpInstanceAdmin$0methodref$fromCbor$Type.prototype.apply_0, HttpInstanceAdmin$0methodref$fromCbor$Type, []));
}
;
function HttpInstanceAdmin$lambda$3$Type(){
}

defineClass(3132, $wnd.Function, $intern_22, HttpInstanceAdmin$lambda$3$Type);
_.apply_0 = function apply_974(arg0){
  return $clinit_Boolean() , castTo(deserialize(new CborDecoder(new ByteArrayInputStream(castTo(arg0, 11))), castTo(arg0, 11).length), 63).value_0?true:false;
}
;
function HttpInstanceAdmin$lambda$4$Type(){
}

defineClass(3133, $wnd.Function, $intern_22, HttpInstanceAdmin$lambda$4$Type);
_.apply_0 = function apply_975(arg0){
  return fromCbor_79(deserialize(new CborDecoder(new ByteArrayInputStream(castTo(arg0, 11))), castTo(arg0, 11).length));
}
;
function HttpInstanceAdmin$lambda$5$Type(){
}

defineClass(3134, $wnd.Function, $intern_22, HttpInstanceAdmin$lambda$5$Type);
_.apply_0 = function apply_976(arg0){
  return $clinit_Boolean() , castTo(deserialize(new CborDecoder(new ByteArrayInputStream(castTo(arg0, 11))), castTo(arg0, 11).length), 63).value_0?true:false;
}
;
function $createDirectoryInternal(this$static, relativePath, username){
  var base;
  base = $resolve(get_176(username == null?this$static.ctx.username:username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])), this$static.appDataDirectoryWithoutUser.pathString);
  return $thenCompose($getByPath_6(this$static.ctx, base), makeLambdaFunction(App$lambda$25$Type.prototype.apply_0, App$lambda$25$Type, [this$static, relativePath]));
}

function $deleteInternal(this$static, relativePath, username){
  var path;
  path = $fullPath(this$static, relativePath, username);
  return $thenCompose($getByPath_6(this$static.ctx, $getParent(path)), makeLambdaFunction(App$lambda$18$Type.prototype.apply_0, App$lambda$18$Type, [this$static, path]));
}

function $dirInternal(this$static, relativePath, username){
  var path;
  path = !relativePath?$resolve(get_176(username == null?this$static.ctx.username:username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])), this$static.appDataDirectoryWithoutUser.pathString):$fullPath(this$static, relativePath, username);
  return $thenCompose($getByPath_6(this$static.ctx, path), makeLambdaFunction(App$lambda$21$Type.prototype.apply_0, App$lambda$21$Type, [this$static]));
}

function $fullPath(this$static, path, username){
  var relativePath, result;
  relativePath = ($validatePath(path) , get_176(path.pathString, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])));
  result = $resolve($resolve(get_176(username == null?this$static.ctx.username:username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])), this$static.appDataDirectoryWithoutUser.pathString), relativePath.pathString);
  return result;
}

function $lambda$10_6(this$static, path_1, data_2, pathWithoutUsername_3, userRoot_3){
  return $thenCompose($getOrMkdirs((checkCriticalElement(userRoot_3.ref != null) , castTo(userRoot_3.ref, 19)), $getParent(pathWithoutUsername_3), this$static.ctx.network, false, $map(this$static.ctx.mirrorBat, makeLambdaFunction(UserContext$13methodref$id$Type.prototype.apply_0, UserContext$13methodref$id$Type, [])), this$static.ctx.crypto), makeLambdaFunction(App$lambda$11$Type.prototype.apply_0, App$lambda$11$Type, [this$static, path_1, data_2]));
}

function $lambda$11_5(this$static, path_1, data_2, dir_2){
  return $thenApply($uploadOrReplaceFile(dir_2, $getFileName(path_1).pathString, new AsyncReader$ArrayBacked(data_2), data_2.length, this$static.ctx.network, this$static.ctx.crypto, makeLambdaFunction(App$lambda$12$Type.prototype.accept_5, App$lambda$12$Type, [])), makeLambdaFunction(App$lambda$13$Type.prototype.apply_0, App$lambda$13$Type, []));
}

function $lambda$14_4(this$static, path_1, optFile_1){
  var len;
  if (optFile_1.ref == null) {
    throw toJs(new IllegalStateException_0('File not found:' + path_1.pathString));
  }
  len = $getSize((checkCriticalElement(optFile_1.ref != null) , castTo(optFile_1.ref, 19)));
  return $thenCompose($getInputStream((checkCriticalElement(optFile_1.ref != null) , castTo(optFile_1.ref, 19)), this$static.ctx.network, this$static.ctx.crypto, len, makeLambdaFunction(App$lambda$15$Type.prototype.accept_5, App$lambda$15$Type, [])), makeLambdaFunction(App$lambda$16$Type.prototype.apply_0, App$lambda$16$Type, [len]));
}

function $lambda$18_4(this$static, path_1, dirOpt_1){
  var dir_0, filename, pathToFile;
  if (dirOpt_1.ref == null) {
    throw toJs(new IllegalStateException_0('File not found:' + path_1.pathString));
  }
  dir_0 = (checkCriticalElement(dirOpt_1.ref != null) , castTo(dirOpt_1.ref, 19));
  filename = $getFileName(path_1).pathString;
  pathToFile = $resolve(path_1, filename);
  return $thenCompose($getChild_2(dir_0, filename, this$static.ctx.network), makeLambdaFunction(App$lambda$19$Type.prototype.apply_0, App$lambda$19$Type, [this$static, dir_0, pathToFile]));
}

function $lambda$19_5(this$static, dir_1, pathToFile_2, file_2){
  return $thenApply($remove_16((checkCriticalElement(file_2.ref != null) , castTo(file_2.ref, 19)), dir_1, pathToFile_2, this$static.ctx), makeLambdaFunction(App$lambda$20$Type.prototype.apply_0, App$lambda$20$Type, []));
}

function $lambda$21_5(this$static, dirOpt_0){
  if (dirOpt_0.ref == null) {
    return new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_LIST));
  }
  return $thenApply($getChildren_4((checkCriticalElement(dirOpt_0.ref != null) , castTo(dirOpt_0.ref, 19)), this$static.ctx.crypto.hasher, this$static.ctx.network), makeLambdaFunction(App$lambda$22$Type.prototype.apply_0, App$lambda$22$Type, []));
}

function $lambda$25_1(this$static, relativePath_1, baseOpt_1){
  return $thenApply($getOrMkdirs((checkCriticalElement(baseOpt_1.ref != null) , castTo(baseOpt_1.ref, 19)), ($validatePath(relativePath_1) , get_176(relativePath_1.pathString, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, []))), this$static.ctx.network, false, $map(this$static.ctx.mirrorBat, makeLambdaFunction(UserContext$13methodref$id$Type.prototype.apply_0, UserContext$13methodref$id$Type, [])), this$static.ctx.crypto), makeLambdaFunction(App$lambda$26$Type.prototype.apply_0, App$lambda$26$Type, []));
}

function $lambda$6_12(this$static, path_1, data_2, pathWithoutUsername_3, userRoot_3){
  return $thenCompose($getOrMkdirs((checkCriticalElement(userRoot_3.ref != null) , castTo(userRoot_3.ref, 19)), $getParent(pathWithoutUsername_3), this$static.ctx.network, false, $map(this$static.ctx.mirrorBat, makeLambdaFunction(UserContext$13methodref$id$Type.prototype.apply_0, UserContext$13methodref$id$Type, [])), this$static.ctx.crypto), makeLambdaFunction(App$lambda$7$Type.prototype.apply_0, App$lambda$7$Type, [this$static, path_1, data_2]));
}

function $lambda$7_6(this$static, path_1, data_2, dir_2){
  return $thenApply($appendFileJS(dir_2, $getFileName(path_1).pathString, new AsyncReader$ArrayBacked(data_2), 0, data_2.length, this$static.ctx.network, this$static.ctx.crypto, makeLambdaFunction(App$lambda$8$Type.prototype.accept_5, App$lambda$8$Type, [])), makeLambdaFunction(App$lambda$9$Type.prototype.apply_0, App$lambda$9$Type, []));
}

function $readInternal(this$static, relativePath, username){
  var path;
  path = $fullPath(this$static, relativePath, username);
  return $thenCompose($getByPath_6(this$static.ctx, path), makeLambdaFunction(App$lambda$14$Type.prototype.apply_0, App$lambda$14$Type, [this$static, path]));
}

function $validatePath(path){
  var i, parts, pathAsString;
  pathAsString = $replace($trim(path.pathString));
  if ($equals_0(pathAsString.substr(0, 2), '//')) {
    throw toJs(new IllegalStateException_0('Path must be relative!'));
  }
  parts = castTo($collect_0($filter(stream_5($split(pathAsString, '/')), new App$lambda$5$Type(pathAsString)), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  for (i = 0; i < parts.size(); i++) {
    if ($equals_0(castToString(parts.getAtIndex(i)), '..')) {
      throw toJs(new IllegalStateException_0('Path element .. not allowed!'));
    }
  }
}

function $writeInternal(this$static, relativePath, data_0, username){
  var path, pathWithoutUsername;
  path = $fullPath(this$static, relativePath, username);
  return pathWithoutUsername = $subpath(path, 1, $getNameCount(path)) , $thenCompose($getByPath_4(this$static.ctx, this$static.ctx.username), makeLambdaFunction(App$lambda$10$Type.prototype.apply_0, App$lambda$10$Type, [this$static, path, data_0, pathWithoutUsername]));
}

function App(ctx, appDataDirectory){
  this.ctx = ctx;
  $validatePath(appDataDirectory);
  this.appDataDirectoryWithoutUser = appDataDirectory;
}

function getAppSubdomain(path, h){
  return $thenApply($bareHash(h, $getBytes(get_176(path, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])).pathString, ($clinit_EmulatedCharset() , UTF_8_0))), makeLambdaFunction(App$lambda$0$Type.prototype.apply_0, App$lambda$0$Type, []));
}

function getAppSubdomainWithAnonymityClass(appRootPath, anonymityClass, h){
  var anonClass, root;
  root = $bareHash(h, $getBytes(get_176(appRootPath, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])).pathString, ($clinit_EmulatedCharset() , UTF_8_0)));
  anonClass = $bareHash(h, $getBytes(get_176(anonymityClass, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])).pathString, UTF_8_0));
  return $thenApply($thenCompose(combineAllInOrder(castTo($collect_0(of_5(stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_concurrent_CompletableFuture_2_classLit, 1), $intern_0, 6, 0, [root, anonClass])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 54)), makeLambdaFunction(App$lambda$1$Type.prototype.apply_0, App$lambda$1$Type, [h])), makeLambdaFunction(App$lambda$2$Type.prototype.apply_0, App$lambda$2$Type, []));
}

function init_2(ctx, appName){
  var app, appDataDir;
  appDataDir = get_176('.apps', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [appName, 'data']));
  app = new App(ctx, appDataDir);
  return ctx.username == null?new CompletableFuture_0(app):$thenApply($thenCompose($thenApply($getByPath_4(ctx, '/' + ctx.username), makeLambdaFunction(UserContext$lambda$421$Type.prototype.apply_0, UserContext$lambda$421$Type, [])), makeLambdaFunction(App$lambda$3$Type.prototype.apply_0, App$lambda$3$Type, [appDataDir, ctx])), makeLambdaFunction(App$lambda$4$Type.prototype.apply_0, App$lambda$4$Type, [app]));
}

function lambda$1_10(h_0, both_1){
  return $bareHash(h_0, concat_0($getHash(castTo(both_1.getAtIndex(0), 58)), $getHash(castTo(both_1.getAtIndex(1), 58))));
}

function lambda$16_4(len_0, is_1){
  var res;
  return $thenApply((res = initUnidimensionalArray(B_classLit, $intern_28, 8, toInt_0(len_0), 15, 1) , $thenApply(is_1.readIntoArray(res, 0, toInt_0(len_0)), makeLambdaFunction(Serialize$lambda$2$Type.prototype.apply_0, Serialize$lambda$2$Type, [res]))), makeLambdaFunction(App$lambda$17$Type.prototype.apply_0, App$lambda$17$Type, []));
}

function lambda$24_1(fileOpt_0){
  if (fileOpt_0.ref == null) {
    return '';
  }
  return $getFileProperties((checkCriticalElement(fileOpt_0.ref != null) , castTo(fileOpt_0.ref, 19))).mimeType;
}

function lambda$27_1(opt_0){
  if (opt_0.ref == null) {
    return new CompletableFuture_0(valueOf_1(-1));
  }
  return new CompletableFuture_0(valueOf_1($getFileProperties((checkCriticalElement(opt_0.ref != null) , castTo(opt_0.ref, 19))).isDirectory?1:0));
}

function lambda$3_4(appDataDir_0, ctx_1, root_2){
  return $getOrMkdirs(root_2, appDataDir_0, ctx_1.network, true, $map(ctx_1.mirrorBat, makeLambdaFunction(UserContext$13methodref$id$Type.prototype.apply_0, UserContext$13methodref$id$Type, [])), ctx_1.crypto);
}

defineClass(869, 1, {}, App);
_.appendInternal = function appendInternal(relativePath, data_0, username){
  var path, pathWithoutUsername;
  path = $fullPath(this, relativePath, username);
  return pathWithoutUsername = $subpath(path, 1, $getNameCount(path)) , $thenCompose($getByPath_4(this.ctx, this.ctx.username), makeLambdaFunction(App$lambda$6$Type.prototype.apply_0, App$lambda$6$Type, [this, path, data_0, pathWithoutUsername]));
}
;
_.createDirectoryInternal = function createDirectoryInternal(relativePath, username){
  return $createDirectoryInternal(this, relativePath, username);
}
;
_.deleteInternal = function deleteInternal(relativePath, username){
  return $deleteInternal(this, relativePath, username);
}
;
_.dirInternal = function dirInternal(relativePath, username){
  return $dirInternal(this, relativePath, username);
}
;
_.existsInternal = function existsInternal(relativePath, username){
  var path;
  path = $fullPath(this, relativePath, username);
  return $thenCompose($getByPath_6(this.ctx, path), makeLambdaFunction(App$lambda$27$Type.prototype.apply_0, App$lambda$27$Type, []));
}
;
_.mimeTypeInternal = function mimeTypeInternal(relativePath, username){
  var path;
  path = !relativePath?$resolve(get_176(username == null?this.ctx.username:username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])), this.appDataDirectoryWithoutUser.pathString):$fullPath(this, relativePath, username);
  return $thenApply($getByPath_6(this.ctx, path), makeLambdaFunction(App$lambda$24$Type.prototype.apply_0, App$lambda$24$Type, []));
}
;
_.readInternal = function readInternal(relativePath, username){
  return $readInternal(this, relativePath, username);
}
;
_.writeInternal = function writeInternal(relativePath, data_0, username){
  return $writeInternal(this, relativePath, data_0, username);
}
;
var Lpeergos_shared_user_App_2_classLit = createForClass('peergos.shared.user', 'App', 869);
function App$lambda$0$Type(){
}

defineClass(2680, $wnd.Function, $intern_22, App$lambda$0$Type);
_.apply_0 = function apply_977(arg0){
  return encode_6(($clinit_Multibase$Base() , Base32_2), castTo(arg0, 58).toBytes());
}
;
function App$lambda$1$Type(h_0){
  this.h_0 = h_0;
}

defineClass(2681, $wnd.Function, $intern_22, App$lambda$1$Type);
_.apply_0 = function apply_978(arg0){
  return lambda$1_10(this.h_0, arg0);
}
;
function App$lambda$10$Type($$outer_0, path_1, data_2, pathWithoutUsername_3){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.data_2 = data_2;
  this.pathWithoutUsername_3 = pathWithoutUsername_3;
}

defineClass(2687, $wnd.Function, $intern_22, App$lambda$10$Type);
_.apply_0 = function apply_979(arg0){
  return $lambda$10_6(this.$$outer_0, this.path_1, this.data_2, this.pathWithoutUsername_3, arg0);
}
;
function App$lambda$11$Type($$outer_0, path_1, data_2){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.data_2 = data_2;
}

defineClass(2696, $wnd.Function, $intern_22, App$lambda$11$Type);
_.apply_0 = function apply_980(arg0){
  return $lambda$11_5(this.$$outer_0, this.path_1, this.data_2, arg0);
}
;
function App$lambda$12$Type(){
}

defineClass(2697, $wnd.Function, {}, App$lambda$12$Type);
_.accept_5 = function accept_104(arg0){
}
;
function App$lambda$13$Type(){
}

defineClass(2698, $wnd.Function, $intern_22, App$lambda$13$Type);
_.apply_0 = function apply_981(arg0){
  return $clinit_Boolean() , true;
}
;
function App$lambda$14$Type($$outer_0, path_1){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
}

defineClass(2685, $wnd.Function, $intern_22, App$lambda$14$Type);
_.apply_0 = function apply_982(arg0){
  return $lambda$14_4(this.$$outer_0, this.path_1, arg0);
}
;
function App$lambda$15$Type(){
}

defineClass(2699, $wnd.Function, {}, App$lambda$15$Type);
_.accept_5 = function accept_105(arg0){
}
;
function App$lambda$16$Type(len_0){
  this.len_0 = len_0;
}

defineClass(2700, $wnd.Function, $intern_22, App$lambda$16$Type);
_.apply_0 = function apply_983(arg0){
  return lambda$16_4(this.len_0, arg0);
}
;
_.len_0 = 0;
function App$lambda$17$Type(){
}

defineClass(2701, $wnd.Function, $intern_22, App$lambda$17$Type);
_.apply_0 = function apply_984(arg0){
  return castTo(arg0, 11);
}
;
function App$lambda$18$Type($$outer_0, path_1){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
}

defineClass(2688, $wnd.Function, $intern_22, App$lambda$18$Type);
_.apply_0 = function apply_985(arg0){
  return $lambda$18_4(this.$$outer_0, this.path_1, arg0);
}
;
function App$lambda$19$Type($$outer_0, dir_1, pathToFile_2){
  this.$$outer_0 = $$outer_0;
  this.dir_1 = dir_1;
  this.pathToFile_2 = pathToFile_2;
}

defineClass(2702, $wnd.Function, $intern_22, App$lambda$19$Type);
_.apply_0 = function apply_986(arg0){
  return $lambda$19_5(this.$$outer_0, this.dir_1, this.pathToFile_2, arg0);
}
;
function App$lambda$2$Type(){
}

defineClass(2682, $wnd.Function, $intern_22, App$lambda$2$Type);
_.apply_0 = function apply_987(arg0){
  return encode_6(($clinit_Multibase$Base() , Base32_2), castTo(arg0, 58).toBytes());
}
;
function App$lambda$20$Type(){
}

defineClass(2703, $wnd.Function, $intern_22, App$lambda$20$Type);
_.apply_0 = function apply_988(arg0){
  return $clinit_Boolean() , true;
}
;
function App$lambda$21$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2689, $wnd.Function, $intern_22, App$lambda$21$Type);
_.apply_0 = function apply_989(arg0){
  return $lambda$21_5(this.$$outer_0, arg0);
}
;
function App$lambda$22$Type(){
}

defineClass(2704, $wnd.Function, $intern_22, App$lambda$22$Type);
_.apply_0 = function apply_990(arg0){
  return castTo($collect_0($map_0(castTo(arg0, 47).stream(), makeLambdaFunction(App$lambda$23$Type.prototype.apply_0, App$lambda$23$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
}
;
function App$lambda$23$Type(){
}

defineClass(2706, $wnd.Function, $intern_22, App$lambda$23$Type);
_.apply_0 = function apply_991(arg0){
  return ($ensureUnmodified(castTo(arg0, 19)) , castTo(arg0, 19).props).name;
}
;
function App$lambda$24$Type(){
}

defineClass(2690, $wnd.Function, $intern_22, App$lambda$24$Type);
_.apply_0 = function apply_992(arg0){
  return lambda$24_1(arg0);
}
;
function App$lambda$25$Type($$outer_0, relativePath_1){
  this.$$outer_0 = $$outer_0;
  this.relativePath_1 = relativePath_1;
}

defineClass(2691, $wnd.Function, $intern_22, App$lambda$25$Type);
_.apply_0 = function apply_993(arg0){
  return $lambda$25_1(this.$$outer_0, this.relativePath_1, arg0);
}
;
function App$lambda$26$Type(){
}

defineClass(2705, $wnd.Function, $intern_22, App$lambda$26$Type);
_.apply_0 = function apply_994(arg0){
  return $clinit_Boolean() , true;
}
;
function App$lambda$27$Type(){
}

defineClass(2692, $wnd.Function, $intern_22, App$lambda$27$Type);
_.apply_0 = function apply_995(arg0){
  return lambda$27_1(arg0);
}
;
function App$lambda$3$Type(appDataDir_0, ctx_1){
  this.appDataDir_0 = appDataDir_0;
  this.ctx_1 = ctx_1;
}

defineClass(2683, $wnd.Function, $intern_22, App$lambda$3$Type);
_.apply_0 = function apply_996(arg0){
  return lambda$3_4(this.appDataDir_0, this.ctx_1, arg0);
}
;
function App$lambda$4$Type(app_0){
  this.app_0 = app_0;
}

defineClass(2684, $wnd.Function, $intern_22, App$lambda$4$Type);
_.apply_0 = function apply_997(arg0){
  return this.app_0;
}
;
function App$lambda$5$Type(pathAsString_0){
  this.pathAsString_0 = pathAsString_0;
}

defineClass(870, 1, {}, App$lambda$5$Type);
_.test_0 = function test_23(arg0){
  return this.pathAsString_0.length > 0;
}
;
var Lpeergos_shared_user_App$lambda$5$Type_2_classLit = createForClass('peergos.shared.user', 'App/lambda$5$Type', 870);
function App$lambda$6$Type($$outer_0, path_1, data_2, pathWithoutUsername_3){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.data_2 = data_2;
  this.pathWithoutUsername_3 = pathWithoutUsername_3;
}

defineClass(2686, $wnd.Function, $intern_22, App$lambda$6$Type);
_.apply_0 = function apply_998(arg0){
  return $lambda$6_12(this.$$outer_0, this.path_1, this.data_2, this.pathWithoutUsername_3, arg0);
}
;
function App$lambda$7$Type($$outer_0, path_1, data_2){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.data_2 = data_2;
}

defineClass(2693, $wnd.Function, $intern_22, App$lambda$7$Type);
_.apply_0 = function apply_999(arg0){
  return $lambda$7_6(this.$$outer_0, this.path_1, this.data_2, arg0);
}
;
function App$lambda$8$Type(){
}

defineClass(2694, $wnd.Function, {}, App$lambda$8$Type);
_.accept_5 = function accept_106(arg0){
}
;
function App$lambda$9$Type(){
}

defineClass(2695, $wnd.Function, $intern_22, App$lambda$9$Type);
_.apply_0 = function apply_1000(arg0){
  return $clinit_Boolean() , true;
}
;
function $flatten(this$static){
  var empty, flattenedGroups;
  flattenedGroups = castTo($collect_0(this$static.groupDiffs.entrySet_0().stream(), toMap(makeLambdaFunction(CapsDiff$lambda$0$Type.prototype.apply_0, CapsDiff$lambda$0$Type, []), makeLambdaFunction(CapsDiff$lambda$1$Type.prototype.apply_0, CapsDiff$lambda$1$Type, []), new Collectors$lambda$44$Type, new Collectors$22methodref$ctor$Type)), 68);
  return new CapsDiff(add_1(this$static.priorReadByteOffset, this$static.newCaps.readCaps.bytesRead), add_1(this$static.priorWriteByteOffset, this$static.newCaps.writeCaps.bytesRead), (empty = new CapabilitiesFromUser(0, ($clinit_Collections() , $clinit_Collections() , EMPTY_LIST)) , new CapsDiff$ReadAndWriteCaps(empty, empty)), flattenedGroups);
}

function $getNewCaps(this$static){
  var direct;
  direct = concat(this$static.newCaps.readCaps.retrievedCapabilities.stream(), this$static.newCaps.writeCaps.retrievedCapabilities.stream());
  return castTo(concat(direct, $flatMap_0(this$static.groupDiffs.values().stream(), makeLambdaFunction(CapsDiff$lambda$2$Type.prototype.apply_0, CapsDiff$lambda$2$Type, []))).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
}

function $isEmpty(this$static){
  return eq(this$static.newCaps.readCaps.bytesRead, 0) && eq(this$static.newCaps.writeCaps.bytesRead, 0) && !$anyMatch(this$static.groupDiffs.values().stream(), new Predicate$lambda$2$Type(new CapsDiff$0methodref$isEmpty$Type));
}

function $mergeGroups(this$static, other){
  var combined;
  combined = new HashMap_1(this$static.groupDiffs);
  $putAll(combined, other.groupDiffs);
  return new CapsDiff(this$static.priorReadByteOffset, this$static.priorWriteByteOffset, this$static.newCaps, combined);
}

function CapsDiff(priorReadByteOffset, priorWriteByteOffset, newCaps, groupDiffs){
  this.priorReadByteOffset = priorReadByteOffset;
  this.priorWriteByteOffset = priorWriteByteOffset;
  this.newCaps = newCaps;
  this.groupDiffs = groupDiffs;
}

defineClass(107, 1, {107:1}, CapsDiff);
_.priorReadByteOffset = 0;
_.priorWriteByteOffset = 0;
var Lpeergos_shared_user_CapsDiff_2_classLit = createForClass('peergos.shared.user', 'CapsDiff', 107);
function $test(arg0){
  return $isEmpty(castTo(arg0, 107));
}

function CapsDiff$0methodref$isEmpty$Type(){
}

defineClass(440, 1, {}, CapsDiff$0methodref$isEmpty$Type);
_.test_0 = function test_24(arg0){
  return $test(arg0);
}
;
var Lpeergos_shared_user_CapsDiff$0methodref$isEmpty$Type_2_classLit = createForClass('peergos.shared.user', 'CapsDiff/0methodref$isEmpty$Type', 440);
function CapsDiff$ReadAndWriteCaps(readCaps, writeCaps){
  this.readCaps = readCaps;
  this.writeCaps = writeCaps;
}

defineClass(232, 1, {232:1}, CapsDiff$ReadAndWriteCaps);
var Lpeergos_shared_user_CapsDiff$ReadAndWriteCaps_2_classLit = createForClass('peergos.shared.user', 'CapsDiff/ReadAndWriteCaps', 232);
function CapsDiff$lambda$0$Type(){
}

defineClass(3564, $wnd.Function, $intern_22, CapsDiff$lambda$0$Type);
_.apply_0 = function apply_1001(arg0){
  return castToString(castTo(arg0, 40).getKey());
}
;
function CapsDiff$lambda$1$Type(){
}

defineClass(3565, $wnd.Function, $intern_22, CapsDiff$lambda$1$Type);
_.apply_0 = function apply_1002(arg0){
  return $flatten(castTo(castTo(arg0, 40).getValue(), 107));
}
;
function CapsDiff$lambda$2$Type(){
}

defineClass(1205, $wnd.Function, $intern_22, CapsDiff$lambda$2$Type);
_.apply_0 = function apply_1003(arg0){
  var direct;
  return (direct = concat(castTo(arg0, 107).newCaps.readCaps.retrievedCapabilities.stream(), castTo(arg0, 107).newCaps.writeCaps.retrievedCapabilities.stream()) , castTo(concat(direct, $flatMap_0(castTo(arg0, 107).groupDiffs.values().stream(), makeLambdaFunction(CapsDiff$lambda$2$Type.prototype.apply_0, CapsDiff$lambda$2$Type, []))).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17)).stream();
}
;
function $equals_22(this$static, o){
  var that;
  if (maskUndefined(this$static) === maskUndefined(o))
    return true;
  if (o == null || Lpeergos_shared_user_CommittedWriterData_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 104);
  return equals_28(this$static.hash_0, that.hash_0) && $equals_6(this$static.sequence, that.sequence);
}

function CommittedWriterData(hash, props, sequence){
  this.hash_0 = hash;
  this.props = props;
  this.sequence = sequence;
}

defineClass(104, 1, {104:1}, CommittedWriterData);
_.equals_0 = function equals_88(o){
  return $equals_22(this, o);
}
;
_.hashCode_1 = function hashCode_86(){
  return $hashCode_0(this.hash_0) ^ hashCode_27(this.sequence.ref);
}
;
_.toString_0 = function toString_79(){
  return castToString($orElse($map(this.sequence, makeLambdaFunction(CommittedWriterData$0methodref$toString$Type.prototype.apply_0, CommittedWriterData$0methodref$toString$Type, [])), '')) + ':' + $toString_7(this.hash_0);
}
;
var Lpeergos_shared_user_CommittedWriterData_2_classLit = createForClass('peergos.shared.user', 'CommittedWriterData', 104);
function CommittedWriterData$0methodref$toString$Type(){
}

defineClass(1522, $wnd.Function, $intern_22, CommittedWriterData$0methodref$toString$Type);
_.apply_0 = function apply_1004(arg0){
  return toString_5(arg0);
}
;
function $isValid(this$static, path, network){
  var claimedOwner, entryWriter, parts;
  parts = $split(path, '/');
  claimedOwner = parts[1];
  entryWriter = this$static.pointer.writer;
  return $thenCompose(network.coreNode.getPublicKeyHash(claimedOwner), makeLambdaFunction(EntryPoint$lambda$0$Type.prototype.apply_0, EntryPoint$lambda$0$Type, [entryWriter, network, claimedOwner]));
}

function $toCbor_70(this$static){
  var cbor, transformed;
  cbor = new TreeMap;
  $put_6(cbor, 'c', $toCbor_91(this$static.pointer));
  $put_6(cbor, 'n', new CborObject$CborString(this$static.ownerName));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(cbor), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function $withOwner(this$static, newOwner){
  return new EntryPoint(this$static.pointer.withOwner_0(newOwner), this$static.ownerName);
}

function EntryPoint(pointer, ownerName){
  this.pointer = pointer;
  this.ownerName = ownerName;
}

function fromCbor_80(cbor){
  var map_0, ownerName, pointer;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Incorrect cbor type for EntryPoint: ' + cbor));
  map_0 = castTo(cbor, 18);
  pointer = castTo($getObject(map_0, 'c', makeLambdaFunction(EntryPoint$0methodref$fromCbor$Type.prototype.apply_0, EntryPoint$0methodref$fromCbor$Type, [])), 71);
  ownerName = castTo(castTo($get_0(map_0.values_0, new CborObject$CborString('n')), 7), 13).value_0;
  return new EntryPoint(pointer, ownerName);
}

function lambda$0_18(entryWriter_0, network_1, claimedOwner_2, ownerKey_3){
  if (ownerKey_3.ref == null)
    throw toJs(new IllegalStateException_0('No owner key present for user ' + claimedOwner_2));
  return $thenCompose(getWriterData(network_1, (checkCriticalElement(ownerKey_3.ref != null) , castTo(ownerKey_3.ref, 55)), (checkCriticalElement(ownerKey_3.ref != null) , castTo(ownerKey_3.ref, 55))), makeLambdaFunction(EntryPoint$lambda$1$Type.prototype.apply_0, EntryPoint$lambda$1$Type, [ownerKey_3, entryWriter_0, network_1]));
}

function lambda$1_11(ownerKey_0, entryWriter_1, network_2, wd_3){
  return $ownsKey(wd_3.props, (checkCriticalElement(ownerKey_0.ref != null) , castTo(ownerKey_0.ref, 55)), entryWriter_1, network_2.dhtClient, network_2.mutable, network_2.hasher);
}

defineClass(60, 1, {7:1, 60:1}, EntryPoint);
_.serialize = function serialize_100(){
  return $toByteArray_2($toCbor_70(this));
}
;
_.equals = function equals_89(o){
  var that;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_user_EntryPoint_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 60);
  return equals_28(this.pointer, that.pointer) && this.ownerName == that.ownerName;
}
;
_.equals_0 = function(o){
  return this.equals(o);
}
;
_.hashCode = function hashCode_87(){
  return hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.pointer, this.ownerName]));
}
;
_.hashCode_1 = function(){
  return this.hashCode();
}
;
_.isValid = function isValid(path, network){
  return $isValid(this, path, network);
}
;
_.serializeAndSymmetricallyEncrypt = function serializeAndSymmetricallyEncrypt(key){
  var nonce;
  nonce = $createNonce_0(key);
  return concat_0(nonce, $encrypt(key, $toByteArray_2($toCbor_70(this)), nonce));
}
;
_.toCbor = function toCbor_98(){
  return $toCbor_70(this);
}
;
_.toString = function toString_80(){
  return this.ownerName;
}
;
_.toString_0 = function(){
  return this.toString();
}
;
_.withOwner = function withOwner(newOwner){
  return $withOwner(this, newOwner);
}
;
var Lpeergos_shared_user_EntryPoint_2_classLit = createForClass('peergos.shared.user', 'EntryPoint', 60);
function EntryPoint$0methodref$fromCbor$Type(){
}

defineClass(1520, $wnd.Function, $intern_22, EntryPoint$0methodref$fromCbor$Type);
_.apply_0 = function apply_1005(arg0){
  return fromCbor_99(castTo(arg0, 7));
}
;
function EntryPoint$lambda$0$Type(entryWriter_0, network_1, claimedOwner_2){
  this.entryWriter_0 = entryWriter_0;
  this.network_1 = network_1;
  this.claimedOwner_2 = claimedOwner_2;
}

defineClass(1519, $wnd.Function, $intern_22, EntryPoint$lambda$0$Type);
_.apply_0 = function apply_1006(arg0){
  return lambda$0_18(this.entryWriter_0, this.network_1, this.claimedOwner_2, arg0);
}
;
function EntryPoint$lambda$1$Type(ownerKey_0, entryWriter_1, network_2){
  this.ownerKey_0 = ownerKey_0;
  this.entryWriter_1 = entryWriter_1;
  this.network_2 = network_2;
}

defineClass(1521, $wnd.Function, $intern_22, EntryPoint$lambda$1$Type);
_.apply_0 = function apply_1007(arg0){
  return lambda$1_11(this.ownerKey_0, this.entryWriter_1, this.network_2, arg0);
}
;
function canonicalise_0(path){
  path = $replaceAll(path, '\\\\', '/');
  return $equals_0(path.substr(0, 1), '/')?path.substr(1):path;
}

function $subPath(this$static, relative){
  if ($endsWith(this$static.dirPath, '/') && $equals_0(relative.substr(0, 1), '/'))
    return this$static.dirPath + ('' + relative.substr(1));
  return this$static.dirPath + ('' + relative);
}

function ExternalTrieNode(dirPath, root){
  $equals_0(dirPath.substr(0, 2), '//') && (dirPath = dirPath.substr(1));
  this.dirPath = dirPath;
  this.root = root;
}

defineClass(439, 1, {110:1}, ExternalTrieNode);
_.getByPath = function getByPath(path, hasher, network){
  return $getByPath_0(this.root, $subPath(this, path), hasher, network);
}
;
_.getByPath_0 = function getByPath_0(path, version, hasher, network){
  return $getByPath_1(this.root, $subPath(this, path), version, hasher, network);
}
;
_.getChildNames = function getChildNames(){
  throw toJs(new IllegalStateException_0('Invalid operation'));
}
;
_.getChildNode = function getChildNode(name_0){
  throw toJs(new IllegalStateException_0('Not valid operation on FriendSourcedTrieNode.'));
}
;
_.getChildNodes = function getChildNodes(){
  throw toJs(new IllegalStateException_0('Invalid operation'));
}
;
_.getChildren = function getChildren(path, hasher, network){
  return $getChildren(this.root, $subPath(this, path), hasher, network);
}
;
_.getChildren_0 = function getChildren_0(path, hasher, version, network){
  return $getChildren_0(this.root, $subPath(this, path), hasher, version, network);
}
;
_.isEmpty = function isEmpty_7(){
  throw toJs(new IllegalStateException_0('Invalid operation'));
}
;
_.put = function put_35(path, e){
  throw toJs(new IllegalStateException_0('Invalid operation'));
}
;
_.putNode = function putNode(path, t){
  throw toJs(new IllegalStateException_0('Invalid operation'));
}
;
_.removeEntry = function removeEntry(path){
  throw toJs(new IllegalStateException_0('Invalid operation'));
}
;
var Lpeergos_shared_user_ExternalTrieNode_2_classLit = createForClass('peergos.shared.user', 'ExternalTrieNode', 439);
function $clinit_FileSharedWithState(){
  $clinit_FileSharedWithState = emptyMethod;
  EMPTY_1 = new FileSharedWithState(($clinit_Collections() , $clinit_Collections() , EMPTY_SET), (null , EMPTY_SET));
}

function FileSharedWithState(readAccess, writeAccess){
  $clinit_FileSharedWithState();
  this.readAccess = readAccess;
  this.writeAccess = writeAccess;
}

defineClass(348, 1, {348:1}, FileSharedWithState);
_.get = function get_100(type_0){
  if (type_0 == ($clinit_SharedWithCache$Access() , READ))
    return this.readAccess;
  return this.writeAccess;
}
;
var EMPTY_1;
var Lpeergos_shared_user_FileSharedWithState_2_classLit = createForClass('peergos.shared.user', 'FileSharedWithState', 348);
function $toCbor_71(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'u', new CborObject$CborString(this$static.username));
  $put_6(state, 'v', new CborObject$CborBoolean(this$static.isVerified_0));
  $put_6(state, 'k', new CborObject$CborList(this$static.keysAtVerification));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function FriendAnnotation(username, isVerified, keysAtVerification){
  this.username = username;
  this.isVerified_0 = isVerified;
  this.keysAtVerification = keysAtVerification;
}

function fromCbor_81(cbor){
  var isVerified, keys_0, m, username, val;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Incorrect cbor for FriendAnnotation: ' + cbor));
  m = castTo(cbor, 18);
  username = castTo(castTo($get_0(m.values_0, new CborObject$CborString('u')), 7), 13).value_0;
  isVerified = (val = castTo(castTo($get_0(m.values_0, new CborObject$CborString('v')), 7), 63) , !!val && val.value_0);
  keys_0 = $getList(m, 'k', makeLambdaFunction(FriendAnnotation$0methodref$fromCbor$Type.prototype.apply_0, FriendAnnotation$0methodref$fromCbor$Type, []));
  return new FriendAnnotation(username, isVerified, keys_0);
}

defineClass(395, 1, {7:1, 395:1}, FriendAnnotation);
_.serialize = function serialize_101(){
  return $toByteArray_2($toCbor_71(this));
}
;
_.isVerified = function isVerified_0(){
  return this.isVerified_0;
}
;
_.toCbor = function toCbor_99(){
  return $toCbor_71(this);
}
;
_.isVerified_0 = false;
var Lpeergos_shared_user_FriendAnnotation_2_classLit = createForClass('peergos.shared.user', 'FriendAnnotation', 395);
function FriendAnnotation$0methodref$fromCbor$Type(){
}

defineClass(2321, $wnd.Function, $intern_22, FriendAnnotation$0methodref$fromCbor$Type);
_.apply_0 = function apply_1008(arg0){
  return fromCbor_23(castTo(arg0, 7));
}
;
function $addGroup(this$static, group){
  $indexOf_1(this$static.groups, group, 0) != -1 || $add(this$static.groups, group);
}

function $convert(this$static, file, path){
  return $withTrieNode(file, new ExternalTrieNode(path, this$static));
}

function $getByPath_0(this$static, path, hasher, network){
  var file;
  ensureValidPath(path);
  if (path.length == 0 || $equals_0(path, '/'))
    return $thenApply($exceptionally($thenCompose(getLatestEntryPoint(this$static.sharedDir, network), makeLambdaFunction(FriendSourcedTrieNode$lambda$0$Type.prototype.apply_0, FriendSourcedTrieNode$lambda$0$Type, [network])), makeLambdaFunction(FriendSourcedTrieNode$lambda$2$Type.prototype.apply_0, FriendSourcedTrieNode$lambda$2$Type, [this$static])), makeLambdaFunction(FriendSourcedTrieNode$lambda$8$Type.prototype.apply_0, FriendSourcedTrieNode$lambda$8$Type, [this$static]));
  file = get_176(this$static.ownerName + ('' + path), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, []));
  return $exceptionally($thenApply($thenCompose($applyComplexUpdate(network.synchronizer, $owner(this$static.cache_0.worldRoot), $signingPair(this$static.cache_0.worldRoot), new FriendSourcedTrieNode$lambda$10$Type(this$static, network), new WriteSynchronizer$lambda$23$Type), makeLambdaFunction(FriendSourcedTrieNode$lambda$13$Type.prototype.apply_0, FriendSourcedTrieNode$lambda$13$Type, [this$static, file, hasher, network])), makeLambdaFunction(FriendSourcedTrieNode$lambda$14$Type.prototype.apply_0, FriendSourcedTrieNode$lambda$14$Type, [this$static, path])), makeLambdaFunction(FriendSourcedTrieNode$lambda$16$Type.prototype.apply_0, FriendSourcedTrieNode$lambda$16$Type, []));
}

function $getByPath_1(this$static, path, version, hasher, network){
  var file;
  ensureValidPath(path);
  if (path.length == 0 || $equals_0(path, '/'))
    return $thenApply($exceptionally($thenCompose(getLatestEntryPoint(this$static.sharedDir, network), makeLambdaFunction(FriendSourcedTrieNode$lambda$0$Type.prototype.apply_0, FriendSourcedTrieNode$lambda$0$Type, [network])), makeLambdaFunction(FriendSourcedTrieNode$lambda$2$Type.prototype.apply_0, FriendSourcedTrieNode$lambda$2$Type, [this$static])), makeLambdaFunction(FriendSourcedTrieNode$lambda$17$Type.prototype.apply_0, FriendSourcedTrieNode$lambda$17$Type, [this$static]));
  file = get_176(this$static.ownerName + ('' + path), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, []));
  return $thenApply($getByPath_2(this$static.cache_0, file, version, hasher, network), makeLambdaFunction(FriendSourcedTrieNode$lambda$19$Type.prototype.apply_0, FriendSourcedTrieNode$lambda$19$Type, [this$static, path]));
}

function $getChildren(this$static, path, hasher, network){
  var dir_0;
  ensureValidPath(path);
  dir_0 = get_176(this$static.ownerName + ('' + path), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, []));
  return $exceptionally($thenApply($thenCompose($applyComplexUpdate(network.synchronizer, $owner(this$static.cache_0.worldRoot), $signingPair(this$static.cache_0.worldRoot), new FriendSourcedTrieNode$lambda$21$Type(this$static, network), new WriteSynchronizer$lambda$23$Type), makeLambdaFunction(FriendSourcedTrieNode$lambda$24$Type.prototype.apply_0, FriendSourcedTrieNode$lambda$24$Type, [this$static, dir_0, hasher, network])), makeLambdaFunction(FriendSourcedTrieNode$lambda$25$Type.prototype.apply_0, FriendSourcedTrieNode$lambda$25$Type, [this$static, path])), makeLambdaFunction(FriendSourcedTrieNode$lambda$27$Type.prototype.apply_0, FriendSourcedTrieNode$lambda$27$Type, []));
}

function $getChildren_0(this$static, path, hasher, version, network){
  var dir_0;
  ensureValidPath(path);
  dir_0 = get_176(this$static.ownerName + ('' + path), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, []));
  return $thenApply($getChildren_1(this$static.cache_0, dir_0, version, hasher, network), makeLambdaFunction(FriendSourcedTrieNode$lambda$28$Type.prototype.apply_0, FriendSourcedTrieNode$lambda$28$Type, [this$static, path]));
}

function $getLatestVersion(this$static, network){
  return $getLatestVersion_0(this$static.sharedDir, network);
}

function $lambda$10_7(this$static, network_1, v_1, c_2){
  return $thenApply($thenCompose($getLatestVersion_0(this$static.sharedDir, network_1), makeLambdaFunction(FriendSourcedTrieNode$lambda$11$Type.prototype.apply_0, FriendSourcedTrieNode$lambda$11$Type, [this$static, v_1, c_2, network_1])), makeLambdaFunction(FriendSourcedTrieNode$lambda$12$Type.prototype.apply_0, FriendSourcedTrieNode$lambda$12$Type, []));
}

function $lambda$11_6(this$static, v_1, c_2, network_3, s_3){
  return $updateIncludingGroups(this$static, $mergeAndOverwriteWith(v_1, s_3), c_2, network_3);
}

function $lambda$13_8(this$static, file_1, hasher_2, network_3, v_3){
  return $getByPath_2(this$static.cache_0, file_1, v_3, hasher_2, network_3);
}

function $lambda$14_5(this$static, path_1, opt_1){
  return $map(opt_1, makeLambdaFunction(FriendSourcedTrieNode$lambda$15$Type.prototype.apply_0, FriendSourcedTrieNode$lambda$15$Type, [this$static, path_1]));
}

function $lambda$15_6(this$static, path_1, f_1){
  return $withTrieNode(f_1, new ExternalTrieNode(path_1, this$static));
}

function $lambda$17_10(this$static, opt_0){
  return $map(opt_0, makeLambdaFunction(FriendSourcedTrieNode$lambda$18$Type.prototype.apply_0, FriendSourcedTrieNode$lambda$18$Type, [this$static]));
}

function $lambda$18_5(this$static, f_0){
  return new FileWrapper(($clinit_Optional() , new Optional(checkCriticalNotNull(this$static))), f_0.pointer, f_0.linkPointer, f_0.entryWriter, f_0.ownername, f_0.version);
}

function $lambda$19_6(this$static, path_1, opt_1){
  return $map(opt_1, makeLambdaFunction(FriendSourcedTrieNode$lambda$20$Type.prototype.apply_0, FriendSourcedTrieNode$lambda$20$Type, [this$static, path_1]));
}

function $lambda$2_18(this$static){
  ($clinit_System() , out_0).println_0("Couldn't retrieve entry point for friend: " + this$static.sharedDir.ownerName + '. Did they remove you as a follower?');
  return $clinit_Optional() , $clinit_Optional() , EMPTY;
}

function $lambda$20_6(this$static, path_1, f_1){
  return $withTrieNode(f_1, new ExternalTrieNode(path_1, this$static));
}

function $lambda$21_6(this$static, network_1, v_1, c_2){
  return $thenApply($thenCompose($getLatestVersion_0(this$static.sharedDir, network_1), makeLambdaFunction(FriendSourcedTrieNode$lambda$22$Type.prototype.apply_0, FriendSourcedTrieNode$lambda$22$Type, [this$static, v_1, c_2, network_1])), makeLambdaFunction(FriendSourcedTrieNode$lambda$23$Type.prototype.apply_0, FriendSourcedTrieNode$lambda$23$Type, []));
}

function $lambda$22_3(this$static, v_1, c_2, network_3, s_3){
  return $updateIncludingGroups(this$static, $mergeAndOverwriteWith(v_1, s_3), c_2, network_3);
}

function $lambda$24_2(this$static, dir_1, hasher_2, network_3, v_3){
  return $getChildren_1(this$static.cache_0, dir_1, v_3, hasher_2, network_3);
}

function $lambda$25_2(this$static, path_1, children_1){
  return castTo($collect_0($map_0(children_1.stream(), makeLambdaFunction(FriendSourcedTrieNode$lambda$26$Type.prototype.apply_0, FriendSourcedTrieNode$lambda$26$Type, [this$static, path_1])), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47);
}

function $lambda$26_4(this$static, path_1, f_1){
  return $convert(this$static, f_1, canonicalise(path_1) + '/' + ($ensureUnmodified(f_1) , f_1.props).name);
}

function $lambda$28_2(this$static, path_1, children_1){
  return castTo($collect_0($map_0(children_1.stream(), makeLambdaFunction(FriendSourcedTrieNode$lambda$29$Type.prototype.apply_0, FriendSourcedTrieNode$lambda$29$Type, [this$static, path_1])), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47);
}

function $lambda$29_2(this$static, path_1, f_1){
  return $convert(this$static, f_1, canonicalise(path_1) + '/' + ($ensureUnmodified(f_1) , f_1.props).name);
}

function $lambda$3_18(this$static, network_1, c_2, p_2){
  var groupCap, groupCap$iterator, newGroups;
  newGroups = castTo($collect_0($filter($getNewCaps(castTo(p_2.right, 107)).stream(), new FriendSourcedTrieNode$lambda$4$Type(this$static)), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  for (groupCap$iterator = newGroups.iterator(); groupCap$iterator.hasNext_0();) {
    groupCap = castTo(groupCap$iterator.next_1(), 303);
    $addGroup(this$static, new EntryPoint(groupCap.cap, this$static.ownerName));
  }
  if (newGroups.isEmpty())
    return new CompletableFuture_0(p_2);
  return $thenCompose(reduceAll(newGroups, castTo(p_2.left, 43), new FriendSourcedTrieNode$lambda$5$Type(this$static, network_1, c_2), new FriendSourcedTrieNode$lambda$6$Type), makeLambdaFunction(FriendSourcedTrieNode$lambda$7$Type.prototype.apply_0, FriendSourcedTrieNode$lambda$7$Type, [this$static, c_2, network_1]));
}

function $lambda$4_13(this$static, cap_0){
  return $startsWith(cap_0.path, '/' + this$static.ownerName + '/' + 'shared');
}

function $lambda$5_13(this$static, network_1, c_2, b_2, cap_3){
  return this$static.groupAdder.add_1(cap_3, this$static.ownerName, network_1, b_2, c_2);
}

function $lambda$7_7(this$static, c_1, network_2, res_2){
  return $ensureFriendUptodate(this$static.cache_0, this$static.ownerName, this$static.sharedDir, this$static.groups, res_2, c_1, network_2);
}

function $lambda$8_8(this$static, opt_0){
  return $map(opt_0, makeLambdaFunction(FriendSourcedTrieNode$lambda$9$Type.prototype.apply_0, FriendSourcedTrieNode$lambda$9$Type, [this$static]));
}

function $lambda$9_11(this$static, f_0){
  return new FileWrapper(($clinit_Optional() , new Optional(checkCriticalNotNull(this$static))), f_0.pointer, f_0.linkPointer, f_0.entryWriter, f_0.ownername, f_0.version);
}

function $updateIncludingGroups(this$static, s, c, network){
  return $thenCompose($ensureFriendUptodate(this$static.cache_0, this$static.ownerName, this$static.sharedDir, this$static.groups, s, c, network), makeLambdaFunction(FriendSourcedTrieNode$lambda$3$Type.prototype.apply_0, FriendSourcedTrieNode$lambda$3$Type, [this$static, network, c]));
}

function FriendSourcedTrieNode(cache, ownerName, sharedDir, groupAdder){
  this.cache_0 = cache;
  this.ownerName = ownerName;
  this.sharedDir = sharedDir;
  this.groups = new ArrayList;
  this.groupAdder = groupAdder;
}

function build_13(cache, e, groupAdder){
  return new CompletableFuture_0(($clinit_Optional() , new Optional(checkCriticalNotNull(new FriendSourcedTrieNode(cache, e.ownerName, e, groupAdder)))));
}

function canonicalise(path){
  var suffixlength;
  suffixlength = '/'.length;
  if ($equals_0(path.substr(path.length - suffixlength, suffixlength), '/'))
    return $substring_0(path, 0, path.length - 1);
  return path;
}

function lambda$0_19(network_0, sharedDir_1){
  return $thenCompose($retrieveParent(sharedDir_1.file, network_0), makeLambdaFunction(FriendSourcedTrieNode$lambda$1$Type.prototype.apply_0, FriendSourcedTrieNode$lambda$1$Type, [network_0]));
}

function lambda$1_12(network_0, sharedOpt_1){
  var empty;
  if (sharedOpt_1.ref == null) {
    empty = new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY));
    return empty;
  }
  return $retrieveParent((checkCriticalElement(sharedOpt_1.ref != null) , castTo(sharedOpt_1.ref, 19)), network_0);
}

defineClass(241, 1, {241:1, 110:1}, FriendSourcedTrieNode);
_.getByPath = function getByPath_1(path, hasher, network){
  return $getByPath_0(this, path, hasher, network);
}
;
_.getByPath_0 = function getByPath_2(path, version, hasher, network){
  return $getByPath_1(this, path, version, hasher, network);
}
;
_.getChildNames = function getChildNames_0(){
  throw toJs(new IllegalStateException_0('Not valid operation on FriendSourcedTrieNode.'));
}
;
_.getChildNode = function getChildNode_0(name_0){
  throw toJs(new IllegalStateException_0('Not valid operation on FriendSourcedTrieNode.'));
}
;
_.getChildNodes = function getChildNodes_0(){
  throw toJs(new IllegalStateException_0('Not valid operation on FriendSourcedTrieNode.'));
}
;
_.getChildren = function getChildren_1(path, hasher, network){
  return $getChildren(this, path, hasher, network);
}
;
_.getChildren_0 = function getChildren_2(path, hasher, version, network){
  return $getChildren_0(this, path, hasher, version, network);
}
;
_.isEmpty = function isEmpty_8(){
  throw toJs(new IllegalStateException_0('Not valid operation on FriendSourcedTrieNode.'));
}
;
_.put = function put_36(path, e){
  throw toJs(new IllegalStateException_0('Not valid operation on FriendSourcedTrieNode.'));
}
;
_.putNode = function putNode_0(path, t){
  throw toJs(new IllegalStateException_0('Not valid operation on FriendSourcedTrieNode.'));
}
;
_.removeEntry = function removeEntry_0(path){
  if (canonicalise_0(path).length == 0)
    return $clinit_TrieNodeImpl() , new TrieNodeImpl(($clinit_Collections() , $clinit_Collections() , EMPTY_MAP), ($clinit_Optional() , $clinit_Optional() , EMPTY));
  throw toJs(new IllegalStateException_0('Not valid operation on FriendSourcedTrieNode.'));
}
;
var Lpeergos_shared_user_FriendSourcedTrieNode_2_classLit = createForClass('peergos.shared.user', 'FriendSourcedTrieNode', 241);
function FriendSourcedTrieNode$lambda$0$Type(network_0){
  this.network_0 = network_0;
}

defineClass(1294, $wnd.Function, $intern_22, FriendSourcedTrieNode$lambda$0$Type);
_.apply_0 = function apply_1009(arg0){
  return lambda$0_19(this.network_0, arg0);
}
;
function FriendSourcedTrieNode$lambda$1$Type(network_0){
  this.network_0 = network_0;
}

defineClass(2300, $wnd.Function, $intern_22, FriendSourcedTrieNode$lambda$1$Type);
_.apply_0 = function apply_1010(arg0){
  return lambda$1_12(this.network_0, arg0);
}
;
function FriendSourcedTrieNode$lambda$10$Type($$outer_0, network_1){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
}

defineClass(797, 1, {}, FriendSourcedTrieNode$lambda$10$Type);
_.apply_3 = function apply_1011(arg0, arg1){
  return $lambda$10_7(this.$$outer_0, this.network_1, arg0, arg1);
}
;
var Lpeergos_shared_user_FriendSourcedTrieNode$lambda$10$Type_2_classLit = createForClass('peergos.shared.user', 'FriendSourcedTrieNode/lambda$10$Type', 797);
function FriendSourcedTrieNode$lambda$11$Type($$outer_0, v_1, c_2, network_3){
  this.$$outer_0 = $$outer_0;
  this.v_1 = v_1;
  this.c_2 = c_2;
  this.network_3 = network_3;
}

defineClass(2303, $wnd.Function, $intern_22, FriendSourcedTrieNode$lambda$11$Type);
_.apply_0 = function apply_1012(arg0){
  return $lambda$11_6(this.$$outer_0, this.v_1, this.c_2, this.network_3, arg0);
}
;
function FriendSourcedTrieNode$lambda$12$Type(){
}

defineClass(2304, $wnd.Function, $intern_22, FriendSourcedTrieNode$lambda$12$Type);
_.apply_0 = function apply_1013(arg0){
  return castTo(castTo(arg0, 20).left, 43);
}
;
function FriendSourcedTrieNode$lambda$13$Type($$outer_0, file_1, hasher_2, network_3){
  this.$$outer_0 = $$outer_0;
  this.file_1 = file_1;
  this.hasher_2 = hasher_2;
  this.network_3 = network_3;
}

defineClass(2291, $wnd.Function, $intern_22, FriendSourcedTrieNode$lambda$13$Type);
_.apply_0 = function apply_1014(arg0){
  return $lambda$13_8(this.$$outer_0, this.file_1, this.hasher_2, this.network_3, arg0);
}
;
function FriendSourcedTrieNode$lambda$14$Type($$outer_0, path_1){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
}

defineClass(2292, $wnd.Function, $intern_22, FriendSourcedTrieNode$lambda$14$Type);
_.apply_0 = function apply_1015(arg0){
  return $lambda$14_5(this.$$outer_0, this.path_1, arg0);
}
;
function FriendSourcedTrieNode$lambda$15$Type($$outer_0, path_1){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
}

defineClass(2305, $wnd.Function, $intern_22, FriendSourcedTrieNode$lambda$15$Type);
_.apply_0 = function apply_1016(arg0){
  return $lambda$15_6(this.$$outer_0, this.path_1, arg0);
}
;
function FriendSourcedTrieNode$lambda$16$Type(){
}

defineClass(2293, $wnd.Function, $intern_22, FriendSourcedTrieNode$lambda$16$Type);
_.apply_0 = function apply_1017(arg0){
  return $clinit_Optional() , $clinit_Optional() , EMPTY;
}
;
function FriendSourcedTrieNode$lambda$17$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2294, $wnd.Function, $intern_22, FriendSourcedTrieNode$lambda$17$Type);
_.apply_0 = function apply_1018(arg0){
  return $lambda$17_10(this.$$outer_0, arg0);
}
;
function FriendSourcedTrieNode$lambda$18$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2306, $wnd.Function, $intern_22, FriendSourcedTrieNode$lambda$18$Type);
_.apply_0 = function apply_1019(arg0){
  return $lambda$18_5(this.$$outer_0, arg0);
}
;
function FriendSourcedTrieNode$lambda$19$Type($$outer_0, path_1){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
}

defineClass(2295, $wnd.Function, $intern_22, FriendSourcedTrieNode$lambda$19$Type);
_.apply_0 = function apply_1020(arg0){
  return $lambda$19_6(this.$$outer_0, this.path_1, arg0);
}
;
function FriendSourcedTrieNode$lambda$2$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1295, $wnd.Function, $intern_22, FriendSourcedTrieNode$lambda$2$Type);
_.apply_0 = function apply_1021(arg0){
  return $lambda$2_18(this.$$outer_0);
}
;
function FriendSourcedTrieNode$lambda$20$Type($$outer_0, path_1){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
}

defineClass(2307, $wnd.Function, $intern_22, FriendSourcedTrieNode$lambda$20$Type);
_.apply_0 = function apply_1022(arg0){
  return $lambda$20_6(this.$$outer_0, this.path_1, arg0);
}
;
function FriendSourcedTrieNode$lambda$21$Type($$outer_0, network_1){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
}

defineClass(798, 1, {}, FriendSourcedTrieNode$lambda$21$Type);
_.apply_3 = function apply_1023(arg0, arg1){
  return $lambda$21_6(this.$$outer_0, this.network_1, arg0, arg1);
}
;
var Lpeergos_shared_user_FriendSourcedTrieNode$lambda$21$Type_2_classLit = createForClass('peergos.shared.user', 'FriendSourcedTrieNode/lambda$21$Type', 798);
function FriendSourcedTrieNode$lambda$22$Type($$outer_0, v_1, c_2, network_3){
  this.$$outer_0 = $$outer_0;
  this.v_1 = v_1;
  this.c_2 = c_2;
  this.network_3 = network_3;
}

defineClass(2308, $wnd.Function, $intern_22, FriendSourcedTrieNode$lambda$22$Type);
_.apply_0 = function apply_1024(arg0){
  return $lambda$22_3(this.$$outer_0, this.v_1, this.c_2, this.network_3, arg0);
}
;
function FriendSourcedTrieNode$lambda$23$Type(){
}

defineClass(2309, $wnd.Function, $intern_22, FriendSourcedTrieNode$lambda$23$Type);
_.apply_0 = function apply_1025(arg0){
  return castTo(castTo(arg0, 20).left, 43);
}
;
function FriendSourcedTrieNode$lambda$24$Type($$outer_0, dir_1, hasher_2, network_3){
  this.$$outer_0 = $$outer_0;
  this.dir_1 = dir_1;
  this.hasher_2 = hasher_2;
  this.network_3 = network_3;
}

defineClass(2296, $wnd.Function, $intern_22, FriendSourcedTrieNode$lambda$24$Type);
_.apply_0 = function apply_1026(arg0){
  return $lambda$24_2(this.$$outer_0, this.dir_1, this.hasher_2, this.network_3, arg0);
}
;
function FriendSourcedTrieNode$lambda$25$Type($$outer_0, path_1){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
}

defineClass(2297, $wnd.Function, $intern_22, FriendSourcedTrieNode$lambda$25$Type);
_.apply_0 = function apply_1027(arg0){
  return $lambda$25_2(this.$$outer_0, this.path_1, arg0);
}
;
function FriendSourcedTrieNode$lambda$26$Type($$outer_0, path_1){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
}

defineClass(2310, $wnd.Function, $intern_22, FriendSourcedTrieNode$lambda$26$Type);
_.apply_0 = function apply_1028(arg0){
  return $lambda$26_4(this.$$outer_0, this.path_1, arg0);
}
;
function FriendSourcedTrieNode$lambda$27$Type(){
}

defineClass(2298, $wnd.Function, $intern_22, FriendSourcedTrieNode$lambda$27$Type);
_.apply_0 = function apply_1029(arg0){
  return $clinit_Collections() , $clinit_Collections() , EMPTY_SET;
}
;
function FriendSourcedTrieNode$lambda$28$Type($$outer_0, path_1){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
}

defineClass(2299, $wnd.Function, $intern_22, FriendSourcedTrieNode$lambda$28$Type);
_.apply_0 = function apply_1030(arg0){
  return $lambda$28_2(this.$$outer_0, this.path_1, arg0);
}
;
function FriendSourcedTrieNode$lambda$29$Type($$outer_0, path_1){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
}

defineClass(2311, $wnd.Function, $intern_22, FriendSourcedTrieNode$lambda$29$Type);
_.apply_0 = function apply_1031(arg0){
  return $lambda$29_2(this.$$outer_0, this.path_1, arg0);
}
;
function FriendSourcedTrieNode$lambda$3$Type($$outer_0, network_1, c_2){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
  this.c_2 = c_2;
}

defineClass(1293, $wnd.Function, $intern_22, FriendSourcedTrieNode$lambda$3$Type);
_.apply_0 = function apply_1032(arg0){
  return $lambda$3_18(this.$$outer_0, this.network_1, this.c_2, arg0);
}
;
function FriendSourcedTrieNode$lambda$4$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(794, 1, {}, FriendSourcedTrieNode$lambda$4$Type);
_.test_0 = function test_25(arg0){
  return $lambda$4_13(this.$$outer_0, arg0);
}
;
var Lpeergos_shared_user_FriendSourcedTrieNode$lambda$4$Type_2_classLit = createForClass('peergos.shared.user', 'FriendSourcedTrieNode/lambda$4$Type', 794);
function FriendSourcedTrieNode$lambda$5$Type($$outer_0, network_1, c_2){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
  this.c_2 = c_2;
}

defineClass(795, 1, $intern_34, FriendSourcedTrieNode$lambda$5$Type);
_.apply_1 = function apply_1033(arg0, arg1){
  return $lambda$5_13(this.$$outer_0, this.network_1, this.c_2, arg0, arg1);
}
;
var Lpeergos_shared_user_FriendSourcedTrieNode$lambda$5$Type_2_classLit = createForClass('peergos.shared.user', 'FriendSourcedTrieNode/lambda$5$Type', 795);
function FriendSourcedTrieNode$lambda$6$Type(){
}

defineClass(796, 1, $intern_34, FriendSourcedTrieNode$lambda$6$Type);
_.apply_1 = function apply_1034(arg0, arg1){
  return castTo(arg1, 43);
}
;
var Lpeergos_shared_user_FriendSourcedTrieNode$lambda$6$Type_2_classLit = createForClass('peergos.shared.user', 'FriendSourcedTrieNode/lambda$6$Type', 796);
function FriendSourcedTrieNode$lambda$7$Type($$outer_0, c_1, network_2){
  this.$$outer_0 = $$outer_0;
  this.c_1 = c_1;
  this.network_2 = network_2;
}

defineClass(2301, $wnd.Function, $intern_22, FriendSourcedTrieNode$lambda$7$Type);
_.apply_0 = function apply_1035(arg0){
  return $lambda$7_7(this.$$outer_0, this.c_1, this.network_2, arg0);
}
;
function FriendSourcedTrieNode$lambda$8$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2290, $wnd.Function, $intern_22, FriendSourcedTrieNode$lambda$8$Type);
_.apply_0 = function apply_1036(arg0){
  return $lambda$8_8(this.$$outer_0, arg0);
}
;
function FriendSourcedTrieNode$lambda$9$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2302, $wnd.Function, $intern_22, FriendSourcedTrieNode$lambda$9$Type);
_.apply_0 = function apply_1037(arg0){
  return $lambda$9_11(this.$$outer_0, arg0);
}
;
function $addGroup_0(this$static, group, owner){
  var updated;
  updated = new HashMap_1(this$static.pathToGroup);
  $putStringValue(updated, group.path, new EntryPoint(group.cap, owner));
  return new FriendsGroups(updated);
}

function $getFriends(this$static, friend){
  return castTo($collect_0($map_0($filter(this$static.pathToGroup.entrySet_0().stream(), new FriendsGroups$lambda$0$Type(friend)), makeLambdaFunction(FriendsGroups$lambda$1$Type.prototype.apply_0, FriendsGroups$lambda$1$Type, [])), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47);
}

function $toCbor_72(this$static){
  var cbor, groups, transformed, transformed0;
  cbor = new TreeMap;
  groups = castTo($collect_0(this$static.pathToGroup.entrySet_0().stream(), toMap(makeLambdaFunction(FriendsGroups$lambda$2$Type.prototype.apply_0, FriendsGroups$lambda$2$Type, []), makeLambdaFunction(FriendsGroups$lambda$3$Type.prototype.apply_0, FriendsGroups$lambda$3$Type, []), new Collectors$lambda$44$Type, new Collectors$22methodref$ctor$Type)), 68);
  $put_6(cbor, 'g', (transformed0 = castTo($collect_0(groups.entrySet_0().stream(), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed0)));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(cbor), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function FriendsGroups(pathToGroup){
  this.pathToGroup = pathToGroup;
}

function fromCbor_82(cbor){
  var groups, m;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor! ' + cbor));
  m = castTo(cbor, 18);
  groups = $getMap_0(m, makeLambdaFunction(FriendsGroups$lambda$4$Type.prototype.apply_0, FriendsGroups$lambda$4$Type, []), makeLambdaFunction(FriendsGroups$0methodref$fromCbor$Type.prototype.apply_0, FriendsGroups$0methodref$fromCbor$Type, []));
  return new FriendsGroups(groups);
}

function lambda$0_20(friend_0, e_1){
  return $startsWith(castToString(e_1.getKey()), friend_0) || $startsWith(castToString(e_1.getKey()), '/' + friend_0);
}

defineClass(271, 1, {7:1, 271:1}, FriendsGroups);
_.serialize = function serialize_102(){
  return $toByteArray_2($toCbor_72(this));
}
;
_.toCbor = function toCbor_100(){
  return $toCbor_72(this);
}
;
var Lpeergos_shared_user_FriendsGroups_2_classLit = createForClass('peergos.shared.user', 'FriendsGroups', 271);
function FriendsGroups$0methodref$fromCbor$Type(){
}

defineClass(2607, $wnd.Function, $intern_22, FriendsGroups$0methodref$fromCbor$Type);
_.apply_0 = function apply_1038(arg0){
  return fromCbor_80(castTo(arg0, 7));
}
;
function FriendsGroups$lambda$0$Type(friend_0){
  this.friend_0 = friend_0;
}

defineClass(845, 1, {}, FriendsGroups$lambda$0$Type);
_.test_0 = function test_26(arg0){
  return lambda$0_20(this.friend_0, arg0);
}
;
var Lpeergos_shared_user_FriendsGroups$lambda$0$Type_2_classLit = createForClass('peergos.shared.user', 'FriendsGroups/lambda$0$Type', 845);
function FriendsGroups$lambda$1$Type(){
}

defineClass(2603, $wnd.Function, $intern_22, FriendsGroups$lambda$1$Type);
_.apply_0 = function apply_1039(arg0){
  return castTo(castTo(arg0, 40).getValue(), 60);
}
;
function FriendsGroups$lambda$2$Type(){
}

defineClass(2604, $wnd.Function, $intern_22, FriendsGroups$lambda$2$Type);
_.apply_0 = function apply_1040(arg0){
  return castToString(castTo(arg0, 40).getKey());
}
;
function FriendsGroups$lambda$3$Type(){
}

defineClass(2605, $wnd.Function, $intern_22, FriendsGroups$lambda$3$Type);
_.apply_0 = function apply_1041(arg0){
  return castTo(castTo(arg0, 40).getValue(), 7);
}
;
function FriendsGroups$lambda$4$Type(){
}

defineClass(2606, $wnd.Function, $intern_22, FriendsGroups$lambda$4$Type);
_.apply_0 = function apply_1042(arg0){
  return castTo(castTo(arg0, 7), 13).value_0;
}
;
function $toCbor_73(this$static){
  var e, e$iterator, state, transformed, transformed0, uidToNames;
  state = new TreeMap;
  uidToNames = new TreeMap;
  for (e$iterator = this$static.uidToGroupName.entrySet_0().iterator(); e$iterator.hasNext_0();) {
    e = castTo(e$iterator.next_1(), 40);
    $put_6(uidToNames, castToString(e.getKey()), new CborObject$CborString(castToString(e.getValue())));
  }
  $put_6(state, 'n', (transformed0 = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(uidToNames), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed0)));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function Groups(uidToGroupName){
  this.uidToGroupName = uidToGroupName;
}

function fromCbor_83(cbor){
  var getString, m, r, uidToNames;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor for Groups!'));
  m = castTo(cbor, 18);
  r = castTo($get_13(m, 'n', makeLambdaFunction(Groups$lambda$0$Type.prototype.apply_0, Groups$lambda$0$Type, [])), 18);
  getString = makeLambdaFunction(Groups$lambda$1$Type.prototype.apply_0, Groups$lambda$1$Type, []);
  uidToNames = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(r.values_0), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$10$Type.prototype.apply_0, CborObject$CborMap$lambda$10$Type, [getString]), makeLambdaFunction(CborObject$CborMap$lambda$11$Type.prototype.apply_0, CborObject$CborMap$lambda$11$Type, [getString]), new Collectors$lambda$44$Type, new Collectors$22methodref$ctor$Type)), 68);
  return new Groups(uidToNames);
}

function generate_0(r){
  var uidToNames;
  uidToNames = new TreeMap;
  $put_6(uidToNames, '.' + bytesToHex($randomBytes(r, 32)), 'friends');
  $put_6(uidToNames, '.' + bytesToHex($randomBytes(r, 32)), 'followers');
  return new Groups(uidToNames);
}

defineClass(345, 1, {7:1, 345:1}, Groups);
_.serialize = function serialize_103(){
  return $toByteArray_2($toCbor_73(this));
}
;
_.toCbor = function toCbor_101(){
  return $toCbor_73(this);
}
;
var Lpeergos_shared_user_Groups_2_classLit = createForClass('peergos.shared.user', 'Groups', 345);
function Groups$lambda$0$Type(){
}

defineClass(2522, $wnd.Function, $intern_22, Groups$lambda$0$Type);
_.apply_0 = function apply_1043(arg0){
  return castTo(castTo(arg0, 7), 18);
}
;
function Groups$lambda$1$Type(){
}

defineClass(2523, $wnd.Function, $intern_22, Groups$lambda$1$Type);
_.apply_0 = function apply_1044(arg0){
  return castTo(castTo(arg0, 7), 13).value_0;
}
;
function $addTotpFactor_0(urlPrefix, poster, username, auth){
  return $thenApply($get_28(poster, urlPrefix + 'peergos/v0/login/' + 'addTotp?username=' + username + '&auth=' + bytesToHex(auth), ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)), makeLambdaFunction(HttpAccount$lambda$5$Type.prototype.apply_0, HttpAccount$lambda$5$Type, []));
}

function $deleteSecondFactor_0(urlPrefix, poster, username, credentialId, auth){
  return $thenApply($get_28(poster, urlPrefix + 'peergos/v0/login/' + 'deleteMfa?username=' + username + '&credid=' + bytesToHex(credentialId) + '&auth=' + bytesToHex(auth), ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)), makeLambdaFunction(HttpAccount$lambda$8$Type.prototype.apply_0, HttpAccount$lambda$8$Type, []));
}

function $enableTotpFactor_0(urlPrefix, poster, username, credentialId, code_0, auth){
  return $thenApply($get_28(poster, urlPrefix + 'peergos/v0/login/' + 'enableTotp?username=' + username + '&credid=' + bytesToHex(credentialId) + '&auth=' + bytesToHex(auth) + '&code=' + code_0, ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)), makeLambdaFunction(HttpAccount$lambda$7$Type.prototype.apply_0, HttpAccount$lambda$7$Type, []));
}

function $getLoginData(urlPrefix, poster, username, authorisedReader, auth, mfa){
  return $thenApply($get_28(poster, urlPrefix + 'peergos/v0/login/' + 'getLogin?username=' + username + '&author=' + bytesToHex($toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborLong(($clinit_PublicSigningKey$Type() , Ed25519).value), new CborObject$CborByteArray(authorisedReader.publicKey)]))))) + '&auth=' + bytesToHex(auth) + castToString($orElse($map(mfa, makeLambdaFunction(HttpAccount$lambda$1$Type.prototype.apply_0, HttpAccount$lambda$1$Type, [])), '')), ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)), makeLambdaFunction(HttpAccount$lambda$2$Type.prototype.apply_0, HttpAccount$lambda$2$Type, []));
}

function $getSecondAuthMethods_0(urlPrefix, poster, username, auth){
  return $thenApply($get_28(poster, urlPrefix + 'peergos/v0/login/' + 'listMfa?username=' + username + '&auth=' + bytesToHex(auth), ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)), makeLambdaFunction(HttpAccount$lambda$3$Type.prototype.apply_0, HttpAccount$lambda$3$Type, []));
}

function $registerSecurityKeyComplete_0(urlPrefix, poster, username, keyName, resp, auth){
  return $thenApply($post(poster, urlPrefix + 'peergos/v0/login/' + 'registerWebauthnComplete?username=' + username + '&keyname=' + keyName + '&auth=' + bytesToHex(auth), $toByteArray_2($toCbor_29(resp))), makeLambdaFunction(HttpAccount$lambda$6$Type.prototype.apply_0, HttpAccount$lambda$6$Type, []));
}

function $registerSecurityKeyStart_0(urlPrefix, poster, username, auth){
  return $get_28(poster, urlPrefix + 'peergos/v0/login/' + 'registerWebauthnStart?username=' + username + '&auth=' + bytesToHex(auth), ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP));
}

function $setLoginData_0(urlPrefix, poster, login, auth){
  return $thenApply($postUnzip(poster, urlPrefix + 'peergos/v0/login/' + 'setLogin?username=' + login.username + '&auth=' + bytesToHex(auth), $toByteArray_2($toCbor_79(login))), makeLambdaFunction(HttpAccount$lambda$0$Type.prototype.apply_0, HttpAccount$lambda$0$Type, []));
}

function HttpAccount(direct){
  this.direct = direct;
  this.directUrlPrefix = '';
}

function lambda$0_21(res_0){
  var din, e;
  din = new DataInputStream(new ByteArrayInputStream(res_0));
  try {
    return $clinit_Boolean() , $readByte(din) != 0?true:false;
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 62)) {
      e = $e0;
      throw toJs(new RuntimeException_2(e));
    }
     else 
      throw toJs($e0);
  }
}

defineClass(495, 1, {}, HttpAccount);
_.addTotpFactor = function addTotpFactor_3(username, identity){
  return $addTotpFactor(this, username, identity);
}
;
_.deleteSecondFactor = function deleteSecondFactor_3(username, credentialId, identity){
  return $deleteSecondFactor(this, username, credentialId, identity);
}
;
_.enableTotpFactor = function enableTotpFactor_3(username, credentialId, code_0, identity){
  return $enableTotpFactor(this, username, credentialId, code_0, identity);
}
;
_.getSecondAuthMethods = function getSecondAuthMethods_3(username, identity){
  return $getSecondAuthMethods(this, username, identity);
}
;
_.registerSecurityKeyComplete = function registerSecurityKeyComplete_3(username, keyName, resp, identity){
  return $registerSecurityKeyComplete(this, username, keyName, resp, identity);
}
;
_.registerSecurityKeyStart = function registerSecurityKeyStart_3(username, identity){
  return $registerSecurityKeyStart(this, username, identity);
}
;
_.setLoginData_0 = function setLoginData_3(login, identity){
  var auth;
  return auth = $signatureOnly(identity.secret, $toByteArray_2($toCbor_79(login))) , $setLoginData_0(this.directUrlPrefix, this.direct, login, auth);
}
;
_.addTotpFactor_0 = function addTotpFactor_4(username, auth){
  return $addTotpFactor_0(this.directUrlPrefix, this.direct, username, auth);
}
;
_.deleteSecondFactor_0 = function deleteSecondFactor_4(username, credentialId, auth){
  return $deleteSecondFactor_0(this.directUrlPrefix, this.direct, username, credentialId, auth);
}
;
_.enableTotpFactor_0 = function enableTotpFactor_4(username, credentialId, code_0, auth){
  return $enableTotpFactor_0(this.directUrlPrefix, this.direct, username, credentialId, code_0, auth);
}
;
_.getLoginData = function getLoginData_1(username, authorisedReader, auth, mfa){
  return $getLoginData(this.directUrlPrefix, this.direct, username, authorisedReader, auth, mfa);
}
;
_.getSecondAuthMethods_0 = function getSecondAuthMethods_4(username, auth){
  return $getSecondAuthMethods_0(this.directUrlPrefix, this.direct, username, auth);
}
;
_.registerSecurityKeyComplete_0 = function registerSecurityKeyComplete_4(username, keyName, resp, auth){
  return $registerSecurityKeyComplete_0(this.directUrlPrefix, this.direct, username, keyName, resp, auth);
}
;
_.registerSecurityKeyStart_0 = function registerSecurityKeyStart_4(username, auth){
  return $registerSecurityKeyStart_0(this.directUrlPrefix, this.direct, username, auth);
}
;
_.setLoginData_1 = function setLoginData_4(login, auth){
  return $setLoginData_0(this.directUrlPrefix, this.direct, login, auth);
}
;
var Lpeergos_shared_user_HttpAccount_2_classLit = createForClass('peergos.shared.user', 'HttpAccount', 495);
function HttpAccount$0methodref$fromCbor$Type(){
}

defineClass(3120, $wnd.Function, $intern_22, HttpAccount$0methodref$fromCbor$Type);
_.apply_0 = function apply_1045(arg0){
  return fromCbor_36(castTo(arg0, 7));
}
;
function HttpAccount$lambda$0$Type(){
}

defineClass(3112, $wnd.Function, $intern_22, HttpAccount$lambda$0$Type);
_.apply_0 = function apply_1046(arg0){
  return lambda$0_21(arg0);
}
;
function HttpAccount$lambda$1$Type(){
}

defineClass(3113, $wnd.Function, $intern_22, HttpAccount$lambda$1$Type);
_.apply_0 = function apply_1047(arg0){
  return '&mfa=' + bytesToHex($toByteArray_2($toCbor_29(castTo(arg0, 298))));
}
;
function HttpAccount$lambda$2$Type(){
}

defineClass(3114, $wnd.Function, $intern_22, HttpAccount$lambda$2$Type);
_.apply_0 = function apply_1048(arg0){
  return fromCbor_35(deserialize(new CborDecoder(new ByteArrayInputStream(castTo(arg0, 11))), castTo(arg0, 11).length)).resp;
}
;
function HttpAccount$lambda$3$Type(){
}

defineClass(3115, $wnd.Function, $intern_22, HttpAccount$lambda$3$Type);
_.apply_0 = function apply_1049(arg0){
  return $map_2(castTo(deserialize(new CborDecoder(new ByteArrayInputStream(castTo(arg0, 11))), castTo(arg0, 11).length), 21), makeLambdaFunction(HttpAccount$0methodref$fromCbor$Type.prototype.apply_0, HttpAccount$0methodref$fromCbor$Type, []));
}
;
function HttpAccount$lambda$5$Type(){
}

defineClass(3116, $wnd.Function, $intern_22, HttpAccount$lambda$5$Type);
_.apply_0 = function apply_1050(arg0){
  return fromString_1($create_0(castTo(arg0, 11), 0, castTo(arg0, 11).length, ($clinit_EmulatedCharset() , UTF_8_0)));
}
;
function HttpAccount$lambda$6$Type(){
}

defineClass(3117, $wnd.Function, $intern_22, HttpAccount$lambda$6$Type);
_.apply_0 = function apply_1051(arg0){
  return $clinit_Boolean() , castTo(deserialize(new CborDecoder(new ByteArrayInputStream(castTo(arg0, 11))), castTo(arg0, 11).length), 63).value_0?true:false;
}
;
function HttpAccount$lambda$7$Type(){
}

defineClass(3118, $wnd.Function, $intern_22, HttpAccount$lambda$7$Type);
_.apply_0 = function apply_1052(arg0){
  return $clinit_Boolean() , castTo(deserialize(new CborDecoder(new ByteArrayInputStream(castTo(arg0, 11))), castTo(arg0, 11).length), 63).value_0?true:false;
}
;
function HttpAccount$lambda$8$Type(){
}

defineClass(3119, $wnd.Function, $intern_22, HttpAccount$lambda$8$Type);
_.apply_0 = function apply_1053(arg0){
  return $clinit_Boolean() , castTo(deserialize(new CborDecoder(new ByteArrayInputStream(castTo(arg0, 11))), castTo(arg0, 11).length), 63).value_0?true:false;
}
;
function $toCbor_74(this$static){
  var cborData, transformed;
  cborData = new TreeMap;
  $put_6(cborData, 'ua', new CborObject$CborString(this$static.usernameA));
  $put_6(cborData, 'sa', this$static.serviceA);
  $put_6(cborData, 'ub', new CborObject$CborString(this$static.usernameB));
  $put_6(cborData, 'sb', this$static.serviceB);
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(cborData), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function IdentityLink(usernameA, serviceA, usernameB, serviceB){
  this.usernameA = usernameA;
  this.serviceA = serviceA;
  this.usernameB = usernameB;
  this.serviceB = serviceB;
}

function fromCbor_84(cbor){
  var m, serviceA, serviceB, usernameA, usernameB;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor for AlternativeIdentityClaim: ' + cbor));
  m = castTo(cbor, 18);
  usernameA = castTo(castTo($get_0(m.values_0, new CborObject$CborString('ua')), 7), 13).value_0;
  serviceA = castTo($get_13(m, 'sa', makeLambdaFunction(IdentityLink$0methodref$fromCbor$Type.prototype.apply_0, IdentityLink$0methodref$fromCbor$Type, [])), 205);
  usernameB = castTo(castTo($get_0(m.values_0, new CborObject$CborString('ub')), 7), 13).value_0;
  serviceB = castTo($get_13(m, 'sb', makeLambdaFunction(IdentityLink$1methodref$fromCbor$Type.prototype.apply_0, IdentityLink$1methodref$fromCbor$Type, [])), 205);
  return new IdentityLink(usernameA, serviceA, usernameB, serviceB);
}

function parse_2(firstLine){
  var parts, serviceA, serviceB, usernameA, usernameB;
  parts = $split($trim(firstLine), ' ');
  if (!$equals_0(parts[0], 'I') || !$equals_0(parts[1], 'am') || !$equals_0(parts[3], 'on') || !$equals_0(parts[5], 'and') || !$equals_0(parts[7], 'on'))
    throw toJs(new IllegalStateException_0('Invalid text for IdentityLink'));
  usernameA = parts[2];
  serviceA = parse_3(parts[4]);
  usernameB = parts[6];
  serviceB = parse_3(parts[8]);
  return new IdentityLink(usernameA, serviceA, usernameB, serviceB);
}

defineClass(274, 1, {7:1, 274:1}, IdentityLink);
_.serialize = function serialize_104(){
  return $toByteArray_2($toCbor_74(this));
}
;
_.equals_0 = function equals_90(o){
  var that;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_user_IdentityLink_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 274);
  return this.usernameA == that.usernameA && this.usernameB == that.usernameB && equals_28(this.serviceA, that.serviceA) && equals_28(this.serviceB, that.serviceB);
}
;
_.hashCode_1 = function hashCode_88(){
  return hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.usernameA, this.usernameB, this.serviceA, this.serviceB]));
}
;
_.toCbor = function toCbor_102(){
  return $toCbor_74(this);
}
;
var Lpeergos_shared_user_IdentityLink_2_classLit = createForClass('peergos.shared.user', 'IdentityLink', 274);
function IdentityLink$0methodref$fromCbor$Type(){
}

defineClass(2894, $wnd.Function, $intern_22, IdentityLink$0methodref$fromCbor$Type);
_.apply_0 = function apply_1054(arg0){
  return fromCbor_85(castTo(arg0, 7));
}
;
function IdentityLink$1methodref$fromCbor$Type(){
}

defineClass(2895, $wnd.Function, $intern_22, IdentityLink$1methodref$fromCbor$Type);
_.apply_0 = function apply_1055(arg0){
  return fromCbor_85(castTo(arg0, 7));
}
;
function $toCbor_75(this$static){
  var state, transformed;
  state = new TreeMap;
  if (this$static.name_0.a_0 != null) {
    $put_6(state, 't', new CborObject$CborLong(0));
    $put_6(state, 'c', new CborObject$CborLong(castTo($a(this$static.name_0), 122).code));
  }
   else {
    $put_6(state, 't', new CborObject$CborLong(1));
    $put_6(state, 'n', new CborObject$CborString(castToString($b(this$static.name_0))));
  }
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function IdentityLink$IdentityService(name_0){
  this.name_0 = name_0;
}

function fromCbor_85(cbor){
  var m, type_0;
  m = castTo(cbor, 18);
  type_0 = castTo(castTo($get_0(m.values_0, new CborObject$CborString('t')), 7), 29).value_0;
  if (compare_1(type_0, 0) == 0) {
    return new IdentityLink$IdentityService(new Either(byCode(toInt_0(castTo(castTo($get_0(m.values_0, new CborObject$CborString('c')), 7), 29).value_0)), null));
  }
   else if (compare_1(type_0, 1) == 0) {
    return new IdentityLink$IdentityService(new Either(null, castTo(castTo($get_0(m.values_0, new CborObject$CborString('n')), 7), 13).value_0));
  }
   else 
    throw toJs(new IllegalStateException_0('Unknown IdentityService type: ' + toString_4(type_0)));
}

function parse_3(name_0){
  try {
    return new IdentityLink$IdentityService(new Either(byName(name_0), null));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 51)) {
      return new IdentityLink$IdentityService(new Either(null, name_0));
    }
     else 
      throw toJs($e0);
  }
}

defineClass(205, 1, {7:1, 205:1}, IdentityLink$IdentityService);
_.serialize = function serialize_105(){
  return $toByteArray_2($toCbor_75(this));
}
;
_.equals_0 = function equals_91(o){
  var that;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_user_IdentityLink$IdentityService_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 205);
  return equals_28(this.name_0, that.name_0);
}
;
_.hashCode_1 = function hashCode_89(){
  return hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.name_0]));
}
;
_.name = function name_7(){
  return castToString($map_3(this.name_0, makeLambdaFunction(IdentityLink$IdentityService$lambda$0$Type.prototype.apply_0, IdentityLink$IdentityService$lambda$0$Type, []), makeLambdaFunction(IdentityLink$IdentityService$lambda$1$Type.prototype.apply_0, IdentityLink$IdentityService$lambda$1$Type, [])));
}
;
_.toCbor = function toCbor_103(){
  return $toCbor_75(this);
}
;
var Lpeergos_shared_user_IdentityLink$IdentityService_2_classLit = createForClass('peergos.shared.user', 'IdentityLink/IdentityService', 205);
function IdentityLink$IdentityService$lambda$0$Type(){
}

defineClass(2896, $wnd.Function, $intern_22, IdentityLink$IdentityService$lambda$0$Type);
_.apply_0 = function apply_1056(arg0){
  return castTo(arg0, 122).name_0 != null?castTo(arg0, 122).name_0:'' + castTo(arg0, 122).ordinal_0;
}
;
function IdentityLink$IdentityService$lambda$1$Type(){
}

defineClass(2897, $wnd.Function, $intern_22, IdentityLink$IdentityService$lambda$1$Type);
_.apply_0 = function apply_1057(arg0){
  return castToString(arg0);
}
;
function $clinit_IdentityLink$KnownService(){
  $clinit_IdentityLink$KnownService = emptyMethod;
  var t, t$array, t$array0, t$index, t$index0, t$max, t$max0;
  Peergos = new IdentityLink$KnownService('Peergos', 0, 0, '^[a-z0-9](?:[a-z0-9]|[-](?=[a-z0-9])){0,31}$');
  Twitter = new IdentityLink$KnownService('Twitter', 1, 1, '^[A-Za-z0-9_]{1,15}$');
  Facebook = new IdentityLink$KnownService('Facebook', 2, 2, '^[a-z\\d.]{5,}$');
  Website = new IdentityLink$KnownService('Website', 3, 3, '^((?!-)[A-Za-z0-9-]{1,63}(?<!-)\\.)+[A-Za-z]{2,6}$');
  Reddit = new IdentityLink$KnownService('Reddit', 4, 4, '^[A-Za-z0-9]{1,20}$');
  Github = new IdentityLink$KnownService('Github', 5, 5, '^[a-z\\d](?:[a-z\\d]|-(?=[a-z\\d])){0,38}$');
  HackerNews = new IdentityLink$KnownService('HackerNews', 6, 6, '^[a-z0-9_-]{2,15}$');
  Lobsters = new IdentityLink$KnownService('Lobsters', 7, 7, '^[a-z0-9]{1,18}$');
  LinkedIn = new IdentityLink$KnownService('LinkedIn', 8, 8, '^[A-Za-z0-9-]{5,30}$');
  Mastodon = new IdentityLink$KnownService('Mastodon', 9, 9, '[a-z0-9_]{1,30}@((?!-)[A-Za-z0-9-]{1,63}(?<!-)\\.)+[A-Za-z]{2,6}');
  Matrix = new IdentityLink$KnownService('Matrix', 10, 10, '@[a-z0-9_.-=/]{1,249}:((?!-)[A-Za-z0-9-]{1,63}(?<!-)\\.)+[A-Za-z]{2,6}');
  lookup_6 = new TreeMap;
  for (t$array0 = values_16() , t$index0 = 0 , t$max0 = t$array0.length; t$index0 < t$max0; ++t$index0) {
    t = t$array0[t$index0];
    $put_6(lookup_6, valueOf_1(t.code), t);
  }
  lookupByName = new TreeMap;
  for (t$array = values_16() , t$index = 0 , t$max = t$array.length; t$index < t$max; ++t$index) {
    t = t$array[t$index];
    $put_6(lookupByName, (t.name_0 != null?t.name_0:'' + t.ordinal_0).toLowerCase(), t);
  }
}

function IdentityLink$KnownService(enum$name, enum$ordinal, code_0, usernameRegex){
  Enum.call(this, enum$name, enum$ordinal);
  this.code = code_0;
  this.usernameRegex = usernameRegex;
}

function byCode(t){
  $clinit_IdentityLink$KnownService();
  if (!$containsKey_0(lookup_6, valueOf_1(t)))
    throw toJs(new IllegalStateException_0('Unknown Identity Service code: ' + t));
  return castTo($get_0(lookup_6, valueOf_1(t)), 122);
}

function byName(name_0){
  $clinit_IdentityLink$KnownService();
  var result;
  result = castTo($get_0(lookupByName, name_0.toLowerCase()), 122);
  if (!result)
    throw toJs(new IllegalStateException_0('Unknown Identity Service: ' + name_0));
  return result;
}

function valueOf_13(name_0){
  $clinit_IdentityLink$KnownService();
  return valueOf_0(($clinit_IdentityLink$KnownService$Map() , $MAP_4), name_0);
}

function values_16(){
  $clinit_IdentityLink$KnownService();
  return stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_user_IdentityLink$KnownService_2_classLit, 1), $intern_33, 122, 0, [Peergos, Twitter, Facebook, Website, Reddit, Github, HackerNews, Lobsters, LinkedIn, Mastodon, Matrix]);
}

defineClass(122, 52, {4:1, 57:1, 52:1, 122:1}, IdentityLink$KnownService);
_.code = 0;
var Facebook, Github, HackerNews, LinkedIn, Lobsters, Mastodon, Matrix, Peergos, Reddit, Twitter, Website, lookup_6, lookupByName;
var Lpeergos_shared_user_IdentityLink$KnownService_2_classLit = createForEnum('peergos.shared.user', 'IdentityLink/KnownService', 122, values_16);
function $clinit_IdentityLink$KnownService$Map(){
  $clinit_IdentityLink$KnownService$Map = emptyMethod;
  $MAP_4 = createValueOfMap(values_16());
}

var $MAP_4;
function $toCbor_76(this$static){
  var cborData, contents, transformed;
  cborData = new TreeMap;
  $put_6(cborData, 'c', this$static.claim);
  $put_6(cborData, 's', new CborObject$CborByteArray(this$static.signature));
  $ifPresent(this$static.encryptionKey, new IdentityLinkProof$lambda$0$Type(cborData));
  $ifPresent(this$static.postUrl, new IdentityLinkProof$lambda$1$Type(cborData));
  contents = new ArrayList;
  $add(contents, new CborObject$CborLong(24));
  $add(contents, (transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(cborData), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed)));
  return new CborObject$CborList(contents);
}

function IdentityLinkProof(claim, signature, encryptionKey, postUrl){
  this.claim = claim;
  this.signature = signature;
  this.encryptionKey = encryptionKey;
  this.postUrl = postUrl;
}

function buildAndSign(signer, peergosUsername, alternateUsername, alternateService){
  var claim, serviceA, serviceB, signature;
  serviceA = new IdentityLink$IdentityService(new Either(($clinit_IdentityLink$KnownService() , Peergos), null));
  serviceB = parse_3(alternateService);
  claim = new IdentityLink(peergosUsername, serviceA, alternateUsername, serviceB);
  signature = $signatureOnly(signer.secret, $toByteArray_2($toCbor_74(claim)));
  return new IdentityLinkProof(claim, signature, ($clinit_Optional() , $clinit_Optional() , EMPTY), (null , EMPTY));
}

function fromCbor_86(cbor){
  var alternativeUrl, claim, contents, encryptionKey, m, mimeType, signature;
  if (!instanceOf(cbor, 21))
    throw toJs(new IllegalStateException_0('Invalid cbor for TodoList: ' + cbor));
  contents = castTo(cbor, 21).value_0;
  mimeType = castTo(contents.getAtIndex(0), 29).value_0;
  if (compare_1(mimeType, 24) != 0)
    throw toJs(new IllegalStateException_0('Invalid mimetype for AlternativeIdentityProof: ' + toString_4(mimeType)));
  m = castTo(contents.getAtIndex(1), 18);
  claim = castTo($get_13(m, 'c', makeLambdaFunction(IdentityLinkProof$0methodref$fromCbor$Type.prototype.apply_0, IdentityLinkProof$0methodref$fromCbor$Type, [])), 274);
  encryptionKey = $getOptional(m, 'k', makeLambdaFunction(IdentityLinkProof$1methodref$fromCbor$Type.prototype.apply_0, IdentityLinkProof$1methodref$fromCbor$Type, []));
  signature = castTo(castTo($get_0(m.values_0, new CborObject$CborString('s')), 7), 27).value_0;
  alternativeUrl = $getOptional(m, 'bu', makeLambdaFunction(IdentityLinkProof$lambda$4$Type.prototype.apply_0, IdentityLinkProof$lambda$4$Type, []));
  return new IdentityLinkProof(claim, signature, encryptionKey, alternativeUrl);
}

function parse_4(postContents){
  var claim, line1, signature, signatureStart, signatureText;
  line1 = $split($trim(postContents), '\n')[0];
  claim = parse_2(line1);
  signatureStart = postContents.indexOf('\nsig: ') + 6;
  signatureText = $trim($substring_0(postContents, signatureStart, postContents.indexOf('\n', signatureStart)));
  signature = decode_6(signatureText);
  return new IdentityLinkProof(claim, signature, ($clinit_Optional() , $clinit_Optional() , EMPTY), (null , EMPTY));
}

defineClass(408, 1, $intern_67, IdentityLinkProof);
_.serialize = function serialize_106(){
  return $toByteArray_2($toCbor_76(this));
}
;
_.encodedSignature = function encodedSignature(){
  return encode_4(this.signature);
}
;
_.hasUrl = function hasUrl(){
  return this.postUrl.ref != null;
}
;
_.toCbor = function toCbor_104(){
  return $toCbor_76(this);
}
;
var Lpeergos_shared_user_IdentityLinkProof_2_classLit = createForClass('peergos.shared.user', 'IdentityLinkProof', 408);
function IdentityLinkProof$0methodref$fromCbor$Type(){
}

defineClass(2898, $wnd.Function, $intern_22, IdentityLinkProof$0methodref$fromCbor$Type);
_.apply_0 = function apply_1058(arg0){
  return fromCbor_84(castTo(arg0, 7));
}
;
function IdentityLinkProof$1methodref$fromCbor$Type(){
}

defineClass(2899, $wnd.Function, $intern_22, IdentityLinkProof$1methodref$fromCbor$Type);
_.apply_0 = function apply_1059(arg0){
  return fromCbor_24(castTo(arg0, 7));
}
;
function IdentityLinkProof$lambda$0$Type(cborData_0){
  this.cborData_0 = cborData_0;
}

defineClass(910, 1, $intern_32, IdentityLinkProof$lambda$0$Type);
_.accept = function accept_107(arg0){
  $put_6(this.cborData_0, 'k', castTo(arg0, 161));
}
;
_.andThen = function andThen_58(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_IdentityLinkProof$lambda$0$Type_2_classLit = createForClass('peergos.shared.user', 'IdentityLinkProof/lambda$0$Type', 910);
function IdentityLinkProof$lambda$1$Type(cborData_0){
  this.cborData_0 = cborData_0;
}

defineClass(911, 1, $intern_32, IdentityLinkProof$lambda$1$Type);
_.accept = function accept_108(arg0){
  $put_6(this.cborData_0, 'bu', new CborObject$CborString(castToString(arg0)));
}
;
_.andThen = function andThen_59(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_IdentityLinkProof$lambda$1$Type_2_classLit = createForClass('peergos.shared.user', 'IdentityLinkProof/lambda$1$Type', 911);
function IdentityLinkProof$lambda$4$Type(){
}

defineClass(2900, $wnd.Function, $intern_22, IdentityLinkProof$lambda$4$Type);
_.apply_0 = function apply_1060(arg0){
  return castTo(castTo(arg0, 7), 13).value_0;
}
;
function $addNewCapsToMirror(this$static, friend, current, diff, s, c, network){
  var all, direct;
  if (eq(diff.newCaps.readCaps.bytesRead, 0) && eq(diff.newCaps.writeCaps.bytesRead, 0) && !$anyMatch(diff.groupDiffs.values().stream(), new Predicate$lambda$2$Type(new CapsDiff$0methodref$isEmpty$Type)))
    return new CompletableFuture_0(new Pair(s, diff));
  all = (direct = concat(diff.newCaps.readCaps.retrievedCapabilities.stream(), diff.newCaps.writeCaps.retrievedCapabilities.stream()) , castTo(concat(direct, $flatMap_0(diff.groupDiffs.values().stream(), makeLambdaFunction(CapsDiff$lambda$2$Type.prototype.apply_0, CapsDiff$lambda$2$Type, []))).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17));
  return $thenCompose($thenCompose($getUpdated_0(this$static.worldRoot, s, network), makeLambdaFunction(IncomingCapCache$lambda$92$Type.prototype.apply_0, IncomingCapCache$lambda$92$Type, [this$static, friend, c, network, all])), makeLambdaFunction(IncomingCapCache$lambda$95$Type.prototype.apply_0, IncomingCapCache$lambda$95$Type, [this$static, friend, c, network, s, diff, current]));
}

function $ensureFriendUptodate(this$static, friend, sharedDir, groups, s, c, network){
  var cached, empty, equal, latestCwd, latestRoot, writer;
  writer = sharedDir.pointer.writer;
  if (!$containsKey_1(s.versions, writer))
    return new CompletableFuture_0(new Pair(s, new CapsDiff(0, 0, (empty = new CapabilitiesFromUser(0, ($clinit_Collections() , $clinit_Collections() , EMPTY_LIST)) , new CapsDiff$ReadAndWriteCaps(empty, empty)), (null , EMPTY_MAP))));
  latestCwd = $get_32(s, writer);
  latestRoot = latestCwd.hash_0;
  cached = castTo($get(this$static.pointerCache_0, writer), 20);
  equal = !!cached && $equals_7(latestRoot, cached.left);
  if (equal) {
    if (castTo(cached.right, 107).groupDiffs.size() == groups.array.length)
      return new CompletableFuture_0(new Pair(s, castTo(cached.right, 107)));
  }
  return $thenApply($thenCompose($thenCompose($thenApply($getUpdated_0(this$static.cacheRoot, s, network), makeLambdaFunction(IncomingCapCache$lambda$110$Type.prototype.apply_0, IncomingCapCache$lambda$110$Type, [this$static])), makeLambdaFunction(IncomingCapCache$lambda$68$Type.prototype.apply_0, IncomingCapCache$lambda$68$Type, [this$static, network, friend, s])), makeLambdaFunction(IncomingCapCache$lambda$71$Type.prototype.apply_0, IncomingCapCache$lambda$71$Type, [this$static, friend, sharedDir, groups, s, c, network])), makeLambdaFunction(IncomingCapCache$lambda$72$Type.prototype.apply_0, IncomingCapCache$lambda$72$Type, [this$static, writer, latestRoot]));
}

function $getAndUpdateRoot(this$static, s, network){
  return $thenApply($getUpdated_0(this$static.cacheRoot, s, network), makeLambdaFunction(IncomingCapCache$lambda$110$Type.prototype.apply_0, IncomingCapCache$lambda$110$Type, [this$static]));
}

function $getAndUpdateWorldRoot(this$static, s, network){
  return $thenApply($getUpdated_0(this$static.worldRoot, s, network), makeLambdaFunction(IncomingCapCache$lambda$109$Type.prototype.apply_0, IncomingCapCache$lambda$109$Type, [this$static]));
}

function $getAnyValidParentOfAChild(this$static, dir_0, hasher, network){
  var recurse;
  recurse = new IncomingCapCache$lambda$26$Type(this$static, hasher, network, dir_0);
  return $thenCompose($getChild_3(dir_0, dir_0.version, 'items.cbor', network), makeLambdaFunction(IncomingCapCache$lambda$31$Type.prototype.apply_0, IncomingCapCache$lambda$31$Type, [this$static, network, recurse, dir_0]));
}

function $getByPath_2(this$static, file, version, hasher, network){
  var elements, finalPath, union;
  finalPath = canonicalise_0(file.pathString);
  elements = new Arrays$ArrayList($split(finalPath, '/'));
  union = $mergeAndOverwriteWith(this$static.worldRoot.version, version);
  return $thenCompose($getDescendentByPath_0(this$static.worldRoot, (checkCriticalElementIndex(0, elements.array.length) , castToString(elements.array[0])), union, hasher, network), makeLambdaFunction(IncomingCapCache$lambda$1$Type.prototype.apply_0, IncomingCapCache$lambda$1$Type, [this$static, elements, union, network]));
}

function $getByPath_3(this$static, mirrorDir, path, childIndex, version, network){
  var recurse;
  recurse = new IncomingCapCache$lambda$2$Type(this$static, path, childIndex, version, network, mirrorDir);
  if (childIndex >= path.size())
    return $getAnyValidParentOfAChild(this$static, mirrorDir, this$static.hasher, network);
  return $thenCompose($getChild_3(mirrorDir, version, 'items.cbor', network), makeLambdaFunction(IncomingCapCache$lambda$6$Type.prototype.apply_0, IncomingCapCache$lambda$6$Type, [this$static, path, childIndex, network, recurse, mirrorDir, version]));
}

function $getCapsFrom(this$static, originalSharedDir, groups, current, s, network){
  return $thenCompose($getFile(network, originalSharedDir, s), makeLambdaFunction(IncomingCapCache$lambda$73$Type.prototype.apply_0, IncomingCapCache$lambda$73$Type, [this$static, current, network, s, groups]));
}

function $getChildren_1(this$static, dir_0, version, hasher, network){
  var elements, finalPath, union;
  finalPath = canonicalise_0(dir_0.pathString);
  elements = new Arrays$ArrayList($split(finalPath, '/'));
  union = $mergeAndOverwriteWith(this$static.worldRoot.version, version);
  return $thenCompose($getDescendentByPath_0(this$static.worldRoot, (checkCriticalElementIndex(0, elements.array.length) , castToString(elements.array[0])), union, hasher, network), makeLambdaFunction(IncomingCapCache$lambda$46$Type.prototype.apply_0, IncomingCapCache$lambda$46$Type, [this$static, elements, union, hasher, network]));
}

function $getChildren_2(this$static, mirrorDir, path, childIndex, version, hasher, network){
  var recurse;
  recurse = new IncomingCapCache$lambda$47$Type(this$static, path, childIndex, version, hasher, network, mirrorDir);
  if (childIndex == path.size())
    return $thenCompose($thenCompose($getChild_3(mirrorDir, version, 'items.cbor', network), makeLambdaFunction(IncomingCapCache$lambda$23$Type.prototype.apply_0, IncomingCapCache$lambda$23$Type, [this$static, network])), makeLambdaFunction(IncomingCapCache$lambda$51$Type.prototype.apply_0, IncomingCapCache$lambda$51$Type, [this$static, network, path, mirrorDir, hasher]));
  return $thenCompose($getChild_3(mirrorDir, version, 'items.cbor', network), makeLambdaFunction(IncomingCapCache$lambda$58$Type.prototype.apply_0, IncomingCapCache$lambda$58$Type, [this$static, hasher, network, path, childIndex, version, recurse]));
}

function $getIndirectChildren(this$static, mirrorDir, toExclude, hasher, network){
  return $thenApply($thenCompose($thenApply($getChildren_4(mirrorDir, hasher, network), makeLambdaFunction(IncomingCapCache$lambda$40$Type.prototype.apply_0, IncomingCapCache$lambda$40$Type, [toExclude])), makeLambdaFunction(IncomingCapCache$lambda$42$Type.prototype.apply_0, IncomingCapCache$lambda$42$Type, [this$static, hasher, network])), makeLambdaFunction(IncomingCapCache$lambda$44$Type.prototype.apply_0, IncomingCapCache$lambda$44$Type, []));
}

function $getLatestVersion_0(sharedDir, network){
  return $thenApply(($clinit_NetworkAccess() , asyncExceptionally(new NetworkAccess$lambda$37$Type(sharedDir, network), makeLambdaFunction(NetworkAccess$lambda$38$Type.prototype.apply_0, NetworkAccess$lambda$38$Type, [network, sharedDir]))), makeLambdaFunction(IncomingCapCache$lambda$67$Type.prototype.apply_0, IncomingCapCache$lambda$67$Type, []));
}

function $lambda$1_23(this$static, elements_1, union_2, network_3, dirOpt_3){
  if (dirOpt_3.ref == null)
    return new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY));
  return $getByPath_3(this$static, (checkCriticalElement(dirOpt_3.ref != null) , castTo(dirOpt_3.ref, 19)), elements_1, 1, union_2, network_3);
}

function $lambda$109(this$static, updated_0){
  this$static.worldRoot = updated_0;
  return updated_0;
}

function $lambda$11_7(this$static, path_1, childIndex_2, network_3, recurse_4, mirrorDir_5, version_6, caps_6){
  return castTo($orElseGet($map($getChild_1(caps_6, castToString(path_1.getAtIndex(childIndex_2))), makeLambdaFunction(IncomingCapCache$lambda$12$Type.prototype.apply_0, IncomingCapCache$lambda$12$Type, [this$static, path_1, childIndex_2, network_3, recurse_4, mirrorDir_5, version_6])), new IncomingCapCache$5methodref$get$Type(recurse_4)), 87);
}

function $lambda$110(this$static, updated_0){
  this$static.cacheRoot = updated_0;
  return updated_0;
}

function $lambda$12_6(this$static, path_1, childIndex_2, network_3, recurse_4, mirrorDir_5, version_6, cap_6){
  return $thenCompose($getFile(network_3, new EntryPoint(cap_6, castToString(path_1.getAtIndex(0))), version_6), makeLambdaFunction(IncomingCapCache$lambda$13$Type.prototype.apply_0, IncomingCapCache$lambda$13$Type, [this$static, path_1, childIndex_2, network_3, recurse_4, mirrorDir_5]));
}

function $lambda$13_9(this$static, path_1, childIndex_2, network_3, recurse_4, mirrorDir_5, fopt_5){
  var getDescendant;
  getDescendant = makeLambdaFunction(IncomingCapCache$lambda$14$Type.prototype.apply_0, IncomingCapCache$lambda$14$Type, [this$static, path_1, childIndex_2, network_3, recurse_4]);
  if (fopt_5.ref != null) {
    if ((checkCriticalElement(fopt_5.ref != null) , castTo(fopt_5.ref, 19)).isWritable_0)
      return $thenCompose($thenApply($getAnyLinkPointer((checkCriticalElement(fopt_5.ref != null) , castTo(fopt_5.ref, 19)), network_3), makeLambdaFunction(IncomingCapCache$lambda$16$Type.prototype.apply_0, IncomingCapCache$lambda$16$Type, [fopt_5])), getDescendant);
    return $thenCompose($hasChild(mirrorDir_5, castToString(path_1.getAtIndex(childIndex_2)), network_3), makeLambdaFunction(IncomingCapCache$lambda$18$Type.prototype.apply_0, IncomingCapCache$lambda$18$Type, [getDescendant, fopt_5, recurse_4]));
  }
  return $lambda$2_19(recurse_4.$$outer_0, recurse_4.path_1, recurse_4.childIndex_2, recurse_4.version_3, recurse_4.network_4, recurse_4.mirrorDir_5);
}

function $lambda$14_6(this$static, path_1, childIndex_2, network_3, recurse_4, dir_4){
  return castTo($orElseGet($map(dir_4, makeLambdaFunction(IncomingCapCache$lambda$15$Type.prototype.apply_0, IncomingCapCache$lambda$15$Type, [this$static, path_1, childIndex_2, network_3])), recurse_4), 6);
}

function $lambda$15_7(this$static, path_1, childIndex_2, network_3, f_3){
  return $getDescendentByPath_0(f_3, pathSuffix(path_1, childIndex_2 + 1), f_3.version, this$static.hasher, network_3);
}

function $lambda$2_19(this$static, path_1, childIndex_2, version_3, network_4, mirrorDir_5){
  return $thenCompose($getChild_3(mirrorDir_5, version_3, castToString(path_1.getAtIndex(childIndex_2)), network_4), makeLambdaFunction(IncomingCapCache$lambda$3$Type.prototype.apply_0, IncomingCapCache$lambda$3$Type, [this$static, path_1, childIndex_2, version_3, network_4]));
}

function $lambda$23_4(this$static, network_1, capsOpt_1){
  if (capsOpt_1.ref == null)
    return new CompletableFuture_0(new IncomingCapCache$CapsInDirectory(($clinit_Collections() , $clinit_Collections() , EMPTY_LIST)));
  return $thenApply($thenApply(readFully_0((checkCriticalElement(capsOpt_1.ref != null) , castTo(capsOpt_1.ref, 19)), this$static.crypto_0, network_1), makeLambdaFunction(IncomingCapCache$6methodref$fromByteArray$Type.prototype.apply_0, IncomingCapCache$6methodref$fromByteArray$Type, [])), makeLambdaFunction(IncomingCapCache$7methodref$fromCbor$Type.prototype.apply_0, IncomingCapCache$7methodref$fromCbor$Type, []));
}

function $lambda$26_5(this$static, hasher_1, network_2, dir_3){
  return $thenCompose($thenCompose($getChildren_4(dir_3, hasher_1, network_2), makeLambdaFunction(IncomingCapCache$lambda$27$Type.prototype.apply_0, IncomingCapCache$lambda$27$Type, [this$static, hasher_1, network_2])), makeLambdaFunction(IncomingCapCache$lambda$29$Type.prototype.apply_0, IncomingCapCache$lambda$29$Type, [network_2]));
}

function $lambda$27_2(this$static, hasher_1, network_2, children_2){
  return findFirst(children_2, makeLambdaFunction(IncomingCapCache$lambda$28$Type.prototype.apply_0, IncomingCapCache$lambda$28$Type, [this$static, hasher_1, network_2]));
}

function $lambda$28_3(this$static, hasher_1, network_2, c_2){
  var recurse;
  return recurse = new IncomingCapCache$lambda$26$Type(this$static, hasher_1, network_2, c_2) , $thenCompose($getChild_3(c_2, c_2.version, 'items.cbor', network_2), makeLambdaFunction(IncomingCapCache$lambda$31$Type.prototype.apply_0, IncomingCapCache$lambda$31$Type, [this$static, network_2, recurse, c_2]));
}

function $lambda$3_19(this$static, path_1, childIndex_2, version_3, network_4, childOpt_4){
  return castTo($orElseGet($map(childOpt_4, makeLambdaFunction(IncomingCapCache$lambda$4$Type.prototype.apply_0, IncomingCapCache$lambda$4$Type, [this$static, path_1, childIndex_2, version_3, network_4])), new IncomingCapCache$lambda$5$Type), 87);
}

function $lambda$31_4(this$static, network_1, recurse_2, dir_3, capsOpt_3){
  var ownerName;
  ownerName = dir_3.ownername;
  if (capsOpt_3.ref != null)
    return $thenCompose($thenCompose($thenApply($thenApply(readFully_0((checkCriticalElement(capsOpt_3.ref != null) , castTo(capsOpt_3.ref, 19)), this$static.crypto_0, network_1), makeLambdaFunction(IncomingCapCache$8methodref$fromByteArray$Type.prototype.apply_0, IncomingCapCache$8methodref$fromByteArray$Type, [])), makeLambdaFunction(IncomingCapCache$9methodref$fromCbor$Type.prototype.apply_0, IncomingCapCache$9methodref$fromCbor$Type, [])), makeLambdaFunction(IncomingCapCache$lambda$34$Type.prototype.apply_0, IncomingCapCache$lambda$34$Type, [network_1, ownerName])), makeLambdaFunction(IncomingCapCache$lambda$36$Type.prototype.apply_0, IncomingCapCache$lambda$36$Type, [network_1, recurse_2]));
  return $lambda$26_5(recurse_2.$$outer_0, recurse_2.hasher_1, recurse_2.network_2, recurse_2.dir_3);
}

function $lambda$4_14(this$static, path_1, childIndex_2, version_3, network_4, c_4){
  return $getByPath_3(this$static, c_4, path_1, childIndex_2 + 1, version_3, network_4);
}

function $lambda$42_2(this$static, hasher_1, network_2, remainingDirs_2){
  return combineAll(castTo($collect_0($map_0(remainingDirs_2.stream(), makeLambdaFunction(IncomingCapCache$lambda$43$Type.prototype.apply_0, IncomingCapCache$lambda$43$Type, [this$static, hasher_1, network_2])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 54));
}

function $lambda$43_1(this$static, hasher_1, network_2, child_2){
  var recurse;
  return recurse = new IncomingCapCache$lambda$26$Type(this$static, hasher_1, network_2, child_2) , $thenCompose($getChild_3(child_2, child_2.version, 'items.cbor', network_2), makeLambdaFunction(IncomingCapCache$lambda$31$Type.prototype.apply_0, IncomingCapCache$lambda$31$Type, [this$static, network_2, recurse, child_2]));
}

function $lambda$46_1(this$static, elements_1, union_2, hasher_3, network_4, dirOpt_4){
  if (dirOpt_4.ref == null)
    return new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_SET));
  return $getChildren_2(this$static, (checkCriticalElement(dirOpt_4.ref != null) , castTo(dirOpt_4.ref, 19)), elements_1, 1, union_2, hasher_3, network_4);
}

function $lambda$47_1(this$static, path_1, childIndex_2, version_3, hasher_4, network_5, mirrorDir_6){
  return $thenCompose($getChild_3(mirrorDir_6, version_3, castToString(path_1.getAtIndex(childIndex_2)), network_5), makeLambdaFunction(IncomingCapCache$lambda$48$Type.prototype.apply_0, IncomingCapCache$lambda$48$Type, [this$static, path_1, childIndex_2, version_3, hasher_4, network_5]));
}

function $lambda$48_1(this$static, path_1, childIndex_2, version_3, hasher_4, network_5, childOpt_5){
  return castTo($orElseGet($map(childOpt_5, makeLambdaFunction(IncomingCapCache$lambda$49$Type.prototype.apply_0, IncomingCapCache$lambda$49$Type, [this$static, path_1, childIndex_2, version_3, hasher_4, network_5])), new IncomingCapCache$lambda$50$Type), 87);
}

function $lambda$49_2(this$static, path_1, childIndex_2, version_3, hasher_4, network_5, c_5){
  return $getChildren_2(this$static, c_5, path_1, childIndex_2 + 1, version_3, hasher_4, network_5);
}

function $lambda$51_0(this$static, network_1, path_2, mirrorDir_3, hasher_4, caps_4){
  return $thenCompose($thenApply(combineAll(castTo($collect_0($map_0(castTo($collect_0($map_0(caps_4.children.stream(), makeLambdaFunction(IncomingCapCache$CapsInDirectory$lambda$5$Type.prototype.apply_0, IncomingCapCache$CapsInDirectory$lambda$5$Type, [])), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47).stream(), makeLambdaFunction(IncomingCapCache$lambda$52$Type.prototype.apply_0, IncomingCapCache$lambda$52$Type, [network_1, path_2])), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [UNORDERED, IDENTITY_FINISH]))), 54)), makeLambdaFunction(IncomingCapCache$lambda$53$Type.prototype.apply_0, IncomingCapCache$lambda$53$Type, [])), makeLambdaFunction(IncomingCapCache$lambda$55$Type.prototype.apply_0, IncomingCapCache$lambda$55$Type, [this$static, mirrorDir_3, hasher_4, network_1]));
}

function $lambda$55_1(this$static, mirrorDir_1, hasher_2, network_3, direct_3){
  return $thenApply($getIndirectChildren(this$static, mirrorDir_1, castTo($collect_0($map_0(direct_3.stream(), makeLambdaFunction(IncomingCapCache$12methodref$getName$Type.prototype.apply_0, IncomingCapCache$12methodref$getName$Type, [])), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47), hasher_2, network_3), makeLambdaFunction(IncomingCapCache$lambda$57$Type.prototype.apply_0, IncomingCapCache$lambda$57$Type, [direct_3]));
}

function $lambda$58_0(this$static, hasher_1, network_2, path_3, childIndex_4, version_5, recurse_6, capsOpt_6){
  if (capsOpt_6.ref == null)
    return $lambda$47_1(recurse_6.$$outer_0, recurse_6.path_1, recurse_6.childIndex_2, recurse_6.version_3, recurse_6.hasher_4, recurse_6.network_5, recurse_6.mirrorDir_6);
  return $thenCompose($thenApply($thenApply(readFully_0((checkCriticalElement(capsOpt_6.ref != null) , castTo(capsOpt_6.ref, 19)), this$static.crypto_0, network_2), makeLambdaFunction(IncomingCapCache$13methodref$fromByteArray$Type.prototype.apply_0, IncomingCapCache$13methodref$fromByteArray$Type, [])), makeLambdaFunction(IncomingCapCache$14methodref$fromCbor$Type.prototype.apply_0, IncomingCapCache$14methodref$fromCbor$Type, [])), makeLambdaFunction(IncomingCapCache$lambda$61$Type.prototype.apply_0, IncomingCapCache$lambda$61$Type, [hasher_1, network_2, path_3, childIndex_4, version_5, recurse_6]));
}

function $lambda$6_13(this$static, path_1, childIndex_2, network_3, recurse_4, mirrorDir_5, version_6, capsOpt_6){
  var capsFile;
  if (capsOpt_6.ref == null)
    return $lambda$2_19(recurse_4.$$outer_0, recurse_4.path_1, recurse_4.childIndex_2, recurse_4.version_3, recurse_4.network_4, recurse_4.mirrorDir_5);
  capsFile = (checkCriticalElement(capsOpt_6.ref != null) , castTo(capsOpt_6.ref, 19));
  return $thenCompose($thenApply($thenApply($thenCompose($getInputStream_2(capsFile, $get_32(capsFile.version, capsFile.pointer.capability.writer).props, network_3, this$static.crypto_0, makeLambdaFunction(IncomingCapCache$lambda$7$Type.prototype.accept_5, IncomingCapCache$lambda$7$Type, [])), makeLambdaFunction(IncomingCapCache$lambda$8$Type.prototype.apply_0, IncomingCapCache$lambda$8$Type, [capsFile])), makeLambdaFunction(IncomingCapCache$3methodref$fromByteArray$Type.prototype.apply_0, IncomingCapCache$3methodref$fromByteArray$Type, [])), makeLambdaFunction(IncomingCapCache$4methodref$fromCbor$Type.prototype.apply_0, IncomingCapCache$4methodref$fromCbor$Type, [])), makeLambdaFunction(IncomingCapCache$lambda$11$Type.prototype.apply_0, IncomingCapCache$lambda$11$Type, [this$static, path_1, childIndex_2, network_3, recurse_4, mirrorDir_5, version_6]));
}

function $lambda$68_0(this$static, network_1, friend_2, s_3, root_3){
  return $thenCompose($getDescendentByPath_0(root_3, friend_2 + '$incoming.cbor', s_3, this$static.hasher, network_1), makeLambdaFunction(IncomingCapCache$lambda$69$Type.prototype.apply_0, IncomingCapCache$lambda$69$Type, [this$static, network_1]));
}

function $lambda$69_1(this$static, network_1, stateOpt_1){
  if (stateOpt_1.ref == null)
    return new CompletableFuture_0(new ProcessedCaps(0, 0, 0, 0, ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)));
  return $thenApply(readFully_0((checkCriticalElement(stateOpt_1.ref != null) , castTo(stateOpt_1.ref, 19)), this$static.crypto_0, network_1), makeLambdaFunction(IncomingCapCache$lambda$70$Type.prototype.apply_0, IncomingCapCache$lambda$70$Type, []));
}

function $lambda$71_0(this$static, friend_1, sharedDir_2, groups_3, s_4, c_5, network_6, currentState_6){
  return $thenCompose($thenCompose($thenCompose($getFile(network_6, sharedDir_2, s_4), makeLambdaFunction(IncomingCapCache$lambda$73$Type.prototype.apply_0, IncomingCapCache$lambda$73$Type, [this$static, currentState_6, network_6, s_4, groups_3])), makeLambdaFunction(IncomingCapCache$lambda$88$Type.prototype.apply_0, IncomingCapCache$lambda$88$Type, [this$static, friend_1, currentState_6, s_4, c_5, network_6])), makeLambdaFunction(IncomingCapCache$lambda$89$Type.prototype.apply_0, IncomingCapCache$lambda$89$Type, [this$static, network_6]));
}

function $lambda$72_1(this$static, writer_1, latestRoot_2, res_2){
  $put(this$static.pointerCache_0, writer_1, new Pair(latestRoot_2, $flatten(castTo(res_2.right, 107))));
  return res_2;
}

function $lambda$73_0(this$static, current_1, network_2, s_3, groups_4, shared_4){
  var empty;
  return shared_4.ref == null?new CompletableFuture_0(new CapsDiff(0, 0, (empty = new CapabilitiesFromUser(0, ($clinit_Collections() , $clinit_Collections() , EMPTY_LIST)) , new CapsDiff$ReadAndWriteCaps(empty, empty)), (null , EMPTY_MAP))):$thenCompose(retrieveNewCaps_0((checkCriticalElement(shared_4.ref != null) , castTo(shared_4.ref, 19)), current_1, network_2, this$static.crypto_0), makeLambdaFunction(IncomingCapCache$lambda$74$Type.prototype.apply_0, IncomingCapCache$lambda$74$Type, [this$static, current_1, network_2, s_3, groups_4]));
}

function $lambda$74_1(this$static, current_1, network_2, s_3, groups_4, direct_4){
  return $thenApply(combineAll(castTo($collect_0($map_0($parallel(new StreamImpl(null, new Spliterators$IteratorSpliterator(groups_4, 16))), makeLambdaFunction(IncomingCapCache$lambda$75$Type.prototype.apply_0, IncomingCapCache$lambda$75$Type, [this$static, current_1, network_2, s_3])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 54)), makeLambdaFunction(IncomingCapCache$lambda$80$Type.prototype.apply_0, IncomingCapCache$lambda$80$Type, [direct_4, current_1]));
}

function $lambda$75(this$static, current_1, network_2, s_3, e_3){
  return $exceptionally($thenCompose($thenApply($getFile(network_2, e_3, s_3), makeLambdaFunction(IncomingCapCache$15methodref$get$Type.prototype.apply_0, IncomingCapCache$15methodref$get$Type, [])), makeLambdaFunction(IncomingCapCache$lambda$77$Type.prototype.apply_0, IncomingCapCache$lambda$77$Type, [this$static, current_1, network_2])), makeLambdaFunction(IncomingCapCache$lambda$79$Type.prototype.apply_0, IncomingCapCache$lambda$79$Type, []));
}

function $lambda$77_0(this$static, current_1, network_2, sharedDir_2){
  return $thenApply(retrieveNewCaps_0(sharedDir_2, castTo(current_1.groups.getOrDefault(($ensureUnmodified(sharedDir_2) , sharedDir_2.props).name, new ProcessedCaps(0, 0, 0, 0, ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP))), 163), network_2, this$static.crypto_0), makeLambdaFunction(IncomingCapCache$lambda$78$Type.prototype.apply_0, IncomingCapCache$lambda$78$Type, [sharedDir_2]));
}

function $lambda$88_0(this$static, friend_1, current_2, s_3, c_4, network_5, diff_5){
  return $addNewCapsToMirror(this$static, friend_1, current_2, diff_5, s_3, c_4, network_5);
}

function $lambda$89(this$static, network_1, p_1){
  return $thenApply($getAndUpdateWorldRoot(this$static, castTo(p_1.left, 43), network_1), makeLambdaFunction(IncomingCapCache$lambda$90$Type.prototype.apply_0, IncomingCapCache$lambda$90$Type, [p_1]));
}

function $lambda$92_0(this$static, friend_1, c_2, network_3, all_4, updatedWorldRoot_4){
  return reduceAll(all_4, updatedWorldRoot_4, new IncomingCapCache$lambda$93$Type(this$static, friend_1, c_2, network_3), new IncomingCapCache$lambda$94$Type);
}

function $lambda$93_0(this$static, friend_1, c_2, network_3, r_3, cap_4){
  return addCapToMirror(friend_1, r_3, cap_4, r_3.version, c_2, this$static.crypto_0, network_3);
}

function $lambda$95(this$static, friend_1, c_2, network_3, s_4, diff_5, current_6, updatedRoot_6){
  var raw, reader, updated;
  this$static.worldRoot = updatedRoot_6;
  updated = $add_4(current_6, diff_5);
  raw = $toByteArray_2($toCbor_54(updated));
  reader = new AsyncReader$ArrayBacked(raw);
  return $thenApply($thenCompose($getAndUpdateRoot(this$static, updatedRoot_6.version, network_3), makeLambdaFunction(IncomingCapCache$lambda$96$Type.prototype.apply_0, IncomingCapCache$lambda$96$Type, [this$static, friend_1, reader, raw, updatedRoot_6, c_2, network_3])), makeLambdaFunction(IncomingCapCache$lambda$98$Type.prototype.apply_0, IncomingCapCache$lambda$98$Type, [s_4, diff_5]));
}

function $lambda$96(this$static, friend_1, reader_2, raw_3, updatedRoot_4, c_5, network_6, root_6){
  return $uploadOrReplaceFile_1(root_6, friend_1 + '$incoming.cbor', reader_2, raw_3.length, false, updatedRoot_4.version, c_5, network_6, this$static.crypto_0, makeLambdaFunction(IncomingCapCache$lambda$97$Type.prototype.accept_5, IncomingCapCache$lambda$97$Type, []), $randomBytes(this$static.crypto_0.random, 32), ($clinit_Optional() , new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(this$static.crypto_0.random, 32)))))), $mirrorBatId(root_6.pointer.fileAccess));
}

function IncomingCapCache(cacheRoot, worldRoot, crypto_0){
  this.cacheRoot = cacheRoot;
  this.worldRoot = worldRoot;
  this.crypto_0 = crypto_0;
  this.hasher = crypto_0.hasher;
  this.pointerCache_0 = new HashMap;
}

function addCapToMirror(friend, root, cap, s, c, crypto_0, network){
  var filename, fullPath, owner, parentPath;
  fullPath = get_176(cap.path, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, []));
  parentPath = $getParent(fullPath);
  owner = $getName_0(fullPath, 0).pathString;
  filename = $getFileName(fullPath).pathString;
  return $thenCompose($thenCompose($thenCompose($thenCompose($withWriter(s, $owner(root), root.pointer.capability.writer, network), makeLambdaFunction(FileWrapper$lambda$3$Type.prototype.apply_0, FileWrapper$lambda$3$Type, [root, network])), makeLambdaFunction(IncomingCapCache$lambda$99$Type.prototype.apply_0, IncomingCapCache$lambda$99$Type, [parentPath, root, network, crypto_0, s, c])), makeLambdaFunction(IncomingCapCache$lambda$100$Type.prototype.apply_0, IncomingCapCache$lambda$100$Type, [filename, cap, friend, owner, network, crypto_0, c, root])), makeLambdaFunction(IncomingCapCache$lambda$108$Type.prototype.apply_0, IncomingCapCache$lambda$108$Type, [root, network]));
}

function lambda$0_22(cacheRoot_0, crypto_1, worldRoot_2){
  return new IncomingCapCache(cacheRoot_0, worldRoot_2, crypto_1);
}

function lambda$100(filename_0, cap_1, friend_2, owner_3, network_4, crypto_5, c_6, root_7, p_8){
  return $thenCompose($getChild_3(castTo(p_8.right, 19), castTo(p_8.left, 43), 'items.cbor', network_4), makeLambdaFunction(IncomingCapCache$lambda$101$Type.prototype.apply_0, IncomingCapCache$lambda$101$Type, [filename_0, cap_1, friend_2, owner_3, network_4, crypto_5, p_8, c_6, root_7]));
}

function lambda$101(filename_0, cap_1, friend_2, owner_3, network_4, crypto_5, p_6, c_7, root_8, capsOpt_9){
  var raw, reader, single;
  if (capsOpt_9.ref == null) {
    single = of_6(filename_0, cap_1.cap, friend_2);
    raw = $toByteArray_2($toCbor_77(single));
    reader = new AsyncReader$ArrayBacked(raw);
    return $uploadOrReplaceFile_1(castTo(p_6.right, 19), 'items.cbor', reader, raw.length, false, castTo(p_6.left, 43), c_7, network_4, crypto_5, makeLambdaFunction(IncomingCapCache$lambda$102$Type.prototype.accept_5, IncomingCapCache$lambda$102$Type, []), $randomBytes(crypto_5.random, 32), ($clinit_Optional() , new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(crypto_5.random, 32)))))), $mirrorBatId(root_8.pointer.fileAccess));
  }
  return $thenCompose($thenCompose($thenApply($thenApply(readFully_0((checkCriticalElement(capsOpt_9.ref != null) , castTo(capsOpt_9.ref, 19)), crypto_5, network_4), makeLambdaFunction(IncomingCapCache$18methodref$fromByteArray$Type.prototype.apply_0, IncomingCapCache$18methodref$fromByteArray$Type, [])), makeLambdaFunction(IncomingCapCache$19methodref$fromCbor$Type.prototype.apply_0, IncomingCapCache$19methodref$fromCbor$Type, [])), makeLambdaFunction(IncomingCapCache$lambda$105$Type.prototype.apply_0, IncomingCapCache$lambda$105$Type, [filename_0, cap_1, friend_2, owner_3, network_4])), makeLambdaFunction(IncomingCapCache$lambda$106$Type.prototype.apply_0, IncomingCapCache$lambda$106$Type, [capsOpt_9, network_4, crypto_5, p_6, c_7]));
}

function lambda$105(filename_0, cap_1, friend_2, owner_3, network_4, existing_5){
  return $addChild_0(existing_5, filename_0, cap_1.cap, friend_2, owner_3, network_4);
}

function lambda$106(capsOpt_0, network_1, crypto_2, p_3, c_4, updated_5){
  var raw, reader;
  raw = $toByteArray_2($toCbor_77(updated_5));
  reader = new AsyncReader$ArrayBacked(raw);
  return $overwriteFile_0((checkCriticalElement(capsOpt_0.ref != null) , castTo(capsOpt_0.ref, 19)), reader, raw.length, network_1, crypto_2, makeLambdaFunction(IncomingCapCache$lambda$107$Type.prototype.accept_5, IncomingCapCache$lambda$107$Type, []), castTo(p_3.left, 43), c_4);
}

function lambda$108(root_0, network_1, v_2){
  return $thenCompose($withWriter(v_2, $owner(root_0), root_0.pointer.capability.writer, network_1), makeLambdaFunction(FileWrapper$lambda$3$Type.prototype.apply_0, FileWrapper$lambda$3$Type, [root_0, network_1]));
}

function lambda$17_0(linkOpt_0, g_1){
  return new FileWrapper(g_1.capTrie, g_1.pointer, linkOpt_0, g_1.entryWriter, g_1.ownername, g_1.version);
}

function lambda$18_3(getDescendant_0, fopt_1, recurse_2, hasDescendantCaps_3){
  return (checkCriticalNotNull(hasDescendantCaps_3) , hasDescendantCaps_3)?$thenCompose($lambda$2_19(recurse_2.$$outer_0, recurse_2.path_1, recurse_2.childIndex_2, recurse_2.version_3, recurse_2.network_4, recurse_2.mirrorDir_5), makeLambdaFunction(IncomingCapCache$lambda$19$Type.prototype.apply_0, IncomingCapCache$lambda$19$Type, [getDescendant_0, fopt_1])):$lambda$14_6(getDescendant_0.$$outer_0, getDescendant_0.path_1, getDescendant_0.childIndex_2, getDescendant_0.network_3, getDescendant_0.recurse_4, fopt_1);
}

function lambda$19_2(getDescendant_0, fopt_1, dopt_2){
  return castTo($orElseGet($map(dopt_2, makeLambdaFunction(IncomingCapCache$lambda$20$Type.prototype.apply_0, IncomingCapCache$lambda$20$Type, [dopt_2])), new IncomingCapCache$lambda$21$Type(getDescendant_0, fopt_1)), 87);
}

function lambda$29(network_0, copt_1){
  return castTo($orElse($map(copt_1, makeLambdaFunction(IncomingCapCache$lambda$30$Type.prototype.apply_0, IncomingCapCache$lambda$30$Type, [network_0])), new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY))), 87);
}

function lambda$30_0(network_0, f_1){
  return $ensureUnmodified(f_1) , retrieveParent(castTo($orElse(f_1.linkPointer, f_1.pointer), 83), f_1.ownername, f_1.version, network_0);
}

function lambda$34_0(network_0, ownerName_1, caps_2){
  return findFirst(caps_2.children, makeLambdaFunction(IncomingCapCache$lambda$35$Type.prototype.apply_0, IncomingCapCache$lambda$35$Type, [network_0, ownerName_1]));
}

function lambda$35_0(network_0, ownerName_1, c_2){
  return $retrieveEntryPoint(network_0, new EntryPoint(c_2.cap, ownerName_1));
}

function lambda$36_0(network_0, recurse_1, fileOpt_2){
  return asyncExceptionally(new IncomingCapCache$lambda$37$Type(network_0, fileOpt_2, recurse_1), makeLambdaFunction(IncomingCapCache$lambda$38$Type.prototype.apply_0, IncomingCapCache$lambda$38$Type, [recurse_1]));
}

function lambda$37_1(network_0, fileOpt_1, recurse_2){
  return castTo($orElseGet($map(fileOpt_1, makeLambdaFunction(IncomingCapCache$lambda$39$Type.prototype.apply_0, IncomingCapCache$lambda$39$Type, [network_0])), recurse_2), 6);
}

function lambda$39_0(network_0, f_1){
  return $ensureUnmodified(f_1) , retrieveParent(castTo($orElse(f_1.linkPointer, f_1.pointer), 83), f_1.ownername, f_1.version, network_0);
}

function lambda$40_0(toExclude_0, children_1){
  return castTo($collect_0($filter(children_1.stream(), new IncomingCapCache$lambda$41$Type(toExclude_0)), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47);
}

function lambda$41_0(toExclude_0, c_1){
  return !toExclude_0.contains(($ensureUnmodified(c_1) , c_1.props).name) && !$equals_0(($ensureUnmodified(c_1) , c_1.props).name, 'items.cbor');
}

function lambda$52_0(network_0, path_1, cap_2){
  return $retrieveEntryPoint(network_0, new EntryPoint(cap_2, castToString(path_1.getAtIndex(0))));
}

function lambda$57(direct_0, indirectChildren_1){
  return castTo(concat(direct_0.stream(), indirectChildren_1.stream()).collect_0(of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47);
}

function lambda$61_0(hasher_0, network_1, path_2, childIndex_3, version_4, recurse_5, caps_6){
  return castTo($orElseGet($map($getChild_1(caps_6, castToString(path_2.getAtIndex(childIndex_3))), makeLambdaFunction(IncomingCapCache$lambda$62$Type.prototype.apply_0, IncomingCapCache$lambda$62$Type, [hasher_0, network_1, path_2, childIndex_3, version_4, recurse_5])), recurse_5), 87);
}

function lambda$62(hasher_0, network_1, path_2, childIndex_3, version_4, recurse_5, cap_6){
  return $thenCompose($getFile(network_1, new EntryPoint(cap_6, castToString(path_2.getAtIndex(0))), version_4), makeLambdaFunction(IncomingCapCache$lambda$63$Type.prototype.apply_0, IncomingCapCache$lambda$63$Type, [hasher_0, network_1, path_2, childIndex_3, version_4, recurse_5]));
}

function lambda$63_1(hasher_0, network_1, path_2, childIndex_3, version_4, recurse_5, fopt_6){
  return castTo($orElseGet($map(fopt_6, makeLambdaFunction(IncomingCapCache$lambda$64$Type.prototype.apply_0, IncomingCapCache$lambda$64$Type, [hasher_0, network_1, path_2, childIndex_3, version_4])), recurse_5), 87);
}

function lambda$64_1(hasher_0, network_1, path_2, childIndex_3, version_4, f_5){
  return $thenCompose($getDescendentByPath_0(f_5, pathSuffix(path_2, childIndex_3 + 1), $mergeAndOverwriteWith(version_4, f_5.version), hasher_0, network_1), makeLambdaFunction(IncomingCapCache$lambda$65$Type.prototype.apply_0, IncomingCapCache$lambda$65$Type, [hasher_0, network_1]));
}

function lambda$65_2(hasher_0, network_1, dir_2){
  return castTo($orElse($map(dir_2, makeLambdaFunction(IncomingCapCache$lambda$66$Type.prototype.apply_0, IncomingCapCache$lambda$66$Type, [hasher_0, network_1])), new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_SET))), 87);
}

function lambda$66_1(hasher_0, network_1, d_2){
  return $getChildren_4(d_2, hasher_0, network_1);
}

function lambda$78_0(sharedDir_0, diff_1){
  return $clinit_Optional() , new Optional(checkCriticalNotNull(new Pair(($ensureUnmodified(sharedDir_0) , sharedDir_0.props).name, diff_1)));
}

function lambda$8_3(capsFile_0, r_1){
  return readFully(r_1, ($ensureUnmodified(capsFile_0) , capsFile_0.props).size_0);
}

function lambda$80_0(direct_0, current_1, groupDiffs_2){
  return castTo($reduce($flatMap_0(groupDiffs_2.stream(), makeLambdaFunction(IncomingCapCache$16methodref$stream$Type.prototype.apply_0, IncomingCapCache$16methodref$stream$Type, [])), direct_0, new IncomingCapCache$lambda$82$Type(current_1)), 107);
}

function lambda$82(current_0, a_1, p_2){
  return $mergeGroups(a_1, $createGroupDiff(current_0, castToString(p_2.left), castTo(p_2.right, 107)));
}

function lambda$85(sharedDir_0, writeCapBytes_1, crypto_3, network_4, newReadCaps_4){
  return $thenApply($thenCompose($thenApply($getChild_2(sharedDir_0, 'sharing.w', network_4), makeLambdaFunction(CapabilityStore$lambda$11$Type.prototype.apply_0, CapabilityStore$lambda$11$Type, [])), makeLambdaFunction(IncomingCapCache$lambda$91$Type.prototype.apply_0, IncomingCapCache$lambda$91$Type, [writeCapBytes_1, sharedDir_0, network_4, crypto_3])), makeLambdaFunction(IncomingCapCache$lambda$86$Type.prototype.apply_0, IncomingCapCache$lambda$86$Type, [newReadCaps_4]));
}

function lambda$91_1(byteOffsetWrite_0, sharedDir_2, network_3, crypto_4, editFilesize_4){
  if (eq(editFilesize_4.value_0, byteOffsetWrite_0))
    return new CompletableFuture_0(new CapabilitiesFromUser(0, ($clinit_Collections() , $clinit_Collections() , EMPTY_LIST)));
  return $thenCompose($getChild_3(sharedDir_2, sharedDir_2.version, 'sharing.w', network_3), makeLambdaFunction(CapabilityStore$lambda$9$Type.prototype.apply_0, CapabilityStore$lambda$9$Type, [byteOffsetWrite_0, sharedDir_2, network_3, crypto_4]));
}

function lambda$98(s_0, diff_1, v_2){
  return new Pair($mergeAndOverwriteWith(s_0, v_2), diff_1);
}

function lambda$99(parentPath_0, root_1, network_2, crypto_3, s_4, c_5, freshRoot_6){
  return $getOrMkdirs_0(freshRoot_6, components(parentPath_0), $mirrorBatId(root_1.pointer.fileAccess), network_2, crypto_3, s_4, c_5);
}

function pathSuffix(path, from){
  if (from >= path.size())
    return '';
  return join_2(path.subList(from, path.size()));
}

function retrieveNewCaps(sharedDir, readCapBytes, writeCapBytes, network, crypto_0){
  return $thenApply($thenCompose($thenCompose($getChild_2(sharedDir, 'sharing.r', network), makeLambdaFunction(CapabilityStore$lambda$9$Type.prototype.apply_0, CapabilityStore$lambda$9$Type, [readCapBytes, sharedDir, network, crypto_0])), makeLambdaFunction(IncomingCapCache$lambda$85$Type.prototype.apply_0, IncomingCapCache$lambda$85$Type, [sharedDir, writeCapBytes, crypto_0, network])), makeLambdaFunction(IncomingCapCache$lambda$87$Type.prototype.apply_0, IncomingCapCache$lambda$87$Type, [readCapBytes, writeCapBytes]));
}

function retrieveNewCaps_0(sharedDir, current, network, crypto_0){
  return $exceptionally(retrieveNewCaps(sharedDir, current.readCapBytes, current.writeCapBytes, network, crypto_0), makeLambdaFunction(IncomingCapCache$lambda$84$Type.prototype.apply_0, IncomingCapCache$lambda$84$Type, []));
}

defineClass(803, 1, {}, IncomingCapCache);
var Lpeergos_shared_user_IncomingCapCache_2_classLit = createForClass('peergos.shared.user', 'IncomingCapCache', 803);
function IncomingCapCache$10methodref$stream$Type(){
}

defineClass(2423, $wnd.Function, $intern_22, IncomingCapCache$10methodref$stream$Type);
_.apply_0 = function apply_1061(arg0){
  return $stream(castTo(arg0, 12));
}
;
function IncomingCapCache$11methodref$stream$Type(){
}

defineClass(2424, $wnd.Function, $intern_22, IncomingCapCache$11methodref$stream$Type);
_.apply_0 = function apply_1062(arg0){
  return $stream(castTo(arg0, 12));
}
;
function IncomingCapCache$12methodref$getName$Type(){
}

defineClass(2380, $wnd.Function, $intern_22, IncomingCapCache$12methodref$getName$Type);
_.apply_0 = function apply_1063(arg0){
  return $getName_1(castTo(arg0, 19));
}
;
function IncomingCapCache$13methodref$fromByteArray$Type(){
}

defineClass(2382, $wnd.Function, $intern_22, IncomingCapCache$13methodref$fromByteArray$Type);
_.apply_0 = function apply_1064(arg0){
  return fromByteArray(castTo(arg0, 11));
}
;
function IncomingCapCache$14methodref$fromCbor$Type(){
}

defineClass(2383, $wnd.Function, $intern_22, IncomingCapCache$14methodref$fromCbor$Type);
_.apply_0 = function apply_1065(arg0){
  return fromCbor_87(castTo(arg0, 7));
}
;
function IncomingCapCache$15methodref$get$Type(){
}

defineClass(2397, $wnd.Function, $intern_22, IncomingCapCache$15methodref$get$Type);
_.apply_0 = function apply_1066(arg0){
  return $get_6(castTo(arg0, 12));
}
;
function IncomingCapCache$16methodref$stream$Type(){
}

defineClass(2401, $wnd.Function, $intern_22, IncomingCapCache$16methodref$stream$Type);
_.apply_0 = function apply_1067(arg0){
  return $stream(castTo(arg0, 12));
}
;
defineClass(816, 1, $intern_34);
_.apply_1 = function apply_1068(arg0, arg1){
  return $mergeGroups(castTo(arg0, 107), castTo(arg1, 107));
}
;
var Lpeergos_shared_user_IncomingCapCache$17methodref$mergeGroups$Type_2_classLit = createForClass('peergos.shared.user', 'IncomingCapCache/17methodref$mergeGroups$Type', 816);
function IncomingCapCache$18methodref$fromByteArray$Type(){
}

defineClass(2411, $wnd.Function, $intern_22, IncomingCapCache$18methodref$fromByteArray$Type);
_.apply_0 = function apply_1069(arg0){
  return fromByteArray(castTo(arg0, 11));
}
;
function IncomingCapCache$19methodref$fromCbor$Type(){
}

defineClass(2412, $wnd.Function, $intern_22, IncomingCapCache$19methodref$fromCbor$Type);
_.apply_0 = function apply_1070(arg0){
  return fromCbor_87(castTo(arg0, 7));
}
;
function IncomingCapCache$3methodref$fromByteArray$Type(){
}

defineClass(2349, $wnd.Function, $intern_22, IncomingCapCache$3methodref$fromByteArray$Type);
_.apply_0 = function apply_1071(arg0){
  return fromByteArray(castTo(arg0, 11));
}
;
function IncomingCapCache$4methodref$fromCbor$Type(){
}

defineClass(2350, $wnd.Function, $intern_22, IncomingCapCache$4methodref$fromCbor$Type);
_.apply_0 = function apply_1072(arg0){
  return fromCbor_87(castTo(arg0, 7));
}
;
function IncomingCapCache$5methodref$get$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(810, 1, {}, IncomingCapCache$5methodref$get$Type);
_.get_0 = function get_101(){
  return $get_26(this.$$outer_0);
}
;
var Lpeergos_shared_user_IncomingCapCache$5methodref$get$Type_2_classLit = createForClass('peergos.shared.user', 'IncomingCapCache/5methodref$get$Type', 810);
function IncomingCapCache$6methodref$fromByteArray$Type(){
}

defineClass(2360, $wnd.Function, $intern_22, IncomingCapCache$6methodref$fromByteArray$Type);
_.apply_0 = function apply_1073(arg0){
  return fromByteArray(castTo(arg0, 11));
}
;
function IncomingCapCache$7methodref$fromCbor$Type(){
}

defineClass(2361, $wnd.Function, $intern_22, IncomingCapCache$7methodref$fromCbor$Type);
_.apply_0 = function apply_1074(arg0){
  return fromCbor_87(castTo(arg0, 7));
}
;
function IncomingCapCache$8methodref$fromByteArray$Type(){
}

defineClass(2366, $wnd.Function, $intern_22, IncomingCapCache$8methodref$fromByteArray$Type);
_.apply_0 = function apply_1075(arg0){
  return fromByteArray(castTo(arg0, 11));
}
;
function IncomingCapCache$9methodref$fromCbor$Type(){
}

defineClass(2367, $wnd.Function, $intern_22, IncomingCapCache$9methodref$fromCbor$Type);
_.apply_0 = function apply_1076(arg0){
  return fromCbor_87(castTo(arg0, 7));
}
;
function $addChild_0(this$static, filename, cap, sharer, owner, network){
  var combinedSharers, current, existing, name_0, newChild, remainder, updatedChild;
  existing = $findFirst($filter(this$static.children.stream(), new IncomingCapCache$CapsInDirectory$lambda$0$Type(filename)));
  name_0 = new PathElement(filename);
  if (existing.ref != null) {
    current = (checkCriticalElement(existing.ref != null) , castTo(existing.ref, 176));
    remainder = castTo($collect_0($filter(this$static.children.stream(), new IncomingCapCache$CapsInDirectory$lambda$1$Type(filename)), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
    if ($equals_24(current.cap, cap)) {
      combinedSharers = castTo(concat((checkCriticalElement(existing.ref != null) , castTo(existing.ref, 176)).sharers.stream(), new StreamImpl(null, new Spliterators$IteratorSpliterator(singleton(sharer), 1))).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [IDENTITY_FINISH]))), 17);
      updatedChild = new IncomingCapCache$ChildElement(name_0, cap, combinedSharers);
      return new CompletableFuture_0(new IncomingCapCache$CapsInDirectory(castTo(concat(remainder.stream(), new StreamImpl(null, new Spliterators$IteratorSpliterator(singleton(updatedChild), 1))).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [IDENTITY_FINISH]))), 17)));
    }
    if (equals_Ljava_lang_Object__Z__devirtual$(current.sharers, new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [sharer]))) && current.cap.wBaseKey.ref == null) {
      updatedChild = new IncomingCapCache$ChildElement(name_0, cap, current.sharers);
      return new CompletableFuture_0(new IncomingCapCache$CapsInDirectory(castTo(concat(remainder.stream(), new StreamImpl(null, new Spliterators$IteratorSpliterator(singleton(updatedChild), 1))).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [IDENTITY_FINISH]))), 17)));
    }
    return $thenApply($retrieveEntryPoint(network, new EntryPoint(current.cap, owner)), makeLambdaFunction(IncomingCapCache$CapsInDirectory$lambda$2$Type.prototype.apply_0, IncomingCapCache$CapsInDirectory$lambda$2$Type, [this$static, current, cap, name_0, sharer, remainder]));
  }
   else {
    newChild = new IncomingCapCache$ChildElement(name_0, cap, ($clinit_Collections() , new Collections$SingletonList(sharer)));
    return new CompletableFuture_0(new IncomingCapCache$CapsInDirectory(castTo(concat(this$static.children.stream(), new StreamImpl(null, new Spliterators$IteratorSpliterator(singleton(newChild), 1))).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17)));
  }
}

function $getChild_1(this$static, name_0){
  return $findFirst($map_0($filter(this$static.children.stream(), new IncomingCapCache$CapsInDirectory$lambda$3$Type(name_0)), makeLambdaFunction(IncomingCapCache$CapsInDirectory$lambda$4$Type.prototype.apply_0, IncomingCapCache$CapsInDirectory$lambda$4$Type, [])));
}

function $lambda$2_20(this$static, current_1, cap_2, name_3, sharer_4, remainder_5, oldOpt_5){
  var updatedChild;
  if (oldOpt_5.ref != null && current_1.cap.wBaseKey.ref != null && cap_2.wBaseKey.ref == null) {
    return this$static;
  }
  updatedChild = new IncomingCapCache$ChildElement(name_3, cap_2, ($clinit_Collections() , new Collections$SingletonList(sharer_4)));
  return new IncomingCapCache$CapsInDirectory(castTo(concat(remainder_5.stream(), new StreamImpl(null, new Spliterators$IteratorSpliterator(singleton(updatedChild), 1))).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17));
}

function $toCbor_77(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'c', new CborObject$CborList(this$static.children));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function IncomingCapCache$CapsInDirectory(children){
  this.children = children;
}

function fromCbor_87(cbor){
  var children, m;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor! ' + cbor));
  m = castTo(cbor, 18);
  children = $getList(m, 'c', makeLambdaFunction(IncomingCapCache$CapsInDirectory$2methodref$fromCbor$Type.prototype.apply_0, IncomingCapCache$CapsInDirectory$2methodref$fromCbor$Type, []));
  return new IncomingCapCache$CapsInDirectory(children);
}

function lambda$0_23(filename_0, c_1){
  return $equals_0(c_1.name_0.name_0, filename_0);
}

function lambda$1_13(filename_0, c_1){
  return !$equals_0(c_1.name_0.name_0, filename_0);
}

function lambda$3_5(name_0, c_1){
  return $equals_0(c_1.name_0.name_0, name_0);
}

function of_6(filename, cap, sharer){
  return new IncomingCapCache$CapsInDirectory(($clinit_Collections() , new Collections$SingletonList(new IncomingCapCache$ChildElement(new PathElement(filename), cap, new Collections$SingletonList(sharer)))));
}

defineClass(243, 1, $intern_67, IncomingCapCache$CapsInDirectory);
_.serialize = function serialize_107(){
  return $toByteArray_2($toCbor_77(this));
}
;
_.toCbor = function toCbor_105(){
  return $toCbor_77(this);
}
;
var Lpeergos_shared_user_IncomingCapCache$CapsInDirectory_2_classLit = createForClass('peergos.shared.user', 'IncomingCapCache/CapsInDirectory', 243);
function IncomingCapCache$CapsInDirectory$2methodref$fromCbor$Type(){
}

defineClass(2421, $wnd.Function, $intern_22, IncomingCapCache$CapsInDirectory$2methodref$fromCbor$Type);
_.apply_0 = function apply_1077(arg0){
  return fromCbor_88(castTo(arg0, 7));
}
;
function IncomingCapCache$CapsInDirectory$lambda$0$Type(filename_0){
  this.filename_0 = filename_0;
}

defineClass(804, 1, {}, IncomingCapCache$CapsInDirectory$lambda$0$Type);
_.test_0 = function test_27(arg0){
  return lambda$0_23(this.filename_0, arg0);
}
;
var Lpeergos_shared_user_IncomingCapCache$CapsInDirectory$lambda$0$Type_2_classLit = createForClass('peergos.shared.user', 'IncomingCapCache/CapsInDirectory/lambda$0$Type', 804);
function IncomingCapCache$CapsInDirectory$lambda$1$Type(filename_0){
  this.filename_0 = filename_0;
}

defineClass(805, 1, {}, IncomingCapCache$CapsInDirectory$lambda$1$Type);
_.test_0 = function test_28(arg0){
  return lambda$1_13(this.filename_0, arg0);
}
;
var Lpeergos_shared_user_IncomingCapCache$CapsInDirectory$lambda$1$Type_2_classLit = createForClass('peergos.shared.user', 'IncomingCapCache/CapsInDirectory/lambda$1$Type', 805);
function IncomingCapCache$CapsInDirectory$lambda$2$Type($$outer_0, current_1, cap_2, name_3, sharer_4, remainder_5){
  this.$$outer_0 = $$outer_0;
  this.current_1 = current_1;
  this.cap_2 = cap_2;
  this.name_3 = name_3;
  this.sharer_4 = sharer_4;
  this.remainder_5 = remainder_5;
}

defineClass(2419, $wnd.Function, $intern_22, IncomingCapCache$CapsInDirectory$lambda$2$Type);
_.apply_0 = function apply_1078(arg0){
  return $lambda$2_20(this.$$outer_0, this.current_1, this.cap_2, this.name_3, this.sharer_4, this.remainder_5, arg0);
}
;
function IncomingCapCache$CapsInDirectory$lambda$3$Type(name_0){
  this.name_0 = name_0;
}

defineClass(806, 1, {}, IncomingCapCache$CapsInDirectory$lambda$3$Type);
_.test_0 = function test_29(arg0){
  return lambda$3_5(this.name_0, arg0);
}
;
var Lpeergos_shared_user_IncomingCapCache$CapsInDirectory$lambda$3$Type_2_classLit = createForClass('peergos.shared.user', 'IncomingCapCache/CapsInDirectory/lambda$3$Type', 806);
function IncomingCapCache$CapsInDirectory$lambda$4$Type(){
}

defineClass(2420, $wnd.Function, $intern_22, IncomingCapCache$CapsInDirectory$lambda$4$Type);
_.apply_0 = function apply_1079(arg0){
  return castTo(arg0, 176).cap;
}
;
function IncomingCapCache$CapsInDirectory$lambda$5$Type(){
}

defineClass(2376, $wnd.Function, $intern_22, IncomingCapCache$CapsInDirectory$lambda$5$Type);
_.apply_0 = function apply_1080(arg0){
  return castTo(arg0, 176).cap;
}
;
function $toCbor_78(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'n', new CborObject$CborString(this$static.name_0.name_0));
  $put_6(state, 'c', this$static.cap);
  $put_6(state, 's', new CborObject$CborList(castTo($collect_0($map_0(this$static.sharers.stream(), makeLambdaFunction(IncomingCapCache$ChildElement$0methodref$ctor$Type.prototype.apply_0, IncomingCapCache$ChildElement$0methodref$ctor$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17)));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function IncomingCapCache$ChildElement(name_0, cap, sharers){
  this.name_0 = name_0;
  this.cap = cap;
  this.sharers = sharers;
}

function fromCbor_88(cbor){
  var cap, m, name_0, sharers;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor! ' + cbor));
  m = castTo(cbor, 18);
  name_0 = castTo(castTo($get_0(m.values_0, new CborObject$CborString('n')), 7), 13).value_0;
  cap = castTo($getObject(m, 'c', makeLambdaFunction(IncomingCapCache$ChildElement$1methodref$fromCbor$Type.prototype.apply_0, IncomingCapCache$ChildElement$1methodref$fromCbor$Type, [])), 71);
  sharers = $getList(m, 's', makeLambdaFunction(IncomingCapCache$ChildElement$lambda$2$Type.prototype.apply_0, IncomingCapCache$ChildElement$lambda$2$Type, []));
  return new IncomingCapCache$ChildElement(new PathElement(name_0), cap, sharers);
}

defineClass(176, 1, {7:1, 176:1}, IncomingCapCache$ChildElement);
_.serialize = function serialize_108(){
  return $toByteArray_2($toCbor_78(this));
}
;
_.toCbor = function toCbor_106(){
  return $toCbor_78(this);
}
;
var Lpeergos_shared_user_IncomingCapCache$ChildElement_2_classLit = createForClass('peergos.shared.user', 'IncomingCapCache/ChildElement', 176);
function IncomingCapCache$ChildElement$0methodref$ctor$Type(){
}

defineClass(2416, $wnd.Function, $intern_22, IncomingCapCache$ChildElement$0methodref$ctor$Type);
_.apply_0 = function apply_1081(arg0){
  return new CborObject$CborString(castToString(arg0));
}
;
function IncomingCapCache$ChildElement$1methodref$fromCbor$Type(){
}

defineClass(2417, $wnd.Function, $intern_22, IncomingCapCache$ChildElement$1methodref$fromCbor$Type);
_.apply_0 = function apply_1082(arg0){
  return fromCbor_99(castTo(arg0, 7));
}
;
function IncomingCapCache$ChildElement$lambda$2$Type(){
}

defineClass(2418, $wnd.Function, $intern_22, IncomingCapCache$ChildElement$lambda$2$Type);
_.apply_0 = function apply_1083(arg0){
  return castTo(castTo(arg0, 7), 13).value_0;
}
;
function IncomingCapCache$lambda$0$Type(cacheRoot_0, crypto_1){
  this.cacheRoot_0 = cacheRoot_0;
  this.crypto_1 = crypto_1;
}

defineClass(2007, $wnd.Function, $intern_22, IncomingCapCache$lambda$0$Type);
_.apply_0 = function apply_1084(arg0){
  return lambda$0_22(this.cacheRoot_0, this.crypto_1, arg0);
}
;
function IncomingCapCache$lambda$1$Type($$outer_0, elements_1, union_2, network_3){
  this.$$outer_0 = $$outer_0;
  this.elements_1 = elements_1;
  this.union_2 = union_2;
  this.network_3 = network_3;
}

defineClass(2323, $wnd.Function, $intern_22, IncomingCapCache$lambda$1$Type);
_.apply_0 = function apply_1085(arg0){
  return $lambda$1_23(this.$$outer_0, this.elements_1, this.union_2, this.network_3, arg0);
}
;
function IncomingCapCache$lambda$100$Type(filename_0, cap_1, friend_2, owner_3, network_4, crypto_5, c_6, root_7){
  this.filename_0 = filename_0;
  this.cap_1 = cap_1;
  this.friend_2 = friend_2;
  this.owner_3 = owner_3;
  this.network_4 = network_4;
  this.crypto_5 = crypto_5;
  this.c_6 = c_6;
  this.root_7 = root_7;
}

defineClass(2342, $wnd.Function, $intern_22, IncomingCapCache$lambda$100$Type);
_.apply_0 = function apply_1086(arg0){
  return lambda$100(this.filename_0, this.cap_1, this.friend_2, this.owner_3, this.network_4, this.crypto_5, this.c_6, this.root_7, arg0);
}
;
function IncomingCapCache$lambda$101$Type(filename_0, cap_1, friend_2, owner_3, network_4, crypto_5, p_6, c_7, root_8){
  this.filename_0 = filename_0;
  this.cap_1 = cap_1;
  this.friend_2 = friend_2;
  this.owner_3 = owner_3;
  this.network_4 = network_4;
  this.crypto_5 = crypto_5;
  this.p_6 = p_6;
  this.c_7 = c_7;
  this.root_8 = root_8;
}

defineClass(2409, $wnd.Function, $intern_22, IncomingCapCache$lambda$101$Type);
_.apply_0 = function apply_1087(arg0){
  return lambda$101(this.filename_0, this.cap_1, this.friend_2, this.owner_3, this.network_4, this.crypto_5, this.p_6, this.c_7, this.root_8, arg0);
}
;
function IncomingCapCache$lambda$102$Type(){
}

defineClass(2410, $wnd.Function, {}, IncomingCapCache$lambda$102$Type);
_.accept_5 = function accept_109(arg0){
}
;
function IncomingCapCache$lambda$105$Type(filename_0, cap_1, friend_2, owner_3, network_4){
  this.filename_0 = filename_0;
  this.cap_1 = cap_1;
  this.friend_2 = friend_2;
  this.owner_3 = owner_3;
  this.network_4 = network_4;
}

defineClass(2413, $wnd.Function, $intern_22, IncomingCapCache$lambda$105$Type);
_.apply_0 = function apply_1088(arg0){
  return lambda$105(this.filename_0, this.cap_1, this.friend_2, this.owner_3, this.network_4, arg0);
}
;
function IncomingCapCache$lambda$106$Type(capsOpt_0, network_1, crypto_2, p_3, c_4){
  this.capsOpt_0 = capsOpt_0;
  this.network_1 = network_1;
  this.crypto_2 = crypto_2;
  this.p_3 = p_3;
  this.c_4 = c_4;
}

defineClass(2414, $wnd.Function, $intern_22, IncomingCapCache$lambda$106$Type);
_.apply_0 = function apply_1089(arg0){
  return lambda$106(this.capsOpt_0, this.network_1, this.crypto_2, this.p_3, this.c_4, arg0);
}
;
function IncomingCapCache$lambda$107$Type(){
}

defineClass(2415, $wnd.Function, {}, IncomingCapCache$lambda$107$Type);
_.accept_5 = function accept_110(arg0){
}
;
function IncomingCapCache$lambda$108$Type(root_0, network_1){
  this.root_0 = root_0;
  this.network_1 = network_1;
}

defineClass(2343, $wnd.Function, $intern_22, IncomingCapCache$lambda$108$Type);
_.apply_0 = function apply_1090(arg0){
  return lambda$108(this.root_0, this.network_1, arg0);
}
;
function IncomingCapCache$lambda$109$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2344, $wnd.Function, $intern_22, IncomingCapCache$lambda$109$Type);
_.apply_0 = function apply_1091(arg0){
  return $lambda$109(this.$$outer_0, arg0);
}
;
function IncomingCapCache$lambda$11$Type($$outer_0, path_1, childIndex_2, network_3, recurse_4, mirrorDir_5, version_6){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.childIndex_2 = childIndex_2;
  this.network_3 = network_3;
  this.recurse_4 = recurse_4;
  this.mirrorDir_5 = mirrorDir_5;
  this.version_6 = version_6;
}

defineClass(2351, $wnd.Function, $intern_22, IncomingCapCache$lambda$11$Type);
_.apply_0 = function apply_1092(arg0){
  return $lambda$11_7(this.$$outer_0, this.path_1, this.childIndex_2, this.network_3, this.recurse_4, this.mirrorDir_5, this.version_6, arg0);
}
;
_.childIndex_2 = 0;
function IncomingCapCache$lambda$110$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1296, $wnd.Function, $intern_22, IncomingCapCache$lambda$110$Type);
_.apply_0 = function apply_1093(arg0){
  return $lambda$110(this.$$outer_0, arg0);
}
;
function IncomingCapCache$lambda$12$Type($$outer_0, path_1, childIndex_2, network_3, recurse_4, mirrorDir_5, version_6){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.childIndex_2 = childIndex_2;
  this.network_3 = network_3;
  this.recurse_4 = recurse_4;
  this.mirrorDir_5 = mirrorDir_5;
  this.version_6 = version_6;
}

defineClass(2352, $wnd.Function, $intern_22, IncomingCapCache$lambda$12$Type);
_.apply_0 = function apply_1094(arg0){
  return $lambda$12_6(this.$$outer_0, this.path_1, this.childIndex_2, this.network_3, this.recurse_4, this.mirrorDir_5, this.version_6, arg0);
}
;
_.childIndex_2 = 0;
function IncomingCapCache$lambda$13$Type($$outer_0, path_1, childIndex_2, network_3, recurse_4, mirrorDir_5){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.childIndex_2 = childIndex_2;
  this.network_3 = network_3;
  this.recurse_4 = recurse_4;
  this.mirrorDir_5 = mirrorDir_5;
}

defineClass(2353, $wnd.Function, $intern_22, IncomingCapCache$lambda$13$Type);
_.apply_0 = function apply_1095(arg0){
  return $lambda$13_9(this.$$outer_0, this.path_1, this.childIndex_2, this.network_3, this.recurse_4, this.mirrorDir_5, arg0);
}
;
_.childIndex_2 = 0;
function $apply_8(this$static, arg0){
  return $lambda$14_6(this$static.$$outer_0, this$static.path_1, this$static.childIndex_2, this$static.network_3, this$static.recurse_4, arg0);
}

function IncomingCapCache$lambda$14$Type($$outer_0, path_1, childIndex_2, network_3, recurse_4){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.childIndex_2 = childIndex_2;
  this.network_3 = network_3;
  this.recurse_4 = recurse_4;
}

defineClass(2354, $wnd.Function, $intern_22, IncomingCapCache$lambda$14$Type);
_.apply_0 = function apply_1096(arg0){
  return $apply_8(this, arg0);
}
;
_.childIndex_2 = 0;
function IncomingCapCache$lambda$15$Type($$outer_0, path_1, childIndex_2, network_3){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.childIndex_2 = childIndex_2;
  this.network_3 = network_3;
}

defineClass(2357, $wnd.Function, $intern_22, IncomingCapCache$lambda$15$Type);
_.apply_0 = function apply_1097(arg0){
  return $lambda$15_7(this.$$outer_0, this.path_1, this.childIndex_2, this.network_3, arg0);
}
;
_.childIndex_2 = 0;
function IncomingCapCache$lambda$16$Type(fopt_0){
  this.fopt_0 = fopt_0;
}

defineClass(2355, $wnd.Function, $intern_22, IncomingCapCache$lambda$16$Type);
_.apply_0 = function apply_1098(arg0){
  return $map(this.fopt_0, makeLambdaFunction(IncomingCapCache$lambda$17$Type.prototype.apply_0, IncomingCapCache$lambda$17$Type, [castTo(arg0, 12)]));
}
;
function IncomingCapCache$lambda$17$Type(linkOpt_0){
  this.linkOpt_0 = linkOpt_0;
}

defineClass(2422, $wnd.Function, $intern_22, IncomingCapCache$lambda$17$Type);
_.apply_0 = function apply_1099(arg0){
  return lambda$17_0(this.linkOpt_0, arg0);
}
;
function IncomingCapCache$lambda$18$Type(getDescendant_0, fopt_1, recurse_2){
  this.getDescendant_0 = getDescendant_0;
  this.fopt_1 = fopt_1;
  this.recurse_2 = recurse_2;
}

defineClass(2356, $wnd.Function, $intern_22, IncomingCapCache$lambda$18$Type);
_.apply_0 = function apply_1100(arg0){
  return lambda$18_3(this.getDescendant_0, this.fopt_1, this.recurse_2, arg0);
}
;
function IncomingCapCache$lambda$19$Type(getDescendant_0, fopt_1){
  this.getDescendant_0 = getDescendant_0;
  this.fopt_1 = fopt_1;
}

defineClass(2358, $wnd.Function, $intern_22, IncomingCapCache$lambda$19$Type);
_.apply_0 = function apply_1101(arg0){
  return lambda$19_2(this.getDescendant_0, this.fopt_1, arg0);
}
;
function $get_26(this$static){
  return $lambda$2_19(this$static.$$outer_0, this$static.path_1, this$static.childIndex_2, this$static.version_3, this$static.network_4, this$static.mirrorDir_5);
}

function IncomingCapCache$lambda$2$Type($$outer_0, path_1, childIndex_2, version_3, network_4, mirrorDir_5){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.childIndex_2 = childIndex_2;
  this.version_3 = version_3;
  this.network_4 = network_4;
  this.mirrorDir_5 = mirrorDir_5;
}

defineClass(808, 1, {}, IncomingCapCache$lambda$2$Type);
_.get_0 = function get_102(){
  return $get_26(this);
}
;
_.childIndex_2 = 0;
var Lpeergos_shared_user_IncomingCapCache$lambda$2$Type_2_classLit = createForClass('peergos.shared.user', 'IncomingCapCache/lambda$2$Type', 808);
function IncomingCapCache$lambda$20$Type(dopt_0){
  this.dopt_0 = dopt_0;
}

defineClass(2359, $wnd.Function, $intern_22, IncomingCapCache$lambda$20$Type);
_.apply_0 = function apply_1102(arg0){
  return new CompletableFuture_0(this.dopt_0);
}
;
function IncomingCapCache$lambda$21$Type(getDescendant_0, fopt_1){
  this.getDescendant_0 = getDescendant_0;
  this.fopt_1 = fopt_1;
}

defineClass(809, 1, {}, IncomingCapCache$lambda$21$Type);
_.get_0 = function get_103(){
  return $apply_8(this.getDescendant_0, this.fopt_1);
}
;
var Lpeergos_shared_user_IncomingCapCache$lambda$21$Type_2_classLit = createForClass('peergos.shared.user', 'IncomingCapCache/lambda$21$Type', 809);
function IncomingCapCache$lambda$23$Type($$outer_0, network_1){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
}

defineClass(2329, $wnd.Function, $intern_22, IncomingCapCache$lambda$23$Type);
_.apply_0 = function apply_1103(arg0){
  return $lambda$23_4(this.$$outer_0, this.network_1, arg0);
}
;
function $get_27(this$static){
  return $lambda$26_5(this$static.$$outer_0, this$static.hasher_1, this$static.network_2, this$static.dir_3);
}

function IncomingCapCache$lambda$26$Type($$outer_0, hasher_1, network_2, dir_3){
  this.$$outer_0 = $$outer_0;
  this.hasher_1 = hasher_1;
  this.network_2 = network_2;
  this.dir_3 = dir_3;
}

defineClass(396, 1, {}, IncomingCapCache$lambda$26$Type);
_.get_0 = function get_104(){
  return $get_27(this);
}
;
var Lpeergos_shared_user_IncomingCapCache$lambda$26$Type_2_classLit = createForClass('peergos.shared.user', 'IncomingCapCache/lambda$26$Type', 396);
function IncomingCapCache$lambda$27$Type($$outer_0, hasher_1, network_2){
  this.$$outer_0 = $$outer_0;
  this.hasher_1 = hasher_1;
  this.network_2 = network_2;
}

defineClass(2362, $wnd.Function, $intern_22, IncomingCapCache$lambda$27$Type);
_.apply_0 = function apply_1104(arg0){
  return $lambda$27_2(this.$$outer_0, this.hasher_1, this.network_2, arg0);
}
;
function IncomingCapCache$lambda$28$Type($$outer_0, hasher_1, network_2){
  this.$$outer_0 = $$outer_0;
  this.hasher_1 = hasher_1;
  this.network_2 = network_2;
}

defineClass(2364, $wnd.Function, $intern_22, IncomingCapCache$lambda$28$Type);
_.apply_0 = function apply_1105(arg0){
  return $lambda$28_3(this.$$outer_0, this.hasher_1, this.network_2, arg0);
}
;
function IncomingCapCache$lambda$29$Type(network_0){
  this.network_0 = network_0;
}

defineClass(2363, $wnd.Function, $intern_22, IncomingCapCache$lambda$29$Type);
_.apply_0 = function apply_1106(arg0){
  return lambda$29(this.network_0, arg0);
}
;
function IncomingCapCache$lambda$3$Type($$outer_0, path_1, childIndex_2, version_3, network_4){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.childIndex_2 = childIndex_2;
  this.version_3 = version_3;
  this.network_4 = network_4;
}

defineClass(2345, $wnd.Function, $intern_22, IncomingCapCache$lambda$3$Type);
_.apply_0 = function apply_1107(arg0){
  return $lambda$3_19(this.$$outer_0, this.path_1, this.childIndex_2, this.version_3, this.network_4, arg0);
}
;
_.childIndex_2 = 0;
function IncomingCapCache$lambda$30$Type(network_0){
  this.network_0 = network_0;
}

defineClass(2365, $wnd.Function, $intern_22, IncomingCapCache$lambda$30$Type);
_.apply_0 = function apply_1108(arg0){
  return lambda$30_0(this.network_0, arg0);
}
;
function IncomingCapCache$lambda$31$Type($$outer_0, network_1, recurse_2, dir_3){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
  this.recurse_2 = recurse_2;
  this.dir_3 = dir_3;
}

defineClass(1204, $wnd.Function, $intern_22, IncomingCapCache$lambda$31$Type);
_.apply_0 = function apply_1109(arg0){
  return $lambda$31_4(this.$$outer_0, this.network_1, this.recurse_2, this.dir_3, arg0);
}
;
function IncomingCapCache$lambda$34$Type(network_0, ownerName_1){
  this.network_0 = network_0;
  this.ownerName_1 = ownerName_1;
}

defineClass(2368, $wnd.Function, $intern_22, IncomingCapCache$lambda$34$Type);
_.apply_0 = function apply_1110(arg0){
  return lambda$34_0(this.network_0, this.ownerName_1, arg0);
}
;
function IncomingCapCache$lambda$35$Type(network_0, ownerName_1){
  this.network_0 = network_0;
  this.ownerName_1 = ownerName_1;
}

defineClass(2370, $wnd.Function, $intern_22, IncomingCapCache$lambda$35$Type);
_.apply_0 = function apply_1111(arg0){
  return lambda$35_0(this.network_0, this.ownerName_1, arg0);
}
;
function IncomingCapCache$lambda$36$Type(network_0, recurse_1){
  this.network_0 = network_0;
  this.recurse_1 = recurse_1;
}

defineClass(2369, $wnd.Function, $intern_22, IncomingCapCache$lambda$36$Type);
_.apply_0 = function apply_1112(arg0){
  return lambda$36_0(this.network_0, this.recurse_1, arg0);
}
;
function IncomingCapCache$lambda$37$Type(network_0, fileOpt_1, recurse_2){
  this.network_0 = network_0;
  this.fileOpt_1 = fileOpt_1;
  this.recurse_2 = recurse_2;
}

defineClass(811, 1, {}, IncomingCapCache$lambda$37$Type);
_.get_0 = function get_105(){
  return lambda$37_1(this.network_0, this.fileOpt_1, this.recurse_2);
}
;
var Lpeergos_shared_user_IncomingCapCache$lambda$37$Type_2_classLit = createForClass('peergos.shared.user', 'IncomingCapCache/lambda$37$Type', 811);
function IncomingCapCache$lambda$38$Type(recurse_0){
  this.recurse_0 = recurse_0;
}

defineClass(2371, $wnd.Function, $intern_22, IncomingCapCache$lambda$38$Type);
_.apply_0 = function apply_1113(arg0){
  return $get_27(this.recurse_0);
}
;
function IncomingCapCache$lambda$39$Type(network_0){
  this.network_0 = network_0;
}

defineClass(2372, $wnd.Function, $intern_22, IncomingCapCache$lambda$39$Type);
_.apply_0 = function apply_1114(arg0){
  return lambda$39_0(this.network_0, arg0);
}
;
function IncomingCapCache$lambda$4$Type($$outer_0, path_1, childIndex_2, version_3, network_4){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.childIndex_2 = childIndex_2;
  this.version_3 = version_3;
  this.network_4 = network_4;
}

defineClass(2346, $wnd.Function, $intern_22, IncomingCapCache$lambda$4$Type);
_.apply_0 = function apply_1115(arg0){
  return $lambda$4_14(this.$$outer_0, this.path_1, this.childIndex_2, this.version_3, this.network_4, arg0);
}
;
_.childIndex_2 = 0;
function IncomingCapCache$lambda$40$Type(toExclude_0){
  this.toExclude_0 = toExclude_0;
}

defineClass(2325, $wnd.Function, $intern_22, IncomingCapCache$lambda$40$Type);
_.apply_0 = function apply_1116(arg0){
  return lambda$40_0(this.toExclude_0, arg0);
}
;
function IncomingCapCache$lambda$41$Type(toExclude_0){
  this.toExclude_0 = toExclude_0;
}

defineClass(812, 1, {}, IncomingCapCache$lambda$41$Type);
_.test_0 = function test_30(arg0){
  return lambda$41_0(this.toExclude_0, arg0);
}
;
var Lpeergos_shared_user_IncomingCapCache$lambda$41$Type_2_classLit = createForClass('peergos.shared.user', 'IncomingCapCache/lambda$41$Type', 812);
function IncomingCapCache$lambda$42$Type($$outer_0, hasher_1, network_2){
  this.$$outer_0 = $$outer_0;
  this.hasher_1 = hasher_1;
  this.network_2 = network_2;
}

defineClass(2326, $wnd.Function, $intern_22, IncomingCapCache$lambda$42$Type);
_.apply_0 = function apply_1117(arg0){
  return $lambda$42_2(this.$$outer_0, this.hasher_1, this.network_2, arg0);
}
;
function IncomingCapCache$lambda$43$Type($$outer_0, hasher_1, network_2){
  this.$$outer_0 = $$outer_0;
  this.hasher_1 = hasher_1;
  this.network_2 = network_2;
}

defineClass(2373, $wnd.Function, $intern_22, IncomingCapCache$lambda$43$Type);
_.apply_0 = function apply_1118(arg0){
  return $lambda$43_1(this.$$outer_0, this.hasher_1, this.network_2, arg0);
}
;
function IncomingCapCache$lambda$44$Type(){
}

defineClass(2327, $wnd.Function, $intern_22, IncomingCapCache$lambda$44$Type);
_.apply_0 = function apply_1119(arg0){
  return castTo($collect_0($flatMap_0(castTo(arg0, 47).stream(), makeLambdaFunction(IncomingCapCache$10methodref$stream$Type.prototype.apply_0, IncomingCapCache$10methodref$stream$Type, [])), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47);
}
;
function IncomingCapCache$lambda$46$Type($$outer_0, elements_1, union_2, hasher_3, network_4){
  this.$$outer_0 = $$outer_0;
  this.elements_1 = elements_1;
  this.union_2 = union_2;
  this.hasher_3 = hasher_3;
  this.network_4 = network_4;
}

defineClass(2328, $wnd.Function, $intern_22, IncomingCapCache$lambda$46$Type);
_.apply_0 = function apply_1120(arg0){
  return $lambda$46_1(this.$$outer_0, this.elements_1, this.union_2, this.hasher_3, this.network_4, arg0);
}
;
function IncomingCapCache$lambda$47$Type($$outer_0, path_1, childIndex_2, version_3, hasher_4, network_5, mirrorDir_6){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.childIndex_2 = childIndex_2;
  this.version_3 = version_3;
  this.hasher_4 = hasher_4;
  this.network_5 = network_5;
  this.mirrorDir_6 = mirrorDir_6;
}

defineClass(814, 1, {}, IncomingCapCache$lambda$47$Type);
_.get_0 = function get_106(){
  return $lambda$47_1(this.$$outer_0, this.path_1, this.childIndex_2, this.version_3, this.hasher_4, this.network_5, this.mirrorDir_6);
}
;
_.childIndex_2 = 0;
var Lpeergos_shared_user_IncomingCapCache$lambda$47$Type_2_classLit = createForClass('peergos.shared.user', 'IncomingCapCache/lambda$47$Type', 814);
function IncomingCapCache$lambda$48$Type($$outer_0, path_1, childIndex_2, version_3, hasher_4, network_5){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.childIndex_2 = childIndex_2;
  this.version_3 = version_3;
  this.hasher_4 = hasher_4;
  this.network_5 = network_5;
}

defineClass(2374, $wnd.Function, $intern_22, IncomingCapCache$lambda$48$Type);
_.apply_0 = function apply_1121(arg0){
  return $lambda$48_1(this.$$outer_0, this.path_1, this.childIndex_2, this.version_3, this.hasher_4, this.network_5, arg0);
}
;
_.childIndex_2 = 0;
function IncomingCapCache$lambda$49$Type($$outer_0, path_1, childIndex_2, version_3, hasher_4, network_5){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.childIndex_2 = childIndex_2;
  this.version_3 = version_3;
  this.hasher_4 = hasher_4;
  this.network_5 = network_5;
}

defineClass(2375, $wnd.Function, $intern_22, IncomingCapCache$lambda$49$Type);
_.apply_0 = function apply_1122(arg0){
  return $lambda$49_2(this.$$outer_0, this.path_1, this.childIndex_2, this.version_3, this.hasher_4, this.network_5, arg0);
}
;
_.childIndex_2 = 0;
function IncomingCapCache$lambda$5$Type(){
}

defineClass(807, 1, {}, IncomingCapCache$lambda$5$Type);
_.get_0 = function get_107(){
  return new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY));
}
;
var Lpeergos_shared_user_IncomingCapCache$lambda$5$Type_2_classLit = createForClass('peergos.shared.user', 'IncomingCapCache/lambda$5$Type', 807);
function IncomingCapCache$lambda$50$Type(){
}

defineClass(813, 1, {}, IncomingCapCache$lambda$50$Type);
_.get_0 = function get_108(){
  return new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_SET));
}
;
var Lpeergos_shared_user_IncomingCapCache$lambda$50$Type_2_classLit = createForClass('peergos.shared.user', 'IncomingCapCache/lambda$50$Type', 813);
function IncomingCapCache$lambda$51$Type($$outer_0, network_1, path_2, mirrorDir_3, hasher_4){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
  this.path_2 = path_2;
  this.mirrorDir_3 = mirrorDir_3;
  this.hasher_4 = hasher_4;
}

defineClass(2330, $wnd.Function, $intern_22, IncomingCapCache$lambda$51$Type);
_.apply_0 = function apply_1123(arg0){
  return $lambda$51_0(this.$$outer_0, this.network_1, this.path_2, this.mirrorDir_3, this.hasher_4, arg0);
}
;
function IncomingCapCache$lambda$52$Type(network_0, path_1){
  this.network_0 = network_0;
  this.path_1 = path_1;
}

defineClass(2377, $wnd.Function, $intern_22, IncomingCapCache$lambda$52$Type);
_.apply_0 = function apply_1124(arg0){
  return lambda$52_0(this.network_0, this.path_1, arg0);
}
;
function IncomingCapCache$lambda$53$Type(){
}

defineClass(2378, $wnd.Function, $intern_22, IncomingCapCache$lambda$53$Type);
_.apply_0 = function apply_1125(arg0){
  return castTo($collect_0($flatMap_0(castTo(arg0, 47).stream(), makeLambdaFunction(IncomingCapCache$11methodref$stream$Type.prototype.apply_0, IncomingCapCache$11methodref$stream$Type, [])), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47);
}
;
function IncomingCapCache$lambda$55$Type($$outer_0, mirrorDir_1, hasher_2, network_3){
  this.$$outer_0 = $$outer_0;
  this.mirrorDir_1 = mirrorDir_1;
  this.hasher_2 = hasher_2;
  this.network_3 = network_3;
}

defineClass(2379, $wnd.Function, $intern_22, IncomingCapCache$lambda$55$Type);
_.apply_0 = function apply_1126(arg0){
  return $lambda$55_1(this.$$outer_0, this.mirrorDir_1, this.hasher_2, this.network_3, arg0);
}
;
function IncomingCapCache$lambda$57$Type(direct_0){
  this.direct_0 = direct_0;
}

defineClass(2381, $wnd.Function, $intern_22, IncomingCapCache$lambda$57$Type);
_.apply_0 = function apply_1127(arg0){
  return lambda$57(this.direct_0, arg0);
}
;
function IncomingCapCache$lambda$58$Type($$outer_0, hasher_1, network_2, path_3, childIndex_4, version_5, recurse_6){
  this.$$outer_0 = $$outer_0;
  this.hasher_1 = hasher_1;
  this.network_2 = network_2;
  this.path_3 = path_3;
  this.childIndex_4 = childIndex_4;
  this.version_5 = version_5;
  this.recurse_6 = recurse_6;
}

defineClass(2331, $wnd.Function, $intern_22, IncomingCapCache$lambda$58$Type);
_.apply_0 = function apply_1128(arg0){
  return $lambda$58_0(this.$$outer_0, this.hasher_1, this.network_2, this.path_3, this.childIndex_4, this.version_5, this.recurse_6, arg0);
}
;
_.childIndex_4 = 0;
function IncomingCapCache$lambda$6$Type($$outer_0, path_1, childIndex_2, network_3, recurse_4, mirrorDir_5, version_6){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.childIndex_2 = childIndex_2;
  this.network_3 = network_3;
  this.recurse_4 = recurse_4;
  this.mirrorDir_5 = mirrorDir_5;
  this.version_6 = version_6;
}

defineClass(2324, $wnd.Function, $intern_22, IncomingCapCache$lambda$6$Type);
_.apply_0 = function apply_1129(arg0){
  return $lambda$6_13(this.$$outer_0, this.path_1, this.childIndex_2, this.network_3, this.recurse_4, this.mirrorDir_5, this.version_6, arg0);
}
;
_.childIndex_2 = 0;
function IncomingCapCache$lambda$61$Type(hasher_0, network_1, path_2, childIndex_3, version_4, recurse_5){
  this.hasher_0 = hasher_0;
  this.network_1 = network_1;
  this.path_2 = path_2;
  this.childIndex_3 = childIndex_3;
  this.version_4 = version_4;
  this.recurse_5 = recurse_5;
}

defineClass(2384, $wnd.Function, $intern_22, IncomingCapCache$lambda$61$Type);
_.apply_0 = function apply_1130(arg0){
  return lambda$61_0(this.hasher_0, this.network_1, this.path_2, this.childIndex_3, this.version_4, this.recurse_5, arg0);
}
;
_.childIndex_3 = 0;
function IncomingCapCache$lambda$62$Type(hasher_0, network_1, path_2, childIndex_3, version_4, recurse_5){
  this.hasher_0 = hasher_0;
  this.network_1 = network_1;
  this.path_2 = path_2;
  this.childIndex_3 = childIndex_3;
  this.version_4 = version_4;
  this.recurse_5 = recurse_5;
}

defineClass(2385, $wnd.Function, $intern_22, IncomingCapCache$lambda$62$Type);
_.apply_0 = function apply_1131(arg0){
  return lambda$62(this.hasher_0, this.network_1, this.path_2, this.childIndex_3, this.version_4, this.recurse_5, arg0);
}
;
_.childIndex_3 = 0;
function IncomingCapCache$lambda$63$Type(hasher_0, network_1, path_2, childIndex_3, version_4, recurse_5){
  this.hasher_0 = hasher_0;
  this.network_1 = network_1;
  this.path_2 = path_2;
  this.childIndex_3 = childIndex_3;
  this.version_4 = version_4;
  this.recurse_5 = recurse_5;
}

defineClass(2386, $wnd.Function, $intern_22, IncomingCapCache$lambda$63$Type);
_.apply_0 = function apply_1132(arg0){
  return lambda$63_1(this.hasher_0, this.network_1, this.path_2, this.childIndex_3, this.version_4, this.recurse_5, arg0);
}
;
_.childIndex_3 = 0;
function IncomingCapCache$lambda$64$Type(hasher_0, network_1, path_2, childIndex_3, version_4){
  this.hasher_0 = hasher_0;
  this.network_1 = network_1;
  this.path_2 = path_2;
  this.childIndex_3 = childIndex_3;
  this.version_4 = version_4;
}

defineClass(2387, $wnd.Function, $intern_22, IncomingCapCache$lambda$64$Type);
_.apply_0 = function apply_1133(arg0){
  return lambda$64_1(this.hasher_0, this.network_1, this.path_2, this.childIndex_3, this.version_4, arg0);
}
;
_.childIndex_3 = 0;
function IncomingCapCache$lambda$65$Type(hasher_0, network_1){
  this.hasher_0 = hasher_0;
  this.network_1 = network_1;
}

defineClass(2388, $wnd.Function, $intern_22, IncomingCapCache$lambda$65$Type);
_.apply_0 = function apply_1134(arg0){
  return lambda$65_2(this.hasher_0, this.network_1, arg0);
}
;
function IncomingCapCache$lambda$66$Type(hasher_0, network_1){
  this.hasher_0 = hasher_0;
  this.network_1 = network_1;
}

defineClass(2389, $wnd.Function, $intern_22, IncomingCapCache$lambda$66$Type);
_.apply_0 = function apply_1135(arg0){
  return lambda$66_1(this.hasher_0, this.network_1, arg0);
}
;
function IncomingCapCache$lambda$67$Type(){
}

defineClass(2332, $wnd.Function, $intern_22, IncomingCapCache$lambda$67$Type);
_.apply_0 = function apply_1136(arg0){
  return castTo(arg0, 399).file.version;
}
;
function IncomingCapCache$lambda$68$Type($$outer_0, network_1, friend_2, s_3){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
  this.friend_2 = friend_2;
  this.s_3 = s_3;
}

defineClass(2333, $wnd.Function, $intern_22, IncomingCapCache$lambda$68$Type);
_.apply_0 = function apply_1137(arg0){
  return $lambda$68_0(this.$$outer_0, this.network_1, this.friend_2, this.s_3, arg0);
}
;
function IncomingCapCache$lambda$69$Type($$outer_0, network_1){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
}

defineClass(2390, $wnd.Function, $intern_22, IncomingCapCache$lambda$69$Type);
_.apply_0 = function apply_1138(arg0){
  return $lambda$69_1(this.$$outer_0, this.network_1, arg0);
}
;
function IncomingCapCache$lambda$7$Type(){
}

defineClass(2347, $wnd.Function, {}, IncomingCapCache$lambda$7$Type);
_.accept_5 = function accept_111(arg0){
}
;
function IncomingCapCache$lambda$70$Type(){
}

defineClass(2391, $wnd.Function, $intern_22, IncomingCapCache$lambda$70$Type);
_.apply_0 = function apply_1139(arg0){
  return fromCbor_66(deserialize(new CborDecoder(new ByteArrayInputStream(castTo(arg0, 11))), castTo(arg0, 11).length));
}
;
function IncomingCapCache$lambda$71$Type($$outer_0, friend_1, sharedDir_2, groups_3, s_4, c_5, network_6){
  this.$$outer_0 = $$outer_0;
  this.friend_1 = friend_1;
  this.sharedDir_2 = sharedDir_2;
  this.groups_3 = groups_3;
  this.s_4 = s_4;
  this.c_5 = c_5;
  this.network_6 = network_6;
}

defineClass(2334, $wnd.Function, $intern_22, IncomingCapCache$lambda$71$Type);
_.apply_0 = function apply_1140(arg0){
  return $lambda$71_0(this.$$outer_0, this.friend_1, this.sharedDir_2, this.groups_3, this.s_4, this.c_5, this.network_6, arg0);
}
;
function IncomingCapCache$lambda$72$Type($$outer_0, writer_1, latestRoot_2){
  this.$$outer_0 = $$outer_0;
  this.writer_1 = writer_1;
  this.latestRoot_2 = latestRoot_2;
}

defineClass(2335, $wnd.Function, $intern_22, IncomingCapCache$lambda$72$Type);
_.apply_0 = function apply_1141(arg0){
  return $lambda$72_1(this.$$outer_0, this.writer_1, this.latestRoot_2, arg0);
}
;
function IncomingCapCache$lambda$73$Type($$outer_0, current_1, network_2, s_3, groups_4){
  this.$$outer_0 = $$outer_0;
  this.current_1 = current_1;
  this.network_2 = network_2;
  this.s_3 = s_3;
  this.groups_4 = groups_4;
}

defineClass(1297, $wnd.Function, $intern_22, IncomingCapCache$lambda$73$Type);
_.apply_0 = function apply_1142(arg0){
  return $lambda$73_0(this.$$outer_0, this.current_1, this.network_2, this.s_3, this.groups_4, arg0);
}
;
function IncomingCapCache$lambda$74$Type($$outer_0, current_1, network_2, s_3, groups_4){
  this.$$outer_0 = $$outer_0;
  this.current_1 = current_1;
  this.network_2 = network_2;
  this.s_3 = s_3;
  this.groups_4 = groups_4;
}

defineClass(2394, $wnd.Function, $intern_22, IncomingCapCache$lambda$74$Type);
_.apply_0 = function apply_1143(arg0){
  return $lambda$74_1(this.$$outer_0, this.current_1, this.network_2, this.s_3, this.groups_4, arg0);
}
;
function IncomingCapCache$lambda$75$Type($$outer_0, current_1, network_2, s_3){
  this.$$outer_0 = $$outer_0;
  this.current_1 = current_1;
  this.network_2 = network_2;
  this.s_3 = s_3;
}

defineClass(2395, $wnd.Function, $intern_22, IncomingCapCache$lambda$75$Type);
_.apply_0 = function apply_1144(arg0){
  return $lambda$75(this.$$outer_0, this.current_1, this.network_2, this.s_3, arg0);
}
;
function IncomingCapCache$lambda$77$Type($$outer_0, current_1, network_2){
  this.$$outer_0 = $$outer_0;
  this.current_1 = current_1;
  this.network_2 = network_2;
}

defineClass(2398, $wnd.Function, $intern_22, IncomingCapCache$lambda$77$Type);
_.apply_0 = function apply_1145(arg0){
  return $lambda$77_0(this.$$outer_0, this.current_1, this.network_2, arg0);
}
;
function IncomingCapCache$lambda$78$Type(sharedDir_0){
  this.sharedDir_0 = sharedDir_0;
}

defineClass(2400, $wnd.Function, $intern_22, IncomingCapCache$lambda$78$Type);
_.apply_0 = function apply_1146(arg0){
  return lambda$78_0(this.sharedDir_0, arg0);
}
;
function IncomingCapCache$lambda$79$Type(){
}

defineClass(2399, $wnd.Function, $intern_22, IncomingCapCache$lambda$79$Type);
_.apply_0 = function apply_1147(arg0){
  return $clinit_Optional() , $clinit_Optional() , EMPTY;
}
;
function IncomingCapCache$lambda$8$Type(capsFile_0){
  this.capsFile_0 = capsFile_0;
}

defineClass(2348, $wnd.Function, $intern_22, IncomingCapCache$lambda$8$Type);
_.apply_0 = function apply_1148(arg0){
  return lambda$8_3(this.capsFile_0, arg0);
}
;
function IncomingCapCache$lambda$80$Type(direct_0, current_1){
  this.direct_0 = direct_0;
  this.current_1 = current_1;
}

defineClass(2396, $wnd.Function, $intern_22, IncomingCapCache$lambda$80$Type);
_.apply_0 = function apply_1149(arg0){
  return lambda$80_0(this.direct_0, this.current_1, arg0);
}
;
function IncomingCapCache$lambda$82$Type(current_0){
  this.current_0 = current_0;
}

defineClass(815, 1, $intern_34, IncomingCapCache$lambda$82$Type);
_.apply_1 = function apply_1150(arg0, arg1){
  return lambda$82(this.current_0, arg0, arg1);
}
;
var Lpeergos_shared_user_IncomingCapCache$lambda$82$Type_2_classLit = createForClass('peergos.shared.user', 'IncomingCapCache/lambda$82$Type', 815);
function IncomingCapCache$lambda$84$Type(){
}

defineClass(2336, $wnd.Function, $intern_22, IncomingCapCache$lambda$84$Type);
_.apply_0 = function apply_1151(arg0){
  var empty;
  return $printStackTraceImpl(castTo(arg0, 33), ($clinit_System() , err_0), '', '') , new CapsDiff(0, 0, (empty = new CapabilitiesFromUser(0, ($clinit_Collections() , $clinit_Collections() , EMPTY_LIST)) , new CapsDiff$ReadAndWriteCaps(empty, empty)), (null , EMPTY_MAP));
}
;
function IncomingCapCache$lambda$85$Type(sharedDir_0, writeCapBytes_1, crypto_3, network_4){
  this.sharedDir_0 = sharedDir_0;
  this.writeCapBytes_1 = writeCapBytes_1;
  this.crypto_3 = crypto_3;
  this.network_4 = network_4;
}

defineClass(2337, $wnd.Function, $intern_22, IncomingCapCache$lambda$85$Type);
_.apply_0 = function apply_1152(arg0){
  return lambda$85(this.sharedDir_0, this.writeCapBytes_1, this.crypto_3, this.network_4, arg0);
}
;
_.writeCapBytes_1 = 0;
function IncomingCapCache$lambda$86$Type(newReadCaps_0){
  this.newReadCaps_0 = newReadCaps_0;
}

defineClass(2404, $wnd.Function, $intern_22, IncomingCapCache$lambda$86$Type);
_.apply_0 = function apply_1153(arg0){
  return new CapsDiff$ReadAndWriteCaps(this.newReadCaps_0, castTo(arg0, 143));
}
;
function IncomingCapCache$lambda$87$Type(readCapBytes_0, writeCapBytes_2){
  this.readCapBytes_0 = readCapBytes_0;
  this.writeCapBytes_2 = writeCapBytes_2;
}

defineClass(2338, $wnd.Function, $intern_22, IncomingCapCache$lambda$87$Type);
_.apply_0 = function apply_1154(arg0){
  return new CapsDiff(this.readCapBytes_0, this.writeCapBytes_2, castTo(arg0, 232), ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP));
}
;
_.readCapBytes_0 = 0;
_.writeCapBytes_2 = 0;
function IncomingCapCache$lambda$88$Type($$outer_0, friend_1, current_2, s_3, c_4, network_5){
  this.$$outer_0 = $$outer_0;
  this.friend_1 = friend_1;
  this.current_2 = current_2;
  this.s_3 = s_3;
  this.c_4 = c_4;
  this.network_5 = network_5;
}

defineClass(2392, $wnd.Function, $intern_22, IncomingCapCache$lambda$88$Type);
_.apply_0 = function apply_1155(arg0){
  return $lambda$88_0(this.$$outer_0, this.friend_1, this.current_2, this.s_3, this.c_4, this.network_5, arg0);
}
;
function IncomingCapCache$lambda$89$Type($$outer_0, network_1){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
}

defineClass(2393, $wnd.Function, $intern_22, IncomingCapCache$lambda$89$Type);
_.apply_0 = function apply_1156(arg0){
  return $lambda$89(this.$$outer_0, this.network_1, arg0);
}
;
function IncomingCapCache$lambda$90$Type(p_0){
  this.p_0 = p_0;
}

defineClass(2405, $wnd.Function, $intern_22, IncomingCapCache$lambda$90$Type);
_.apply_0 = function apply_1157(arg0){
  return this.p_0;
}
;
function IncomingCapCache$lambda$91$Type(byteOffsetWrite_0, sharedDir_2, network_3, crypto_4){
  this.byteOffsetWrite_0 = byteOffsetWrite_0;
  this.sharedDir_2 = sharedDir_2;
  this.network_3 = network_3;
  this.crypto_4 = crypto_4;
}

defineClass(2403, $wnd.Function, $intern_22, IncomingCapCache$lambda$91$Type);
_.apply_0 = function apply_1158(arg0){
  return lambda$91_1(this.byteOffsetWrite_0, this.sharedDir_2, this.network_3, this.crypto_4, arg0);
}
;
_.byteOffsetWrite_0 = 0;
function IncomingCapCache$lambda$92$Type($$outer_0, friend_1, c_2, network_3, all_4){
  this.$$outer_0 = $$outer_0;
  this.friend_1 = friend_1;
  this.c_2 = c_2;
  this.network_3 = network_3;
  this.all_4 = all_4;
}

defineClass(2339, $wnd.Function, $intern_22, IncomingCapCache$lambda$92$Type);
_.apply_0 = function apply_1159(arg0){
  return $lambda$92_0(this.$$outer_0, this.friend_1, this.c_2, this.network_3, this.all_4, arg0);
}
;
function IncomingCapCache$lambda$93$Type($$outer_0, friend_1, c_2, network_3){
  this.$$outer_0 = $$outer_0;
  this.friend_1 = friend_1;
  this.c_2 = c_2;
  this.network_3 = network_3;
}

defineClass(817, 1, $intern_34, IncomingCapCache$lambda$93$Type);
_.apply_1 = function apply_1160(arg0, arg1){
  return $lambda$93_0(this.$$outer_0, this.friend_1, this.c_2, this.network_3, arg0, arg1);
}
;
var Lpeergos_shared_user_IncomingCapCache$lambda$93$Type_2_classLit = createForClass('peergos.shared.user', 'IncomingCapCache/lambda$93$Type', 817);
function IncomingCapCache$lambda$94$Type(){
}

defineClass(818, 1, $intern_34, IncomingCapCache$lambda$94$Type);
_.apply_1 = function apply_1161(arg0, arg1){
  return castTo(arg1, 19);
}
;
var Lpeergos_shared_user_IncomingCapCache$lambda$94$Type_2_classLit = createForClass('peergos.shared.user', 'IncomingCapCache/lambda$94$Type', 818);
function IncomingCapCache$lambda$95$Type($$outer_0, friend_1, c_2, network_3, s_4, diff_5, current_6){
  this.$$outer_0 = $$outer_0;
  this.friend_1 = friend_1;
  this.c_2 = c_2;
  this.network_3 = network_3;
  this.s_4 = s_4;
  this.diff_5 = diff_5;
  this.current_6 = current_6;
}

defineClass(2340, $wnd.Function, $intern_22, IncomingCapCache$lambda$95$Type);
_.apply_0 = function apply_1162(arg0){
  return $lambda$95(this.$$outer_0, this.friend_1, this.c_2, this.network_3, this.s_4, this.diff_5, this.current_6, arg0);
}
;
function IncomingCapCache$lambda$96$Type($$outer_0, friend_1, reader_2, raw_3, updatedRoot_4, c_5, network_6){
  this.$$outer_0 = $$outer_0;
  this.friend_1 = friend_1;
  this.reader_2 = reader_2;
  this.raw_3 = raw_3;
  this.updatedRoot_4 = updatedRoot_4;
  this.c_5 = c_5;
  this.network_6 = network_6;
}

defineClass(2406, $wnd.Function, $intern_22, IncomingCapCache$lambda$96$Type);
_.apply_0 = function apply_1163(arg0){
  return $lambda$96(this.$$outer_0, this.friend_1, this.reader_2, this.raw_3, this.updatedRoot_4, this.c_5, this.network_6, arg0);
}
;
function IncomingCapCache$lambda$97$Type(){
}

defineClass(2408, $wnd.Function, {}, IncomingCapCache$lambda$97$Type);
_.accept_5 = function accept_112(arg0){
}
;
function IncomingCapCache$lambda$98$Type(s_0, diff_1){
  this.s_0 = s_0;
  this.diff_1 = diff_1;
}

defineClass(2407, $wnd.Function, $intern_22, IncomingCapCache$lambda$98$Type);
_.apply_0 = function apply_1164(arg0){
  return lambda$98(this.s_0, this.diff_1, arg0);
}
;
function IncomingCapCache$lambda$99$Type(parentPath_0, root_1, network_2, crypto_3, s_4, c_5){
  this.parentPath_0 = parentPath_0;
  this.root_1 = root_1;
  this.network_2 = network_2;
  this.crypto_3 = crypto_3;
  this.s_4 = s_4;
  this.c_5 = c_5;
}

defineClass(2341, $wnd.Function, $intern_22, IncomingCapCache$lambda$99$Type);
_.apply_0 = function apply_1165(arg0){
  return lambda$99(this.parentPath_0, this.root_1, this.network_2, this.crypto_3, this.s_4, this.c_5, arg0);
}
;
function $canonicalise(this$static, url_0){
  if (this$static.isAbsolute && !$equals_0(url_0.substr(0, 1), '/'))
    return '/' + url_0;
  return url_0;
}

function $get_28(this$static, url_0, headers){
  var e, e$iterator, headersArray, index_0;
  if (this$static.isAbsolute || this$static.useGet) {
    headersArray = initUnidimensionalArray(Ljava_lang_String_2_classLit, $intern_17, 2, headers.size() * 2, 6, 1);
    index_0 = 0;
    for (e$iterator = headers.entrySet_0().iterator(); e$iterator.hasNext_0();) {
      e = castTo(e$iterator.next_1(), 40);
      headersArray[index_0++] = castToString(e.getKey());
      headersArray[index_0++] = castToString(e.getValue());
    }
    return this$static.http_0.getWithHeaders(url_0, headersArray);
  }
  return $postUnzip_0(this$static, url_0, initUnidimensionalArray(B_classLit, $intern_28, 8, 0, 15, 1));
}

function $post(this$static, url_0, payload){
  return this$static.http_0.post($canonicalise(this$static, url_0), payload, 15000);
}

function $post_0(this$static, url_0, payload){
  return this$static.http_0.post($canonicalise(this$static, url_0), payload, 15000);
}

function $postMultipart(this$static, url_0, files){
  return this$static.http_0.postMultipart($canonicalise(this$static, url_0), files, -1);
}

function $postMultipart_0(this$static, url_0, files, timeoutMillis){
  return this$static.http_0.postMultipart($canonicalise(this$static, url_0), files, timeoutMillis);
}

function $postUnzip(this$static, url_0, payload){
  return $post_0(this$static, $canonicalise(this$static, url_0), payload);
}

function $postUnzip_0(this$static, url_0, payload){
  return $post_0(this$static, $canonicalise(this$static, url_0), payload);
}

function $put_25(this$static, url_0, payload, headers){
  var e, e$iterator, headersArray, index_0;
  headersArray = initUnidimensionalArray(Ljava_lang_String_2_classLit, $intern_17, 2, headers.size() * 2, 6, 1);
  index_0 = 0;
  for (e$iterator = headers.entrySet_0().iterator(); e$iterator.hasNext_0();) {
    e = castTo(e$iterator.next_1(), 40);
    headersArray[index_0++] = castToString(e.getKey());
    headersArray[index_0++] = castToString(e.getValue());
  }
  return this$static.http_0.put(url_0, payload, headersArray);
}

function JavaScriptPoster(useGet){
  this.http_0 = new $wnd.http.NativeJSHttp;
  this.isAbsolute = false;
  this.useGet = useGet;
}

function convertToBytes(uints){
  var i, res;
  res = initUnidimensionalArray(B_classLit, $intern_28, 8, uints.length, 15, 1);
  for (i = 0; i < res.length; i++)
    res[i] = uints[i] << 24 >> 24;
  return res;
}

function emptyArray(){
  return initUnidimensionalArray(B_classLit, $intern_28, 8, 0, 15, 1);
}

defineClass(912, 1, {}, JavaScriptPoster);
_.isAbsolute = false;
_.useGet = false;
var Lpeergos_shared_user_JavaScriptPoster_2_classLit = createForClass('peergos.shared.user', 'JavaScriptPoster', 912);
function $toCbor_79(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'u', new CborObject$CborString(this$static.username));
  $put_6(state, 'e', this$static.entryPoints);
  $put_6(state, 'r', this$static.authorisedReader);
  $ifPresent(this$static.identityUpdate, new LoginData$lambda$0$Type(state));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function LoginData(username, entryPoints, authorisedReader, identityUpdate){
  this.username = username;
  this.entryPoints = entryPoints;
  this.authorisedReader = authorisedReader;
  this.identityUpdate = identityUpdate;
}

function lambda$0_24(state_0, p_1){
  $put_6(state_0, 'b', castTo(p_1.left, 7));
  $put_6(state_0, 'p', castTo(p_1.right, 7));
}

defineClass(226, 1, {7:1, 226:1}, LoginData);
_.serialize = function serialize_109(){
  return $toByteArray_2($toCbor_79(this));
}
;
_.toCbor = function toCbor_107(){
  return $toCbor_79(this);
}
;
var Lpeergos_shared_user_LoginData_2_classLit = createForClass('peergos.shared.user', 'LoginData', 226);
function LoginData$lambda$0$Type(state_0){
  this.state_0 = state_0;
}

defineClass($intern_12, 1, $intern_32, LoginData$lambda$0$Type);
_.accept = function accept_113(arg0){
  lambda$0_24(this.state_0, arg0);
}
;
_.andThen = function andThen_60(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_LoginData$lambda$0$Type_2_classLit = createForClass('peergos.shared.user', 'LoginData/lambda$0$Type', $intern_12);
function $clinit_MutableTreeImpl(){
  $clinit_MutableTreeImpl = emptyMethod;
  $clinit_Logger();
  getLogger();
}

function $get_29(this$static, base, owner, writer, mapKey){
  if (base.tree.ref == null)
    throw toJs(new IllegalStateException_0('Tree root not present for ' + writer));
  return $thenApply($thenApply($thenCompose(create_4(owner, castTo($get_6(base.tree), 44), this$static.hasher, this$static.dht, this$static.writeHasher, makeLambdaFunction(MutableTreeImpl$lambda$7$Type.prototype.apply_0, MutableTreeImpl$lambda$7$Type, [])), makeLambdaFunction(MutableTreeImpl$lambda$8$Type.prototype.apply_0, MutableTreeImpl$lambda$8$Type, [mapKey])), makeLambdaFunction(MutableTreeImpl$lambda$9$Type.prototype.apply_0, MutableTreeImpl$lambda$9$Type, [])), makeLambdaFunction(MutableTreeImpl$lambda$12$Type.prototype.apply_0, MutableTreeImpl$lambda$12$Type, []));
}

function $put_26(this$static, base, owner, writer, mapKey, existing, value_0, tid){
  return $thenApply($thenApply($thenCompose(base.tree.ref != null?create_4(owner, castTo($get_6(base.tree), 44), this$static.hasher, this$static.dht, this$static.writeHasher, makeLambdaFunction(MutableTreeImpl$lambda$1$Type.prototype.apply_0, MutableTreeImpl$lambda$1$Type, [])):create_3(owner, writer, this$static.hasher, tid, this$static.dht, this$static.writeHasher, makeLambdaFunction(MutableTreeImpl$lambda$2$Type.prototype.apply_0, MutableTreeImpl$lambda$2$Type, [])), makeLambdaFunction(MutableTreeImpl$lambda$3$Type.prototype.apply_0, MutableTreeImpl$lambda$3$Type, [owner, writer, mapKey, existing, value_0, tid])), makeLambdaFunction(MutableTreeImpl$lambda$5$Type.prototype.apply_0, MutableTreeImpl$lambda$5$Type, [])), makeLambdaFunction(MutableTreeImpl$1methodref$withChamp$Type.prototype.apply_0, MutableTreeImpl$1methodref$withChamp$Type, [base]));
}

function $remove_14(this$static, base, owner, writer, mapKey, existing, tid){
  if (base.tree.ref == null)
    throw toJs(new IllegalStateException_0('Tree root not present!'));
  return $thenApply($thenApply($thenCompose(create_4(owner, castTo($get_6(base.tree), 44), this$static.hasher, this$static.dht, this$static.writeHasher, makeLambdaFunction(MutableTreeImpl$lambda$13$Type.prototype.apply_0, MutableTreeImpl$lambda$13$Type, [])), makeLambdaFunction(MutableTreeImpl$lambda$14$Type.prototype.apply_0, MutableTreeImpl$lambda$14$Type, [owner, writer, mapKey, existing, tid])), makeLambdaFunction(MutableTreeImpl$lambda$16$Type.prototype.apply_0, MutableTreeImpl$lambda$16$Type, [])), makeLambdaFunction(MutableTreeImpl$lambda$17$Type.prototype.apply_0, MutableTreeImpl$lambda$17$Type, [base]));
}

function MutableTreeImpl(dht, writeHasher){
  $clinit_MutableTreeImpl();
  this.hasher = makeLambdaFunction(MutableTreeImpl$lambda$0$Type.prototype.apply_0, MutableTreeImpl$lambda$0$Type, []);
  this.dht = dht;
  this.writeHasher = writeHasher;
}

function lambda$14_4(owner_0, writer_1, mapKey_2, existing_3, tid_4, tree_5){
  $clinit_MutableTreeImpl();
  return $remove_13(tree_5, owner_0, writer_1, mapKey_2, $map_1(existing_3, makeLambdaFunction(MutableTreeImpl$3methodref$ctor$Type.prototype.apply_0, MutableTreeImpl$3methodref$ctor$Type, [])), tid_4);
}

function lambda$17_1(base_0, newTreeRoot_1){
  $clinit_MutableTreeImpl();
  return new WriterData(base_0.controller, base_0.generationAlgorithm, base_0.publicData, base_0.followRequestReceiver, base_0.ownedKeys, base_0.namedOwnedKeys, base_0.staticData, ($clinit_Optional() , new Optional(checkCriticalNotNull(newTreeRoot_1))));
}

function lambda$3_6(owner_0, writer_1, mapKey_2, existing_3, value_4, tid_5, tree_6){
  $clinit_MutableTreeImpl();
  return $put_13(tree_6, owner_0, writer_1, mapKey_2, $map_1(existing_3, makeLambdaFunction(MutableTreeImpl$0methodref$ctor$Type.prototype.apply_0, MutableTreeImpl$0methodref$ctor$Type, [])), new CborObject$CborMerkleLink(value_4), tid_5);
}

function lambda$8_4(mapKey_0, tree_1){
  $clinit_MutableTreeImpl();
  var key;
  return key = new ByteArrayWrapper(mapKey_0) , $thenCompose(castTo(tree_1.keyHasher.call(null, key), 6), makeLambdaFunction(ChampWrapper$lambda$3$Type.prototype.apply_0, ChampWrapper$lambda$3$Type, [tree_1, key]));
}

defineClass(278, 1, {}, MutableTreeImpl);
var Lpeergos_shared_user_MutableTreeImpl_2_classLit = createForClass('peergos.shared.user', 'MutableTreeImpl', 278);
function MutableTreeImpl$0methodref$ctor$Type(){
}

defineClass(3037, $wnd.Function, $intern_22, MutableTreeImpl$0methodref$ctor$Type);
_.apply_0 = function apply_1166(arg0){
  return new CborObject$CborMerkleLink(castTo(arg0, 58));
}
;
function MutableTreeImpl$1methodref$withChamp$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3028, $wnd.Function, $intern_22, MutableTreeImpl$1methodref$withChamp$Type);
_.apply_0 = function apply_1167(arg0){
  return $withChamp(this.$$outer_0, castTo(arg0, 58));
}
;
function MutableTreeImpl$2methodref$of$Type(){
}

defineClass(3040, $wnd.Function, $intern_22, MutableTreeImpl$2methodref$of$Type);
_.apply_0 = function apply_1168(arg0){
  return $clinit_MaybeMultihash() , new MaybeMultihash(castTo(arg0, 58));
}
;
function MutableTreeImpl$3methodref$ctor$Type(){
}

defineClass(3038, $wnd.Function, $intern_22, MutableTreeImpl$3methodref$ctor$Type);
_.apply_0 = function apply_1169(arg0){
  return new CborObject$CborMerkleLink(castTo(arg0, 58));
}
;
function MutableTreeImpl$lambda$0$Type(){
}

defineClass(3023, $wnd.Function, $intern_22, MutableTreeImpl$lambda$0$Type);
_.apply_0 = function apply_1170(arg0){
  return $clinit_MutableTreeImpl() , new CompletableFuture_0(castTo(arg0, 80).data_0);
}
;
function MutableTreeImpl$lambda$1$Type(){
}

defineClass(3024, $wnd.Function, $intern_22, MutableTreeImpl$lambda$1$Type);
_.apply_0 = function apply_1171(arg0){
  return $clinit_MutableTreeImpl() , castTo(castTo(arg0, 7), 53);
}
;
function MutableTreeImpl$lambda$10$Type(){
}

defineClass(3039, $wnd.Function, $intern_22, MutableTreeImpl$lambda$10$Type);
_.apply_0 = function apply_1172(arg0){
  return $clinit_MutableTreeImpl() , castTo(arg0, 53).target;
}
;
function MutableTreeImpl$lambda$12$Type(){
}

defineClass(3032, $wnd.Function, $intern_22, MutableTreeImpl$lambda$12$Type);
_.apply_0 = function apply_1173(arg0){
  return castTo(arg0, 93);
}
;
function MutableTreeImpl$lambda$13$Type(){
}

defineClass(3033, $wnd.Function, $intern_22, MutableTreeImpl$lambda$13$Type);
_.apply_0 = function apply_1174(arg0){
  return $clinit_MutableTreeImpl() , castTo(castTo(arg0, 7), 53);
}
;
function MutableTreeImpl$lambda$14$Type(owner_0, writer_1, mapKey_2, existing_3, tid_4){
  this.owner_0 = owner_0;
  this.writer_1 = writer_1;
  this.mapKey_2 = mapKey_2;
  this.existing_3 = existing_3;
  this.tid_4 = tid_4;
}

defineClass(3034, $wnd.Function, $intern_22, MutableTreeImpl$lambda$14$Type);
_.apply_0 = function apply_1175(arg0){
  return lambda$14_4(this.owner_0, this.writer_1, this.mapKey_2, this.existing_3, this.tid_4, arg0);
}
;
function MutableTreeImpl$lambda$16$Type(){
}

defineClass(3035, $wnd.Function, $intern_22, MutableTreeImpl$lambda$16$Type);
_.apply_0 = function apply_1176(arg0){
  return castTo(arg0, 58);
}
;
function MutableTreeImpl$lambda$17$Type(base_0){
  this.base_0 = base_0;
}

defineClass(3036, $wnd.Function, $intern_22, MutableTreeImpl$lambda$17$Type);
_.apply_0 = function apply_1177(arg0){
  return lambda$17_1(this.base_0, arg0);
}
;
function MutableTreeImpl$lambda$2$Type(){
}

defineClass(3025, $wnd.Function, $intern_22, MutableTreeImpl$lambda$2$Type);
_.apply_0 = function apply_1178(arg0){
  return $clinit_MutableTreeImpl() , castTo(castTo(arg0, 7), 53);
}
;
function MutableTreeImpl$lambda$3$Type(owner_0, writer_1, mapKey_2, existing_3, value_4, tid_5){
  this.owner_0 = owner_0;
  this.writer_1 = writer_1;
  this.mapKey_2 = mapKey_2;
  this.existing_3 = existing_3;
  this.value_4 = value_4;
  this.tid_5 = tid_5;
}

defineClass(3026, $wnd.Function, $intern_22, MutableTreeImpl$lambda$3$Type);
_.apply_0 = function apply_1179(arg0){
  return lambda$3_6(this.owner_0, this.writer_1, this.mapKey_2, this.existing_3, this.value_4, this.tid_5, arg0);
}
;
function MutableTreeImpl$lambda$5$Type(){
}

defineClass(3027, $wnd.Function, $intern_22, MutableTreeImpl$lambda$5$Type);
_.apply_0 = function apply_1180(arg0){
  return castTo(arg0, 58);
}
;
function MutableTreeImpl$lambda$7$Type(){
}

defineClass(3029, $wnd.Function, $intern_22, MutableTreeImpl$lambda$7$Type);
_.apply_0 = function apply_1181(arg0){
  return $clinit_MutableTreeImpl() , castTo(castTo(arg0, 7), 53);
}
;
function MutableTreeImpl$lambda$8$Type(mapKey_0){
  this.mapKey_0 = mapKey_0;
}

defineClass(3030, $wnd.Function, $intern_22, MutableTreeImpl$lambda$8$Type);
_.apply_0 = function apply_1182(arg0){
  return lambda$8_4(this.mapKey_0, arg0);
}
;
function MutableTreeImpl$lambda$9$Type(){
}

defineClass(3031, $wnd.Function, $intern_22, MutableTreeImpl$lambda$9$Type);
_.apply_0 = function apply_1183(arg0){
  return $clinit_MutableTreeImpl() , castTo($orElse($map($map(castTo(arg0, 12), makeLambdaFunction(MutableTreeImpl$lambda$10$Type.prototype.apply_0, MutableTreeImpl$lambda$10$Type, [])), makeLambdaFunction(MutableTreeImpl$2methodref$of$Type.prototype.apply_0, MutableTreeImpl$2methodref$of$Type, [])), ($clinit_MaybeMultihash() , $clinit_MaybeMultihash() , EMPTY_0)), 93);
}
;
function $add_5(this$static, owner, writer, proof, hasher, tid){
  return $thenCompose(this$static.ipfs.put_0(owner, writer, $toByteArray_2($toCbor_7(proof)), hasher, tid), makeLambdaFunction(OwnedKeyChamp$lambda$8$Type.prototype.apply_0, OwnedKeyChamp$lambda$8$Type, [this$static, owner, writer, proof, tid]));
}

function $applyToAllMappings(this$static, owner, identity, consumer, ipfs){
  return $reduceAllMappings_0(this$static.champ, owner, identity, new OwnedKeyChamp$lambda$11$Type(consumer, ipfs, owner));
}

function $lambda$5_14(this$static, owner_1, res_1){
  return res_1.ref != null?$thenApply(this$static.ipfs.get_1(owner_1, castTo((checkCriticalElement(res_1.ref != null) , castTo(res_1.ref, 53)).target, 44), ($clinit_Optional() , $clinit_Optional() , EMPTY)), makeLambdaFunction(OwnedKeyChamp$lambda$6$Type.prototype.apply_0, OwnedKeyChamp$lambda$6$Type, [])):new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY));
}

function $lambda$8_9(this$static, owner_1, writer_2, proof_3, tid_4, valueHash_4){
  return $put_13(this$static.champ, owner_1, writer_2, reverse($toByteArray_2(new CborObject$CborMerkleLink(proof_3.ownedKey.target))), ($clinit_Optional() , $clinit_Optional() , EMPTY), new CborObject$CborMerkleLink(valueHash_4), tid_4);
}

function $lambda$9_12(this$static, owner_1, writer_2, keyBytes_3, tid_4, existing_4){
  return $remove_13(this$static.champ, owner_1, writer_2, keyBytes_3, existing_4, tid_4);
}

function OwnedKeyChamp(champ, ipfs){
  this.champ = champ;
  this.ipfs = ipfs;
}

function build_14(owner, root, ipfs, hasher){
  return $thenApply(create_4(owner, root, makeLambdaFunction(OwnedKeyChamp$lambda$2$Type.prototype.apply_0, OwnedKeyChamp$lambda$2$Type, []), ipfs, hasher, makeLambdaFunction(OwnedKeyChamp$lambda$3$Type.prototype.apply_0, OwnedKeyChamp$lambda$3$Type, [])), makeLambdaFunction(OwnedKeyChamp$lambda$4$Type.prototype.apply_0, OwnedKeyChamp$lambda$4$Type, [ipfs]));
}

function createEmpty_0(owner, writer, ipfs, hasher, tid){
  var newRoot, raw;
  newRoot = empty_3(makeLambdaFunction(OwnedKeyChamp$lambda$0$Type.prototype.apply_0, OwnedKeyChamp$lambda$0$Type, []));
  raw = $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborByteArray($toByteArray_1(newRoot.dataMap)), new CborObject$CborByteArray($toByteArray_1(newRoot.nodeMap)), new CborObject$CborList(castTo($collect_0($flatMap_0(stream_5(newRoot.contents), makeLambdaFunction(Champ$lambda$65$Type.prototype.apply_0, Champ$lambda$65$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17))]))));
  return $thenCompose(hasher.scriptJS.sha256(raw), makeLambdaFunction(OwnedKeyChamp$lambda$1$Type.prototype.apply_0, OwnedKeyChamp$lambda$1$Type, [ipfs, owner, writer, raw, tid]));
}

function lambda$1_14(ipfs_0, owner_1, writer_2, raw_3, tid_4, hash_5){
  return ipfs_0.put_2(owner_1, writer_2.publicKeyHash, $signMessage(writer_2.secret, hash_5), raw_3, tid_4);
}

function lambda$11_5(consumer_0, ipfs_1, owner_2, acc_3, pair_4){
  return castTo(pair_4.right, 12).ref != null?$thenCompose($thenApply(ipfs_1.get_1(owner_2, castTo(castTo($get_6(castTo(pair_4.right, 12)), 53).target, 44), ($clinit_Optional() , $clinit_Optional() , EMPTY)), makeLambdaFunction(OwnedKeyChamp$lambda$12$Type.prototype.apply_0, OwnedKeyChamp$lambda$12$Type, [])), makeLambdaFunction(OwnedKeyChamp$lambda$13$Type.prototype.apply_0, OwnedKeyChamp$lambda$13$Type, [consumer_0, acc_3, pair_4])):new CompletableFuture_0(acc_3);
}

function lambda$13_2(consumer_0, acc_1, pair_2, proof_3){
  return castTo(consumer_0.apply_1(acc_1, new Pair(fromCbor_23(fromByteArray(reverse(castTo(pair_2.left, 80).data_0))), proof_3)), 87);
}

function lambda$4_4(ipfs_1, c_2){
  return new OwnedKeyChamp(c_2, ipfs_1);
}

function reverse(in_0){
  var i, reversed;
  reversed = initUnidimensionalArray(B_classLit, $intern_28, 8, in_0.length, 15, 1);
  for (i = 0; i < in_0.length; i++)
    reversed[i] = in_0[in_0.length - i - 1];
  return reversed;
}

defineClass(1090, 1, {}, OwnedKeyChamp);
var Lpeergos_shared_user_OwnedKeyChamp_2_classLit = createForClass('peergos.shared.user', 'OwnedKeyChamp', 1090);
function OwnedKeyChamp$0methodref$fromCbor$Type(){
}

defineClass(3432, $wnd.Function, $intern_22, OwnedKeyChamp$0methodref$fromCbor$Type);
_.apply_0 = function apply_1184(arg0){
  return fromCbor_11(castTo(arg0, 7));
}
;
function OwnedKeyChamp$lambda$0$Type(){
}

defineClass(3427, $wnd.Function, $intern_22, OwnedKeyChamp$lambda$0$Type);
_.apply_0 = function apply_1185(arg0){
  return castTo(castTo(arg0, 7), 53);
}
;
function OwnedKeyChamp$lambda$1$Type(ipfs_0, owner_1, writer_2, raw_3, tid_4){
  this.ipfs_0 = ipfs_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.raw_3 = raw_3;
  this.tid_4 = tid_4;
}

defineClass(3428, $wnd.Function, $intern_22, OwnedKeyChamp$lambda$1$Type);
_.apply_0 = function apply_1186(arg0){
  return lambda$1_14(this.ipfs_0, this.owner_1, this.writer_2, this.raw_3, this.tid_4, arg0);
}
;
function OwnedKeyChamp$lambda$11$Type(consumer_0, ipfs_1, owner_2){
  this.consumer_0 = consumer_0;
  this.ipfs_1 = ipfs_1;
  this.owner_2 = owner_2;
}

defineClass(1091, 1, $intern_34, OwnedKeyChamp$lambda$11$Type);
_.apply_1 = function apply_1187(arg0, arg1){
  return lambda$11_5(this.consumer_0, this.ipfs_1, this.owner_2, arg0, arg1);
}
;
var Lpeergos_shared_user_OwnedKeyChamp$lambda$11$Type_2_classLit = createForClass('peergos.shared.user', 'OwnedKeyChamp/lambda$11$Type', 1091);
function OwnedKeyChamp$lambda$12$Type(){
}

defineClass(3430, $wnd.Function, $intern_22, OwnedKeyChamp$lambda$12$Type);
_.apply_0 = function apply_1188(arg0){
  return fromCbor_11((checkCriticalElement(castTo(arg0, 12).ref != null) , castTo(castTo(arg0, 12).ref, 7)));
}
;
function OwnedKeyChamp$lambda$13$Type(consumer_0, acc_1, pair_2){
  this.consumer_0 = consumer_0;
  this.acc_1 = acc_1;
  this.pair_2 = pair_2;
}

defineClass(3431, $wnd.Function, $intern_22, OwnedKeyChamp$lambda$13$Type);
_.apply_0 = function apply_1189(arg0){
  return lambda$13_2(this.consumer_0, this.acc_1, this.pair_2, arg0);
}
;
function OwnedKeyChamp$lambda$2$Type(){
}

defineClass(1253, $wnd.Function, $intern_22, OwnedKeyChamp$lambda$2$Type);
_.apply_0 = function apply_1190(arg0){
  return new CompletableFuture_0(castTo(arg0, 80).data_0);
}
;
function OwnedKeyChamp$lambda$3$Type(){
}

defineClass(1254, $wnd.Function, $intern_22, OwnedKeyChamp$lambda$3$Type);
_.apply_0 = function apply_1191(arg0){
  return castTo(castTo(arg0, 7), 53);
}
;
function OwnedKeyChamp$lambda$4$Type(ipfs_1){
  this.ipfs_1 = ipfs_1;
}

defineClass(1255, $wnd.Function, $intern_22, OwnedKeyChamp$lambda$4$Type);
_.apply_0 = function apply_1192(arg0){
  return lambda$4_4(this.ipfs_1, arg0);
}
;
function OwnedKeyChamp$lambda$5$Type($$outer_0, owner_1){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
}

defineClass(1552, $wnd.Function, $intern_22, OwnedKeyChamp$lambda$5$Type);
_.apply_0 = function apply_1193(arg0){
  return $lambda$5_14(this.$$outer_0, this.owner_1, arg0);
}
;
function OwnedKeyChamp$lambda$6$Type(){
}

defineClass(3429, $wnd.Function, $intern_22, OwnedKeyChamp$lambda$6$Type);
_.apply_0 = function apply_1194(arg0){
  return $map(castTo(arg0, 12), makeLambdaFunction(OwnedKeyChamp$0methodref$fromCbor$Type.prototype.apply_0, OwnedKeyChamp$0methodref$fromCbor$Type, []));
}
;
function OwnedKeyChamp$lambda$8$Type($$outer_0, owner_1, writer_2, proof_3, tid_4){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.proof_3 = proof_3;
  this.tid_4 = tid_4;
}

defineClass(1256, $wnd.Function, $intern_22, OwnedKeyChamp$lambda$8$Type);
_.apply_0 = function apply_1195(arg0){
  return $lambda$8_9(this.$$outer_0, this.owner_1, this.writer_2, this.proof_3, this.tid_4, arg0);
}
;
function OwnedKeyChamp$lambda$9$Type($$outer_0, owner_1, writer_2, keyBytes_3, tid_4){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.keyBytes_3 = keyBytes_3;
  this.tid_4 = tid_4;
}

defineClass(1551, $wnd.Function, $intern_22, OwnedKeyChamp$lambda$9$Type);
_.apply_0 = function apply_1196(arg0){
  return $lambda$9_12(this.$$outer_0, this.owner_1, this.writer_2, this.keyBytes_3, this.tid_4, arg0);
}
;
function $toCbor_80(this$static){
  var cbor, transformed;
  cbor = new TreeMap;
  $put_6(cbor, 'pendingOutgoing', new CborObject$CborList(castTo($collect_0($map_0(new StreamImpl(null, this$static.pendingOutgoingFollowRequests.spliterator_0()), makeLambdaFunction(PendingSocialState$0methodref$ctor$Type.prototype.apply_0, PendingSocialState$0methodref$ctor$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17)));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(cbor), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function PendingSocialState(pendingOutgoingFollowRequests){
  this.pendingOutgoingFollowRequests = pendingOutgoingFollowRequests;
}

function fromCbor_89(cbor){
  var m, pendingOutgoing;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor for PendingSocialState!'));
  m = castTo(cbor, 18);
  pendingOutgoing = $getList(m, 'pendingOutgoing', makeLambdaFunction(PendingSocialState$lambda$1$Type.prototype.apply_0, PendingSocialState$lambda$1$Type, []));
  return new PendingSocialState(new HashSet_1(pendingOutgoing));
}

defineClass(270, 1, {7:1, 270:1}, PendingSocialState);
_.serialize = function serialize_110(){
  return $toByteArray_2($toCbor_80(this));
}
;
_.toCbor = function toCbor_108(){
  return $toCbor_80(this);
}
;
var Lpeergos_shared_user_PendingSocialState_2_classLit = createForClass('peergos.shared.user', 'PendingSocialState', 270);
function PendingSocialState$0methodref$ctor$Type(){
}

defineClass(2600, $wnd.Function, $intern_22, PendingSocialState$0methodref$ctor$Type);
_.apply_0 = function apply_1197(arg0){
  return new CborObject$CborString(castToString(arg0));
}
;
function PendingSocialState$lambda$1$Type(){
}

defineClass(2601, $wnd.Function, $intern_22, PendingSocialState$lambda$1$Type);
_.apply_0 = function apply_1198(arg0){
  return castTo(castTo(arg0, 7), 13).value_0;
}
;
function Profile(profilePhoto, bio, status_0, firstName, lastName, phone, email, webRoot){
  this.profilePhoto = profilePhoto;
  this.bio = bio;
  this.status = status_0;
  this.firstName = firstName;
  this.lastName = lastName;
  this.phone = phone;
  this.email = email;
  this.webRoot = webRoot;
}

defineClass(913, 1, {}, Profile);
var Lpeergos_shared_user_Profile_2_classLit = createForClass('peergos.shared.user', 'Profile', 913);
function $clinit_ProfilePaths(){
  $clinit_ProfilePaths = emptyMethod;
  ROOT = get_176('.profile', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, []));
  PHOTO = $resolve(ROOT, 'photo');
  PHOTO_HIGH_RES = $resolve(ROOT, 'highres');
  BIO = $resolve(ROOT, 'bio');
  STATUS = $resolve(ROOT, 'status');
  FIRSTNAME = $resolve(ROOT, 'firstname');
  LASTNAME = $resolve(ROOT, 'lastname');
  PHONE = $resolve(ROOT, 'phone');
  EMAIL = $resolve(ROOT, 'email');
  WEBROOT = $resolve(ROOT, 'webroot');
}

function getAndParse(p, parser, viewer){
  var pathString;
  return $thenCompose((pathString = castToString(range_0(0, $getNameCount(p)).mapToObj(new UserContext$30methodref$getName$Type(p)).map_1(makeLambdaFunction(UserContext$31methodref$toString$Type.prototype.apply_0, UserContext$31methodref$toString$Type, [])).collect_0(of_3(new Collectors$lambda$15$Type('/', ''), new Collectors$9methodref$add$Type, new Collectors$10methodref$merge$Type, makeLambdaFunction(Collectors$11methodref$toString$Type.prototype.apply_0, Collectors$11methodref$toString$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [])))) , $getByPath_4(viewer, pathString)), makeLambdaFunction(ProfilePaths$lambda$0$Type.prototype.apply_0, ProfilePaths$lambda$0$Type, [parser, viewer]));
}

function getBio(user, viewer){
  $clinit_ProfilePaths();
  return getAndParse($resolve(get_176(user, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])), BIO.pathString), makeLambdaFunction(ProfilePaths$8methodref$ctor$Type.prototype.apply_0, ProfilePaths$8methodref$ctor$Type, []), viewer);
}

function getEmail(user, viewer){
  $clinit_ProfilePaths();
  return getAndParse($resolve(get_176(user, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])), EMAIL.pathString), makeLambdaFunction(ProfilePaths$18methodref$ctor$Type.prototype.apply_0, ProfilePaths$18methodref$ctor$Type, []), viewer);
}

function getFirstName(user, viewer){
  $clinit_ProfilePaths();
  return getAndParse($resolve(get_176(user, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])), FIRSTNAME.pathString), makeLambdaFunction(ProfilePaths$12methodref$ctor$Type.prototype.apply_0, ProfilePaths$12methodref$ctor$Type, []), viewer);
}

function getHighResProfilePhoto(user, viewer){
  $clinit_ProfilePaths();
  return getAndParse($resolve(get_176(user, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])), PHOTO_HIGH_RES.pathString), makeLambdaFunction(ProfilePaths$lambda$26$Type.prototype.apply_0, ProfilePaths$lambda$26$Type, []), viewer);
}

function getLastName(user, viewer){
  $clinit_ProfilePaths();
  return getAndParse($resolve(get_176(user, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])), LASTNAME.pathString), makeLambdaFunction(ProfilePaths$14methodref$ctor$Type.prototype.apply_0, ProfilePaths$14methodref$ctor$Type, []), viewer);
}

function getPhone(user, viewer){
  $clinit_ProfilePaths();
  return getAndParse($resolve(get_176(user, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])), PHONE.pathString), makeLambdaFunction(ProfilePaths$16methodref$ctor$Type.prototype.apply_0, ProfilePaths$16methodref$ctor$Type, []), viewer);
}

function getProfile(username, context){
  $clinit_ProfilePaths();
  return $thenCompose($getChildren_3(context, username + '/' + ROOT.pathString), makeLambdaFunction(ProfilePaths$lambda$7$Type.prototype.apply_0, ProfilePaths$lambda$7$Type, [context]));
}

function getProfilePhoto(user, viewer){
  $clinit_ProfilePaths();
  return getAndParse($resolve(get_176(user, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])), PHOTO.pathString), makeLambdaFunction(ProfilePaths$lambda$28$Type.prototype.apply_0, ProfilePaths$lambda$28$Type, []), viewer);
}

function getStatus(user, viewer){
  $clinit_ProfilePaths();
  return getAndParse($resolve(get_176(user, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])), STATUS.pathString), makeLambdaFunction(ProfilePaths$10methodref$ctor$Type.prototype.apply_0, ProfilePaths$10methodref$ctor$Type, []), viewer);
}

function getWebRoot(user, viewer){
  $clinit_ProfilePaths();
  return getAndParse($resolve(get_176(user, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])), WEBROOT.pathString), makeLambdaFunction(ProfilePaths$20methodref$ctor$Type.prototype.apply_0, ProfilePaths$20methodref$ctor$Type, []), viewer);
}

function lambda$0_25(parser_0, viewer_1, opt_2){
  $clinit_ProfilePaths();
  return castTo($orElse($map(opt_2, makeLambdaFunction(ProfilePaths$lambda$1$Type.prototype.apply_0, ProfilePaths$lambda$1$Type, [viewer_1, parser_0])), new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY))), 6);
}

function lambda$1_15(viewer_0, parser_1, f_2){
  $clinit_ProfilePaths();
  return $thenApply($thenApply(readFully_0(f_2, viewer_0.crypto, viewer_0.network), parser_1), makeLambdaFunction(ProfilePaths$0methodref$of$Type.prototype.apply_0, ProfilePaths$0methodref$of$Type, []));
}

function lambda$11_6(resolveFunc_0, context_1, firstNameOpt_2){
  $clinit_ProfilePaths();
  return $thenCompose(parse_5($apply_9(resolveFunc_0, LASTNAME), makeLambdaFunction(ProfilePaths$2methodref$ctor$Type.prototype.apply_0, ProfilePaths$2methodref$ctor$Type, []), context_1), makeLambdaFunction(ProfilePaths$lambda$13$Type.prototype.apply_0, ProfilePaths$lambda$13$Type, [firstNameOpt_2, resolveFunc_0, context_1]));
}

function lambda$13_3(firstNameOpt_0, resolveFunc_1, context_2, lastNameOpt_3){
  $clinit_ProfilePaths();
  return $thenCompose(parse_5($apply_9(resolveFunc_1, BIO), makeLambdaFunction(ProfilePaths$3methodref$ctor$Type.prototype.apply_0, ProfilePaths$3methodref$ctor$Type, []), context_2), makeLambdaFunction(ProfilePaths$lambda$15$Type.prototype.apply_0, ProfilePaths$lambda$15$Type, [firstNameOpt_0, lastNameOpt_3, resolveFunc_1, context_2]));
}

function lambda$15_1(firstNameOpt_0, lastNameOpt_1, resolveFunc_2, context_3, bioOpt_4){
  $clinit_ProfilePaths();
  return $thenCompose(parse_5($apply_9(resolveFunc_2, PHONE), makeLambdaFunction(ProfilePaths$4methodref$ctor$Type.prototype.apply_0, ProfilePaths$4methodref$ctor$Type, []), context_3), makeLambdaFunction(ProfilePaths$lambda$17$Type.prototype.apply_0, ProfilePaths$lambda$17$Type, [bioOpt_4, firstNameOpt_0, lastNameOpt_1, resolveFunc_2, context_3]));
}

function lambda$17_2(bioOpt_0, firstNameOpt_1, lastNameOpt_2, resolveFunc_3, context_4, phoneOpt_5){
  $clinit_ProfilePaths();
  return $thenCompose(parse_5($apply_9(resolveFunc_3, EMAIL), makeLambdaFunction(ProfilePaths$5methodref$ctor$Type.prototype.apply_0, ProfilePaths$5methodref$ctor$Type, []), context_4), makeLambdaFunction(ProfilePaths$lambda$19$Type.prototype.apply_0, ProfilePaths$lambda$19$Type, [bioOpt_0, firstNameOpt_1, lastNameOpt_2, phoneOpt_5, resolveFunc_3, context_4]));
}

function lambda$19_3(bioOpt_0, firstNameOpt_1, lastNameOpt_2, phoneOpt_3, resolveFunc_4, context_5, emailOpt_6){
  $clinit_ProfilePaths();
  return $thenCompose(parse_5($apply_9(resolveFunc_4, PHOTO), makeLambdaFunction(ProfilePaths$lambda$20$Type.prototype.apply_0, ProfilePaths$lambda$20$Type, []), context_5), makeLambdaFunction(ProfilePaths$lambda$21$Type.prototype.apply_0, ProfilePaths$lambda$21$Type, [bioOpt_0, firstNameOpt_1, lastNameOpt_2, phoneOpt_3, emailOpt_6, resolveFunc_4, context_5]));
}

function lambda$21_0(bioOpt_0, firstNameOpt_1, lastNameOpt_2, phoneOpt_3, emailOpt_4, resolveFunc_5, context_6, imageOpt_7){
  $clinit_ProfilePaths();
  return $thenCompose(parse_5($apply_9(resolveFunc_5, STATUS), makeLambdaFunction(ProfilePaths$6methodref$ctor$Type.prototype.apply_0, ProfilePaths$6methodref$ctor$Type, []), context_6), makeLambdaFunction(ProfilePaths$lambda$23$Type.prototype.apply_0, ProfilePaths$lambda$23$Type, [imageOpt_7, bioOpt_0, firstNameOpt_1, lastNameOpt_2, phoneOpt_3, emailOpt_4, resolveFunc_5, context_6]));
}

function lambda$23_2(imageOpt_0, bioOpt_1, firstNameOpt_2, lastNameOpt_3, phoneOpt_4, emailOpt_5, resolveFunc_6, context_7, statusOpt_8){
  $clinit_ProfilePaths();
  return $thenApply(parse_5($apply_9(resolveFunc_6, WEBROOT), makeLambdaFunction(ProfilePaths$7methodref$ctor$Type.prototype.apply_0, ProfilePaths$7methodref$ctor$Type, []), context_7), makeLambdaFunction(ProfilePaths$lambda$25$Type.prototype.apply_0, ProfilePaths$lambda$25$Type, [imageOpt_0, bioOpt_1, statusOpt_8, firstNameOpt_2, lastNameOpt_3, phoneOpt_4, emailOpt_5]));
}

function lambda$3_7(p_0, user_1, home_2){
  $clinit_ProfilePaths();
  return $getOrMkdirs(home_2, $getParent(p_0), user_1.network, true, $map(user_1.mirrorBat, makeLambdaFunction(UserContext$13methodref$id$Type.prototype.apply_0, UserContext$13methodref$id$Type, [])), user_1.crypto);
}

function lambda$4_5(p_0, raw_1, user_2, parent_3){
  $clinit_ProfilePaths();
  return $uploadOrReplaceFile(parent_3, $getFileName(p_0).pathString, new AsyncReader$ArrayBacked(raw_1), raw_1.length, user_2.network, user_2.crypto, makeLambdaFunction(ProfilePaths$lambda$5$Type.prototype.accept_5, ProfilePaths$lambda$5$Type, []));
}

function lambda$44_0(user_0, popt_1){
  $clinit_ProfilePaths();
  var path;
  if (popt_1.ref == null)
    return new CompletableFuture_0(($clinit_Boolean() , false));
  path = (checkCriticalElement(popt_1.ref != null) , castToString(popt_1.ref));
  if (path.length == 0) {
    return new CompletableFuture_0(($clinit_Boolean() , false));
  }
  return $thenApply($unPublishFile(user_0, get_176(path, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, []))), makeLambdaFunction(ProfilePaths$lambda$45$Type.prototype.apply_0, ProfilePaths$lambda$45$Type, []));
}

function lambda$46_2(user_0, popt_1){
  $clinit_ProfilePaths();
  if (popt_1.ref == null)
    return new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY));
  return $thenCompose($getByPath_4(user_0, (checkCriticalElement(popt_1.ref != null) , castToString(popt_1.ref))), makeLambdaFunction(ProfilePaths$lambda$47$Type.prototype.apply_0, ProfilePaths$lambda$47$Type, [user_0]));
}

function lambda$47_0(user_0, fopt_1){
  $clinit_ProfilePaths();
  return castTo($orElse($map($map(fopt_1, makeLambdaFunction(ProfilePaths$22methodref$makePublic$Type.prototype.apply_0, ProfilePaths$22methodref$makePublic$Type, [user_0])), makeLambdaFunction(ProfilePaths$lambda$49$Type.prototype.apply_0, ProfilePaths$lambda$49$Type, [])), new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY))), 87);
}

function lambda$51_0(user_0, res_1){
  $clinit_ProfilePaths();
  var profileEntry;
  if (res_1.ref == null)
    return new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY));
  profileEntry = $resolve(get_176(user_0.username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])), WEBROOT.pathString);
  return $thenCompose(($clinit_FileProperties() , ensureValidPath(profileEntry.pathString) , $exceptionally($thenCompose(getPublicCapability(profileEntry, user_0.network), makeLambdaFunction(UserContext$lambda$85$Type.prototype.apply_0, UserContext$lambda$85$Type, [user_0, profileEntry])), makeLambdaFunction(UserContext$lambda$87$Type.prototype.apply_0, UserContext$lambda$87$Type, []))), makeLambdaFunction(ProfilePaths$lambda$52$Type.prototype.apply_0, ProfilePaths$lambda$52$Type, [user_0, profileEntry]));
}

function lambda$52_1(user_0, profileEntry_1, existing_2){
  $clinit_ProfilePaths();
  var pathString;
  return existing_2.ref != null?new CompletableFuture_0(($clinit_Optional() , new Optional(checkCriticalNotNull($getVersionRoot((checkCriticalElement(existing_2.ref != null) , castTo(existing_2.ref, 19))))))):$thenCompose((pathString = castToString(range_0(0, $getNameCount(profileEntry_1)).mapToObj(new UserContext$30methodref$getName$Type(profileEntry_1)).map_1(makeLambdaFunction(UserContext$31methodref$toString$Type.prototype.apply_0, UserContext$31methodref$toString$Type, [])).collect_0(of_3(new Collectors$lambda$15$Type('/', ''), new Collectors$9methodref$add$Type, new Collectors$10methodref$merge$Type, makeLambdaFunction(Collectors$11methodref$toString$Type.prototype.apply_0, Collectors$11methodref$toString$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [])))) , $getByPath_4(user_0, pathString)), makeLambdaFunction(ProfilePaths$lambda$53$Type.prototype.apply_0, ProfilePaths$lambda$53$Type, [user_0]));
}

function lambda$53_1(user_0, opt_1){
  $clinit_ProfilePaths();
  return castTo($orElse($map($map(opt_1, makeLambdaFunction(ProfilePaths$24methodref$makePublic$Type.prototype.apply_0, ProfilePaths$24methodref$makePublic$Type, [user_0])), makeLambdaFunction(ProfilePaths$lambda$55$Type.prototype.apply_0, ProfilePaths$lambda$55$Type, [])), new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY))), 87);
}

function lambda$7_6(context_1, files_2){
  $clinit_ProfilePaths();
  var resolve;
  resolve = makeLambdaFunction(ProfilePaths$lambda$8$Type.prototype.apply_0, ProfilePaths$lambda$8$Type, [files_2]);
  return $thenCompose(parse_5($apply_9(resolve, FIRSTNAME), makeLambdaFunction(ProfilePaths$1methodref$ctor$Type.prototype.apply_0, ProfilePaths$1methodref$ctor$Type, []), context_1), makeLambdaFunction(ProfilePaths$lambda$11$Type.prototype.apply_0, ProfilePaths$lambda$11$Type, [resolve, context_1]));
}

function lambda$8_5(files_0, filePath_1){
  $clinit_ProfilePaths();
  return $findFirst($filter(files_0.stream(), new ProfilePaths$lambda$9$Type(filePath_1)));
}

function lambda$9_4(filePath_0, f_1){
  $clinit_ProfilePaths();
  return $equals_0(($ensureUnmodified(f_1) , f_1.props).name, $getFileName(filePath_0).pathString);
}

function parse_5(opt, parser, viewer){
  return castTo($orElse($map(opt, makeLambdaFunction(ProfilePaths$lambda$1$Type.prototype.apply_0, ProfilePaths$lambda$1$Type, [viewer, parser])), new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY))), 6);
}

function publishWebroot(user){
  $clinit_ProfilePaths();
  return $thenApply($thenCompose($thenCompose(getWebRoot(user.username, user), makeLambdaFunction(ProfilePaths$lambda$46$Type.prototype.apply_0, ProfilePaths$lambda$46$Type, [user])), makeLambdaFunction(ProfilePaths$lambda$51$Type.prototype.apply_0, ProfilePaths$lambda$51$Type, [user])), makeLambdaFunction(ProfilePaths$lambda$57$Type.prototype.apply_0, ProfilePaths$lambda$57$Type, []));
}

function serializeAndSet(p, val, serialize, user){
  var raw;
  raw = castTo(serialize(val), 11);
  return $thenApply($thenCompose($thenCompose($thenApply($getByPath_4(user, '/' + user.username), makeLambdaFunction(UserContext$lambda$421$Type.prototype.apply_0, UserContext$lambda$421$Type, [])), makeLambdaFunction(ProfilePaths$lambda$3$Type.prototype.apply_0, ProfilePaths$lambda$3$Type, [p, user])), makeLambdaFunction(ProfilePaths$lambda$4$Type.prototype.apply_0, ProfilePaths$lambda$4$Type, [p, raw, user])), makeLambdaFunction(ProfilePaths$lambda$6$Type.prototype.apply_0, ProfilePaths$lambda$6$Type, []));
}

function setBio(user, bio){
  $clinit_ProfilePaths();
  return serializeAndSet(BIO, bio, makeLambdaFunction(ProfilePaths$9methodref$getBytes$Type.prototype.apply_0, ProfilePaths$9methodref$getBytes$Type, []), user);
}

function setEmail(user, email){
  $clinit_ProfilePaths();
  return serializeAndSet(EMAIL, email, makeLambdaFunction(ProfilePaths$19methodref$getBytes$Type.prototype.apply_0, ProfilePaths$19methodref$getBytes$Type, []), user);
}

function setFirstName(user, firstname){
  $clinit_ProfilePaths();
  return serializeAndSet(FIRSTNAME, firstname, makeLambdaFunction(ProfilePaths$13methodref$getBytes$Type.prototype.apply_0, ProfilePaths$13methodref$getBytes$Type, []), user);
}

function setHighResProfilePhoto(user, image){
  $clinit_ProfilePaths();
  return serializeAndSet(PHOTO_HIGH_RES, image, makeLambdaFunction(ProfilePaths$lambda$27$Type.prototype.apply_0, ProfilePaths$lambda$27$Type, []), user);
}

function setLastName(user, lastname){
  $clinit_ProfilePaths();
  return serializeAndSet(LASTNAME, lastname, makeLambdaFunction(ProfilePaths$15methodref$getBytes$Type.prototype.apply_0, ProfilePaths$15methodref$getBytes$Type, []), user);
}

function setPhone(user, phone){
  $clinit_ProfilePaths();
  return serializeAndSet(PHONE, phone, makeLambdaFunction(ProfilePaths$17methodref$getBytes$Type.prototype.apply_0, ProfilePaths$17methodref$getBytes$Type, []), user);
}

function setProfilePhoto(user, base64Str){
  $clinit_ProfilePaths();
  return serializeAndSet(PHOTO, base64Str, makeLambdaFunction(ProfilePaths$lambda$29$Type.prototype.apply_0, ProfilePaths$lambda$29$Type, []), user);
}

function setStatus(user, status_0){
  $clinit_ProfilePaths();
  return serializeAndSet(STATUS, status_0, makeLambdaFunction(ProfilePaths$11methodref$getBytes$Type.prototype.apply_0, ProfilePaths$11methodref$getBytes$Type, []), user);
}

function setWebRoot(user, webroot){
  $clinit_ProfilePaths();
  return serializeAndSet(WEBROOT, webroot, makeLambdaFunction(ProfilePaths$21methodref$getBytes$Type.prototype.apply_0, ProfilePaths$21methodref$getBytes$Type, []), user);
}

function unpublishWebRoot(user){
  $clinit_ProfilePaths();
  return $thenCompose(getWebRoot(user.username, user), makeLambdaFunction(ProfilePaths$lambda$44$Type.prototype.apply_0, ProfilePaths$lambda$44$Type, [user]));
}

defineClass(1230, 1, {});
var BIO, EMAIL, FIRSTNAME, LASTNAME, PHONE, PHOTO, PHOTO_HIGH_RES, ROOT, STATUS, WEBROOT;
var Lpeergos_shared_user_ProfilePaths_2_classLit = createForClass('peergos.shared.user', 'ProfilePaths', 1230);
function ProfilePaths$0methodref$of$Type(){
}

defineClass(2929, $wnd.Function, $intern_22, ProfilePaths$0methodref$of$Type);
_.apply_0 = function apply_1199(arg0){
  return $clinit_Optional() , new Optional(checkCriticalNotNull(arg0));
}
;
function ProfilePaths$10methodref$ctor$Type(){
}

defineClass(2913, $wnd.Function, $intern_22, ProfilePaths$10methodref$ctor$Type);
_.apply_0 = function apply_1200(arg0){
  return $create(castTo(arg0, 11));
}
;
function ProfilePaths$11methodref$getBytes$Type(){
}

defineClass(2914, $wnd.Function, $intern_22, ProfilePaths$11methodref$getBytes$Type);
_.apply_0 = function apply_1201(arg0){
  return $getBytes(castToString(arg0), ($clinit_EmulatedCharset() , UTF_8_0));
}
;
function ProfilePaths$12methodref$ctor$Type(){
}

defineClass(2915, $wnd.Function, $intern_22, ProfilePaths$12methodref$ctor$Type);
_.apply_0 = function apply_1202(arg0){
  return $create(castTo(arg0, 11));
}
;
function ProfilePaths$13methodref$getBytes$Type(){
}

defineClass(2916, $wnd.Function, $intern_22, ProfilePaths$13methodref$getBytes$Type);
_.apply_0 = function apply_1203(arg0){
  return $getBytes(castToString(arg0), ($clinit_EmulatedCharset() , UTF_8_0));
}
;
function ProfilePaths$14methodref$ctor$Type(){
}

defineClass(2917, $wnd.Function, $intern_22, ProfilePaths$14methodref$ctor$Type);
_.apply_0 = function apply_1204(arg0){
  return $create(castTo(arg0, 11));
}
;
function ProfilePaths$15methodref$getBytes$Type(){
}

defineClass(2918, $wnd.Function, $intern_22, ProfilePaths$15methodref$getBytes$Type);
_.apply_0 = function apply_1205(arg0){
  return $getBytes(castToString(arg0), ($clinit_EmulatedCharset() , UTF_8_0));
}
;
function ProfilePaths$16methodref$ctor$Type(){
}

defineClass(2919, $wnd.Function, $intern_22, ProfilePaths$16methodref$ctor$Type);
_.apply_0 = function apply_1206(arg0){
  return $create(castTo(arg0, 11));
}
;
function ProfilePaths$17methodref$getBytes$Type(){
}

defineClass(2920, $wnd.Function, $intern_22, ProfilePaths$17methodref$getBytes$Type);
_.apply_0 = function apply_1207(arg0){
  return $getBytes(castToString(arg0), ($clinit_EmulatedCharset() , UTF_8_0));
}
;
function ProfilePaths$18methodref$ctor$Type(){
}

defineClass(2921, $wnd.Function, $intern_22, ProfilePaths$18methodref$ctor$Type);
_.apply_0 = function apply_1208(arg0){
  return $create(castTo(arg0, 11));
}
;
function ProfilePaths$19methodref$getBytes$Type(){
}

defineClass(2922, $wnd.Function, $intern_22, ProfilePaths$19methodref$getBytes$Type);
_.apply_0 = function apply_1209(arg0){
  return $getBytes(castToString(arg0), ($clinit_EmulatedCharset() , UTF_8_0));
}
;
function ProfilePaths$1methodref$ctor$Type(){
}

defineClass(2932, $wnd.Function, $intern_22, ProfilePaths$1methodref$ctor$Type);
_.apply_0 = function apply_1210(arg0){
  return $create(castTo(arg0, 11));
}
;
function ProfilePaths$20methodref$ctor$Type(){
}

defineClass(2923, $wnd.Function, $intern_22, ProfilePaths$20methodref$ctor$Type);
_.apply_0 = function apply_1211(arg0){
  return $create(castTo(arg0, 11));
}
;
function ProfilePaths$21methodref$getBytes$Type(){
}

defineClass(2924, $wnd.Function, $intern_22, ProfilePaths$21methodref$getBytes$Type);
_.apply_0 = function apply_1212(arg0){
  return $getBytes(castToString(arg0), ($clinit_EmulatedCharset() , UTF_8_0));
}
;
function ProfilePaths$22methodref$makePublic$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2950, $wnd.Function, $intern_22, ProfilePaths$22methodref$makePublic$Type);
_.apply_0 = function apply_1213(arg0){
  return $makePublic(this.$$outer_0, castTo(arg0, 19));
}
;
function ProfilePaths$23methodref$of$Type(){
}

defineClass(2956, $wnd.Function, $intern_22, ProfilePaths$23methodref$of$Type);
_.apply_0 = function apply_1214(arg0){
  return $clinit_Optional() , new Optional(checkCriticalNotNull(castTo(arg0, 104)));
}
;
function ProfilePaths$24methodref$makePublic$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2954, $wnd.Function, $intern_22, ProfilePaths$24methodref$makePublic$Type);
_.apply_0 = function apply_1215(arg0){
  return $makePublic(this.$$outer_0, castTo(arg0, 19));
}
;
function ProfilePaths$25methodref$of$Type(){
}

defineClass(2957, $wnd.Function, $intern_22, ProfilePaths$25methodref$of$Type);
_.apply_0 = function apply_1216(arg0){
  return $clinit_Optional() , new Optional(checkCriticalNotNull(castTo(arg0, 104)));
}
;
function ProfilePaths$2methodref$ctor$Type(){
}

defineClass(2934, $wnd.Function, $intern_22, ProfilePaths$2methodref$ctor$Type);
_.apply_0 = function apply_1217(arg0){
  return $create(castTo(arg0, 11));
}
;
function ProfilePaths$3methodref$ctor$Type(){
}

defineClass(2936, $wnd.Function, $intern_22, ProfilePaths$3methodref$ctor$Type);
_.apply_0 = function apply_1218(arg0){
  return $create(castTo(arg0, 11));
}
;
function ProfilePaths$4methodref$ctor$Type(){
}

defineClass(2938, $wnd.Function, $intern_22, ProfilePaths$4methodref$ctor$Type);
_.apply_0 = function apply_1219(arg0){
  return $create(castTo(arg0, 11));
}
;
function ProfilePaths$5methodref$ctor$Type(){
}

defineClass(2940, $wnd.Function, $intern_22, ProfilePaths$5methodref$ctor$Type);
_.apply_0 = function apply_1220(arg0){
  return $create(castTo(arg0, 11));
}
;
function ProfilePaths$6methodref$ctor$Type(){
}

defineClass(2944, $wnd.Function, $intern_22, ProfilePaths$6methodref$ctor$Type);
_.apply_0 = function apply_1221(arg0){
  return $create(castTo(arg0, 11));
}
;
function ProfilePaths$7methodref$ctor$Type(){
}

defineClass(2946, $wnd.Function, $intern_22, ProfilePaths$7methodref$ctor$Type);
_.apply_0 = function apply_1222(arg0){
  return $create(castTo(arg0, 11));
}
;
function ProfilePaths$8methodref$ctor$Type(){
}

defineClass(2911, $wnd.Function, $intern_22, ProfilePaths$8methodref$ctor$Type);
_.apply_0 = function apply_1223(arg0){
  return $create(castTo(arg0, 11));
}
;
function ProfilePaths$9methodref$getBytes$Type(){
}

defineClass(2912, $wnd.Function, $intern_22, ProfilePaths$9methodref$getBytes$Type);
_.apply_0 = function apply_1224(arg0){
  return $getBytes(castToString(arg0), ($clinit_EmulatedCharset() , UTF_8_0));
}
;
function ProfilePaths$lambda$0$Type(parser_0, viewer_1){
  this.parser_0 = parser_0;
  this.viewer_1 = viewer_1;
}

defineClass(2902, $wnd.Function, $intern_22, ProfilePaths$lambda$0$Type);
_.apply_0 = function apply_1225(arg0){
  return lambda$0_25(this.parser_0, this.viewer_1, arg0);
}
;
function ProfilePaths$lambda$1$Type(viewer_0, parser_1){
  this.viewer_0 = viewer_0;
  this.parser_1 = parser_1;
}

defineClass(1316, $wnd.Function, $intern_22, ProfilePaths$lambda$1$Type);
_.apply_0 = function apply_1226(arg0){
  return lambda$1_15(this.viewer_0, this.parser_1, arg0);
}
;
function ProfilePaths$lambda$11$Type(resolveFunc_0, context_1){
  this.resolveFunc_0 = resolveFunc_0;
  this.context_1 = context_1;
}

defineClass(2933, $wnd.Function, $intern_22, ProfilePaths$lambda$11$Type);
_.apply_0 = function apply_1227(arg0){
  return lambda$11_6(this.resolveFunc_0, this.context_1, arg0);
}
;
function ProfilePaths$lambda$13$Type(firstNameOpt_0, resolveFunc_1, context_2){
  this.firstNameOpt_0 = firstNameOpt_0;
  this.resolveFunc_1 = resolveFunc_1;
  this.context_2 = context_2;
}

defineClass(2935, $wnd.Function, $intern_22, ProfilePaths$lambda$13$Type);
_.apply_0 = function apply_1228(arg0){
  return lambda$13_3(this.firstNameOpt_0, this.resolveFunc_1, this.context_2, arg0);
}
;
function ProfilePaths$lambda$15$Type(firstNameOpt_0, lastNameOpt_1, resolveFunc_2, context_3){
  this.firstNameOpt_0 = firstNameOpt_0;
  this.lastNameOpt_1 = lastNameOpt_1;
  this.resolveFunc_2 = resolveFunc_2;
  this.context_3 = context_3;
}

defineClass(2937, $wnd.Function, $intern_22, ProfilePaths$lambda$15$Type);
_.apply_0 = function apply_1229(arg0){
  return lambda$15_1(this.firstNameOpt_0, this.lastNameOpt_1, this.resolveFunc_2, this.context_3, arg0);
}
;
function ProfilePaths$lambda$17$Type(bioOpt_0, firstNameOpt_1, lastNameOpt_2, resolveFunc_3, context_4){
  this.bioOpt_0 = bioOpt_0;
  this.firstNameOpt_1 = firstNameOpt_1;
  this.lastNameOpt_2 = lastNameOpt_2;
  this.resolveFunc_3 = resolveFunc_3;
  this.context_4 = context_4;
}

defineClass(2939, $wnd.Function, $intern_22, ProfilePaths$lambda$17$Type);
_.apply_0 = function apply_1230(arg0){
  return lambda$17_2(this.bioOpt_0, this.firstNameOpt_1, this.lastNameOpt_2, this.resolveFunc_3, this.context_4, arg0);
}
;
function ProfilePaths$lambda$19$Type(bioOpt_0, firstNameOpt_1, lastNameOpt_2, phoneOpt_3, resolveFunc_4, context_5){
  this.bioOpt_0 = bioOpt_0;
  this.firstNameOpt_1 = firstNameOpt_1;
  this.lastNameOpt_2 = lastNameOpt_2;
  this.phoneOpt_3 = phoneOpt_3;
  this.resolveFunc_4 = resolveFunc_4;
  this.context_5 = context_5;
}

defineClass(2941, $wnd.Function, $intern_22, ProfilePaths$lambda$19$Type);
_.apply_0 = function apply_1231(arg0){
  return lambda$19_3(this.bioOpt_0, this.firstNameOpt_1, this.lastNameOpt_2, this.phoneOpt_3, this.resolveFunc_4, this.context_5, arg0);
}
;
function ProfilePaths$lambda$20$Type(){
}

defineClass(2942, $wnd.Function, $intern_22, ProfilePaths$lambda$20$Type);
_.apply_0 = function apply_1232(arg0){
  return $clinit_ProfilePaths() , castTo(arg0, 11);
}
;
function ProfilePaths$lambda$21$Type(bioOpt_0, firstNameOpt_1, lastNameOpt_2, phoneOpt_3, emailOpt_4, resolveFunc_5, context_6){
  this.bioOpt_0 = bioOpt_0;
  this.firstNameOpt_1 = firstNameOpt_1;
  this.lastNameOpt_2 = lastNameOpt_2;
  this.phoneOpt_3 = phoneOpt_3;
  this.emailOpt_4 = emailOpt_4;
  this.resolveFunc_5 = resolveFunc_5;
  this.context_6 = context_6;
}

defineClass(2943, $wnd.Function, $intern_22, ProfilePaths$lambda$21$Type);
_.apply_0 = function apply_1233(arg0){
  return lambda$21_0(this.bioOpt_0, this.firstNameOpt_1, this.lastNameOpt_2, this.phoneOpt_3, this.emailOpt_4, this.resolveFunc_5, this.context_6, arg0);
}
;
function ProfilePaths$lambda$23$Type(imageOpt_0, bioOpt_1, firstNameOpt_2, lastNameOpt_3, phoneOpt_4, emailOpt_5, resolveFunc_6, context_7){
  this.imageOpt_0 = imageOpt_0;
  this.bioOpt_1 = bioOpt_1;
  this.firstNameOpt_2 = firstNameOpt_2;
  this.lastNameOpt_3 = lastNameOpt_3;
  this.phoneOpt_4 = phoneOpt_4;
  this.emailOpt_5 = emailOpt_5;
  this.resolveFunc_6 = resolveFunc_6;
  this.context_7 = context_7;
}

defineClass(2945, $wnd.Function, $intern_22, ProfilePaths$lambda$23$Type);
_.apply_0 = function apply_1234(arg0){
  return lambda$23_2(this.imageOpt_0, this.bioOpt_1, this.firstNameOpt_2, this.lastNameOpt_3, this.phoneOpt_4, this.emailOpt_5, this.resolveFunc_6, this.context_7, arg0);
}
;
function ProfilePaths$lambda$25$Type(imageOpt_0, bioOpt_1, statusOpt_2, firstNameOpt_3, lastNameOpt_4, phoneOpt_5, emailOpt_6){
  this.imageOpt_0 = imageOpt_0;
  this.bioOpt_1 = bioOpt_1;
  this.statusOpt_2 = statusOpt_2;
  this.firstNameOpt_3 = firstNameOpt_3;
  this.lastNameOpt_4 = lastNameOpt_4;
  this.phoneOpt_5 = phoneOpt_5;
  this.emailOpt_6 = emailOpt_6;
}

defineClass(2947, $wnd.Function, $intern_22, ProfilePaths$lambda$25$Type);
_.apply_0 = function apply_1235(arg0){
  return $clinit_ProfilePaths() , new Profile(this.imageOpt_0, this.bioOpt_1, this.statusOpt_2, this.firstNameOpt_3, this.lastNameOpt_4, this.phoneOpt_5, this.emailOpt_6, castTo(arg0, 12));
}
;
function ProfilePaths$lambda$26$Type(){
}

defineClass(2907, $wnd.Function, $intern_22, ProfilePaths$lambda$26$Type);
_.apply_0 = function apply_1236(arg0){
  return $clinit_ProfilePaths() , castTo(arg0, 11);
}
;
function ProfilePaths$lambda$27$Type(){
}

defineClass(2908, $wnd.Function, $intern_22, ProfilePaths$lambda$27$Type);
_.apply_0 = function apply_1237(arg0){
  return $clinit_ProfilePaths() , castTo(arg0, 11);
}
;
function ProfilePaths$lambda$28$Type(){
}

defineClass(2909, $wnd.Function, $intern_22, ProfilePaths$lambda$28$Type);
_.apply_0 = function apply_1238(arg0){
  return $clinit_ProfilePaths() , castTo(arg0, 11);
}
;
function ProfilePaths$lambda$29$Type(){
}

defineClass(2910, $wnd.Function, $intern_22, ProfilePaths$lambda$29$Type);
_.apply_0 = function apply_1239(arg0){
  return $clinit_ProfilePaths() , castTo(arg0, 11);
}
;
function ProfilePaths$lambda$3$Type(p_0, user_1){
  this.p_0 = p_0;
  this.user_1 = user_1;
}

defineClass(2903, $wnd.Function, $intern_22, ProfilePaths$lambda$3$Type);
_.apply_0 = function apply_1240(arg0){
  return lambda$3_7(this.p_0, this.user_1, arg0);
}
;
function ProfilePaths$lambda$4$Type(p_0, raw_1, user_2){
  this.p_0 = p_0;
  this.raw_1 = raw_1;
  this.user_2 = user_2;
}

defineClass(2904, $wnd.Function, $intern_22, ProfilePaths$lambda$4$Type);
_.apply_0 = function apply_1241(arg0){
  return lambda$4_5(this.p_0, this.raw_1, this.user_2, arg0);
}
;
function ProfilePaths$lambda$44$Type(user_0){
  this.user_0 = user_0;
}

defineClass(2925, $wnd.Function, $intern_22, ProfilePaths$lambda$44$Type);
_.apply_0 = function apply_1242(arg0){
  return lambda$44_0(this.user_0, arg0);
}
;
function ProfilePaths$lambda$45$Type(){
}

defineClass(2948, $wnd.Function, $intern_22, ProfilePaths$lambda$45$Type);
_.apply_0 = function apply_1243(arg0){
  return $clinit_ProfilePaths() , $clinit_Boolean() , true;
}
;
function ProfilePaths$lambda$46$Type(user_0){
  this.user_0 = user_0;
}

defineClass(2926, $wnd.Function, $intern_22, ProfilePaths$lambda$46$Type);
_.apply_0 = function apply_1244(arg0){
  return lambda$46_2(this.user_0, arg0);
}
;
function ProfilePaths$lambda$47$Type(user_0){
  this.user_0 = user_0;
}

defineClass(2949, $wnd.Function, $intern_22, ProfilePaths$lambda$47$Type);
_.apply_0 = function apply_1245(arg0){
  return lambda$47_0(this.user_0, arg0);
}
;
function ProfilePaths$lambda$49$Type(){
}

defineClass(2951, $wnd.Function, $intern_22, ProfilePaths$lambda$49$Type);
_.apply_0 = function apply_1246(arg0){
  return $clinit_ProfilePaths() , $thenApply(castTo(arg0, 6), makeLambdaFunction(ProfilePaths$23methodref$of$Type.prototype.apply_0, ProfilePaths$23methodref$of$Type, []));
}
;
function ProfilePaths$lambda$5$Type(){
}

defineClass(2930, $wnd.Function, {}, ProfilePaths$lambda$5$Type);
_.accept_5 = function accept_114(arg0){
  $clinit_ProfilePaths();
}
;
function ProfilePaths$lambda$51$Type(user_0){
  this.user_0 = user_0;
}

defineClass(2927, $wnd.Function, $intern_22, ProfilePaths$lambda$51$Type);
_.apply_0 = function apply_1247(arg0){
  return lambda$51_0(this.user_0, arg0);
}
;
function ProfilePaths$lambda$52$Type(user_0, profileEntry_1){
  this.user_0 = user_0;
  this.profileEntry_1 = profileEntry_1;
}

defineClass(2952, $wnd.Function, $intern_22, ProfilePaths$lambda$52$Type);
_.apply_0 = function apply_1248(arg0){
  return lambda$52_1(this.user_0, this.profileEntry_1, arg0);
}
;
function ProfilePaths$lambda$53$Type(user_0){
  this.user_0 = user_0;
}

defineClass(2953, $wnd.Function, $intern_22, ProfilePaths$lambda$53$Type);
_.apply_0 = function apply_1249(arg0){
  return lambda$53_1(this.user_0, arg0);
}
;
function ProfilePaths$lambda$55$Type(){
}

defineClass(2955, $wnd.Function, $intern_22, ProfilePaths$lambda$55$Type);
_.apply_0 = function apply_1250(arg0){
  return $clinit_ProfilePaths() , $thenApply(castTo(arg0, 6), makeLambdaFunction(ProfilePaths$25methodref$of$Type.prototype.apply_0, ProfilePaths$25methodref$of$Type, []));
}
;
function ProfilePaths$lambda$57$Type(){
}

defineClass(2928, $wnd.Function, $intern_22, ProfilePaths$lambda$57$Type);
_.apply_0 = function apply_1251(arg0){
  return $clinit_ProfilePaths() , $clinit_Boolean() , castTo(arg0, 12).ref != null?true:false;
}
;
function ProfilePaths$lambda$6$Type(){
}

defineClass(2905, $wnd.Function, $intern_22, ProfilePaths$lambda$6$Type);
_.apply_0 = function apply_1252(arg0){
  return $clinit_ProfilePaths() , $clinit_Boolean() , true;
}
;
function ProfilePaths$lambda$7$Type(context_1){
  this.context_1 = context_1;
}

defineClass(2906, $wnd.Function, $intern_22, ProfilePaths$lambda$7$Type);
_.apply_0 = function apply_1253(arg0){
  return lambda$7_6(this.context_1, arg0);
}
;
function $apply_9(this$static, arg0){
  return lambda$8_5(this$static.files_0, arg0);
}

function ProfilePaths$lambda$8$Type(files_0){
  this.files_0 = files_0;
}

defineClass(2931, $wnd.Function, $intern_22, ProfilePaths$lambda$8$Type);
_.apply_0 = function apply_1254(arg0){
  return $apply_9(this, arg0);
}
;
function ProfilePaths$lambda$9$Type(filePath_0){
  this.filePath_0 = filePath_0;
}

defineClass(914, 1, {}, ProfilePaths$lambda$9$Type);
_.test_0 = function test_31(arg0){
  return lambda$9_4(this.filePath_0, arg0);
}
;
var Lpeergos_shared_user_ProfilePaths$lambda$9$Type_2_classLit = createForClass('peergos.shared.user', 'ProfilePaths/lambda$9$Type', 914);
function $clinit_SecretGenerationAlgorithm(){
  $clinit_SecretGenerationAlgorithm = emptyMethod;
  byValue_9 = new HashMap;
}

function fromCbor_90(cbor){
  var map_0, memoryCost, cpuCost, parallelsm, outputBytes, extraSalt;
  $clinit_SecretGenerationAlgorithm();
  var type_0;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Incorrect cbor type for SecretGenerationAlgorithm: ' + cbor));
  type_0 = byValue_10(toInt_0(castTo(castTo($get_0(castTo(cbor, 18).values_0, new CborObject$CborString('type')), 7), 29).value_0));
  if (type_0 == ($clinit_SecretGenerationAlgorithm$Type() , Scrypt))
    return map_0 = castTo(cbor, 18) , memoryCost = toInt_0(castTo(castTo($get_0(map_0.values_0, new CborObject$CborString('m')), 7), 29).value_0) , cpuCost = toInt_0(castTo(castTo($get_0(map_0.values_0, new CborObject$CborString('c')), 7), 29).value_0) , parallelsm = toInt_0(castTo(castTo($get_0(map_0.values_0, new CborObject$CborString('p')), 7), 29).value_0) , outputBytes = toInt_0(castTo(castTo($get_0(map_0.values_0, new CborObject$CborString('o')), 7), 29).value_0) , extraSalt = $getString(map_0, 's', '') , new ScryptGenerator(memoryCost, cpuCost, parallelsm, outputBytes, extraSalt);
  if (type_0 == Random_1)
    return new RandomSecretType;
  throw toJs(new IllegalStateException_0('Unimplemented UserGeneration type algorithm: ' + type_0));
}

function withNewSalt(alg, rnd){
  $clinit_SecretGenerationAlgorithm();
  var scrypt;
  if (instanceOf(alg, 255)) {
    scrypt = castTo(alg, 255);
    return new ScryptGenerator(scrypt.memoryCost, scrypt.cpuCost, scrypt.parallelism, scrypt.outputBytes, bytesToHex($randomBytes(rnd, 32)));
  }
  return alg;
}

var byValue_9;
function $toCbor_81(){
  var props, transformed;
  props = new TreeMap;
  $put_6(props, 'type', new CborObject$CborLong(($clinit_SecretGenerationAlgorithm$Type() , Random_1).value));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(props), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function RandomSecretType(){
}

defineClass(1140, 1, {7:1, 441:1}, RandomSecretType);
_.serialize = function serialize_111(){
  return $toByteArray_2($toCbor_81());
}
;
_.generateBoxerAndIdentity = function generateBoxerAndIdentity(){
  return false;
}
;
_.getExtraSalt = function getExtraSalt(){
  return '';
}
;
_.getType = function getType(){
  return $clinit_SecretGenerationAlgorithm$Type() , Random_1;
}
;
_.toCbor = function toCbor_109(){
  return $toCbor_81();
}
;
_.withoutBoxerOrIdentity = function withoutBoxerOrIdentity(){
  return this;
}
;
var Lpeergos_shared_user_RandomSecretType_2_classLit = createForClass('peergos.shared.user', 'RandomSecretType', 1140);
function RetrievedEntryPoint(entry, path, file){
  this.entry = entry;
  this.path = path;
  this.file = file;
}

defineClass(399, 1, {399:1}, RetrievedEntryPoint);
var Lpeergos_shared_user_RetrievedEntryPoint_2_classLit = createForClass('peergos.shared.user', 'RetrievedEntryPoint', 399);
function $toCbor_82(this$static){
  var props, transformed;
  props = new TreeMap;
  $put_6(props, 'type', new CborObject$CborLong(($clinit_SecretGenerationAlgorithm$Type() , Scrypt).value));
  $put_6(props, 'm', new CborObject$CborLong(this$static.memoryCost));
  $put_6(props, 'c', new CborObject$CborLong(this$static.cpuCost));
  $put_6(props, 'p', new CborObject$CborLong(this$static.parallelism));
  $put_6(props, 'o', new CborObject$CborLong(this$static.outputBytes));
  $put_6(props, 's', new CborObject$CborString(this$static.extraSalt));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(props), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function ScryptGenerator(memoryCost, cpuCost, parallelism, outputBytes, extraSalt){
  if (memoryCost < 17)
    throw toJs(new IllegalStateException_0('Scrypt memory cost must be >= 17'));
  this.memoryCost = memoryCost;
  this.cpuCost = cpuCost;
  this.parallelism = parallelism;
  this.outputBytes = outputBytes;
  this.extraSalt = extraSalt;
}

defineClass(255, 1, {7:1, 255:1, 441:1}, ScryptGenerator);
_.serialize = function serialize_112(){
  return $toByteArray_2($toCbor_82(this));
}
;
_.generateBoxerAndIdentity = function generateBoxerAndIdentity_0(){
  return this.outputBytes == 96;
}
;
_.getExtraSalt = function getExtraSalt_0(){
  return this.extraSalt;
}
;
_.getType = function getType_0(){
  return $clinit_SecretGenerationAlgorithm$Type() , Scrypt;
}
;
_.toCbor = function toCbor_110(){
  return $toCbor_82(this);
}
;
_.withoutBoxerOrIdentity = function withoutBoxerOrIdentity_0(){
  return new ScryptGenerator(this.memoryCost, this.cpuCost, this.parallelism, 64, this.extraSalt);
}
;
_.cpuCost = 0;
_.memoryCost = 0;
_.outputBytes = 0;
_.parallelism = 0;
var Lpeergos_shared_user_ScryptGenerator_2_classLit = createForClass('peergos.shared.user', 'ScryptGenerator', 255);
function $clinit_SecretGenerationAlgorithm$Type(){
  $clinit_SecretGenerationAlgorithm$Type = emptyMethod;
  Random_1 = new SecretGenerationAlgorithm$Type('Random', 0, 0);
  Scrypt = new SecretGenerationAlgorithm$Type('Scrypt', 1, 1);
}

function SecretGenerationAlgorithm$Type(enum$name, enum$ordinal, value_0){
  Enum.call(this, enum$name, enum$ordinal);
  this.value = value_0;
  $put(($clinit_SecretGenerationAlgorithm() , byValue_9), valueOf_1(value_0), this);
}

function byValue_10(val){
  $clinit_SecretGenerationAlgorithm$Type();
  if (!$containsKey(($clinit_SecretGenerationAlgorithm() , byValue_9), valueOf_1(val)))
    throw toJs(new IllegalStateException_0(($clinit_ArrayOps() , 'Unknown User Generation Algorithm type: ' + HEX[val & 255])));
  return castTo($get(byValue_9, valueOf_1(val)), 266);
}

function valueOf_14(name_0){
  $clinit_SecretGenerationAlgorithm$Type();
  return valueOf_0(($clinit_SecretGenerationAlgorithm$Type$Map() , $MAP_5), name_0);
}

function values_17(){
  $clinit_SecretGenerationAlgorithm$Type();
  return stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_user_SecretGenerationAlgorithm$Type_2_classLit, 1), $intern_33, 266, 0, [Random_1, Scrypt]);
}

defineClass(266, 52, {4:1, 57:1, 52:1, 266:1}, SecretGenerationAlgorithm$Type);
_.value = 0;
var Random_1, Scrypt;
var Lpeergos_shared_user_SecretGenerationAlgorithm$Type_2_classLit = createForEnum('peergos.shared.user', 'SecretGenerationAlgorithm/Type', 266, values_17);
function $clinit_SecretGenerationAlgorithm$Type$Map(){
  $clinit_SecretGenerationAlgorithm$Type$Map = emptyMethod;
  $MAP_5 = createValueOfMap(($clinit_SecretGenerationAlgorithm$Type() , stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_user_SecretGenerationAlgorithm$Type_2_classLit, 1), $intern_33, 266, 0, [Random_1, Scrypt])));
}

var $MAP_5;
function $compareTo_18(this$static, other){
  return compare_5(this$static.latestEpochMillis, other.latestEpochMillis);
}

function ServerConversation(messages){
  var lastMessage, latest, message, message$iterator;
  this.messages = messages;
  latest = 0;
  for (message$iterator = messages.iterator(); message$iterator.hasNext_0();) {
    message = castTo(message$iterator.next_1(), 187);
    gt(message.sentEpochMillis, latest) && (latest = message.sentEpochMillis);
  }
  lastMessage = castTo(messages.getAtIndex(messages.size() - 1), 187);
  !lastMessage.isDismissed && lastMessage.type != ($clinit_ServerMessage$Type() , FromUser);
  this.latestEpochMillis = latest;
}

function combine(all){
  var conv, lookup, msg, msg$iterator, res;
  lookup = new HashMap;
  res = new ArrayList;
  for (msg$iterator = all.iterator(); msg$iterator.hasNext_0();) {
    msg = castTo(msg$iterator.next_1(), 187);
    if (msg.replyToId.ref != null) {
      $putIfAbsent(lookup, castTo($get_6(msg.replyToId), 69), new ArrayList);
      conv = castTo($get(lookup, $get_6(msg.replyToId)), 17);
      $put(lookup, valueOf_2(msg.id_0), conv);
    }
     else {
      conv = castTo($computeIfAbsent(lookup, valueOf_2(msg.id_0), makeLambdaFunction(ServerConversation$lambda$0$Type.prototype.apply_0, ServerConversation$lambda$0$Type, [])), 17);
    }
    conv.add(msg);
  }
  $forEach(new HashSet_1(new AbstractMap$2(lookup)), new ServerConversation$lambda$1$Type(res));
  $clinit_Collections();
  sort_0(res.array, res.array.length, null);
  return res;
}

defineClass(430, 1, {57:1, 430:1}, ServerConversation);
_.compareTo_0 = function compareTo_19(other){
  return $compareTo_18(this, castTo(other, 430));
}
;
_.latestEpochMillis = 0;
var Lpeergos_shared_user_ServerConversation_2_classLit = createForClass('peergos.shared.user', 'ServerConversation', 430);
function ServerConversation$lambda$0$Type(){
}

defineClass(3446, $wnd.Function, $intern_22, ServerConversation$lambda$0$Type);
_.apply_0 = function apply_1255(arg0){
  return new ArrayList;
}
;
function ServerConversation$lambda$1$Type(res_0){
  this.res_0 = res_0;
}

defineClass(1103, 1, $intern_32, ServerConversation$lambda$1$Type);
_.accept = function accept_115(arg0){
  $add(this.res_0, new ServerConversation(castTo(arg0, 17)));
}
;
_.andThen = function andThen_61(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_ServerConversation$lambda$1$Type_2_classLit = createForClass('peergos.shared.user', 'ServerConversation/lambda$1$Type', 1103);
function $clinit_ServerMessage(){
  $clinit_ServerMessage = emptyMethod;
  byValue_11 = new HashMap;
}

function $compareTo_19(this$static, other){
  return compare_5(this$static.sentEpochMillis, other.sentEpochMillis);
}

function $toCbor_83(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'id', new CborObject$CborLong(this$static.id_0));
  $put_6(state, 's', new CborObject$CborLong(this$static.sentEpochMillis));
  $put_6(state, 't', new CborObject$CborLong(this$static.type.value));
  $put_6(state, 'b', new CborObject$CborString(this$static.contents));
  $put_6(state, 'd', new CborObject$CborBoolean(this$static.isDismissed));
  $ifPresent(this$static.replyToId, new ServerMessage$lambda$1$Type(state));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function ServerMessage(id_0, type_0, sentEpochMillis, contents, replyToId, isDismissed){
  $clinit_ServerMessage();
  if (contents.length > $intern_15)
    throw toJs(new IllegalStateException_0('Message body is longer than maximum allowed size of 4096 characters!'));
  this.id_0 = id_0;
  this.type = type_0;
  this.sentEpochMillis = sentEpochMillis;
  this.contents = contents;
  this.replyToId = replyToId;
  this.isDismissed = isDismissed;
}

function buildUserMessage(body_0){
  $clinit_ServerMessage();
  return new ServerMessage(-1, ($clinit_ServerMessage$Type() , FromUser), ($clinit_System() , fromDouble_0(Date.now())), body_0, ($clinit_Optional() , $clinit_Optional() , EMPTY), false);
}

function fromCbor_91(cbor){
  $clinit_ServerMessage();
  var contents, id_0, isDismissed, m, replyToId, sentMillis, type_0, val;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor for ServerMessage! ' + cbor));
  m = castTo(cbor, 18);
  id_0 = castTo(castTo($get_0(m.values_0, new CborObject$CborString('id')), 7), 29).value_0;
  sentMillis = castTo(castTo($get_0(m.values_0, new CborObject$CborString('s')), 7), 29).value_0;
  type_0 = byValue_12(toInt_0(castTo(castTo($get_0(m.values_0, new CborObject$CborString('t')), 7), 29).value_0));
  contents = castTo(castTo($get_0(m.values_0, new CborObject$CborString('b')), 7), 13).value_0;
  isDismissed = (val = castTo(castTo($get_0(m.values_0, new CborObject$CborString('d')), 7), 63) , !!val && val.value_0);
  replyToId = $map(ofNullable(castTo(castTo($get_0(m.values_0, new CborObject$CborString('r')), 7), 29)), makeLambdaFunction(CborObject$CborMap$lambda$6$Type.prototype.apply_0, CborObject$CborMap$lambda$6$Type, []));
  return new ServerMessage(id_0, type_0, sentMillis, contents, replyToId, isDismissed);
}

defineClass(187, 1, {57:1, 7:1, 187:1}, ServerMessage);
_.compareTo_0 = function compareTo_20(other){
  return $compareTo_19(this, castTo(other, 187));
}
;
_.serialize = function serialize_113(){
  return $toByteArray_2($toCbor_83(this));
}
;
_.compareTo = function compareTo_21(other){
  return $compareTo_19(this, other);
}
;
_.getAuthor = function getAuthor(){
  return $name(this.type);
}
;
_.getContents = function getContents(){
  return this.contents;
}
;
_.getPreviousMessageId = function getPreviousMessageId(){
  return this.replyToId.ref != null?'' + toString_4(castTo($get_6(this.replyToId), 69).value_0):null;
}
;
_.getSendTime = function getSendTime(){
  return ofEpochSecond(div(this.sentEpochMillis, $intern_49), toInt_0(mod_0(this.sentEpochMillis, $intern_49)) * $intern_49, ($clinit_ZoneOffset() , UTC_0));
}
;
_.id = function id_12(){
  return '' + toString_4(this.id_0);
}
;
_.summary = function summary(){
  return '### ' + toString_4(this.id_0) + ': ' + $name(this.type) + ' ' + $toString_2(ofEpochSecond(div(this.sentEpochMillis, $intern_49), toInt_0(mod_0(this.sentEpochMillis, $intern_49)) * $intern_49, ($clinit_ZoneOffset() , UTC_0))) + ' dismissed:' + this.isDismissed + castToString($orElse($map(this.replyToId, makeLambdaFunction(ServerMessage$lambda$0$Type.prototype.apply_0, ServerMessage$lambda$0$Type, [])), ''));
}
;
_.toCbor = function toCbor_111(){
  return $toCbor_83(this);
}
;
_.id_0 = 0;
_.isDismissed = false;
_.sentEpochMillis = 0;
var MAX_CONTENT_SIZE = $intern_15, byValue_11;
var Lpeergos_shared_user_ServerMessage_2_classLit = createForClass('peergos.shared.user', 'ServerMessage', 187);
function $clinit_ServerMessage$Type(){
  $clinit_ServerMessage$Type = emptyMethod;
  FromServer = new ServerMessage$Type('FromServer', 0, 1);
  FromUser = new ServerMessage$Type('FromUser', 1, 2);
  Dismiss = new ServerMessage$Type('Dismiss', 2, 3);
}

function ServerMessage$Type(enum$name, enum$ordinal, value_0){
  Enum.call(this, enum$name, enum$ordinal);
  this.value = value_0;
  $put(($clinit_ServerMessage() , byValue_11), valueOf_1(value_0), this);
}

function byValue_12(val){
  $clinit_ServerMessage$Type();
  if (!$containsKey(($clinit_ServerMessage() , byValue_11), valueOf_1(val)))
    throw toJs(new IllegalStateException_0('Unknown server message type: ' + val));
  return castTo($get(byValue_11, valueOf_1(val)), 242);
}

function valueOf_15(name_0){
  $clinit_ServerMessage$Type();
  return valueOf_0(($clinit_ServerMessage$Type$Map() , $MAP_6), name_0);
}

function values_18(){
  $clinit_ServerMessage$Type();
  return stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_user_ServerMessage$Type_2_classLit, 1), $intern_33, 242, 0, [FromServer, FromUser, Dismiss]);
}

defineClass(242, 52, {4:1, 57:1, 52:1, 242:1}, ServerMessage$Type);
_.value = 0;
var Dismiss, FromServer, FromUser;
var Lpeergos_shared_user_ServerMessage$Type_2_classLit = createForEnum('peergos.shared.user', 'ServerMessage/Type', 242, values_18);
function $clinit_ServerMessage$Type$Map(){
  $clinit_ServerMessage$Type$Map = emptyMethod;
  $MAP_6 = createValueOfMap(($clinit_ServerMessage$Type() , stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_user_ServerMessage$Type_2_classLit, 1), $intern_33, 242, 0, [FromServer, FromUser, Dismiss])));
}

var $MAP_6;
function ServerMessage$lambda$0$Type(){
}

defineClass(2322, $wnd.Function, $intern_22, ServerMessage$lambda$0$Type);
_.apply_0 = function apply_1256(arg0){
  return $clinit_ServerMessage() , ' <==' + castTo(arg0, 69);
}
;
function ServerMessage$lambda$1$Type(state_0){
  this.state_0 = state_0;
}

defineClass(802, 1, $intern_32, ServerMessage$lambda$1$Type);
_.accept = function accept_116(arg0){
  $clinit_ServerMessage();
  $put_6(this.state_0, 'r', new CborObject$CborLong(castTo(arg0, 69).value_0));
}
;
_.andThen = function andThen_62(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_ServerMessage$lambda$1$Type_2_classLit = createForClass('peergos.shared.user', 'ServerMessage/lambda$1$Type', 802);
function $getMessages_0(this$static, username, signer){
  var auth, req;
  req = new TimeLimitedClient$SignedRequest('peergos/v0/server-message/retrieve', ($clinit_System() , fromDouble_0(Date.now())));
  auth = $signMessage(signer, $toByteArray_2($toCbor_104(req)));
  return $thenApply($get_28(this$static.poster, 'peergos/v0/server-message/retrieve?username=' + username + '&auth=' + bytesToHex(auth), ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)), makeLambdaFunction(ServerMessager$HTTP$lambda$0$Type.prototype.apply_0, ServerMessager$HTTP$lambda$0$Type, []));
}

function $sendMessage_2(this$static, username, message, signer){
  var signedBody;
  return signedBody = $signMessage(signer, $toByteArray_2($toCbor_83(message))) , $thenApply($post_0(this$static.poster, 'peergos/v0/server-message/send?username=' + username, signedBody), makeLambdaFunction(ServerMessager$HTTP$lambda$2$Type.prototype.apply_0, ServerMessager$HTTP$lambda$2$Type, []));
}

function ServerMessager$HTTP(poster){
  this.poster = poster;
}

defineClass(459, 1, {}, ServerMessager$HTTP);
var Lpeergos_shared_user_ServerMessager$HTTP_2_classLit = createForClass('peergos.shared.user', 'ServerMessager/HTTP', 459);
function ServerMessager$HTTP$0methodref$fromCbor$Type(){
}

defineClass(1517, $wnd.Function, $intern_22, ServerMessager$HTTP$0methodref$fromCbor$Type);
_.apply_0 = function apply_1257(arg0){
  return fromCbor_91(castTo(arg0, 7));
}
;
function ServerMessager$HTTP$lambda$0$Type(){
}

defineClass(1515, $wnd.Function, $intern_22, ServerMessager$HTTP$lambda$0$Type);
_.apply_0 = function apply_1258(arg0){
  return castTo($collect_0($map_0(castTo(fromByteArray(castTo(arg0, 11)), 21).value_0.stream(), makeLambdaFunction(ServerMessager$HTTP$0methodref$fromCbor$Type.prototype.apply_0, ServerMessager$HTTP$0methodref$fromCbor$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
}
;
function ServerMessager$HTTP$lambda$2$Type(){
}

defineClass(1516, $wnd.Function, $intern_22, ServerMessager$HTTP$lambda$2$Type);
_.apply_0 = function apply_1259(arg0){
  return $clinit_Boolean() , castTo(deserialize(new CborDecoder(new ByteArrayInputStream(castTo(arg0, 11))), castTo(arg0, 11).length), 63).value_0?true:false;
}
;
function $clinit_SharedWithCache(){
  $clinit_SharedWithCache = emptyMethod;
  CACHE_BASE = get_176('.capabilitycache', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['outbound']));
}

function $addSharedWith(this$static, access, p, names, in_0, committer, network){
  return $applyAndCommit_0(this$static, p, makeLambdaFunction(SharedWithCache$lambda$94$Type.prototype.apply_0, SharedWithCache$lambda$94$Type, [access, p, names]), in_0, committer, network);
}

function $applyAndCommit_0(this$static, toFile, transform, in_0, committer, network){
  return $thenCompose($thenCompose($getUpdated_0(this$static.base, in_0, network), makeLambdaFunction(SharedWithCache$lambda$85$Type.prototype.apply_0, SharedWithCache$lambda$85$Type, [this$static, toFile, network, in_0, committer])), makeLambdaFunction(SharedWithCache$lambda$86$Type.prototype.apply_0, SharedWithCache$lambda$86$Type, [this$static, transform, network, committer]));
}

function $applyIfPresentAndCommit(this$static, toFile, transform, in_0, committer, network){
  return $thenCompose($thenCompose($withWriter(in_0, $owner(this$static.base), this$static.base.pointer.capability.writer, network), makeLambdaFunction(SharedWithCache$lambda$88$Type.prototype.apply_0, SharedWithCache$lambda$88$Type, [this$static, network])), makeLambdaFunction(SharedWithCache$lambda$89$Type.prototype.apply_0, SharedWithCache$lambda$89$Type, [this$static, transform, network, committer, toFile]));
}

function $clearSharedWith(this$static, p, in_0, committer, network){
  return $applyIfPresentAndCommit(this$static, p, makeLambdaFunction(SharedWithCache$lambda$95$Type.prototype.apply_0, SharedWithCache$lambda$95$Type, [p]), in_0, committer, network);
}

function $getAllDescendantShares(this$static, start_0, s){
  return $thenCompose($thenCompose($getUpdated_0(this$static.base, $mergeAndOverwriteWith(this$static.base.version, s), this$static.network), makeLambdaFunction(SharedWithCache$lambda$58$Type.prototype.apply_0, SharedWithCache$lambda$58$Type, [this$static, start_0])), makeLambdaFunction(SharedWithCache$lambda$59$Type.prototype.apply_0, SharedWithCache$lambda$59$Type, [this$static, start_0]));
}

function $getAllDescendantSharesRecurse(this$static, f, toUs){
  var isNull;
  isNull = !f.pointer;
  if (!(isNull || f.pointer.fileAccess.isDirectory_0)) {
    if (!$equals_0(($ensureUnmodified(f) , f.props).name, 'sharedWith.cbor'))
      throw toJs(new IllegalStateException_0('Invalid shared with cache!'));
    return $thenApply(parseCacheFile(f, this$static.network, this$static.crypto_0), makeLambdaFunction(SharedWithCache$lambda$66$Type.prototype.apply_0, SharedWithCache$lambda$66$Type, [toUs]));
  }
  return $thenApply($thenCompose($getChildren_4(f, this$static.crypto_0.hasher, this$static.network), makeLambdaFunction(SharedWithCache$lambda$67$Type.prototype.apply_0, SharedWithCache$lambda$67$Type, [this$static, toUs])), makeLambdaFunction(SharedWithCache$lambda$69$Type.prototype.apply_0, SharedWithCache$lambda$69$Type, []));
}

function $getAllWriteShares(this$static, start_0, s){
  return $thenApply($thenCompose($thenCompose($getUpdated_0(this$static.base, $mergeAndOverwriteWith(this$static.base.version, s), this$static.network), makeLambdaFunction(SharedWithCache$lambda$58$Type.prototype.apply_0, SharedWithCache$lambda$58$Type, [this$static, start_0])), makeLambdaFunction(SharedWithCache$lambda$59$Type.prototype.apply_0, SharedWithCache$lambda$59$Type, [this$static, start_0])), makeLambdaFunction(SharedWithCache$lambda$78$Type.prototype.apply_0, SharedWithCache$lambda$78$Type, []));
}

function $getDirSharingState(this$static, dir_0, in_0){
  if (this$static.ourname == null) {
    return new CompletableFuture_0(new SharedWithState(new HashMap, new HashMap));
  }
  return $thenCompose($thenCompose($getUpdated_0(this$static.base, $mergeAndOverwriteWith(this$static.base.version, in_0), this$static.network), makeLambdaFunction(SharedWithCache$lambda$41$Type.prototype.apply_0, SharedWithCache$lambda$41$Type, [this$static, dir_0])), makeLambdaFunction(SharedWithCache$lambda$42$Type.prototype.apply_0, SharedWithCache$lambda$42$Type, [this$static]));
}

function $getSharedWith(this$static, p, v){
  return $thenApply($thenApply($retrieveWithFile(this$static, $getParent(p), v), makeLambdaFunction(SharedWithCache$lambda$0$Type.prototype.apply_0, SharedWithCache$lambda$0$Type, [])), makeLambdaFunction(SharedWithCache$lambda$83$Type.prototype.apply_0, SharedWithCache$lambda$83$Type, [p]));
}

function $lambda$2_21(this$static, dir_1, updated_1){
  return $getDescendentByPath(updated_1, $resolve($startsWith(dir_1.pathString, '/')?get_176(dir_1.pathString.substr(1), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])):dir_1, 'sharedWith.cbor').pathString, this$static.crypto_0.hasher, this$static.network);
}

function $lambda$3_20(this$static, opt_0){
  return opt_0.ref == null?new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY)):$thenApply($thenApply(parseCacheFile((checkCriticalElement(opt_0.ref != null) , castTo(opt_0.ref, 19)), this$static.network, this$static.crypto_0), makeLambdaFunction(SharedWithCache$lambda$4$Type.prototype.apply_0, SharedWithCache$lambda$4$Type, [opt_0])), makeLambdaFunction(SharedWithCache$0methodref$of$Type.prototype.apply_0, SharedWithCache$0methodref$of$Type, []));
}

function $lambda$41_1(this$static, dir_1, updated_1){
  return $getDescendentByPath(updated_1, $resolve(dir_1, 'sharedWith.cbor').pathString, this$static.crypto_0.hasher, this$static.network);
}

function $lambda$42_3(this$static, fopt_0){
  return castTo($orElse($map(fopt_0, makeLambdaFunction(SharedWithCache$lambda$43$Type.prototype.apply_0, SharedWithCache$lambda$43$Type, [this$static])), new CompletableFuture_0(new SharedWithState(new HashMap, new HashMap))), 87);
}

function $lambda$43_2(this$static, f_0){
  return parseCacheFile(f_0, this$static.network, this$static.crypto_0);
}

function $lambda$58_1(this$static, start_1, freshBase_1){
  return $getDescendentByPath(freshBase_1, toRelative($getParent(start_1)).pathString, this$static.crypto_0.hasher, this$static.network);
}

function $lambda$59(this$static, start_1, opt_1){
  var filename, parent_0;
  if (opt_1.ref == null)
    return new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_MAP));
  parent_0 = (checkCriticalElement(opt_1.ref != null) , castTo(opt_1.ref, 19));
  filename = $getName_0(start_1, $getNameCount(start_1) - 1).pathString;
  return $thenCompose($thenCompose($getChild_2(parent_0, 'sharedWith.cbor', this$static.network), makeLambdaFunction(SharedWithCache$lambda$60$Type.prototype.apply_0, SharedWithCache$lambda$60$Type, [this$static, start_1, filename])), makeLambdaFunction(SharedWithCache$lambda$63$Type.prototype.apply_0, SharedWithCache$lambda$63$Type, [this$static, start_1, parent_0, filename]));
}

function $lambda$60_1(this$static, start_1, filename_2, fopt_2){
  return fopt_2.ref == null?new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)):$thenApply(parseCacheFile((checkCriticalElement(fopt_2.ref != null) , castTo(fopt_2.ref, 19)), this$static.network, this$static.crypto_0), makeLambdaFunction(SharedWithCache$lambda$61$Type.prototype.apply_0, SharedWithCache$lambda$61$Type, [start_1, filename_2]));
}

function $lambda$63_0(this$static, start_1, parent_2, filename_3, m_3){
  return $thenCompose($getChild_2(parent_2, filename_3, this$static.network), makeLambdaFunction(SharedWithCache$lambda$64$Type.prototype.apply_0, SharedWithCache$lambda$64$Type, [this$static, m_3, start_1]));
}

function $lambda$64_1(this$static, m_1, start_2, copt_2){
  return copt_2.ref == null?new CompletableFuture_0(m_1):$thenApply($getAllDescendantSharesRecurse(this$static, (checkCriticalElement(copt_2.ref != null) , castTo(copt_2.ref, 19)), start_2), makeLambdaFunction(SharedWithCache$lambda$65$Type.prototype.apply_0, SharedWithCache$lambda$65$Type, [m_1]));
}

function $lambda$65_0(m_1, d_1){
  var res;
  return res = new HashMap_1(d_1) , $putAll(res, m_1) , res;
}

function $lambda$67_0(this$static, toUs_1, children_1){
  return combineAll(castTo($collect_0($map_0(children_1.stream(), makeLambdaFunction(SharedWithCache$lambda$68$Type.prototype.apply_0, SharedWithCache$lambda$68$Type, [this$static, toUs_1])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 54));
}

function $lambda$68_1(this$static, toUs_1, c_1){
  return $getAllDescendantSharesRecurse(this$static, c_1, $resolve(toUs_1, ($ensureUnmodified(c_1) , c_1.props).name));
}

function $lambda$85_0(this$static, toFile_1, network_2, in_3, committer_4, updated_4){
  return retrieveWithFileOrCreate(updated_4, $getParent(toFile_1), network_2, this$static.crypto_0, in_3, committer_4);
}

function $lambda$86_1(this$static, transform_1, network_2, committer_3, p_3){
  var current, raw, source, updated;
  source = castTo(p_3.left, 19);
  current = castTo(p_3.right, 126);
  updated = castTo(transform_1(current), 126);
  if ($equals_23(current, updated))
    return new CompletableFuture_0(castTo(p_3.left, 19).version);
  raw = $toByteArray_2($toCbor_84(updated));
  return $overwriteFile_0(source, new AsyncReader$ArrayBacked(raw), raw.length, network_2, this$static.crypto_0, makeLambdaFunction(SharedWithCache$lambda$87$Type.prototype.accept_5, SharedWithCache$lambda$87$Type, []), source.version, committer_3);
}

function $lambda$88_1(this$static, network_1, v_1){
  return $getUpdated_0(this$static.base, v_1, network_1);
}

function $lambda$89_0(this$static, transform_1, network_2, committer_3, toFile_4, updated_4){
  return $thenCompose(retrieveWithFile(updated_4, $getParent(toFile_4), network_2, this$static.crypto_0, updated_4.version), makeLambdaFunction(SharedWithCache$lambda$90$Type.prototype.apply_0, SharedWithCache$lambda$90$Type, [this$static, updated_4, transform_1, network_2, committer_3]));
}

function $lambda$90(this$static, updated_1, transform_2, network_3, committer_4, popt_4){
  var current, modified, p, raw, source;
  if (popt_4.ref == null)
    return new CompletableFuture_0(updated_1.version);
  p = (checkCriticalElement(popt_4.ref != null) , castTo(popt_4.ref, 20));
  source = castTo(p.left, 19);
  current = castTo(p.right, 126);
  modified = lambda$95_1(transform_2.p_0, current);
  if ($equals_23(current, modified))
    return new CompletableFuture_0(castTo(p.left, 19).version);
  raw = $toByteArray_2($toCbor_84(modified));
  return $overwriteFile_0(source, new AsyncReader$ArrayBacked(raw), raw.length, network_3, this$static.crypto_0, makeLambdaFunction(SharedWithCache$lambda$91$Type.prototype.accept_5, SharedWithCache$lambda$91$Type, []), source.version, committer_4);
}

function $lambda$92_1(this$static, after_1, newFilename_2, initialFilename_3, in_4, committer_5, network_6, sharees_6){
  return $applyAndCommit_0(this$static, after_1, makeLambdaFunction(SharedWithCache$lambda$93$Type.prototype.apply_0, SharedWithCache$lambda$93$Type, [newFilename_2, sharees_6, initialFilename_3]), in_4, committer_5, network_6);
}

function $removeSharedWith(this$static, access, p, names, in_0, committer, network){
  return $applyAndCommit_0(this$static, p, makeLambdaFunction(SharedWithCache$lambda$96$Type.prototype.apply_0, SharedWithCache$lambda$96$Type, [access, p, names]), in_0, committer, network);
}

function $rename(this$static, initial, after, in_0, committer, network){
  var initialFilename, newFilename;
  if (!$equals_1($getParent(initial), $getParent(after)))
    throw toJs(new IllegalStateException_0('Not a valid rename!'));
  initialFilename = $getName_0(initial, $getNameCount(initial) - 1).pathString;
  newFilename = $getName_0(after, $getNameCount(after) - 1).pathString;
  return $thenCompose($thenApply($thenApply($retrieveWithFile(this$static, $getParent(initial), in_0), makeLambdaFunction(SharedWithCache$lambda$0$Type.prototype.apply_0, SharedWithCache$lambda$0$Type, [])), makeLambdaFunction(SharedWithCache$lambda$83$Type.prototype.apply_0, SharedWithCache$lambda$83$Type, [initial])), makeLambdaFunction(SharedWithCache$lambda$92$Type.prototype.apply_0, SharedWithCache$lambda$92$Type, [this$static, after, newFilename, initialFilename, in_0, committer, network]));
}

function $retrieveWithFile(this$static, dir_0, s){
  return $thenCompose($thenCompose($getUpdated_0(this$static.base, s, this$static.network), makeLambdaFunction(SharedWithCache$lambda$2$Type.prototype.apply_0, SharedWithCache$lambda$2$Type, [this$static, dir_0])), makeLambdaFunction(SharedWithCache$lambda$3$Type.prototype.apply_0, SharedWithCache$lambda$3$Type, [this$static]));
}

function SharedWithCache(base, ourname, network, crypto_0){
  $clinit_SharedWithCache();
  this.base = base;
  this.ourname = ourname;
  this.network = network;
  this.crypto_0 = crypto_0;
}

function addSharedWith(base, access, toFile, names, network, crypto_0, in_0, committer){
  return $thenCompose($thenCompose($thenCompose($withWriter(in_0, $owner(base), base.pointer.capability.writer, network), makeLambdaFunction(FileWrapper$lambda$3$Type.prototype.apply_0, FileWrapper$lambda$3$Type, [base, network])), makeLambdaFunction(SharedWithCache$lambda$6$Type.prototype.apply_0, SharedWithCache$lambda$6$Type, [toFile, network, crypto_0, in_0, committer])), makeLambdaFunction(SharedWithCache$lambda$7$Type.prototype.apply_0, SharedWithCache$lambda$7$Type, [access, toFile, names, network, crypto_0, committer]));
}

function getOrMkdir(parent_0, dirName, network, crypto_0, s, c){
  return $thenCompose($getChild_2(parent_0, dirName, network), makeLambdaFunction(SharedWithCache$lambda$36$Type.prototype.apply_0, SharedWithCache$lambda$36$Type, [dirName, crypto_0, network, parent_0, s, c]));
}

function getOrMkdirs(parent_0, remaining, network, crypto_0, s, c){
  if (remaining.isEmpty())
    return new CompletableFuture_0(parent_0);
  return $thenCompose(getOrMkdir(parent_0, castToString(remaining.getAtIndex(0)), network, crypto_0, s, c), makeLambdaFunction(SharedWithCache$lambda$40$Type.prototype.apply_0, SharedWithCache$lambda$40$Type, [remaining, network, crypto_0, c]));
}

function lambda$10_6(crypto_0, network_1, shared_2){
  $clinit_SharedWithCache();
  return $getChildren_4((checkCriticalElement(shared_2.ref != null) , castTo(shared_2.ref, 19)), crypto_0.hasher, network_1);
}

function lambda$11_7(cacheDirOpt_0, ourname_1, network_2, crypto_3, children_4){
  $clinit_SharedWithCache();
  return reduceAll(children_4, ($clinit_Boolean() , true), new SharedWithCache$lambda$12$Type(cacheDirOpt_0, ourname_1, network_2, crypto_3), new SharedWithCache$lambda$13$Type);
}

function lambda$12_3(cacheDirOpt_0, ourname_1, network_2, crypto_3, friendDirectory_5){
  $clinit_SharedWithCache();
  return $thenApply($thenCompose($thenCompose($thenCompose($getValue_0(network_2.synchronizer, $owner(friendDirectory_5), friendDirectory_5.pointer.capability.writer), makeLambdaFunction(FileWrapper$lambda$2$Type.prototype.apply_0, FileWrapper$lambda$2$Type, [friendDirectory_5, network_2])), makeLambdaFunction(SharedWithCache$lambda$14$Type.prototype.apply_0, SharedWithCache$lambda$14$Type, [cacheDirOpt_0, ourname_1, network_2, crypto_3])), makeLambdaFunction(SharedWithCache$lambda$15$Type.prototype.apply_0, SharedWithCache$lambda$15$Type, [cacheDirOpt_0, friendDirectory_5, network_2, crypto_3, ourname_1])), makeLambdaFunction(SharedWithCache$lambda$24$Type.prototype.apply_0, SharedWithCache$lambda$24$Type, []));
}

function lambda$14_5(cacheDirOpt_0, ourname_1, network_2, crypto_3, updatedFriendDir_4){
  $clinit_SharedWithCache();
  return loadReadOnlyLinks((checkCriticalElement(cacheDirOpt_0.ref != null) , castTo(cacheDirOpt_0.ref, 19)), updatedFriendDir_4, ourname_1, network_2, crypto_3);
}

function lambda$15_2(cacheDirOpt_0, friendDirectory_1, network_2, crypto_3, ourname_4, readCaps_5){
  $clinit_SharedWithCache();
  return $applyComplexUpdate(network_2.synchronizer, $owner(friendDirectory_1), $signingPair(friendDirectory_1), new SharedWithCache$lambda$16$Type(cacheDirOpt_0, friendDirectory_1, network_2, crypto_3, ourname_4, readCaps_5), new WriteSynchronizer$lambda$23$Type);
}

function lambda$16_5(cacheDirOpt_0, friendDirectory_1, network_2, crypto_3, ourname_4, readCaps_5, s_6, c_7){
  $clinit_SharedWithCache();
  return $thenCompose(reduceAll(readCaps_5.retrievedCapabilities, s_6, new SharedWithCache$lambda$17$Type(cacheDirOpt_0, friendDirectory_1, network_2, crypto_3, c_7), new SharedWithCache$lambda$18$Type), makeLambdaFunction(SharedWithCache$lambda$19$Type.prototype.apply_0, SharedWithCache$lambda$19$Type, [cacheDirOpt_0, ourname_4, network_2, crypto_3, friendDirectory_1, c_7]));
}

function lambda$17_3(cacheDirOpt_0, friendDirectory_1, network_2, crypto_3, c_4, v_5, rc_6){
  $clinit_SharedWithCache();
  return addSharedWith((checkCriticalElement(cacheDirOpt_0.ref != null) , castTo(cacheDirOpt_0.ref, 19)), ($clinit_SharedWithCache$Access() , READ), get_176(rc_6.path, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])), singleton(($ensureUnmodified(friendDirectory_1) , friendDirectory_1.props).name), network_2, crypto_3, v_5, c_4);
}

function lambda$19_4(cacheDirOpt_0, ourname_1, network_2, crypto_3, friendDirectory_4, c_5, s2_6){
  $clinit_SharedWithCache();
  return $thenCompose($thenCompose($thenCompose($getValue_0(network_2.synchronizer, $owner(friendDirectory_4), friendDirectory_4.pointer.capability.writer), makeLambdaFunction(FileWrapper$lambda$2$Type.prototype.apply_0, FileWrapper$lambda$2$Type, [friendDirectory_4, network_2])), makeLambdaFunction(SharedWithCache$lambda$20$Type.prototype.apply_0, SharedWithCache$lambda$20$Type, [cacheDirOpt_0, ourname_1, network_2, crypto_3])), makeLambdaFunction(SharedWithCache$lambda$21$Type.prototype.apply_0, SharedWithCache$lambda$21$Type, [cacheDirOpt_0, friendDirectory_4, network_2, crypto_3, c_5, s2_6]));
}

function lambda$20_2(cacheDirOpt_0, ourname_1, network_2, crypto_3, updatedFriendDir_4){
  $clinit_SharedWithCache();
  return loadWriteableLinks((checkCriticalElement(cacheDirOpt_0.ref != null) , castTo(cacheDirOpt_0.ref, 19)), updatedFriendDir_4, ourname_1, network_2, crypto_3);
}

function lambda$21_1(cacheDirOpt_0, friendDirectory_1, network_2, crypto_3, c_4, s2_5, writeCaps_6){
  $clinit_SharedWithCache();
  return reduceAll(writeCaps_6.retrievedCapabilities, s2_5, new SharedWithCache$lambda$22$Type(cacheDirOpt_0, friendDirectory_1, network_2, crypto_3, c_4), new SharedWithCache$lambda$23$Type);
}

function lambda$22_1(cacheDirOpt_0, friendDirectory_1, network_2, crypto_3, c_4, v_5, rc_6){
  $clinit_SharedWithCache();
  return addSharedWith((checkCriticalElement(cacheDirOpt_0.ref != null) , castTo(cacheDirOpt_0.ref, 19)), ($clinit_SharedWithCache$Access() , WRITE), get_176(rc_6.path, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])), singleton(($ensureUnmodified(friendDirectory_1) , friendDirectory_1.props).name), network_2, crypto_3, v_5, c_4);
}

function lambda$25_2(crypto_0, network_1, root_2, username_3, userRoot_4){
  $clinit_SharedWithCache();
  return $thenCompose($thenCompose($thenCompose($applyComplexUpdate(network_1.synchronizer, $owner((checkCriticalElement(userRoot_4.ref != null) , castTo(userRoot_4.ref, 19))), $signingPair((checkCriticalElement(userRoot_4.ref != null) , castTo(userRoot_4.ref, 19))), new SharedWithCache$lambda$26$Type(userRoot_4, network_1, crypto_0), new WriteSynchronizer$lambda$23$Type), makeLambdaFunction(SharedWithCache$lambda$28$Type.prototype.apply_0, SharedWithCache$lambda$28$Type, [crypto_0, network_1, userRoot_4])), makeLambdaFunction(SharedWithCache$lambda$31$Type.prototype.apply_0, SharedWithCache$lambda$31$Type, [root_2, username_3, network_1, crypto_0])), makeLambdaFunction(SharedWithCache$lambda$32$Type.prototype.apply_0, SharedWithCache$lambda$32$Type, [username_3, network_1, crypto_0, root_2]));
}

function lambda$26_1(userRoot_0, network_1, crypto_2, s_3, c_4){
  $clinit_SharedWithCache();
  return $thenApply(getOrMkdir((checkCriticalElement(userRoot_0.ref != null) , castTo(userRoot_0.ref, 19)), '.capabilitycache', network_1, crypto_2, s_3, c_4), makeLambdaFunction(SharedWithCache$lambda$27$Type.prototype.apply_0, SharedWithCache$lambda$27$Type, []));
}

function lambda$28_0(crypto_0, network_1, userRoot_2, s_3){
  $clinit_SharedWithCache();
  return $thenCompose($thenCompose($getUpdated_0((checkCriticalElement(userRoot_2.ref != null) , castTo(userRoot_2.ref, 19)), s_3, network_1), makeLambdaFunction(SharedWithCache$lambda$29$Type.prototype.apply_0, SharedWithCache$lambda$29$Type, [crypto_0, network_1])), makeLambdaFunction(SharedWithCache$lambda$30$Type.prototype.apply_0, SharedWithCache$lambda$30$Type, [network_1, crypto_0]));
}

function lambda$29_0(crypto_0, network_1, home_2){
  $clinit_SharedWithCache();
  return $getChild_2(home_2, '.capabilitycache', network_1);
}

function lambda$30_1(network_0, crypto_1, cacheRootOpt_2){
  $clinit_SharedWithCache();
  return $mkdir_1((checkCriticalElement(cacheRootOpt_2.ref != null) , castTo(cacheRootOpt_2.ref, 19)), 'outbound', network_0, true, $mirrorBatId((checkCriticalElement(cacheRootOpt_2.ref != null) , castTo(cacheRootOpt_2.ref, 19)).pointer.fileAccess), crypto_1);
}

function lambda$31_2(root_0, username_1, network_2, crypto_3){
  $clinit_SharedWithCache();
  return $thenCompose(root_0.getByPath(get_176(username_1, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['.capabilitycache'])).pathString, crypto_3.hasher, network_2), makeLambdaFunction(SharedWithCache$lambda$9$Type.prototype.apply_0, SharedWithCache$lambda$9$Type, [crypto_3, network_2, username_1, root_0]));
}

function lambda$32(username_0, network_1, crypto_2, root_3){
  $clinit_SharedWithCache();
  return $thenApply($thenApply(root_3.getByPath($resolve(get_176(username_0, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])), CACHE_BASE.pathString).pathString, crypto_2.hasher, network_1), makeLambdaFunction(SharedWithCache$1methodref$get$Type.prototype.apply_0, SharedWithCache$1methodref$get$Type, [])), makeLambdaFunction(SharedWithCache$lambda$34$Type.prototype.apply_0, SharedWithCache$lambda$34$Type, [username_0, network_1, crypto_2]));
}

function lambda$34_1(username_0, network_1, crypto_2, f_3){
  $clinit_SharedWithCache();
  return new SharedWithCache(f_3, username_0, network_1, crypto_2);
}

function lambda$35_1(username_0, network_1, crypto_2, root_3, opt_4){
  $clinit_SharedWithCache();
  if (opt_4.ref != null)
    return new CompletableFuture_0(new SharedWithCache((checkCriticalElement(opt_4.ref != null) , castTo(opt_4.ref, 19)), username_0, network_1, crypto_2));
  return $thenCompose(root_3.getByPath(get_176(username_0, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])).pathString, crypto_2.hasher, network_1), makeLambdaFunction(SharedWithCache$lambda$25$Type.prototype.apply_0, SharedWithCache$lambda$25$Type, [crypto_2, network_1, root_3, username_0]));
}

function lambda$36_1(dirName_0, crypto_1, network_2, parent_3, s_4, c_5, opt_6){
  $clinit_SharedWithCache();
  return opt_6.ref != null?new CompletableFuture_0((checkCriticalElement(opt_6.ref != null) , castTo(opt_6.ref, 19))):$thenApply($thenCompose($mkdir(parent_3, dirName_0, ($clinit_Optional() , $clinit_Optional() , EMPTY), (null , EMPTY), (null , EMPTY), (null , EMPTY), true, $mirrorBatId(parent_3.pointer.fileAccess), network_2, crypto_1, $mergeAndOverwriteWith(parent_3.version, s_4), c_5), makeLambdaFunction(SharedWithCache$lambda$37$Type.prototype.apply_0, SharedWithCache$lambda$37$Type, [dirName_0, crypto_1, network_2, parent_3])), makeLambdaFunction(SharedWithCache$2methodref$get$Type.prototype.apply_0, SharedWithCache$2methodref$get$Type, []));
}

function lambda$37_2(dirName_0, crypto_1, network_2, parent_3, s2_4){
  $clinit_SharedWithCache();
  return $thenCompose($thenCompose($withWriter(s2_4, $owner(parent_3), parent_3.pointer.capability.writer, network_2), makeLambdaFunction(FileWrapper$lambda$3$Type.prototype.apply_0, FileWrapper$lambda$3$Type, [parent_3, network_2])), makeLambdaFunction(SharedWithCache$lambda$38$Type.prototype.apply_0, SharedWithCache$lambda$38$Type, [dirName_0, crypto_1, network_2]));
}

function lambda$38_1(dirName_0, crypto_1, network_2, p_3){
  $clinit_SharedWithCache();
  return $getChild_2(p_3, dirName_0, network_2);
}

function lambda$4_6(opt_0, state_1){
  $clinit_SharedWithCache();
  return new Pair((checkCriticalElement(opt_0.ref != null) , castTo(opt_0.ref, 19)), state_1);
}

function lambda$40_1(remaining_0, network_1, crypto_2, c_3, child_4){
  $clinit_SharedWithCache();
  return getOrMkdirs(child_4, remaining_0.subList(1, remaining_0.size()), network_1, crypto_2, child_4.version, c_3);
}

function lambda$44_1(network_0, crypto_1, parent_2){
  $clinit_SharedWithCache();
  return parent_2.ref == null?new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY)):$thenCompose($getChild_2((checkCriticalElement(parent_2.ref != null) , castTo(parent_2.ref, 19)), 'sharedWith.cbor', network_0), makeLambdaFunction(SharedWithCache$lambda$45$Type.prototype.apply_0, SharedWithCache$lambda$45$Type, [network_0, crypto_1]));
}

function lambda$45(network_0, crypto_1, fopt_2){
  $clinit_SharedWithCache();
  if (fopt_2.ref != null)
    return $thenApply(parseCacheFile((checkCriticalElement(fopt_2.ref != null) , castTo(fopt_2.ref, 19)), network_0, crypto_1), makeLambdaFunction(SharedWithCache$lambda$46$Type.prototype.apply_0, SharedWithCache$lambda$46$Type, [fopt_2]));
  return new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY));
}

function lambda$46_3(fopt_0, c_1){
  $clinit_SharedWithCache();
  return $clinit_Optional() , new Optional(checkCriticalNotNull(new Pair((checkCriticalElement(fopt_0.ref != null) , castTo(fopt_0.ref, 19)), c_1)));
}

function lambda$47_1(crypto_0, network_1, committer_2, parent_3){
  $clinit_SharedWithCache();
  return $thenCompose($getChild_2(parent_3, 'sharedWith.cbor', network_1), makeLambdaFunction(SharedWithCache$lambda$48$Type.prototype.apply_0, SharedWithCache$lambda$48$Type, [crypto_0, network_1, parent_3, committer_2]));
}

function lambda$48_0(crypto_0, network_1, parent_2, committer_3, fopt_4){
  $clinit_SharedWithCache();
  var empty, raw;
  if (fopt_4.ref != null)
    return $thenApply(parseCacheFile((checkCriticalElement(fopt_4.ref != null) , castTo(fopt_4.ref, 19)), network_1, crypto_0), makeLambdaFunction(SharedWithCache$lambda$49$Type.prototype.apply_0, SharedWithCache$lambda$49$Type, [fopt_4]));
  empty = new SharedWithState(new HashMap, new HashMap);
  raw = $toByteArray_2($toCbor_84(empty));
  return $thenApply($thenCompose($uploadFileSection_1(parent_2, parent_2.version, committer_3, 'sharedWith.cbor', new AsyncReader$ArrayBacked(raw), false, 0, raw.length, ($clinit_Optional() , $clinit_Optional() , EMPTY), true, true, network_1, crypto_0, makeLambdaFunction(SharedWithCache$lambda$50$Type.prototype.accept_5, SharedWithCache$lambda$50$Type, []), $randomBytes(crypto_0.random, 32), (null , EMPTY), new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(crypto_0.random, 32))))), $mirrorBatId(parent_2.pointer.fileAccess)), makeLambdaFunction(SharedWithCache$lambda$51$Type.prototype.apply_0, SharedWithCache$lambda$51$Type, [crypto_0, network_1, parent_2])), makeLambdaFunction(SharedWithCache$lambda$53$Type.prototype.apply_0, SharedWithCache$lambda$53$Type, [empty]));
}

function lambda$49_0(fopt_0, c_1){
  $clinit_SharedWithCache();
  return new Pair((checkCriticalElement(fopt_0.ref != null) , castTo(fopt_0.ref, 19)), c_1);
}

function lambda$51_1(crypto_0, network_1, parent_2, s_3){
  $clinit_SharedWithCache();
  return $thenCompose($thenCompose($withWriter(s_3, $owner(parent_2), parent_2.pointer.capability.writer, network_1), makeLambdaFunction(FileWrapper$lambda$3$Type.prototype.apply_0, FileWrapper$lambda$3$Type, [parent_2, network_1])), makeLambdaFunction(SharedWithCache$lambda$52$Type.prototype.apply_0, SharedWithCache$lambda$52$Type, [crypto_0, network_1]));
}

function lambda$52_2(crypto_0, network_1, updatedParent_2){
  $clinit_SharedWithCache();
  return $getChild_2(updatedParent_2, 'sharedWith.cbor', network_1);
}

function lambda$53_2(empty_0, copt_1){
  $clinit_SharedWithCache();
  return new Pair((checkCriticalElement(copt_1.ref != null) , castTo(copt_1.ref, 19)), empty_0);
}

function lambda$55_0(cache_0, in_1){
  $clinit_SharedWithCache();
  return readFully(in_1, ($ensureUnmodified(cache_0) , cache_0.props).size_0);
}

function lambda$6_2(toFile_0, network_1, crypto_2, in_3, committer_4, updateed_5){
  $clinit_SharedWithCache();
  return retrieveWithFileOrCreate(updateed_5, $getParent(toFile_0), network_1, crypto_2, in_3, committer_4);
}

function lambda$61_1(start_0, filename_1, c_2){
  $clinit_SharedWithCache();
  return castTo($orElse($map($filter_0(c_2, filename_1), makeLambdaFunction(SharedWithCache$lambda$62$Type.prototype.apply_0, SharedWithCache$lambda$62$Type, [start_0])), ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)), 68);
}

function lambda$62_0(start_0, r_1){
  $clinit_SharedWithCache();
  return singletonMap($getParent(start_0), r_1);
}

function lambda$66_2(toUs_0, c_1){
  $clinit_SharedWithCache();
  return singletonMap($getParent(toUs_0), c_1);
}

function lambda$7_7(access_0, toFile_1, names_2, network_3, crypto_4, committer_5, p_6){
  $clinit_SharedWithCache();
  var current, raw, source, updated;
  source = castTo(p_6.left, 19);
  current = castTo(p_6.right, 126);
  updated = $add_6(current, access_0, $getName_0(toFile_1, $getNameCount(toFile_1) - 1).pathString, names_2);
  raw = $toByteArray_2($toCbor_84(updated));
  return $overwriteFile_0(source, new AsyncReader$ArrayBacked(raw), raw.length, network_3, crypto_4, makeLambdaFunction(SharedWithCache$lambda$8$Type.prototype.accept_5, SharedWithCache$lambda$8$Type, []), source.version, committer_5);
}

function lambda$75_0(e_0, e2_1){
  $clinit_SharedWithCache();
  return new Pair($resolve(castTo(e_0.getKey(), 95), castToString(e2_1.getKey())), castTo(e2_1.getValue(), 47));
}

function lambda$80_1(e_0, e2_1){
  $clinit_SharedWithCache();
  return new Pair($resolve(castTo(e_0.getKey(), 95), castToString(e2_1.getKey())), castTo(e2_1.getValue(), 47));
}

function lambda$83(p_0, opt_1){
  $clinit_SharedWithCache();
  return castTo($orElse($map(opt_1, makeLambdaFunction(SharedWithCache$lambda$84$Type.prototype.apply_0, SharedWithCache$lambda$84$Type, [p_0])), ($clinit_FileSharedWithState() , EMPTY_1)), 348);
}

function lambda$84(p_0, s_1){
  $clinit_SharedWithCache();
  return $get_30(s_1, $getName_0(p_0, $getNameCount(p_0) - 1).pathString);
}

function lambda$9_5(crypto_0, network_1, ourname_2, root_3, cacheDirOpt_4){
  $clinit_SharedWithCache();
  return $thenCompose($thenCompose(root_3.getByPath(get_176(ourname_2, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['shared'])).pathString, crypto_0.hasher, network_1), makeLambdaFunction(SharedWithCache$lambda$10$Type.prototype.apply_0, SharedWithCache$lambda$10$Type, [crypto_0, network_1])), makeLambdaFunction(SharedWithCache$lambda$11$Type.prototype.apply_0, SharedWithCache$lambda$11$Type, [cacheDirOpt_4, ourname_2, network_1, crypto_0]));
}

function lambda$93(newFilename_0, sharees_1, initialFilename_2, current_3){
  $clinit_SharedWithCache();
  return $clear_6($add_6($add_6(current_3, ($clinit_SharedWithCache$Access() , READ), newFilename_0, sharees_1.readAccess), WRITE, newFilename_0, sharees_1.writeAccess), initialFilename_2);
}

function lambda$94_1(access_0, p_1, names_2, current_3){
  $clinit_SharedWithCache();
  return $add_6(current_3, access_0, $getName_0(p_1, $getNameCount(p_1) - 1).pathString, names_2);
}

function lambda$95_1(p_0, current_1){
  $clinit_SharedWithCache();
  return $clear_6(current_1, $getName_0(p_0, $getNameCount(p_0) - 1).pathString);
}

function lambda$96_1(access_0, p_1, names_2, current_3){
  $clinit_SharedWithCache();
  return $remove_15(current_3, access_0, $getName_0(p_1, $getNameCount(p_1) - 1).pathString, names_2);
}

function parseCacheFile(cache, network, crypto_0){
  return $thenApply($thenApply($thenCompose($getInputStream_2(cache, $get_32(cache.version, cache.pointer.capability.writer).props, network, crypto_0, makeLambdaFunction(SharedWithCache$lambda$54$Type.prototype.accept_5, SharedWithCache$lambda$54$Type, [])), makeLambdaFunction(SharedWithCache$lambda$55$Type.prototype.apply_0, SharedWithCache$lambda$55$Type, [cache])), makeLambdaFunction(SharedWithCache$3methodref$fromByteArray$Type.prototype.apply_0, SharedWithCache$3methodref$fromByteArray$Type, [])), makeLambdaFunction(SharedWithCache$4methodref$fromCbor$Type.prototype.apply_0, SharedWithCache$4methodref$fromCbor$Type, []));
}

function retrieveWithFile(base, dir_0, network, crypto_0, in_0){
  return $thenCompose($getDescendentByPath_0(base, dir_0.pathString, in_0, crypto_0.hasher, network), makeLambdaFunction(SharedWithCache$lambda$44$Type.prototype.apply_0, SharedWithCache$lambda$44$Type, [network, crypto_0]));
}

function retrieveWithFileOrCreate(base, dir_0, network, crypto_0, in_0, committer){
  return $thenCompose(getOrMkdirs(base, components(dir_0), network, crypto_0, in_0, committer), makeLambdaFunction(SharedWithCache$lambda$47$Type.prototype.apply_0, SharedWithCache$lambda$47$Type, [crypto_0, network, committer]));
}

function toRelative(p){
  return $startsWith(p.pathString, '/')?get_176(p.pathString.substr(1), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])):p;
}

defineClass(397, 1, {}, SharedWithCache);
var CACHE_BASE;
var Lpeergos_shared_user_SharedWithCache_2_classLit = createForClass('peergos.shared.user', 'SharedWithCache', 397);
function SharedWithCache$0methodref$of$Type(){
}

defineClass(2451, $wnd.Function, $intern_22, SharedWithCache$0methodref$of$Type);
_.apply_0 = function apply_1260(arg0){
  return $clinit_Optional() , new Optional(checkCriticalNotNull(castTo(arg0, 20)));
}
;
function SharedWithCache$1methodref$get$Type(){
}

defineClass(2468, $wnd.Function, $intern_22, SharedWithCache$1methodref$get$Type);
_.apply_0 = function apply_1261(arg0){
  return $get_6(castTo(arg0, 12));
}
;
function SharedWithCache$2methodref$get$Type(){
}

defineClass(2472, $wnd.Function, $intern_22, SharedWithCache$2methodref$get$Type);
_.apply_0 = function apply_1262(arg0){
  return $get_6(castTo(arg0, 12));
}
;
function SharedWithCache$3methodref$fromByteArray$Type(){
}

defineClass(2437, $wnd.Function, $intern_22, SharedWithCache$3methodref$fromByteArray$Type);
_.apply_0 = function apply_1263(arg0){
  return fromByteArray(castTo(arg0, 11));
}
;
function SharedWithCache$4methodref$fromCbor$Type(){
}

defineClass(2438, $wnd.Function, $intern_22, SharedWithCache$4methodref$fromCbor$Type);
_.apply_0 = function apply_1264(arg0){
  return fromCbor_92(castTo(arg0, 7));
}
;
function $clinit_SharedWithCache$Access(){
  $clinit_SharedWithCache$Access = emptyMethod;
  READ = new SharedWithCache$Access('READ', 0);
  WRITE = new SharedWithCache$Access('WRITE', 1);
}

function SharedWithCache$Access(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function valueOf_16(name_0){
  $clinit_SharedWithCache$Access();
  return valueOf_0(($clinit_SharedWithCache$Access$Map() , $MAP_7), name_0);
}

function values_19(){
  $clinit_SharedWithCache$Access();
  return stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_user_SharedWithCache$Access_2_classLit, 1), $intern_33, 301, 0, [READ, WRITE]);
}

defineClass(301, 52, {4:1, 57:1, 52:1, 301:1}, SharedWithCache$Access);
var READ, WRITE;
var Lpeergos_shared_user_SharedWithCache$Access_2_classLit = createForEnum('peergos.shared.user', 'SharedWithCache/Access', 301, values_19);
function $clinit_SharedWithCache$Access$Map(){
  $clinit_SharedWithCache$Access$Map = emptyMethod;
  $MAP_7 = createValueOfMap(($clinit_SharedWithCache$Access() , stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_user_SharedWithCache$Access_2_classLit, 1), $intern_33, 301, 0, [READ, WRITE])));
}

var $MAP_7;
function SharedWithCache$lambda$0$Type(){
}

defineClass(1300, $wnd.Function, $intern_22, SharedWithCache$lambda$0$Type);
_.apply_0 = function apply_1265(arg0){
  return $clinit_SharedWithCache() , $map(castTo(arg0, 12), makeLambdaFunction(SharedWithCache$lambda$1$Type.prototype.apply_0, SharedWithCache$lambda$1$Type, []));
}
;
function SharedWithCache$lambda$1$Type(){
}

defineClass(2495, $wnd.Function, $intern_22, SharedWithCache$lambda$1$Type);
_.apply_0 = function apply_1266(arg0){
  return $clinit_SharedWithCache() , castTo(castTo(arg0, 20).right, 126);
}
;
function SharedWithCache$lambda$10$Type(crypto_0, network_1){
  this.crypto_0 = crypto_0;
  this.network_1 = network_1;
}

defineClass(2453, $wnd.Function, $intern_22, SharedWithCache$lambda$10$Type);
_.apply_0 = function apply_1267(arg0){
  return lambda$10_6(this.crypto_0, this.network_1, arg0);
}
;
function SharedWithCache$lambda$11$Type(cacheDirOpt_0, ourname_1, network_2, crypto_3){
  this.cacheDirOpt_0 = cacheDirOpt_0;
  this.ourname_1 = ourname_1;
  this.network_2 = network_2;
  this.crypto_3 = crypto_3;
}

defineClass(2454, $wnd.Function, $intern_22, SharedWithCache$lambda$11$Type);
_.apply_0 = function apply_1268(arg0){
  return lambda$11_7(this.cacheDirOpt_0, this.ourname_1, this.network_2, this.crypto_3, arg0);
}
;
function SharedWithCache$lambda$12$Type(cacheDirOpt_0, ourname_1, network_2, crypto_3){
  this.cacheDirOpt_0 = cacheDirOpt_0;
  this.ourname_1 = ourname_1;
  this.network_2 = network_2;
  this.crypto_3 = crypto_3;
}

defineClass(824, 1, $intern_34, SharedWithCache$lambda$12$Type);
_.apply_1 = function apply_1269(arg0, arg1){
  return lambda$12_3(this.cacheDirOpt_0, this.ourname_1, this.network_2, this.crypto_3, arg1);
}
;
var Lpeergos_shared_user_SharedWithCache$lambda$12$Type_2_classLit = createForClass('peergos.shared.user', 'SharedWithCache/lambda$12$Type', 824);
function SharedWithCache$lambda$13$Type(){
}

defineClass(825, 1, $intern_34, SharedWithCache$lambda$13$Type);
_.apply_1 = function apply_1270(arg0, arg1){
  return $clinit_SharedWithCache() , $clinit_Boolean() , (checkCriticalNotNull(castToBoolean(arg0)) , castToBoolean(arg0)) && (checkCriticalNotNull(castToBoolean(arg1)) , castToBoolean(arg1))?true:false;
}
;
var Lpeergos_shared_user_SharedWithCache$lambda$13$Type_2_classLit = createForClass('peergos.shared.user', 'SharedWithCache/lambda$13$Type', 825);
function SharedWithCache$lambda$14$Type(cacheDirOpt_0, ourname_1, network_2, crypto_3){
  this.cacheDirOpt_0 = cacheDirOpt_0;
  this.ourname_1 = ourname_1;
  this.network_2 = network_2;
  this.crypto_3 = crypto_3;
}

defineClass(2455, $wnd.Function, $intern_22, SharedWithCache$lambda$14$Type);
_.apply_0 = function apply_1271(arg0){
  return lambda$14_5(this.cacheDirOpt_0, this.ourname_1, this.network_2, this.crypto_3, arg0);
}
;
function SharedWithCache$lambda$15$Type(cacheDirOpt_0, friendDirectory_1, network_2, crypto_3, ourname_4){
  this.cacheDirOpt_0 = cacheDirOpt_0;
  this.friendDirectory_1 = friendDirectory_1;
  this.network_2 = network_2;
  this.crypto_3 = crypto_3;
  this.ourname_4 = ourname_4;
}

defineClass(2456, $wnd.Function, $intern_22, SharedWithCache$lambda$15$Type);
_.apply_0 = function apply_1272(arg0){
  return lambda$15_2(this.cacheDirOpt_0, this.friendDirectory_1, this.network_2, this.crypto_3, this.ourname_4, arg0);
}
;
function SharedWithCache$lambda$16$Type(cacheDirOpt_0, friendDirectory_1, network_2, crypto_3, ourname_4, readCaps_5){
  this.cacheDirOpt_0 = cacheDirOpt_0;
  this.friendDirectory_1 = friendDirectory_1;
  this.network_2 = network_2;
  this.crypto_3 = crypto_3;
  this.ourname_4 = ourname_4;
  this.readCaps_5 = readCaps_5;
}

defineClass(823, 1, {}, SharedWithCache$lambda$16$Type);
_.apply_3 = function apply_1273(arg0, arg1){
  return lambda$16_5(this.cacheDirOpt_0, this.friendDirectory_1, this.network_2, this.crypto_3, this.ourname_4, this.readCaps_5, arg0, arg1);
}
;
var Lpeergos_shared_user_SharedWithCache$lambda$16$Type_2_classLit = createForClass('peergos.shared.user', 'SharedWithCache/lambda$16$Type', 823);
function SharedWithCache$lambda$17$Type(cacheDirOpt_0, friendDirectory_1, network_2, crypto_3, c_4){
  this.cacheDirOpt_0 = cacheDirOpt_0;
  this.friendDirectory_1 = friendDirectory_1;
  this.network_2 = network_2;
  this.crypto_3 = crypto_3;
  this.c_4 = c_4;
}

defineClass(819, 1, $intern_34, SharedWithCache$lambda$17$Type);
_.apply_1 = function apply_1274(arg0, arg1){
  return lambda$17_3(this.cacheDirOpt_0, this.friendDirectory_1, this.network_2, this.crypto_3, this.c_4, arg0, arg1);
}
;
var Lpeergos_shared_user_SharedWithCache$lambda$17$Type_2_classLit = createForClass('peergos.shared.user', 'SharedWithCache/lambda$17$Type', 819);
function SharedWithCache$lambda$18$Type(){
}

defineClass(820, 1, $intern_34, SharedWithCache$lambda$18$Type);
_.apply_1 = function apply_1275(arg0, arg1){
  return $clinit_SharedWithCache() , castTo(arg1, 43);
}
;
var Lpeergos_shared_user_SharedWithCache$lambda$18$Type_2_classLit = createForClass('peergos.shared.user', 'SharedWithCache/lambda$18$Type', 820);
function SharedWithCache$lambda$19$Type(cacheDirOpt_0, ourname_1, network_2, crypto_3, friendDirectory_4, c_5){
  this.cacheDirOpt_0 = cacheDirOpt_0;
  this.ourname_1 = ourname_1;
  this.network_2 = network_2;
  this.crypto_3 = crypto_3;
  this.friendDirectory_4 = friendDirectory_4;
  this.c_5 = c_5;
}

defineClass(2458, $wnd.Function, $intern_22, SharedWithCache$lambda$19$Type);
_.apply_0 = function apply_1276(arg0){
  return lambda$19_4(this.cacheDirOpt_0, this.ourname_1, this.network_2, this.crypto_3, this.friendDirectory_4, this.c_5, arg0);
}
;
function SharedWithCache$lambda$2$Type($$outer_0, dir_1){
  this.$$outer_0 = $$outer_0;
  this.dir_1 = dir_1;
}

defineClass(2425, $wnd.Function, $intern_22, SharedWithCache$lambda$2$Type);
_.apply_0 = function apply_1277(arg0){
  return $lambda$2_21(this.$$outer_0, this.dir_1, arg0);
}
;
function SharedWithCache$lambda$20$Type(cacheDirOpt_0, ourname_1, network_2, crypto_3){
  this.cacheDirOpt_0 = cacheDirOpt_0;
  this.ourname_1 = ourname_1;
  this.network_2 = network_2;
  this.crypto_3 = crypto_3;
}

defineClass(2459, $wnd.Function, $intern_22, SharedWithCache$lambda$20$Type);
_.apply_0 = function apply_1278(arg0){
  return lambda$20_2(this.cacheDirOpt_0, this.ourname_1, this.network_2, this.crypto_3, arg0);
}
;
function SharedWithCache$lambda$21$Type(cacheDirOpt_0, friendDirectory_1, network_2, crypto_3, c_4, s2_5){
  this.cacheDirOpt_0 = cacheDirOpt_0;
  this.friendDirectory_1 = friendDirectory_1;
  this.network_2 = network_2;
  this.crypto_3 = crypto_3;
  this.c_4 = c_4;
  this.s2_5 = s2_5;
}

defineClass(2460, $wnd.Function, $intern_22, SharedWithCache$lambda$21$Type);
_.apply_0 = function apply_1279(arg0){
  return lambda$21_1(this.cacheDirOpt_0, this.friendDirectory_1, this.network_2, this.crypto_3, this.c_4, this.s2_5, arg0);
}
;
function SharedWithCache$lambda$22$Type(cacheDirOpt_0, friendDirectory_1, network_2, crypto_3, c_4){
  this.cacheDirOpt_0 = cacheDirOpt_0;
  this.friendDirectory_1 = friendDirectory_1;
  this.network_2 = network_2;
  this.crypto_3 = crypto_3;
  this.c_4 = c_4;
}

defineClass(821, 1, $intern_34, SharedWithCache$lambda$22$Type);
_.apply_1 = function apply_1280(arg0, arg1){
  return lambda$22_1(this.cacheDirOpt_0, this.friendDirectory_1, this.network_2, this.crypto_3, this.c_4, arg0, arg1);
}
;
var Lpeergos_shared_user_SharedWithCache$lambda$22$Type_2_classLit = createForClass('peergos.shared.user', 'SharedWithCache/lambda$22$Type', 821);
function SharedWithCache$lambda$23$Type(){
}

defineClass(822, 1, $intern_34, SharedWithCache$lambda$23$Type);
_.apply_1 = function apply_1281(arg0, arg1){
  return $clinit_SharedWithCache() , castTo(arg1, 43);
}
;
var Lpeergos_shared_user_SharedWithCache$lambda$23$Type_2_classLit = createForClass('peergos.shared.user', 'SharedWithCache/lambda$23$Type', 822);
function SharedWithCache$lambda$24$Type(){
}

defineClass(2457, $wnd.Function, $intern_22, SharedWithCache$lambda$24$Type);
_.apply_0 = function apply_1282(arg0){
  return $clinit_SharedWithCache() , $clinit_Boolean() , true;
}
;
function SharedWithCache$lambda$25$Type(crypto_0, network_1, root_2, username_3){
  this.crypto_0 = crypto_0;
  this.network_1 = network_1;
  this.root_2 = root_2;
  this.username_3 = username_3;
}

defineClass(2470, $wnd.Function, $intern_22, SharedWithCache$lambda$25$Type);
_.apply_0 = function apply_1283(arg0){
  return lambda$25_2(this.crypto_0, this.network_1, this.root_2, this.username_3, arg0);
}
;
function SharedWithCache$lambda$26$Type(userRoot_0, network_1, crypto_2){
  this.userRoot_0 = userRoot_0;
  this.network_1 = network_1;
  this.crypto_2 = crypto_2;
}

defineClass(826, 1, {}, SharedWithCache$lambda$26$Type);
_.apply_3 = function apply_1284(arg0, arg1){
  return lambda$26_1(this.userRoot_0, this.network_1, this.crypto_2, arg0, arg1);
}
;
var Lpeergos_shared_user_SharedWithCache$lambda$26$Type_2_classLit = createForClass('peergos.shared.user', 'SharedWithCache/lambda$26$Type', 826);
function SharedWithCache$lambda$27$Type(){
}

defineClass(2464, $wnd.Function, $intern_22, SharedWithCache$lambda$27$Type);
_.apply_0 = function apply_1285(arg0){
  return $clinit_SharedWithCache() , castTo(arg0, 19).version;
}
;
function SharedWithCache$lambda$28$Type(crypto_0, network_1, userRoot_2){
  this.crypto_0 = crypto_0;
  this.network_1 = network_1;
  this.userRoot_2 = userRoot_2;
}

defineClass(2461, $wnd.Function, $intern_22, SharedWithCache$lambda$28$Type);
_.apply_0 = function apply_1286(arg0){
  return lambda$28_0(this.crypto_0, this.network_1, this.userRoot_2, arg0);
}
;
function SharedWithCache$lambda$29$Type(crypto_0, network_1){
  this.crypto_0 = crypto_0;
  this.network_1 = network_1;
}

defineClass(2465, $wnd.Function, $intern_22, SharedWithCache$lambda$29$Type);
_.apply_0 = function apply_1287(arg0){
  return lambda$29_0(this.crypto_0, this.network_1, arg0);
}
;
function SharedWithCache$lambda$3$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2426, $wnd.Function, $intern_22, SharedWithCache$lambda$3$Type);
_.apply_0 = function apply_1288(arg0){
  return $lambda$3_20(this.$$outer_0, arg0);
}
;
function SharedWithCache$lambda$30$Type(network_0, crypto_1){
  this.network_0 = network_0;
  this.crypto_1 = crypto_1;
}

defineClass(2466, $wnd.Function, $intern_22, SharedWithCache$lambda$30$Type);
_.apply_0 = function apply_1289(arg0){
  return lambda$30_1(this.network_0, this.crypto_1, arg0);
}
;
function SharedWithCache$lambda$31$Type(root_0, username_1, network_2, crypto_3){
  this.root_0 = root_0;
  this.username_1 = username_1;
  this.network_2 = network_2;
  this.crypto_3 = crypto_3;
}

defineClass(2462, $wnd.Function, $intern_22, SharedWithCache$lambda$31$Type);
_.apply_0 = function apply_1290(arg0){
  return lambda$31_2(this.root_0, this.username_1, this.network_2, this.crypto_3);
}
;
function SharedWithCache$lambda$32$Type(username_0, network_1, crypto_2, root_3){
  this.username_0 = username_0;
  this.network_1 = network_1;
  this.crypto_2 = crypto_2;
  this.root_3 = root_3;
}

defineClass(2463, $wnd.Function, $intern_22, SharedWithCache$lambda$32$Type);
_.apply_0 = function apply_1291(arg0){
  return lambda$32(this.username_0, this.network_1, this.crypto_2, this.root_3);
}
;
function SharedWithCache$lambda$34$Type(username_0, network_1, crypto_2){
  this.username_0 = username_0;
  this.network_1 = network_1;
  this.crypto_2 = crypto_2;
}

defineClass(2469, $wnd.Function, $intern_22, SharedWithCache$lambda$34$Type);
_.apply_0 = function apply_1292(arg0){
  return lambda$34_1(this.username_0, this.network_1, this.crypto_2, arg0);
}
;
function SharedWithCache$lambda$35$Type(username_0, network_1, crypto_2, root_3){
  this.username_0 = username_0;
  this.network_1 = network_1;
  this.crypto_2 = crypto_2;
  this.root_3 = root_3;
}

defineClass(2020, $wnd.Function, $intern_22, SharedWithCache$lambda$35$Type);
_.apply_0 = function apply_1293(arg0){
  return lambda$35_1(this.username_0, this.network_1, this.crypto_2, this.root_3, arg0);
}
;
function SharedWithCache$lambda$36$Type(dirName_0, crypto_1, network_2, parent_3, s_4, c_5){
  this.dirName_0 = dirName_0;
  this.crypto_1 = crypto_1;
  this.network_2 = network_2;
  this.parent_3 = parent_3;
  this.s_4 = s_4;
  this.c_5 = c_5;
}

defineClass(2429, $wnd.Function, $intern_22, SharedWithCache$lambda$36$Type);
_.apply_0 = function apply_1294(arg0){
  return lambda$36_1(this.dirName_0, this.crypto_1, this.network_2, this.parent_3, this.s_4, this.c_5, arg0);
}
;
function SharedWithCache$lambda$37$Type(dirName_0, crypto_1, network_2, parent_3){
  this.dirName_0 = dirName_0;
  this.crypto_1 = crypto_1;
  this.network_2 = network_2;
  this.parent_3 = parent_3;
}

defineClass(2471, $wnd.Function, $intern_22, SharedWithCache$lambda$37$Type);
_.apply_0 = function apply_1295(arg0){
  return lambda$37_2(this.dirName_0, this.crypto_1, this.network_2, this.parent_3, arg0);
}
;
function SharedWithCache$lambda$38$Type(dirName_0, crypto_1, network_2){
  this.dirName_0 = dirName_0;
  this.crypto_1 = crypto_1;
  this.network_2 = network_2;
}

defineClass(2473, $wnd.Function, $intern_22, SharedWithCache$lambda$38$Type);
_.apply_0 = function apply_1296(arg0){
  return lambda$38_1(this.dirName_0, this.crypto_1, this.network_2, arg0);
}
;
function SharedWithCache$lambda$4$Type(opt_0){
  this.opt_0 = opt_0;
}

defineClass(2450, $wnd.Function, $intern_22, SharedWithCache$lambda$4$Type);
_.apply_0 = function apply_1297(arg0){
  return lambda$4_6(this.opt_0, arg0);
}
;
function SharedWithCache$lambda$40$Type(remaining_0, network_1, crypto_2, c_3){
  this.remaining_0 = remaining_0;
  this.network_1 = network_1;
  this.crypto_2 = crypto_2;
  this.c_3 = c_3;
}

defineClass(2430, $wnd.Function, $intern_22, SharedWithCache$lambda$40$Type);
_.apply_0 = function apply_1298(arg0){
  return lambda$40_1(this.remaining_0, this.network_1, this.crypto_2, this.c_3, arg0);
}
;
function SharedWithCache$lambda$41$Type($$outer_0, dir_1){
  this.$$outer_0 = $$outer_0;
  this.dir_1 = dir_1;
}

defineClass(2431, $wnd.Function, $intern_22, SharedWithCache$lambda$41$Type);
_.apply_0 = function apply_1299(arg0){
  return $lambda$41_1(this.$$outer_0, this.dir_1, arg0);
}
;
function SharedWithCache$lambda$42$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2432, $wnd.Function, $intern_22, SharedWithCache$lambda$42$Type);
_.apply_0 = function apply_1300(arg0){
  return $lambda$42_3(this.$$outer_0, arg0);
}
;
function SharedWithCache$lambda$43$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2474, $wnd.Function, $intern_22, SharedWithCache$lambda$43$Type);
_.apply_0 = function apply_1301(arg0){
  return $lambda$43_2(this.$$outer_0, arg0);
}
;
function SharedWithCache$lambda$44$Type(network_0, crypto_1){
  this.network_0 = network_0;
  this.crypto_1 = crypto_1;
}

defineClass(2433, $wnd.Function, $intern_22, SharedWithCache$lambda$44$Type);
_.apply_0 = function apply_1302(arg0){
  return lambda$44_1(this.network_0, this.crypto_1, arg0);
}
;
function SharedWithCache$lambda$45$Type(network_0, crypto_1){
  this.network_0 = network_0;
  this.crypto_1 = crypto_1;
}

defineClass(2475, $wnd.Function, $intern_22, SharedWithCache$lambda$45$Type);
_.apply_0 = function apply_1303(arg0){
  return lambda$45(this.network_0, this.crypto_1, arg0);
}
;
function SharedWithCache$lambda$46$Type(fopt_0){
  this.fopt_0 = fopt_0;
}

defineClass(2476, $wnd.Function, $intern_22, SharedWithCache$lambda$46$Type);
_.apply_0 = function apply_1304(arg0){
  return lambda$46_3(this.fopt_0, arg0);
}
;
function SharedWithCache$lambda$47$Type(crypto_0, network_1, committer_2){
  this.crypto_0 = crypto_0;
  this.network_1 = network_1;
  this.committer_2 = committer_2;
}

defineClass(2434, $wnd.Function, $intern_22, SharedWithCache$lambda$47$Type);
_.apply_0 = function apply_1305(arg0){
  return lambda$47_1(this.crypto_0, this.network_1, this.committer_2, arg0);
}
;
function SharedWithCache$lambda$48$Type(crypto_0, network_1, parent_2, committer_3){
  this.crypto_0 = crypto_0;
  this.network_1 = network_1;
  this.parent_2 = parent_2;
  this.committer_3 = committer_3;
}

defineClass(2477, $wnd.Function, $intern_22, SharedWithCache$lambda$48$Type);
_.apply_0 = function apply_1306(arg0){
  return lambda$48_0(this.crypto_0, this.network_1, this.parent_2, this.committer_3, arg0);
}
;
function SharedWithCache$lambda$49$Type(fopt_0){
  this.fopt_0 = fopt_0;
}

defineClass(2478, $wnd.Function, $intern_22, SharedWithCache$lambda$49$Type);
_.apply_0 = function apply_1307(arg0){
  return lambda$49_0(this.fopt_0, arg0);
}
;
function SharedWithCache$lambda$50$Type(){
}

defineClass(2479, $wnd.Function, {}, SharedWithCache$lambda$50$Type);
_.accept_5 = function accept_117(arg0){
  $clinit_SharedWithCache();
}
;
function SharedWithCache$lambda$51$Type(crypto_0, network_1, parent_2){
  this.crypto_0 = crypto_0;
  this.network_1 = network_1;
  this.parent_2 = parent_2;
}

defineClass(2480, $wnd.Function, $intern_22, SharedWithCache$lambda$51$Type);
_.apply_0 = function apply_1308(arg0){
  return lambda$51_1(this.crypto_0, this.network_1, this.parent_2, arg0);
}
;
function SharedWithCache$lambda$52$Type(crypto_0, network_1){
  this.crypto_0 = crypto_0;
  this.network_1 = network_1;
}

defineClass(2482, $wnd.Function, $intern_22, SharedWithCache$lambda$52$Type);
_.apply_0 = function apply_1309(arg0){
  return lambda$52_2(this.crypto_0, this.network_1, arg0);
}
;
function SharedWithCache$lambda$53$Type(empty_0){
  this.empty_0 = empty_0;
}

defineClass(2481, $wnd.Function, $intern_22, SharedWithCache$lambda$53$Type);
_.apply_0 = function apply_1310(arg0){
  return lambda$53_2(this.empty_0, arg0);
}
;
function SharedWithCache$lambda$54$Type(){
}

defineClass(2435, $wnd.Function, {}, SharedWithCache$lambda$54$Type);
_.accept_5 = function accept_118(arg0){
  $clinit_SharedWithCache();
}
;
function SharedWithCache$lambda$55$Type(cache_0){
  this.cache_0 = cache_0;
}

defineClass(2436, $wnd.Function, $intern_22, SharedWithCache$lambda$55$Type);
_.apply_0 = function apply_1311(arg0){
  return lambda$55_0(this.cache_0, arg0);
}
;
function SharedWithCache$lambda$58$Type($$outer_0, start_1){
  this.$$outer_0 = $$outer_0;
  this.start_1 = start_1;
}

defineClass(1298, $wnd.Function, $intern_22, SharedWithCache$lambda$58$Type);
_.apply_0 = function apply_1312(arg0){
  return $lambda$58_1(this.$$outer_0, this.start_1, arg0);
}
;
function SharedWithCache$lambda$59$Type($$outer_0, start_1){
  this.$$outer_0 = $$outer_0;
  this.start_1 = start_1;
}

defineClass(1299, $wnd.Function, $intern_22, SharedWithCache$lambda$59$Type);
_.apply_0 = function apply_1313(arg0){
  return $lambda$59(this.$$outer_0, this.start_1, arg0);
}
;
function SharedWithCache$lambda$6$Type(toFile_0, network_1, crypto_2, in_3, committer_4){
  this.toFile_0 = toFile_0;
  this.network_1 = network_1;
  this.crypto_2 = crypto_2;
  this.in_3 = in_3;
  this.committer_4 = committer_4;
}

defineClass(2427, $wnd.Function, $intern_22, SharedWithCache$lambda$6$Type);
_.apply_0 = function apply_1314(arg0){
  return lambda$6_2(this.toFile_0, this.network_1, this.crypto_2, this.in_3, this.committer_4, arg0);
}
;
function SharedWithCache$lambda$60$Type($$outer_0, start_1, filename_2){
  this.$$outer_0 = $$outer_0;
  this.start_1 = start_1;
  this.filename_2 = filename_2;
}

defineClass(2483, $wnd.Function, $intern_22, SharedWithCache$lambda$60$Type);
_.apply_0 = function apply_1315(arg0){
  return $lambda$60_1(this.$$outer_0, this.start_1, this.filename_2, arg0);
}
;
function SharedWithCache$lambda$61$Type(start_0, filename_1){
  this.start_0 = start_0;
  this.filename_1 = filename_1;
}

defineClass(2485, $wnd.Function, $intern_22, SharedWithCache$lambda$61$Type);
_.apply_0 = function apply_1316(arg0){
  return lambda$61_1(this.start_0, this.filename_1, arg0);
}
;
function SharedWithCache$lambda$62$Type(start_0){
  this.start_0 = start_0;
}

defineClass(2486, $wnd.Function, $intern_22, SharedWithCache$lambda$62$Type);
_.apply_0 = function apply_1317(arg0){
  return lambda$62_0(this.start_0, arg0);
}
;
function SharedWithCache$lambda$63$Type($$outer_0, start_1, parent_2, filename_3){
  this.$$outer_0 = $$outer_0;
  this.start_1 = start_1;
  this.parent_2 = parent_2;
  this.filename_3 = filename_3;
}

defineClass(2484, $wnd.Function, $intern_22, SharedWithCache$lambda$63$Type);
_.apply_0 = function apply_1318(arg0){
  return $lambda$63_0(this.$$outer_0, this.start_1, this.parent_2, this.filename_3, arg0);
}
;
function SharedWithCache$lambda$64$Type($$outer_0, m_1, start_2){
  this.$$outer_0 = $$outer_0;
  this.m_1 = m_1;
  this.start_2 = start_2;
}

defineClass(2487, $wnd.Function, $intern_22, SharedWithCache$lambda$64$Type);
_.apply_0 = function apply_1319(arg0){
  return $lambda$64_1(this.$$outer_0, this.m_1, this.start_2, arg0);
}
;
function SharedWithCache$lambda$65$Type(m_1){
  this.m_1 = m_1;
}

defineClass(2488, $wnd.Function, $intern_22, SharedWithCache$lambda$65$Type);
_.apply_0 = function apply_1320(arg0){
  return $lambda$65_0(this.m_1, arg0);
}
;
function SharedWithCache$lambda$66$Type(toUs_0){
  this.toUs_0 = toUs_0;
}

defineClass(2439, $wnd.Function, $intern_22, SharedWithCache$lambda$66$Type);
_.apply_0 = function apply_1321(arg0){
  return lambda$66_2(this.toUs_0, arg0);
}
;
function SharedWithCache$lambda$67$Type($$outer_0, toUs_1){
  this.$$outer_0 = $$outer_0;
  this.toUs_1 = toUs_1;
}

defineClass(2440, $wnd.Function, $intern_22, SharedWithCache$lambda$67$Type);
_.apply_0 = function apply_1322(arg0){
  return $lambda$67_0(this.$$outer_0, this.toUs_1, arg0);
}
;
function SharedWithCache$lambda$68$Type($$outer_0, toUs_1){
  this.$$outer_0 = $$outer_0;
  this.toUs_1 = toUs_1;
}

defineClass(2489, $wnd.Function, $intern_22, SharedWithCache$lambda$68$Type);
_.apply_0 = function apply_1323(arg0){
  return $lambda$68_1(this.$$outer_0, this.toUs_1, arg0);
}
;
function SharedWithCache$lambda$69$Type(){
}

defineClass(2441, $wnd.Function, $intern_22, SharedWithCache$lambda$69$Type);
_.apply_0 = function apply_1324(arg0){
  return $clinit_SharedWithCache() , castTo($collect_0($flatMap_0(castTo(arg0, 47).stream(), makeLambdaFunction(SharedWithCache$lambda$70$Type.prototype.apply_0, SharedWithCache$lambda$70$Type, [])), toMap(makeLambdaFunction(SharedWithCache$lambda$71$Type.prototype.apply_0, SharedWithCache$lambda$71$Type, []), makeLambdaFunction(SharedWithCache$lambda$72$Type.prototype.apply_0, SharedWithCache$lambda$72$Type, []), new Collectors$lambda$44$Type, new Collectors$22methodref$ctor$Type)), 68);
}
;
function SharedWithCache$lambda$7$Type(access_0, toFile_1, names_2, network_3, crypto_4, committer_5){
  this.access_0 = access_0;
  this.toFile_1 = toFile_1;
  this.names_2 = names_2;
  this.network_3 = network_3;
  this.crypto_4 = crypto_4;
  this.committer_5 = committer_5;
}

defineClass(2428, $wnd.Function, $intern_22, SharedWithCache$lambda$7$Type);
_.apply_0 = function apply_1325(arg0){
  return lambda$7_7(this.access_0, this.toFile_1, this.names_2, this.network_3, this.crypto_4, this.committer_5, arg0);
}
;
function SharedWithCache$lambda$70$Type(){
}

defineClass(2496, $wnd.Function, $intern_22, SharedWithCache$lambda$70$Type);
_.apply_0 = function apply_1326(arg0){
  return $clinit_SharedWithCache() , castTo(arg0, 68).entrySet_0().stream();
}
;
function SharedWithCache$lambda$71$Type(){
}

defineClass(2497, $wnd.Function, $intern_22, SharedWithCache$lambda$71$Type);
_.apply_0 = function apply_1327(arg0){
  return $clinit_SharedWithCache() , castTo(castTo(arg0, 40).getKey(), 95);
}
;
function SharedWithCache$lambda$72$Type(){
}

defineClass(2498, $wnd.Function, $intern_22, SharedWithCache$lambda$72$Type);
_.apply_0 = function apply_1328(arg0){
  return $clinit_SharedWithCache() , castTo(castTo(arg0, 40).getValue(), 126);
}
;
function SharedWithCache$lambda$73$Type(){
}

defineClass(1201, $wnd.Function, $intern_22, SharedWithCache$lambda$73$Type);
_.apply_0 = function apply_1329(arg0){
  return $clinit_SharedWithCache() , castTo($collect_0($flatMap_0(castTo(arg0, 68).entrySet_0().stream(), makeLambdaFunction(SharedWithCache$lambda$74$Type.prototype.apply_0, SharedWithCache$lambda$74$Type, [])), toMap(makeLambdaFunction(SharedWithCache$lambda$76$Type.prototype.apply_0, SharedWithCache$lambda$76$Type, []), makeLambdaFunction(SharedWithCache$lambda$77$Type.prototype.apply_0, SharedWithCache$lambda$77$Type, []), new Collectors$lambda$44$Type, new Collectors$22methodref$ctor$Type)), 68);
}
;
function SharedWithCache$lambda$74$Type(){
}

defineClass(2500, $wnd.Function, $intern_22, SharedWithCache$lambda$74$Type);
_.apply_0 = function apply_1330(arg0){
  return $clinit_SharedWithCache() , $map_0(castTo(castTo(arg0, 40).getValue(), 126).readShares.entrySet_0().stream(), makeLambdaFunction(SharedWithCache$lambda$75$Type.prototype.apply_0, SharedWithCache$lambda$75$Type, [castTo(arg0, 40)]));
}
;
function SharedWithCache$lambda$75$Type(e_0){
  this.e_0 = e_0;
}

defineClass(2499, $wnd.Function, $intern_22, SharedWithCache$lambda$75$Type);
_.apply_0 = function apply_1331(arg0){
  return lambda$75_0(this.e_0, arg0);
}
;
function SharedWithCache$lambda$76$Type(){
}

defineClass(2501, $wnd.Function, $intern_22, SharedWithCache$lambda$76$Type);
_.apply_0 = function apply_1332(arg0){
  return $clinit_SharedWithCache() , castTo(castTo(arg0, 20).left, 95);
}
;
function SharedWithCache$lambda$77$Type(){
}

defineClass(2502, $wnd.Function, $intern_22, SharedWithCache$lambda$77$Type);
_.apply_0 = function apply_1333(arg0){
  return $clinit_SharedWithCache() , castTo(castTo(arg0, 20).right, 47);
}
;
function SharedWithCache$lambda$78$Type(){
}

defineClass(1290, $wnd.Function, $intern_22, SharedWithCache$lambda$78$Type);
_.apply_0 = function apply_1334(arg0){
  return $clinit_SharedWithCache() , castTo($collect_0($flatMap_0(castTo(arg0, 68).entrySet_0().stream(), makeLambdaFunction(SharedWithCache$lambda$79$Type.prototype.apply_0, SharedWithCache$lambda$79$Type, [])), toMap(makeLambdaFunction(SharedWithCache$lambda$81$Type.prototype.apply_0, SharedWithCache$lambda$81$Type, []), makeLambdaFunction(SharedWithCache$lambda$82$Type.prototype.apply_0, SharedWithCache$lambda$82$Type, []), new Collectors$lambda$44$Type, new Collectors$22methodref$ctor$Type)), 68);
}
;
function SharedWithCache$lambda$79$Type(){
}

defineClass(2504, $wnd.Function, $intern_22, SharedWithCache$lambda$79$Type);
_.apply_0 = function apply_1335(arg0){
  return $clinit_SharedWithCache() , $map_0(castTo(castTo(arg0, 40).getValue(), 126).writeShares.entrySet_0().stream(), makeLambdaFunction(SharedWithCache$lambda$80$Type.prototype.apply_0, SharedWithCache$lambda$80$Type, [castTo(arg0, 40)]));
}
;
function SharedWithCache$lambda$8$Type(){
}

defineClass(2452, $wnd.Function, {}, SharedWithCache$lambda$8$Type);
_.accept_5 = function accept_119(arg0){
  $clinit_SharedWithCache();
}
;
function SharedWithCache$lambda$80$Type(e_0){
  this.e_0 = e_0;
}

defineClass(2503, $wnd.Function, $intern_22, SharedWithCache$lambda$80$Type);
_.apply_0 = function apply_1336(arg0){
  return lambda$80_1(this.e_0, arg0);
}
;
function SharedWithCache$lambda$81$Type(){
}

defineClass(2505, $wnd.Function, $intern_22, SharedWithCache$lambda$81$Type);
_.apply_0 = function apply_1337(arg0){
  return $clinit_SharedWithCache() , castTo(castTo(arg0, 20).left, 95);
}
;
function SharedWithCache$lambda$82$Type(){
}

defineClass(2506, $wnd.Function, $intern_22, SharedWithCache$lambda$82$Type);
_.apply_0 = function apply_1338(arg0){
  return $clinit_SharedWithCache() , castTo(castTo(arg0, 20).right, 47);
}
;
function SharedWithCache$lambda$83$Type(p_0){
  this.p_0 = p_0;
}

defineClass(1301, $wnd.Function, $intern_22, SharedWithCache$lambda$83$Type);
_.apply_0 = function apply_1339(arg0){
  return lambda$83(this.p_0, arg0);
}
;
function SharedWithCache$lambda$84$Type(p_0){
  this.p_0 = p_0;
}

defineClass(2490, $wnd.Function, $intern_22, SharedWithCache$lambda$84$Type);
_.apply_0 = function apply_1340(arg0){
  return lambda$84(this.p_0, arg0);
}
;
function SharedWithCache$lambda$85$Type($$outer_0, toFile_1, network_2, in_3, committer_4){
  this.$$outer_0 = $$outer_0;
  this.toFile_1 = toFile_1;
  this.network_2 = network_2;
  this.in_3 = in_3;
  this.committer_4 = committer_4;
}

defineClass(2442, $wnd.Function, $intern_22, SharedWithCache$lambda$85$Type);
_.apply_0 = function apply_1341(arg0){
  return $lambda$85_0(this.$$outer_0, this.toFile_1, this.network_2, this.in_3, this.committer_4, arg0);
}
;
function SharedWithCache$lambda$86$Type($$outer_0, transform_1, network_2, committer_3){
  this.$$outer_0 = $$outer_0;
  this.transform_1 = transform_1;
  this.network_2 = network_2;
  this.committer_3 = committer_3;
}

defineClass(2443, $wnd.Function, $intern_22, SharedWithCache$lambda$86$Type);
_.apply_0 = function apply_1342(arg0){
  return $lambda$86_1(this.$$outer_0, this.transform_1, this.network_2, this.committer_3, arg0);
}
;
function SharedWithCache$lambda$87$Type(){
}

defineClass(2491, $wnd.Function, {}, SharedWithCache$lambda$87$Type);
_.accept_5 = function accept_120(arg0){
  $clinit_SharedWithCache();
}
;
function SharedWithCache$lambda$88$Type($$outer_0, network_1){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
}

defineClass(2444, $wnd.Function, $intern_22, SharedWithCache$lambda$88$Type);
_.apply_0 = function apply_1343(arg0){
  return $lambda$88_1(this.$$outer_0, this.network_1, arg0);
}
;
function SharedWithCache$lambda$89$Type($$outer_0, transform_1, network_2, committer_3, toFile_4){
  this.$$outer_0 = $$outer_0;
  this.transform_1 = transform_1;
  this.network_2 = network_2;
  this.committer_3 = committer_3;
  this.toFile_4 = toFile_4;
}

defineClass(2445, $wnd.Function, $intern_22, SharedWithCache$lambda$89$Type);
_.apply_0 = function apply_1344(arg0){
  return $lambda$89_0(this.$$outer_0, this.transform_1, this.network_2, this.committer_3, this.toFile_4, arg0);
}
;
function SharedWithCache$lambda$9$Type(crypto_0, network_1, ourname_2, root_3){
  this.crypto_0 = crypto_0;
  this.network_1 = network_1;
  this.ourname_2 = ourname_2;
  this.root_3 = root_3;
}

defineClass(2467, $wnd.Function, $intern_22, SharedWithCache$lambda$9$Type);
_.apply_0 = function apply_1345(arg0){
  return lambda$9_5(this.crypto_0, this.network_1, this.ourname_2, this.root_3, arg0);
}
;
function SharedWithCache$lambda$90$Type($$outer_0, updated_1, transform_2, network_3, committer_4){
  this.$$outer_0 = $$outer_0;
  this.updated_1 = updated_1;
  this.transform_2 = transform_2;
  this.network_3 = network_3;
  this.committer_4 = committer_4;
}

defineClass(2492, $wnd.Function, $intern_22, SharedWithCache$lambda$90$Type);
_.apply_0 = function apply_1346(arg0){
  return $lambda$90(this.$$outer_0, this.updated_1, this.transform_2, this.network_3, this.committer_4, arg0);
}
;
function SharedWithCache$lambda$91$Type(){
}

defineClass(2493, $wnd.Function, {}, SharedWithCache$lambda$91$Type);
_.accept_5 = function accept_121(arg0){
  $clinit_SharedWithCache();
}
;
function SharedWithCache$lambda$92$Type($$outer_0, after_1, newFilename_2, initialFilename_3, in_4, committer_5, network_6){
  this.$$outer_0 = $$outer_0;
  this.after_1 = after_1;
  this.newFilename_2 = newFilename_2;
  this.initialFilename_3 = initialFilename_3;
  this.in_4 = in_4;
  this.committer_5 = committer_5;
  this.network_6 = network_6;
}

defineClass(2446, $wnd.Function, $intern_22, SharedWithCache$lambda$92$Type);
_.apply_0 = function apply_1347(arg0){
  return $lambda$92_1(this.$$outer_0, this.after_1, this.newFilename_2, this.initialFilename_3, this.in_4, this.committer_5, this.network_6, arg0);
}
;
function SharedWithCache$lambda$93$Type(newFilename_0, sharees_1, initialFilename_2){
  this.newFilename_0 = newFilename_0;
  this.sharees_1 = sharees_1;
  this.initialFilename_2 = initialFilename_2;
}

defineClass(2494, $wnd.Function, $intern_22, SharedWithCache$lambda$93$Type);
_.apply_0 = function apply_1348(arg0){
  return lambda$93(this.newFilename_0, this.sharees_1, this.initialFilename_2, arg0);
}
;
function SharedWithCache$lambda$94$Type(access_0, p_1, names_2){
  this.access_0 = access_0;
  this.p_1 = p_1;
  this.names_2 = names_2;
}

defineClass(2447, $wnd.Function, $intern_22, SharedWithCache$lambda$94$Type);
_.apply_0 = function apply_1349(arg0){
  return lambda$94_1(this.access_0, this.p_1, this.names_2, arg0);
}
;
function SharedWithCache$lambda$95$Type(p_0){
  this.p_0 = p_0;
}

defineClass(2448, $wnd.Function, $intern_22, SharedWithCache$lambda$95$Type);
_.apply_0 = function apply_1350(arg0){
  return lambda$95_1(this.p_0, arg0);
}
;
function SharedWithCache$lambda$96$Type(access_0, p_1, names_2){
  this.access_0 = access_0;
  this.p_1 = p_1;
  this.names_2 = names_2;
}

defineClass(2449, $wnd.Function, $intern_22, SharedWithCache$lambda$96$Type);
_.apply_0 = function apply_1351(arg0){
  return lambda$96_1(this.access_0, this.p_1, this.names_2, arg0);
}
;
function $add_6(this$static, access, filename, names){
  var e, e$iterator, e$iterator0, newReads, newWrites;
  if (names.isEmpty())
    return this$static;
  newReads = new HashMap;
  for (e$iterator0 = this$static.readShares.entrySet_0().iterator(); e$iterator0.hasNext_0();) {
    e = castTo(e$iterator0.next_1(), 40);
    $putStringValue(newReads, castToString(e.getKey()), new HashSet_1(castTo(e.getValue(), 54)));
  }
  newWrites = new HashMap;
  for (e$iterator = this$static.writeShares.entrySet_0().iterator(); e$iterator.hasNext_0();) {
    e = castTo(e$iterator.next_1(), 40);
    $putStringValue(newWrites, castToString(e.getKey()), new HashSet_1(castTo(e.getValue(), 54)));
  }
  if (access == ($clinit_SharedWithCache$Access() , READ)) {
    $putIfAbsent(newReads, filename, new HashSet);
    castTo(filename == null?getEntryValueOrNull($getEntry(newReads.hashCodeMap, null)):$get_4(newReads.stringMap, filename), 47).addAll(names);
  }
   else if (access == WRITE) {
    $putIfAbsent(newWrites, filename, new HashSet);
    castTo(filename == null?getEntryValueOrNull($getEntry(newWrites.hashCodeMap, null)):$get_4(newWrites.stringMap, filename), 47).addAll(names);
  }
  return new SharedWithState(newReads, newWrites);
}

function $clear_6(this$static, filename){
  var e, e$iterator, e$iterator0, newReads, newWrites;
  newReads = new HashMap;
  for (e$iterator0 = this$static.readShares.entrySet_0().iterator(); e$iterator0.hasNext_0();) {
    e = castTo(e$iterator0.next_1(), 40);
    $putStringValue(newReads, castToString(e.getKey()), new HashSet_1(castTo(e.getValue(), 54)));
  }
  newWrites = new HashMap;
  for (e$iterator = this$static.writeShares.entrySet_0().iterator(); e$iterator.hasNext_0();) {
    e = castTo(e$iterator.next_1(), 40);
    $putStringValue(newWrites, castToString(e.getKey()), new HashSet_1(castTo(e.getValue(), 54)));
  }
  filename == null?$remove_5(newReads.hashCodeMap, null):$remove_6(newReads.stringMap, filename);
  filename == null?$remove_5(newWrites.hashCodeMap, null):$remove_6(newWrites.stringMap, filename);
  return new SharedWithState(newReads, newWrites);
}

function $equals_23(this$static, o){
  var that;
  if (maskUndefined(this$static) === maskUndefined(o))
    return true;
  if (o == null || Lpeergos_shared_user_SharedWithState_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 126);
  return equals_28(this$static.readShares, that.readShares) && equals_28(this$static.writeShares, that.writeShares);
}

function $filter_0(this$static, childName){
  var e, e$iterator, e$iterator0, newReads, newWrites;
  if (!this$static.readShares.containsKey(childName) && !this$static.writeShares.containsKey(childName))
    return $clinit_Optional() , $clinit_Optional() , EMPTY;
  newReads = new HashMap;
  for (e$iterator0 = this$static.readShares.entrySet_0().iterator(); e$iterator0.hasNext_0();) {
    e = castTo(e$iterator0.next_1(), 40);
    $equals_0(castToString(e.getKey()), childName) && $putStringValue(newReads, castToString(e.getKey()), new HashSet_1(castTo(e.getValue(), 54)));
  }
  newWrites = new HashMap;
  for (e$iterator = this$static.writeShares.entrySet_0().iterator(); e$iterator.hasNext_0();) {
    e = castTo(e$iterator.next_1(), 40);
    $equals_0(castToString(e.getKey()), childName) && $putStringValue(newWrites, castToString(e.getKey()), new HashSet_1(castTo(e.getValue(), 54)));
  }
  return $clinit_Optional() , new Optional(checkCriticalNotNull(new SharedWithState(newReads, newWrites)));
}

function $get_30(this$static, filename){
  return new FileSharedWithState(castTo(this$static.readShares.getOrDefault(filename, ($clinit_Collections() , $clinit_Collections() , EMPTY_SET)), 47), castTo(this$static.writeShares.getOrDefault(filename, (null , EMPTY_SET)), 47));
}

function $remove_15(this$static, access, filename, names){
  var e, e$iterator, e$iterator0, newReads, newWrites, val;
  newReads = new HashMap;
  for (e$iterator0 = this$static.readShares.entrySet_0().iterator(); e$iterator0.hasNext_0();) {
    e = castTo(e$iterator0.next_1(), 40);
    $putStringValue(newReads, castToString(e.getKey()), new HashSet_1(castTo(e.getValue(), 54)));
  }
  newWrites = new HashMap;
  for (e$iterator = this$static.writeShares.entrySet_0().iterator(); e$iterator.hasNext_0();) {
    e = castTo(e$iterator.next_1(), 40);
    $putStringValue(newWrites, castToString(e.getKey()), new HashSet_1(castTo(e.getValue(), 54)));
  }
  val = access == ($clinit_SharedWithCache$Access() , READ)?castTo(filename == null?getEntryValueOrNull($getEntry(newReads.hashCodeMap, null)):$get_4(newReads.stringMap, filename), 47):castTo(filename == null?getEntryValueOrNull($getEntry(newWrites.hashCodeMap, null)):$get_4(newWrites.stringMap, filename), 47);
  if (val) {
    val.removeAll(names);
    val.isEmpty() && (access == READ?filename == null?$remove_5(newReads.hashCodeMap, null):$remove_6(newReads.stringMap, filename):filename == null?$remove_5(newWrites.hashCodeMap, null):$remove_6(newWrites.stringMap, filename));
  }
  return new SharedWithState(newReads, newWrites);
}

function $toCbor_84(this$static){
  var e, e$iterator, e$iterator0, readState, state, transformed, transformed0, transformed1, writeState;
  state = new TreeMap;
  readState = new TreeMap;
  for (e$iterator0 = this$static.readShares.entrySet_0().iterator(); e$iterator0.hasNext_0();) {
    e = castTo(e$iterator0.next_1(), 40);
    $put_6(readState, castToString(e.getKey()), new CborObject$CborList(castTo($collect_0($map_0(castTo(e.getValue(), 47).stream(), makeLambdaFunction(SharedWithState$0methodref$ctor$Type.prototype.apply_0, SharedWithState$0methodref$ctor$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17)));
  }
  writeState = new TreeMap;
  for (e$iterator = this$static.writeShares.entrySet_0().iterator(); e$iterator.hasNext_0();) {
    e = castTo(e$iterator.next_1(), 40);
    $put_6(writeState, castToString(e.getKey()), new CborObject$CborList(castTo($collect_0($map_0(castTo(e.getValue(), 47).stream(), makeLambdaFunction(SharedWithState$1methodref$ctor$Type.prototype.apply_0, SharedWithState$1methodref$ctor$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17)));
  }
  $put_6(state, 'r', (transformed0 = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(readState), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed0)));
  $put_6(state, 'w', (transformed1 = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(writeState), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed1)));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function SharedWithState(readShares, writeShares){
  this.readShares = readShares;
  this.writeShares = writeShares;
}

function fromCbor_92(cbor){
  var getString, m, r, readShares, w, writehares;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor for SharedWithState!'));
  m = castTo(cbor, 18);
  r = castTo($get_13(m, 'r', makeLambdaFunction(SharedWithState$lambda$2$Type.prototype.apply_0, SharedWithState$lambda$2$Type, [])), 18);
  getString = makeLambdaFunction(SharedWithState$lambda$3$Type.prototype.apply_0, SharedWithState$lambda$3$Type, []);
  readShares = $toMap(r, getString, makeLambdaFunction(SharedWithState$lambda$4$Type.prototype.apply_0, SharedWithState$lambda$4$Type, [getString]));
  w = castTo($get_13(m, 'w', makeLambdaFunction(SharedWithState$lambda$5$Type.prototype.apply_0, SharedWithState$lambda$5$Type, [])), 18);
  writehares = $toMap(w, getString, makeLambdaFunction(SharedWithState$lambda$6$Type.prototype.apply_0, SharedWithState$lambda$6$Type, [getString]));
  return new SharedWithState(readShares, writehares);
}

function lambda$4_7(getString_0, c_1){
  return new HashSet_1($map_2(castTo(c_1, 21), getString_0));
}

function lambda$6_3(getString_0, c_1){
  return new HashSet_1($map_2(castTo(c_1, 21), getString_0));
}

defineClass(126, 1, {7:1, 126:1}, SharedWithState);
_.serialize = function serialize_114(){
  return $toByteArray_2($toCbor_84(this));
}
;
_.equals_0 = function equals_92(o){
  return $equals_23(this, o);
}
;
_.get = function get_109(filename){
  return $get_30(this, filename);
}
;
_.hashCode_1 = function hashCode_90(){
  return hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.readShares, this.writeShares]));
}
;
_.isShared = function isShared(filename){
  return this.readShares.containsKey(filename) || this.writeShares.containsKey(filename);
}
;
_.toCbor = function toCbor_112(){
  return $toCbor_84(this);
}
;
var Lpeergos_shared_user_SharedWithState_2_classLit = createForClass('peergos.shared.user', 'SharedWithState', 126);
function SharedWithState$0methodref$ctor$Type(){
}

defineClass(3231, $wnd.Function, $intern_22, SharedWithState$0methodref$ctor$Type);
_.apply_0 = function apply_1352(arg0){
  return new CborObject$CborString(castToString(arg0));
}
;
function SharedWithState$1methodref$ctor$Type(){
}

defineClass(3232, $wnd.Function, $intern_22, SharedWithState$1methodref$ctor$Type);
_.apply_0 = function apply_1353(arg0){
  return new CborObject$CborString(castToString(arg0));
}
;
function SharedWithState$lambda$2$Type(){
}

defineClass(3233, $wnd.Function, $intern_22, SharedWithState$lambda$2$Type);
_.apply_0 = function apply_1354(arg0){
  return castTo(castTo(arg0, 7), 18);
}
;
function SharedWithState$lambda$3$Type(){
}

defineClass(3234, $wnd.Function, $intern_22, SharedWithState$lambda$3$Type);
_.apply_0 = function apply_1355(arg0){
  return castTo(castTo(arg0, 7), 13).value_0;
}
;
function SharedWithState$lambda$4$Type(getString_0){
  this.getString_0 = getString_0;
}

defineClass(3235, $wnd.Function, $intern_22, SharedWithState$lambda$4$Type);
_.apply_0 = function apply_1356(arg0){
  return lambda$4_7(this.getString_0, arg0);
}
;
function SharedWithState$lambda$5$Type(){
}

defineClass(3236, $wnd.Function, $intern_22, SharedWithState$lambda$5$Type);
_.apply_0 = function apply_1357(arg0){
  return castTo(castTo(arg0, 7), 18);
}
;
function SharedWithState$lambda$6$Type(getString_0){
  this.getString_0 = getString_0;
}

defineClass(3237, $wnd.Function, $intern_22, SharedWithState$lambda$6$Type);
_.apply_0 = function apply_1358(arg0){
  return lambda$6_3(this.getString_0, arg0);
}
;
function $contains_5(this$static, writer){
  return $containsKey_1(this$static.versions, writer);
}

function $get_31(this$static, writer){
  if (!$containsKey_1(this$static.versions, writer.publicKeyHash))
    throw toJs(new IllegalStateException_0('writer not present in snapshot!'));
  return castTo($get_3(this$static.versions, writer.publicKeyHash), 104);
}

function $get_32(this$static, writer){
  if (!$containsKey_1(this$static.versions, writer))
    throw toJs(new IllegalStateException_0('writer not present in snapshot!'));
  return castTo($get_3(this$static.versions, writer), 104);
}

function $lambda$0_27(this$static, s_0){
  return $merge_3(s_0, this$static);
}

function $merge_3(this$static, other){
  var entry, entry$iterator, it, merge;
  merge = new HashMap_1(this$static.versions);
  for (entry$iterator = (it = $entrySet(other.versions).coll.iterator() , new Collections$UnmodifiableMap$UnmodifiableEntrySet$1(it)); entry$iterator.val$it2.hasNext_0();) {
    entry = new Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry(castTo(entry$iterator.val$it2.next_1(), 40));
    if ($containsKey(merge, entry.entry.getKey()) && !$equals_22(castTo($get(merge, entry.entry.getKey()), 104), $get_3(other.versions, entry.entry.getKey())))
      throw toJs(new IllegalStateException_0('Conflicting merge of Snapshots!'));
    $put(merge, castTo(entry.entry.getKey(), 55), castTo(entry.entry.getValue(), 104));
  }
  return new Snapshot(merge);
}

function $mergeAndOverwriteWith(this$static, other){
  var entry, entry$iterator, it, merge;
  merge = new HashMap_1(this$static.versions);
  for (entry$iterator = (it = $entrySet(other.versions).coll.iterator() , new Collections$UnmodifiableMap$UnmodifiableEntrySet$1(it)); entry$iterator.val$it2.hasNext_0();) {
    entry = new Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry(castTo(entry$iterator.val$it2.next_1(), 40));
    $put(merge, castTo(entry.entry.getKey(), 55), castTo(entry.entry.getValue(), 104));
  }
  return new Snapshot(merge);
}

function $withVersion(this$static, writer, version){
  var result;
  result = new HashMap_1(this$static.versions);
  $put_3(result.hashCodeMap, writer, version);
  return new Snapshot(result);
}

function $withWriter(this$static, owner, writer, network){
  if ($containsKey_1(this$static.versions, writer))
    return new CompletableFuture_0(this$static);
  return $thenApply($getValue_0(network.synchronizer, owner, writer), makeLambdaFunction(Snapshot$lambda$0$Type.prototype.apply_0, Snapshot$lambda$0$Type, [this$static]));
}

function Snapshot(versions){
  this.versions = ($clinit_Collections() , new Collections$UnmodifiableMap(versions));
}

function Snapshot_0(writer, base){
  var state;
  state = new HashMap;
  $put_3(state.hashCodeMap, writer, base);
  this.versions = ($clinit_Collections() , new Collections$UnmodifiableMap(state));
}

function lambda$1_16(owner_0, network_1, s_2, writer_3){
  return $withWriter(s_2, owner_0, writer_3, network_1);
}

defineClass(43, 1, {43:1}, Snapshot, Snapshot_0);
_.toString_0 = function toString_81(){
  return toString_5(this.versions.map_0);
}
;
var Lpeergos_shared_user_Snapshot_2_classLit = createForClass('peergos.shared.user', 'Snapshot', 43);
function Snapshot$lambda$0$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1518, $wnd.Function, $intern_22, Snapshot$lambda$0$Type);
_.apply_0 = function apply_1359(arg0){
  return $lambda$0_27(this.$$outer_0, arg0);
}
;
function Snapshot$lambda$1$Type(owner_0, network_1){
  this.owner_0 = owner_0;
  this.network_1 = network_1;
}

defineClass(460, 1, $intern_34, Snapshot$lambda$1$Type);
_.apply_1 = function apply_1360(arg0, arg1){
  return lambda$1_16(this.owner_0, this.network_1, arg0, arg1);
}
;
var Lpeergos_shared_user_Snapshot$lambda$1$Type_2_classLit = createForClass('peergos.shared.user', 'Snapshot/lambda$1$Type', 460);
function Snapshot$lambda$2$Type(){
}

defineClass(461, 1, $intern_34, Snapshot$lambda$2$Type);
_.apply_1 = function apply_1361(arg0, arg1){
  return castTo(arg1, 43);
}
;
var Lpeergos_shared_user_Snapshot$lambda$2$Type_2_classLit = createForClass('peergos.shared.user', 'Snapshot/lambda$2$Type', 461);
function $getFriends_0(this$static){
  var res;
  res = new HashSet_1(castTo($collect_0($map_0(this$static.followingRoots.stream(), makeLambdaFunction(SocialState$lambda$6$Type.prototype.apply_0, SocialState$lambda$6$Type, [])), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47));
  $retainAll(res, this$static.followerRoots.keySet());
  return res;
}

function SocialState(pendingIncoming, pendingOutgoing, actualFollowers, followerRoots, followingRoots, blocked, friendAnnotations, uidToGroupName){
  var actualFollowerRoots, sortedByName;
  this.pendingIncoming = pendingIncoming;
  this.pendingOutgoing = pendingOutgoing;
  actualFollowerRoots = castTo($collect_0($filter(followerRoots.entrySet_0().stream(), new SocialState$lambda$0$Type(actualFollowers)), toMap(makeLambdaFunction(SocialState$lambda$1$Type.prototype.apply_0, SocialState$lambda$1$Type, []), makeLambdaFunction(SocialState$lambda$2$Type.prototype.apply_0, SocialState$lambda$2$Type, []), new Collectors$lambda$44$Type, new Collectors$22methodref$ctor$Type)), 68);
  this.followerRoots = new TreeMap_1(actualFollowerRoots);
  sortedByName = new TreeSet_0(new SocialState$lambda$3$Type);
  $addAll(sortedByName, followingRoots);
  this.followingRoots = sortedByName;
  this.blocked = blocked;
  this.friendAnnotations = friendAnnotations;
  this.uidToGroupName = uidToGroupName;
  this.groupNameToUid = castTo($collect_0(uidToGroupName.entrySet_0().stream(), toMap(makeLambdaFunction(SocialState$lambda$4$Type.prototype.apply_0, SocialState$lambda$4$Type, []), makeLambdaFunction(SocialState$lambda$5$Type.prototype.apply_0, SocialState$lambda$5$Type, []), new Collectors$lambda$44$Type, new Collectors$22methodref$ctor$Type)), 68);
}

defineClass(347, 1, {347:1}, SocialState);
_.getFollowers = function getFollowers(){
  return this.followerRoots.keySet();
}
;
_.getFollowersGroupUid = function getFollowersGroupUid(){
  return castToString(this.groupNameToUid.get('followers'));
}
;
_.getFollowing = function getFollowing(){
  return castTo($collect_0($map_0(this.followingRoots.stream(), makeLambdaFunction(SocialState$lambda$6$Type.prototype.apply_0, SocialState$lambda$6$Type, [])), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47);
}
;
_.getFriends = function getFriends(){
  return $getFriends_0(this);
}
;
_.getFriendsGroupUid = function getFriendsGroupUid(){
  return castToString(this.groupNameToUid.get('friends'));
}
;
var FOLLOWERS_GROUP_NAME = 'followers', FRIENDS_GROUP_NAME = 'friends';
var Lpeergos_shared_user_SocialState_2_classLit = createForClass('peergos.shared.user', 'SocialState', 347);
function SocialState$lambda$0$Type(actualFollowers_0){
  this.actualFollowers_0 = actualFollowers_0;
}

defineClass(837, 1, {}, SocialState$lambda$0$Type);
_.test_0 = function test_32(arg0){
  return this.actualFollowers_0.contains(castTo(arg0, 40).getKey());
}
;
var Lpeergos_shared_user_SocialState$lambda$0$Type_2_classLit = createForClass('peergos.shared.user', 'SocialState/lambda$0$Type', 837);
function SocialState$lambda$1$Type(){
}

defineClass(2526, $wnd.Function, $intern_22, SocialState$lambda$1$Type);
_.apply_0 = function apply_1362(arg0){
  return castToString(castTo(arg0, 40).getKey());
}
;
function SocialState$lambda$2$Type(){
}

defineClass(2527, $wnd.Function, $intern_22, SocialState$lambda$2$Type);
_.apply_0 = function apply_1363(arg0){
  return castTo(castTo(arg0, 40).getValue(), 19);
}
;
function SocialState$lambda$3$Type(){
}

defineClass(838, 1, {}, SocialState$lambda$3$Type);
_.compare_0 = function compare_13(arg0, arg1){
  return $compareTo_5($getName_1(castTo(arg0, 19)), $getName_1(castTo(arg1, 19)));
}
;
_.equals_0 = function equals_93(other){
  return this === other;
}
;
var Lpeergos_shared_user_SocialState$lambda$3$Type_2_classLit = createForClass('peergos.shared.user', 'SocialState/lambda$3$Type', 838);
function SocialState$lambda$4$Type(){
}

defineClass(2528, $wnd.Function, $intern_22, SocialState$lambda$4$Type);
_.apply_0 = function apply_1364(arg0){
  return castToString(castTo(arg0, 40).getValue());
}
;
function SocialState$lambda$5$Type(){
}

defineClass(2529, $wnd.Function, $intern_22, SocialState$lambda$5$Type);
_.apply_0 = function apply_1365(arg0){
  return castToString(castTo(arg0, 40).getKey());
}
;
function SocialState$lambda$6$Type(){
}

defineClass(1206, $wnd.Function, $intern_22, SocialState$lambda$6$Type);
_.apply_0 = function apply_1366(arg0){
  return ($ensureUnmodified(castTo(arg0, 19)) , castTo(arg0, 19).props).name;
}
;
function $toCbor_85(this$static){
  var cborData, contents, transformed;
  cborData = new TreeMap;
  $put_6(cborData, 'version', new CborObject$CborString('1'));
  $put_6(cborData, 'name', new CborObject$CborString($substring_0(this$static.name_0, 0, $wnd.Math.min(this$static.name_0.length, 25))));
  $put_6(cborData, 'lists', new CborObject$CborList(this$static.todoLists));
  contents = new ArrayList;
  $add(contents, new CborObject$CborLong(10));
  $add(contents, (transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(cborData), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed)));
  return new CborObject$CborList(contents);
}

function TodoBoard(name_0, todoLists){
  this.name_0 = name_0;
  this.todoLists = todoLists;
}

function build_15(name_0, todoLists){
  return new TodoBoard(name_0, todoLists);
}

function buildFromJs(name_0, todoLists){
  return new TodoBoard(name_0, new Arrays$ArrayList(todoLists));
}

function fromByteArray_3(data_0){
  return fromCbor_93(deserialize(new CborDecoder(new ByteArrayInputStream(data_0)), data_0.length));
}

function fromCbor_93(cbor){
  var contents, m, mimeType, name_0, todoList, version;
  if (!instanceOf(cbor, 21))
    throw toJs(new IllegalStateException_0('Invalid cbor for TodoList: ' + cbor));
  contents = castTo(cbor, 21).value_0;
  mimeType = castTo(contents.getAtIndex(0), 29).value_0;
  if (compare_1(mimeType, 10) != 0)
    throw toJs(new IllegalStateException_0('Invalid mimetype for TodoList: ' + toString_4(mimeType)));
  m = castTo(contents.getAtIndex(1), 18);
  version = castTo(castTo($get_0(m.values_0, new CborObject$CborString('version')), 7), 13).value_0;
  if (!$equals_0(version, '1')) {
    throw toJs(new IllegalStateException_0('Unsupported version:' + version));
  }
  name_0 = castTo(castTo($get_0(m.values_0, new CborObject$CborString('name')), 7), 13).value_0;
  todoList = castTo($collect_0($map_0(castTo(castTo($get_0(m.values_0, new CborObject$CborString('lists')), 7), 21).value_0.stream(), makeLambdaFunction(TodoBoard$0methodref$fromCbor$Type.prototype.apply_0, TodoBoard$0methodref$fromCbor$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  return new TodoBoard(name_0, todoList);
}

defineClass(409, 1, $intern_67, TodoBoard);
_.serialize = function serialize_115(){
  return $toByteArray_2($toCbor_85(this));
}
;
_.getName = function getName_5(){
  return this.name_0;
}
;
_.getTodoLists = function getTodoLists(){
  return new ArrayList_1(this.todoLists);
}
;
_.toByteArray = function toByteArray_8(){
  return $toByteArray_2($toCbor_85(this));
}
;
_.toCbor = function toCbor_113(){
  return $toCbor_85(this);
}
;
var Lpeergos_shared_user_TodoBoard_2_classLit = createForClass('peergos.shared.user', 'TodoBoard', 409);
function TodoBoard$0methodref$fromCbor$Type(){
}

defineClass(2958, $wnd.Function, $intern_22, TodoBoard$0methodref$fromCbor$Type);
_.apply_0 = function apply_1367(arg0){
  return fromCbor_94(castTo(arg0, 7));
}
;
function $toCbor_86(this$static){
  var cbor, transformed;
  cbor = new TreeMap;
  $put_6(cbor, 'name', new CborObject$CborString($substring_0(this$static.name_0, 0, $wnd.Math.min(this$static.name_0.length, 20))));
  $put_6(cbor, 'id', new CborObject$CborString(this$static.id_0));
  $put_6(cbor, 'items', new CborObject$CborList(this$static.todoItems));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(cbor), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function TodoList(name_0, id_0, todoItems){
  this.name_0 = name_0;
  this.id_0 = id_0;
  this.todoItems = todoItems;
}

function build_16(name_0, id_0, todoItems){
  return new TodoList(name_0, id_0, todoItems);
}

function buildFromJs_0(name_0, id_0, todoItems){
  return new TodoList(name_0, id_0, new Arrays$ArrayList(todoItems));
}

function fromCbor_94(cbor){
  var id_0, m, name_0, todoItems;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('TodoList cbor must be a Map! ' + cbor));
  m = castTo(cbor, 18);
  id_0 = castTo(castTo($get_0(m.values_0, new CborObject$CborString('id')), 7), 13).value_0;
  name_0 = castTo(castTo($get_0(m.values_0, new CborObject$CborString('name')), 7), 13).value_0;
  todoItems = castTo($collect_0($map_0(castTo(castTo($get_0(m.values_0, new CborObject$CborString('items')), 7), 21).value_0.stream(), makeLambdaFunction(TodoList$0methodref$fromCbor$Type.prototype.apply_0, TodoList$0methodref$fromCbor$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  return new TodoList(name_0, id_0, todoItems);
}

defineClass(357, 1, {7:1, 357:1}, TodoList);
_.serialize = function serialize_116(){
  return $toByteArray_2($toCbor_86(this));
}
;
_.getId = function getId(){
  return this.id_0;
}
;
_.getName = function getName_6(){
  return this.name_0;
}
;
_.getTodoItems = function getTodoItems(){
  return new ArrayList_1(this.todoItems);
}
;
_.toCbor = function toCbor_114(){
  return $toCbor_86(this);
}
;
var Lpeergos_shared_user_TodoList_2_classLit = createForClass('peergos.shared.user', 'TodoList', 357);
function TodoList$0methodref$fromCbor$Type(){
}

defineClass(2959, $wnd.Function, $intern_22, TodoList$0methodref$fromCbor$Type);
_.apply_0 = function apply_1368(arg0){
  return fromCbor_95(castTo(arg0, 7));
}
;
function $toCbor_87(this$static){
  var cbor, transformed;
  cbor = new TreeMap;
  $put_6(cbor, 'i', new CborObject$CborString(this$static.Id));
  $put_6(cbor, 'z', new CborObject$CborLong($toEpochSecond(this$static.created, ($clinit_ZoneOffset() , UTC_0))));
  $put_6(cbor, 't', new CborObject$CborString($substring_0(this$static.text, 0, $wnd.Math.min(this$static.text.length, 60))));
  $put_6(cbor, 'c', new CborObject$CborBoolean(this$static.checked));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(cbor), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function TodoListItem(Id, created, text_0, checked){
  this.Id = Id;
  this.created = created;
  this.text = text_0;
  this.checked = checked;
}

function build_17(Id, timeInMillis, text_0, checked){
  var createdDateTime, milliseconds;
  milliseconds = __parseAndValidateLong(timeInMillis);
  createdDateTime = ofEpochSecond(div(milliseconds, $intern_49), 0, ($clinit_ZoneOffset() , UTC_0));
  return new TodoListItem(Id, createdDateTime, text_0, checked);
}

function fromCbor_95(cbor){
  var checked, id_0, map_0, modified, modifiedEpochSeconds, text_0, val;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Incorrect cbor for TodoListItem: ' + cbor));
  map_0 = castTo(cbor, 18);
  id_0 = castTo(castTo($get_0(map_0.values_0, new CborObject$CborString('i')), 7), 13).value_0;
  modifiedEpochSeconds = castTo(castTo($get_0(map_0.values_0, new CborObject$CborString('z')), 7), 29).value_0;
  modified = ofEpochSecond(modifiedEpochSeconds, 0, ($clinit_ZoneOffset() , UTC_0));
  text_0 = castTo(castTo($get_0(map_0.values_0, new CborObject$CborString('t')), 7), 13).value_0;
  checked = (val = castTo(castTo($get_0(map_0.values_0, new CborObject$CborString('c')), 7), 63) , !!val && val.value_0);
  return new TodoListItem(id_0, modified, text_0, checked);
}

defineClass(358, 1, {7:1, 358:1}, TodoListItem);
_.serialize = function serialize_117(){
  return $toByteArray_2($toCbor_87(this));
}
;
_.equals = function equals_94(o){
  var that;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_user_TodoListItem_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 358);
  if (this.Id != null?!$equals_0(this.Id, that.Id):that.Id != null)
    return false;
  if (neq($toEpochSecond(this.created, ($clinit_ZoneOffset() , UTC_0)), $toEpochSecond(that.created, UTC_0))) {
    return false;
  }
  if (this.text != null?!$equals_0(this.text, that.text):that.text != null)
    return false;
  return this.checked == that.checked;
}
;
_.equals_0 = function(o){
  return this.equals(o);
}
;
_.getCreatedAsMillisecondsString = function getCreatedAsMillisecondsString(){
  var milliseconds;
  milliseconds = mul_0($intern_49, $toEpochSecond(this.created, ($clinit_ZoneOffset() , UTC_0)));
  return '' + toString_4(milliseconds);
}
;
_.hashCode = function hashCode_91(){
  return hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.Id, this.created, this.text, ($clinit_Boolean() , this.checked?true:false)]));
}
;
_.hashCode_1 = function(){
  return this.hashCode();
}
;
_.toCbor = function toCbor_115(){
  return $toCbor_87(this);
}
;
_.toString = function toString_82(){
  return ' Id:' + this.Id + ' created:' + this.created + ' text:' + this.text + ' checked:' + this.checked;
}
;
_.toString_0 = function(){
  return this.toString();
}
;
_.checked = false;
var Lpeergos_shared_user_TodoListItem_2_classLit = createForClass('peergos.shared.user', 'TodoListItem', 358);
function $getChain_1(this$static, username){
  return castTo($getOrDefault(this$static.chains, username, castTo($getOrDefault(this$static.expired, username, ($clinit_Collections() , $clinit_Collections() , EMPTY_LIST)), 17)), 17);
}

function $getPublicKey(this$static, username){
  var chain, expiredChain;
  chain = castTo($getStringValue(this$static.chains, username), 17);
  if (!chain) {
    expiredChain = castTo($getStringValue(this$static.expired, username), 17);
    if (!expiredChain)
      return $clinit_Optional() , $clinit_Optional() , EMPTY;
    return $clinit_Optional() , new Optional(checkCriticalNotNull(castTo(expiredChain.getAtIndex(expiredChain.size() - 1), 72).owner));
  }
  return $clinit_Optional() , new Optional(checkCriticalNotNull(castTo(chain.getAtIndex(chain.size() - 1), 72).owner));
}

function $getUsername_1(this$static, signer){
  var name_0;
  name_0 = castToString($get(this$static.reverseLookup, signer));
  return $clinit_Optional() , name_0 == null?EMPTY:new Optional(checkCriticalNotNull(name_0));
}

function $lambda$0_28(this$static, username_1, tail_2, ipfs_3, valid_3){
  var existing, isExpired, last, mergedFuture, withoutExpiredClaim;
  if (!(checkCriticalNotNull(valid_3) , valid_3))
    throw toJs(new IllegalStateException_0('Trying to update with invalid keychain!'));
  last = castTo(tail_2.getAtIndex(tail_2.size() - 1), 72);
  existing = castTo($getOrDefault(this$static.chains, username_1, castTo($getOrDefault(this$static.expired, username_1, ($clinit_Collections() , $clinit_Collections() , EMPTY_LIST)), 17)), 17);
  if (!existing.isEmpty() && $equals_8(castTo(existing.getAtIndex(existing.size() - 1), 72), tail_2.getAtIndex(tail_2.size() - 1)))
    return new CompletableFuture_0(($clinit_Boolean() , false));
  isExpired = existing.size() > 0 && $compareTo_8(castTo(existing.getAtIndex(existing.size() - 1), 72).claim.expiry, ($clinit_LocalDate() , now_3())) < 0;
  if (isExpired) {
    withoutExpiredClaim = existing.subList(0, existing.size() - 1);
    if (withoutExpiredClaim.size() == 0 && !equals_16($toByteArray_2(new CborObject$CborMerkleLink(castTo(existing.getAtIndex(0), 72).owner.target)), $toByteArray_2(new CborObject$CborMerkleLink(castTo(tail_2.getAtIndex(0), 72).owner.target))))
      throw toJs(new IllegalStateException_0('Trying to update a username claim with a different key! ' + bytesToHex($toByteArray_2(new CborObject$CborMerkleLink(castTo(existing.getAtIndex(0), 72).owner.target))) + ' != ' + bytesToHex($toByteArray_2(new CborObject$CborMerkleLink(castTo(tail_2.getAtIndex(0), 72).owner.target)))));
    $removeStringValue(this$static.expired, username_1);
  }
  mergedFuture = merge_3(existing, tail_2, ipfs_3);
  return $thenApply(mergedFuture, makeLambdaFunction(TofuKeyStore$lambda$1$Type.prototype.apply_0, TofuKeyStore$lambda$1$Type, [this$static, username_1, last]));
}

function $lambda$1_24(this$static, username_1, last_2, merged_2){
  var owner;
  $putStringValue(this$static.chains, username_1, merged_2);
  owner = last_2.owner;
  $put(this$static.reverseLookup, owner, username_1);
  return $clinit_Boolean() , true;
}

function $toCbor_88(this$static){
  var serialise, state, transformed;
  state = new TreeMap;
  serialise = new TofuKeyStore$lambda$4$Type(state);
  $accept_1(serialise, this$static.chains);
  $accept_1(serialise, this$static.expired);
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function $updateChain(this$static, username, tail, ipfs){
  return $thenCompose(validChain(tail, username, ipfs), makeLambdaFunction(TofuKeyStore$lambda$0$Type.prototype.apply_0, TofuKeyStore$lambda$0$Type, [this$static, username, tail, ipfs]));
}

function TofuKeyStore(){
  TofuKeyStore_0.call(this, new HashMap, new HashMap);
}

function TofuKeyStore_0(chains, expired){
  this.reverseLookup = new HashMap;
  this.chains = chains;
  this.expired = expired;
  $reset(this.reverseLookup);
  $putAll(this.reverseLookup, castTo(concat(new StreamImpl(null, new Spliterators$IteratorSpliterator(new AbstractHashMap$EntrySet(this.chains), 1)), new StreamImpl(null, new Spliterators$IteratorSpliterator(new AbstractHashMap$EntrySet(this.expired), 1))).collect_0(toMap(makeLambdaFunction(TofuKeyStore$lambda$2$Type.prototype.apply_0, TofuKeyStore$lambda$2$Type, []), makeLambdaFunction(TofuKeyStore$lambda$3$Type.prototype.apply_0, TofuKeyStore$lambda$3$Type, []), new Collectors$lambda$44$Type, new Collectors$22methodref$ctor$Type)), 68));
}

function fromCbor_96(cbor){
  var chains, expired;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor for Tofu key store: ' + cbor));
  chains = new HashMap;
  expired = new HashMap;
  $applyToAll(castTo(cbor, 18), new TofuKeyStore$lambda$7$Type(expired, chains));
  return new TofuKeyStore_0(chains, expired);
}

function lambda$4_8(state_0, map_1){
  map_1.forEach_0(new TofuKeyStore$lambda$5$Type(state_0));
}

function lambda$7_8(expired_0, chains_1, name_2, value_3){
  var chain;
  if (instanceOf(value_3, 21)) {
    chain = castTo($collect_0($map_0(castTo(value_3, 21).value_0.stream(), makeLambdaFunction(TofuKeyStore$0methodref$fromCbor$Type.prototype.apply_0, TofuKeyStore$0methodref$fromCbor$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
    $compareTo_8(castTo(chain.getAtIndex(chain.size() - 1), 72).claim.expiry, ($clinit_LocalDate() , now_3())) < 0?name_2 == null?$put_3(expired_0.hashCodeMap, null, chain):$put_4(expired_0.stringMap, name_2, chain):name_2 == null?$put_3(chains_1.hashCodeMap, null, chain):$put_4(chains_1.stringMap, name_2, chain);
  }
   else 
    throw toJs(new IllegalStateException_0('Invalid value in Tofu key store map: ' + value_3));
}

defineClass(437, 1, $intern_67, TofuKeyStore, TofuKeyStore_0);
_.serialize = function serialize_118(){
  return $toByteArray_2($toCbor_88(this));
}
;
_.toCbor = function toCbor_116(){
  return $toCbor_88(this);
}
;
var Lpeergos_shared_user_TofuKeyStore_2_classLit = createForClass('peergos.shared.user', 'TofuKeyStore', 437);
function TofuKeyStore$0methodref$fromCbor$Type(){
}

defineClass(3534, $wnd.Function, $intern_22, TofuKeyStore$0methodref$fromCbor$Type);
_.apply_0 = function apply_1369(arg0){
  return fromCbor_4(castTo(arg0, 7));
}
;
function TofuKeyStore$lambda$0$Type($$outer_0, username_1, tail_2, ipfs_3){
  this.$$outer_0 = $$outer_0;
  this.username_1 = username_1;
  this.tail_2 = tail_2;
  this.ipfs_3 = ipfs_3;
}

defineClass(3532, $wnd.Function, $intern_22, TofuKeyStore$lambda$0$Type);
_.apply_0 = function apply_1370(arg0){
  return $lambda$0_28(this.$$outer_0, this.username_1, this.tail_2, this.ipfs_3, arg0);
}
;
function TofuKeyStore$lambda$1$Type($$outer_0, username_1, last_2){
  this.$$outer_0 = $$outer_0;
  this.username_1 = username_1;
  this.last_2 = last_2;
}

defineClass(3533, $wnd.Function, $intern_22, TofuKeyStore$lambda$1$Type);
_.apply_0 = function apply_1371(arg0){
  return $lambda$1_24(this.$$outer_0, this.username_1, this.last_2, arg0);
}
;
function TofuKeyStore$lambda$2$Type(){
}

defineClass(3530, $wnd.Function, $intern_22, TofuKeyStore$lambda$2$Type);
_.apply_0 = function apply_1372(arg0){
  return castTo(castTo(castTo(arg0, 40).getValue(), 17).getAtIndex(castTo(castTo(arg0, 40).getValue(), 17).size() - 1), 72).owner;
}
;
function TofuKeyStore$lambda$3$Type(){
}

defineClass(3531, $wnd.Function, $intern_22, TofuKeyStore$lambda$3$Type);
_.apply_0 = function apply_1373(arg0){
  return castToString(castTo(arg0, 40).getKey());
}
;
function $accept_1(this$static, arg0){
  lambda$4_8(this$static.state_0, arg0);
}

function TofuKeyStore$lambda$4$Type(state_0){
  this.state_0 = state_0;
}

defineClass(1163, 1, $intern_32, TofuKeyStore$lambda$4$Type);
_.accept = function accept_122(arg0){
  $accept_1(this, arg0);
}
;
_.andThen = function andThen_63(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_TofuKeyStore$lambda$4$Type_2_classLit = createForClass('peergos.shared.user', 'TofuKeyStore/lambda$4$Type', 1163);
function $accept_2(this$static, arg0, arg1){
  $put_6(this$static.state_0, castToString(arg0), new CborObject$CborList(castTo($collect_0($map_0(castTo(arg1, 17).stream(), makeLambdaFunction(TofuKeyStore$lambda$6$Type.prototype.apply_0, TofuKeyStore$lambda$6$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17)));
}

function TofuKeyStore$lambda$5$Type(state_0){
  this.state_0 = state_0;
}

defineClass(1162, 1, {}, TofuKeyStore$lambda$5$Type);
_.accept_2 = function accept_123(arg0, arg1){
  $accept_2(this, arg0, arg1);
}
;
var Lpeergos_shared_user_TofuKeyStore$lambda$5$Type_2_classLit = createForClass('peergos.shared.user', 'TofuKeyStore/lambda$5$Type', 1162);
function TofuKeyStore$lambda$6$Type(){
}

defineClass(3535, $wnd.Function, $intern_22, TofuKeyStore$lambda$6$Type);
_.apply_0 = function apply_1374(arg0){
  return $toCbor_3(castTo(arg0, 72));
}
;
function $accept_3(this$static, arg0, arg1){
  lambda$7_8(this$static.expired_0, this$static.chains_1, arg0, arg1);
}

function TofuKeyStore$lambda$7$Type(expired_0, chains_1){
  this.expired_0 = expired_0;
  this.chains_1 = chains_1;
}

defineClass(1164, 1, {}, TofuKeyStore$lambda$7$Type);
_.accept_2 = function accept_124(arg0, arg1){
  $accept_3(this, arg0, arg1);
}
;
var Lpeergos_shared_user_TofuKeyStore$lambda$7$Type_2_classLit = createForClass('peergos.shared.user', 'TofuKeyStore/lambda$7$Type', 1164);
function $clinit_TrieNodeImpl(){
  $clinit_TrieNodeImpl = emptyMethod;
  LOG_4 = ($clinit_Logger() , getLogger());
}

function $lambda$0_29(this$static, network_1, hasher_2, n_2){
  return $exceptionally($thenCompose(n_2.getByPath('', hasher_2, network_1), makeLambdaFunction(TrieNodeImpl$lambda$1$Type.prototype.apply_0, TrieNodeImpl$lambda$1$Type, [this$static, network_1])), makeLambdaFunction(TrieNodeImpl$lambda$6$Type.prototype.apply_0, TrieNodeImpl$lambda$6$Type, []));
}

function $lambda$1_25(this$static, network_1, child_1){
  return castTo($orElseGet($map(child_1, makeLambdaFunction(TrieNodeImpl$lambda$2$Type.prototype.apply_0, TrieNodeImpl$lambda$2$Type, [this$static, network_1])), new TrieNodeImpl$lambda$5$Type), 87);
}

function $lambda$10_8(this$static, f_0){
  return new FileWrapper(($clinit_Optional() , new Optional(checkCriticalNotNull(this$static))), f_0.pointer, f_0.linkPointer, f_0.entryWriter, f_0.ownername, f_0.version);
}

function $lambda$16_9(this$static, network_1, hasher_2, opt_2){
  if (opt_2.ref != null) {
    if ((checkCriticalElement(opt_2.ref != null) , castTo(opt_2.ref, 19)).isWritable_0)
      return $thenApply($getAnyLinkPointer((checkCriticalElement(opt_2.ref != null) , castTo(opt_2.ref, 19)), network_1), makeLambdaFunction(TrieNodeImpl$lambda$17$Type.prototype.apply_0, TrieNodeImpl$lambda$17$Type, [opt_2]));
    return new CompletableFuture_0($map(opt_2, makeLambdaFunction(TrieNodeImpl$lambda$19$Type.prototype.apply_0, TrieNodeImpl$lambda$19$Type, [this$static])));
  }
  return findFirst($values(this$static.children), makeLambdaFunction(TrieNodeImpl$lambda$0$Type.prototype.apply_0, TrieNodeImpl$lambda$0$Type, [this$static, network_1, hasher_2]));
}

function $lambda$19_7(this$static, f_0){
  return new FileWrapper(($clinit_Optional() , new Optional(checkCriticalNotNull(this$static))), f_0.pointer, f_0.linkPointer, f_0.entryWriter, f_0.ownername, f_0.version);
}

function $lambda$2_22(this$static, network_1, c_1){
  return $thenApply(($ensureUnmodified(c_1) , retrieveParent(castTo($orElse(c_1.linkPointer, c_1.pointer), 83), c_1.ownername, c_1.version, network_1)), makeLambdaFunction(TrieNodeImpl$lambda$3$Type.prototype.apply_0, TrieNodeImpl$lambda$3$Type, [this$static]));
}

function $lambda$21_7(this$static, hasher_1, network_2, dir_2){
  var identity, kids;
  if (dir_2.ref != null)
    return $thenCompose($getChildren_4((checkCriticalElement(dir_2.ref != null) , castTo(dir_2.ref, 19)), hasher_1, network_2), makeLambdaFunction(TrieNodeImpl$lambda$22$Type.prototype.apply_0, TrieNodeImpl$lambda$22$Type, [this$static, hasher_1, network_2, dir_2]));
  return kids = castTo($collect_0($map_0(new StreamImpl(null, new Spliterators$IteratorSpliterator($values(this$static.children), 0)), makeLambdaFunction(TrieNodeImpl$lambda$12$Type.prototype.apply_0, TrieNodeImpl$lambda$12$Type, [hasher_1, network_2])), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47) , $thenApply((identity = new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_SET)) , castTo($reduce(kids.stream(), identity, new Futures$lambda$0$Type), 6)), makeLambdaFunction(TrieNodeImpl$lambda$13$Type.prototype.apply_0, TrieNodeImpl$lambda$13$Type, []));
}

function $lambda$22_4(this$static, hasher_1, network_2, dir_3, kids_3){
  var futures, identity;
  if ((checkCriticalElement(dir_3.ref != null) , castTo(dir_3.ref, 19)).isWritable_0)
    return new CompletableFuture_0(kids_3);
  futures = castTo($collect_0($map_0(kids_3.stream(), makeLambdaFunction(TrieNodeImpl$lambda$23$Type.prototype.apply_0, TrieNodeImpl$lambda$23$Type, [this$static, hasher_1, network_2])), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47);
  return identity = new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_SET)) , castTo($reduce(futures.stream(), identity, new Futures$lambda$0$Type), 6);
}

function $lambda$23_5(this$static, hasher_1, network_2, child_2){
  return $containsKey_1(this$static.children, ($ensureUnmodified(child_2) , child_2.props).name)?$thenApply(castTo($get_3(this$static.children, ($ensureUnmodified(child_2) , child_2.props).name), 110).getByPath('', hasher_1, network_2), makeLambdaFunction(TrieNodeImpl$lambda$24$Type.prototype.apply_0, TrieNodeImpl$lambda$24$Type, [])):new CompletableFuture_0(child_2);
}

function $lambda$29_3(this$static, version_1, hasher_2, network_3, dir_3){
  var identity, kids;
  if (dir_3.ref != null)
    return $thenCompose($getChildren_5((checkCriticalElement(dir_3.ref != null) , castTo(dir_3.ref, 19)), version_1, hasher_2, network_3), makeLambdaFunction(TrieNodeImpl$lambda$30$Type.prototype.apply_0, TrieNodeImpl$lambda$30$Type, [this$static, version_1, hasher_2, network_3, dir_3]));
  return kids = castTo($collect_0($map_0(new StreamImpl(null, new Spliterators$IteratorSpliterator($values(this$static.children), 0)), makeLambdaFunction(TrieNodeImpl$lambda$12$Type.prototype.apply_0, TrieNodeImpl$lambda$12$Type, [hasher_2, network_3])), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47) , $thenApply((identity = new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_SET)) , castTo($reduce(kids.stream(), identity, new Futures$lambda$0$Type), 6)), makeLambdaFunction(TrieNodeImpl$lambda$13$Type.prototype.apply_0, TrieNodeImpl$lambda$13$Type, []));
}

function $lambda$3_21(this$static, opt_0){
  return $map(opt_0, makeLambdaFunction(TrieNodeImpl$lambda$4$Type.prototype.apply_0, TrieNodeImpl$lambda$4$Type, [this$static]));
}

function $lambda$30_5(this$static, version_1, hasher_2, network_3, dir_4, kids_4){
  var futures, identity;
  if ((checkCriticalElement(dir_4.ref != null) , castTo(dir_4.ref, 19)).isWritable_0)
    return new CompletableFuture_0(kids_4);
  futures = castTo($collect_0($map_0(kids_4.stream(), makeLambdaFunction(TrieNodeImpl$lambda$31$Type.prototype.apply_0, TrieNodeImpl$lambda$31$Type, [this$static, version_1, hasher_2, network_3])), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47);
  return identity = new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_SET)) , castTo($reduce(futures.stream(), identity, new Futures$lambda$0$Type), 6);
}

function $lambda$31_5(this$static, version_1, hasher_2, network_3, child_3){
  return $containsKey_1(this$static.children, ($ensureUnmodified(child_3) , child_3.props).name)?$thenApply(castTo($get_3(this$static.children, ($ensureUnmodified(child_3) , child_3.props).name), 110).getByPath_0('', version_1, hasher_2, network_3), makeLambdaFunction(TrieNodeImpl$lambda$32$Type.prototype.apply_0, TrieNodeImpl$lambda$32$Type, [])):new CompletableFuture_0(child_3);
}

function $lambda$4_15(this$static, f_0){
  return new FileWrapper(($clinit_Optional() , new Optional(checkCriticalNotNull(this$static))), f_0.pointer, f_0.linkPointer, f_0.entryWriter, f_0.ownername, f_0.version);
}

function $lambda$7_8(this$static, network_1, hasher_2, opt_2){
  if (opt_2.ref != null) {
    if ((checkCriticalElement(opt_2.ref != null) , castTo(opt_2.ref, 19)).isWritable_0)
      return $thenApply($getAnyLinkPointer((checkCriticalElement(opt_2.ref != null) , castTo(opt_2.ref, 19)), network_1), makeLambdaFunction(TrieNodeImpl$lambda$8$Type.prototype.apply_0, TrieNodeImpl$lambda$8$Type, [opt_2]));
    return new CompletableFuture_0($map(opt_2, makeLambdaFunction(TrieNodeImpl$lambda$10$Type.prototype.apply_0, TrieNodeImpl$lambda$10$Type, [this$static])));
  }
  return findFirst($values(this$static.children), makeLambdaFunction(TrieNodeImpl$lambda$0$Type.prototype.apply_0, TrieNodeImpl$lambda$0$Type, [this$static, network_1, hasher_2]));
}

function $put_27(this$static, path, e){
  var elements, existing, newChild, newChildren;
  ensureValidPath(path);
  $info(LOG_4, 'Entrie.put(' + path + ')');
  path = canonicalise_0(path);
  if (path.length == 0) {
    return new TrieNodeImpl(this$static.children, ($clinit_Optional() , new Optional(checkCriticalNotNull(e))));
  }
  elements = $split(path, '/');
  existing = castTo($getOrDefault_0(this$static.children, elements[0], new TrieNodeImpl(($clinit_Collections() , $clinit_Collections() , EMPTY_MAP), ($clinit_Optional() , $clinit_Optional() , EMPTY))), 110);
  newChild = existing.put($substring(path, elements[0].length), e);
  newChildren = new HashMap_1(this$static.children);
  $putStringValue(newChildren, elements[0], newChild);
  return new TrieNodeImpl(newChildren, this$static.value_0);
}

function $removeEntry_0(this$static, path){
  var elements, existing, newChild, newChildren;
  $info(LOG_4, 'Entrie.rm(' + path + ')');
  path = canonicalise_0(path);
  if (path.length == 0) {
    return new TrieNodeImpl(this$static.children, ($clinit_Optional() , $clinit_Optional() , EMPTY));
  }
  elements = $split(path, '/');
  existing = castTo($getOrDefault_0(this$static.children, elements[0], new TrieNodeImpl(($clinit_Collections() , $clinit_Collections() , EMPTY_MAP), ($clinit_Optional() , $clinit_Optional() , EMPTY))), 110);
  newChild = existing.removeEntry($substring(path, elements[0].length));
  newChildren = new HashMap_1(this$static.children);
  newChild.children.map_0.size() == 0 && newChild.value_0.ref == null?$removeStringValue(newChildren, elements[0]):$putStringValue(newChildren, elements[0], newChild);
  return new TrieNodeImpl(newChildren, this$static.value_0);
}

function TrieNodeImpl(children, value_0){
  $clinit_TrieNodeImpl();
  this.children = ($clinit_Collections() , new Collections$UnmodifiableMap(children));
  this.value_0 = value_0;
}

function empty_6(){
  $clinit_TrieNodeImpl();
  return new TrieNodeImpl(($clinit_Collections() , $clinit_Collections() , EMPTY_MAP), ($clinit_Optional() , $clinit_Optional() , EMPTY));
}

function lambda$11_8(finalPath_0, hasher_1, network_2, dir_3){
  $clinit_TrieNodeImpl();
  return $getDescendentByPath((checkCriticalElement(dir_3.ref != null) , castTo(dir_3.ref, 19)), finalPath_0, hasher_1, network_2);
}

function lambda$12_4(hasher_0, network_1, t_2){
  $clinit_TrieNodeImpl();
  return t_2.getByPath('', hasher_0, network_1);
}

function lambda$18_4(linkOpt_0, f_1){
  $clinit_TrieNodeImpl();
  return new FileWrapper(f_1.capTrie, f_1.pointer, linkOpt_0, f_1.entryWriter, f_1.ownername, f_1.version);
}

function lambda$20_3(finalPath_0, hasher_1, network_2, dir_3){
  $clinit_TrieNodeImpl();
  return $getDescendentByPath((checkCriticalElement(dir_3.ref != null) , castTo(dir_3.ref, 19)), finalPath_0, hasher_1, network_2);
}

function lambda$25_3(hasher_0, network_1, trimmedPath_2, dir_3){
  $clinit_TrieNodeImpl();
  return $thenCompose($getDescendentByPath((checkCriticalElement(dir_3.ref != null) , castTo(dir_3.ref, 19)), trimmedPath_2, hasher_0, network_1), makeLambdaFunction(TrieNodeImpl$lambda$26$Type.prototype.apply_0, TrieNodeImpl$lambda$26$Type, [hasher_0, network_1]));
}

function lambda$26_2(hasher_0, network_1, parent_2){
  $clinit_TrieNodeImpl();
  return castTo($orElseGet($map(parent_2, makeLambdaFunction(TrieNodeImpl$lambda$27$Type.prototype.apply_0, TrieNodeImpl$lambda$27$Type, [hasher_0, network_1])), new TrieNodeImpl$lambda$28$Type), 87);
}

function lambda$27_2(hasher_0, network_1, p_2){
  $clinit_TrieNodeImpl();
  return $getChildren_4(p_2, hasher_0, network_1);
}

function lambda$33_1(version_0, hasher_1, network_2, trimmedPath_3, dir_4){
  $clinit_TrieNodeImpl();
  return $thenCompose($getDescendentByPath((checkCriticalElement(dir_4.ref != null) , castTo(dir_4.ref, 19)), trimmedPath_3, hasher_1, network_2), makeLambdaFunction(TrieNodeImpl$lambda$34$Type.prototype.apply_0, TrieNodeImpl$lambda$34$Type, [version_0, hasher_1, network_2]));
}

function lambda$34_2(version_0, hasher_1, network_2, parent_3){
  $clinit_TrieNodeImpl();
  return castTo($orElseGet($map(parent_3, makeLambdaFunction(TrieNodeImpl$lambda$35$Type.prototype.apply_0, TrieNodeImpl$lambda$35$Type, [version_0, hasher_1, network_2])), new TrieNodeImpl$lambda$36$Type), 87);
}

function lambda$35_2(version_0, hasher_1, network_2, p_3){
  $clinit_TrieNodeImpl();
  return $getChildren_5(p_3, version_0, hasher_1, network_2);
}

function lambda$9_6(linkOpt_0, f_1){
  $clinit_TrieNodeImpl();
  return new FileWrapper(f_1.capTrie, f_1.pointer, linkOpt_0, f_1.entryWriter, f_1.ownername, f_1.version);
}

defineClass(153, 1, {110:1}, TrieNodeImpl);
_.put = function put_37(path, e){
  return $put_27(this, path, e);
}
;
_.removeEntry = function removeEntry_1(path){
  return $removeEntry_0(this, path);
}
;
_.getByPath = function getByPath_3(path, hasher, network){
  var elements, finalPath;
  ensureValidPath(path);
  $info(LOG_4, 'GetByPath: ' + path);
  finalPath = canonicalise_0(path);
  if (finalPath.length == 0) {
    if (this.value_0.ref == null) {
      return findFirst($values(this.children), makeLambdaFunction(TrieNodeImpl$lambda$0$Type.prototype.apply_0, TrieNodeImpl$lambda$0$Type, [this, network, hasher]));
    }
    return $thenCompose($retrieveEntryPoint(network, castTo($get_6(this.value_0), 60)), makeLambdaFunction(TrieNodeImpl$lambda$7$Type.prototype.apply_0, TrieNodeImpl$lambda$7$Type, [this, network, hasher]));
  }
  elements = $split(finalPath, '/');
  if (this.value_0.ref != null && (castTo($get_6(this.value_0), 60).pointer.wBaseKey.ref != null || !$containsKey_1(this.children, elements[0])))
    return $thenCompose($retrieveEntryPoint(network, castTo($get_6(this.value_0), 60)), makeLambdaFunction(TrieNodeImpl$lambda$11$Type.prototype.apply_0, TrieNodeImpl$lambda$11$Type, [finalPath, hasher, network]));
  if (!$containsKey_1(this.children, elements[0]))
    return new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY));
  return castTo($get_3(this.children, elements[0]), 110).getByPath($substring(finalPath, elements[0].length), hasher, network);
}
;
_.getByPath_0 = function getByPath_4(path, version, hasher, network){
  var elements, finalPath;
  ensureValidPath(path);
  $info(LOG_4, 'GetByPath: ' + path);
  finalPath = canonicalise_0(path);
  if (finalPath.length == 0) {
    if (this.value_0.ref == null) {
      return findFirst($values(this.children), makeLambdaFunction(TrieNodeImpl$lambda$0$Type.prototype.apply_0, TrieNodeImpl$lambda$0$Type, [this, network, hasher]));
    }
    return $thenCompose($getFile(network, castTo($get_6(this.value_0), 60), version), makeLambdaFunction(TrieNodeImpl$lambda$16$Type.prototype.apply_0, TrieNodeImpl$lambda$16$Type, [this, network, hasher]));
  }
  elements = $split(finalPath, '/');
  if (this.value_0.ref != null && (castTo($get_6(this.value_0), 60).pointer.wBaseKey.ref != null || !$containsKey_1(this.children, elements[0])))
    return $thenCompose($getFile_0(network, version, castTo($get_6(this.value_0), 60).pointer, ($clinit_Optional() , $clinit_Optional() , EMPTY), castTo($get_6(this.value_0), 60).ownerName), makeLambdaFunction(TrieNodeImpl$lambda$20$Type.prototype.apply_0, TrieNodeImpl$lambda$20$Type, [finalPath, hasher, network]));
  if (!$containsKey_1(this.children, elements[0]))
    return new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY));
  return castTo($get_3(this.children, elements[0]), 110).getByPath_0($substring(finalPath, elements[0].length), version, hasher, network);
}
;
_.getChildNames = function getChildNames_1(){
  return $keySet(this.children);
}
;
_.getChildNode = function getChildNode_1(name_0){
  return castTo($get_3(this.children, name_0), 110);
}
;
_.getChildNodes = function getChildNodes_1(){
  return $values(this.children);
}
;
_.getChildren = function getChildren_3(path, hasher, network){
  var elements, identity, kids, trimmedPath;
  ensureValidPath(path);
  trimmedPath = canonicalise_0(path);
  if (trimmedPath.length == 0) {
    if (this.value_0.ref == null) {
      return kids = castTo($collect_0($map_0(new StreamImpl(null, new Spliterators$IteratorSpliterator($values(this.children), 0)), makeLambdaFunction(TrieNodeImpl$lambda$12$Type.prototype.apply_0, TrieNodeImpl$lambda$12$Type, [hasher, network])), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47) , $thenApply((identity = new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_SET)) , castTo($reduce(kids.stream(), identity, new Futures$lambda$0$Type), 6)), makeLambdaFunction(TrieNodeImpl$lambda$13$Type.prototype.apply_0, TrieNodeImpl$lambda$13$Type, []));
    }
    return $thenCompose($retrieveEntryPoint(network, castTo($get_6(this.value_0), 60)), makeLambdaFunction(TrieNodeImpl$lambda$21$Type.prototype.apply_0, TrieNodeImpl$lambda$21$Type, [this, hasher, network]));
  }
  elements = $split(trimmedPath, '/');
  if (!$containsKey_1(this.children, elements[0]))
    return $thenCompose($retrieveEntryPoint(network, castTo($get_6(this.value_0), 60)), makeLambdaFunction(TrieNodeImpl$lambda$25$Type.prototype.apply_0, TrieNodeImpl$lambda$25$Type, [hasher, network, trimmedPath]));
  return castTo($get_3(this.children, elements[0]), 110).getChildren($substring(trimmedPath, elements[0].length), hasher, network);
}
;
_.getChildren_0 = function getChildren_4(path, hasher, version, network){
  var elements, identity, kids, trimmedPath;
  ensureValidPath(path);
  trimmedPath = canonicalise_0(path);
  if (trimmedPath.length == 0) {
    if (this.value_0.ref == null) {
      return kids = castTo($collect_0($map_0(new StreamImpl(null, new Spliterators$IteratorSpliterator($values(this.children), 0)), makeLambdaFunction(TrieNodeImpl$lambda$12$Type.prototype.apply_0, TrieNodeImpl$lambda$12$Type, [hasher, network])), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47) , $thenApply((identity = new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_SET)) , castTo($reduce(kids.stream(), identity, new Futures$lambda$0$Type), 6)), makeLambdaFunction(TrieNodeImpl$lambda$13$Type.prototype.apply_0, TrieNodeImpl$lambda$13$Type, []));
    }
    return $thenCompose($getFile(network, castTo($get_6(this.value_0), 60), version), makeLambdaFunction(TrieNodeImpl$lambda$29$Type.prototype.apply_0, TrieNodeImpl$lambda$29$Type, [this, version, hasher, network]));
  }
  elements = $split(trimmedPath, '/');
  if (!$containsKey_1(this.children, elements[0]))
    return $thenCompose($getFile(network, castTo($get_6(this.value_0), 60), version), makeLambdaFunction(TrieNodeImpl$lambda$33$Type.prototype.apply_0, TrieNodeImpl$lambda$33$Type, [version, hasher, network, trimmedPath]));
  return castTo($get_3(this.children, elements[0]), 110).getChildren_0($substring(trimmedPath, elements[0].length), hasher, version, network);
}
;
_.isEmpty = function isEmpty_9(){
  return this.children.map_0.size() == 0 && this.value_0.ref == null;
}
;
_.put = function put_38(path, e){
  return $put_27(this, path, e);
}
;
_.putNode = function putNode_1(path, t){
  var elements, existing, newChild, newChildren, subPath;
  ensureValidPath(path);
  $info(LOG_4, 'Entrie.put(' + path + ')');
  path = canonicalise_0(path);
  if (path.length == 0) {
    return t;
  }
  elements = $split(path, '/');
  existing = castTo($getOrDefault_0(this.children, elements[0], new TrieNodeImpl(($clinit_Collections() , $clinit_Collections() , EMPTY_MAP), ($clinit_Optional() , $clinit_Optional() , EMPTY))), 110);
  subPath = $substring(path, elements[0].length);
  newChild = subPath.length == 0?t:existing.putNode(subPath, t);
  newChildren = new HashMap_1(this.children);
  $putStringValue(newChildren, elements[0], newChild);
  return new TrieNodeImpl(newChildren, this.value_0);
}
;
_.removeEntry = function removeEntry_2(path){
  return $removeEntry_0(this, path);
}
;
var LOG_4;
var Lpeergos_shared_user_TrieNodeImpl_2_classLit = createForClass('peergos.shared.user', 'TrieNodeImpl', 153);
function TrieNodeImpl$lambda$0$Type($$outer_0, network_1, hasher_2){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
  this.hasher_2 = hasher_2;
}

defineClass(543, $wnd.Function, $intern_22, TrieNodeImpl$lambda$0$Type);
_.apply_0 = function apply_1375(arg0){
  return $lambda$0_29(this.$$outer_0, this.network_1, this.hasher_2, arg0);
}
;
function TrieNodeImpl$lambda$1$Type($$outer_0, network_1){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
}

defineClass(2968, $wnd.Function, $intern_22, TrieNodeImpl$lambda$1$Type);
_.apply_0 = function apply_1376(arg0){
  return $lambda$1_25(this.$$outer_0, this.network_1, arg0);
}
;
function TrieNodeImpl$lambda$10$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2974, $wnd.Function, $intern_22, TrieNodeImpl$lambda$10$Type);
_.apply_0 = function apply_1377(arg0){
  return $lambda$10_8(this.$$outer_0, arg0);
}
;
function TrieNodeImpl$lambda$11$Type(finalPath_0, hasher_1, network_2){
  this.finalPath_0 = finalPath_0;
  this.hasher_1 = hasher_1;
  this.network_2 = network_2;
}

defineClass(2961, $wnd.Function, $intern_22, TrieNodeImpl$lambda$11$Type);
_.apply_0 = function apply_1378(arg0){
  return lambda$11_8(this.finalPath_0, this.hasher_1, this.network_2, arg0);
}
;
function TrieNodeImpl$lambda$12$Type(hasher_0, network_1){
  this.hasher_0 = hasher_0;
  this.network_1 = network_1;
}

defineClass(544, $wnd.Function, $intern_22, TrieNodeImpl$lambda$12$Type);
_.apply_0 = function apply_1379(arg0){
  return lambda$12_4(this.hasher_0, this.network_1, arg0);
}
;
function TrieNodeImpl$lambda$13$Type(){
}

defineClass(545, $wnd.Function, $intern_22, TrieNodeImpl$lambda$13$Type);
_.apply_0 = function apply_1380(arg0){
  return $clinit_TrieNodeImpl() , castTo($collect_0($map_0($filter(castTo(arg0, 47).stream(), new TrieNodeImpl$lambda$14$Type), makeLambdaFunction(TrieNodeImpl$lambda$15$Type.prototype.apply_0, TrieNodeImpl$lambda$15$Type, [])), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47);
}
;
function TrieNodeImpl$lambda$14$Type(){
}

defineClass(916, 1, {}, TrieNodeImpl$lambda$14$Type);
_.test_0 = function test_33(arg0){
  return $clinit_TrieNodeImpl() , castTo(arg0, 12).ref != null;
}
;
var Lpeergos_shared_user_TrieNodeImpl$lambda$14$Type_2_classLit = createForClass('peergos.shared.user', 'TrieNodeImpl/lambda$14$Type', 916);
function TrieNodeImpl$lambda$15$Type(){
}

defineClass(2988, $wnd.Function, $intern_22, TrieNodeImpl$lambda$15$Type);
_.apply_0 = function apply_1381(arg0){
  return $clinit_TrieNodeImpl() , checkCriticalElement(castTo(arg0, 12).ref != null) , castTo(castTo(arg0, 12).ref, 19);
}
;
function TrieNodeImpl$lambda$16$Type($$outer_0, network_1, hasher_2){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
  this.hasher_2 = hasher_2;
}

defineClass(2962, $wnd.Function, $intern_22, TrieNodeImpl$lambda$16$Type);
_.apply_0 = function apply_1382(arg0){
  return $lambda$16_9(this.$$outer_0, this.network_1, this.hasher_2, arg0);
}
;
function TrieNodeImpl$lambda$17$Type(opt_0){
  this.opt_0 = opt_0;
}

defineClass(2975, $wnd.Function, $intern_22, TrieNodeImpl$lambda$17$Type);
_.apply_0 = function apply_1383(arg0){
  return $clinit_TrieNodeImpl() , $map(this.opt_0, makeLambdaFunction(TrieNodeImpl$lambda$18$Type.prototype.apply_0, TrieNodeImpl$lambda$18$Type, [castTo(arg0, 12)]));
}
;
function TrieNodeImpl$lambda$18$Type(linkOpt_0){
  this.linkOpt_0 = linkOpt_0;
}

defineClass(2989, $wnd.Function, $intern_22, TrieNodeImpl$lambda$18$Type);
_.apply_0 = function apply_1384(arg0){
  return lambda$18_4(this.linkOpt_0, arg0);
}
;
function TrieNodeImpl$lambda$19$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2976, $wnd.Function, $intern_22, TrieNodeImpl$lambda$19$Type);
_.apply_0 = function apply_1385(arg0){
  return $lambda$19_7(this.$$outer_0, arg0);
}
;
function TrieNodeImpl$lambda$2$Type($$outer_0, network_1){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
}

defineClass(2970, $wnd.Function, $intern_22, TrieNodeImpl$lambda$2$Type);
_.apply_0 = function apply_1386(arg0){
  return $lambda$2_22(this.$$outer_0, this.network_1, arg0);
}
;
function TrieNodeImpl$lambda$20$Type(finalPath_0, hasher_1, network_2){
  this.finalPath_0 = finalPath_0;
  this.hasher_1 = hasher_1;
  this.network_2 = network_2;
}

defineClass(2963, $wnd.Function, $intern_22, TrieNodeImpl$lambda$20$Type);
_.apply_0 = function apply_1387(arg0){
  return lambda$20_3(this.finalPath_0, this.hasher_1, this.network_2, arg0);
}
;
function TrieNodeImpl$lambda$21$Type($$outer_0, hasher_1, network_2){
  this.$$outer_0 = $$outer_0;
  this.hasher_1 = hasher_1;
  this.network_2 = network_2;
}

defineClass(2964, $wnd.Function, $intern_22, TrieNodeImpl$lambda$21$Type);
_.apply_0 = function apply_1388(arg0){
  return $lambda$21_7(this.$$outer_0, this.hasher_1, this.network_2, arg0);
}
;
function TrieNodeImpl$lambda$22$Type($$outer_0, hasher_1, network_2, dir_3){
  this.$$outer_0 = $$outer_0;
  this.hasher_1 = hasher_1;
  this.network_2 = network_2;
  this.dir_3 = dir_3;
}

defineClass(2977, $wnd.Function, $intern_22, TrieNodeImpl$lambda$22$Type);
_.apply_0 = function apply_1389(arg0){
  return $lambda$22_4(this.$$outer_0, this.hasher_1, this.network_2, this.dir_3, arg0);
}
;
function TrieNodeImpl$lambda$23$Type($$outer_0, hasher_1, network_2){
  this.$$outer_0 = $$outer_0;
  this.hasher_1 = hasher_1;
  this.network_2 = network_2;
}

defineClass(2978, $wnd.Function, $intern_22, TrieNodeImpl$lambda$23$Type);
_.apply_0 = function apply_1390(arg0){
  return $lambda$23_5(this.$$outer_0, this.hasher_1, this.network_2, arg0);
}
;
function TrieNodeImpl$lambda$24$Type(){
}

defineClass(2979, $wnd.Function, $intern_22, TrieNodeImpl$lambda$24$Type);
_.apply_0 = function apply_1391(arg0){
  return $clinit_TrieNodeImpl() , checkCriticalElement(castTo(arg0, 12).ref != null) , castTo(castTo(arg0, 12).ref, 19);
}
;
function TrieNodeImpl$lambda$25$Type(hasher_0, network_1, trimmedPath_2){
  this.hasher_0 = hasher_0;
  this.network_1 = network_1;
  this.trimmedPath_2 = trimmedPath_2;
}

defineClass(2965, $wnd.Function, $intern_22, TrieNodeImpl$lambda$25$Type);
_.apply_0 = function apply_1392(arg0){
  return lambda$25_3(this.hasher_0, this.network_1, this.trimmedPath_2, arg0);
}
;
function TrieNodeImpl$lambda$26$Type(hasher_0, network_1){
  this.hasher_0 = hasher_0;
  this.network_1 = network_1;
}

defineClass(2980, $wnd.Function, $intern_22, TrieNodeImpl$lambda$26$Type);
_.apply_0 = function apply_1393(arg0){
  return lambda$26_2(this.hasher_0, this.network_1, arg0);
}
;
function TrieNodeImpl$lambda$27$Type(hasher_0, network_1){
  this.hasher_0 = hasher_0;
  this.network_1 = network_1;
}

defineClass(2981, $wnd.Function, $intern_22, TrieNodeImpl$lambda$27$Type);
_.apply_0 = function apply_1394(arg0){
  return lambda$27_2(this.hasher_0, this.network_1, arg0);
}
;
function TrieNodeImpl$lambda$28$Type(){
}

defineClass(917, 1, {}, TrieNodeImpl$lambda$28$Type);
_.get_0 = function get_110(){
  return $clinit_TrieNodeImpl() , new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_SET));
}
;
var Lpeergos_shared_user_TrieNodeImpl$lambda$28$Type_2_classLit = createForClass('peergos.shared.user', 'TrieNodeImpl/lambda$28$Type', 917);
function TrieNodeImpl$lambda$29$Type($$outer_0, version_1, hasher_2, network_3){
  this.$$outer_0 = $$outer_0;
  this.version_1 = version_1;
  this.hasher_2 = hasher_2;
  this.network_3 = network_3;
}

defineClass(2966, $wnd.Function, $intern_22, TrieNodeImpl$lambda$29$Type);
_.apply_0 = function apply_1395(arg0){
  return $lambda$29_3(this.$$outer_0, this.version_1, this.hasher_2, this.network_3, arg0);
}
;
function TrieNodeImpl$lambda$3$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2971, $wnd.Function, $intern_22, TrieNodeImpl$lambda$3$Type);
_.apply_0 = function apply_1396(arg0){
  return $lambda$3_21(this.$$outer_0, arg0);
}
;
function TrieNodeImpl$lambda$30$Type($$outer_0, version_1, hasher_2, network_3, dir_4){
  this.$$outer_0 = $$outer_0;
  this.version_1 = version_1;
  this.hasher_2 = hasher_2;
  this.network_3 = network_3;
  this.dir_4 = dir_4;
}

defineClass(2982, $wnd.Function, $intern_22, TrieNodeImpl$lambda$30$Type);
_.apply_0 = function apply_1397(arg0){
  return $lambda$30_5(this.$$outer_0, this.version_1, this.hasher_2, this.network_3, this.dir_4, arg0);
}
;
function TrieNodeImpl$lambda$31$Type($$outer_0, version_1, hasher_2, network_3){
  this.$$outer_0 = $$outer_0;
  this.version_1 = version_1;
  this.hasher_2 = hasher_2;
  this.network_3 = network_3;
}

defineClass(2983, $wnd.Function, $intern_22, TrieNodeImpl$lambda$31$Type);
_.apply_0 = function apply_1398(arg0){
  return $lambda$31_5(this.$$outer_0, this.version_1, this.hasher_2, this.network_3, arg0);
}
;
function TrieNodeImpl$lambda$32$Type(){
}

defineClass(2984, $wnd.Function, $intern_22, TrieNodeImpl$lambda$32$Type);
_.apply_0 = function apply_1399(arg0){
  return $clinit_TrieNodeImpl() , checkCriticalElement(castTo(arg0, 12).ref != null) , castTo(castTo(arg0, 12).ref, 19);
}
;
function TrieNodeImpl$lambda$33$Type(version_0, hasher_1, network_2, trimmedPath_3){
  this.version_0 = version_0;
  this.hasher_1 = hasher_1;
  this.network_2 = network_2;
  this.trimmedPath_3 = trimmedPath_3;
}

defineClass(2967, $wnd.Function, $intern_22, TrieNodeImpl$lambda$33$Type);
_.apply_0 = function apply_1400(arg0){
  return lambda$33_1(this.version_0, this.hasher_1, this.network_2, this.trimmedPath_3, arg0);
}
;
function TrieNodeImpl$lambda$34$Type(version_0, hasher_1, network_2){
  this.version_0 = version_0;
  this.hasher_1 = hasher_1;
  this.network_2 = network_2;
}

defineClass(2985, $wnd.Function, $intern_22, TrieNodeImpl$lambda$34$Type);
_.apply_0 = function apply_1401(arg0){
  return lambda$34_2(this.version_0, this.hasher_1, this.network_2, arg0);
}
;
function TrieNodeImpl$lambda$35$Type(version_0, hasher_1, network_2){
  this.version_0 = version_0;
  this.hasher_1 = hasher_1;
  this.network_2 = network_2;
}

defineClass(2986, $wnd.Function, $intern_22, TrieNodeImpl$lambda$35$Type);
_.apply_0 = function apply_1402(arg0){
  return lambda$35_2(this.version_0, this.hasher_1, this.network_2, arg0);
}
;
function TrieNodeImpl$lambda$36$Type(){
}

defineClass(918, 1, {}, TrieNodeImpl$lambda$36$Type);
_.get_0 = function get_111(){
  return $clinit_TrieNodeImpl() , new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_SET));
}
;
var Lpeergos_shared_user_TrieNodeImpl$lambda$36$Type_2_classLit = createForClass('peergos.shared.user', 'TrieNodeImpl/lambda$36$Type', 918);
function TrieNodeImpl$lambda$4$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2972, $wnd.Function, $intern_22, TrieNodeImpl$lambda$4$Type);
_.apply_0 = function apply_1403(arg0){
  return $lambda$4_15(this.$$outer_0, arg0);
}
;
function TrieNodeImpl$lambda$5$Type(){
}

defineClass(915, 1, {}, TrieNodeImpl$lambda$5$Type);
_.get_0 = function get_112(){
  return $clinit_TrieNodeImpl() , new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY));
}
;
var Lpeergos_shared_user_TrieNodeImpl$lambda$5$Type_2_classLit = createForClass('peergos.shared.user', 'TrieNodeImpl/lambda$5$Type', 915);
function TrieNodeImpl$lambda$6$Type(){
}

defineClass(2969, $wnd.Function, $intern_22, TrieNodeImpl$lambda$6$Type);
_.apply_0 = function apply_1404(arg0){
  return $clinit_TrieNodeImpl() , logAndReturn(castTo(arg0, 33), ($clinit_Optional() , $clinit_Optional() , EMPTY));
}
;
function TrieNodeImpl$lambda$7$Type($$outer_0, network_1, hasher_2){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
  this.hasher_2 = hasher_2;
}

defineClass(2960, $wnd.Function, $intern_22, TrieNodeImpl$lambda$7$Type);
_.apply_0 = function apply_1405(arg0){
  return $lambda$7_8(this.$$outer_0, this.network_1, this.hasher_2, arg0);
}
;
function TrieNodeImpl$lambda$8$Type(opt_0){
  this.opt_0 = opt_0;
}

defineClass(2973, $wnd.Function, $intern_22, TrieNodeImpl$lambda$8$Type);
_.apply_0 = function apply_1406(arg0){
  return $clinit_TrieNodeImpl() , $map(this.opt_0, makeLambdaFunction(TrieNodeImpl$lambda$9$Type.prototype.apply_0, TrieNodeImpl$lambda$9$Type, [castTo(arg0, 12)]));
}
;
function TrieNodeImpl$lambda$9$Type(linkOpt_0){
  this.linkOpt_0 = linkOpt_0;
}

defineClass(2987, $wnd.Function, $intern_22, TrieNodeImpl$lambda$9$Type);
_.apply_0 = function apply_1407(arg0){
  return lambda$9_6(this.linkOpt_0, arg0);
}
;
function $clinit_UserContext(){
  $clinit_UserContext = emptyMethod;
  LOG_5 = ($clinit_Logger() , getLogger());
}

function $addExternalEntryPoint(this$static, entry){
  var isOurs;
  isOurs = $equals_0(this$static.username, entry.ownerName);
  if (isOurs)
    throw toJs(new IllegalStateException_0('Cannot add an entry point to your own filesystem!'));
  return $thenCompose($thenCompose($isValid(entry, '/' + entry.ownerName, this$static.network), makeLambdaFunction(UserContext$lambda$372$Type.prototype.apply_0, UserContext$lambda$372$Type, [this$static])), makeLambdaFunction(UserContext$lambda$373$Type.prototype.apply_0, UserContext$lambda$373$Type, [this$static, entry]));
}

function $addFriendGroupCap(this$static, group, owner, network, s, c){
  return $thenCompose($thenApply(this$static.entrie.getByPath_0('/' + this$static.username, s, this$static.crypto.hasher, network), makeLambdaFunction(UserContext$38methodref$get$Type.prototype.apply_0, UserContext$38methodref$get$Type, [])), makeLambdaFunction(UserContext$lambda$470$Type.prototype.apply_0, UserContext$lambda$470$Type, [this$static, group, owner, network, s, c]));
}

function $blindAndSendFollowRequest(this$static, targetIdentity, targetBoxer, req){
  var blindRequest;
  blindRequest = build_12(targetBoxer, req, this$static.crypto.random, this$static.crypto.boxer);
  return this$static.network.social.sendFollowRequest(targetIdentity, $toByteArray_2($toCbor_52(blindRequest)));
}

function $buildFileTree(this$static, ourRoot, homeDir, includeUser, network, crypto_0){
  return $thenCompose($thenCompose(time_0(new UserContext$lambda$428$Type(this$static, homeDir), "Get friend's entry points"), makeLambdaFunction(UserContext$lambda$429$Type.prototype.apply_0, UserContext$lambda$429$Type, [this$static, network, crypto_0, homeDir, includeUser, ourRoot])), makeLambdaFunction(UserContext$lambda$439$Type.prototype.apply_0, UserContext$lambda$439$Type, [this$static, includeUser, homeDir, network]));
}

function $changePassword(this$static, oldPassword, newPassword, existingAlgorithm, newAlgorithm, expiry, mfa){
  var isLegacy;
  $info(LOG_5, 'Changing password and setting expiry to: ' + expiry);
  isLegacy = existingAlgorithm.generateBoxerAndIdentity();
  if (!isLegacy && newAlgorithm.generateBoxerAndIdentity())
    throw toJs(new IllegalStateException_0('Cannot migrate from an upgraded style account to a legacy style account!'));
  return $thenCompose(generateUser(this$static.username, oldPassword, this$static.crypto.hasher, this$static.crypto.symmetricProvider, this$static.crypto.random, this$static.crypto.signer, this$static.crypto.boxer, existingAlgorithm), makeLambdaFunction(UserContext$lambda$130$Type.prototype.apply_0, UserContext$lambda$130$Type, [this$static, newAlgorithm, newPassword, expiry, isLegacy, mfa]));
}

function $cleanPartialUploads(this$static, filter){
  var txns;
  txns = this$static.transactions;
  return $thenCompose($thenApply($getByPath_4(this$static, '/' + this$static.username), makeLambdaFunction(UserContext$lambda$421$Type.prototype.apply_0, UserContext$lambda$421$Type, [])), makeLambdaFunction(UserContext$lambda$532$Type.prototype.apply_0, UserContext$lambda$532$Type, [this$static, txns, filter]));
}

function $createFileTree(this$static, ourRoot, ourName, network, crypto_0){
  return $exceptionally($thenCompose($thenApply(ourRoot.getByPath(ourName, crypto_0.hasher, network), makeLambdaFunction(UserContext$33methodref$get$Type.prototype.apply_0, UserContext$33methodref$get$Type, [])), makeLambdaFunction(UserContext$lambda$442$Type.prototype.apply_0, UserContext$lambda$442$Type, [this$static, ourRoot, ourName, network, crypto_0])), makeLambdaFunction(UserContext$34methodref$logAndThrow$Type.prototype.apply_0, UserContext$34methodref$logAndThrow$Type, []));
}

function $decodeSpaceRequests(this$static, in_0){
  return decodeSpaceRequests(in_0, this$static.network.coreNode, this$static.network.dhtClient);
}

function $gatherAllUsernamesToUnshare(social, currentSharedWithUsernames, usernamesToUnshare){
  var followers, followersGroupUid, friendGroupUid, friends, old, toAdd, usersToUnshare;
  followers = social.followerRoots.keySet();
  friends = $getFriends_0(social);
  friendGroupUid = castToString(social.groupNameToUid.get('friends'));
  followersGroupUid = castToString(social.groupNameToUid.get('followers'));
  usersToUnshare = new HashSet_1(usernamesToUnshare);
  if (usernamesToUnshare.contains(friendGroupUid)) {
    toAdd = new HashSet_1(currentSharedWithUsernames);
    $retainAll(toAdd, friends);
    $addAll(usersToUnshare, toAdd);
  }
  if (usernamesToUnshare.contains(followersGroupUid)) {
    toAdd = new HashSet_1(currentSharedWithUsernames);
    $retainAll(toAdd, followers);
    $addAll(usersToUnshare, toAdd);
    currentSharedWithUsernames.contains(friendGroupUid) && (old = $putStringValue(usersToUnshare.map_0, friendGroupUid, usersToUnshare) , old == null);
  }
  return usersToUnshare;
}

function $getBlocked(this$static, blockedUsernamesFile){
  return blockedUsernamesFile.ref == null?new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_SET)):$thenApply($thenCompose($getInputStream_0((checkCriticalElement(blockedUsernamesFile.ref != null) , castTo(blockedUsernamesFile.ref, 19)), this$static.network, this$static.crypto, makeLambdaFunction(UserContext$lambda$497$Type.prototype.accept_5, UserContext$lambda$497$Type, [])), makeLambdaFunction(UserContext$lambda$498$Type.prototype.apply_0, UserContext$lambda$498$Type, [blockedUsernamesFile])), makeLambdaFunction(UserContext$lambda$499$Type.prototype.apply_0, UserContext$lambda$499$Type, []));
}

function $getBoxingKey(this$static, owner, keyhash){
  return $thenApply(this$static.network.dhtClient.get_1(owner, keyhash, ($clinit_Optional() , $clinit_Optional() , EMPTY)), makeLambdaFunction(UserContext$lambda$159$Type.prototype.apply_0, UserContext$lambda$159$Type, []));
}

function $getByPath_4(this$static, path){
  var absolutePath;
  if ($equals_0(path, '/'))
    return new CompletableFuture_0(($clinit_Optional() , new Optional(checkCriticalNotNull(createRoot(this$static.entrie)))));
  ensureValidPath(path);
  absolutePath = $equals_0(path.substr(0, 1), '/')?path:'/' + path;
  return $thenCompose(this$static.entrie.getByPath(absolutePath, this$static.crypto.hasher, this$static.network), makeLambdaFunction(UserContext$lambda$420$Type.prototype.apply_0, UserContext$lambda$420$Type, [this$static, path]));
}

function $getByPath_5(this$static, path, version){
  var absolutePath;
  if ($equals_0(path, '/'))
    return new CompletableFuture_0(($clinit_Optional() , new Optional(checkCriticalNotNull(($clinit_FileWrapper() , new FileWrapper(new Optional(checkCriticalNotNull(this$static.entrie)), null, (null , EMPTY), (null , EMPTY), null, new Snapshot(new HashMap)))))));
  ensureValidPath(path);
  absolutePath = $equals_0(path.substr(0, 1), '/')?path:'/' + path;
  return this$static.entrie.getByPath_0(absolutePath, version, this$static.crypto.hasher, this$static.network);
}

function $getByPath_6(this$static, path){
  var pathString;
  pathString = castToString(range_0(0, $getNameCount(path)).mapToObj(new UserContext$30methodref$getName$Type(path)).map_1(makeLambdaFunction(UserContext$31methodref$toString$Type.prototype.apply_0, UserContext$31methodref$toString$Type, [])).collect_0(of_3(new Collectors$lambda$15$Type('/', ''), new Collectors$9methodref$add$Type, new Collectors$10methodref$merge$Type, makeLambdaFunction(Collectors$11methodref$toString$Type.prototype.apply_0, Collectors$11methodref$toString$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, []))));
  return $getByPath_4(this$static, pathString);
}

function $getChildren_3(this$static, path){
  ensureValidPath(path);
  return this$static.entrie.getChildren(path, this$static.crypto.hasher, this$static.network);
}

function $getFiles(this$static, pointers){
  return $thenApply(combineAllInOrder(castTo($collect_0($map_0(pointers.stream(), makeLambdaFunction(UserContext$lambda$408$Type.prototype.apply_0, UserContext$lambda$408$Type, [this$static])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 54)), makeLambdaFunction(UserContext$lambda$416$Type.prototype.apply_0, UserContext$lambda$416$Type, []));
}

function $getFollowerRoots(this$static, pendingOutgoing){
  return $thenApply($thenCompose($thenApply($getByPath_4(this$static, '/' + this$static.username + '/shared'), makeLambdaFunction(UserContext$lambda$104$Type.prototype.apply_0, UserContext$lambda$104$Type, [])), makeLambdaFunction(UserContext$lambda$205$Type.prototype.apply_0, UserContext$lambda$205$Type, [this$static])), makeLambdaFunction(UserContext$lambda$206$Type.prototype.apply_0, UserContext$lambda$206$Type, [pendingOutgoing]));
}

function $getFollowingNodes(this$static){
  return new CompletableFuture_0(castTo($collect_0($filter($map_0($filter(new StreamImpl(null, new Spliterators$IteratorSpliterator(this$static.entrie.getChildNodes(), 0)), new UserContext$lambda$210$Type), makeLambdaFunction(UserContext$lambda$211$Type.prototype.apply_0, UserContext$lambda$211$Type, [])), new UserContext$lambda$212$Type(this$static)), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47));
}

function $getFriendsGroupCaps(this$static, homeDir, s, network){
  return $thenCompose($getChild_2(homeDir, '.groups-from-friends.cborstream', network), makeLambdaFunction(UserContext$lambda$463$Type.prototype.apply_0, UserContext$lambda$463$Type, [this$static, s, network]));
}

function $getLinkPath(this$static, file){
  var isNull;
  isNull = !file.pointer;
  if (!(isNull || file.pointer.fileAccess.isDirectory_0))
    return new CompletableFuture_0('');
  return $thenCompose($getChildren_4(file, this$static.crypto.hasher, this$static.network), makeLambdaFunction(UserContext$lambda$90$Type.prototype.apply_0, UserContext$lambda$90$Type, [this$static, file]));
}

function $getPublicFile(this$static, file){
  $clinit_FileProperties();
  ensureValidPath(file.pathString);
  return $exceptionally($thenCompose(getPublicCapability(file, this$static.network), makeLambdaFunction(UserContext$lambda$85$Type.prototype.apply_0, UserContext$lambda$85$Type, [this$static, file])), makeLambdaFunction(UserContext$lambda$87$Type.prototype.apply_0, UserContext$lambda$87$Type, []));
}

function $getPublicKeyHashes(this$static, username){
  return $thenCompose(this$static.network.coreNode.getPublicKeyHash(username), makeLambdaFunction(UserContext$lambda$161$Type.prototype.apply_0, UserContext$lambda$161$Type, [this$static, username]));
}

function $getPublicKeys(this$static, username){
  return $thenCompose(this$static.network.coreNode.getPublicKeyHash(username), makeLambdaFunction(UserContext$lambda$164$Type.prototype.apply_0, UserContext$lambda$164$Type, [this$static]));
}

function $getSigningKey(this$static, owner){
  return $thenApply(this$static.network.dhtClient.get_1(owner, owner, ($clinit_Optional() , $clinit_Optional() , EMPTY)), makeLambdaFunction(UserContext$lambda$157$Type.prototype.apply_0, UserContext$lambda$157$Type, []));
}

function $getUserRoot(this$static){
  return $thenApply($getByPath_4(this$static, '/' + this$static.username), makeLambdaFunction(UserContext$lambda$421$Type.prototype.apply_0, UserContext$lambda$421$Type, []));
}

function $initialiseGroups(this$static, g){
  return $thenCompose($thenApply($thenCompose($thenApply($thenCompose($thenApply($getByPath_4(this$static, '/' + this$static.username), makeLambdaFunction(UserContext$lambda$421$Type.prototype.apply_0, UserContext$lambda$421$Type, [])), makeLambdaFunction(UserContext$lambda$239$Type.prototype.apply_0, UserContext$lambda$239$Type, [this$static])), makeLambdaFunction(UserContext$lambda$203$Type.prototype.apply_0, UserContext$lambda$203$Type, [])), makeLambdaFunction(UserContext$lambda$204$Type.prototype.apply_0, UserContext$lambda$204$Type, [this$static])), makeLambdaFunction(UserContext$18methodref$keySet$Type.prototype.apply_0, UserContext$18methodref$keySet$Type, [])), makeLambdaFunction(UserContext$lambda$230$Type.prototype.apply_0, UserContext$lambda$230$Type, [this$static, g]));
}

function $lambda$101(this$static, mirror_1, id_1){
  return $thenApply(this$static.network.batCave.addBat(this$static.username, id_1, mirror_1, this$static.signer), makeLambdaFunction(UserContext$lambda$102$Type.prototype.apply_0, UserContext$lambda$102$Type, [id_1]));
}

function $lambda$106(this$static, signedTime_1, id_1){
  return $getPendingSpaceRequests(this$static.network.instanceAdmin, this$static.signer.publicKeyHash, id_1, signedTime_1);
}

function $lambda$107(this$static, adminSignedRequest_1, instanceId_1){
  return $approveSpaceRequest(this$static.network.instanceAdmin, this$static.signer.publicKeyHash, instanceId_1, adminSignedRequest_1);
}

function $lambda$108(this$static, registeredUsername_0){
  $info(LOG_5, 'got username "' + registeredUsername_0 + '"');
  return $clinit_Boolean() , $equals_0(this$static.username, registeredUsername_0)?true:false;
}

function $lambda$129(this$static, oldPassword_1, newPassword_2, mfa_3, alg_3){
  var newAlgorithm;
  if ($equals_0(oldPassword_1, newPassword_2))
    throw toJs(new IllegalStateException_0('You must change to a different password.'));
  newAlgorithm = withNewSalt(alg_3, this$static.crypto.random).withoutBoxerOrIdentity();
  return $changePassword(this$static, oldPassword_1, newPassword_2, alg_3, newAlgorithm, $plusMonths(($clinit_LocalDate() , now_3()), 2), mfa_3);
}

function $lambda$130(this$static, newAlgorithm_1, newPassword_2, expiry_3, isLegacy_4, mfa_5, existingLogin_5){
  var existingLoginSecret;
  existingLoginSecret = existingLogin_5.signer.secretSigningKey;
  if (isLegacy_4 && !$equals_11(existingLoginSecret, this$static.signer.secret))
    throw toJs(new IllegalArgumentException_0('Incorrect existing password during change password attempt!'));
  return $thenCompose(generateUser(this$static.username, newPassword_2, this$static.crypto.hasher, this$static.crypto.symmetricProvider, this$static.crypto.random, this$static.crypto.signer, this$static.crypto.boxer, newAlgorithm_1), makeLambdaFunction(UserContext$lambda$131$Type.prototype.apply_0, UserContext$lambda$131$Type, [this$static, newAlgorithm_1, existingLogin_5, existingLoginSecret, newPassword_2, expiry_3, isLegacy_4, mfa_5]));
}

function $lambda$131(this$static, newAlgorithm_1, existingLogin_2, existingLoginSecret_3, newPassword_4, expiry_5, isLegacy_6, mfa_7, updatedLogin_7){
  var existingOwner, newBoxingKeypair, newIdentityPair, newIdentityPub, newLoginPublicKey;
  newLoginPublicKey = updatedLogin_7.signer.publicSigningKey;
  existingOwner = hashKey(existingLogin_2.signer.publicSigningKey);
  if (!isLegacy_6) {
    return $thenCompose(getLoginData_2(this$static.username, existingLogin_2.signer.publicSigningKey, existingLoginSecret_3, mfa_7, this$static.network), makeLambdaFunction(UserContext$lambda$132$Type.prototype.apply_0, UserContext$lambda$132$Type, [this$static, updatedLogin_7, newLoginPublicKey, newAlgorithm_1, existingLogin_2]));
  }
  newBoxingKeypair = newAlgorithm_1.generateBoxerAndIdentity()?updatedLogin_7.boxer:this$static.boxer;
  newIdentityPair = random_3(this$static.crypto.random, this$static.crypto.signer);
  newIdentityPub = newIdentityPair.publicSigningKey;
  return $thenCompose(call_2(existingOwner, makeLambdaFunction(UserContext$lambda$137$Type.prototype.apply_0, UserContext$lambda$137$Type, [this$static, existingLoginSecret_3, newIdentityPub, existingOwner]), this$static.network.dhtClient), makeLambdaFunction(UserContext$lambda$138$Type.prototype.apply_0, UserContext$lambda$138$Type, [this$static, newIdentityPair, newLoginPublicKey, newBoxingKeypair, existingLogin_2, updatedLogin_7, newAlgorithm_1, newPassword_4, expiry_5]));
}

function $lambda$132(this$static, updatedLogin_1, newLoginPublicKey_2, newAlgorithm_3, existingLogin_4, usd_4){
  var entry, updatedEntry;
  entry = $getData(usd_4, existingLogin_4.root);
  updatedEntry = new UserStaticData(entry.entries_0, updatedLogin_1.root, entry.identity, entry.boxer);
  return $thenCompose(getWriterData_0(this$static.signer.publicKeyHash, this$static.signer.publicKeyHash, this$static.network.mutable, this$static.network.dhtClient), makeLambdaFunction(UserContext$lambda$133$Type.prototype.apply_0, UserContext$lambda$133$Type, [this$static, entry, updatedLogin_1, updatedEntry, newLoginPublicKey_2, newAlgorithm_3]));
}

function $lambda$133(this$static, entry_1, updatedLogin_2, updatedEntry_3, newLoginPublicKey_4, newAlgorithm_5, cwd_5){
  var newIdBlock, rawBlock;
  newIdBlock = $withAlgorithm(cwd_5.props, newAlgorithm_5);
  rawBlock = $toByteArray_2($toCbor_90(newIdBlock));
  return $thenCompose($sha256(this$static.crypto.hasher, rawBlock), makeLambdaFunction(UserContext$lambda$134$Type.prototype.apply_0, UserContext$lambda$134$Type, [this$static, newIdBlock, entry_1, updatedLogin_2, rawBlock, cwd_5, updatedEntry_3, newLoginPublicKey_4]));
}

function $lambda$134(this$static, newIdBlock_1, entry_2, updatedLogin_3, rawBlock_4, cwd_5, updatedEntry_6, newLoginPublicKey_7, blockHash_7){
  var blockWrite, newHash, pointerCas, pointerWrite, updatedLoginData;
  blockWrite = new OpLog$BlockWrite(this$static.signer.publicKeyHash, $signMessage(this$static.signer.secret, blockHash_7), rawBlock_4, false, ($clinit_Optional() , $clinit_Optional() , EMPTY));
  newHash = ($clinit_MaybeMultihash() , new MaybeMultihash(new Cid(1, ($clinit_Cid$Codec() , DagCbor), ($clinit_Multihash$Type() , sha2_256), blockHash_7)));
  pointerCas = new PointerUpdate(cwd_5.hash_0, newHash, castTo($orElse($map(cwd_5.sequence, makeLambdaFunction(PointerUpdate$lambda$0$Type.prototype.apply_0, PointerUpdate$lambda$0$Type, [])), new Optional(checkCriticalNotNull(valueOf_2(1)))), 12));
  pointerWrite = new OpLog$PointerWrite(this$static.signer.publicKeyHash, $signMessage(this$static.signer.secret, $toByteArray_2($toCbor_51(pointerCas))));
  updatedLoginData = new LoginData(this$static.username, updatedEntry_6, newLoginPublicKey_7, new Optional(checkCriticalNotNull(new Pair(blockWrite, pointerWrite))));
  return $thenCompose(this$static.network.account.setLoginData_0(updatedLoginData, this$static.signer), makeLambdaFunction(UserContext$lambda$135$Type.prototype.apply_0, UserContext$lambda$135$Type, [this$static, newIdBlock_1, entry_2, updatedLogin_3, pointerCas]));
}

function $lambda$135(this$static, newIdBlock_1, entry_2, updatedLogin_3, pointerCas_4){
  return login_4(this$static.username, newIdBlock_1, entry_2, this$static.signer, castTo($get_6(entry_2.boxer), 188), updatedLogin_3.root, new Pair(pointerCas_4, $toCbor_90(newIdBlock_1)), this$static.network.clear_0(), this$static.crypto, new UserContext$lambda$136$Type);
}

function $lambda$137(this$static, existingLoginSecret_1, newIdentityPub_2, existingOwner_3, tid_3){
  return this$static.network.dhtClient.putSigningKey($signMessage(existingLoginSecret_1, $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborLong(($clinit_PublicSigningKey$Type() , Ed25519).value), new CborObject$CborByteArray(newIdentityPub_2.publicKey)]))))), existingOwner_3, newIdentityPub_2, tid_3);
}

function $lambda$138(this$static, newIdentityPair_1, newLoginPublicKey_2, newBoxingKeypair_3, existingLogin_4, updatedLogin_5, newAlgorithm_6, newPassword_7, expiry_8, newIdentityHash_8){
  var newIdentity, ownedKeys;
  newIdentity = new SigningPrivateKeyAndPublicHash(newIdentityHash_8, newIdentityPair_1.secretSigningKey);
  ownedKeys = new HashMap;
  return $thenCompose($thenApply($getByPath_4(this$static, '/' + this$static.username), makeLambdaFunction(UserContext$lambda$421$Type.prototype.apply_0, UserContext$lambda$421$Type, [])), makeLambdaFunction(UserContext$lambda$139$Type.prototype.apply_0, UserContext$lambda$139$Type, [this$static, newIdentity, newIdentityPair_1, newLoginPublicKey_2, newBoxingKeypair_3, existingLogin_4, updatedLogin_5, newAlgorithm_6, ownedKeys, newPassword_7, expiry_8]));
}

function $lambda$139(this$static, newIdentity_1, newIdentityPair_2, newLoginPublicKey_3, newBoxingKeypair_4, existingLogin_5, updatedLogin_6, newAlgorithm_7, ownedKeys_8, newPassword_9, expiry_10, homeDir_10){
  var proof;
  $put(ownedKeys_8, homeDir_10.pointer.capability.writer, $signingPair(homeDir_10));
  proof = build_4(newIdentity_1, this$static.signer.publicKeyHash);
  return $thenCompose($thenCompose($applyUpdate(this$static.writeSynchronizer, this$static.signer.publicKeyHash, this$static.signer, new UserContext$lambda$140$Type(this$static, proof)), makeLambdaFunction(UserContext$lambda$141$Type.prototype.apply_0, UserContext$lambda$141$Type, [this$static, newIdentity_1, newIdentityPair_2, newLoginPublicKey_3, newBoxingKeypair_4, existingLogin_5, updatedLogin_6, newAlgorithm_7, ownedKeys_8])), makeLambdaFunction(UserContext$lambda$142$Type.prototype.apply_0, UserContext$lambda$142$Type, [this$static, newPassword_9, newIdentity_1, expiry_10]));
}

function $lambda$140(this$static, proof_1, wd_1){
  return $addOwnedKey(wd_1, this$static.signer.publicKeyHash, this$static.signer, proof_1, this$static.network.dhtClient, this$static.network.hasher);
}

function $lambda$141(this$static, newIdentity_1, newIdentityPair_2, newLoginPublicKey_3, newBoxingKeypair_4, existingLogin_5, updatedLogin_6, newAlgorithm_7, ownedKeys_8, version_8){
  return $changeKeys($get_31(version_8, this$static.signer).props, this$static.username, this$static.signer, newIdentity_1, newIdentityPair_2, newLoginPublicKey_3, newBoxingKeypair_4, existingLogin_5.root, updatedLogin_6.root, newAlgorithm_7, ownedKeys_8, this$static.network);
}

function $lambda$142(this$static, newPassword_1, newIdentity_2, expiry_3){
  return $thenCompose(this$static.network.coreNode.getChain_0(this$static.username), makeLambdaFunction(UserContext$lambda$143$Type.prototype.apply_0, UserContext$lambda$143$Type, [this$static, newPassword_1, newIdentity_2, expiry_3]));
}

function $lambda$143(this$static, newPassword_1, newIdentity_2, expiry_3, existing_3){
  var claimChain, storage;
  storage = castTo(existing_3.getAtIndex(existing_3.size() - 1), 72).claim.storageProviders;
  claimChain = createChain(this$static.signer, newIdentity_2, this$static.username, expiry_3, storage);
  return $thenCompose(updateChainWithRetry(this$static.username, claimChain, this$static.crypto.hasher, this$static.network, new UserContext$lambda$144$Type), makeLambdaFunction(UserContext$lambda$145$Type.prototype.apply_0, UserContext$lambda$145$Type, [this$static, newPassword_1]));
}

function $lambda$145(this$static, newPassword_1, updatedChain_1){
  if (!(checkCriticalNotNull(updatedChain_1) , updatedChain_1))
    throw toJs(new IllegalStateException_0("Couldn't register new public keys during password change!"));
  return signIn(this$static.username, newPassword_1, makeLambdaFunction(UserContext$lambda$146$Type.prototype.apply_0, UserContext$lambda$146$Type, []), this$static.network, this$static.crypto, new UserContext$lambda$7$Type);
}

function $lambda$161(this$static, username_1, signerOpt_1){
  if (signerOpt_1.ref == null)
    throw toJs(new IllegalStateException_0("Couldn't retrieve identity key for " + username_1));
  return $thenCompose($getSigningKey(this$static, (checkCriticalElement(signerOpt_1.ref != null) , castTo(signerOpt_1.ref, 55))), makeLambdaFunction(UserContext$lambda$162$Type.prototype.apply_0, UserContext$lambda$162$Type, [this$static, signerOpt_1]));
}

function $lambda$162(this$static, signerOpt_1){
  return $thenApply(getWriterData(this$static.network, (checkCriticalElement(signerOpt_1.ref != null) , castTo(signerOpt_1.ref, 55)), (checkCriticalElement(signerOpt_1.ref != null) , castTo(signerOpt_1.ref, 55))), makeLambdaFunction(UserContext$lambda$163$Type.prototype.apply_0, UserContext$lambda$163$Type, [signerOpt_1]));
}

function $lambda$164(this$static, signerOpt_0){
  return castTo($orElse($map(signerOpt_0, makeLambdaFunction(UserContext$lambda$165$Type.prototype.apply_0, UserContext$lambda$165$Type, [this$static, signerOpt_0])), new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY))), 87);
}

function $lambda$165(this$static, signerOpt_1, signer_1){
  return $thenCompose($thenApply(this$static.network.dhtClient.get_1(signer_1, signer_1, ($clinit_Optional() , $clinit_Optional() , EMPTY)), makeLambdaFunction(UserContext$lambda$157$Type.prototype.apply_0, UserContext$lambda$157$Type, [])), makeLambdaFunction(UserContext$lambda$166$Type.prototype.apply_0, UserContext$lambda$166$Type, [this$static, signerOpt_1, signer_1]));
}

function $lambda$166(this$static, signerOpt_1, signer_2){
  return $thenCompose(getWriterData(this$static.network, (checkCriticalElement(signerOpt_1.ref != null) , castTo(signerOpt_1.ref, 55)), (checkCriticalElement(signerOpt_1.ref != null) , castTo(signerOpt_1.ref, 55))), makeLambdaFunction(UserContext$lambda$167$Type.prototype.apply_0, UserContext$lambda$167$Type, [this$static, signerOpt_1, signer_2]));
}

function $lambda$167(this$static, signerOpt_1, signer_2, wd_2){
  return $thenApply($getBoxingKey(this$static, signer_2, castTo($get_6(wd_2.props.followRequestReceiver), 55)), makeLambdaFunction(UserContext$lambda$168$Type.prototype.apply_0, UserContext$lambda$168$Type, [signerOpt_1]));
}

function $lambda$173(this$static, user_0){
  var identity, owner;
  identity = user_0.signer;
  owner = identity.publicKeyHash;
  return $thenCompose($thenCompose($thenCompose($thenApply($getByPath_4(user_0, '/' + user_0.username), makeLambdaFunction(UserContext$lambda$421$Type.prototype.apply_0, UserContext$lambda$421$Type, [])), makeLambdaFunction(UserContext$lambda$174$Type.prototype.apply_0, UserContext$lambda$174$Type, [this$static])), makeLambdaFunction(UserContext$lambda$175$Type.prototype.apply_0, UserContext$lambda$175$Type, [this$static, identity])), makeLambdaFunction(UserContext$lambda$176$Type.prototype.apply_0, UserContext$lambda$176$Type, [this$static, identity, owner]));
}

function $lambda$174(this$static, root_0){
  var cas, current, pair, signed;
  pair = $signingPair(root_0);
  current = $get_32(root_0.version, root_0.pointer.capability.writer);
  cas = new PointerUpdate(current.hash_0, ($clinit_MaybeMultihash() , $clinit_MaybeMultihash() , EMPTY_0), castTo($orElse($map(current.sequence, makeLambdaFunction(PointerUpdate$lambda$0$Type.prototype.apply_0, PointerUpdate$lambda$0$Type, [])), ($clinit_Optional() , new Optional(checkCriticalNotNull(valueOf_2(1))))), 12));
  signed = $signMessage(pair.secret, $toByteArray_2($toCbor_51(cas)));
  return this$static.network.mutable.setPointer_0(this$static.signer.publicKeyHash, pair.publicKeyHash, signed);
}

function $lambda$175(this$static, identity_1){
  return this$static.network.spaceUsage.requestQuota(this$static.username, identity_1, $intern_50);
}

function $lambda$176(this$static, identity_1, owner_2){
  return $thenCompose(this$static.network.mutable.getPointerTarget(owner_2, owner_2, this$static.network.dhtClient), makeLambdaFunction(UserContext$lambda$177$Type.prototype.apply_0, UserContext$lambda$177$Type, [this$static, identity_1, owner_2]));
}

function $lambda$177(this$static, identity_1, owner_2, current_2){
  var cas, signed;
  cas = new PointerUpdate(current_2.updated, ($clinit_MaybeMultihash() , $clinit_MaybeMultihash() , EMPTY_0), castTo($orElse($map(current_2.sequence, makeLambdaFunction(PointerUpdate$lambda$0$Type.prototype.apply_0, PointerUpdate$lambda$0$Type, [])), ($clinit_Optional() , new Optional(checkCriticalNotNull(valueOf_2(1))))), 12));
  signed = $signMessage(identity_1.secret, $toByteArray_2($toCbor_51(cas)));
  return this$static.network.mutable.setPointer_0(owner_2, owner_2, signed);
}

function $lambda$178(this$static, path_1, sharedWithState_1){
  var pathString;
  return $thenCompose((pathString = castToString(range_0(0, $getNameCount(path_1)).mapToObj(new UserContext$30methodref$getName$Type(path_1)).map_1(makeLambdaFunction(UserContext$31methodref$toString$Type.prototype.apply_0, UserContext$31methodref$toString$Type, [])).collect_0(of_3(new Collectors$lambda$15$Type('/', ''), new Collectors$9methodref$add$Type, new Collectors$10methodref$merge$Type, makeLambdaFunction(Collectors$11methodref$toString$Type.prototype.apply_0, Collectors$11methodref$toString$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [])))) , $getByPath_4(this$static, pathString)), makeLambdaFunction(UserContext$lambda$179$Type.prototype.apply_0, UserContext$lambda$179$Type, [this$static, path_1, sharedWithState_1]));
}

function $lambda$179(this$static, path_1, sharedWithState_2, opt_2){
  var toUnshare;
  toUnshare = (checkCriticalElement(opt_2.ref != null) , castTo(opt_2.ref, 19));
  return $thenCompose($getByPath_6(this$static, $getParent(path_1)), makeLambdaFunction(UserContext$lambda$180$Type.prototype.apply_0, UserContext$lambda$180$Type, [this$static, path_1, sharedWithState_2, toUnshare]));
}

function $lambda$180(this$static, path_1, sharedWithState_2, toUnshare_3, parentOpt_3){
  var parent_0;
  parent_0 = (checkCriticalElement(parentOpt_3.ref != null) , castTo(parentOpt_3.ref, 19));
  return $thenCompose($removePublicCap(this$static, path_1.pathString), makeLambdaFunction(UserContext$lambda$181$Type.prototype.apply_0, UserContext$lambda$181$Type, [this$static, path_1, sharedWithState_2, parent_0, toUnshare_3]));
}

function $lambda$181(this$static, path_1, sharedWithState_2, parent_3, toUnshare_4){
  return $applyComplexUpdate(this$static.network.synchronizer, this$static.signer.publicKeyHash, $signingPair(parent_3), new UserContext$lambda$182$Type(this$static, path_1, sharedWithState_2, toUnshare_4, parent_3), new WriteSynchronizer$lambda$23$Type);
}

function $lambda$182(this$static, path_1, sharedWithState_2, toUnshare_3, parent_4, s_4, c_5){
  return $thenCompose($rotateAllKeys(this$static, toUnshare_3, parent_4, false, s_4, c_5), makeLambdaFunction(UserContext$lambda$183$Type.prototype.apply_0, UserContext$lambda$183$Type, [this$static, path_1, sharedWithState_2, c_5]));
}

function $lambda$183(this$static, path_1, sharedWithState_2, c_3, markedDirty_3){
  return $thenCompose($removeSharedWith(this$static.sharedWithCache, ($clinit_SharedWithCache$Access() , READ), path_1, sharedWithState_2.readAccess, markedDirty_3, c_3, this$static.network), makeLambdaFunction(UserContext$lambda$184$Type.prototype.apply_0, UserContext$lambda$184$Type, [this$static, path_1, sharedWithState_2, c_3]));
}

function $lambda$184(this$static, path_1, sharedWithState_2, c_3, s2_3){
  return $removeSharedWith(this$static.sharedWithCache, ($clinit_SharedWithCache$Access() , WRITE), path_1, sharedWithState_2.writeAccess, s2_3, c_3, this$static.network);
}

function $lambda$185(this$static, path_1, wd_1, tid_2){
  var publicData;
  publicData = wd_1.publicData;
  if (publicData.ref == null)
    return new CompletableFuture_0(wd_1);
  return $thenApply($thenCompose($thenCompose($thenCompose(this$static.network.dhtClient.get_1(this$static.signer.publicKeyHash, (checkCriticalElement(publicData.ref != null) , castTo(publicData.ref, 44)), ($clinit_Optional() , $clinit_Optional() , EMPTY)), makeLambdaFunction(UserContext$lambda$186$Type.prototype.apply_0, UserContext$lambda$186$Type, [this$static])), makeLambdaFunction(UserContext$lambda$187$Type.prototype.apply_0, UserContext$lambda$187$Type, [this$static, path_1, tid_2])), makeLambdaFunction(UserContext$lambda$188$Type.prototype.apply_0, UserContext$lambda$188$Type, [this$static, tid_2])), makeLambdaFunction(UserContext$lambda$189$Type.prototype.apply_0, UserContext$lambda$189$Type, [wd_1]));
}

function $lambda$186(this$static, rootCbor_0){
  return build_8(this$static.signer.publicKeyHash, (checkCriticalElement(rootCbor_0.ref != null) , castTo(rootCbor_0.ref, 7)), this$static.crypto.hasher, this$static.network.dhtClient);
}

function $lambda$187(this$static, path_1, tid_2, pubCaps_2){
  return $removeCap(pubCaps_2, this$static.signer.publicKeyHash, this$static.signer, path_1, tid_2);
}

function $lambda$188(this$static, tid_1, updated_1){
  return this$static.network.dhtClient.put_0(this$static.signer.publicKeyHash, this$static.signer, $toByteArray_2($toCbor_25(updated_1)), this$static.crypto.hasher, tid_1);
}

function $lambda$190(this$static, v_0){
  return $get_31(v_0, this$static.signer);
}

function $lambda$191(this$static, file_1, wd_1, tid_2){
  return $thenCompose($getPath(file_1, this$static.network), makeLambdaFunction(UserContext$lambda$192$Type.prototype.apply_0, UserContext$lambda$192$Type, [this$static, tid_2, wd_1, file_1]));
}

function $lambda$192(this$static, tid_1, wd_2, file_3, path_3){
  var cap, publicCaps, publicData;
  ensureAllowedToShare(file_3, this$static.username, false);
  publicData = wd_2.publicData;
  publicCaps = publicData.ref != null?$thenCompose(this$static.network.dhtClient.get_1(this$static.signer.publicKeyHash, (checkCriticalElement(publicData.ref != null) , castTo(publicData.ref, 44)), ($clinit_Optional() , $clinit_Optional() , EMPTY)), makeLambdaFunction(UserContext$lambda$193$Type.prototype.apply_0, UserContext$lambda$193$Type, [this$static])):createEmpty(this$static.signer.publicKeyHash, this$static.signer, this$static.network.dhtClient, this$static.crypto.hasher, tid_1);
  cap = $readOnly(file_3.pointer.capability);
  return $thenApply($thenCompose($thenCompose(publicCaps, makeLambdaFunction(UserContext$lambda$194$Type.prototype.apply_0, UserContext$lambda$194$Type, [this$static, path_3, cap, tid_1])), makeLambdaFunction(UserContext$lambda$195$Type.prototype.apply_0, UserContext$lambda$195$Type, [this$static, tid_1])), makeLambdaFunction(UserContext$lambda$196$Type.prototype.apply_0, UserContext$lambda$196$Type, [wd_2]));
}

function $lambda$193(this$static, rootCbor_0){
  return build_8(this$static.signer.publicKeyHash, (checkCriticalElement(rootCbor_0.ref != null) , castTo(rootCbor_0.ref, 7)), this$static.crypto.hasher, this$static.network.dhtClient);
}

function $lambda$194(this$static, path_1, cap_2, tid_3, pubCaps_3){
  return $addCap(pubCaps_3, this$static.signer.publicKeyHash, this$static.signer, path_1, cap_2, tid_3);
}

function $lambda$195(this$static, tid_1, updated_1){
  return this$static.network.dhtClient.put_0(this$static.signer.publicKeyHash, this$static.signer, $toByteArray_2($toCbor_25(updated_1)), this$static.crypto.hasher, tid_1);
}

function $lambda$197(this$static, v_0){
  return $get_31(v_0, this$static.signer);
}

function $lambda$198(this$static, c_0){
  return castTo($collect_0($filter(c_0.stream(), new UserContext$lambda$199$Type(this$static)), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47);
}

function $lambda$199(this$static, f_0){
  return !$equals_0(($ensureUnmodified(f_0) , f_0.props).name, this$static.username);
}

function $lambda$204(this$static, pendingOutgoing_0){
  return $thenApply($thenCompose($thenApply($getByPath_4(this$static, '/' + this$static.username + '/shared'), makeLambdaFunction(UserContext$lambda$104$Type.prototype.apply_0, UserContext$lambda$104$Type, [])), makeLambdaFunction(UserContext$lambda$205$Type.prototype.apply_0, UserContext$lambda$205$Type, [this$static])), makeLambdaFunction(UserContext$lambda$206$Type.prototype.apply_0, UserContext$lambda$206$Type, [pendingOutgoing_0]));
}

function $lambda$205(this$static, sharing_0){
  return $getChildren_4(sharing_0, this$static.crypto.hasher, this$static.network);
}

function $lambda$212(this$static, n_0){
  return !$equals_0(n_0.ownerName, this$static.username);
}

function $lambda$213(this$static, home_0){
  return $thenCompose($hasChild(home_0, '.annotations', this$static.network), makeLambdaFunction(UserContext$lambda$214$Type.prototype.apply_0, UserContext$lambda$214$Type, [this$static, home_0]));
}

function $lambda$214(this$static, home_1, exists_1){
  var res;
  if (!(checkCriticalNotNull(exists_1) , exists_1))
    return new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_MAP));
  res = new TreeMap;
  return $thenApply($thenCompose($getChild_2(home_1, '.annotations', this$static.network), makeLambdaFunction(UserContext$lambda$215$Type.prototype.apply_0, UserContext$lambda$215$Type, [this$static, res])), makeLambdaFunction(UserContext$lambda$220$Type.prototype.apply_0, UserContext$lambda$220$Type, [res]));
}

function $lambda$215(this$static, res_1, fileOpt_1){
  return $thenCompose($getInputStream_0((checkCriticalElement(fileOpt_1.ref != null) , castTo(fileOpt_1.ref, 19)), this$static.network, this$static.crypto, makeLambdaFunction(UserContext$lambda$216$Type.prototype.accept_5, UserContext$lambda$216$Type, [])), makeLambdaFunction(UserContext$lambda$217$Type.prototype.apply_0, UserContext$lambda$217$Type, [res_1, fileOpt_1]));
}

function $lambda$221(this$static, annotation_1, existing_1){
  var e, serialized, updated, value_0, value$iterator, values;
  updated = new TreeMap_1(existing_1);
  $put_6(updated, annotation_1.username, annotation_1);
  values = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new AbstractMap$2(updated), 0)), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  serialized = new ByteArrayOutputStream;
  for (value$iterator = values.iterator(); value$iterator.hasNext_0();) {
    value_0 = castTo(value$iterator.next_1(), 395);
    try {
      $write(serialized, $toByteArray_2($toCbor_71(value_0)));
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 62)) {
        e = $e0;
        throw toJs(new RuntimeException_2(e));
      }
       else 
        throw toJs($e0);
    }
  }
  return $thenApply($thenCompose($thenApply($getByPath_4(this$static, '/' + this$static.username), makeLambdaFunction(UserContext$lambda$421$Type.prototype.apply_0, UserContext$lambda$421$Type, [])), makeLambdaFunction(UserContext$lambda$222$Type.prototype.apply_0, UserContext$lambda$222$Type, [this$static, serialized])), makeLambdaFunction(UserContext$lambda$224$Type.prototype.apply_0, UserContext$lambda$224$Type, []));
}

function $lambda$222(this$static, serialized_1, home_1){
  return $uploadFileSection(home_1, '.annotations', new AsyncReader$ArrayBacked($toByteArray(serialized_1)), true, 0, serialized_1.count, ($clinit_Optional() , $clinit_Optional() , EMPTY), true, this$static.network, this$static.crypto, makeLambdaFunction(UserContext$lambda$223$Type.prototype.accept_5, UserContext$lambda$223$Type, []), $randomBytes(this$static.crypto.random, 32), (null , EMPTY), new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(this$static.crypto.random, 32))))), $map(this$static.mirrorBat, makeLambdaFunction(UserContext$13methodref$id$Type.prototype.apply_0, UserContext$13methodref$id$Type, [])));
}

function $lambda$230(this$static, g_1, followers_1){
  return $thenCompose($thenApply($thenApply((ensureValidPath('/') , this$static.entrie.getChildren('/', this$static.crypto.hasher, this$static.network)), makeLambdaFunction(UserContext$lambda$198$Type.prototype.apply_0, UserContext$lambda$198$Type, [this$static])), makeLambdaFunction(UserContext$lambda$228$Type.prototype.apply_0, UserContext$lambda$228$Type, [])), makeLambdaFunction(UserContext$lambda$231$Type.prototype.apply_0, UserContext$lambda$231$Type, [this$static, followers_1, g_1]));
}

function $lambda$231(this$static, followers_1, g_2, friends_2){
  return reduceAll(g_2.uidToGroupName.entrySet_0(), ($clinit_Boolean() , true), new UserContext$lambda$232$Type(this$static, followers_1, friends_2), new UserContext$lambda$233$Type);
}

function $lambda$232(this$static, followers_1, friends_2, e_3){
  return $thenApply($thenCompose($thenCompose($thenApply($getByPath_4(this$static, '/' + this$static.username), makeLambdaFunction(UserContext$lambda$421$Type.prototype.apply_0, UserContext$lambda$421$Type, [])), makeLambdaFunction(UserContext$lambda$234$Type.prototype.apply_0, UserContext$lambda$234$Type, [this$static, e_3])), makeLambdaFunction(UserContext$lambda$235$Type.prototype.apply_0, UserContext$lambda$235$Type, [this$static, e_3, followers_1, friends_2])), makeLambdaFunction(UserContext$lambda$238$Type.prototype.apply_0, UserContext$lambda$238$Type, []));
}

function $lambda$234(this$static, e_1, home_1){
  return $getOrMkdirs(home_1, get_176('shared', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [castToString(e_1.getKey())])), this$static.network, true, $map(this$static.mirrorBat, makeLambdaFunction(UserContext$13methodref$id$Type.prototype.apply_0, UserContext$13methodref$id$Type, [])), this$static.crypto);
}

function $lambda$235(this$static, e_1, followers_2, friends_3){
  return $thenCompose($thenApply($getByPath_4(this$static, '/' + this$static.username), makeLambdaFunction(UserContext$lambda$421$Type.prototype.apply_0, UserContext$lambda$421$Type, [])), makeLambdaFunction(UserContext$lambda$236$Type.prototype.apply_0, UserContext$lambda$236$Type, [this$static, e_1, followers_2, friends_3]));
}

function $lambda$236(this$static, e_1, followers_2, friends_3, home_3){
  return $applyComplexUpdate(this$static.network.synchronizer, this$static.signer.publicKeyHash, $signingPair(home_3), new UserContext$lambda$237$Type(this$static, e_1, followers_2, friends_3), new WriteSynchronizer$lambda$23$Type);
}

function $lambda$237(this$static, e_1, followers_2, friends_3, s_3, c_4){
  return $shareReadAccessWith_0(this$static, get_176(this$static.username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['shared', castToString(e_1.getKey())])), $equals_0(castToString(e_1.getValue()), 'followers')?followers_2:friends_3, s_3, c_4);
}

function $lambda$239(this$static, home_0){
  return $thenCompose($hasChild(home_0, '.social-state.cbor', this$static.network), makeLambdaFunction(UserContext$lambda$240$Type.prototype.apply_0, UserContext$lambda$240$Type, [this$static, home_0]));
}

function $lambda$240(this$static, home_1, exists_1){
  if (!(checkCriticalNotNull(exists_1) , exists_1))
    return new CompletableFuture_0(new PendingSocialState(($clinit_Collections() , $clinit_Collections() , EMPTY_SET)));
  return $thenCompose($getChild_2(home_1, '.social-state.cbor', this$static.network), makeLambdaFunction(UserContext$lambda$241$Type.prototype.apply_0, UserContext$lambda$241$Type, [this$static]));
}

function $lambda$241(this$static, fileOpt_0){
  return $thenCompose($getInputStream_0((checkCriticalElement(fileOpt_0.ref != null) , castTo(fileOpt_0.ref, 19)), this$static.network, this$static.crypto, makeLambdaFunction(UserContext$lambda$242$Type.prototype.accept_5, UserContext$lambda$242$Type, [])), makeLambdaFunction(UserContext$lambda$243$Type.prototype.apply_0, UserContext$lambda$243$Type, [fileOpt_0]));
}

function $lambda$245(this$static, usernameToRemove_1, home_1){
  return $thenCompose($hasChild(home_1, '.social-state.cbor', this$static.network), makeLambdaFunction(UserContext$lambda$246$Type.prototype.apply_0, UserContext$lambda$246$Type, [this$static, usernameToRemove_1, home_1]));
}

function $lambda$246(this$static, usernameToRemove_1, home_2, exists_2){
  if (!(checkCriticalNotNull(exists_2) , exists_2))
    return new CompletableFuture_0(($clinit_Boolean() , true));
  return $thenCompose($getChild_2(home_2, '.social-state.cbor', this$static.network), makeLambdaFunction(UserContext$lambda$247$Type.prototype.apply_0, UserContext$lambda$247$Type, [this$static, usernameToRemove_1]));
}

function $lambda$247(this$static, usernameToRemove_1, fileOpt_1){
  return $thenCompose($thenCompose($getInputStream_0((checkCriticalElement(fileOpt_1.ref != null) , castTo(fileOpt_1.ref, 19)), this$static.network, this$static.crypto, makeLambdaFunction(UserContext$lambda$248$Type.prototype.accept_5, UserContext$lambda$248$Type, [])), makeLambdaFunction(UserContext$lambda$249$Type.prototype.apply_0, UserContext$lambda$249$Type, [fileOpt_1])), makeLambdaFunction(UserContext$lambda$251$Type.prototype.apply_0, UserContext$lambda$251$Type, [this$static, usernameToRemove_1, fileOpt_1]));
}

function $lambda$251(this$static, usernameToRemove_1, fileOpt_2, current_2){
  var raw, updated, updated_0;
  updated = (updated_0 = new HashSet_1(current_2.pendingOutgoingFollowRequests) , $removeStringValue(updated_0.map_0, usernameToRemove_1) != null , new PendingSocialState(updated_0));
  raw = $toByteArray_2($toCbor_80(updated));
  return $thenApply($overwriteFile((checkCriticalElement(fileOpt_2.ref != null) , castTo(fileOpt_2.ref, 19)), new AsyncReader$ArrayBacked(raw), raw.length, this$static.network, this$static.crypto, makeLambdaFunction(UserContext$lambda$252$Type.prototype.accept_5, UserContext$lambda$252$Type, [])), makeLambdaFunction(UserContext$lambda$253$Type.prototype.apply_0, UserContext$lambda$253$Type, []));
}

function $lambda$254(this$static, pendingIncoming_0){
  return $thenCompose($thenCompose($thenApply($getByPath_4(this$static, '/' + this$static.username), makeLambdaFunction(UserContext$lambda$421$Type.prototype.apply_0, UserContext$lambda$421$Type, [])), makeLambdaFunction(UserContext$lambda$239$Type.prototype.apply_0, UserContext$lambda$239$Type, [this$static])), makeLambdaFunction(UserContext$lambda$255$Type.prototype.apply_0, UserContext$lambda$255$Type, [this$static, pendingIncoming_0]));
}

function $lambda$255(this$static, pendingIncoming_1, pendingOutgoing_1){
  return $thenCompose($getFollowerRoots(this$static, pendingOutgoing_1.pendingOutgoingFollowRequests), makeLambdaFunction(UserContext$lambda$256$Type.prototype.apply_0, UserContext$lambda$256$Type, [this$static, pendingIncoming_1, pendingOutgoing_1]));
}

function $lambda$256(this$static, pendingIncoming_1, pendingOutgoing_2, followerRoots_2){
  return $thenCompose($thenApply((ensureValidPath('/') , this$static.entrie.getChildren('/', this$static.crypto.hasher, this$static.network)), makeLambdaFunction(UserContext$lambda$198$Type.prototype.apply_0, UserContext$lambda$198$Type, [this$static])), makeLambdaFunction(UserContext$lambda$257$Type.prototype.apply_0, UserContext$lambda$257$Type, [this$static, pendingIncoming_1, pendingOutgoing_2, followerRoots_2]));
}

function $lambda$257(this$static, pendingIncoming_1, pendingOutgoing_2, followerRoots_3, followingRoots_3){
  return $thenCompose($thenApply($thenCompose($thenApply($thenCompose($thenApply($getByPath_4(this$static, '/' + this$static.username), makeLambdaFunction(UserContext$lambda$421$Type.prototype.apply_0, UserContext$lambda$421$Type, [])), makeLambdaFunction(UserContext$lambda$239$Type.prototype.apply_0, UserContext$lambda$239$Type, [this$static])), makeLambdaFunction(UserContext$lambda$203$Type.prototype.apply_0, UserContext$lambda$203$Type, [])), makeLambdaFunction(UserContext$lambda$204$Type.prototype.apply_0, UserContext$lambda$204$Type, [this$static])), makeLambdaFunction(UserContext$18methodref$keySet$Type.prototype.apply_0, UserContext$18methodref$keySet$Type, [])), makeLambdaFunction(UserContext$lambda$258$Type.prototype.apply_0, UserContext$lambda$258$Type, [this$static, pendingIncoming_1, pendingOutgoing_2, followerRoots_3, followingRoots_3]));
}

function $lambda$258(this$static, pendingIncoming_1, pendingOutgoing_2, followerRoots_3, followingRoots_4, followers_4){
  return $thenCompose($thenCompose($thenCompose($thenApply($getByPath_4(this$static, '/' + this$static.username), makeLambdaFunction(UserContext$lambda$421$Type.prototype.apply_0, UserContext$lambda$421$Type, [])), makeLambdaFunction(UserContext$lambda$495$Type.prototype.apply_0, UserContext$lambda$495$Type, [this$static])), makeLambdaFunction(UserContext$41methodref$getBlocked$Type.prototype.apply_0, UserContext$41methodref$getBlocked$Type, [this$static])), makeLambdaFunction(UserContext$lambda$259$Type.prototype.apply_0, UserContext$lambda$259$Type, [this$static, pendingIncoming_1, pendingOutgoing_2, followers_4, followerRoots_3, followingRoots_4]));
}

function $lambda$259(this$static, pendingIncoming_1, pendingOutgoing_2, followers_3, followerRoots_4, followingRoots_5, blocked_5){
  return $thenCompose($thenCompose($thenApply($getByPath_4(this$static, '/' + this$static.username), makeLambdaFunction(UserContext$lambda$421$Type.prototype.apply_0, UserContext$lambda$421$Type, [])), makeLambdaFunction(UserContext$lambda$213$Type.prototype.apply_0, UserContext$lambda$213$Type, [this$static])), makeLambdaFunction(UserContext$lambda$260$Type.prototype.apply_0, UserContext$lambda$260$Type, [this$static, pendingIncoming_1, pendingOutgoing_2, followers_3, followerRoots_4, followingRoots_5, blocked_5]));
}

function $lambda$260(this$static, pendingIncoming_1, pendingOutgoing_2, followers_3, followerRoots_4, followingRoots_5, blocked_6, annotations_6){
  return $thenApply(getOrCreateObject(this$static, get_176(this$static.username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['shared', '.groups.cbor'])), new UserContext$lambda$225$Type(this$static), makeLambdaFunction(UserContext$20methodref$initialiseGroups$Type.prototype.apply_0, UserContext$20methodref$initialiseGroups$Type, [this$static]), makeLambdaFunction(Cborable$lambda$0$Type.prototype.apply_0, Cborable$lambda$0$Type, [makeLambdaFunction(UserContext$21methodref$fromCbor$Type.prototype.apply_0, UserContext$21methodref$fromCbor$Type, [])])), makeLambdaFunction(UserContext$lambda$261$Type.prototype.apply_0, UserContext$lambda$261$Type, [pendingIncoming_1, pendingOutgoing_2, followers_3, followerRoots_4, followingRoots_5, blocked_6, annotations_6]));
}

function $lambda$264(this$static, initialRequestAndRaw_1, initialRequest_2, reply_3, pair_3){
  var targetUser;
  targetUser = castTo((checkCriticalElement(pair_3.ref != null) , castTo(pair_3.ref, 20)).right, 384);
  return $thenCompose($blindAndSendFollowRequest(this$static, castTo($get_6(initialRequest_2.entry), 60).pointer.owner, targetUser, reply_3), makeLambdaFunction(UserContext$lambda$265$Type.prototype.apply_0, UserContext$lambda$265$Type, [this$static, initialRequestAndRaw_1]));
}

function $lambda$265(this$static, initialRequestAndRaw_1){
  return this$static.network.social.removeFollowRequest(this$static.signer.publicKeyHash, $signMessage(this$static.signer.secret, $toByteArray_2($toCbor_52(initialRequestAndRaw_1.cipher))));
}

function $lambda$266(this$static, theirUsername_1, initialRequest_2, accept_3){
  var entry;
  if (accept_3) {
    return $thenCompose($thenApply($getByPath_4(this$static, '/' + this$static.username + '/shared'), makeLambdaFunction(UserContext$lambda$104$Type.prototype.apply_0, UserContext$lambda$104$Type, [])), makeLambdaFunction(UserContext$lambda$267$Type.prototype.apply_0, UserContext$lambda$267$Type, [this$static, theirUsername_1, initialRequest_2]));
  }
   else {
    entry = new EntryPoint(new AbsoluteCapability(($clinit_PublicKeyHash() , NULL), NULL, initUnidimensionalArray(B_classLit, $intern_28, 8, 32, 15, 1), ($clinit_Optional() , $clinit_Optional() , EMPTY), ($clinit_SymmetricKey() , new TweetNaClKey(initUnidimensionalArray(B_classLit, $intern_28, 8, 32, 15, 1), false, castTo($get(PROVIDERS_1, ($clinit_SymmetricKey$Type() , TweetNaCl)), 91), castTo($get(RNG_PROVIDERS_0, TweetNaCl), 86)))), this$static.username);
    return new CompletableFuture_0(entry);
  }
}

function $lambda$267(this$static, theirUsername_1, initialRequest_2, sharing_2){
  return $thenCompose($thenCompose($getChild_2(sharing_2, theirUsername_1, this$static.network), makeLambdaFunction(UserContext$lambda$268$Type.prototype.apply_0, UserContext$lambda$268$Type, [this$static, theirUsername_1, sharing_2, initialRequest_2])), makeLambdaFunction(UserContext$lambda$271$Type.prototype.apply_0, UserContext$lambda$271$Type, [this$static, theirUsername_1]));
}

function $lambda$268(this$static, theirUsername_1, sharing_2, initialRequest_3, existingOpt_3){
  if (existingOpt_3.ref != null)
    return new CompletableFuture_0(existingOpt_3);
  return $thenCompose($getChild_2(sharing_2, theirUsername_1, this$static.network), makeLambdaFunction(UserContext$lambda$269$Type.prototype.apply_0, UserContext$lambda$269$Type, [this$static, theirUsername_1, sharing_2, initialRequest_3]));
}

function $lambda$269(this$static, theirUsername_1, sharing_2, initialRequest_3, existingFriendDir_3){
  if (existingFriendDir_3.ref == null)
    return $thenCompose($mkdir_0(sharing_2, theirUsername_1, this$static.network, castTo($get_6(initialRequest_3.key), 88), ($clinit_Optional() , new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(this$static.crypto.random, 32)))))), true, $map(this$static.mirrorBat, makeLambdaFunction(UserContext$13methodref$id$Type.prototype.apply_0, UserContext$13methodref$id$Type, [])), this$static.crypto), makeLambdaFunction(UserContext$lambda$270$Type.prototype.apply_0, UserContext$lambda$270$Type, [this$static, theirUsername_1]));
  return new CompletableFuture_0(existingFriendDir_3);
}

function $lambda$270(this$static, theirUsername_1, updatedSharing_1){
  return $getChild_2(updatedSharing_1, theirUsername_1, this$static.network);
}

function $lambda$271(this$static, theirUsername_1, friendRootOpt_1){
  var entry, friendRoot;
  friendRoot = (checkCriticalElement(friendRootOpt_1.ref != null) , castTo(friendRootOpt_1.ref, 19));
  entry = new EntryPoint($readOnly(friendRoot.pointer.capability), this$static.username);
  return $thenApply($thenCompose($thenApply(getOrCreateObject(this$static, get_176(this$static.username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['shared', '.groups.cbor'])), new UserContext$lambda$225$Type(this$static), makeLambdaFunction(UserContext$20methodref$initialiseGroups$Type.prototype.apply_0, UserContext$20methodref$initialiseGroups$Type, [this$static]), makeLambdaFunction(Cborable$lambda$0$Type.prototype.apply_0, Cborable$lambda$0$Type, [makeLambdaFunction(UserContext$21methodref$fromCbor$Type.prototype.apply_0, UserContext$21methodref$fromCbor$Type, [])])), makeLambdaFunction(UserContext$lambda$511$Type.prototype.apply_0, UserContext$lambda$511$Type, ['followers'])), makeLambdaFunction(UserContext$lambda$272$Type.prototype.apply_0, UserContext$lambda$272$Type, [this$static, theirUsername_1])), makeLambdaFunction(UserContext$lambda$273$Type.prototype.apply_0, UserContext$lambda$273$Type, [entry]));
}

function $lambda$272(this$static, theirUsername_1, followersUidOpt_1){
  return $shareReadAccessWith(this$static, get_176(this$static.username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['shared', (checkCriticalElement(followersUidOpt_1.ref != null) , castToString(followersUidOpt_1.ref))])), singleton(theirUsername_1));
}

function $lambda$274(this$static, theirUsername_1, initialRequest_2, reciprocate_3, accept_4, entry_4){
  var baseKey, reply;
  reciprocate_3?(baseKey = ($clinit_Optional() , new Optional(checkCriticalNotNull(castTo($get_6(initialRequest_2.entry), 60).pointer.rBaseKey)))):(baseKey = ($clinit_Optional() , $clinit_Optional() , EMPTY));
  reply = new FollowRequest(($clinit_Optional() , new Optional(checkCriticalNotNull(entry_4))), baseKey);
  return $thenCompose($thenCompose(accept_4 && reciprocate_3?$thenCompose($thenApply(getOrCreateObject(this$static, get_176(this$static.username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['shared', '.groups.cbor'])), new UserContext$lambda$225$Type(this$static), makeLambdaFunction(UserContext$20methodref$initialiseGroups$Type.prototype.apply_0, UserContext$20methodref$initialiseGroups$Type, [this$static]), makeLambdaFunction(Cborable$lambda$0$Type.prototype.apply_0, Cborable$lambda$0$Type, [makeLambdaFunction(UserContext$21methodref$fromCbor$Type.prototype.apply_0, UserContext$21methodref$fromCbor$Type, [])])), makeLambdaFunction(UserContext$lambda$511$Type.prototype.apply_0, UserContext$lambda$511$Type, ['friends'])), makeLambdaFunction(UserContext$lambda$275$Type.prototype.apply_0, UserContext$lambda$275$Type, [this$static, theirUsername_1])):new CompletableFuture_0(null), makeLambdaFunction(UserContext$lambda$276$Type.prototype.apply_0, UserContext$lambda$276$Type, [this$static, initialRequest_2])), makeLambdaFunction(UserContext$lambda$277$Type.prototype.apply_0, UserContext$lambda$277$Type, [this$static, initialRequest_2, reply]));
}

function $lambda$275(this$static, theirUsername_1, friendsUidOpt_1){
  return $shareReadAccessWith(this$static, get_176(this$static.username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['shared', (checkCriticalElement(friendsUidOpt_1.ref != null) , castToString(friendsUidOpt_1.ref))])), singleton(theirUsername_1));
}

function $lambda$277(this$static, initialRequest_1, reply_2, pair_2){
  var targetUser;
  targetUser = castTo((checkCriticalElement(pair_2.ref != null) , castTo(pair_2.ref, 20)).right, 384);
  return $blindAndSendFollowRequest(this$static, castTo($get_6(initialRequest_1.entry), 60).pointer.owner, targetUser, reply_2);
}

function $lambda$278(this$static, initialRequest_1, reciprocate_2){
  if (reciprocate_2)
    return $thenCompose($addExternalEntryPoint(this$static, castTo($get_6(initialRequest_1.entry), 60)), makeLambdaFunction(UserContext$lambda$279$Type.prototype.apply_0, UserContext$lambda$279$Type, [this$static, initialRequest_1]));
  return new CompletableFuture_0(this$static.entrie);
}

function $lambda$279(this$static, initialRequest_1){
  return $retrieveAndAddEntryPointToTrie(this$static, this$static.entrie, castTo($get_6(initialRequest_1.entry), 60));
}

function $lambda$280(this$static, initialRequestAndRaw_1, trie_1){
  this$static.entrie = trie_1;
  return this$static.network.social.removeFollowRequest(this$static.signer.publicKeyHash, $signMessage(this$static.signer.secret, $toByteArray_2($toCbor_52(initialRequestAndRaw_1.cipher))));
}

function $lambda$281(this$static, targetUsername_1, requestedKey_2, sharing_2){
  return $thenCompose($thenApply($thenApply((ensureValidPath('/') , this$static.entrie.getChildren('/', this$static.crypto.hasher, this$static.network)), makeLambdaFunction(UserContext$lambda$198$Type.prototype.apply_0, UserContext$lambda$198$Type, [this$static])), makeLambdaFunction(UserContext$lambda$200$Type.prototype.apply_0, UserContext$lambda$200$Type, [])), makeLambdaFunction(UserContext$lambda$282$Type.prototype.apply_0, UserContext$lambda$282$Type, [this$static, targetUsername_1, requestedKey_2, sharing_2]));
}

function $lambda$282(this$static, targetUsername_1, requestedKey_2, sharing_3, following_3){
  var alreadyFollowing;
  alreadyFollowing = $findFirst($filter(following_3.stream(), new UserContext$lambda$283$Type(targetUsername_1))).ref != null;
  if (alreadyFollowing) {
    return errored(new Exception_0('User ' + targetUsername_1 + ' is already a follower!'));
  }
  return $thenCompose($thenCompose(this$static.network.coreNode.getPublicKeyHash(targetUsername_1), makeLambdaFunction(UserContext$lambda$164$Type.prototype.apply_0, UserContext$lambda$164$Type, [this$static])), makeLambdaFunction(UserContext$lambda$284$Type.prototype.apply_0, UserContext$lambda$284$Type, [this$static, targetUsername_1, requestedKey_2, sharing_3]));
}

function $lambda$284(this$static, targetUsername_1, requestedKey_2, sharing_3, targetUserOpt_3){
  var targetUser;
  if (targetUserOpt_3.ref == null) {
    return errored(new Exception_0('User ' + targetUsername_1 + ' does not exist!'));
  }
  targetUser = castTo((checkCriticalElement(targetUserOpt_3.ref != null) , castTo(targetUserOpt_3.ref, 20)).right, 384);
  return $thenCompose($getOrMkdirs(sharing_3, get_176(targetUsername_1, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])), this$static.network, true, $map(this$static.mirrorBat, makeLambdaFunction(UserContext$13methodref$id$Type.prototype.apply_0, UserContext$13methodref$id$Type, [])), this$static.crypto), makeLambdaFunction(UserContext$lambda$285$Type.prototype.apply_0, UserContext$lambda$285$Type, [this$static, targetUsername_1, targetUser, requestedKey_2, targetUserOpt_3]));
}

function $lambda$285(this$static, targetUsername_1, targetUser_2, requestedKey_3, targetUserOpt_4, friendRoot_4){
  var entry, followReq, targetSigner;
  entry = new EntryPoint($readOnly(friendRoot_4.pointer.capability), this$static.username);
  followReq = new FollowRequest(($clinit_Optional() , new Optional(checkCriticalNotNull(entry))), !requestedKey_3?EMPTY:new Optional(checkCriticalNotNull(requestedKey_3)));
  targetSigner = castTo((checkCriticalElement(targetUserOpt_4.ref != null) , castTo(targetUserOpt_4.ref, 20)).left, 55);
  return $thenCompose($thenCompose($thenApply($getByPath_4(this$static, '/' + this$static.username), makeLambdaFunction(UserContext$lambda$421$Type.prototype.apply_0, UserContext$lambda$421$Type, [])), makeLambdaFunction(UserContext$lambda$239$Type.prototype.apply_0, UserContext$lambda$239$Type, [this$static])), makeLambdaFunction(UserContext$lambda$286$Type.prototype.apply_0, UserContext$lambda$286$Type, [this$static, targetUsername_1, targetSigner, targetUser_2, followReq]));
}

function $lambda$286(this$static, targetUsername_1, targetSigner_2, targetUser_3, followReq_4, pending_4){
  var blindRequest;
  return $thenCompose((blindRequest = build_12(targetUser_3, followReq_4, this$static.crypto.random, this$static.crypto.boxer) , this$static.network.social.sendFollowRequest(targetSigner_2, $toByteArray_2($toCbor_52(blindRequest)))), makeLambdaFunction(UserContext$lambda$287$Type.prototype.apply_0, UserContext$lambda$287$Type, [this$static, pending_4, targetUsername_1]));
}

function $lambda$287(this$static, pending_1, targetUsername_2, b_2){
  var raw, updated, updated_0;
  updated = (updated_0 = new HashSet_1(pending_1.pendingOutgoingFollowRequests) , $putStringValue(updated_0.map_0, targetUsername_2, updated_0) , new PendingSocialState(updated_0));
  raw = $toByteArray_2($toCbor_80(updated));
  return $thenApply($thenCompose($thenApply($getByPath_4(this$static, '/' + this$static.username), makeLambdaFunction(UserContext$lambda$421$Type.prototype.apply_0, UserContext$lambda$421$Type, [])), makeLambdaFunction(UserContext$lambda$288$Type.prototype.apply_0, UserContext$lambda$288$Type, [this$static, raw])), makeLambdaFunction(UserContext$lambda$290$Type.prototype.apply_0, UserContext$lambda$290$Type, [b_2]));
}

function $lambda$288(this$static, raw_1, home_1){
  return $uploadFileSection(home_1, '.social-state.cbor', new AsyncReader$ArrayBacked(raw_1), true, 0, raw_1.length, ($clinit_Optional() , $clinit_Optional() , EMPTY), true, this$static.network, this$static.crypto, makeLambdaFunction(UserContext$lambda$289$Type.prototype.accept_5, UserContext$lambda$289$Type, []), $randomBytes(this$static.crypto.random, 32), (null , EMPTY), new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(this$static.crypto.random, 32))))), $map(this$static.mirrorBat, makeLambdaFunction(UserContext$13methodref$id$Type.prototype.apply_0, UserContext$13methodref$id$Type, [])));
}

function $lambda$291(this$static, feedDirOpt_0){
  if (feedDirOpt_0.ref == null)
    return $thenCompose($thenCompose($thenApply($getByPath_4(this$static, '/' + this$static.username), makeLambdaFunction(UserContext$lambda$421$Type.prototype.apply_0, UserContext$lambda$421$Type, [])), makeLambdaFunction(SocialFeed$lambda$95$Type.prototype.apply_0, SocialFeed$lambda$95$Type, [this$static])), makeLambdaFunction(SocialFeed$lambda$96$Type.prototype.apply_0, SocialFeed$lambda$96$Type, [this$static]));
  return load_1((checkCriticalElement(feedDirOpt_0.ref != null) , castTo(feedDirOpt_0.ref, 19)), this$static);
}

function $lambda$294(this$static, rotateSigners_1, owner_2, parentCap_3, parent_4, file_5, c_6, originalCap_7, p_7){
  var newParentLink;
  newParentLink = ($clinit_Optional() , new Optional(checkCriticalNotNull(rotateSigners_1?new RelativeCapability(new Optional(checkCriticalNotNull(parent_4.pointer.capability.writer)), $randomBytes(this$static.crypto.random, 32), new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(this$static.crypto.random, 32))))), ($clinit_SymmetricKey() , random_10(castTo($get(PROVIDERS_1, ($clinit_SymmetricKey$Type() , TweetNaCl)), 91), castTo($get(RNG_PROVIDERS_0, TweetNaCl), 86))), (null , EMPTY)):new RelativeCapability((null , EMPTY), $getMapKey(parent_4.pointer.capability), parent_4.pointer.capability.bat, $getParentKey(parent_4.pointer), (null , EMPTY)))));
  return $thenCompose($rotateAllKeys_0(file_5.pointer.fileAccess, true, new CryptreeNode$CapAndSigner(castTo(originalCap_7, 74), $signingPair(file_5)), new CryptreeNode$CapAndSigner(new WritableAbsoluteCapability(owner_2, castTo(p_7.right, 105).publicKeyHash, $randomBytes(this$static.crypto.random, 32), new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(this$static.crypto.random, 32))))), ($clinit_SymmetricKey() , random_10(castTo($get(PROVIDERS_1, ($clinit_SymmetricKey$Type() , TweetNaCl)), 91), castTo($get(RNG_PROVIDERS_0, TweetNaCl), 86))), random_10(castTo($get(PROVIDERS_1, TweetNaCl), 91), castTo($get(RNG_PROVIDERS_0, TweetNaCl), 86))), castTo(p_7.right, 105)), new CryptreeNode$CapAndSigner(castTo(parentCap_3, 74), $signingPair(parent_4)), new CryptreeNode$CapAndSigner(castTo(parentCap_3, 74), $signingPair(parent_4)), newParentLink, (null , EMPTY), $map(this$static.mirrorBat, makeLambdaFunction(UserContext$13methodref$id$Type.prototype.apply_0, UserContext$13methodref$id$Type, [])), rotateSigners_1, this$static.network, this$static.crypto, castTo(p_7.left, 43), c_6), makeLambdaFunction(UserContext$lambda$295$Type.prototype.apply_0, UserContext$lambda$295$Type, [this$static, rotateSigners_1, newParentLink, owner_2, parentCap_3, parent_4, file_5, c_6]));
}

function $lambda$295(this$static, rotateSigners_1, newParentLink_2, owner_3, parentCap_4, parent_5, file_6, c_7, rotated_7){
  var linkBat, linkCap, linkMapKey, linkParent, linkRBase, linkWBase;
  if (rotateSigners_1) {
    linkRBase = ($clinit_SymmetricKey() , random_10(castTo($get(PROVIDERS_1, ($clinit_SymmetricKey$Type() , TweetNaCl)), 91), castTo($get(RNG_PROVIDERS_0, TweetNaCl), 86)));
    linkParent = (checkCriticalElement(newParentLink_2.ref != null) , castTo(newParentLink_2.ref, 102)).rBaseKey;
    linkWBase = random_10(castTo($get(PROVIDERS_1, TweetNaCl), 91), castTo($get(RNG_PROVIDERS_0, TweetNaCl), 86));
    linkMapKey = $getMapKey_1((checkCriticalElement(newParentLink_2.ref != null) , castTo(newParentLink_2.ref, 102)));
    linkBat = (checkCriticalElement(newParentLink_2.ref != null) , castTo(newParentLink_2.ref, 102)).bat;
    linkCap = new WritableAbsoluteCapability(owner_3, parentCap_4.writer, linkMapKey, linkBat, linkRBase, linkWBase);
    return $thenApply(createAndCommitLink(parent_5, castTo(rotated_7.right, 74), ($ensureUnmodified(file_6) , file_6.props), linkCap, linkParent, $map(this$static.mirrorBat, makeLambdaFunction(UserContext$13methodref$id$Type.prototype.apply_0, UserContext$13methodref$id$Type, [])), this$static.crypto, this$static.network, castTo(rotated_7.left, 43), c_7), makeLambdaFunction(UserContext$lambda$296$Type.prototype.apply_0, UserContext$lambda$296$Type, [linkCap]));
  }
   else 
    return new CompletableFuture_0(rotated_7);
}

function $lambda$297(this$static, file_1, c_2, owner_3, rotateSigners_4, parentSigner_5, parent_6, parentCap_7, originalCap_8, rotated_8){
  return $thenCompose($thenCompose($updateChildLink(parent_6.pointer.fileAccess, castTo(rotated_8.left, 43), c_2, castTo(parentCap_7, 74), parentSigner_5, file_1.linkPointer.ref != null?castTo($get_6(file_1.linkPointer), 83).capability:originalCap_8, new NamedAbsoluteCapability(($ensureUnmodified(file_1) , file_1.props).name, castTo(rotated_8.right, 71)), this$static.network, this$static.crypto.random, this$static.crypto.hasher), makeLambdaFunction(UserContext$lambda$298$Type.prototype.apply_0, UserContext$lambda$298$Type, [this$static, file_1, c_2, owner_3])), makeLambdaFunction(UserContext$lambda$300$Type.prototype.apply_0, UserContext$lambda$300$Type, [this$static, rotateSigners_4, owner_3, parentSigner_5, file_1, c_2]));
}

function $lambda$298(this$static, file_1, c_2, owner_3, s_3){
  return call_2(owner_3, makeLambdaFunction(UserContext$lambda$299$Type.prototype.apply_0, UserContext$lambda$299$Type, [this$static, file_1, s_3, c_2]), this$static.network.dhtClient);
}

function $lambda$299(this$static, file_1, s_2, c_3, tid_3){
  return deleteAllChunks($writableFilePointer(file_1), $signingPair(file_1), tid_3, this$static.crypto.hasher, this$static.network, s_2, c_3);
}

function $lambda$300(this$static, rotateSigners_1, owner_2, parentSigner_3, file_4, c_5, s_5){
  return rotateSigners_1?deAuthoriseSigner(owner_2, parentSigner_3, file_4.pointer.capability.writer, this$static.network, s_5, c_5):new CompletableFuture_0(s_5);
}

function $lambda$302(this$static, initialReadersToRemove_1, path_2, social_2){
  return $thenApply($thenCompose($thenApply($getByPath_4(this$static, '/' + this$static.username), makeLambdaFunction(UserContext$lambda$421$Type.prototype.apply_0, UserContext$lambda$421$Type, [])), makeLambdaFunction(UserContext$lambda$324$Type.prototype.apply_0, UserContext$lambda$324$Type, [this$static, path_2])), makeLambdaFunction(UserContext$lambda$303$Type.prototype.apply_0, UserContext$lambda$303$Type, [social_2, initialReadersToRemove_1]));
}

function $lambda$303(social_1, initialReadersToRemove_2, fileSharingState_2){
  return $gatherAllUsernamesToUnshare(social_1, fileSharingState_2.readAccess, initialReadersToRemove_2);
}

function $lambda$304(this$static, path_1, users_1){
  return $thenCompose($thenApply($getByPath_4(this$static, '/' + this$static.username), makeLambdaFunction(UserContext$lambda$421$Type.prototype.apply_0, UserContext$lambda$421$Type, [])), makeLambdaFunction(UserContext$lambda$305$Type.prototype.apply_0, UserContext$lambda$305$Type, [this$static, path_1, users_1]));
}

function $lambda$305(this$static, path_1, users_2, home_2){
  return $applyComplexUpdate(this$static.network.synchronizer, this$static.signer.publicKeyHash, $signingPair(home_2), new UserContext$lambda$306$Type(this$static, path_1, users_2), new WriteSynchronizer$lambda$23$Type);
}

function $lambda$307(this$static, absolutePathString_1, path_2, c_3, readersToRemove_4, s_5, opt_5){
  var toUnshare;
  toUnshare = castTo($orElseThrow(opt_5, new UserContext$lambda$308$Type(absolutePathString_1)), 19);
  return $thenCompose($getByPath_5(this$static, $getParent(path_2).pathString, s_5), makeLambdaFunction(UserContext$lambda$309$Type.prototype.apply_0, UserContext$lambda$309$Type, [this$static, path_2, c_3, readersToRemove_4, toUnshare]));
}

function $lambda$309(this$static, path_1, c_2, readersToRemove_3, toUnshare_4, parent_4){
  return $thenCompose($rotateAllKeys(this$static, toUnshare_4, (checkCriticalElement(parent_4.ref != null) , castTo(parent_4.ref, 19)), false, toUnshare_4.version, c_2), makeLambdaFunction(UserContext$lambda$310$Type.prototype.apply_0, UserContext$lambda$310$Type, [this$static, path_1, c_2, readersToRemove_3]));
}

function $lambda$310(this$static, path_1, c_2, readersToRemove_3, markedDirty_3){
  return $thenCompose($removeSharedWith(this$static.sharedWithCache, ($clinit_SharedWithCache$Access() , READ), path_1, readersToRemove_3, markedDirty_3, c_2, this$static.network), makeLambdaFunction(UserContext$lambda$311$Type.prototype.apply_0, UserContext$lambda$311$Type, [this$static, path_1, c_2]));
}

function $lambda$311(this$static, path_1, c_2, s2_2){
  return $thenCompose($thenCompose($getAllWriteShares(this$static.sharedWithCache, path_1, s2_2), makeLambdaFunction(UserContext$lambda$342$Type.prototype.apply_0, UserContext$lambda$342$Type, [this$static, c_2, s2_2])), makeLambdaFunction(UserContext$lambda$312$Type.prototype.apply_0, UserContext$lambda$312$Type, [this$static, path_1, c_2]));
}

function $lambda$312(this$static, path_1, c_2, s3_2){
  return $thenCompose($thenApply($getAllDescendantShares(this$static.sharedWithCache, path_1, s3_2), makeLambdaFunction(SharedWithCache$lambda$73$Type.prototype.apply_0, SharedWithCache$lambda$73$Type, [])), makeLambdaFunction(UserContext$lambda$345$Type.prototype.apply_0, UserContext$lambda$345$Type, [this$static, c_2, s3_2]));
}

function $lambda$314(this$static, initialWritersToRemove_1, path_2, social_2){
  return $thenApply($thenCompose($thenApply($getByPath_4(this$static, '/' + this$static.username), makeLambdaFunction(UserContext$lambda$421$Type.prototype.apply_0, UserContext$lambda$421$Type, [])), makeLambdaFunction(UserContext$lambda$324$Type.prototype.apply_0, UserContext$lambda$324$Type, [this$static, path_2])), makeLambdaFunction(UserContext$lambda$315$Type.prototype.apply_0, UserContext$lambda$315$Type, [social_2, initialWritersToRemove_1]));
}

function $lambda$315(social_1, initialWritersToRemove_2, fileSharingState_2){
  return $gatherAllUsernamesToUnshare(social_1, fileSharingState_2.writeAccess, initialWritersToRemove_2);
}

function $lambda$316(this$static, path_1, writersToRemove_1){
  var absolutePathString, pathString;
  pathString = path_1.pathString;
  absolutePathString = $equals_0(pathString.substr(0, 1), '/')?pathString:'/' + pathString;
  return $thenCompose($getByPath_4(this$static, absolutePathString), makeLambdaFunction(UserContext$lambda$317$Type.prototype.apply_0, UserContext$lambda$317$Type, [this$static, absolutePathString, path_1, writersToRemove_1]));
}

function $lambda$317(this$static, absolutePathString_1, path_2, writersToRemove_3, opt_3){
  var toUnshare;
  toUnshare = castTo($orElseThrow(opt_3, new UserContext$lambda$318$Type(absolutePathString_1)), 19);
  return $thenCompose($getByPath_4(this$static, $getParent(path_2).pathString), makeLambdaFunction(UserContext$lambda$319$Type.prototype.apply_0, UserContext$lambda$319$Type, [this$static, path_2, writersToRemove_3, toUnshare]));
}

function $lambda$319(this$static, path_1, writersToRemove_2, toUnshare_3, parentOpt_3){
  var parent_0;
  parent_0 = (checkCriticalElement(parentOpt_3.ref != null) , castTo(parentOpt_3.ref, 19));
  return $applyComplexUpdate(this$static.network.synchronizer, this$static.signer.publicKeyHash, $signingPair(parent_0), new UserContext$lambda$320$Type(this$static, path_1, writersToRemove_2, toUnshare_3, parent_0), new WriteSynchronizer$lambda$23$Type);
}

function $lambda$320(this$static, path_1, writersToRemove_2, toUnshare_3, parent_4, s_4, c_5){
  return $thenCompose($thenCompose($rotateAllKeys(this$static, toUnshare_3, parent_4, true, s_4, c_5), makeLambdaFunction(UserContext$lambda$321$Type.prototype.apply_0, UserContext$lambda$321$Type, [this$static, path_1, writersToRemove_2, c_5])), makeLambdaFunction(UserContext$lambda$322$Type.prototype.apply_0, UserContext$lambda$322$Type, [this$static, path_1, c_5]));
}

function $lambda$321(this$static, path_1, writersToRemove_2, c_3, s2_3){
  return $removeSharedWith(this$static.sharedWithCache, ($clinit_SharedWithCache$Access() , WRITE), path_1, writersToRemove_2, s2_3, c_3, this$static.network);
}

function $lambda$322(this$static, path_1, c_2, s3_2){
  return $thenCompose($thenCompose($getAllWriteShares(this$static.sharedWithCache, path_1, s3_2), makeLambdaFunction(UserContext$lambda$342$Type.prototype.apply_0, UserContext$lambda$342$Type, [this$static, c_2, s3_2])), makeLambdaFunction(UserContext$lambda$323$Type.prototype.apply_0, UserContext$lambda$323$Type, [this$static, path_1, c_2]));
}

function $lambda$323(this$static, path_1, c_2, s4_2){
  return $thenCompose($thenApply($getAllDescendantShares(this$static.sharedWithCache, path_1, s4_2), makeLambdaFunction(SharedWithCache$lambda$73$Type.prototype.apply_0, SharedWithCache$lambda$73$Type, [])), makeLambdaFunction(UserContext$lambda$345$Type.prototype.apply_0, UserContext$lambda$345$Type, [this$static, c_2, s4_2]));
}

function $lambda$324(this$static, p_1, home_1){
  return $getSharedWith(this$static.sharedWithCache, p_1, home_1.version);
}

function $lambda$325(this$static, dir_1, home_1){
  return $getDirSharingState(this$static.sharedWithCache, dir_1, home_1.version);
}

function $lambda$327(this$static, path_1, friendsGroupUid_1){
  return $thenCompose($getByPath_4(this$static, path_1.pathString), makeLambdaFunction(UserContext$lambda$328$Type.prototype.apply_0, UserContext$lambda$328$Type, [this$static, path_1, friendsGroupUid_1]));
}

function $lambda$328(this$static, path_1, friendsGroupUid_2, file_2){
  return $thenCompose($thenApply($getByPath_4(this$static, '/' + this$static.username), makeLambdaFunction(UserContext$lambda$421$Type.prototype.apply_0, UserContext$lambda$421$Type, [])), makeLambdaFunction(UserContext$lambda$329$Type.prototype.apply_0, UserContext$lambda$329$Type, [this$static, path_1, file_2, friendsGroupUid_2]));
}

function $lambda$329(this$static, path_1, file_2, friendsGroupUid_3, home_3){
  return $applyComplexUpdate(this$static.network.synchronizer, this$static.signer.publicKeyHash, $signingPair(home_3), new UserContext$lambda$330$Type(this$static, path_1, file_2, friendsGroupUid_3), new WriteSynchronizer$lambda$23$Type);
}

function $lambda$330(this$static, path_1, file_2, friendsGroupUid_3, s_3, c_4){
  return $shareReadAccessWith_1(this$static, castTo($orElseThrow(file_2, new UserContext$lambda$331$Type(path_1)), 19), path_1, singleton(friendsGroupUid_3), s_3, c_4);
}

function $lambda$333(this$static, path_1, followersGroupUid_1){
  return $thenCompose($getByPath_4(this$static, path_1.pathString), makeLambdaFunction(UserContext$lambda$334$Type.prototype.apply_0, UserContext$lambda$334$Type, [this$static, path_1, followersGroupUid_1]));
}

function $lambda$334(this$static, path_1, followersGroupUid_2, file_2){
  return $thenCompose($thenApply($getByPath_4(this$static, '/' + this$static.username), makeLambdaFunction(UserContext$lambda$421$Type.prototype.apply_0, UserContext$lambda$421$Type, [])), makeLambdaFunction(UserContext$lambda$335$Type.prototype.apply_0, UserContext$lambda$335$Type, [this$static, path_1, file_2, followersGroupUid_2]));
}

function $lambda$335(this$static, path_1, file_2, followersGroupUid_3, home_3){
  return $applyComplexUpdate(this$static.network.synchronizer, this$static.signer.publicKeyHash, $signingPair(home_3), new UserContext$lambda$336$Type(this$static, path_1, file_2, followersGroupUid_3), new WriteSynchronizer$lambda$23$Type);
}

function $lambda$336(this$static, path_1, file_2, followersGroupUid_3, s_3, c_4){
  return $shareReadAccessWith_1(this$static, castTo($orElseThrow(file_2, new UserContext$lambda$337$Type(path_1)), 19), path_1, singleton(followersGroupUid_3), s_3, c_4);
}

function $lambda$338(this$static, path_1, readersToAdd_2, home_2){
  return $applyComplexUpdate(this$static.network.synchronizer, this$static.signer.publicKeyHash, $signingPair(home_2), new UserContext$lambda$339$Type(this$static, path_1, readersToAdd_2), new WriteSynchronizer$lambda$23$Type);
}

function $lambda$340(this$static, path_1, readersToAdd_2, s_3, c_4, file_4){
  return $shareReadAccessWith_1(this$static, castTo($orElseThrow(file_4, new UserContext$lambda$341$Type(path_1)), 19), path_1, readersToAdd_2, s_3, c_4);
}

function $lambda$342(this$static, c_1, in_2, toReshare_2){
  return reduceAll(toReshare_2.entrySet_0(), in_2, new UserContext$lambda$343$Type(this$static, c_1), new UserContext$lambda$344$Type);
}

function $lambda$343(this$static, c_1, s_1, e_2){
  return $sendWriteCapToAll(this$static, castTo(e_2.getKey(), 95), castTo(e_2.getValue(), 47), s_1, c_1);
}

function $lambda$345(this$static, c_1, in_2, toReshare_2){
  return reduceAll(toReshare_2.entrySet_0(), in_2, new UserContext$lambda$346$Type(this$static, c_1), new UserContext$lambda$347$Type);
}

function $lambda$346(this$static, c_1, s_1, e_2){
  return $shareReadAccessWith_0(this$static, castTo(e_2.getKey(), 95), castTo(e_2.getValue(), 47), s_1, c_1);
}

function $lambda$348(this$static, c_1, sharedDir_1, fileWrapper_2){
  return addReadOnlySharingLinkTo(sharedDir_1, fileWrapper_2.pointer.capability, c_1, this$static.network, this$static.crypto);
}

function $lambda$349(this$static, file_1, sharingFunction_2, s_2, username_3){
  return $thenCompose($getByPath_5(this$static, '/' + this$static.username + '/shared/' + username_3, s_2), makeLambdaFunction(UserContext$lambda$369$Type.prototype.apply_0, UserContext$lambda$369$Type, [username_3, sharingFunction_2, file_1]));
}

function $lambda$351(this$static, p_2, readersToAdd_3, c_4, result_4){
  return $updatedSharedWithCache(this$static, p_2, readersToAdd_3, ($clinit_SharedWithCache$Access() , READ), result_4, c_4);
}

function $lambda$352(this$static, fileToShare_1, writersToAdd_2, parentOpt_2){
  return parentOpt_2.ref != null?$thenCompose($getChild_2((checkCriticalElement(parentOpt_2.ref != null) , castTo(parentOpt_2.ref, 19)), $getFileName(fileToShare_1).pathString, this$static.network), makeLambdaFunction(UserContext$lambda$353$Type.prototype.apply_0, UserContext$lambda$353$Type, [this$static, fileToShare_1, parentOpt_2, writersToAdd_2])):errored(new IllegalStateException_0('Unable to read ' + $getParent(fileToShare_1)));
}

function $lambda$353(this$static, fileToShare_1, parentOpt_2, writersToAdd_3, fileOpt_3){
  return fileOpt_3.ref != null?$shareWriteAccessWith_0(this$static, (checkCriticalElement(fileOpt_3.ref != null) , castTo(fileOpt_3.ref, 19)), fileToShare_1, (checkCriticalElement(parentOpt_2.ref != null) , castTo(parentOpt_2.ref, 19)), writersToAdd_3):errored(new IllegalStateException_0('Unable to read ' + fileToShare_1));
}

function $lambda$354(this$static, pathToFile_1, writersToAdd_2, s_2, c_3){
  return $thenCompose($addSharedWith(this$static.sharedWithCache, ($clinit_SharedWithCache$Access() , WRITE), pathToFile_1, writersToAdd_2, s_2, c_3, this$static.network), makeLambdaFunction(UserContext$lambda$355$Type.prototype.apply_0, UserContext$lambda$355$Type, [this$static, pathToFile_1, writersToAdd_2, c_3]));
}

function $lambda$355(this$static, pathToFile_1, writersToAdd_2, c_3, s2_3){
  return $sendWriteCapToAll(this$static, pathToFile_1, writersToAdd_2, s2_3, c_3);
}

function $lambda$356(this$static, pathToFile_1, writersToAdd_2, file_3, parent_4, s_4, c_5){
  return $thenCompose($rotateAllKeys(this$static, file_3, parent_4, true, s_4, c_5), makeLambdaFunction(UserContext$lambda$357$Type.prototype.apply_0, UserContext$lambda$357$Type, [this$static, pathToFile_1, writersToAdd_2, c_5]));
}

function $lambda$357(this$static, pathToFile_1, writersToAdd_2, c_3, s2_3){
  return $thenCompose($thenCompose($getByPath_5(this$static, pathToFile_1.pathString, s2_3), makeLambdaFunction(UserContext$lambda$358$Type.prototype.apply_0, UserContext$lambda$358$Type, [this$static, pathToFile_1, writersToAdd_2, s2_3, c_3])), makeLambdaFunction(UserContext$lambda$359$Type.prototype.apply_0, UserContext$lambda$359$Type, [this$static, pathToFile_1, c_3]));
}

function $lambda$358(this$static, pathToFile_1, writersToAdd_2, s2_3, c_4){
  return $addSharedWith(this$static.sharedWithCache, ($clinit_SharedWithCache$Access() , WRITE), pathToFile_1, writersToAdd_2, s2_3, c_4, this$static.network);
}

function $lambda$359(this$static, pathToFile_1, c_2, s3_2){
  return $thenCompose($thenCompose($thenApply($getAllDescendantShares(this$static.sharedWithCache, pathToFile_1, s3_2), makeLambdaFunction(SharedWithCache$lambda$78$Type.prototype.apply_0, SharedWithCache$lambda$78$Type, [])), makeLambdaFunction(UserContext$lambda$342$Type.prototype.apply_0, UserContext$lambda$342$Type, [this$static, c_2, s3_2])), makeLambdaFunction(UserContext$lambda$360$Type.prototype.apply_0, UserContext$lambda$360$Type, [this$static, pathToFile_1, c_2]));
}

function $lambda$360(this$static, pathToFile_1, c_2, s4_2){
  return $thenCompose($thenApply($getAllDescendantShares(this$static.sharedWithCache, pathToFile_1, s4_2), makeLambdaFunction(SharedWithCache$lambda$73$Type.prototype.apply_0, SharedWithCache$lambda$73$Type, [])), makeLambdaFunction(UserContext$lambda$345$Type.prototype.apply_0, UserContext$lambda$345$Type, [this$static, c_2, s4_2]));
}

function $lambda$361(this$static, toFile_1, writersToAdd_2, s_3, c_4, parent_4){
  return $thenCompose($getByPath_5(this$static, toFile_1.pathString, s_3), makeLambdaFunction(UserContext$lambda$362$Type.prototype.apply_0, UserContext$lambda$362$Type, [this$static, parent_4, toFile_1, writersToAdd_2, s_3, c_4]));
}

function $lambda$362(this$static, parent_1, toFile_2, writersToAdd_3, s_4, c_5, fileOpt_5){
  return castTo($orElseGet($map(fileOpt_5, makeLambdaFunction(UserContext$lambda$363$Type.prototype.apply_0, UserContext$lambda$363$Type, [this$static, parent_1, toFile_2, writersToAdd_3, s_4, c_5])), new UserContext$lambda$364$Type(toFile_2)), 87);
}

function $lambda$363(this$static, parent_1, toFile_2, writersToAdd_3, s_4, c_5, file_5){
  return $sendWriteCapToAll_0(this$static, file_5, (checkCriticalElement(parent_1.ref != null) , castTo(parent_1.ref, 19)), toFile_2, writersToAdd_3, s_4, c_5);
}

function $lambda$365(this$static, file_1, c_2, sharedDir_2){
  return addEditSharingLinkTo(sharedDir_2, $writableFilePointer(file_1), c_2, this$static.network, this$static.crypto);
}

function $lambda$366(this$static, file_1, sharingFunction_2, s_2, username_3){
  return $thenCompose($getByPath_5(this$static, '/' + this$static.username + '/shared/' + username_3, s_2), makeLambdaFunction(UserContext$lambda$369$Type.prototype.apply_0, UserContext$lambda$369$Type, [username_3, sharingFunction_2, file_1]));
}

function $lambda$368(this$static, pathToFile_2, writersToAdd_3, c_4, result_4){
  return $updatedSharedWithCache(this$static, pathToFile_2, writersToAdd_3, ($clinit_SharedWithCache$Access() , WRITE), result_4, c_4);
}

function $lambda$372(this$static, filename_1, valid_1){
  return (checkCriticalNotNull(valid_1) , valid_1)?$getByPath_6(this$static, get_176(this$static.username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [filename_1]))):errored(new IllegalStateException_0('Incorrect claimed owner for entry point'));
}

function $lambda$373(this$static, filename_1, entry_2, existing_2){
  var base, data_0, offset, reader;
  offset = castTo($orElse($map(existing_2, makeLambdaFunction(UserContext$lambda$374$Type.prototype.apply_0, UserContext$lambda$374$Type, [])), valueOf_2(0)), 69).value_0;
  data_0 = $toByteArray_2($toCbor_70(entry_2));
  reader = new AsyncReader$ArrayBacked(data_0);
  base = $map(existing_2, makeLambdaFunction(UserContext$lambda$375$Type.prototype.apply_0, UserContext$lambda$375$Type, []));
  return $thenCompose($thenApply($getByPath_4(this$static, '/' + this$static.username), makeLambdaFunction(UserContext$lambda$421$Type.prototype.apply_0, UserContext$lambda$421$Type, [])), makeLambdaFunction(UserContext$lambda$376$Type.prototype.apply_0, UserContext$lambda$376$Type, [this$static, filename_1, reader, offset, data_0, base]));
}

function $lambda$376(this$static, filename_1, reader_2, offset_3, data_5, base_6, home_5){
  return $uploadFileSection(home_5, filename_1, reader_2, true, offset_3, add_1(offset_3, data_5.length), base_6, true, this$static.network, this$static.crypto, makeLambdaFunction(UserContext$lambda$377$Type.prototype.accept_5, UserContext$lambda$377$Type, []), $randomBytes(this$static.crypto.random, 32), ($clinit_Optional() , $clinit_Optional() , EMPTY), new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(this$static.crypto.random, 32))))), $map(this$static.mirrorBat, makeLambdaFunction(UserContext$13methodref$id$Type.prototype.apply_0, UserContext$13methodref$id$Type, [])));
}

function $lambda$381(this$static, all_1, sharing_1){
  return $thenCompose($thenCompose(new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_SET)), makeLambdaFunction(UserContext$lambda$204$Type.prototype.apply_0, UserContext$lambda$204$Type, [this$static])), makeLambdaFunction(UserContext$lambda$382$Type.prototype.apply_0, UserContext$lambda$382$Type, [this$static, all_1, sharing_1]));
}

function $lambda$382(this$static, all_1, sharing_2, followerRoots_2){
  return $thenCompose($thenCompose($thenApply($getByPath_4(this$static, '/' + this$static.username), makeLambdaFunction(UserContext$lambda$421$Type.prototype.apply_0, UserContext$lambda$421$Type, [])), makeLambdaFunction(UserContext$lambda$239$Type.prototype.apply_0, UserContext$lambda$239$Type, [this$static])), makeLambdaFunction(UserContext$lambda$383$Type.prototype.apply_0, UserContext$lambda$383$Type, [this$static, all_1, followerRoots_2, sharing_2]));
}

function $lambda$383(this$static, all_1, followerRoots_2, sharing_3, pendingOut_3){
  var addToStatic, initialRequests, mozart, replies, withDecrypted;
  withDecrypted = castTo($collect_0($map_0(all_1.stream(), makeLambdaFunction(UserContext$lambda$384$Type.prototype.apply_0, UserContext$lambda$384$Type, [this$static])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  replies = castTo($collect_0($filter(withDecrypted.stream(), new UserContext$lambda$386$Type(pendingOut_3)), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [IDENTITY_FINISH]))), 17);
  addToStatic = new UserContext$lambda$387$Type(this$static);
  mozart = new UserContext$lambda$393$Type(this$static, addToStatic, followerRoots_2, sharing_3);
  initialRequests = castTo($collect_0($filter(withDecrypted.stream(), new UserContext$lambda$405$Type(followerRoots_2)), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [IDENTITY_FINISH]))), 17);
  return $thenApply(reduceAll(replies, this$static.entrie, mozart, new UserContext$lambda$406$Type), makeLambdaFunction(UserContext$lambda$407$Type.prototype.apply_0, UserContext$lambda$407$Type, [this$static, initialRequests]));
}

function $lambda$384(this$static, b_0){
  return new FollowRequestWithCipherText(castTo($decrypt_2(b_0.followRequest, this$static.boxer.secretBoxingKey, b_0.dummySource, makeLambdaFunction(UserContext$27methodref$fromCbor$Type.prototype.apply_0, UserContext$27methodref$fromCbor$Type, [])), 244), b_0);
}

function $lambda$387(this$static, root_0, p_1){
  var freq, updatedRoot;
  freq = p_1.req;
  if (!equals_16($toByteArray_2($toCbor_15(castTo($get_6(freq.entry), 60).pointer.rBaseKey)), ($clinit_SymmetricKey() , $toByteArray_2($toCbor_15(new TweetNaClKey(initUnidimensionalArray(B_classLit, $intern_28, 8, 32, 15, 1), false, castTo($get(PROVIDERS_1, ($clinit_SymmetricKey$Type() , TweetNaCl)), 91), castTo($get(RNG_PROVIDERS_0, TweetNaCl), 86))))))) {
    updatedRoot = $equals_0(castTo($get_6(freq.entry), 60).ownerName, this$static.username)?new CompletableFuture_0(root_0):$thenCompose($thenCompose($addExternalEntryPoint(this$static, castTo($get_6(freq.entry), 60)), makeLambdaFunction(UserContext$lambda$388$Type.prototype.apply_0, UserContext$lambda$388$Type, [this$static, freq])), makeLambdaFunction(UserContext$lambda$389$Type.prototype.apply_0, UserContext$lambda$389$Type, [this$static, root_0, freq]));
    return $thenCompose(updatedRoot, makeLambdaFunction(UserContext$lambda$390$Type.prototype.apply_0, UserContext$lambda$390$Type, [this$static, p_1]));
  }
  return $thenApply(this$static.network.social.removeFollowRequest(this$static.signer.publicKeyHash, $signMessage(this$static.signer.secret, $toByteArray_2($toCbor_52(p_1.cipher)))), makeLambdaFunction(UserContext$lambda$392$Type.prototype.apply_0, UserContext$lambda$392$Type, [root_0]));
}

function $lambda$390(this$static, p_1, newRoot_1){
  this$static.entrie = newRoot_1;
  return $thenApply(this$static.network.social.removeFollowRequest(this$static.signer.publicKeyHash, $signMessage(this$static.signer.secret, $toByteArray_2($toCbor_52(p_1.cipher)))), makeLambdaFunction(UserContext$lambda$391$Type.prototype.apply_0, UserContext$lambda$391$Type, [newRoot_1]));
}

function $lambda$393(this$static, addToStatic_1, followerRoots_2, sharing_3, trie_3, p_4){
  var entry, freq, keyFromResponse, ourDirForThem, removeDir, theirName;
  freq = p_4.req;
  theirName = castTo($get_6(freq.entry), 60).ownerName;
  ourDirForThem = castTo(followerRoots_2.get(theirName), 19);
  $toByteArray_2($toCbor_15(ourDirForThem.pointer.capability.rBaseKey));
  keyFromResponse = $map(freq.key, makeLambdaFunction(UserContext$28methodref$serialize$Type.prototype.apply_0, UserContext$28methodref$serialize$Type, []));
  if (keyFromResponse.ref == null) {
    removeDir = $remove_16(ourDirForThem, sharing_3, get_176(this$static.username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['shared', theirName])), this$static);
    return $thenCompose($thenCompose(removeDir, makeLambdaFunction(UserContext$lambda$395$Type.prototype.apply_0, UserContext$lambda$395$Type, [this$static, freq])), makeLambdaFunction(UserContext$lambda$396$Type.prototype.apply_0, UserContext$lambda$396$Type, [addToStatic_1, trie_3, p_4]));
  }
   else if ($isNull(castTo($get_6(freq.entry), 60).pointer)) {
    new EntryPoint($readOnly(ourDirForThem.pointer.capability), this$static.username);
    return $thenApply($thenCompose($thenCompose($thenApply(getOrCreateObject(this$static, get_176(this$static.username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['shared', '.groups.cbor'])), new UserContext$lambda$225$Type(this$static), makeLambdaFunction(UserContext$20methodref$initialiseGroups$Type.prototype.apply_0, UserContext$20methodref$initialiseGroups$Type, [this$static]), makeLambdaFunction(Cborable$lambda$0$Type.prototype.apply_0, Cborable$lambda$0$Type, [makeLambdaFunction(UserContext$21methodref$fromCbor$Type.prototype.apply_0, UserContext$21methodref$fromCbor$Type, [])])), makeLambdaFunction(UserContext$lambda$511$Type.prototype.apply_0, UserContext$lambda$511$Type, ['followers'])), makeLambdaFunction(UserContext$lambda$397$Type.prototype.apply_0, UserContext$lambda$397$Type, [this$static, theirName])), makeLambdaFunction(UserContext$lambda$398$Type.prototype.apply_0, UserContext$lambda$398$Type, [this$static, p_4])), makeLambdaFunction(UserContext$lambda$399$Type.prototype.apply_0, UserContext$lambda$399$Type, [trie_3]));
  }
   else {
    new EntryPoint($readOnly(ourDirForThem.pointer.capability), this$static.username);
    entry = castTo($get_6(freq.entry), 60);
    if ($equals_0(entry.ownerName, this$static.username))
      throw toJs(new IllegalStateException_0('Received a follow request claiming to be owned by us!'));
    return $exceptionally($thenCompose($thenCompose($thenCompose($thenApply(getOrCreateObject(this$static, get_176(this$static.username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['shared', '.groups.cbor'])), new UserContext$lambda$225$Type(this$static), makeLambdaFunction(UserContext$20methodref$initialiseGroups$Type.prototype.apply_0, UserContext$20methodref$initialiseGroups$Type, [this$static]), makeLambdaFunction(Cborable$lambda$0$Type.prototype.apply_0, Cborable$lambda$0$Type, [makeLambdaFunction(UserContext$21methodref$fromCbor$Type.prototype.apply_0, UserContext$21methodref$fromCbor$Type, [])])), makeLambdaFunction(UserContext$lambda$511$Type.prototype.apply_0, UserContext$lambda$511$Type, ['followers'])), makeLambdaFunction(UserContext$lambda$400$Type.prototype.apply_0, UserContext$lambda$400$Type, [this$static, theirName])), makeLambdaFunction(UserContext$lambda$401$Type.prototype.apply_0, UserContext$lambda$401$Type, [this$static, theirName])), makeLambdaFunction(UserContext$lambda$403$Type.prototype.apply_0, UserContext$lambda$403$Type, [addToStatic_1, trie_3, p_4, entry])), makeLambdaFunction(UserContext$lambda$404$Type.prototype.apply_0, UserContext$lambda$404$Type, [trie_3]));
  }
}

function $lambda$397(this$static, theirName_1, followersUidOpt_1){
  return $shareReadAccessWith(this$static, get_176(this$static.username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['shared', (checkCriticalElement(followersUidOpt_1.ref != null) , castToString(followersUidOpt_1.ref))])), singleton(theirName_1));
}

function $lambda$398(this$static, p_1){
  return this$static.network.social.removeFollowRequest(this$static.signer.publicKeyHash, $signMessage(this$static.signer.secret, $toByteArray_2($toCbor_52(p_1.cipher))));
}

function $lambda$400(this$static, theirName_1, followersUidOpt_1){
  return $shareReadAccessWith(this$static, get_176(this$static.username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['shared', (checkCriticalElement(followersUidOpt_1.ref != null) , castToString(followersUidOpt_1.ref))])), singleton(theirName_1));
}

function $lambda$401(this$static, theirName_1){
  return $thenCompose($thenApply(getOrCreateObject(this$static, get_176(this$static.username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['shared', '.groups.cbor'])), new UserContext$lambda$225$Type(this$static), makeLambdaFunction(UserContext$20methodref$initialiseGroups$Type.prototype.apply_0, UserContext$20methodref$initialiseGroups$Type, [this$static]), makeLambdaFunction(Cborable$lambda$0$Type.prototype.apply_0, Cborable$lambda$0$Type, [makeLambdaFunction(UserContext$21methodref$fromCbor$Type.prototype.apply_0, UserContext$21methodref$fromCbor$Type, [])])), makeLambdaFunction(UserContext$lambda$511$Type.prototype.apply_0, UserContext$lambda$511$Type, ['friends'])), makeLambdaFunction(UserContext$lambda$402$Type.prototype.apply_0, UserContext$lambda$402$Type, [this$static, theirName_1]));
}

function $lambda$402(this$static, theirName_1, friendsUidOpt_1){
  return $shareReadAccessWith(this$static, get_176(this$static.username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['shared', (checkCriticalElement(friendsUidOpt_1.ref != null) , castToString(friendsUidOpt_1.ref))])), singleton(theirName_1));
}

function $lambda$407(this$static, initialRequests_1, newRoot_1){
  this$static.entrie = newRoot_1;
  return initialRequests_1;
}

function $lambda$408(this$static, s_0){
  return $thenApply(asyncExceptionally(new UserContext$lambda$409$Type(this$static, s_0), makeLambdaFunction(UserContext$lambda$410$Type.prototype.apply_0, UserContext$lambda$410$Type, [this$static, s_0])), makeLambdaFunction(UserContext$lambda$414$Type.prototype.apply_0, UserContext$lambda$414$Type, [s_0]));
}

function $lambda$409(this$static, s_1){
  return $thenCompose($getFile_1(this$static.network, s_1.cap, s_1.owner), makeLambdaFunction(UserContext$lambda$411$Type.prototype.apply_0, UserContext$lambda$411$Type, [this$static, s_1]));
}

function $lambda$411(this$static, s_1, fopt_1){
  return castTo($orElseGet($map(fopt_1, makeLambdaFunction(UserContext$lambda$412$Type.prototype.apply_0, UserContext$lambda$412$Type, [])), new UserContext$lambda$413$Type(this$static, s_1)), 87);
}

function $lambda$420(this$static, path_1, res_1){
  if (res_1.ref != null)
    return new CompletableFuture_0(res_1);
  return $getPublicFile(this$static, get_176(path_1, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])));
}

function $lambda$428(this$static, homeDir_1){
  return $thenApply($thenCompose($getChild_2(homeDir_1, '.from-friends.cborstream', this$static.network), makeLambdaFunction(UserContext$lambda$446$Type.prototype.apply_0, UserContext$lambda$446$Type, [this$static, homeDir_1])), makeLambdaFunction(UserContext$lambda$461$Type.prototype.apply_0, UserContext$lambda$461$Type, []));
}

function $lambda$429(this$static, network_1, crypto_2, homeDir_3, includeUser_4, ourRoot_5, friendEntries_5){
  return $thenCompose($getChild_2(homeDir_3, '.capabilitycache', network_1), makeLambdaFunction(UserContext$lambda$430$Type.prototype.apply_0, UserContext$lambda$430$Type, [this$static, friendEntries_5, includeUser_4, ourRoot_5]));
}

function $lambda$430(this$static, friendEntries_3, includeUser_4, ourRoot_5){
  var friendNodes, friendsOnly;
  friendsOnly = castTo($collect_0($filter(friendEntries_3.stream(), new UserContext$lambda$431$Type(includeUser_4)), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  friendNodes = castTo($collect_0($map_0($parallel(friendsOnly.stream()), makeLambdaFunction(UserContext$lambda$432$Type.prototype.apply_0, UserContext$lambda$432$Type, [this$static])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [IDENTITY_FINISH]))), 17);
  return reduceAll(friendNodes, ourRoot_5, new UserContext$lambda$434$Type, new UserContext$lambda$435$Type);
}

function $lambda$432(this$static, e_2){
  return build_13(this$static.capCache, e_2, new UserContext$lambda$433$Type(this$static));
}

function $lambda$433(this$static, cap_0, o_1, n_2, s_3, c_4){
  return $thenCompose($thenApply(this$static.entrie.getByPath_0('/' + this$static.username, s_3, this$static.crypto.hasher, n_2), makeLambdaFunction(UserContext$38methodref$get$Type.prototype.apply_0, UserContext$38methodref$get$Type, [])), makeLambdaFunction(UserContext$lambda$470$Type.prototype.apply_0, UserContext$lambda$470$Type, [this$static, cap_0, o_1, n_2, s_3, c_4]));
}

function $lambda$439(this$static, includeUser_1, homeDir_2, network_3, root_3){
  return $thenApply($getFriendsGroupCaps(this$static, homeDir_2, homeDir_2.version, network_3), makeLambdaFunction(UserContext$lambda$440$Type.prototype.apply_0, UserContext$lambda$440$Type, [root_3, includeUser_1]));
}

function $lambda$442(this$static, ourRoot_1, ourName_2, network_3, crypto_4, homeDir_4){
  return $buildFileTree(this$static, ourRoot_1, homeDir_4, new UserContext$lambda$443$Type(ourName_2), network_3, crypto_4);
}

function $lambda$445(this$static, root_1, r_1){
  return addRetrievedEntryPointToTrie(this$static.username, root_1, r_1.entry, r_1.path, false, this$static.capCache, this$static, this$static.network, this$static.crypto);
}

function $lambda$446(this$static, homeDir_1, fopt_1){
  return $thenCompose(castTo($orElse($map(fopt_1, makeLambdaFunction(UserContext$lambda$447$Type.prototype.apply_0, UserContext$lambda$447$Type, [this$static])), new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_LIST))), 6), makeLambdaFunction(UserContext$lambda$453$Type.prototype.apply_0, UserContext$lambda$453$Type, [this$static, homeDir_1]));
}

function $lambda$447(this$static, f_0){
  var res;
  res = new ArrayList;
  return $thenCompose($getInputStream_0(f_0, this$static.network, this$static.crypto, makeLambdaFunction(UserContext$lambda$448$Type.prototype.accept_5, UserContext$lambda$448$Type, [])), makeLambdaFunction(UserContext$lambda$449$Type.prototype.apply_0, UserContext$lambda$449$Type, [res, f_0]));
}

function $lambda$453(this$static, homeDir_1, fromFriends_1){
  return $thenCompose($getChild_2(homeDir_1, '.blocked-usernames.txt', this$static.network), makeLambdaFunction(UserContext$lambda$454$Type.prototype.apply_0, UserContext$lambda$454$Type, [this$static, fromFriends_1]));
}

function $lambda$454(this$static, fromFriends_1, bopt_1){
  return $thenApply(castTo($orElse($map(bopt_1, makeLambdaFunction(UserContext$lambda$455$Type.prototype.apply_0, UserContext$lambda$455$Type, [this$static])), new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_SET))), 6), makeLambdaFunction(UserContext$lambda$459$Type.prototype.apply_0, UserContext$lambda$459$Type, [fromFriends_1]));
}

function $lambda$455(this$static, f_0){
  return $thenApply($thenCompose($getInputStream_0(f_0, this$static.network, this$static.crypto, makeLambdaFunction(UserContext$lambda$456$Type.prototype.accept_5, UserContext$lambda$456$Type, [])), makeLambdaFunction(UserContext$lambda$457$Type.prototype.apply_0, UserContext$lambda$457$Type, [f_0])), makeLambdaFunction(UserContext$lambda$458$Type.prototype.apply_0, UserContext$lambda$458$Type, []));
}

function $lambda$463(this$static, s_1, network_2, fopt_2){
  return castTo($orElse($map(fopt_2, makeLambdaFunction(UserContext$lambda$464$Type.prototype.apply_0, UserContext$lambda$464$Type, [this$static, fopt_2, s_1, network_2])), new CompletableFuture_0(new Pair(new FriendsGroups(($clinit_Collections() , $clinit_Collections() , EMPTY_MAP)), ($clinit_Optional() , $clinit_Optional() , EMPTY)))), 87);
}

function $lambda$464(this$static, fopt_1, s_2, network_3, f_3){
  return $thenApply($thenCompose($getInputStream_2(f_3, $get_32(s_2, f_3.pointer.capability.writer).props, network_3, this$static.crypto, makeLambdaFunction(UserContext$lambda$465$Type.prototype.accept_5, UserContext$lambda$465$Type, [])), makeLambdaFunction(UserContext$lambda$466$Type.prototype.apply_0, UserContext$lambda$466$Type, [f_3])), makeLambdaFunction(UserContext$lambda$468$Type.prototype.apply_0, UserContext$lambda$468$Type, [fopt_1]));
}

function $lambda$470(this$static, group_1, owner_2, network_3, s_4, c_5, home_5){
  return $thenCompose($thenCompose($getChild_2(home_5, '.groups-from-friends.cborstream', network_3), makeLambdaFunction(UserContext$lambda$463$Type.prototype.apply_0, UserContext$lambda$463$Type, [this$static, s_4, network_3])), makeLambdaFunction(UserContext$lambda$471$Type.prototype.apply_0, UserContext$lambda$471$Type, [this$static, group_1, owner_2, network_3, s_4, c_5, home_5]));
}

function $lambda$471(this$static, group_1, owner_2, network_3, s_4, c_5, home_6, p_6){
  var raw, reader, updated;
  updated = $addGroup_0(castTo(p_6.left, 271), group_1, owner_2);
  raw = $toByteArray_2($toCbor_72(updated));
  reader = new AsyncReader$ArrayBacked(raw);
  if (castTo(p_6.right, 12).ref != null)
    return $overwriteFile_0(castTo($get_6(castTo(p_6.right, 12)), 19), reader, raw.length, network_3, this$static.crypto, makeLambdaFunction(UserContext$lambda$472$Type.prototype.accept_5, UserContext$lambda$472$Type, []), s_4, c_5);
  return $uploadOrReplaceFile_1(home_6, '.groups-from-friends.cborstream', reader, raw.length, true, s_4, c_5, network_3, this$static.crypto, makeLambdaFunction(UserContext$lambda$473$Type.prototype.accept_5, UserContext$lambda$473$Type, []), $randomBytes(this$static.crypto.random, 32), ($clinit_Optional() , new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(this$static.crypto.random, 32)))))), $map(this$static.mirrorBat, makeLambdaFunction(UserContext$13methodref$id$Type.prototype.apply_0, UserContext$13methodref$id$Type, [])));
}

function $lambda$490(this$static, friendName_1, home_1){
  return $thenCompose($getChild_2(home_1, '.blocked-usernames.txt', this$static.network), makeLambdaFunction(UserContext$lambda$491$Type.prototype.apply_0, UserContext$lambda$491$Type, [this$static, home_1, friendName_1]));
}

function $lambda$491(this$static, home_1, friendName_2, fopt_2){
  return $appendToChild(home_1, castTo($orElse($map(fopt_2, makeLambdaFunction(UserContext$lambda$492$Type.prototype.apply_0, UserContext$lambda$492$Type, [])), valueOf_2(0)), 69).value_0, $getBytes(friendName_2 + '\n', ($clinit_EmulatedCharset() , UTF_8_0)), $map(this$static.mirrorBat, makeLambdaFunction(UserContext$13methodref$id$Type.prototype.apply_0, UserContext$13methodref$id$Type, [])), this$static.network, this$static.crypto, makeLambdaFunction(UserContext$lambda$493$Type.prototype.accept_5, UserContext$lambda$493$Type, []));
}

function $lambda$494(this$static, friendName_1){
  this$static.entrie = this$static.entrie.removeEntry('/' + friendName_1 + '/');
  return $clinit_Boolean() , true;
}

function $lambda$495(this$static, home_0){
  return $getChild_2(home_0, '.blocked-usernames.txt', this$static.network);
}

function $lambda$500(this$static, username_1, home_1){
  return $thenCompose($getChild_2(home_1, '.blocked-usernames.txt', this$static.network), makeLambdaFunction(UserContext$lambda$501$Type.prototype.apply_0, UserContext$lambda$501$Type, [this$static, username_1]));
}

function $lambda$501(this$static, username_1, bopt_1){
  return bopt_1.ref == null?new CompletableFuture_0(($clinit_Boolean() , true)):$thenCompose(bopt_1.ref == null?new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_SET)):$thenApply($thenCompose($getInputStream_0((checkCriticalElement(bopt_1.ref != null) , castTo(bopt_1.ref, 19)), this$static.network, this$static.crypto, makeLambdaFunction(UserContext$lambda$497$Type.prototype.accept_5, UserContext$lambda$497$Type, [])), makeLambdaFunction(UserContext$lambda$498$Type.prototype.apply_0, UserContext$lambda$498$Type, [bopt_1])), makeLambdaFunction(UserContext$lambda$499$Type.prototype.apply_0, UserContext$lambda$499$Type, [])), makeLambdaFunction(UserContext$lambda$502$Type.prototype.apply_0, UserContext$lambda$502$Type, [this$static, username_1, bopt_1]));
}

function $lambda$502(this$static, username_1, bopt_2, all_2){
  var updated;
  updated = $getBytes(castToString($collect_0($map_0($sorted($filter(all_2.stream(), new UserContext$lambda$503$Type(username_1))), makeLambdaFunction(UserContext$lambda$504$Type.prototype.apply_0, UserContext$lambda$504$Type, [])), of_3(new Collectors$5methodref$ctor$Type, new Collectors$6methodref$append$Type, new Collectors$7methodref$append$Type, makeLambdaFunction(Collectors$8methodref$toString$Type.prototype.apply_0, Collectors$8methodref$toString$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [])))), ($clinit_EmulatedCharset() , UTF_8_0));
  return $thenApply($overwriteFile((checkCriticalElement(bopt_2.ref != null) , castTo(bopt_2.ref, 19)), new AsyncReader$ArrayBacked(updated), updated.length, this$static.network, this$static.crypto, makeLambdaFunction(UserContext$lambda$505$Type.prototype.accept_5, UserContext$lambda$505$Type, [])), makeLambdaFunction(UserContext$lambda$506$Type.prototype.apply_0, UserContext$lambda$506$Type, []));
}

function $lambda$507(this$static, username_1){
  return $thenApply($thenCompose($thenApply($getByPath_4(this$static, '/' + this$static.username), makeLambdaFunction(UserContext$lambda$421$Type.prototype.apply_0, UserContext$lambda$421$Type, [])), makeLambdaFunction(UserContext$lambda$508$Type.prototype.apply_0, UserContext$lambda$508$Type, [this$static, username_1])), makeLambdaFunction(UserContext$lambda$510$Type.prototype.apply_0, UserContext$lambda$510$Type, [this$static]));
}

function $lambda$508(this$static, username_1, home_1){
  return $buildFileTree(this$static, this$static.entrie, home_1, new UserContext$lambda$509$Type(username_1), this$static.network, this$static.crypto);
}

function $lambda$510(this$static, updated_0){
  this$static.entrie = updated_0;
  return $clinit_Boolean() , true;
}

function $lambda$514(this$static, usernameToRemove_1){
  return $thenCompose($thenApply(getOrCreateObject(this$static, get_176(this$static.username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['shared', '.groups.cbor'])), new UserContext$lambda$225$Type(this$static), makeLambdaFunction(UserContext$20methodref$initialiseGroups$Type.prototype.apply_0, UserContext$20methodref$initialiseGroups$Type, [this$static]), makeLambdaFunction(Cborable$lambda$0$Type.prototype.apply_0, Cborable$lambda$0$Type, [makeLambdaFunction(UserContext$21methodref$fromCbor$Type.prototype.apply_0, UserContext$21methodref$fromCbor$Type, [])])), makeLambdaFunction(UserContext$lambda$511$Type.prototype.apply_0, UserContext$lambda$511$Type, ['followers'])), makeLambdaFunction(UserContext$lambda$521$Type.prototype.apply_0, UserContext$lambda$521$Type, [this$static, usernameToRemove_1]));
}

function $lambda$515(this$static, usernameToRemove_1){
  return $thenCompose($getByPath_6(this$static, get_176(this$static.username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['shared', usernameToRemove_1]))), makeLambdaFunction(UserContext$lambda$523$Type.prototype.apply_0, UserContext$lambda$523$Type, [this$static, usernameToRemove_1]));
}

function $lambda$516(this$static){
  return $thenApply($getByPath_4(this$static, '/' + this$static.username + '/shared'), makeLambdaFunction(UserContext$lambda$104$Type.prototype.apply_0, UserContext$lambda$104$Type, []));
}

function $lambda$517(this$static, sharingDir_1, sharing_1){
  var pathString;
  return $thenCompose((pathString = castToString(range_0(0, $getNameCount(sharingDir_1)).mapToObj(new UserContext$30methodref$getName$Type(sharingDir_1)).map_1(makeLambdaFunction(UserContext$31methodref$toString$Type.prototype.apply_0, UserContext$31methodref$toString$Type, [])).collect_0(of_3(new Collectors$lambda$15$Type('/', ''), new Collectors$9methodref$add$Type, new Collectors$10methodref$merge$Type, makeLambdaFunction(Collectors$11methodref$toString$Type.prototype.apply_0, Collectors$11methodref$toString$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [])))) , $getByPath_4(this$static, pathString)), makeLambdaFunction(UserContext$lambda$518$Type.prototype.apply_0, UserContext$lambda$518$Type, [this$static, sharing_1, sharingDir_1]));
}

function $lambda$518(this$static, sharing_1, sharingDir_2, dir_2){
  return $remove_16((checkCriticalElement(dir_2.ref != null) , castTo(dir_2.ref, 19)), sharing_1, sharingDir_2, this$static);
}

function $lambda$520(this$static, usernameToRemove_1, friendsUid_1){
  return friendsUid_1.ref != null?$removeFromGroup(this$static, (checkCriticalElement(friendsUid_1.ref != null) , castToString(friendsUid_1.ref)), usernameToRemove_1):new CompletableFuture_0(($clinit_Boolean() , true));
}

function $lambda$521(this$static, usernameToRemove_1, followersUid_1){
  return followersUid_1.ref != null?$removeFromGroup(this$static, (checkCriticalElement(followersUid_1.ref != null) , castToString(followersUid_1.ref)), usernameToRemove_1):new CompletableFuture_0(($clinit_Boolean() , true));
}

function $lambda$522(this$static, groupUid_1, username_2){
  return $thenCompose($getByPath_6(this$static, get_176(this$static.username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['shared', groupUid_1]))), makeLambdaFunction(UserContext$lambda$523$Type.prototype.apply_0, UserContext$lambda$523$Type, [this$static, username_2]));
}

function $lambda$523(this$static, usernameToRevoke_1, opt_1){
  if (opt_1.ref == null)
    return new CompletableFuture_0(($clinit_Boolean() , true));
  return $thenCompose($thenCompose(loadReadAccessSharingLinksFromIndex((checkCriticalElement(opt_1.ref != null) , castTo(opt_1.ref, 19)), this$static.network, this$static.crypto), makeLambdaFunction(UserContext$lambda$524$Type.prototype.apply_0, UserContext$lambda$524$Type, [this$static, usernameToRevoke_1])), makeLambdaFunction(UserContext$lambda$525$Type.prototype.apply_0, UserContext$lambda$525$Type, [this$static, usernameToRevoke_1, opt_1]));
}

function $lambda$524(this$static, usernameToRevoke_1, readCaps_1){
  return $revokeAllReadCaps(this$static, readCaps_1.retrievedCapabilities, usernameToRevoke_1);
}

function $lambda$525(this$static, usernameToRevoke_1, opt_2){
  return $thenCompose(loadSharingLinksFromIndex((checkCriticalElement(opt_2.ref != null) , castTo(opt_2.ref, 19)), this$static.network, this$static.crypto), makeLambdaFunction(UserContext$lambda$526$Type.prototype.apply_0, UserContext$lambda$526$Type, [this$static, usernameToRevoke_1]));
}

function $lambda$526(this$static, usernameToRevoke_1, writeCaps_1){
  return $revokeAllWriteCaps(this$static, writeCaps_1.retrievedCapabilities, usernameToRevoke_1);
}

function $lambda$527(this$static, usernameToRevoke_1, c_2){
  return $thenApply($unShareReadAccessWith(this$static, get_176(c_2.path, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])), singleton(usernameToRevoke_1)), makeLambdaFunction(UserContext$lambda$292$Type.prototype.apply_0, UserContext$lambda$292$Type, []));
}

function $lambda$529(this$static, usernameToRevoke_1, c_2){
  return $thenApply($unShareWriteAccessWith(this$static, get_176(c_2.path, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])), singleton(usernameToRevoke_1)), makeLambdaFunction(UserContext$lambda$293$Type.prototype.apply_0, UserContext$lambda$293$Type, []));
}

function $lambda$532(this$static, txns_1, filter_2, home_2){
  return $applyComplexUpdate(this$static.network.synchronizer, $owner(home_2), txns_1.signer, new UserContext$lambda$533$Type(txns_1, filter_2), new WriteSynchronizer$lambda$23$Type);
}

function $lambda$72_2(this$static, expiry_0){
  return $compareTo_8(expiry_0, $plusMonths(($clinit_LocalDate() , now_3()), 1)) < 0?$renewUsernameClaim(this$static, $plusMonths(now_3(), 2)):new CompletableFuture_0(($clinit_Boolean() , true));
}

function $lambda$75_0(this$static, friendName_1, ourKeys_1){
  return $thenApply($thenCompose(this$static.network.coreNode.getPublicKeyHash(friendName_1), makeLambdaFunction(UserContext$lambda$161$Type.prototype.apply_0, UserContext$lambda$161$Type, [this$static, friendName_1])), makeLambdaFunction(UserContext$lambda$76$Type.prototype.apply_0, UserContext$lambda$76$Type, [this$static, ourKeys_1, friendName_1]));
}

function $lambda$76(this$static, ourKeys_1, friendName_2, friendKeysPair_2){
  var friendBox, friendId, friendKeys;
  friendId = castTo(friendKeysPair_2.left, 55);
  friendBox = castTo(friendKeysPair_2.right, 55);
  friendKeys = new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_crypto_hash_PublicKeyHash_2_classLit, 1), $intern_0, 55, 0, [friendId, friendBox]));
  return new Pair(friendKeys, generate(this$static.username, new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_crypto_hash_PublicKeyHash_2_classLit, 1), $intern_0, 55, 0, [castTo(ourKeys_1.left, 55), castTo(ourKeys_1.right, 55)])), friendName_2, friendKeys, this$static.crypto.hasher));
}

function $lambda$85_1(this$static, file_1, cap_1){
  return $thenCompose(buildTrieFromCap(cap_1, ($clinit_TrieNodeImpl() , new TrieNodeImpl(($clinit_Collections() , $clinit_Collections() , EMPTY_MAP), ($clinit_Optional() , $clinit_Optional() , EMPTY))), this$static.network), makeLambdaFunction(UserContext$lambda$86$Type.prototype.apply_0, UserContext$lambda$86$Type, [this$static, file_1]));
}

function $lambda$86_2(this$static, file_1, t_1){
  return t_1.getByPath(file_1.pathString, this$static.crypto.hasher, this$static.network);
}

function $lambda$88_2(this$static, opt_0){
  return $getLinkPath(this$static, (checkCriticalElement(opt_0.ref != null) , castTo(opt_0.ref, 19)));
}

function $lambda$90_0(this$static, file_1, children_1){
  var child, isNull;
  if (children_1.size() != 1)
    return new CompletableFuture_0(($ensureUnmodified(file_1) , file_1.props).name);
  child = castTo($get_6($findFirst(children_1.stream())), 19);
  if ($isReadable(child.pointer.fileAccess, child.pointer.capability.rBaseKey))
    return new CompletableFuture_0(($ensureUnmodified(file_1) , file_1.props).name + (isNull = !child.pointer , isNull || child.pointer.fileAccess.isDirectory_0?'/' + ($ensureUnmodified(child) , child.props).name:''));
  return $thenApply($getLinkPath(this$static, child), makeLambdaFunction(UserContext$lambda$91$Type.prototype.apply_0, UserContext$lambda$91$Type, [file_1]));
}

function $lambda$92_2(this$static){
  return $thenApply(time_0(new UserContext$lambda$93$Type(this$static), 'Creating filetree'), makeLambdaFunction(UserContext$lambda$94$Type.prototype.apply_0, UserContext$lambda$94$Type, [this$static]));
}

function $lambda$93_1(this$static){
  return $createFileTree(this$static, this$static.entrie, this$static.username, this$static.network, this$static.crypto);
}

function $lambda$94(this$static, root_0){
  this$static.entrie = root_0;
  return this$static;
}

function $lambda$99(this$static, current_0){
  var mirror;
  if (current_0.ref != null)
    return new CompletableFuture_0($map(current_0, makeLambdaFunction(UserContext$12methodref$id$Type.prototype.apply_0, UserContext$12methodref$id$Type, [])));
  mirror = ($clinit_Bat() , new Bat($randomBytes(this$static.crypto.random, 32)));
  return $thenCompose(sha256_1(mirror, this$static.crypto.hasher), makeLambdaFunction(UserContext$lambda$101$Type.prototype.apply_0, UserContext$lambda$101$Type, [this$static, mirror]));
}

function $makePublic(this$static, file){
  if (!$equals_0(file.ownername, this$static.username))
    return errored(new IllegalStateException_0('Only the owner of a file can make it public!'));
  if ($isUserRoot(file))
    return errored(new IllegalStateException_0('You cannot publish your home directory!'));
  return $thenApply($applyUpdate(this$static.writeSynchronizer, this$static.signer.publicKeyHash, this$static.signer, new UserContext$lambda$191$Type(this$static, file)), makeLambdaFunction(UserContext$lambda$197$Type.prototype.apply_0, UserContext$lambda$197$Type, [this$static]));
}

function $processFollowRequests(this$static, all){
  return $thenCompose($thenApply($getByPath_4(this$static, '/' + this$static.username + '/shared'), makeLambdaFunction(UserContext$lambda$104$Type.prototype.apply_0, UserContext$lambda$104$Type, [])), makeLambdaFunction(UserContext$lambda$381$Type.prototype.apply_0, UserContext$lambda$381$Type, [this$static, all]));
}

function $removeFromGroup(this$static, groupUid, username){
  return $thenCompose($thenApply($unShareReadAccessWith(this$static, get_176(this$static.username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['shared', groupUid])), singleton(username)), makeLambdaFunction(UserContext$lambda$292$Type.prototype.apply_0, UserContext$lambda$292$Type, [])), makeLambdaFunction(UserContext$lambda$522$Type.prototype.apply_0, UserContext$lambda$522$Type, [this$static, groupUid, username]));
}

function $removeFromPendingOutgoing(this$static, usernameToRemove){
  return $thenCompose($thenApply($getByPath_4(this$static, '/' + this$static.username), makeLambdaFunction(UserContext$lambda$421$Type.prototype.apply_0, UserContext$lambda$421$Type, [])), makeLambdaFunction(UserContext$lambda$245$Type.prototype.apply_0, UserContext$lambda$245$Type, [this$static, usernameToRemove]));
}

function $removePublicCap(this$static, path){
  return $thenApply($applyUpdate(this$static.writeSynchronizer, this$static.signer.publicKeyHash, this$static.signer, new UserContext$lambda$185$Type(this$static, path)), makeLambdaFunction(UserContext$lambda$190$Type.prototype.apply_0, UserContext$lambda$190$Type, [this$static]));
}

function $renewUsernameClaim(this$static, expiry){
  return renewUsernameClaim(this$static.username, this$static.signer, expiry, this$static.crypto.hasher, this$static.network);
}

function $retrieveAndAddEntryPointToTrie(this$static, root, e){
  return $thenCompose(retrieveEntryPoint(e, this$static.network), makeLambdaFunction(UserContext$lambda$445$Type.prototype.apply_0, UserContext$lambda$445$Type, [this$static, root]));
}

function $revokeAllReadCaps(this$static, caps, usernameToRevoke){
  return reduceAll(caps, ($clinit_Boolean() , true), new UserContext$lambda$527$Type(this$static, usernameToRevoke), new UserContext$lambda$528$Type);
}

function $revokeAllWriteCaps(this$static, caps, usernameToRevoke){
  return reduceAll(caps, ($clinit_Boolean() , true), new UserContext$lambda$529$Type(this$static, usernameToRevoke), new UserContext$lambda$530$Type);
}

function $rotateAllKeys(this$static, file, parent_0, rotateSigners, initial, c){
  var originalCap, owner, parentCap, parentSigner;
  owner = $owner(parent_0);
  parentSigner = $signingPair(parent_0);
  parentCap = parent_0.pointer.capability;
  originalCap = file.pointer.capability;
  return $thenCompose($thenCompose(rotateSigners?initAndAuthoriseSigner(owner, parentSigner, random_3(this$static.crypto.random, this$static.crypto.signer), this$static.network, initial, c):new CompletableFuture_0(new Pair(initial, $signingPair(file))), makeLambdaFunction(UserContext$lambda$294$Type.prototype.apply_0, UserContext$lambda$294$Type, [this$static, rotateSigners, owner, parentCap, parent_0, file, c, originalCap])), makeLambdaFunction(UserContext$lambda$297$Type.prototype.apply_0, UserContext$lambda$297$Type, [this$static, file, c, owner, rotateSigners, parentSigner, parent_0, parentCap, originalCap]));
}

function $sendFollowRequest_2(this$static, targetUsername, requestedKey){
  return $thenCompose($thenApply($getByPath_4(this$static, '/' + this$static.username + '/shared'), makeLambdaFunction(UserContext$lambda$104$Type.prototype.apply_0, UserContext$lambda$104$Type, [])), makeLambdaFunction(UserContext$lambda$281$Type.prototype.apply_0, UserContext$lambda$281$Type, [this$static, targetUsername, requestedKey]));
}

function $sendInitialFollowRequest(this$static, targetUsername){
  if ($equals_0(this$static.username, targetUsername)) {
    return new CompletableFuture_0(($clinit_Boolean() , false));
  }
  return $sendFollowRequest_2(this$static, targetUsername, ($clinit_SymmetricKey() , random_10(castTo($get(PROVIDERS_1, ($clinit_SymmetricKey$Type() , TweetNaCl)), 91), castTo($get(RNG_PROVIDERS_0, TweetNaCl), 86))));
}

function $sendWriteCapToAll(this$static, toFile, writersToAdd, s, c){
  if (writersToAdd.isEmpty())
    return new CompletableFuture_0(s);
  ($clinit_System() , out_0).println_0('Resharing WRITE cap to ' + toFile + ' with ' + writersToAdd);
  return $thenCompose($getByPath_5(this$static, $getParent(toFile).pathString, s), makeLambdaFunction(UserContext$lambda$361$Type.prototype.apply_0, UserContext$lambda$361$Type, [this$static, toFile, writersToAdd, s, c]));
}

function $sendWriteCapToAll_0(this$static, file, parent_0, pathToFile, writersToAdd, in_0, c){
  var sharingFunction;
  if ($equals_13(parent_0.pointer.capability.writer, file.pointer.capability.writer))
    return errored(new IllegalStateException_0('A file must have different writer than its parent to grant write access!'));
  sharingFunction = new UserContext$lambda$365$Type(this$static, file, c);
  return $thenCompose(reduceAll(writersToAdd, in_0, new UserContext$lambda$366$Type(this$static, file, sharingFunction), new UserContext$lambda$367$Type), makeLambdaFunction(UserContext$lambda$368$Type.prototype.apply_0, UserContext$lambda$368$Type, [this$static, pathToFile, writersToAdd, c]));
}

function $shareReadAccessWith(this$static, path, readersToAdd){
  return $thenCompose($thenApply($getByPath_4(this$static, '/' + this$static.username), makeLambdaFunction(UserContext$lambda$421$Type.prototype.apply_0, UserContext$lambda$421$Type, [])), makeLambdaFunction(UserContext$lambda$338$Type.prototype.apply_0, UserContext$lambda$338$Type, [this$static, path, readersToAdd]));
}

function $shareReadAccessWith_0(this$static, path, readersToAdd, s, c){
  if (readersToAdd.isEmpty())
    return new CompletableFuture_0(s);
  return $thenCompose($getByPath_5(this$static, path.pathString, s), makeLambdaFunction(UserContext$lambda$340$Type.prototype.apply_0, UserContext$lambda$340$Type, [this$static, path, readersToAdd, s, c]));
}

function $shareReadAccessWith_1(this$static, file, p, readersToAdd, in_0, c){
  var sharingFunction;
  ensureAllowedToShare(file, this$static.username, false);
  sharingFunction = new UserContext$lambda$348$Type(this$static, c);
  return $thenCompose(reduceAll(readersToAdd, in_0, new UserContext$lambda$349$Type(this$static, file, sharingFunction), new UserContext$lambda$350$Type), makeLambdaFunction(UserContext$lambda$351$Type.prototype.apply_0, UserContext$lambda$351$Type, [this$static, p, readersToAdd, c]));
}

function $shareWriteAccessWith(this$static, fileToShare, writersToAdd){
  return $thenCompose($getByPath_6(this$static, $getParent(fileToShare)), makeLambdaFunction(UserContext$lambda$352$Type.prototype.apply_0, UserContext$lambda$352$Type, [this$static, fileToShare, writersToAdd]));
}

function $shareWriteAccessWith_0(this$static, file, pathToFile, parent_0, writersToAdd){
  var changeSigner, currentSigner;
  ensureAllowedToShare(file, this$static.username, true);
  currentSigner = $signingPair(file);
  changeSigner = $equals_13(currentSigner.publicKeyHash, $signingPair(parent_0).publicKeyHash);
  if (!changeSigner) {
    return $applyComplexUpdate(this$static.network.synchronizer, this$static.signer.publicKeyHash, $signingPair(parent_0), new UserContext$lambda$354$Type(this$static, pathToFile, writersToAdd), new WriteSynchronizer$lambda$23$Type);
  }
  return $applyComplexUpdate(this$static.network.synchronizer, this$static.signer.publicKeyHash, $signingPair(file), new UserContext$lambda$356$Type(this$static, pathToFile, writersToAdd, file, parent_0), new WriteSynchronizer$lambda$23$Type);
}

function $unPublishFile(this$static, path){
  return $thenCompose($thenCompose($thenApply($getByPath_4(this$static, '/' + this$static.username), makeLambdaFunction(UserContext$lambda$421$Type.prototype.apply_0, UserContext$lambda$421$Type, [])), makeLambdaFunction(UserContext$lambda$324$Type.prototype.apply_0, UserContext$lambda$324$Type, [this$static, path])), makeLambdaFunction(UserContext$lambda$178$Type.prototype.apply_0, UserContext$lambda$178$Type, [this$static, path]));
}

function $unShareReadAccessWith(this$static, path, initialReadersToRemove){
  var auth, hasGroups;
  hasGroups = $anyMatch(initialReadersToRemove.stream(), new UserContext$lambda$301$Type);
  return $thenCompose(hasGroups?$thenCompose($thenCompose($thenCompose((auth = signNow(this$static.signer.secret) , $thenApply(this$static.network.social.getFollowRequests(this$static.signer.publicKeyHash, auth), makeLambdaFunction(UserContext$lambda$378$Type.prototype.apply_0, UserContext$lambda$378$Type, []))), makeLambdaFunction(UserContext$26methodref$processFollowRequests$Type.prototype.apply_0, UserContext$26methodref$processFollowRequests$Type, [this$static])), makeLambdaFunction(UserContext$lambda$254$Type.prototype.apply_0, UserContext$lambda$254$Type, [this$static])), makeLambdaFunction(UserContext$lambda$302$Type.prototype.apply_0, UserContext$lambda$302$Type, [this$static, initialReadersToRemove, path])):new CompletableFuture_0(initialReadersToRemove), makeLambdaFunction(UserContext$lambda$304$Type.prototype.apply_0, UserContext$lambda$304$Type, [this$static, path]));
}

function $unShareReadAccessWith_0(this$static, path, readersToRemove, s, c){
  var absolutePathString, pathString;
  pathString = path.pathString;
  absolutePathString = $equals_0(pathString.substr(0, 1), '/')?pathString:'/' + pathString;
  return $thenCompose($getByPath_5(this$static, absolutePathString, s), makeLambdaFunction(UserContext$lambda$307$Type.prototype.apply_0, UserContext$lambda$307$Type, [this$static, absolutePathString, path, c, readersToRemove, s]));
}

function $unShareWriteAccessWith(this$static, path, initialWritersToRemove){
  var auth, hasGroups;
  hasGroups = $anyMatch(initialWritersToRemove.stream(), new UserContext$lambda$313$Type);
  return $thenCompose(hasGroups?$thenCompose($thenCompose($thenCompose((auth = signNow(this$static.signer.secret) , $thenApply(this$static.network.social.getFollowRequests(this$static.signer.publicKeyHash, auth), makeLambdaFunction(UserContext$lambda$378$Type.prototype.apply_0, UserContext$lambda$378$Type, []))), makeLambdaFunction(UserContext$26methodref$processFollowRequests$Type.prototype.apply_0, UserContext$26methodref$processFollowRequests$Type, [this$static])), makeLambdaFunction(UserContext$lambda$254$Type.prototype.apply_0, UserContext$lambda$254$Type, [this$static])), makeLambdaFunction(UserContext$lambda$314$Type.prototype.apply_0, UserContext$lambda$314$Type, [this$static, initialWritersToRemove, path])):new CompletableFuture_0(initialWritersToRemove), makeLambdaFunction(UserContext$lambda$316$Type.prototype.apply_0, UserContext$lambda$316$Type, [this$static, path]));
}

function $updatedSharedWithCache(this$static, pathToFile, usersToAdd, access, s, c){
  return $addSharedWith(this$static.sharedWithCache, access, pathToFile, usersToAdd, s, c, this$static.network);
}

function UserContext(username, signer, boxer, rootKey, network, crypto_0, userData, entrie, transactions, capCache, sharedWithCache, mirrorBat){
  this.username = username;
  this.signer = signer;
  this.boxer = boxer;
  this.rootKey = rootKey;
  this.network = network;
  this.crypto = crypto_0;
  this.entrie = entrie;
  this.writeSynchronizer = network.synchronizer;
  !!signer && $put_28(this.writeSynchronizer, signer.publicKeyHash, signer.publicKeyHash, userData);
  this.transactions = transactions;
  this.capCache = capCache;
  this.sharedWithCache = sharedWithCache;
  this.mirrorBat = mirrorBat;
}

function addRetrievedEntryPointToTrie(ourName, root, fileCap, path, checkOwner, capCache, context, network, crypto_0){
  return $thenCompose($equals_0(fileCap.ownerName, ourName) || !checkOwner?new CompletableFuture_0(($clinit_Boolean() , true)):$isValid(fileCap, path, network), makeLambdaFunction(UserContext$lambda$474$Type.prototype.apply_0, UserContext$lambda$474$Type, [capCache, fileCap, context, network, crypto_0, root, path, ourName]));
}

function addRootEntryPointAndCommit(version, entry, current, loginPublic, owner, rootKey, c, network, tid){
  var cwd, updated, wd;
  cwd = $get_32(version, owner.publicKeyHash);
  wd = cwd.props;
  if (wd.staticData.ref == null) {
    updated = new UserStaticData_1($addEntryPoint(castTo($decrypt_3(current.allEntryPoints, rootKey, makeLambdaFunction(UserStaticData$4methodref$fromCbor$Type.prototype.apply_0, UserStaticData$4methodref$fromCbor$Type, [])), 185), entry), rootKey);
    return $thenApply(network.account.setLoginData_0(new LoginData(entry.ownerName, updated, loginPublic, ($clinit_Optional() , $clinit_Optional() , EMPTY)), owner), makeLambdaFunction(UserContext$lambda$370$Type.prototype.apply_0, UserContext$lambda$370$Type, [version]));
  }
   else {
    updated = $map(wd.staticData, makeLambdaFunction(UserContext$lambda$371$Type.prototype.apply_0, UserContext$lambda$371$Type, [rootKey, entry]));
    return c.commit_1(owner.publicKeyHash, owner, new WriterData(wd.controller, wd.generationAlgorithm, wd.publicData, wd.followRequestReceiver, wd.ownedKeys, wd.namedOwnedKeys, updated, wd.tree), cwd, tid);
  }
}

function buildCapCache(root, username, mirrorBatId, network, crypto_0){
  return $thenCompose($thenCompose($thenApply(root.getByPath(username, crypto_0.hasher, network), makeLambdaFunction(UserContext$2methodref$get$Type.prototype.apply_0, UserContext$2methodref$get$Type, [])), makeLambdaFunction(UserContext$lambda$5$Type.prototype.apply_0, UserContext$lambda$5$Type, [network, mirrorBatId, crypto_0])), makeLambdaFunction(UserContext$lambda$6$Type.prototype.apply_0, UserContext$lambda$6$Type, [mirrorBatId, crypto_0, network]));
}

function buildTrieFromCap(cap, currentRoot, network){
  var entry;
  entry = new EntryPoint(cap, '');
  return $thenCompose(($clinit_NetworkAccess() , $thenCompose($exceptionally($thenCompose($getValue_0(network.synchronizer, entry.pointer.owner, entry.pointer.writer), makeLambdaFunction(NetworkAccess$lambda$33$Type.prototype.apply_0, NetworkAccess$lambda$33$Type, [network, entry])), makeLambdaFunction(NetworkAccess$lambda$34$Type.prototype.apply_0, NetworkAccess$lambda$34$Type, [])), makeLambdaFunction(NetworkAccess$lambda$35$Type.prototype.apply_0, NetworkAccess$lambda$35$Type, [entry, network]))), makeLambdaFunction(UserContext$lambda$78$Type.prototype.apply_0, UserContext$lambda$78$Type, [currentRoot, entry, network]));
}

function createEntryDirectory(owner, directoryName, current, loginPublic, userRootKey, mirrorBatId, network, crypto_0){
  var entry, preHash, rootBat, rootMapKey, rootPointer, rootRKey, rootWKey, t1, writer, writerPair;
  t1 = ($clinit_System() , fromDouble_0(Date.now()));
  writer = random_3(crypto_0.random, crypto_0.signer);
  $info(LOG_5, 'Random User generation took ' + toString_4(sub_1(fromDouble_0(Date.now()), t1)) + ' mS');
  rootMapKey = $randomBytes(crypto_0.random, 32);
  rootBat = ($clinit_Optional() , new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(crypto_0.random, 32))))));
  rootRKey = ($clinit_SymmetricKey() , random_10(castTo($get(PROVIDERS_1, ($clinit_SymmetricKey$Type() , TweetNaCl)), 91), castTo($get(RNG_PROVIDERS_0, TweetNaCl), 86)));
  rootWKey = random_10(castTo($get(PROVIDERS_1, TweetNaCl), 91), castTo($get(RNG_PROVIDERS_0, TweetNaCl), 86));
  $info(LOG_5, 'Random keys generation took ' + toString_4(sub_1(fromDouble_0(Date.now()), t1)) + ' mS');
  preHash = hashKey(writer.publicSigningKey);
  writerPair = new SigningPrivateKeyAndPublicHash(preHash, writer.secretSigningKey);
  rootPointer = new WritableAbsoluteCapability(owner.publicKeyHash, preHash, rootMapKey, rootBat, rootRKey, rootWKey);
  entry = new EntryPoint(rootPointer, directoryName);
  return $thenApply(call_2(owner.publicKeyHash, makeLambdaFunction(UserContext$lambda$147$Type.prototype.apply_0, UserContext$lambda$147$Type, [owner, writerPair, rootPointer, network, entry, current, loginPublic, userRootKey, crypto_0, rootRKey, rootWKey, directoryName, rootBat, mirrorBatId, writer]), network.dhtClient), makeLambdaFunction(UserContext$lambda$156$Type.prototype.apply_0, UserContext$lambda$156$Type, [directoryName, entry]));
}

function createSpecialDirectory(globalRoot, username, dirName, mirrorBatId, network, crypto_0){
  return $thenApply($thenCompose(globalRoot.getByPath(username, crypto_0.hasher, network), makeLambdaFunction(UserContext$lambda$73$Type.prototype.apply_0, UserContext$lambda$73$Type, [dirName, network, mirrorBatId, crypto_0])), makeLambdaFunction(UserContext$lambda$74$Type.prototype.apply_0, UserContext$lambda$74$Type, [globalRoot]));
}

function ensureAllowedToShare(file, ourname, isWrite){
  if ($isUserRoot(file))
    throw toJs(new IllegalStateException_0('You cannot share your home directory public!'));
  if (isWrite && !$equals_0(file.ownername, ourname))
    throw toJs(new IllegalStateException_0('Only the owner of a file can grant write access!'));
}

function fromSecretLink(link_0, network, crypto_0){
  $clinit_UserContext();
  var cap, context, e, empty, invalidLink, userData;
  try {
    cap = fromLink(link_0);
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 51)) {
      e = $e0;
      invalidLink = new CompletableFuture;
      $completeExceptionally(invalidLink, e);
      return invalidLink;
    }
     else 
      throw toJs($e0);
  }
  empty = new WriterData(cap.owner, ($clinit_Optional() , $clinit_Optional() , EMPTY), (null , EMPTY), (null , EMPTY), (null , EMPTY), ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP), (null , EMPTY), (null , EMPTY));
  userData = new CommittedWriterData(($clinit_MaybeMultihash() , $clinit_MaybeMultihash() , EMPTY_0), empty, (null , EMPTY));
  context = new UserContext(null, null, null, null, network, crypto_0, userData, ($clinit_TrieNodeImpl() , new TrieNodeImpl((null , EMPTY_MAP), (null , EMPTY))), null, null, new SharedWithCache(null, null, network, crypto_0), (null , EMPTY));
  return $thenApply(buildTrieFromCap(cap, context.entrie, network), makeLambdaFunction(UserContext$lambda$77$Type.prototype.apply_0, UserContext$lambda$77$Type, [context]));
}

function getLoginData_2(username, loginPub, loginSecret, mfa, network){
  var time;
  return $thenCompose(network.account.getLoginData(username, loginPub, (time = $toByteArray_2(new CborObject$CborLong(($clinit_System() , fromDouble_0(Date.now())))) , $crypto_sign(loginSecret.implementation, time, loginSecret.secretKey)), ($clinit_Optional() , $clinit_Optional() , EMPTY)), makeLambdaFunction(UserContext$lambda$19$Type.prototype.apply_0, UserContext$lambda$19$Type, [network, username, loginPub, loginSecret, mfa]));
}

function getMirrorBat(username, identity, loginRoot, network){
  return $thenApply(asyncExceptionally(new UserContext$lambda$95$Type(network, username, loginRoot, identity), makeLambdaFunction(UserContext$lambda$96$Type.prototype.apply_0, UserContext$lambda$96$Type, [network, username, loginRoot])), makeLambdaFunction(UserContext$lambda$98$Type.prototype.apply_0, UserContext$lambda$98$Type, []));
}

function getPublicCapability(originalPath, network){
  $clinit_UserContext();
  var ownerName;
  ownerName = $getName_0(originalPath, 0).pathString;
  return $thenCompose(network.coreNode.getPublicKeyHash(ownerName), makeLambdaFunction(UserContext$lambda$80$Type.prototype.apply_0, UserContext$lambda$80$Type, [network, originalPath, ownerName]));
}

function getWriterData(network, owner, writer){
  $clinit_UserContext();
  return $thenApply(getWriterDataCbor(network.dhtClient, network.mutable, owner, writer), makeLambdaFunction(UserContext$lambda$480$Type.prototype.apply_0, UserContext$lambda$480$Type, []));
}

function getWriterDataCbor(ipfs, mutable, owner, writer){
  return $thenCompose($thenCompose(mutable.getPointer(owner, writer), makeLambdaFunction(UserContext$lambda$484$Type.prototype.apply_0, UserContext$lambda$484$Type, [ipfs, owner, writer])), makeLambdaFunction(UserContext$lambda$487$Type.prototype.apply_0, UserContext$lambda$487$Type, [ipfs, owner]));
}

function lambda$1_17(crypto_0, network_1, home_2){
  $clinit_UserContext();
  return $getChild_2(home_2, '.transactions', network_1);
}

function lambda$10_7(progressCallback_0, username_1, mfa_2, network_3, crypto_4, password_5, pair_6){
  $clinit_UserContext();
  var algorithm;
  algorithm = castTo($orElseThrow(fromCbor_98(castTo(pair_6.right, 48)).generationAlgorithm, new UserContext$lambda$11$Type), 441);
  progressCallback_0.accept('Generating keys');
  return $thenCompose(generateUser(username_1, password_5, crypto_4.hasher, crypto_4.symmetricProvider, crypto_4.random, crypto_4.signer, crypto_4.boxer, algorithm), makeLambdaFunction(UserContext$lambda$12$Type.prototype.apply_0, UserContext$lambda$12$Type, [progressCallback_0, username_1, mfa_2, pair_6, network_3, crypto_4]));
}

function lambda$102(id_0){
  $clinit_UserContext();
  return $clinit_Optional() , new Optional(checkCriticalNotNull(id_0));
}

function lambda$113(hasher_0, data_1, progressCallback_2, signup_3, diff_4){
  $clinit_UserContext();
  if (diff_4.ref != null) {
    progressCallback_2.accept('The server is currently under load, retrying...');
    return $thenApply($thenCompose(time_0(new UserContext$lambda$114$Type(hasher_0, diff_4, data_1), 'Proof of work'), signup_3), makeLambdaFunction(UserContext$lambda$115$Type.prototype.apply_0, UserContext$lambda$115$Type, []));
  }
  return new CompletableFuture_0(($clinit_Boolean() , true));
}

function lambda$114(hasher_0, diff_1, data_2){
  $clinit_UserContext();
  return $generateProofOfWork(hasher_0, (checkCriticalElement(diff_1.ref != null) , castTo(diff_1.ref, 252)).requiredDifficulty, data_2);
}

function lambda$115(d_0){
  $clinit_UserContext();
  if (d_0.ref != null)
    throw toJs(new IllegalStateException_0('Server is under load please try again later'));
  return $clinit_Boolean() , true;
}

function lambda$117(network_0, username_1, claimChain_2, token_3, proof_4){
  $clinit_UserContext();
  return network_0.coreNode.updateChain(username_1, claimChain_2, proof_4, token_3);
}

function lambda$118(hasher_0, data_1, network_2, username_3, claimChain_4, token_5, progressCallback_6, diff_7){
  $clinit_UserContext();
  if (diff_7.ref != null) {
    progressCallback_6.accept('The server is currently under load, retrying...');
    return $thenApply($thenCompose(time_0(new UserContext$lambda$119$Type(hasher_0, diff_7, data_1), 'Proof of work'), makeLambdaFunction(UserContext$lambda$120$Type.prototype.apply_0, UserContext$lambda$120$Type, [network_2, username_3, claimChain_4, token_5])), makeLambdaFunction(UserContext$lambda$121$Type.prototype.apply_0, UserContext$lambda$121$Type, []));
  }
  return new CompletableFuture_0(($clinit_Boolean() , true));
}

function lambda$119(hasher_0, diff_1, data_2){
  $clinit_UserContext();
  return $generateProofOfWork(hasher_0, (checkCriticalElement(diff_1.ref != null) , castTo(diff_1.ref, 252)).requiredDifficulty, data_2);
}

function lambda$12_5(progressCallback_0, username_1, mfa_2, pair_3, network_4, crypto_5, userWithRoot_6){
  $clinit_UserContext();
  progressCallback_0.accept('Logging in');
  return login_2(username_1, userWithRoot_6, mfa_2, pair_3, network_4, crypto_5, progressCallback_0);
}

function lambda$120(network_0, username_1, claimChain_2, token_3, proof_4){
  $clinit_UserContext();
  return network_0.coreNode.updateChain(username_1, claimChain_2, proof_4, token_3);
}

function lambda$121(d_0){
  $clinit_UserContext();
  if (d_0.ref != null)
    throw toJs(new IllegalStateException_0('Server is under load please try again later'));
  return $clinit_Boolean() , true;
}

function lambda$122(username_0, signer_1, expiry_2, hasher_3, network_4, existing_5){
  $clinit_UserContext();
  var last, newClaim, storage, updated;
  last = castTo(existing_5.getAtIndex(existing_5.size() - 1), 72);
  storage = last.claim.storageProviders;
  newClaim = build_1(username_0, signer_1.secret, expiry_2, storage);
  updated = new ArrayList_1(existing_5.subList(0, existing_5.size() - 1));
  $add(updated, new UserPublicKeyLink_0(signer_1.publicKeyHash, newClaim, ($clinit_Optional() , $clinit_Optional() , EMPTY)));
  return updateChainWithRetry(username_0, updated, hasher_3, network_4, new UserContext$lambda$123$Type);
}

function lambda$14_6(username_0, userWithRoot_1, mfa_2, network_3, crypto_4, progressCallback_5, pair_6){
  $clinit_UserContext();
  return login_2(username_0, userWithRoot_1, mfa_2, pair_6, network_3, crypto_4, progressCallback_5);
}

function lambda$147(owner_0, writerPair_1, rootPointer_2, network_3, entry_4, current_5, loginPublic_6, userRootKey_7, crypto_8, rootRKey_9, rootWKey_10, directoryName_11, rootBat_12, mirrorBatId_13, writer_14, tid_15){
  $clinit_UserContext();
  return $thenCompose(network_3.dhtClient.putSigningKey($signMessage(owner_0.secret, $toByteArray_2($toCbor_13(writer_14.publicSigningKey))), owner_0.publicKeyHash, writer_14.publicSigningKey, tid_15), makeLambdaFunction(UserContext$lambda$148$Type.prototype.apply_0, UserContext$lambda$148$Type, [owner_0, writerPair_1, tid_15, rootPointer_2, network_3, entry_4, current_5, loginPublic_6, userRootKey_7, crypto_8, rootRKey_9, rootWKey_10, directoryName_11, rootBat_12, mirrorBatId_13]));
}

function lambda$148(owner_0, writerPair_1, tid_2, rootPointer_3, network_4, entry_5, current_6, loginPublic_7, userRootKey_8, crypto_9, rootRKey_10, rootWKey_11, directoryName_12, rootBat_13, mirrorBatId_14){
  $clinit_UserContext();
  return $applyComplexUpdate(network_4.synchronizer, owner_0.publicKeyHash, owner_0, new UserContext$lambda$149$Type(owner_0, writerPair_1, tid_2, rootPointer_3, network_4, entry_5, current_6, loginPublic_7, userRootKey_8, crypto_9, rootRKey_10, rootWKey_11, directoryName_12, rootBat_13, mirrorBatId_14), new WriteSynchronizer$lambda$23$Type);
}

function lambda$149(owner_0, writerPair_1, tid_2, rootPointer_3, network_4, entry_5, current_6, loginPublic_7, userRootKey_8, crypto_9, rootRKey_10, rootWKey_11, directoryName_12, rootBat_13, mirrorBatId_14, s_15, committer_16){
  $clinit_UserContext();
  return $thenCompose($addOwnedKeyAndCommit($get_32(s_15, owner_0.publicKeyHash).props, owner_0.publicKeyHash, owner_0, build_4(writerPair_1, owner_0.publicKeyHash), $get_32(s_15, owner_0.publicKeyHash).hash_0, $get_32(s_15, owner_0.publicKeyHash).sequence, network_4, committer_16, tid_2), makeLambdaFunction(UserContext$lambda$150$Type.prototype.apply_0, UserContext$lambda$150$Type, [committer_16, owner_0, writerPair_1, tid_2, rootPointer_3, network_4, entry_5, current_6, loginPublic_7, userRootKey_8, crypto_9, rootRKey_10, rootWKey_11, directoryName_12, rootBat_13, mirrorBatId_14]));
}

function lambda$150(committer_0, owner_1, writerPair_2, tid_3, rootPointer_4, network_5, entry_6, current_7, loginPublic_8, userRootKey_9, crypto_10, rootRKey_11, rootWKey_12, directoryName_13, rootBat_14, mirrorBatId_15, s2_16){
  $clinit_UserContext();
  var nextChunk, t2, timestamp;
  t2 = ($clinit_System() , fromDouble_0(Date.now()));
  nextChunk = buildSubsequentChunk($randomBytes(crypto_10.random, 32), ($clinit_Optional() , new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(crypto_10.random, 32)))))), rootRKey_11);
  timestamp = ($clinit_LocalDateTime() , now_4());
  return $thenCompose(createEmptyDir(($clinit_MaybeMultihash() , $clinit_MaybeMultihash() , EMPTY_0), rootRKey_11, rootWKey_12, new Optional(checkCriticalNotNull(writerPair_2)), new FileProperties_0(directoryName_13, true, false, '', 0, timestamp, timestamp, false, (null , EMPTY), (null , EMPTY)), (null , EMPTY), ($clinit_SymmetricKey() , random_10(castTo($get(PROVIDERS_1, ($clinit_SymmetricKey$Type() , TweetNaCl)), 91), castTo($get(RNG_PROVIDERS_0, TweetNaCl), 86))), nextChunk, rootBat_14, mirrorBatId_15, crypto_10.random, crypto_10.hasher), makeLambdaFunction(UserContext$lambda$151$Type.prototype.apply_0, UserContext$lambda$151$Type, [committer_0, owner_1, writerPair_2, tid_3, t2, rootPointer_4, network_5, s2_16, entry_6, current_7, loginPublic_8, userRootKey_9]));
}

function lambda$151(committer_0, owner_1, writerPair_2, tid_3, t2_4, rootPointer_6, network_7, s2_8, entry_9, current_10, loginPublic_11, userRootKey_12, root_12){
  $clinit_UserContext();
  $info(LOG_5, 'Uploading entry point directory');
  return $thenCompose($thenCompose($thenCompose(createEmpty_1(owner_1.publicKeyHash, writerPair_2, network_7.dhtClient, network_7.hasher, tid_3), makeLambdaFunction(UserContext$lambda$152$Type.prototype.apply_0, UserContext$lambda$152$Type, [committer_0, owner_1, writerPair_2, tid_3])), makeLambdaFunction(UserContext$lambda$153$Type.prototype.apply_0, UserContext$lambda$153$Type, [t2_4, root_12, committer_0, rootPointer_6, writerPair_2, network_7, tid_3])), makeLambdaFunction(UserContext$lambda$155$Type.prototype.apply_0, UserContext$lambda$155$Type, [s2_8, entry_9, current_10, loginPublic_11, owner_1, userRootKey_12, committer_0, network_7, tid_3]));
}

function lambda$152(committer_0, owner_1, writerPair_2, tid_3, empty_4){
  $clinit_UserContext();
  return committer_0.commit_1(owner_1.publicKeyHash, writerPair_2, empty_4, new CommittedWriterData(($clinit_MaybeMultihash() , $clinit_MaybeMultihash() , EMPTY_0), empty_4, ($clinit_Optional() , $clinit_Optional() , EMPTY)), tid_3);
}

function lambda$153(t2_0, root_2, committer_3, rootPointer_4, writerPair_5, network_6, tid_7, s3_7){
  $clinit_UserContext();
  return $thenApply($commit_5(root_2, s3_7, committer_3, rootPointer_4, ($clinit_Optional() , new Optional(checkCriticalNotNull(writerPair_5))), network_6, tid_7), makeLambdaFunction(UserContext$lambda$154$Type.prototype.apply_0, UserContext$lambda$154$Type, [t2_0]));
}

function lambda$154(t2_0, finalSnapshot_1){
  $clinit_UserContext();
  var t3;
  t3 = ($clinit_System() , fromDouble_0(Date.now()));
  $info(LOG_5, 'Uploading root dir metadata took ' + toString_4(sub_1(t3, t2_0)) + ' mS');
  return finalSnapshot_1;
}

function lambda$155(s2_0, entry_1, current_2, loginPublic_3, owner_4, userRootKey_5, committer_6, network_7, tid_8, x_9){
  $clinit_UserContext();
  return addRootEntryPointAndCommit($merge_3(x_9, s2_0), entry_1, current_2, loginPublic_3, owner_4, userRootKey_5, committer_6, network_7, tid_8);
}

function lambda$156(directoryName_0, entry_1){
  $clinit_UserContext();
  return $put_27(($clinit_TrieNodeImpl() , new TrieNodeImpl(($clinit_Collections() , $clinit_Collections() , EMPTY_MAP), ($clinit_Optional() , $clinit_Optional() , EMPTY))), '/' + directoryName_0, entry_1);
}

function lambda$16_6(entryData_0, loginRoot_1, username_2, network_3, crypto_4, progressCallback_5, pair_6){
  $clinit_UserContext();
  var boxer, legacyAccount, signer, staticData, userData;
  userData = fromCbor_98(castTo(pair_6.right, 48));
  legacyAccount = userData.staticData.ref != null;
  if (legacyAccount)
    throw toJs(new IllegalStateException_0("Legacy accounts can't stay logged in. Please change your password to upgrade your account."));
  staticData = castTo($decrypt_3(entryData_0.allEntryPoints, loginRoot_1, makeLambdaFunction(UserStaticData$4methodref$fromCbor$Type.prototype.apply_0, UserStaticData$4methodref$fromCbor$Type, [])), 185);
  signer = new SigningPrivateKeyAndPublicHash(userData.controller, castTo($get_6(staticData.identity), 190).secretSigningKey);
  boxer = castTo($orElseThrow(staticData.boxer, new UserContext$lambda$17$Type), 188);
  return login_4(username_2, userData, staticData, signer, boxer, loginRoot_1, pair_6, network_3, crypto_4, progressCallback_5);
}

function lambda$163(signerOpt_0, wd_1){
  $clinit_UserContext();
  return new Pair((checkCriticalElement(signerOpt_0.ref != null) , castTo(signerOpt_0.ref, 55)), castTo($get_6(wd_1.props.followRequestReceiver), 55));
}

function lambda$168(signerOpt_0, boxer_1){
  $clinit_UserContext();
  return $clinit_Optional() , new Optional(checkCriticalNotNull(new Pair((checkCriticalElement(signerOpt_0.ref != null) , castTo(signerOpt_0.ref, 55)), boxer_1)));
}

function lambda$189(wd_0, newRoot_1){
  $clinit_UserContext();
  return new WriterData(wd_0.controller, wd_0.generationAlgorithm, ($clinit_Optional() , new Optional(checkCriticalNotNull(newRoot_1))), wd_0.followRequestReceiver, wd_0.ownedKeys, wd_0.namedOwnedKeys, wd_0.staticData, wd_0.tree);
}

function lambda$19_5(network_0, username_1, loginPub_2, loginSecret_3, mfa_4, res_5){
  $clinit_UserContext();
  var authReq;
  if (res_5.a_0 != null)
    return new CompletableFuture_0(castTo($a(res_5), 116));
  authReq = castTo($b(res_5), 305);
  return $thenApply($thenCompose(castTo(mfa_4(authReq), 6), makeLambdaFunction(UserContext$lambda$20$Type.prototype.apply_0, UserContext$lambda$20$Type, [network_0, username_1, loginPub_2, loginSecret_3])), makeLambdaFunction(UserContext$lambda$21$Type.prototype.apply_0, UserContext$lambda$21$Type, []));
}

function lambda$196(wd_0, newRoot_1){
  $clinit_UserContext();
  return new WriterData(wd_0.controller, wd_0.generationAlgorithm, ($clinit_Optional() , new Optional(checkCriticalNotNull(newRoot_1))), wd_0.followRequestReceiver, wd_0.ownedKeys, wd_0.namedOwnedKeys, wd_0.staticData, wd_0.tree);
}

function lambda$20_4(network_0, username_1, loginPub_2, loginSecret_3, authResp_4){
  $clinit_UserContext();
  var time;
  return network_0.account.getLoginData(username_1, loginPub_2, (time = $toByteArray_2(new CborObject$CborLong(($clinit_System() , fromDouble_0(Date.now())))) , $crypto_sign(loginSecret_3.implementation, time, loginSecret_3.secretKey)), ($clinit_Optional() , new Optional(checkCriticalNotNull(authResp_4))));
}

function lambda$206(pendingOutgoing_0, children_1){
  $clinit_UserContext();
  return castTo($collect_0($filter(children_1.stream(), new UserContext$lambda$207$Type(pendingOutgoing_0)), toMap(makeLambdaFunction(UserContext$lambda$208$Type.prototype.apply_0, UserContext$lambda$208$Type, []), makeLambdaFunction(UserContext$lambda$209$Type.prototype.apply_0, UserContext$lambda$209$Type, []), new Collectors$lambda$44$Type, new Collectors$22methodref$ctor$Type)), 68);
}

function lambda$207(pendingOutgoing_0, c_1){
  $clinit_UserContext();
  return !$startsWith(($ensureUnmodified(c_1) , c_1.props).name, '.') && !$startsWith(($ensureUnmodified(c_1) , c_1.props).name, '.groups.cbor') && !pendingOutgoing_0.contains(($ensureUnmodified(c_1) , c_1.props).name);
}

function lambda$21_2(login_0){
  $clinit_UserContext();
  if (login_0.b_0 != null)
    throw toJs(new IllegalStateException_0('Server rejected second factor auth'));
  return castTo($a(login_0), 116);
}

function lambda$217(res_0, fileOpt_1, reader_2){
  $clinit_UserContext();
  return reader_2.parseStream(makeLambdaFunction(UserContext$19methodref$fromCbor$Type.prototype.apply_0, UserContext$19methodref$fromCbor$Type, []), new UserContext$lambda$219$Type(res_0), $getSize((checkCriticalElement(fileOpt_1.ref != null) , castTo(fileOpt_1.ref, 19))));
}

function lambda$219(res_0, anno_1){
  $clinit_UserContext();
  return $put_6(res_0, anno_1.username, anno_1);
}

function lambda$22_2(loginRoot_0, legacyAccount_1, userData_2, loginSecret_3, generatedCredentials_4, username_5, pair_6, network_7, crypto_8, progressCallback_9, entryData_10){
  $clinit_UserContext();
  var boxer, e, signer, staticData;
  try {
    staticData = castTo($decrypt_3(entryData_10.allEntryPoints, loginRoot_0, makeLambdaFunction(UserStaticData$4methodref$fromCbor$Type.prototype.apply_0, UserStaticData$4methodref$fromCbor$Type, [])), 185);
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 51)) {
      e = $e0;
      if (legacyAccount_1)
        throw toJs(new IllegalStateException_0('Incorrect password'));
      else 
        throw toJs(new RuntimeException_2(e));
    }
     else 
      throw toJs($e0);
  }
  signer = new SigningPrivateKeyAndPublicHash(userData_2.controller, legacyAccount_1?loginSecret_3:castTo($get_6(staticData.identity), 190).secretSigningKey);
  boxer = castTo($orElse(staticData.boxer, generatedCredentials_4.boxer), 188);
  return login_4(username_5, userData_2, staticData, signer, boxer, loginRoot_0, pair_6, network_7, crypto_8, progressCallback_9);
}

function lambda$23_3(username_0, signer_1, boxer_2, login_3, network_4, crypto_5, pair_6, userData_7, progressCallback_8, root_9){
  $clinit_UserContext();
  return $thenCompose(load(username_0, root_9, network_4, crypto_5), makeLambdaFunction(UserContext$lambda$24$Type.prototype.apply_0, UserContext$lambda$24$Type, [username_0, signer_1, boxer_2, login_3, network_4, crypto_5, pair_6, userData_7, root_9, progressCallback_8]));
}

function lambda$24_2(username_0, signer_1, boxer_2, login_3, network_4, crypto_5, pair_6, userData_7, root_8, progressCallback_9, tofuCorenode_10){
  $clinit_UserContext();
  return $thenCompose($thenApply($thenApply($thenCompose($thenApply(root_8.getByPath(username_0, crypto_5.hasher, network_4), makeLambdaFunction(UserContext$0methodref$get$Type.prototype.apply_0, UserContext$0methodref$get$Type, [])), makeLambdaFunction(UserContext$lambda$1$Type.prototype.apply_0, UserContext$lambda$1$Type, [crypto_5, network_4])), makeLambdaFunction(UserContext$1methodref$get$Type.prototype.apply_0, UserContext$1methodref$get$Type, [])), makeLambdaFunction(UserContext$lambda$3$Type.prototype.apply_0, UserContext$lambda$3$Type, [network_4, crypto_5])), makeLambdaFunction(UserContext$lambda$25$Type.prototype.apply_0, UserContext$lambda$25$Type, [username_0, signer_1, boxer_2, login_3, network_4, tofuCorenode_10, crypto_5, pair_6, userData_7, root_8, progressCallback_9]));
}

function lambda$243(fileOpt_0, reader_1){
  $clinit_UserContext();
  return parse_6(reader_1, $getSize((checkCriticalElement(fileOpt_0.ref != null) , castTo(fileOpt_0.ref, 19))), makeLambdaFunction(UserContext$23methodref$fromCbor$Type.prototype.apply_0, UserContext$23methodref$fromCbor$Type, []));
}

function lambda$249(fileOpt_0, reader_1){
  $clinit_UserContext();
  return parse_6(reader_1, $getSize((checkCriticalElement(fileOpt_0.ref != null) , castTo(fileOpt_0.ref, 19))), makeLambdaFunction(UserContext$24methodref$fromCbor$Type.prototype.apply_0, UserContext$24methodref$fromCbor$Type, []));
}

function lambda$25_4(username_0, signer_1, boxer_2, login_3, network_4, tofuCorenode_5, crypto_6, pair_7, userData_8, root_9, progressCallback_10, transactions_11){
  $clinit_UserContext();
  return $thenCompose($thenApply(asyncExceptionally(new UserContext$lambda$95$Type(network_4, username_0, login_3, signer_1), makeLambdaFunction(UserContext$lambda$96$Type.prototype.apply_0, UserContext$lambda$96$Type, [network_4, username_0, login_3])), makeLambdaFunction(UserContext$lambda$98$Type.prototype.apply_0, UserContext$lambda$98$Type, [])), makeLambdaFunction(UserContext$lambda$26$Type.prototype.apply_0, UserContext$lambda$26$Type, [username_0, signer_1, boxer_2, login_3, network_4, tofuCorenode_5, crypto_6, pair_7, userData_8, root_9, transactions_11, progressCallback_10]));
}

function lambda$26_3(username_0, signer_1, boxer_2, login_3, network_4, tofuCorenode_5, crypto_6, pair_7, userData_8, root_9, transactions_10, progressCallback_11, mirrorBatId_12){
  $clinit_UserContext();
  return $thenCompose(buildCapCache(root_9, username_0, $map(mirrorBatId_12, makeLambdaFunction(UserContext$6methodref$id$Type.prototype.apply_0, UserContext$6methodref$id$Type, [])), network_4, crypto_6), makeLambdaFunction(UserContext$lambda$28$Type.prototype.apply_0, UserContext$lambda$28$Type, [username_0, signer_1, boxer_2, login_3, network_4, tofuCorenode_5, crypto_6, pair_7, userData_8, root_9, transactions_10, mirrorBatId_12, progressCallback_11]));
}

function lambda$261(pendingIncoming_0, pendingOutgoing_1, followers_2, followerRoots_3, followingRoots_4, blocked_5, annotations_6, groups_7){
  $clinit_UserContext();
  return new SocialState(pendingIncoming_0, pendingOutgoing_1.pendingOutgoingFollowRequests, followers_2, followerRoots_3, followingRoots_4, blocked_5, annotations_6, groups_7.uidToGroupName);
}

function lambda$28_1(username_0, signer_1, boxer_2, login_3, network_4, tofuCorenode_5, crypto_6, pair_7, userData_8, root_9, transactions_10, mirrorBatId_11, progressCallback_12, capCache_13){
  $clinit_UserContext();
  return $thenCompose(($clinit_SharedWithCache() , $thenCompose(root_9.getByPath($resolve(get_176(username_0, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])), CACHE_BASE.pathString).pathString, crypto_6.hasher, network_4), makeLambdaFunction(SharedWithCache$lambda$35$Type.prototype.apply_0, SharedWithCache$lambda$35$Type, [username_0, network_4, crypto_6, root_9]))), makeLambdaFunction(UserContext$lambda$29$Type.prototype.apply_0, UserContext$lambda$29$Type, [username_0, signer_1, boxer_2, login_3, network_4, tofuCorenode_5, crypto_6, pair_7, userData_8, root_9, transactions_10, capCache_13, mirrorBatId_11, progressCallback_12]));
}

function lambda$283(targetUsername_0, x_1){
  $clinit_UserContext();
  return $equals_0(x_1, targetUsername_0);
}

function lambda$29_1(username_0, signer_1, boxer_2, login_3, network_4, tofuCorenode_5, crypto_6, pair_7, userData_8, root_9, transactions_10, capCache_11, mirrorBatId_12, progressCallback_13, sharedWith_14){
  $clinit_UserContext();
  var result;
  result = new UserContext(username_0, signer_1, boxer_2, login_3, network_4.withCorenode(tofuCorenode_5), crypto_6, new CommittedWriterData(castTo(pair_7.left, 111).updated, userData_8, castTo(pair_7.left, 111).sequence), root_9, transactions_10, capCache_11, sharedWith_14, mirrorBatId_12);
  return $exceptionally((progressCallback_13.accept('Retrieving Friends') , $thenCompose($getValue_0(result.writeSynchronizer, result.signer.publicKeyHash, result.signer.publicKeyHash), makeLambdaFunction(UserContext$lambda$92$Type.prototype.apply_0, UserContext$lambda$92$Type, [result]))), makeLambdaFunction(UserContext$7methodref$logAndThrow$Type.prototype.apply_0, UserContext$7methodref$logAndThrow$Type, []));
}

function lambda$296(linkCap_0, newSnapshot_1){
  $clinit_UserContext();
  return new Pair(newSnapshot_1, linkCap_0);
}

function lambda$35_3(username_0, f_1, p_2, i_3){
  $clinit_UserContext();
  return $thenApply(castTo(f_1(p_2), 6), makeLambdaFunction(UserContext$lambda$36$Type.prototype.apply_0, UserContext$lambda$36$Type, [username_0, i_3]));
}

function lambda$369(usernameToGrantAccess_0, sharingFunction_1, file_2, shared_3){
  $clinit_UserContext();
  var sharedDir;
  if (shared_3.ref == null)
    return errored(new IllegalStateException_0('Unknown recipient for sharing: ' + usernameToGrantAccess_0));
  sharedDir = (checkCriticalElement(shared_3.ref != null) , castTo(shared_3.ref, 19));
  return castTo(sharingFunction_1.apply_1(sharedDir, file_2), 87);
}

function lambda$371(rootKey_0, entry_1, sd_2){
  $clinit_UserContext();
  return new UserStaticData_1($addEntryPoint(castTo($decrypt_3(sd_2.allEntryPoints, rootKey_0, makeLambdaFunction(UserStaticData$4methodref$fromCbor$Type.prototype.apply_0, UserStaticData$4methodref$fromCbor$Type, [])), 185), entry_1), rootKey_0);
}

function lambda$378(reqs_0){
  $clinit_UserContext();
  var cbor;
  cbor = deserialize(new CborDecoder(new ByteArrayInputStream(reqs_0)), reqs_0.length);
  if (!instanceOf(cbor, 21))
    throw toJs(new IllegalStateException_0('Invalid cbor for list of follow requests: ' + cbor));
  return castTo($collect_0($map_0(castTo(cbor, 21).value_0.stream(), makeLambdaFunction(UserContext$25methodref$fromCbor$Type.prototype.apply_0, UserContext$25methodref$fromCbor$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
}

function lambda$386(pendingOut_0, p_1){
  $clinit_UserContext();
  return pendingOut_0.pendingOutgoingFollowRequests.contains(castTo($get_6(p_1.req.entry), 60).ownerName);
}

function lambda$40_2(existing_0){
  $clinit_UserContext();
  if (existing_0.size() > 0)
    throw toJs(new IllegalStateException_0('User already exists!'));
  return $clinit_Boolean() , true;
}

function lambda$403(addToStatic_0, trie_1, p_2, entry_3){
  $clinit_UserContext();
  return $apply_10(addToStatic_0, trie_1, new FollowRequestWithCipherText(new FollowRequest(($clinit_Optional() , new Optional(checkCriticalNotNull(entry_3))), p_2.req.key), p_2.cipher));
}

function lambda$41_1(username_0, password_1, crypto_2, algorithm_3){
  $clinit_UserContext();
  return generateUser(username_0, password_1, crypto_2.hasher, crypto_2.symmetricProvider, crypto_2.random, crypto_2.signer, crypto_2.boxer, algorithm_3);
}

function lambda$414(s_0, opt_1){
  $clinit_UserContext();
  return $map(opt_1, makeLambdaFunction(UserContext$lambda$415$Type.prototype.apply_0, UserContext$lambda$415$Type, [s_0]));
}

function lambda$42_0(username_0, expiry_1, network_2, crypto_3, progressCallback_4, algorithm_5, token_6, addCard_7, opLog_8, initialNetwork_9, existingIdentity_10, tmpIdentityStore_11, userWithRoot_12){
  $clinit_UserContext();
  var boxer, entryData, identity, identityHash, identityPair, isLegacy, loginDataIdentity, loginPublicKey, mirror;
  loginPublicKey = userWithRoot_12.signer.publicSigningKey;
  isLegacy = algorithm_5.outputBytes == 96;
  identityPair = isLegacy?userWithRoot_12.signer:castTo($orElseGet(existingIdentity_10, new UserContext$lambda$43$Type(crypto_3)), 190);
  addCard_7.ref != null && tmpIdentityStore_11.accept(bytesToHex($toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [$toCbor_13(identityPair.publicSigningKey), $toCbor_14(identityPair.secretSigningKey)]))))));
  identityHash = hashKey(identityPair.publicSigningKey);
  identity = new SigningPrivateKeyAndPublicHash(identityHash, identityPair.secretSigningKey);
  boxer = isLegacy?($clinit_Optional() , $clinit_Optional() , EMPTY):($clinit_Optional() , new Optional(checkCriticalNotNull(userWithRoot_12.boxer)));
  loginDataIdentity = isLegacy?($clinit_Optional() , $clinit_Optional() , EMPTY):($clinit_Optional() , new Optional(checkCriticalNotNull(identityPair)));
  entryData = new UserStaticData(($clinit_Collections() , $clinit_Collections() , EMPTY_LIST), userWithRoot_12.root, loginDataIdentity, boxer);
  progressCallback_4.accept('Registering username');
  mirror = ($clinit_Bat() , new Bat($randomBytes(crypto_3.random, 32)));
  return $thenCompose(sha256_1(mirror, crypto_3.hasher), makeLambdaFunction(UserContext$lambda$44$Type.prototype.apply_0, UserContext$lambda$44$Type, [identity, username_0, expiry_1, network_2, identityHash, identityPair, userWithRoot_12, crypto_3, progressCallback_4, isLegacy, entryData, algorithm_5, token_6, addCard_7, opLog_8, initialNetwork_9, loginPublicKey, mirror]));
}

function lambda$422(ourName_0, e_1){
  $clinit_UserContext();
  return $equals_0(e_1.ownerName, ourName_0);
}

function lambda$423(userData_0, e_1){
  $clinit_UserContext();
  return $withOwner(e_1, userData_0.controller);
}

function lambda$424(network_0, t_1, e_2){
  $clinit_UserContext();
  return $thenApply(($clinit_NetworkAccess() , asyncExceptionally(new NetworkAccess$lambda$37$Type(e_2, network_0), makeLambdaFunction(NetworkAccess$lambda$38$Type.prototype.apply_0, NetworkAccess$lambda$38$Type, [network_0, e_2]))), makeLambdaFunction(UserContext$lambda$426$Type.prototype.apply_0, UserContext$lambda$426$Type, [t_1]));
}

function lambda$426(t_0, r_1){
  $clinit_UserContext();
  return t_0.put(r_1.path, r_1.entry);
}

function lambda$43_0(crypto_0){
  $clinit_UserContext();
  return random_3(crypto_0.random, crypto_0.signer);
}

function lambda$436(t_0, fromUser_1){
  $clinit_UserContext();
  return castTo($orElse($map(fromUser_1, makeLambdaFunction(UserContext$lambda$437$Type.prototype.apply_0, UserContext$lambda$437$Type, [t_0])), t_0), 110);
}

function lambda$437(t_0, userEntrie_1){
  $clinit_UserContext();
  return t_0.putNode(userEntrie_1.ownerName, userEntrie_1);
}

function lambda$44_2(identity_0, username_1, expiry_2, network_3, identityHash_4, identityPair_5, userWithRoot_6, crypto_7, progressCallback_8, isLegacy_9, entryData_10, algorithm_11, token_12, addCard_13, opLog_14, initialNetwork_15, loginPublicKey_16, mirror_17, batid_18){
  $clinit_UserContext();
  return $thenCompose($addBat(opLog_14, username_1, batid_18, mirror_17, identity_0), makeLambdaFunction(UserContext$lambda$45$Type.prototype.apply_0, UserContext$lambda$45$Type, [identity_0, username_1, expiry_2, network_3, identityHash_4, identityPair_5, userWithRoot_6, crypto_7, progressCallback_8, isLegacy_9, entryData_10, algorithm_11, batid_18, token_12, addCard_13, opLog_14, initialNetwork_15, loginPublicKey_16]));
}

function lambda$440(root_0, includeUser_1, groups_2){
  $clinit_UserContext();
  var friend, friendName, friendName$iterator, friendNames, group, group$iterator;
  friendNames = castTo($collect_0($filter(new StreamImpl(null, new Spliterators$IteratorSpliterator(root_0.getChildNames(), 1)), includeUser_1), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47);
  for (friendName$iterator = friendNames.iterator(); friendName$iterator.hasNext_0();) {
    friendName = castToString(friendName$iterator.next_1());
    friend = castTo(root_0.getChildNode(friendName), 241);
    for (group$iterator = $getFriends(castTo(groups_2.left, 271), friendName).iterator(); group$iterator.hasNext_0();) {
      group = castTo(group$iterator.next_1(), 60);
      $indexOf_1(friend.groups, group, 0) != -1 || $add(friend.groups, group);
    }
  }
  return root_0;
}

function lambda$443(ourName_0, n_1){
  $clinit_UserContext();
  return !$equals_0(n_1, ourName_0);
}

function lambda$449(res_0, f_1, reader_2){
  $clinit_UserContext();
  return $thenApply(reader_2.parseStream(makeLambdaFunction(UserContext$35methodref$fromCbor$Type.prototype.apply_0, UserContext$35methodref$fromCbor$Type, []), new UserContext$36methodref$add$Type(res_0), ($ensureUnmodified(f_1) , f_1.props).size_0), makeLambdaFunction(UserContext$lambda$452$Type.prototype.apply_0, UserContext$lambda$452$Type, [res_0]));
}

function lambda$45_0(identity_0, username_1, expiry_2, network_3, identityHash_4, identityPair_5, userWithRoot_6, crypto_7, progressCallback_8, isLegacy_9, entryData_10, algorithm_11, batid_12, token_13, addCard_14, opLog_15, initialNetwork_16, loginPublicKey_17){
  $clinit_UserContext();
  return $thenCompose($thenApply(initialNetwork_16.dhtClient.id_1(), makeLambdaFunction(UserContext$lambda$46$Type.prototype.apply_0, UserContext$lambda$46$Type, [identity_0, username_1, expiry_2])), makeLambdaFunction(UserContext$lambda$47$Type.prototype.apply_0, UserContext$lambda$47$Type, [network_3, identityHash_4, identityPair_5, userWithRoot_6, crypto_7, identity_0, progressCallback_8, isLegacy_9, entryData_10, algorithm_11, username_1, batid_12, token_13, addCard_14, opLog_15, initialNetwork_16, loginPublicKey_17]));
}

function lambda$457(f_0, in_1){
  $clinit_UserContext();
  return readFully(in_1, ($ensureUnmodified(f_0) , f_0.props).size_0);
}

function lambda$459(fromFriends_0, toRemove_1){
  $clinit_UserContext();
  return castTo($collect_0($filter(fromFriends_0.stream(), new UserContext$lambda$460$Type(toRemove_1)), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
}

function lambda$462(latest_0, e_1){
  $clinit_UserContext();
  return $put_5(latest_0, e_1.pointer.writer, e_1);
}

function lambda$466(f_0, reader_1){
  $clinit_UserContext();
  return parse_6(reader_1, ($ensureUnmodified(f_0) , f_0.props).size_0, makeLambdaFunction(UserContext$37methodref$fromCbor$Type.prototype.apply_0, UserContext$37methodref$fromCbor$Type, []));
}

function lambda$468(fopt_0, g_1){
  $clinit_UserContext();
  return new Pair(g_1, fopt_0);
}

function lambda$47_2(network_0, identityHash_1, identityPair_2, userWithRoot_3, crypto_4, identity_5, progressCallback_6, isLegacy_7, entryData_8, algorithm_9, username_10, batid_11, token_12, addCard_13, opLog_14, initialNetwork_15, loginPublicKey_16, chain_17){
  $clinit_UserContext();
  return $thenCompose(call_2(identityHash_1, makeLambdaFunction(UserContext$lambda$48$Type.prototype.apply_0, UserContext$lambda$48$Type, [network_0, identityHash_1, identityPair_2, userWithRoot_3, crypto_4, identity_5, progressCallback_6, isLegacy_7, entryData_8, algorithm_9]), network_0.dhtClient), makeLambdaFunction(UserContext$lambda$54$Type.prototype.apply_0, UserContext$lambda$54$Type, [username_10, batid_11, network_0, crypto_4, identityHash_1, chain_17, identity_5, token_12, addCard_13, progressCallback_6, opLog_14, initialNetwork_15, userWithRoot_3, entryData_8, loginPublicKey_16]));
}

function lambda$474(capCache_0, fileCap_1, context_2, network_3, crypto_4, root_5, path_6, ourName_7, valid_8){
  $clinit_UserContext();
  var parts, username;
  if (!(checkCriticalNotNull(valid_8) , valid_8))
    return errored(new IllegalStateException_0('Capability claims incorrect owner!'));
  parts = $split(path_6, '/');
  if (parts.length < 3 || !$equals_0(parts[2], 'shared'))
    return new CompletableFuture_0(root_5.put(path_6, fileCap_1));
  username = parts[1];
  if ($equals_0(username, ourName_7))
    return new CompletableFuture_0(root_5);
  return $thenApply($thenCompose($thenApply(root_5.getByPath(get_176(ourName_7, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['.capabilitycache'])).pathString, crypto_4.hasher, network_3), makeLambdaFunction(UserContext$lambda$475$Type.prototype.apply_0, UserContext$lambda$475$Type, [])), makeLambdaFunction(UserContext$lambda$476$Type.prototype.apply_0, UserContext$lambda$476$Type, [capCache_0, fileCap_1, context_2])), makeLambdaFunction(UserContext$lambda$478$Type.prototype.apply_0, UserContext$lambda$478$Type, [root_5, username]));
}

function lambda$478(root_0, username_1, fromUser_2){
  $clinit_UserContext();
  return castTo($orElse($map(fromUser_2, makeLambdaFunction(UserContext$lambda$479$Type.prototype.apply_0, UserContext$lambda$479$Type, [root_0, username_1])), root_0), 110);
}

function lambda$48_1(network_0, identityHash_1, identityPair_2, userWithRoot_3, crypto_4, identity_5, progressCallback_6, isLegacy_7, entryData_8, algorithm_9, tid_10){
  $clinit_UserContext();
  return $thenCompose($thenCompose(network_0.dhtClient.putSigningKey($signMessage(identityPair_2.secretSigningKey, $toByteArray_2($toCbor_13(identityPair_2.publicSigningKey))), identityHash_1, identityPair_2.publicSigningKey, tid_10), makeLambdaFunction(UserContext$lambda$49$Type.prototype.apply_0, UserContext$lambda$49$Type, [network_0, identityHash_1, identityPair_2, tid_10, userWithRoot_3, crypto_4])), makeLambdaFunction(UserContext$lambda$51$Type.prototype.apply_0, UserContext$lambda$51$Type, [network_0, identity_5, identityHash_1, tid_10, progressCallback_6, isLegacy_7, entryData_8, algorithm_9]));
}

function lambda$482(username_0, network_1, signer_2){
  $clinit_UserContext();
  var owner;
  owner = castTo($orElseThrow(signer_2, new UserContext$lambda$483$Type(username_0)), 55);
  return getWriterDataCbor(network_1.dhtClient, network_1.mutable, owner, owner);
}

function lambda$484(ipfs_0, owner_1, writer_2, casOpt_3){
  $clinit_UserContext();
  return $thenApply(ipfs_0.getSigningKey(owner_1, writer_2), makeLambdaFunction(UserContext$lambda$485$Type.prototype.apply_0, UserContext$lambda$485$Type, [casOpt_3]));
}

function lambda$486(signer_0, raw_1){
  $clinit_UserContext();
  return fromCbor_63(fromByteArray((checkCriticalElement(signer_0.ref != null) , $unsignMessage(castTo(signer_0.ref, 233), raw_1))));
}

function lambda$487(ipfs_0, owner_1, pointer_2){
  $clinit_UserContext();
  return $thenApply($thenApply(ipfs_0.get_1(owner_1, castTo($get_9(pointer_2.updated), 44), ($clinit_Optional() , $clinit_Optional() , EMPTY)), makeLambdaFunction(UserContext$40methodref$get$Type.prototype.apply_0, UserContext$40methodref$get$Type, [])), makeLambdaFunction(UserContext$lambda$489$Type.prototype.apply_0, UserContext$lambda$489$Type, [pointer_2]));
}

function lambda$49_1(network_0, identityHash_1, identityPair_2, tid_3, userWithRoot_4, crypto_5){
  $clinit_UserContext();
  var publicBoxingKey;
  publicBoxingKey = userWithRoot_4.boxer.publicBoxingKey;
  return $thenCompose($sha256(crypto_5.hasher, $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborLong(($clinit_PublicBoxingKey$Type() , Curve25519).value_0), new CborObject$CborByteArray(publicBoxingKey.publicKey)]))))), makeLambdaFunction(UserContext$lambda$50$Type.prototype.apply_0, UserContext$lambda$50$Type, [network_0, identityHash_1, identityPair_2, publicBoxingKey, tid_3]));
}

function lambda$498(blockedUsernamesFile_0, in_1){
  $clinit_UserContext();
  return readFully(in_1, $getSize((checkCriticalElement(blockedUsernamesFile_0.ref != null) , castTo(blockedUsernamesFile_0.ref, 19))));
}

function lambda$5_6(network_0, mirrorBatId_1, crypto_2, home_3){
  $clinit_UserContext();
  return $getOrMkdirs(home_3, get_176('.capabilitycache', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])), network_0, true, mirrorBatId_1, crypto_2);
}

function lambda$50_2(network_0, identityHash_1, identityPair_2, publicBoxingKey_3, tid_4, boxerHash_5){
  $clinit_UserContext();
  return network_0.dhtClient.putBoxingKey(identityHash_1, $signMessage(identityPair_2.secretSigningKey, boxerHash_5), publicBoxingKey_3, tid_4);
}

function lambda$503(username_0, u_1){
  $clinit_UserContext();
  return !$equals_0(u_1, username_0);
}

function lambda$509(username_0, n_1){
  $clinit_UserContext();
  return $equals_0(n_1, username_0);
}

function lambda$51_2(network_0, identity_1, identityHash_2, tid_3, progressCallback_4, isLegacy_5, entryData_6, algorithm_7, boxerHash_8){
  $clinit_UserContext();
  progressCallback_4.accept('Creating filesystem');
  return $thenCompose(createIdentity(identityHash_2, identity_1, ($clinit_Optional() , new Optional(checkCriticalNotNull(new PublicKeyHash(boxerHash_8)))), isLegacy_5?new Optional(checkCriticalNotNull(entryData_6)):(null , EMPTY), algorithm_7, network_0.dhtClient, network_0.hasher, tid_3), makeLambdaFunction(UserContext$lambda$52$Type.prototype.apply_0, UserContext$lambda$52$Type, [network_0, identity_1, identityHash_2, tid_3]));
}

function lambda$511(groupName_0, m_1){
  $clinit_UserContext();
  return $findFirst($map_0($filter(m_1.uidToGroupName.entrySet_0().stream(), new UserContext$lambda$512$Type(groupName_0)), makeLambdaFunction(UserContext$lambda$513$Type.prototype.apply_0, UserContext$lambda$513$Type, [])));
}

function lambda$512(groupName_0, e_1){
  $clinit_UserContext();
  return $equals_0(castToString(e_1.getValue()), groupName_0);
}

function lambda$52_3(network_0, identity_1, identityHash_2, tid_3, newUserData_4){
  $clinit_UserContext();
  var notCommitted;
  notCommitted = new CommittedWriterData(($clinit_MaybeMultihash() , $clinit_MaybeMultihash() , EMPTY_0), newUserData_4, ($clinit_Optional() , $clinit_Optional() , EMPTY));
  $put_28(network_0.synchronizer, identity_1.publicKeyHash, identity_1.publicKeyHash, notCommitted);
  return $applyComplexUpdate(network_0.synchronizer, identityHash_2, identity_1, new UserContext$lambda$53$Type(identityHash_2, identity_1, newUserData_4, notCommitted, tid_3), new WriteSynchronizer$lambda$23$Type);
}

function lambda$53_3(identityHash_0, identity_1, newUserData_2, notCommitted_3, tid_4, committer_6){
  $clinit_UserContext();
  return committer_6.commit_1(identityHash_0, identity_1, newUserData_2, notCommitted_3, tid_4);
}

function lambda$533(txns_0, filter_1, s_2, comitter_3){
  $clinit_UserContext();
  return $thenCompose($thenCompose($getUpdated_0(txns_0.transactionsDir, s_2, txns_0.networkAccess), makeLambdaFunction(TransactionServiceImpl$lambda$15$Type.prototype.apply_0, TransactionServiceImpl$lambda$15$Type, [txns_0, s_2])), makeLambdaFunction(TransactionService$lambda$1$Type.prototype.apply_0, TransactionService$lambda$1$Type, [txns_0, comitter_3, filter_1, s_2]));
}

function lambda$535(name_0, t0_1, x_2){
  $clinit_UserContext();
  var t1;
  t1 = ($clinit_System() , fromDouble_0(Date.now()));
  $log(LOG_5, ($clinit_Level() , INFO), name_0 + ' took ' + toString_4(sub_1(t1, t0_1)) + 'ms', null);
  return x_2;
}

function lambda$54_0(username_0, batid_1, network_2, crypto_3, identityHash_4, chain_5, identity_6, token_7, addCard_8, progressCallback_9, opLog_10, initialNetwork_11, userWithRoot_12, entryData_13, loginPublicKey_14){
  $clinit_UserContext();
  var t1;
  $info(LOG_5, "Creating user's root directory");
  t1 = ($clinit_System() , fromDouble_0(Date.now()));
  return $thenCompose($thenCompose($thenCompose($thenCompose($thenCompose($thenCompose(createEntryDirectory(identity_6, username_0, entryData_13, loginPublicKey_14, userWithRoot_12.root, ($clinit_Optional() , new Optional(checkCriticalNotNull(batid_1))), network_2, crypto_3), makeLambdaFunction(UserContext$lambda$55$Type.prototype.apply_0, UserContext$lambda$55$Type, [t1, username_0, batid_1, network_2, crypto_3])), makeLambdaFunction(UserContext$lambda$56$Type.prototype.apply_0, UserContext$lambda$56$Type, [username_0, batid_1, network_2, crypto_3])), makeLambdaFunction(UserContext$lambda$57$Type.prototype.apply_0, UserContext$lambda$57$Type, [username_0, batid_1, network_2, crypto_3])), makeLambdaFunction(UserContext$lambda$58$Type.prototype.apply_0, UserContext$lambda$58$Type, [network_2, identityHash_4])), makeLambdaFunction(UserContext$lambda$59$Type.prototype.apply_0, UserContext$lambda$59$Type, [username_0, chain_5, identity_6, token_7, addCard_8, progressCallback_9, opLog_10, initialNetwork_11, crypto_3])), makeLambdaFunction(UserContext$lambda$60$Type.prototype.apply_0, UserContext$lambda$60$Type, [username_0, userWithRoot_12, initialNetwork_11, crypto_3, progressCallback_9]));
}

function lambda$55_1(t1_0, username_2, batid_3, network_4, crypto_5, globalRoot_5){
  $clinit_UserContext();
  $info(LOG_5, ($clinit_System() , 'Creating root directory took ' + toString_4(sub_1(fromDouble_0(Date.now()), t1_0)) + ' mS'));
  return createSpecialDirectory(globalRoot_5, username_2, 'shared', ($clinit_Optional() , new Optional(checkCriticalNotNull(batid_3))), network_4, crypto_5);
}

function lambda$56_2(username_0, batid_1, network_2, crypto_3, globalRoot_4){
  $clinit_UserContext();
  return createSpecialDirectory(globalRoot_4, username_0, '.transactions', ($clinit_Optional() , new Optional(checkCriticalNotNull(batid_1))), network_2, crypto_3);
}

function lambda$57_0(username_0, batid_1, network_2, crypto_3, globalRoot_4){
  $clinit_UserContext();
  return createSpecialDirectory(globalRoot_4, username_0, '.capabilitycache', ($clinit_Optional() , new Optional(checkCriticalNotNull(batid_1))), network_2, crypto_3);
}

function lambda$59_0(username_0, chain_1, identity_2, token_3, addCard_4, progressCallback_5, opLog_6, initialNetwork_7, crypto_8){
  $clinit_UserContext();
  return signupWithRetry(castTo(chain_1.getAtIndex(0), 72), addCard_4.ref != null?makeLambdaFunction(UserContext$lambda$63$Type.prototype.apply_0, UserContext$lambda$63$Type, [initialNetwork_7, identity_2, username_0, chain_1, opLog_6, addCard_4]):makeLambdaFunction(UserContext$lambda$64$Type.prototype.apply_0, UserContext$lambda$64$Type, [initialNetwork_7, username_0, chain_1, opLog_6, token_3]), crypto_8.hasher, progressCallback_5);
}

function lambda$6_4(mirrorBatId_0, crypto_1, network_2, cacheRoot_3){
  $clinit_UserContext();
  return $thenApply($getOrMkdirs(cacheRoot_3, get_176('world', stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])), network_2, true, mirrorBatId_0, crypto_1), makeLambdaFunction(IncomingCapCache$lambda$0$Type.prototype.apply_0, IncomingCapCache$lambda$0$Type, [cacheRoot_3, crypto_1]));
}

function lambda$60_0(username_0, userWithRoot_1, initialNetwork_2, crypto_3, progressCallback_4){
  $clinit_UserContext();
  return signIn_0(username_0, userWithRoot_1, makeLambdaFunction(UserContext$lambda$61$Type.prototype.apply_0, UserContext$lambda$61$Type, []), initialNetwork_2, crypto_3, progressCallback_4);
}

function lambda$63_2(initialNetwork_0, identity_1, username_2, chain_3, opLog_4, addCard_5, proof_6){
  $clinit_UserContext();
  return $thenCompose(initialNetwork_0.coreNode.startPaidSignup(username_2, castTo(chain_3.getAtIndex(0), 72), proof_6), makeLambdaFunction(UserContext$lambda$65$Type.prototype.apply_0, UserContext$lambda$65$Type, [initialNetwork_0, identity_1, username_2, chain_3, opLog_4, proof_6, addCard_5]));
}

function lambda$64_2(initialNetwork_0, username_1, chain_2, opLog_3, token_4, proof_5){
  $clinit_UserContext();
  return initialNetwork_0.coreNode.signup(username_1, castTo(chain_2.getAtIndex(0), 72), opLog_3, proof_5, token_4);
}

function lambda$65_3(initialNetwork_0, identity_1, username_2, chain_3, opLog_4, proof_5, addCard_6, toPayOrRetry_7){
  $clinit_UserContext();
  return toPayOrRetry_7.b_0 != null?new CompletableFuture_0(($clinit_Optional() , new Optional(checkCriticalNotNull(castTo($b(toPayOrRetry_7), 252))))):$thenCompose(castTo((checkCriticalElement(addCard_6.ref != null) , castTo(addCard_6.ref, 31)).apply_1(castTo($a(toPayOrRetry_7), 398), identity_1), 6), makeLambdaFunction(UserContext$lambda$66$Type.prototype.apply_0, UserContext$lambda$66$Type, [initialNetwork_0, identity_1, username_2, chain_3, opLog_4, proof_5]));
}

function lambda$66_3(initialNetwork_0, identity_1, username_2, chain_3, opLog_4, proof_5, signedSpaceReq_6){
  $clinit_UserContext();
  return $thenCompose(initialNetwork_0.coreNode.completePaidSignup(username_2, castTo(chain_3.getAtIndex(0), 72), opLog_4, signedSpaceReq_6, proof_5), makeLambdaFunction(UserContext$lambda$67$Type.prototype.apply_0, UserContext$lambda$67$Type, [initialNetwork_0, identity_1, username_2, chain_3, opLog_4, signedSpaceReq_6, proof_5]));
}

function lambda$67_0(initialNetwork_0, identity_1, username_2, chain_3, opLog_4, signedSpaceReq_5, proof_6, paid_7){
  $clinit_UserContext();
  return paid_7.error.ref != null?errored(new RuntimeException_0(castToString($get_6(paid_7.error)))):$thenApply(retryUntilPositiveQuota(initialNetwork_0, identity_1, new UserContext$lambda$68$Type(initialNetwork_0, username_2, chain_3, opLog_4, signedSpaceReq_5, proof_6)), makeLambdaFunction(UserContext$lambda$69$Type.prototype.apply_0, UserContext$lambda$69$Type, []));
}

function lambda$68(initialNetwork_0, username_1, chain_2, opLog_3, signedSpaceReq_4, proof_5){
  $clinit_UserContext();
  return initialNetwork_0.coreNode.completePaidSignup(username_1, castTo(chain_2.getAtIndex(0), 72), opLog_3, signedSpaceReq_4, proof_5);
}

function lambda$70(network_0, identity_1, retry_2, sleepMillis_3, attemptsLeft_5, quota_5){
  $clinit_UserContext();
  if (gt(quota_5.value_0, 0))
    return new CompletableFuture_0(($clinit_Boolean() , true));
  if (attemptsLeft_5 <= 0)
    return errored(new IllegalStateException_0('Unable to complete paid signup. Did you add your payment card?'));
  return $thenCompose(castTo(retry_2.get_0(), 6), makeLambdaFunction(UserContext$lambda$71$Type.prototype.apply_0, UserContext$lambda$71$Type, [network_0, identity_1, retry_2, sleepMillis_3, attemptsLeft_5]));
}

function lambda$71(network_0, identity_1, retry_2, sleepMillis_3, attemptsLeft_5){
  $clinit_UserContext();
  var signedTime;
  return signedTime = signNow(identity_1.secret) , $thenCompose(network_0.spaceUsage.getQuota_0(identity_1.publicKeyHash, signedTime), makeLambdaFunction(UserContext$lambda$70$Type.prototype.apply_0, UserContext$lambda$70$Type, [network_0, identity_1, retry_2, mul_0(sleepMillis_3, 2), attemptsLeft_5 - 1]));
}

function lambda$73(dirName_0, network_1, mirrorBatId_2, crypto_3, root_4){
  $clinit_UserContext();
  return $mkdir_1((checkCriticalElement(root_4.ref != null) , castTo(root_4.ref, 19)), dirName_0, network_1, true, mirrorBatId_2, crypto_3);
}

function lambda$77_0(context_0, trieNode_1){
  $clinit_UserContext();
  context_0.entrie = trieNode_1;
  return context_0;
}

function lambda$78_1(currentRoot_0, entry_1, network_2, r_3){
  $clinit_UserContext();
  return $thenApply($isValid(entry_1, r_3.path, network_2), makeLambdaFunction(UserContext$lambda$79$Type.prototype.apply_0, UserContext$lambda$79$Type, [currentRoot_0, r_3, entry_1]));
}

function lambda$79(currentRoot_0, r_1, entry_2, valid_3){
  $clinit_UserContext();
  if (!(checkCriticalNotNull(valid_3) , valid_3))
    throw toJs(new IllegalStateException_0('Invalid link!'));
  return currentRoot_0.put(r_1.path, entry_2);
}

function lambda$8_6(network_0, username_1){
  $clinit_UserContext();
  return $thenCompose(network_0.coreNode.getPublicKeyHash(username_1), makeLambdaFunction(UserContext$lambda$482$Type.prototype.apply_0, UserContext$lambda$482$Type, [username_1, network_0]));
}

function lambda$80_2(network_0, originalPath_1, ownerName_2, ownerOpt_3){
  $clinit_UserContext();
  var owner;
  if (ownerOpt_3.ref == null)
    throw toJs(new IllegalStateException_0("Owner doesn't exist for path " + originalPath_1));
  owner = (checkCriticalElement(ownerOpt_3.ref != null) , castTo(ownerOpt_3.ref, 55));
  return $thenCompose(getWriterData_0(owner, owner, network_0.mutable, network_0.dhtClient), makeLambdaFunction(UserContext$lambda$81$Type.prototype.apply_0, UserContext$lambda$81$Type, [owner, network_0, originalPath_1, ownerName_2]));
}

function lambda$81_0(owner_0, network_1, originalPath_2, ownerName_3, userData_4){
  $clinit_UserContext();
  var publicData;
  publicData = userData_4.props.publicData;
  if (publicData.ref == null)
    throw toJs(new IllegalStateException_0('User ' + ownerName_3 + ' has not made any files public.'));
  return $thenApply($thenCompose($thenCompose(network_1.dhtClient.get_1(owner_0, (checkCriticalElement(publicData.ref != null) , castTo(publicData.ref, 44)), ($clinit_Optional() , $clinit_Optional() , EMPTY)), makeLambdaFunction(UserContext$lambda$82$Type.prototype.apply_0, UserContext$lambda$82$Type, [owner_0, network_1])), makeLambdaFunction(UserContext$lambda$83$Type.prototype.apply_0, UserContext$lambda$83$Type, [originalPath_2])), makeLambdaFunction(UserContext$lambda$84$Type.prototype.apply_0, UserContext$lambda$84$Type, [ownerName_3, originalPath_2]));
}

function lambda$82_0(owner_0, network_1, rootCbor_2){
  $clinit_UserContext();
  return build_8(owner_0, (checkCriticalElement(rootCbor_2.ref != null) , castTo(rootCbor_2.ref, 7)), network_1.hasher, network_1.dhtClient);
}

function lambda$83_0(originalPath_0, publicCaps_1){
  $clinit_UserContext();
  return $getByPath(publicCaps_1, originalPath_0.pathString);
}

function lambda$84_0(ownerName_0, originalPath_1, resOpt_2){
  $clinit_UserContext();
  if (resOpt_2.ref == null || castTo((checkCriticalElement(resOpt_2.ref != null) , castTo(resOpt_2.ref, 20)).left, 127).cap.ref == null)
    throw toJs(new IllegalStateException_0('User ' + ownerName_0 + ' has not published a file at ' + originalPath_1));
  return castTo($get_6(castTo((checkCriticalElement(resOpt_2.ref != null) , castTo(resOpt_2.ref, 20)).left, 127).cap), 71);
}

function lambda$91_2(file_0, p_1){
  $clinit_UserContext();
  return ($ensureUnmodified(file_0) , file_0.props).name + (p_1.length > 0?'/' + p_1:'');
}

function lambda$95_2(network_0, username_1, loginRoot_2, identity_3){
  $clinit_UserContext();
  return $thenApply(network_0.batCave.getUserBats_0(username_1, identity_3), makeLambdaFunction(UserContext$lambda$97$Type.prototype.apply_0, UserContext$lambda$97$Type, [network_0, username_1, loginRoot_2]));
}

function lambda$96_2(network_0, username_1, loginRoot_2, t_3){
  $clinit_UserContext();
  if (network_0.batCache_0.ref != null && $toString_0(t_3, t_3.getMessage()).indexOf('ConnectException') != -1)
    return $getUserBats(castTo($get_6(network_0.batCache_0), 1199), username_1, loginRoot_2);
  return errored(t_3);
}

function lambda$97_0(network_0, username_1, loginRoot_2, res_3){
  $clinit_UserContext();
  !res_3.isEmpty() && network_0.batCache_0.ref != null && $setUserBats(castTo($get_6(network_0.batCache_0), 1199), username_1, res_3, loginRoot_2);
  return res_3;
}

function login_2(username, generatedCredentials, mfa, pair, network, crypto_0, progressCallback){
  var legacyAccount, loginPub, loginRoot, loginSecret, time, userData;
  try {
    userData = fromCbor_98(castTo(pair.right, 48));
    legacyAccount = userData.staticData.ref != null;
    loginRoot = generatedCredentials.root;
    loginPub = generatedCredentials.signer.publicSigningKey;
    loginSecret = generatedCredentials.signer.secretSigningKey;
    return $thenCompose(legacyAccount?new CompletableFuture_0(castTo($get_6(userData.staticData), 116)):$thenCompose(network.account.getLoginData(username, loginPub, (time = $toByteArray_2(new CborObject$CborLong(($clinit_System() , fromDouble_0(Date.now())))) , $crypto_sign(loginSecret.implementation, time, loginSecret.secretKey)), ($clinit_Optional() , $clinit_Optional() , EMPTY)), makeLambdaFunction(UserContext$lambda$19$Type.prototype.apply_0, UserContext$lambda$19$Type, [network, username, loginPub, loginSecret, mfa])), makeLambdaFunction(UserContext$lambda$22$Type.prototype.apply_0, UserContext$lambda$22$Type, [loginRoot, legacyAccount, userData, loginSecret, generatedCredentials, username, pair, network, crypto_0, progressCallback]));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 33)) {
      throw toJs(new IllegalStateException_0('Incorrect password'));
    }
     else 
      throw toJs($e0);
  }
}

function login_4(username, userData, staticData, signer, boxer, login, pair, network, crypto_0, progressCallback){
  var root, ourFileSystemEntries;
  try {
    return $thenCompose((root = ($clinit_TrieNodeImpl() , new TrieNodeImpl(($clinit_Collections() , $clinit_Collections() , EMPTY_MAP), ($clinit_Optional() , $clinit_Optional() , EMPTY))) , ourFileSystemEntries = castTo($collect_0($map_0($filter(staticData.entries_0.stream(), new UserContext$lambda$422$Type(username)), makeLambdaFunction(UserContext$lambda$423$Type.prototype.apply_0, UserContext$lambda$423$Type, [userData])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17) , $exceptionally(reduceAll(ourFileSystemEntries, root, new UserContext$lambda$424$Type(network), new UserContext$lambda$425$Type), makeLambdaFunction(UserContext$32methodref$logAndThrow$Type.prototype.apply_0, UserContext$32methodref$logAndThrow$Type, []))), makeLambdaFunction(UserContext$lambda$23$Type.prototype.apply_0, UserContext$lambda$23$Type, [username, signer, boxer, login, network, crypto_0, pair, userData, progressCallback]));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 33)) {
      throw toJs(new IllegalStateException_0('Incorrect password'));
    }
     else 
      throw toJs($e0);
  }
}

function renewUsernameClaim(username, signer, expiry, hasher, network){
  $info(LOG_5, 'renewing username: ' + username + ' with expiry ' + expiry);
  return $thenCompose(network.coreNode.getChain_0(username), makeLambdaFunction(UserContext$lambda$122$Type.prototype.apply_0, UserContext$lambda$122$Type, [username, signer, expiry, hasher, network]));
}

function restoreContext(username, loginRoot, entryData, network, crypto_0, progressCallback){
  $clinit_UserContext();
  progressCallback.accept('Logging in');
  return $exceptionally($thenCompose($thenCompose(network.coreNode.getPublicKeyHash(username), makeLambdaFunction(UserContext$lambda$482$Type.prototype.apply_0, UserContext$lambda$482$Type, [username, network])), makeLambdaFunction(UserContext$lambda$16$Type.prototype.apply_0, UserContext$lambda$16$Type, [entryData, loginRoot, username, network, crypto_0, progressCallback])), makeLambdaFunction(UserContext$5methodref$logAndThrow$Type.prototype.apply_0, UserContext$5methodref$logAndThrow$Type, []));
}

function retryUntilPositiveQuota(network, identity, retry){
  var signedTime;
  signedTime = signNow(identity.secret);
  return $thenCompose(network.spaceUsage.getQuota_0(identity.publicKeyHash, signedTime), makeLambdaFunction(UserContext$lambda$70$Type.prototype.apply_0, UserContext$lambda$70$Type, [network, identity, retry, $intern_49, 5]));
}

function signIn(username, password, mfa, network, crypto_0, progressCallback){
  $clinit_UserContext();
  return $exceptionally($thenCompose(asyncExceptionally(new UserContext$lambda$8$Type(network, username), makeLambdaFunction(UserContext$lambda$9$Type.prototype.apply_0, UserContext$lambda$9$Type, [])), makeLambdaFunction(UserContext$lambda$10$Type.prototype.apply_0, UserContext$lambda$10$Type, [progressCallback, username, mfa, network, crypto_0, password])), makeLambdaFunction(UserContext$3methodref$logAndThrow$Type.prototype.apply_0, UserContext$3methodref$logAndThrow$Type, []));
}

function signIn_0(username, userWithRoot, mfa, network, crypto_0, progressCallback){
  progressCallback.accept('Logging in');
  return $exceptionally($thenCompose($thenCompose(network.coreNode.getPublicKeyHash(username), makeLambdaFunction(UserContext$lambda$482$Type.prototype.apply_0, UserContext$lambda$482$Type, [username, network])), makeLambdaFunction(UserContext$lambda$14$Type.prototype.apply_0, UserContext$lambda$14$Type, [username, userWithRoot, mfa, network, crypto_0, progressCallback])), makeLambdaFunction(UserContext$4methodref$logAndThrow$Type.prototype.apply_0, UserContext$4methodref$logAndThrow$Type, []));
}

function signSpaceRequest(username, identity, desiredQuota){
  $clinit_UserContext();
  var req;
  req = new QuotaControl$SpaceRequest(username, desiredQuota, ($clinit_System() , fromDouble_0(Date.now())), ($clinit_Optional() , $clinit_Optional() , EMPTY));
  return $signMessage(identity.secret, $toByteArray_2($toCbor_64(req)));
}

function signUp(username, password, token, existingIdentity, identityStorer, addCard, network, crypto_0, progressCallback){
  $clinit_UserContext();
  var algorithm, existingKeyPair, expiry;
  expiry = $plusMonths(($clinit_LocalDate() , now_3()), 2);
  algorithm = ($clinit_SecretGenerationAlgorithm() , new ScryptGenerator(17, 8, 1, 64, bytesToHex($randomBytes(crypto_0.random, 32))));
  existingKeyPair = $map($map($map(existingIdentity, makeLambdaFunction(UserContext$8methodref$hexToBytes$Type.prototype.apply_0, UserContext$8methodref$hexToBytes$Type, [])), makeLambdaFunction(UserContext$9methodref$fromByteArray$Type.prototype.apply_0, UserContext$9methodref$fromByteArray$Type, [])), makeLambdaFunction(UserContext$10methodref$fromCbor$Type.prototype.apply_0, UserContext$10methodref$fromCbor$Type, []));
  return signUpGeneral(username, password, token, existingKeyPair, identityStorer, $map(addCard, makeLambdaFunction(UserContext$lambda$34$Type.prototype.apply_0, UserContext$lambda$34$Type, [username])), expiry, network, crypto_0, algorithm, progressCallback);
}

function signUpGeneral(username, password, token, existingIdentity, tmpIdentityStore, addCard, expiry, initialNetwork, crypto_0, algorithm, progressCallback){
  var network, opLog;
  opLog = new OpLog(new ArrayList, ($clinit_Optional() , $clinit_Optional() , EMPTY));
  network = nonCommittingForSignup(opLog, opLog, opLog, opLog, crypto_0.hasher);
  $setFlusher(network.synchronizer, new UserContext$lambda$39$Type);
  progressCallback.accept('Generating keys');
  return $exceptionally($thenCompose($thenCompose($thenApply(initialNetwork.coreNode.getChain_0(username), makeLambdaFunction(UserContext$lambda$40$Type.prototype.apply_0, UserContext$lambda$40$Type, [])), makeLambdaFunction(UserContext$lambda$41$Type.prototype.apply_0, UserContext$lambda$41$Type, [username, password, crypto_0, algorithm])), makeLambdaFunction(UserContext$lambda$42$Type.prototype.apply_0, UserContext$lambda$42$Type, [username, expiry, network, crypto_0, progressCallback, algorithm, token, addCard, opLog, initialNetwork, existingIdentity, tmpIdentityStore])), makeLambdaFunction(UserContext$11methodref$logAndThrow$Type.prototype.apply_0, UserContext$11methodref$logAndThrow$Type, []));
}

function signupWithRetry(chain, signup, hasher, progressCallback){
  var data_0;
  data_0 = $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_corenode_UserPublicKeyLink_2_classLit, 1), $intern_0, 72, 0, [chain]))));
  return $thenCompose($thenCompose(time_0(new UserContext$lambda$112$Type(hasher, data_0), 'Proof of work'), signup), makeLambdaFunction(UserContext$lambda$113$Type.prototype.apply_0, UserContext$lambda$113$Type, [hasher, data_0, progressCallback, signup]));
}

function time_0(f, name_0){
  var t0;
  t0 = ($clinit_System() , fromDouble_0(Date.now()));
  return $thenApply(castTo(f.get_0(), 6), makeLambdaFunction(UserContext$lambda$535$Type.prototype.apply_0, UserContext$lambda$535$Type, [name_0, t0]));
}

function updateChainWithRetry(username, claimChain, hasher, network, progressCallback){
  var data_0;
  data_0 = $toByteArray_2(new CborObject$CborList(claimChain));
  return $thenCompose($thenCompose(time_0(new UserContext$lambda$116$Type(hasher, data_0), 'Proof of work'), makeLambdaFunction(UserContext$lambda$117$Type.prototype.apply_0, UserContext$lambda$117$Type, [network, username, claimChain])), makeLambdaFunction(UserContext$lambda$118$Type.prototype.apply_0, UserContext$lambda$118$Type, [hasher, data_0, network, username, claimChain, progressCallback]));
}

defineClass(467, 1, {}, UserContext);
_.addFriendAnnotation = function addFriendAnnotation(annotation){
  return $thenCompose($thenCompose($thenApply($getByPath_4(this, '/' + this.username), makeLambdaFunction(UserContext$lambda$421$Type.prototype.apply_0, UserContext$lambda$421$Type, [])), makeLambdaFunction(UserContext$lambda$213$Type.prototype.apply_0, UserContext$lambda$213$Type, [this])), makeLambdaFunction(UserContext$lambda$221$Type.prototype.apply_0, UserContext$lambda$221$Type, [this, annotation]));
}
;
_.approveSpaceRequest = function approveSpaceRequest(req){
  var adminSignedRequest;
  adminSignedRequest = $signMessage(this.signer.secret, $toByteArray_2($toCbor_63(req.source)));
  return $thenCompose(this.network.dhtClient.id_1(), makeLambdaFunction(UserContext$lambda$107$Type.prototype.apply_0, UserContext$lambda$107$Type, [this, adminSignedRequest]));
}
;
_.changePassword = function changePassword(oldPassword, newPassword, mfa){
  return $thenCompose($thenApply(getWriterData(this.network, this.signer.publicKeyHash, this.signer.publicKeyHash), makeLambdaFunction(UserContext$lambda$124$Type.prototype.apply_0, UserContext$lambda$124$Type, [])), makeLambdaFunction(UserContext$lambda$129$Type.prototype.apply_0, UserContext$lambda$129$Type, [this, oldPassword, newPassword, mfa]));
}
;
_.cleanPartialUploads = function cleanPartialUploads(){
  return $cleanPartialUploads(this, new UserContext$lambda$531$Type);
}
;
_.decodeSpaceRequests = function decodeSpaceRequests_0(in_0){
  return $decodeSpaceRequests(this, in_0);
}
;
_.decryptURL = function decryptURL(cipherTextBase64, nonceBase64){
  var ciphertext, nonce;
  nonce = ($clinit_Base64Coder() , decode($toCharArray(nonceBase64)));
  ciphertext = decode($toCharArray(cipherTextBase64));
  return $trim($create($decrypt_5(this.rootKey, ciphertext, nonce)));
}
;
_.deleteAccount = function deleteAccount(password, mfa){
  return $thenCompose(signIn(this.username, password, mfa, this.network, this.crypto, new UserContext$lambda$7$Type), makeLambdaFunction(UserContext$lambda$173$Type.prototype.apply_0, UserContext$lambda$173$Type, [this]));
}
;
_.dismissMessage = function dismissMessage(message){
  var dismiss;
  dismiss = new ServerMessage(message.id_0, ($clinit_ServerMessage$Type() , Dismiss), ($clinit_System() , fromDouble_0(Date.now())), '', ($clinit_Optional() , $clinit_Optional() , EMPTY), true);
  return $sendMessage_2(this.network.serverMessager, this.username, dismiss, this.signer.secret);
}
;
_.encryptURL = function encryptURL(url_0){
  var base64, base640, cipherText, nonce;
  while (url_0.length % 50 != 0)
    url_0 = url_0 + ' ';
  nonce = $createNonce_0(this.rootKey);
  cipherText = $encrypt(this.rootKey, $getBytes(url_0, ($clinit_EmulatedCharset() , UTF_8_0)), nonce);
  return new UserContext$EncryptedURL((base640 = ($clinit_Base64Coder() , encode_0(nonce, regularMap.encodingMap)) , valueOf_5(base640, 0, base640.length)), (base64 = encode_0(cipherText, regularMap.encodingMap) , valueOf_5(base64, 0, base64.length)));
}
;
_.ensureMirrorId = function ensureMirrorId(){
  return $thenCompose(getMirrorBat(this.username, this.signer, this.rootKey, this.network), makeLambdaFunction(UserContext$lambda$99$Type.prototype.apply_0, UserContext$lambda$99$Type, [this]));
}
;
_.ensureUsernameClaimRenewed = function ensureUsernameClaimRenewed(){
  return $thenCompose($thenApply(this.network.coreNode.getChain_0(this.username), makeLambdaFunction(UserContext$lambda$110$Type.prototype.apply_0, UserContext$lambda$110$Type, [])), makeLambdaFunction(UserContext$lambda$72$Type.prototype.apply_0, UserContext$lambda$72$Type, [this]));
}
;
_.generateFingerPrint = function generateFingerPrint(friendName){
  return $thenCompose($getPublicKeyHashes(this, this.username), makeLambdaFunction(UserContext$lambda$75$Type.prototype.apply_0, UserContext$lambda$75$Type, [this, friendName]));
}
;
_.getAndDecodePendingSpaceRequests = function getAndDecodePendingSpaceRequests(){
  var signedTime;
  return $thenCompose((signedTime = signNow(this.signer.secret) , $thenCompose(this.network.dhtClient.id_1(), makeLambdaFunction(UserContext$lambda$106$Type.prototype.apply_0, UserContext$lambda$106$Type, [this, signedTime]))), makeLambdaFunction(UserContext$14methodref$decodeSpaceRequests$Type.prototype.apply_0, UserContext$14methodref$decodeSpaceRequests$Type, [this]));
}
;
_.getByPath = function getByPath_5(path){
  return $getByPath_4(this, path);
}
;
_.getDirectorySharingState = function getDirectorySharingState(dir_0){
  if ($getNameCount(dir_0) == 0 || this.username == null)
    return new CompletableFuture_0(new SharedWithState(new HashMap, new HashMap));
  return $thenCompose($thenApply($getByPath_4(this, '/' + this.username), makeLambdaFunction(UserContext$lambda$421$Type.prototype.apply_0, UserContext$lambda$421$Type, [])), makeLambdaFunction(UserContext$lambda$325$Type.prototype.apply_0, UserContext$lambda$325$Type, [this, dir_0]));
}
;
_.getEntryPath = function getEntryPath(){
  var dir_0;
  if (this.username != null)
    return new CompletableFuture_0('/');
  dir_0 = $getByPath_4(this, '/');
  return $thenApply($thenCompose(dir_0, makeLambdaFunction(UserContext$lambda$88$Type.prototype.apply_0, UserContext$lambda$88$Type, [this])), makeLambdaFunction(UserContext$lambda$89$Type.prototype.apply_0, UserContext$lambda$89$Type, []));
}
;
_.getFiles = function getFiles(pointers){
  return $getFiles(this, pointers);
}
;
_.getFollowerNames = function getFollowerNames(){
  return $thenApply($thenCompose($thenApply($thenCompose($thenApply($getByPath_4(this, '/' + this.username), makeLambdaFunction(UserContext$lambda$421$Type.prototype.apply_0, UserContext$lambda$421$Type, [])), makeLambdaFunction(UserContext$lambda$239$Type.prototype.apply_0, UserContext$lambda$239$Type, [this])), makeLambdaFunction(UserContext$lambda$203$Type.prototype.apply_0, UserContext$lambda$203$Type, [])), makeLambdaFunction(UserContext$lambda$204$Type.prototype.apply_0, UserContext$lambda$204$Type, [this])), makeLambdaFunction(UserContext$18methodref$keySet$Type.prototype.apply_0, UserContext$18methodref$keySet$Type, []));
}
;
_.getFollowing = function getFollowing_0(){
  return $thenApply($thenApply((ensureValidPath('/') , this.entrie.getChildren('/', this.crypto.hasher, this.network)), makeLambdaFunction(UserContext$lambda$198$Type.prototype.apply_0, UserContext$lambda$198$Type, [this])), makeLambdaFunction(UserContext$lambda$200$Type.prototype.apply_0, UserContext$lambda$200$Type, []));
}
;
_.getFriendRoots = function getFriendRoots(){
  return $thenApply((ensureValidPath('/') , this.entrie.getChildren('/', this.crypto.hasher, this.network)), makeLambdaFunction(UserContext$lambda$198$Type.prototype.apply_0, UserContext$lambda$198$Type, [this]));
}
;
_.getNewMessages = function getNewMessages(){
  return $getMessages_0(this.network.serverMessager, this.username, this.signer.secret);
}
;
_.getPaymentProperties = function getPaymentProperties_1(newClientSecret){
  var signedTime;
  signedTime = signNow(this.signer.secret);
  return this.network.spaceUsage.getPaymentProperties_0(this.signer.publicKeyHash, newClientSecret, signedTime);
}
;
_.getPendingSpaceRequests = function getPendingSpaceRequests(){
  var signedTime;
  return signedTime = signNow(this.signer.secret) , $thenCompose(this.network.dhtClient.id_1(), makeLambdaFunction(UserContext$lambda$106$Type.prototype.apply_0, UserContext$lambda$106$Type, [this, signedTime]));
}
;
_.getPublicFile = function getPublicFile(file){
  return $getPublicFile(this, file);
}
;
_.getPublicKeys = function getPublicKeys(username){
  return $getPublicKeys(this, username);
}
;
_.getQuota = function getQuota_1(){
  var signedTime;
  signedTime = signNow(this.signer.secret);
  return this.network.spaceUsage.getQuota_0(this.signer.publicKeyHash, signedTime);
}
;
_.getServerConversations = function getServerConversations(){
  if (this.username == null) {
    return new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_LIST));
  }
  return $thenApply($getMessages_0(this.network.serverMessager, this.username, this.signer.secret), makeLambdaFunction(UserContext$42methodref$combine$Type.prototype.apply_0, UserContext$42methodref$combine$Type, []));
}
;
_.getSocialFeed = function getSocialFeed(){
  return $thenCompose($getByPath_6(this, get_176(this.username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['.feed']))), makeLambdaFunction(UserContext$lambda$291$Type.prototype.apply_0, UserContext$lambda$291$Type, [this]));
}
;
_.getSocialState = function getSocialState(){
  var auth;
  return $thenCompose($thenCompose((auth = signNow(this.signer.secret) , $thenApply(this.network.social.getFollowRequests(this.signer.publicKeyHash, auth), makeLambdaFunction(UserContext$lambda$378$Type.prototype.apply_0, UserContext$lambda$378$Type, []))), makeLambdaFunction(UserContext$26methodref$processFollowRequests$Type.prototype.apply_0, UserContext$26methodref$processFollowRequests$Type, [this])), makeLambdaFunction(UserContext$lambda$254$Type.prototype.apply_0, UserContext$lambda$254$Type, [this]));
}
;
_.getSpaceUsage = function getSpaceUsage(){
  var signedTime;
  signedTime = signNow(this.signer.secret);
  return this.network.spaceUsage.getUsage(this.signer.publicKeyHash, signedTime);
}
;
_.getTransactionService = function getTransactionService(){
  return this.transactions;
}
;
_.isAvailable = function isAvailable(){
  return $thenApply(this.network.coreNode.getPublicKeyHash(this.username), makeLambdaFunction(UserContext$lambda$109$Type.prototype.apply_0, UserContext$lambda$109$Type, []));
}
;
_.isRegistered = function isRegistered(){
  $info(LOG_5, 'isRegistered');
  return $thenApply(this.network.coreNode.getUsername_0(this.signer.publicKeyHash), makeLambdaFunction(UserContext$lambda$108$Type.prototype.apply_0, UserContext$lambda$108$Type, [this]));
}
;
_.isSecretLink = function isSecretLink(){
  return this.username == null;
}
;
_.rejectSpaceRequest = function rejectSpaceRequest(req){
  throw toJs(new IllegalStateException_0('Unimplemented!'));
}
;
_.removeFollower = function removeFollower(usernameToRemove){
  var sharingDir;
  $info(LOG_5, 'Remove follower: ' + usernameToRemove);
  sharingDir = get_176(this.username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['shared', usernameToRemove]));
  return $thenApply($thenCompose($thenCompose($thenCompose($thenCompose($thenCompose($thenApply(getOrCreateObject(this, get_176(this.username, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['shared', '.groups.cbor'])), new UserContext$lambda$225$Type(this), makeLambdaFunction(UserContext$20methodref$initialiseGroups$Type.prototype.apply_0, UserContext$20methodref$initialiseGroups$Type, [this]), makeLambdaFunction(Cborable$lambda$0$Type.prototype.apply_0, Cborable$lambda$0$Type, [makeLambdaFunction(UserContext$21methodref$fromCbor$Type.prototype.apply_0, UserContext$21methodref$fromCbor$Type, [])])), makeLambdaFunction(UserContext$lambda$511$Type.prototype.apply_0, UserContext$lambda$511$Type, ['friends'])), makeLambdaFunction(UserContext$lambda$520$Type.prototype.apply_0, UserContext$lambda$520$Type, [this, usernameToRemove])), makeLambdaFunction(UserContext$lambda$514$Type.prototype.apply_0, UserContext$lambda$514$Type, [this, usernameToRemove])), makeLambdaFunction(UserContext$lambda$515$Type.prototype.apply_0, UserContext$lambda$515$Type, [this, usernameToRemove])), makeLambdaFunction(UserContext$lambda$516$Type.prototype.apply_0, UserContext$lambda$516$Type, [this])), makeLambdaFunction(UserContext$lambda$517$Type.prototype.apply_0, UserContext$lambda$517$Type, [this, sharingDir])), makeLambdaFunction(UserContext$lambda$519$Type.prototype.apply_0, UserContext$lambda$519$Type, []));
}
;
_.requestSpace = function requestSpace(requestedQuota){
  return this.network.spaceUsage.requestQuota(this.username, this.signer, requestedQuota);
}
;
_.sendFeedback = function sendFeedback(message){
  var msg;
  msg = ($clinit_ServerMessage() , new ServerMessage(-1, ($clinit_ServerMessage$Type() , FromUser), ($clinit_System() , fromDouble_0(Date.now())), message, ($clinit_Optional() , $clinit_Optional() , EMPTY), false));
  return $sendMessage_2(this.network.serverMessager, this.username, msg, this.signer.secret);
}
;
_.sendInitialFollowRequest = function sendInitialFollowRequest(targetUsername){
  return $sendInitialFollowRequest(this, targetUsername);
}
;
_.sendInitialFollowRequests = function sendInitialFollowRequests(targetUsernames){
  var usernames;
  usernames = new HashSet_1(new Arrays$ArrayList(targetUsernames));
  return reduceAll(usernames, ($clinit_Boolean() , true), new UserContext$lambda$262$Type(this), new UserContext$lambda$263$Type);
}
;
_.sendReply = function sendReply(prior, message){
  var msg;
  msg = new ServerMessage(prior.id_0, ($clinit_ServerMessage$Type() , FromUser), ($clinit_System() , fromDouble_0(Date.now())), message, ($clinit_Optional() , new Optional(checkCriticalNotNull(valueOf_2(prior.id_0)))), true);
  return $sendMessage_2(this.network.serverMessager, this.username, msg, this.signer.secret);
}
;
_.sendReplyFollowRequest = function sendReplyFollowRequest(initialRequestAndRaw, accept, reciprocate){
  var entry, initialRequest, reply, theirUsername;
  initialRequest = initialRequestAndRaw.req;
  theirUsername = castTo($get_6(initialRequest.entry), 60).ownerName;
  if (!accept && !reciprocate) {
    entry = new EntryPoint(new AbsoluteCapability(($clinit_PublicKeyHash() , NULL), NULL, initUnidimensionalArray(B_classLit, $intern_28, 8, 32, 15, 1), ($clinit_Optional() , $clinit_Optional() , EMPTY), ($clinit_SymmetricKey() , new TweetNaClKey(initUnidimensionalArray(B_classLit, $intern_28, 8, 32, 15, 1), false, castTo($get(PROVIDERS_1, ($clinit_SymmetricKey$Type() , TweetNaCl)), 91), castTo($get(RNG_PROVIDERS_0, TweetNaCl), 86)))), this.username);
    reply = new FollowRequest(new Optional(checkCriticalNotNull(entry)), (null , EMPTY));
    return $thenCompose($getPublicKeys(this, castTo($get_6(initialRequest.entry), 60).ownerName), makeLambdaFunction(UserContext$lambda$264$Type.prototype.apply_0, UserContext$lambda$264$Type, [this, initialRequestAndRaw, initialRequest, reply]));
  }
  return $thenCompose($thenCompose($thenCompose($thenCompose(new CompletableFuture_0(($clinit_Boolean() , true)), makeLambdaFunction(UserContext$lambda$266$Type.prototype.apply_0, UserContext$lambda$266$Type, [this, theirUsername, initialRequest, accept])), makeLambdaFunction(UserContext$lambda$274$Type.prototype.apply_0, UserContext$lambda$274$Type, [this, theirUsername, initialRequest, reciprocate, accept])), makeLambdaFunction(UserContext$lambda$278$Type.prototype.apply_0, UserContext$lambda$278$Type, [this, initialRequest, reciprocate])), makeLambdaFunction(UserContext$lambda$280$Type.prototype.apply_0, UserContext$lambda$280$Type, [this, initialRequestAndRaw]));
}
;
_.shareReadAccessWith = function shareReadAccessWith(path, readersToAdd){
  return $shareReadAccessWith(this, path, readersToAdd);
}
;
_.shareReadAccessWithFollowers = function shareReadAccessWithFollowers(path){
  var auth;
  return $thenCompose($thenApply($thenCompose($thenCompose((auth = signNow(this.signer.secret) , $thenApply(this.network.social.getFollowRequests(this.signer.publicKeyHash, auth), makeLambdaFunction(UserContext$lambda$378$Type.prototype.apply_0, UserContext$lambda$378$Type, []))), makeLambdaFunction(UserContext$26methodref$processFollowRequests$Type.prototype.apply_0, UserContext$26methodref$processFollowRequests$Type, [this])), makeLambdaFunction(UserContext$lambda$254$Type.prototype.apply_0, UserContext$lambda$254$Type, [this])), makeLambdaFunction(UserContext$lambda$332$Type.prototype.apply_0, UserContext$lambda$332$Type, [])), makeLambdaFunction(UserContext$lambda$333$Type.prototype.apply_0, UserContext$lambda$333$Type, [this, path]));
}
;
_.shareReadAccessWithFriends = function shareReadAccessWithFriends(path){
  var auth;
  return $thenCompose($thenApply($thenCompose($thenCompose((auth = signNow(this.signer.secret) , $thenApply(this.network.social.getFollowRequests(this.signer.publicKeyHash, auth), makeLambdaFunction(UserContext$lambda$378$Type.prototype.apply_0, UserContext$lambda$378$Type, []))), makeLambdaFunction(UserContext$26methodref$processFollowRequests$Type.prototype.apply_0, UserContext$26methodref$processFollowRequests$Type, [this])), makeLambdaFunction(UserContext$lambda$254$Type.prototype.apply_0, UserContext$lambda$254$Type, [this])), makeLambdaFunction(UserContext$lambda$326$Type.prototype.apply_0, UserContext$lambda$326$Type, [])), makeLambdaFunction(UserContext$lambda$327$Type.prototype.apply_0, UserContext$lambda$327$Type, [this, path]));
}
;
_.shareWriteAccessWith = function shareWriteAccessWith(fileToShare, writersToAdd){
  return $shareWriteAccessWith(this, fileToShare, writersToAdd);
}
;
_.sharedWith = function sharedWith(p){
  return $thenCompose($thenApply($getByPath_4(this, '/' + this.username), makeLambdaFunction(UserContext$lambda$421$Type.prototype.apply_0, UserContext$lambda$421$Type, [])), makeLambdaFunction(UserContext$lambda$324$Type.prototype.apply_0, UserContext$lambda$324$Type, [this, p]));
}
;
_.unShareReadAccessWith = function unShareReadAccessWith(path, initialReadersToRemove){
  return $unShareReadAccessWith(this, path, initialReadersToRemove);
}
;
_.unShareWriteAccessWith = function unShareWriteAccessWith(path, initialWritersToRemove){
  return $unShareWriteAccessWith(this, path, initialWritersToRemove);
}
;
_.unblock = function unblock(username){
  return $thenCompose($thenCompose($thenApply($getByPath_4(this, '/' + this.username), makeLambdaFunction(UserContext$lambda$421$Type.prototype.apply_0, UserContext$lambda$421$Type, [])), makeLambdaFunction(UserContext$lambda$500$Type.prototype.apply_0, UserContext$lambda$500$Type, [this, username])), makeLambdaFunction(UserContext$lambda$507$Type.prototype.apply_0, UserContext$lambda$507$Type, [this, username]));
}
;
_.unfollow = function unfollow(friendName){
  $info(LOG_5, 'Unfollowing: ' + friendName);
  return $thenApply($thenCompose($thenApply($getByPath_4(this, '/' + this.username), makeLambdaFunction(UserContext$lambda$421$Type.prototype.apply_0, UserContext$lambda$421$Type, [])), makeLambdaFunction(UserContext$lambda$490$Type.prototype.apply_0, UserContext$lambda$490$Type, [this, friendName])), makeLambdaFunction(UserContext$lambda$494$Type.prototype.apply_0, UserContext$lambda$494$Type, [this, friendName]));
}
;
var LOG_5;
var Lpeergos_shared_user_UserContext_2_classLit = createForClass('peergos.shared.user', 'UserContext', 467);
function UserContext$0methodref$get$Type(){
}

defineClass(2012, $wnd.Function, $intern_22, UserContext$0methodref$get$Type);
_.apply_0 = function apply_1408(arg0){
  return $get_6(castTo(arg0, 12));
}
;
function UserContext$10methodref$fromCbor$Type(){
}

defineClass(1910, $wnd.Function, $intern_22, UserContext$10methodref$fromCbor$Type);
_.apply_0 = function apply_1409(arg0){
  return fromCbor_12(castTo(arg0, 7));
}
;
function UserContext$11methodref$logAndThrow$Type(){
}

defineClass(1915, $wnd.Function, $intern_22, UserContext$11methodref$logAndThrow$Type);
_.apply_0 = function apply_1410(arg0){
  return logAndThrow(castTo(arg0, 33), ($clinit_Optional() , $clinit_Optional() , EMPTY));
}
;
function UserContext$12methodref$id$Type(){
}

defineClass(2059, $wnd.Function, $intern_22, UserContext$12methodref$id$Type);
_.apply_0 = function apply_1411(arg0){
  return new BatId(castTo(arg0, 112).id_0);
}
;
function UserContext$13methodref$id$Type(){
}

defineClass(114, $wnd.Function, $intern_22, UserContext$13methodref$id$Type);
_.apply_0 = function apply_1412(arg0){
  return new BatId(castTo(arg0, 112).id_0);
}
;
function UserContext$14methodref$decodeSpaceRequests$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1928, $wnd.Function, $intern_22, UserContext$14methodref$decodeSpaceRequests$Type);
_.apply_0 = function apply_1413(arg0){
  return $decodeSpaceRequests(this.$$outer_0, castTo(arg0, 17));
}
;
function UserContext$15methodref$fromCbor$Type(){
}

defineClass(2282, $wnd.Function, $intern_22, UserContext$15methodref$fromCbor$Type);
_.apply_0 = function apply_1414(arg0){
  return fromCbor_16(castTo(arg0, 7));
}
;
function UserContext$16methodref$fromCbor$Type(){
}

defineClass(2283, $wnd.Function, $intern_22, UserContext$16methodref$fromCbor$Type);
_.apply_0 = function apply_1415(arg0){
  return fromCbor_15(castTo(arg0, 7));
}
;
function UserContext$17methodref$getOwnerName$Type(){
}

defineClass(2284, $wnd.Function, $intern_22, UserContext$17methodref$getOwnerName$Type);
_.apply_0 = function apply_1416(arg0){
  return castTo(arg0, 19).ownername;
}
;
function UserContext$18methodref$keySet$Type(){
}

defineClass(1198, $wnd.Function, $intern_22, UserContext$18methodref$keySet$Type);
_.apply_0 = function apply_1417(arg0){
  return castTo(arg0, 68).keySet();
}
;
function UserContext$19methodref$fromCbor$Type(){
}

defineClass(2116, $wnd.Function, $intern_22, UserContext$19methodref$fromCbor$Type);
_.apply_0 = function apply_1418(arg0){
  return fromCbor_81(castTo(arg0, 7));
}
;
function UserContext$1methodref$get$Type(){
}

defineClass(2014, $wnd.Function, $intern_22, UserContext$1methodref$get$Type);
_.apply_0 = function apply_1419(arg0){
  return $get_6(castTo(arg0, 12));
}
;
function UserContext$20methodref$initialiseGroups$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(290, $wnd.Function, $intern_22, UserContext$20methodref$initialiseGroups$Type);
_.apply_0 = function apply_1420(arg0){
  return $initialiseGroups(this.$$outer_0, castTo(arg0, 345));
}
;
function UserContext$21methodref$fromCbor$Type(){
}

defineClass(291, $wnd.Function, $intern_22, UserContext$21methodref$fromCbor$Type);
_.apply_0 = function apply_1421(arg0){
  return fromCbor_83(castTo(arg0, 7));
}
;
function UserContext$22methodref$getName$Type(){
}

defineClass(2285, $wnd.Function, $intern_22, UserContext$22methodref$getName$Type);
_.apply_0 = function apply_1422(arg0){
  return $getName_1(castTo(arg0, 19));
}
;
function UserContext$23methodref$fromCbor$Type(){
}

defineClass(2130, $wnd.Function, $intern_22, UserContext$23methodref$fromCbor$Type);
_.apply_0 = function apply_1423(arg0){
  return fromCbor_89(castTo(arg0, 7));
}
;
function UserContext$24methodref$fromCbor$Type(){
}

defineClass(2136, $wnd.Function, $intern_22, UserContext$24methodref$fromCbor$Type);
_.apply_0 = function apply_1424(arg0){
  return fromCbor_89(castTo(arg0, 7));
}
;
function UserContext$25methodref$fromCbor$Type(){
}

defineClass(2203, $wnd.Function, $intern_22, UserContext$25methodref$fromCbor$Type);
_.apply_0 = function apply_1425(arg0){
  return fromCbor_64(castTo(arg0, 7));
}
;
function UserContext$26methodref$processFollowRequests$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(446, $wnd.Function, $intern_22, UserContext$26methodref$processFollowRequests$Type);
_.apply_0 = function apply_1426(arg0){
  return $processFollowRequests(this.$$outer_0, castTo(arg0, 17));
}
;
function UserContext$27methodref$fromCbor$Type(){
}

defineClass(2208, $wnd.Function, $intern_22, UserContext$27methodref$fromCbor$Type);
_.apply_0 = function apply_1427(arg0){
  return fromCbor_65(castTo(arg0, 7));
}
;
function UserContext$28methodref$serialize$Type(){
}

defineClass(2214, $wnd.Function, $intern_22, UserContext$28methodref$serialize$Type);
_.apply_0 = function apply_1428(arg0){
  return castTo(arg0, 7).serialize();
}
;
function UserContext$29methodref$stream$Type(){
}

defineClass(2286, $wnd.Function, $intern_22, UserContext$29methodref$stream$Type);
_.apply_0 = function apply_1429(arg0){
  return $stream(castTo(arg0, 12));
}
;
function UserContext$2methodref$get$Type(){
}

defineClass(1896, $wnd.Function, $intern_22, UserContext$2methodref$get$Type);
_.apply_0 = function apply_1430(arg0){
  return $get_6(castTo(arg0, 12));
}
;
function UserContext$30methodref$getName$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(240, 1, {}, UserContext$30methodref$getName$Type);
_.apply_2 = function apply_1431(arg0){
  return $getName_0(this.$$outer_0, arg0);
}
;
var Lpeergos_shared_user_UserContext$30methodref$getName$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/30methodref$getName$Type', 240);
function UserContext$31methodref$toString$Type(){
}

defineClass(335, $wnd.Function, $intern_22, UserContext$31methodref$toString$Type);
_.apply_0 = function apply_1432(arg0){
  return castTo(arg0, 95).pathString;
}
;
function UserContext$32methodref$logAndThrow$Type(){
}

defineClass(1984, $wnd.Function, $intern_22, UserContext$32methodref$logAndThrow$Type);
_.apply_0 = function apply_1433(arg0){
  return logAndThrow(castTo(arg0, 33), ($clinit_Optional() , $clinit_Optional() , EMPTY));
}
;
function UserContext$33methodref$get$Type(){
}

defineClass(1987, $wnd.Function, $intern_22, UserContext$33methodref$get$Type);
_.apply_0 = function apply_1434(arg0){
  return $get_6(castTo(arg0, 12));
}
;
function UserContext$34methodref$logAndThrow$Type(){
}

defineClass(1989, $wnd.Function, $intern_22, UserContext$34methodref$logAndThrow$Type);
_.apply_0 = function apply_1435(arg0){
  return logAndThrow(castTo(arg0, 33), ($clinit_Optional() , $clinit_Optional() , EMPTY));
}
;
function UserContext$35methodref$fromCbor$Type(){
}

defineClass(2241, $wnd.Function, $intern_22, UserContext$35methodref$fromCbor$Type);
_.apply_0 = function apply_1436(arg0){
  return fromCbor_80(castTo(arg0, 7));
}
;
function UserContext$36methodref$add$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(780, 1, $intern_32, UserContext$36methodref$add$Type);
_.accept = function accept_125(arg0){
  $add(this.$$outer_0, castTo(arg0, 60));
}
;
_.andThen = function andThen_64(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_UserContext$36methodref$add$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/36methodref$add$Type', 780);
function UserContext$37methodref$fromCbor$Type(){
}

defineClass(2253, $wnd.Function, $intern_22, UserContext$37methodref$fromCbor$Type);
_.apply_0 = function apply_1437(arg0){
  return fromCbor_82(castTo(arg0, 7));
}
;
function UserContext$38methodref$get$Type(){
}

defineClass(1283, $wnd.Function, $intern_22, UserContext$38methodref$get$Type);
_.apply_0 = function apply_1438(arg0){
  return $get_6(castTo(arg0, 12));
}
;
function UserContext$39methodref$addFriendGroupCap$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(783, 1, {}, UserContext$39methodref$addFriendGroupCap$Type);
_.add_1 = function add_21(arg0, arg1, arg2, arg3, arg4){
  return $addFriendGroupCap(this.$$outer_0, arg0, arg1, arg2, arg3, arg4);
}
;
var Lpeergos_shared_user_UserContext$39methodref$addFriendGroupCap$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/39methodref$addFriendGroupCap$Type', 783);
function UserContext$3methodref$logAndThrow$Type(){
}

defineClass(1901, $wnd.Function, $intern_22, UserContext$3methodref$logAndThrow$Type);
_.apply_0 = function apply_1439(arg0){
  return logAndThrow(castTo(arg0, 33), ($clinit_Optional() , $clinit_Optional() , EMPTY));
}
;
function UserContext$40methodref$get$Type(){
}

defineClass(2262, $wnd.Function, $intern_22, UserContext$40methodref$get$Type);
_.apply_0 = function apply_1440(arg0){
  return $get_6(castTo(arg0, 12));
}
;
function UserContext$41methodref$getBlocked$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2144, $wnd.Function, $intern_22, UserContext$41methodref$getBlocked$Type);
_.apply_0 = function apply_1441(arg0){
  return $getBlocked(this.$$outer_0, castTo(arg0, 12));
}
;
function UserContext$42methodref$combine$Type(){
}

defineClass(2005, $wnd.Function, $intern_22, UserContext$42methodref$combine$Type);
_.apply_0 = function apply_1442(arg0){
  return combine(castTo(arg0, 17));
}
;
function UserContext$4methodref$logAndThrow$Type(){
}

defineClass(1903, $wnd.Function, $intern_22, UserContext$4methodref$logAndThrow$Type);
_.apply_0 = function apply_1443(arg0){
  return logAndThrow(castTo(arg0, 33), ($clinit_Optional() , $clinit_Optional() , EMPTY));
}
;
function UserContext$5methodref$logAndThrow$Type(){
}

defineClass(1905, $wnd.Function, $intern_22, UserContext$5methodref$logAndThrow$Type);
_.apply_0 = function apply_1444(arg0){
  return logAndThrow(castTo(arg0, 33), ($clinit_Optional() , $clinit_Optional() , EMPTY));
}
;
function UserContext$6methodref$id$Type(){
}

defineClass(2018, $wnd.Function, $intern_22, UserContext$6methodref$id$Type);
_.apply_0 = function apply_1445(arg0){
  return new BatId(castTo(arg0, 112).id_0);
}
;
function UserContext$7methodref$logAndThrow$Type(){
}

defineClass(2023, $wnd.Function, $intern_22, UserContext$7methodref$logAndThrow$Type);
_.apply_0 = function apply_1446(arg0){
  return logAndThrow(castTo(arg0, 33), ($clinit_Optional() , $clinit_Optional() , EMPTY));
}
;
function UserContext$8methodref$hexToBytes$Type(){
}

defineClass(1908, $wnd.Function, $intern_22, UserContext$8methodref$hexToBytes$Type);
_.apply_0 = function apply_1447(arg0){
  return hexToBytes(castToString(arg0));
}
;
function UserContext$9methodref$fromByteArray$Type(){
}

defineClass(1909, $wnd.Function, $intern_22, UserContext$9methodref$fromByteArray$Type);
_.apply_0 = function apply_1448(arg0){
  return fromByteArray(castTo(arg0, 11));
}
;
function UserContext$EncryptedURL(base64Nonce, base64Ciphertext){
  this.base64Nonce = base64Nonce;
  this.base64Ciphertext = base64Ciphertext;
}

defineClass(705, 1, {}, UserContext$EncryptedURL);
var PAD_TO_SIZE = 50;
var Lpeergos_shared_user_UserContext$EncryptedURL_2_classLit = createForClass('peergos.shared.user', 'UserContext/EncryptedURL', 705);
function UserContext$lambda$1$Type(crypto_0, network_1){
  this.crypto_0 = crypto_0;
  this.network_1 = network_1;
}

defineClass(2013, $wnd.Function, $intern_22, UserContext$lambda$1$Type);
_.apply_0 = function apply_1449(arg0){
  return lambda$1_17(this.crypto_0, this.network_1, arg0);
}
;
function UserContext$lambda$10$Type(progressCallback_0, username_1, mfa_2, network_3, crypto_4, password_5){
  this.progressCallback_0 = progressCallback_0;
  this.username_1 = username_1;
  this.mfa_2 = mfa_2;
  this.network_3 = network_3;
  this.crypto_4 = crypto_4;
  this.password_5 = password_5;
}

defineClass(1900, $wnd.Function, $intern_22, UserContext$lambda$10$Type);
_.apply_0 = function apply_1450(arg0){
  return lambda$10_7(this.progressCallback_0, this.username_1, this.mfa_2, this.network_3, this.crypto_4, this.password_5, arg0);
}
;
function UserContext$lambda$101$Type($$outer_0, mirror_1){
  this.$$outer_0 = $$outer_0;
  this.mirror_1 = mirror_1;
}

defineClass(2060, $wnd.Function, $intern_22, UserContext$lambda$101$Type);
_.apply_0 = function apply_1451(arg0){
  return $lambda$101(this.$$outer_0, this.mirror_1, arg0);
}
;
function UserContext$lambda$102$Type(id_0){
  this.id_0 = id_0;
}

defineClass(2061, $wnd.Function, $intern_22, UserContext$lambda$102$Type);
_.apply_0 = function apply_1452(arg0){
  return lambda$102(this.id_0);
}
;
function UserContext$lambda$104$Type(){
}

defineClass(383, $wnd.Function, $intern_22, UserContext$lambda$104$Type);
_.apply_0 = function apply_1453(arg0){
  return $clinit_UserContext() , checkCriticalElement(castTo(arg0, 12).ref != null) , castTo(castTo(arg0, 12).ref, 19);
}
;
function UserContext$lambda$106$Type($$outer_0, signedTime_1){
  this.$$outer_0 = $$outer_0;
  this.signedTime_1 = signedTime_1;
}

defineClass(1274, $wnd.Function, $intern_22, UserContext$lambda$106$Type);
_.apply_0 = function apply_1454(arg0){
  return $lambda$106(this.$$outer_0, this.signedTime_1, arg0);
}
;
function UserContext$lambda$107$Type($$outer_0, adminSignedRequest_1){
  this.$$outer_0 = $$outer_0;
  this.adminSignedRequest_1 = adminSignedRequest_1;
}

defineClass(1929, $wnd.Function, $intern_22, UserContext$lambda$107$Type);
_.apply_0 = function apply_1455(arg0){
  return $lambda$107(this.$$outer_0, this.adminSignedRequest_1, arg0);
}
;
function UserContext$lambda$108$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1930, $wnd.Function, $intern_22, UserContext$lambda$108$Type);
_.apply_0 = function apply_1456(arg0){
  return $lambda$108(this.$$outer_0, arg0);
}
;
function UserContext$lambda$109$Type(){
}

defineClass(1931, $wnd.Function, $intern_22, UserContext$lambda$109$Type);
_.apply_0 = function apply_1457(arg0){
  return $clinit_UserContext() , $clinit_Boolean() , castTo(arg0, 12).ref == null?true:false;
}
;
function UserContext$lambda$11$Type(){
}

defineClass(707, 1, {}, UserContext$lambda$11$Type);
_.get_0 = function get_113(){
  return $clinit_UserContext() , new IllegalStateException_0('No login algorithm specified in user data!');
}
;
var Lpeergos_shared_user_UserContext$lambda$11$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$11$Type', 707);
function UserContext$lambda$110$Type(){
}

defineClass(1916, $wnd.Function, $intern_22, UserContext$lambda$110$Type);
_.apply_0 = function apply_1458(arg0){
  return $clinit_UserContext() , castTo(castTo(arg0, 17).getAtIndex(castTo(arg0, 17).size() - 1), 72).claim.expiry;
}
;
function UserContext$lambda$112$Type(hasher_0, data_1){
  this.hasher_0 = hasher_0;
  this.data_1 = data_1;
}

defineClass(715, 1, {}, UserContext$lambda$112$Type);
_.get_0 = function get_114(){
  return $clinit_UserContext() , $generateProofOfWork(this.hasher_0, 0, this.data_1);
}
;
var Lpeergos_shared_user_UserContext$lambda$112$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$112$Type', 715);
function UserContext$lambda$113$Type(hasher_0, data_1, progressCallback_2, signup_3){
  this.hasher_0 = hasher_0;
  this.data_1 = data_1;
  this.progressCallback_2 = progressCallback_2;
  this.signup_3 = signup_3;
}

defineClass(1932, $wnd.Function, $intern_22, UserContext$lambda$113$Type);
_.apply_0 = function apply_1459(arg0){
  return lambda$113(this.hasher_0, this.data_1, this.progressCallback_2, this.signup_3, arg0);
}
;
function UserContext$lambda$114$Type(hasher_0, diff_1, data_2){
  this.hasher_0 = hasher_0;
  this.diff_1 = diff_1;
  this.data_2 = data_2;
}

defineClass(716, 1, {}, UserContext$lambda$114$Type);
_.get_0 = function get_115(){
  return lambda$114(this.hasher_0, this.diff_1, this.data_2);
}
;
var Lpeergos_shared_user_UserContext$lambda$114$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$114$Type', 716);
function UserContext$lambda$115$Type(){
}

defineClass(2062, $wnd.Function, $intern_22, UserContext$lambda$115$Type);
_.apply_0 = function apply_1460(arg0){
  return lambda$115(arg0);
}
;
function UserContext$lambda$116$Type(hasher_0, data_1){
  this.hasher_0 = hasher_0;
  this.data_1 = data_1;
}

defineClass(717, 1, {}, UserContext$lambda$116$Type);
_.get_0 = function get_116(){
  return $clinit_UserContext() , $generateProofOfWork(this.hasher_0, 0, this.data_1);
}
;
var Lpeergos_shared_user_UserContext$lambda$116$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$116$Type', 717);
function UserContext$lambda$117$Type(network_0, username_1, claimChain_2){
  this.network_0 = network_0;
  this.username_1 = username_1;
  this.claimChain_2 = claimChain_2;
  this.token_3 = '';
}

defineClass(1933, $wnd.Function, $intern_22, UserContext$lambda$117$Type);
_.apply_0 = function apply_1461(arg0){
  return lambda$117(this.network_0, this.username_1, this.claimChain_2, this.token_3, arg0);
}
;
function UserContext$lambda$118$Type(hasher_0, data_1, network_2, username_3, claimChain_4, progressCallback_6){
  this.hasher_0 = hasher_0;
  this.data_1 = data_1;
  this.network_2 = network_2;
  this.username_3 = username_3;
  this.claimChain_4 = claimChain_4;
  this.token_5 = '';
  this.progressCallback_6 = progressCallback_6;
}

defineClass(1934, $wnd.Function, $intern_22, UserContext$lambda$118$Type);
_.apply_0 = function apply_1462(arg0){
  return lambda$118(this.hasher_0, this.data_1, this.network_2, this.username_3, this.claimChain_4, this.token_5, this.progressCallback_6, arg0);
}
;
function UserContext$lambda$119$Type(hasher_0, diff_1, data_2){
  this.hasher_0 = hasher_0;
  this.diff_1 = diff_1;
  this.data_2 = data_2;
}

defineClass(718, 1, {}, UserContext$lambda$119$Type);
_.get_0 = function get_117(){
  return lambda$119(this.hasher_0, this.diff_1, this.data_2);
}
;
var Lpeergos_shared_user_UserContext$lambda$119$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$119$Type', 718);
function UserContext$lambda$12$Type(progressCallback_0, username_1, mfa_2, pair_3, network_4, crypto_5){
  this.progressCallback_0 = progressCallback_0;
  this.username_1 = username_1;
  this.mfa_2 = mfa_2;
  this.pair_3 = pair_3;
  this.network_4 = network_4;
  this.crypto_5 = crypto_5;
}

defineClass(2008, $wnd.Function, $intern_22, UserContext$lambda$12$Type);
_.apply_0 = function apply_1463(arg0){
  return lambda$12_5(this.progressCallback_0, this.username_1, this.mfa_2, this.pair_3, this.network_4, this.crypto_5, arg0);
}
;
function UserContext$lambda$120$Type(network_0, username_1, claimChain_2, token_3){
  this.network_0 = network_0;
  this.username_1 = username_1;
  this.claimChain_2 = claimChain_2;
  this.token_3 = token_3;
}

defineClass(2063, $wnd.Function, $intern_22, UserContext$lambda$120$Type);
_.apply_0 = function apply_1464(arg0){
  return lambda$120(this.network_0, this.username_1, this.claimChain_2, this.token_3, arg0);
}
;
function UserContext$lambda$121$Type(){
}

defineClass(2064, $wnd.Function, $intern_22, UserContext$lambda$121$Type);
_.apply_0 = function apply_1465(arg0){
  return lambda$121(arg0);
}
;
function UserContext$lambda$122$Type(username_0, signer_1, expiry_2, hasher_3, network_4){
  this.username_0 = username_0;
  this.signer_1 = signer_1;
  this.expiry_2 = expiry_2;
  this.hasher_3 = hasher_3;
  this.network_4 = network_4;
}

defineClass(1935, $wnd.Function, $intern_22, UserContext$lambda$122$Type);
_.apply_0 = function apply_1466(arg0){
  return lambda$122(this.username_0, this.signer_1, this.expiry_2, this.hasher_3, this.network_4, arg0);
}
;
function UserContext$lambda$123$Type(){
}

defineClass(719, 1, $intern_32, UserContext$lambda$123$Type);
_.accept = function accept_126(arg0){
  $clinit_UserContext();
}
;
_.andThen = function andThen_65(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_UserContext$lambda$123$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$123$Type', 719);
function UserContext$lambda$124$Type(){
}

defineClass(1936, $wnd.Function, $intern_22, UserContext$lambda$124$Type);
_.apply_0 = function apply_1467(arg0){
  return $clinit_UserContext() , castTo($orElseThrow(castTo(arg0, 104).props.generationAlgorithm, new UserContext$lambda$125$Type), 441);
}
;
function UserContext$lambda$125$Type(){
}

defineClass(720, 1, {}, UserContext$lambda$125$Type);
_.get_0 = function get_118(){
  return $clinit_UserContext() , new IllegalStateException_0('No login algorithm specified in user data!');
}
;
var Lpeergos_shared_user_UserContext$lambda$125$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$125$Type', 720);
function UserContext$lambda$129$Type($$outer_0, oldPassword_1, newPassword_2, mfa_3){
  this.$$outer_0 = $$outer_0;
  this.oldPassword_1 = oldPassword_1;
  this.newPassword_2 = newPassword_2;
  this.mfa_3 = mfa_3;
}

defineClass(1937, $wnd.Function, $intern_22, UserContext$lambda$129$Type);
_.apply_0 = function apply_1468(arg0){
  return $lambda$129(this.$$outer_0, this.oldPassword_1, this.newPassword_2, this.mfa_3, arg0);
}
;
function UserContext$lambda$130$Type($$outer_0, newAlgorithm_1, newPassword_2, expiry_3, isLegacy_4, mfa_5){
  this.$$outer_0 = $$outer_0;
  this.newAlgorithm_1 = newAlgorithm_1;
  this.newPassword_2 = newPassword_2;
  this.expiry_3 = expiry_3;
  this.isLegacy_4 = isLegacy_4;
  this.mfa_5 = mfa_5;
}

defineClass(1938, $wnd.Function, $intern_22, UserContext$lambda$130$Type);
_.apply_0 = function apply_1469(arg0){
  return $lambda$130(this.$$outer_0, this.newAlgorithm_1, this.newPassword_2, this.expiry_3, this.isLegacy_4, this.mfa_5, arg0);
}
;
_.isLegacy_4 = false;
function UserContext$lambda$131$Type($$outer_0, newAlgorithm_1, existingLogin_2, existingLoginSecret_3, newPassword_4, expiry_5, isLegacy_6, mfa_7){
  this.$$outer_0 = $$outer_0;
  this.newAlgorithm_1 = newAlgorithm_1;
  this.existingLogin_2 = existingLogin_2;
  this.existingLoginSecret_3 = existingLoginSecret_3;
  this.newPassword_4 = newPassword_4;
  this.expiry_5 = expiry_5;
  this.isLegacy_6 = isLegacy_6;
  this.mfa_7 = mfa_7;
}

defineClass(2065, $wnd.Function, $intern_22, UserContext$lambda$131$Type);
_.apply_0 = function apply_1470(arg0){
  return $lambda$131(this.$$outer_0, this.newAlgorithm_1, this.existingLogin_2, this.existingLoginSecret_3, this.newPassword_4, this.expiry_5, this.isLegacy_6, this.mfa_7, arg0);
}
;
_.isLegacy_6 = false;
function UserContext$lambda$132$Type($$outer_0, updatedLogin_1, newLoginPublicKey_2, newAlgorithm_3, existingLogin_4){
  this.$$outer_0 = $$outer_0;
  this.updatedLogin_1 = updatedLogin_1;
  this.newLoginPublicKey_2 = newLoginPublicKey_2;
  this.newAlgorithm_3 = newAlgorithm_3;
  this.existingLogin_4 = existingLogin_4;
}

defineClass(2066, $wnd.Function, $intern_22, UserContext$lambda$132$Type);
_.apply_0 = function apply_1471(arg0){
  return $lambda$132(this.$$outer_0, this.updatedLogin_1, this.newLoginPublicKey_2, this.newAlgorithm_3, this.existingLogin_4, arg0);
}
;
function UserContext$lambda$133$Type($$outer_0, entry_1, updatedLogin_2, updatedEntry_3, newLoginPublicKey_4, newAlgorithm_5){
  this.$$outer_0 = $$outer_0;
  this.entry_1 = entry_1;
  this.updatedLogin_2 = updatedLogin_2;
  this.updatedEntry_3 = updatedEntry_3;
  this.newLoginPublicKey_4 = newLoginPublicKey_4;
  this.newAlgorithm_5 = newAlgorithm_5;
}

defineClass(2069, $wnd.Function, $intern_22, UserContext$lambda$133$Type);
_.apply_0 = function apply_1472(arg0){
  return $lambda$133(this.$$outer_0, this.entry_1, this.updatedLogin_2, this.updatedEntry_3, this.newLoginPublicKey_4, this.newAlgorithm_5, arg0);
}
;
function UserContext$lambda$134$Type($$outer_0, newIdBlock_1, entry_2, updatedLogin_3, rawBlock_4, cwd_5, updatedEntry_6, newLoginPublicKey_7){
  this.$$outer_0 = $$outer_0;
  this.newIdBlock_1 = newIdBlock_1;
  this.entry_2 = entry_2;
  this.updatedLogin_3 = updatedLogin_3;
  this.rawBlock_4 = rawBlock_4;
  this.cwd_5 = cwd_5;
  this.updatedEntry_6 = updatedEntry_6;
  this.newLoginPublicKey_7 = newLoginPublicKey_7;
}

defineClass(2070, $wnd.Function, $intern_22, UserContext$lambda$134$Type);
_.apply_0 = function apply_1473(arg0){
  return $lambda$134(this.$$outer_0, this.newIdBlock_1, this.entry_2, this.updatedLogin_3, this.rawBlock_4, this.cwd_5, this.updatedEntry_6, this.newLoginPublicKey_7, arg0);
}
;
function UserContext$lambda$135$Type($$outer_0, newIdBlock_1, entry_2, updatedLogin_3, pointerCas_4){
  this.$$outer_0 = $$outer_0;
  this.newIdBlock_1 = newIdBlock_1;
  this.entry_2 = entry_2;
  this.updatedLogin_3 = updatedLogin_3;
  this.pointerCas_4 = pointerCas_4;
}

defineClass(2071, $wnd.Function, $intern_22, UserContext$lambda$135$Type);
_.apply_0 = function apply_1474(arg0){
  return $lambda$135(this.$$outer_0, this.newIdBlock_1, this.entry_2, this.updatedLogin_3, this.pointerCas_4);
}
;
function UserContext$lambda$136$Type(){
}

defineClass(721, 1, $intern_32, UserContext$lambda$136$Type);
_.accept = function accept_127(arg0){
  $clinit_UserContext();
}
;
_.andThen = function andThen_66(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_UserContext$lambda$136$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$136$Type', 721);
function UserContext$lambda$137$Type($$outer_0, existingLoginSecret_1, newIdentityPub_2, existingOwner_3){
  this.$$outer_0 = $$outer_0;
  this.existingLoginSecret_1 = existingLoginSecret_1;
  this.newIdentityPub_2 = newIdentityPub_2;
  this.existingOwner_3 = existingOwner_3;
}

defineClass(2067, $wnd.Function, $intern_22, UserContext$lambda$137$Type);
_.apply_0 = function apply_1475(arg0){
  return $lambda$137(this.$$outer_0, this.existingLoginSecret_1, this.newIdentityPub_2, this.existingOwner_3, arg0);
}
;
function UserContext$lambda$138$Type($$outer_0, newIdentityPair_1, newLoginPublicKey_2, newBoxingKeypair_3, existingLogin_4, updatedLogin_5, newAlgorithm_6, newPassword_7, expiry_8){
  this.$$outer_0 = $$outer_0;
  this.newIdentityPair_1 = newIdentityPair_1;
  this.newLoginPublicKey_2 = newLoginPublicKey_2;
  this.newBoxingKeypair_3 = newBoxingKeypair_3;
  this.existingLogin_4 = existingLogin_4;
  this.updatedLogin_5 = updatedLogin_5;
  this.newAlgorithm_6 = newAlgorithm_6;
  this.newPassword_7 = newPassword_7;
  this.expiry_8 = expiry_8;
}

defineClass(2068, $wnd.Function, $intern_22, UserContext$lambda$138$Type);
_.apply_0 = function apply_1476(arg0){
  return $lambda$138(this.$$outer_0, this.newIdentityPair_1, this.newLoginPublicKey_2, this.newBoxingKeypair_3, this.existingLogin_4, this.updatedLogin_5, this.newAlgorithm_6, this.newPassword_7, this.expiry_8, arg0);
}
;
function UserContext$lambda$139$Type($$outer_0, newIdentity_1, newIdentityPair_2, newLoginPublicKey_3, newBoxingKeypair_4, existingLogin_5, updatedLogin_6, newAlgorithm_7, ownedKeys_8, newPassword_9, expiry_10){
  this.$$outer_0 = $$outer_0;
  this.newIdentity_1 = newIdentity_1;
  this.newIdentityPair_2 = newIdentityPair_2;
  this.newLoginPublicKey_3 = newLoginPublicKey_3;
  this.newBoxingKeypair_4 = newBoxingKeypair_4;
  this.existingLogin_5 = existingLogin_5;
  this.updatedLogin_6 = updatedLogin_6;
  this.newAlgorithm_7 = newAlgorithm_7;
  this.ownedKeys_8 = ownedKeys_8;
  this.newPassword_9 = newPassword_9;
  this.expiry_10 = expiry_10;
}

defineClass(2072, $wnd.Function, $intern_22, UserContext$lambda$139$Type);
_.apply_0 = function apply_1477(arg0){
  return $lambda$139(this.$$outer_0, this.newIdentity_1, this.newIdentityPair_2, this.newLoginPublicKey_3, this.newBoxingKeypair_4, this.existingLogin_5, this.updatedLogin_6, this.newAlgorithm_7, this.ownedKeys_8, this.newPassword_9, this.expiry_10, arg0);
}
;
function UserContext$lambda$14$Type(username_0, userWithRoot_1, mfa_2, network_3, crypto_4, progressCallback_5){
  this.username_0 = username_0;
  this.userWithRoot_1 = userWithRoot_1;
  this.mfa_2 = mfa_2;
  this.network_3 = network_3;
  this.crypto_4 = crypto_4;
  this.progressCallback_5 = progressCallback_5;
}

defineClass(1902, $wnd.Function, $intern_22, UserContext$lambda$14$Type);
_.apply_0 = function apply_1478(arg0){
  return lambda$14_6(this.username_0, this.userWithRoot_1, this.mfa_2, this.network_3, this.crypto_4, this.progressCallback_5, arg0);
}
;
function UserContext$lambda$140$Type($$outer_0, proof_1){
  this.$$outer_0 = $$outer_0;
  this.proof_1 = proof_1;
}

defineClass(722, 1, {}, UserContext$lambda$140$Type);
_.apply_4 = function apply_1479(arg0, arg1){
  return $lambda$140(this.$$outer_0, this.proof_1, arg0);
}
;
var Lpeergos_shared_user_UserContext$lambda$140$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$140$Type', 722);
function UserContext$lambda$141$Type($$outer_0, newIdentity_1, newIdentityPair_2, newLoginPublicKey_3, newBoxingKeypair_4, existingLogin_5, updatedLogin_6, newAlgorithm_7, ownedKeys_8){
  this.$$outer_0 = $$outer_0;
  this.newIdentity_1 = newIdentity_1;
  this.newIdentityPair_2 = newIdentityPair_2;
  this.newLoginPublicKey_3 = newLoginPublicKey_3;
  this.newBoxingKeypair_4 = newBoxingKeypair_4;
  this.existingLogin_5 = existingLogin_5;
  this.updatedLogin_6 = updatedLogin_6;
  this.newAlgorithm_7 = newAlgorithm_7;
  this.ownedKeys_8 = ownedKeys_8;
}

defineClass(2073, $wnd.Function, $intern_22, UserContext$lambda$141$Type);
_.apply_0 = function apply_1480(arg0){
  return $lambda$141(this.$$outer_0, this.newIdentity_1, this.newIdentityPair_2, this.newLoginPublicKey_3, this.newBoxingKeypair_4, this.existingLogin_5, this.updatedLogin_6, this.newAlgorithm_7, this.ownedKeys_8, arg0);
}
;
function UserContext$lambda$142$Type($$outer_0, newPassword_1, newIdentity_2, expiry_3){
  this.$$outer_0 = $$outer_0;
  this.newPassword_1 = newPassword_1;
  this.newIdentity_2 = newIdentity_2;
  this.expiry_3 = expiry_3;
}

defineClass(2074, $wnd.Function, $intern_22, UserContext$lambda$142$Type);
_.apply_0 = function apply_1481(arg0){
  return $lambda$142(this.$$outer_0, this.newPassword_1, this.newIdentity_2, this.expiry_3);
}
;
function UserContext$lambda$143$Type($$outer_0, newPassword_1, newIdentity_2, expiry_3){
  this.$$outer_0 = $$outer_0;
  this.newPassword_1 = newPassword_1;
  this.newIdentity_2 = newIdentity_2;
  this.expiry_3 = expiry_3;
}

defineClass(2075, $wnd.Function, $intern_22, UserContext$lambda$143$Type);
_.apply_0 = function apply_1482(arg0){
  return $lambda$143(this.$$outer_0, this.newPassword_1, this.newIdentity_2, this.expiry_3, arg0);
}
;
function UserContext$lambda$144$Type(){
}

defineClass(723, 1, $intern_32, UserContext$lambda$144$Type);
_.accept = function accept_128(arg0){
  $clinit_UserContext();
}
;
_.andThen = function andThen_67(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_UserContext$lambda$144$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$144$Type', 723);
function UserContext$lambda$145$Type($$outer_0, newPassword_1){
  this.$$outer_0 = $$outer_0;
  this.newPassword_1 = newPassword_1;
}

defineClass(2076, $wnd.Function, $intern_22, UserContext$lambda$145$Type);
_.apply_0 = function apply_1483(arg0){
  return $lambda$145(this.$$outer_0, this.newPassword_1, arg0);
}
;
function UserContext$lambda$146$Type(){
}

defineClass(2077, $wnd.Function, $intern_22, UserContext$lambda$146$Type);
_.apply_0 = function apply_1484(arg0){
  return $clinit_UserContext() , null;
}
;
function UserContext$lambda$147$Type(owner_0, writerPair_1, rootPointer_2, network_3, entry_4, current_5, loginPublic_6, userRootKey_7, crypto_8, rootRKey_9, rootWKey_10, directoryName_11, rootBat_12, mirrorBatId_13, writer_14){
  this.owner_0 = owner_0;
  this.writerPair_1 = writerPair_1;
  this.rootPointer_2 = rootPointer_2;
  this.network_3 = network_3;
  this.entry_4 = entry_4;
  this.current_5 = current_5;
  this.loginPublic_6 = loginPublic_6;
  this.userRootKey_7 = userRootKey_7;
  this.crypto_8 = crypto_8;
  this.rootRKey_9 = rootRKey_9;
  this.rootWKey_10 = rootWKey_10;
  this.directoryName_11 = directoryName_11;
  this.rootBat_12 = rootBat_12;
  this.mirrorBatId_13 = mirrorBatId_13;
  this.writer_14 = writer_14;
}

defineClass(1939, $wnd.Function, $intern_22, UserContext$lambda$147$Type);
_.apply_0 = function apply_1485(arg0){
  return lambda$147(this.owner_0, this.writerPair_1, this.rootPointer_2, this.network_3, this.entry_4, this.current_5, this.loginPublic_6, this.userRootKey_7, this.crypto_8, this.rootRKey_9, this.rootWKey_10, this.directoryName_11, this.rootBat_12, this.mirrorBatId_13, this.writer_14, arg0);
}
;
function UserContext$lambda$148$Type(owner_0, writerPair_1, tid_2, rootPointer_3, network_4, entry_5, current_6, loginPublic_7, userRootKey_8, crypto_9, rootRKey_10, rootWKey_11, directoryName_12, rootBat_13, mirrorBatId_14){
  this.owner_0 = owner_0;
  this.writerPair_1 = writerPair_1;
  this.tid_2 = tid_2;
  this.rootPointer_3 = rootPointer_3;
  this.network_4 = network_4;
  this.entry_5 = entry_5;
  this.current_6 = current_6;
  this.loginPublic_7 = loginPublic_7;
  this.userRootKey_8 = userRootKey_8;
  this.crypto_9 = crypto_9;
  this.rootRKey_10 = rootRKey_10;
  this.rootWKey_11 = rootWKey_11;
  this.directoryName_12 = directoryName_12;
  this.rootBat_13 = rootBat_13;
  this.mirrorBatId_14 = mirrorBatId_14;
}

defineClass(2078, $wnd.Function, $intern_22, UserContext$lambda$148$Type);
_.apply_0 = function apply_1486(arg0){
  return lambda$148(this.owner_0, this.writerPair_1, this.tid_2, this.rootPointer_3, this.network_4, this.entry_5, this.current_6, this.loginPublic_7, this.userRootKey_8, this.crypto_9, this.rootRKey_10, this.rootWKey_11, this.directoryName_12, this.rootBat_13, this.mirrorBatId_14);
}
;
function UserContext$lambda$149$Type(owner_0, writerPair_1, tid_2, rootPointer_3, network_4, entry_5, current_6, loginPublic_7, userRootKey_8, crypto_9, rootRKey_10, rootWKey_11, directoryName_12, rootBat_13, mirrorBatId_14){
  this.owner_0 = owner_0;
  this.writerPair_1 = writerPair_1;
  this.tid_2 = tid_2;
  this.rootPointer_3 = rootPointer_3;
  this.network_4 = network_4;
  this.entry_5 = entry_5;
  this.current_6 = current_6;
  this.loginPublic_7 = loginPublic_7;
  this.userRootKey_8 = userRootKey_8;
  this.crypto_9 = crypto_9;
  this.rootRKey_10 = rootRKey_10;
  this.rootWKey_11 = rootWKey_11;
  this.directoryName_12 = directoryName_12;
  this.rootBat_13 = rootBat_13;
  this.mirrorBatId_14 = mirrorBatId_14;
}

defineClass(724, 1, {}, UserContext$lambda$149$Type);
_.apply_3 = function apply_1487(arg0, arg1){
  return lambda$149(this.owner_0, this.writerPair_1, this.tid_2, this.rootPointer_3, this.network_4, this.entry_5, this.current_6, this.loginPublic_7, this.userRootKey_8, this.crypto_9, this.rootRKey_10, this.rootWKey_11, this.directoryName_12, this.rootBat_13, this.mirrorBatId_14, arg0, arg1);
}
;
var Lpeergos_shared_user_UserContext$lambda$149$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$149$Type', 724);
function UserContext$lambda$150$Type(committer_0, owner_1, writerPair_2, tid_3, rootPointer_4, network_5, entry_6, current_7, loginPublic_8, userRootKey_9, crypto_10, rootRKey_11, rootWKey_12, directoryName_13, rootBat_14, mirrorBatId_15){
  this.committer_0 = committer_0;
  this.owner_1 = owner_1;
  this.writerPair_2 = writerPair_2;
  this.tid_3 = tid_3;
  this.rootPointer_4 = rootPointer_4;
  this.network_5 = network_5;
  this.entry_6 = entry_6;
  this.current_7 = current_7;
  this.loginPublic_8 = loginPublic_8;
  this.userRootKey_9 = userRootKey_9;
  this.crypto_10 = crypto_10;
  this.rootRKey_11 = rootRKey_11;
  this.rootWKey_12 = rootWKey_12;
  this.directoryName_13 = directoryName_13;
  this.rootBat_14 = rootBat_14;
  this.mirrorBatId_15 = mirrorBatId_15;
}

defineClass(2079, $wnd.Function, $intern_22, UserContext$lambda$150$Type);
_.apply_0 = function apply_1488(arg0){
  return lambda$150(this.committer_0, this.owner_1, this.writerPair_2, this.tid_3, this.rootPointer_4, this.network_5, this.entry_6, this.current_7, this.loginPublic_8, this.userRootKey_9, this.crypto_10, this.rootRKey_11, this.rootWKey_12, this.directoryName_13, this.rootBat_14, this.mirrorBatId_15, arg0);
}
;
function UserContext$lambda$151$Type(committer_0, owner_1, writerPair_2, tid_3, t2_4, rootPointer_6, network_7, s2_8, entry_9, current_10, loginPublic_11, userRootKey_12){
  this.committer_0 = committer_0;
  this.owner_1 = owner_1;
  this.writerPair_2 = writerPair_2;
  this.tid_3 = tid_3;
  this.t2_4 = t2_4;
  this.rootPointer_6 = rootPointer_6;
  this.network_7 = network_7;
  this.s2_8 = s2_8;
  this.entry_9 = entry_9;
  this.current_10 = current_10;
  this.loginPublic_11 = loginPublic_11;
  this.userRootKey_12 = userRootKey_12;
}

defineClass(2080, $wnd.Function, $intern_22, UserContext$lambda$151$Type);
_.apply_0 = function apply_1489(arg0){
  return lambda$151(this.committer_0, this.owner_1, this.writerPair_2, this.tid_3, this.t2_4, this.rootPointer_6, this.network_7, this.s2_8, this.entry_9, this.current_10, this.loginPublic_11, this.userRootKey_12, arg0);
}
;
_.t2_4 = 0;
function UserContext$lambda$152$Type(committer_0, owner_1, writerPair_2, tid_3){
  this.committer_0 = committer_0;
  this.owner_1 = owner_1;
  this.writerPair_2 = writerPair_2;
  this.tid_3 = tid_3;
}

defineClass(2081, $wnd.Function, $intern_22, UserContext$lambda$152$Type);
_.apply_0 = function apply_1490(arg0){
  return lambda$152(this.committer_0, this.owner_1, this.writerPair_2, this.tid_3, arg0);
}
;
function UserContext$lambda$153$Type(t2_0, root_2, committer_3, rootPointer_4, writerPair_5, network_6, tid_7){
  this.t2_0 = t2_0;
  this.root_2 = root_2;
  this.committer_3 = committer_3;
  this.rootPointer_4 = rootPointer_4;
  this.writerPair_5 = writerPair_5;
  this.network_6 = network_6;
  this.tid_7 = tid_7;
}

defineClass(2082, $wnd.Function, $intern_22, UserContext$lambda$153$Type);
_.apply_0 = function apply_1491(arg0){
  return lambda$153(this.t2_0, this.root_2, this.committer_3, this.rootPointer_4, this.writerPair_5, this.network_6, this.tid_7, arg0);
}
;
_.t2_0 = 0;
function UserContext$lambda$154$Type(t2_0){
  this.t2_0 = t2_0;
}

defineClass(2084, $wnd.Function, $intern_22, UserContext$lambda$154$Type);
_.apply_0 = function apply_1492(arg0){
  return lambda$154(this.t2_0, arg0);
}
;
_.t2_0 = 0;
function UserContext$lambda$155$Type(s2_0, entry_1, current_2, loginPublic_3, owner_4, userRootKey_5, committer_6, network_7, tid_8){
  this.s2_0 = s2_0;
  this.entry_1 = entry_1;
  this.current_2 = current_2;
  this.loginPublic_3 = loginPublic_3;
  this.owner_4 = owner_4;
  this.userRootKey_5 = userRootKey_5;
  this.committer_6 = committer_6;
  this.network_7 = network_7;
  this.tid_8 = tid_8;
}

defineClass(2083, $wnd.Function, $intern_22, UserContext$lambda$155$Type);
_.apply_0 = function apply_1493(arg0){
  return lambda$155(this.s2_0, this.entry_1, this.current_2, this.loginPublic_3, this.owner_4, this.userRootKey_5, this.committer_6, this.network_7, this.tid_8, arg0);
}
;
function UserContext$lambda$156$Type(directoryName_0, entry_1){
  this.directoryName_0 = directoryName_0;
  this.entry_1 = entry_1;
}

defineClass(1940, $wnd.Function, $intern_22, UserContext$lambda$156$Type);
_.apply_0 = function apply_1494(arg0){
  return lambda$156(this.directoryName_0, this.entry_1);
}
;
function UserContext$lambda$157$Type(){
}

defineClass(1275, $wnd.Function, $intern_22, UserContext$lambda$157$Type);
_.apply_0 = function apply_1495(arg0){
  return $clinit_UserContext() , castTo($get_6($map(castTo(arg0, 12), makeLambdaFunction(UserContext$15methodref$fromCbor$Type.prototype.apply_0, UserContext$15methodref$fromCbor$Type, []))), 233);
}
;
function UserContext$lambda$159$Type(){
}

defineClass(1941, $wnd.Function, $intern_22, UserContext$lambda$159$Type);
_.apply_0 = function apply_1496(arg0){
  return $clinit_UserContext() , castTo($get_6($map(castTo(arg0, 12), makeLambdaFunction(UserContext$16methodref$fromCbor$Type.prototype.apply_0, UserContext$16methodref$fromCbor$Type, []))), 384);
}
;
function UserContext$lambda$16$Type(entryData_0, loginRoot_1, username_2, network_3, crypto_4, progressCallback_5){
  this.entryData_0 = entryData_0;
  this.loginRoot_1 = loginRoot_1;
  this.username_2 = username_2;
  this.network_3 = network_3;
  this.crypto_4 = crypto_4;
  this.progressCallback_5 = progressCallback_5;
}

defineClass(1904, $wnd.Function, $intern_22, UserContext$lambda$16$Type);
_.apply_0 = function apply_1497(arg0){
  return lambda$16_6(this.entryData_0, this.loginRoot_1, this.username_2, this.network_3, this.crypto_4, this.progressCallback_5, arg0);
}
;
function UserContext$lambda$161$Type($$outer_0, username_1){
  this.$$outer_0 = $$outer_0;
  this.username_1 = username_1;
}

defineClass(1276, $wnd.Function, $intern_22, UserContext$lambda$161$Type);
_.apply_0 = function apply_1498(arg0){
  return $lambda$161(this.$$outer_0, this.username_1, arg0);
}
;
function UserContext$lambda$162$Type($$outer_0, signerOpt_1){
  this.$$outer_0 = $$outer_0;
  this.signerOpt_1 = signerOpt_1;
}

defineClass(2085, $wnd.Function, $intern_22, UserContext$lambda$162$Type);
_.apply_0 = function apply_1499(arg0){
  return $lambda$162(this.$$outer_0, this.signerOpt_1);
}
;
function UserContext$lambda$163$Type(signerOpt_0){
  this.signerOpt_0 = signerOpt_0;
}

defineClass(2086, $wnd.Function, $intern_22, UserContext$lambda$163$Type);
_.apply_0 = function apply_1500(arg0){
  return lambda$163(this.signerOpt_0, arg0);
}
;
function UserContext$lambda$164$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1277, $wnd.Function, $intern_22, UserContext$lambda$164$Type);
_.apply_0 = function apply_1501(arg0){
  return $lambda$164(this.$$outer_0, arg0);
}
;
function UserContext$lambda$165$Type($$outer_0, signerOpt_1){
  this.$$outer_0 = $$outer_0;
  this.signerOpt_1 = signerOpt_1;
}

defineClass(2087, $wnd.Function, $intern_22, UserContext$lambda$165$Type);
_.apply_0 = function apply_1502(arg0){
  return $lambda$165(this.$$outer_0, this.signerOpt_1, arg0);
}
;
function UserContext$lambda$166$Type($$outer_0, signerOpt_1, signer_2){
  this.$$outer_0 = $$outer_0;
  this.signerOpt_1 = signerOpt_1;
  this.signer_2 = signer_2;
}

defineClass(2088, $wnd.Function, $intern_22, UserContext$lambda$166$Type);
_.apply_0 = function apply_1503(arg0){
  return $lambda$166(this.$$outer_0, this.signerOpt_1, this.signer_2);
}
;
function UserContext$lambda$167$Type($$outer_0, signerOpt_1, signer_2){
  this.$$outer_0 = $$outer_0;
  this.signerOpt_1 = signerOpt_1;
  this.signer_2 = signer_2;
}

defineClass(2089, $wnd.Function, $intern_22, UserContext$lambda$167$Type);
_.apply_0 = function apply_1504(arg0){
  return $lambda$167(this.$$outer_0, this.signerOpt_1, this.signer_2, arg0);
}
;
function UserContext$lambda$168$Type(signerOpt_0){
  this.signerOpt_0 = signerOpt_0;
}

defineClass(2090, $wnd.Function, $intern_22, UserContext$lambda$168$Type);
_.apply_0 = function apply_1505(arg0){
  return lambda$168(this.signerOpt_0, arg0);
}
;
function UserContext$lambda$17$Type(){
}

defineClass(708, 1, {}, UserContext$lambda$17$Type);
_.get_0 = function get_119(){
  return $clinit_UserContext() , new IllegalStateException_0('No social keypair present in login data!');
}
;
var Lpeergos_shared_user_UserContext$lambda$17$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$17$Type', 708);
function UserContext$lambda$173$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1942, $wnd.Function, $intern_22, UserContext$lambda$173$Type);
_.apply_0 = function apply_1506(arg0){
  return $lambda$173(this.$$outer_0, arg0);
}
;
function UserContext$lambda$174$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2091, $wnd.Function, $intern_22, UserContext$lambda$174$Type);
_.apply_0 = function apply_1507(arg0){
  return $lambda$174(this.$$outer_0, arg0);
}
;
function UserContext$lambda$175$Type($$outer_0, identity_1){
  this.$$outer_0 = $$outer_0;
  this.identity_1 = identity_1;
}

defineClass(2092, $wnd.Function, $intern_22, UserContext$lambda$175$Type);
_.apply_0 = function apply_1508(arg0){
  return $lambda$175(this.$$outer_0, this.identity_1);
}
;
function UserContext$lambda$176$Type($$outer_0, identity_1, owner_2){
  this.$$outer_0 = $$outer_0;
  this.identity_1 = identity_1;
  this.owner_2 = owner_2;
}

defineClass(2093, $wnd.Function, $intern_22, UserContext$lambda$176$Type);
_.apply_0 = function apply_1509(arg0){
  return $lambda$176(this.$$outer_0, this.identity_1, this.owner_2);
}
;
function UserContext$lambda$177$Type($$outer_0, identity_1, owner_2){
  this.$$outer_0 = $$outer_0;
  this.identity_1 = identity_1;
  this.owner_2 = owner_2;
}

defineClass(2094, $wnd.Function, $intern_22, UserContext$lambda$177$Type);
_.apply_0 = function apply_1510(arg0){
  return $lambda$177(this.$$outer_0, this.identity_1, this.owner_2, arg0);
}
;
function UserContext$lambda$178$Type($$outer_0, path_1){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
}

defineClass(1943, $wnd.Function, $intern_22, UserContext$lambda$178$Type);
_.apply_0 = function apply_1511(arg0){
  return $lambda$178(this.$$outer_0, this.path_1, arg0);
}
;
function UserContext$lambda$179$Type($$outer_0, path_1, sharedWithState_2){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.sharedWithState_2 = sharedWithState_2;
}

defineClass(2095, $wnd.Function, $intern_22, UserContext$lambda$179$Type);
_.apply_0 = function apply_1512(arg0){
  return $lambda$179(this.$$outer_0, this.path_1, this.sharedWithState_2, arg0);
}
;
function UserContext$lambda$180$Type($$outer_0, path_1, sharedWithState_2, toUnshare_3){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.sharedWithState_2 = sharedWithState_2;
  this.toUnshare_3 = toUnshare_3;
}

defineClass(2096, $wnd.Function, $intern_22, UserContext$lambda$180$Type);
_.apply_0 = function apply_1513(arg0){
  return $lambda$180(this.$$outer_0, this.path_1, this.sharedWithState_2, this.toUnshare_3, arg0);
}
;
function UserContext$lambda$181$Type($$outer_0, path_1, sharedWithState_2, parent_3, toUnshare_4){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.sharedWithState_2 = sharedWithState_2;
  this.parent_3 = parent_3;
  this.toUnshare_4 = toUnshare_4;
}

defineClass(2097, $wnd.Function, $intern_22, UserContext$lambda$181$Type);
_.apply_0 = function apply_1514(arg0){
  return $lambda$181(this.$$outer_0, this.path_1, this.sharedWithState_2, this.parent_3, this.toUnshare_4);
}
;
function UserContext$lambda$182$Type($$outer_0, path_1, sharedWithState_2, toUnshare_3, parent_4){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.sharedWithState_2 = sharedWithState_2;
  this.toUnshare_3 = toUnshare_3;
  this.parent_4 = parent_4;
}

defineClass(725, 1, {}, UserContext$lambda$182$Type);
_.apply_3 = function apply_1515(arg0, arg1){
  return $lambda$182(this.$$outer_0, this.path_1, this.sharedWithState_2, this.toUnshare_3, this.parent_4, arg0, arg1);
}
;
var Lpeergos_shared_user_UserContext$lambda$182$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$182$Type', 725);
function UserContext$lambda$183$Type($$outer_0, path_1, sharedWithState_2, c_3){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.sharedWithState_2 = sharedWithState_2;
  this.c_3 = c_3;
}

defineClass(2098, $wnd.Function, $intern_22, UserContext$lambda$183$Type);
_.apply_0 = function apply_1516(arg0){
  return $lambda$183(this.$$outer_0, this.path_1, this.sharedWithState_2, this.c_3, arg0);
}
;
function UserContext$lambda$184$Type($$outer_0, path_1, sharedWithState_2, c_3){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.sharedWithState_2 = sharedWithState_2;
  this.c_3 = c_3;
}

defineClass(2099, $wnd.Function, $intern_22, UserContext$lambda$184$Type);
_.apply_0 = function apply_1517(arg0){
  return $lambda$184(this.$$outer_0, this.path_1, this.sharedWithState_2, this.c_3, arg0);
}
;
function UserContext$lambda$185$Type($$outer_0, path_1){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
}

defineClass(726, 1, {}, UserContext$lambda$185$Type);
_.apply_4 = function apply_1518(arg0, arg1){
  return $lambda$185(this.$$outer_0, this.path_1, arg0, arg1);
}
;
var Lpeergos_shared_user_UserContext$lambda$185$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$185$Type', 726);
function UserContext$lambda$186$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2100, $wnd.Function, $intern_22, UserContext$lambda$186$Type);
_.apply_0 = function apply_1519(arg0){
  return $lambda$186(this.$$outer_0, arg0);
}
;
function UserContext$lambda$187$Type($$outer_0, path_1, tid_2){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.tid_2 = tid_2;
}

defineClass(2101, $wnd.Function, $intern_22, UserContext$lambda$187$Type);
_.apply_0 = function apply_1520(arg0){
  return $lambda$187(this.$$outer_0, this.path_1, this.tid_2, arg0);
}
;
function UserContext$lambda$188$Type($$outer_0, tid_1){
  this.$$outer_0 = $$outer_0;
  this.tid_1 = tid_1;
}

defineClass(2102, $wnd.Function, $intern_22, UserContext$lambda$188$Type);
_.apply_0 = function apply_1521(arg0){
  return $lambda$188(this.$$outer_0, this.tid_1, arg0);
}
;
function UserContext$lambda$189$Type(wd_0){
  this.wd_0 = wd_0;
}

defineClass(2103, $wnd.Function, $intern_22, UserContext$lambda$189$Type);
_.apply_0 = function apply_1522(arg0){
  return lambda$189(this.wd_0, arg0);
}
;
function UserContext$lambda$19$Type(network_0, username_1, loginPub_2, loginSecret_3, mfa_4){
  this.network_0 = network_0;
  this.username_1 = username_1;
  this.loginPub_2 = loginPub_2;
  this.loginSecret_3 = loginSecret_3;
  this.mfa_4 = mfa_4;
}

defineClass(1268, $wnd.Function, $intern_22, UserContext$lambda$19$Type);
_.apply_0 = function apply_1523(arg0){
  return lambda$19_5(this.network_0, this.username_1, this.loginPub_2, this.loginSecret_3, this.mfa_4, arg0);
}
;
function UserContext$lambda$190$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1944, $wnd.Function, $intern_22, UserContext$lambda$190$Type);
_.apply_0 = function apply_1524(arg0){
  return $lambda$190(this.$$outer_0, arg0);
}
;
function UserContext$lambda$191$Type($$outer_0, file_1){
  this.$$outer_0 = $$outer_0;
  this.file_1 = file_1;
}

defineClass(727, 1, {}, UserContext$lambda$191$Type);
_.apply_4 = function apply_1525(arg0, arg1){
  return $lambda$191(this.$$outer_0, this.file_1, arg0, arg1);
}
;
var Lpeergos_shared_user_UserContext$lambda$191$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$191$Type', 727);
function UserContext$lambda$192$Type($$outer_0, tid_1, wd_2, file_3){
  this.$$outer_0 = $$outer_0;
  this.tid_1 = tid_1;
  this.wd_2 = wd_2;
  this.file_3 = file_3;
}

defineClass(2104, $wnd.Function, $intern_22, UserContext$lambda$192$Type);
_.apply_0 = function apply_1526(arg0){
  return $lambda$192(this.$$outer_0, this.tid_1, this.wd_2, this.file_3, arg0);
}
;
function UserContext$lambda$193$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2105, $wnd.Function, $intern_22, UserContext$lambda$193$Type);
_.apply_0 = function apply_1527(arg0){
  return $lambda$193(this.$$outer_0, arg0);
}
;
function UserContext$lambda$194$Type($$outer_0, path_1, cap_2, tid_3){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.cap_2 = cap_2;
  this.tid_3 = tid_3;
}

defineClass(2106, $wnd.Function, $intern_22, UserContext$lambda$194$Type);
_.apply_0 = function apply_1528(arg0){
  return $lambda$194(this.$$outer_0, this.path_1, this.cap_2, this.tid_3, arg0);
}
;
function UserContext$lambda$195$Type($$outer_0, tid_1){
  this.$$outer_0 = $$outer_0;
  this.tid_1 = tid_1;
}

defineClass(2107, $wnd.Function, $intern_22, UserContext$lambda$195$Type);
_.apply_0 = function apply_1529(arg0){
  return $lambda$195(this.$$outer_0, this.tid_1, arg0);
}
;
function UserContext$lambda$196$Type(wd_0){
  this.wd_0 = wd_0;
}

defineClass(2108, $wnd.Function, $intern_22, UserContext$lambda$196$Type);
_.apply_0 = function apply_1530(arg0){
  return lambda$196(this.wd_0, arg0);
}
;
function UserContext$lambda$197$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1945, $wnd.Function, $intern_22, UserContext$lambda$197$Type);
_.apply_0 = function apply_1531(arg0){
  return $lambda$197(this.$$outer_0, arg0);
}
;
function UserContext$lambda$198$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(444, $wnd.Function, $intern_22, UserContext$lambda$198$Type);
_.apply_0 = function apply_1532(arg0){
  return $lambda$198(this.$$outer_0, arg0);
}
;
function UserContext$lambda$199$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(728, 1, {}, UserContext$lambda$199$Type);
_.test_0 = function test_34(arg0){
  return $lambda$199(this.$$outer_0, arg0);
}
;
var Lpeergos_shared_user_UserContext$lambda$199$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$199$Type', 728);
function UserContext$lambda$20$Type(network_0, username_1, loginPub_2, loginSecret_3){
  this.network_0 = network_0;
  this.username_1 = username_1;
  this.loginPub_2 = loginPub_2;
  this.loginSecret_3 = loginSecret_3;
}

defineClass(2009, $wnd.Function, $intern_22, UserContext$lambda$20$Type);
_.apply_0 = function apply_1533(arg0){
  return lambda$20_4(this.network_0, this.username_1, this.loginPub_2, this.loginSecret_3, arg0);
}
;
function UserContext$lambda$200$Type(){
}

defineClass(1278, $wnd.Function, $intern_22, UserContext$lambda$200$Type);
_.apply_0 = function apply_1534(arg0){
  return $clinit_UserContext() , castTo($collect_0($map_0(castTo(arg0, 47).stream(), makeLambdaFunction(UserContext$17methodref$getOwnerName$Type.prototype.apply_0, UserContext$17methodref$getOwnerName$Type, [])), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47);
}
;
function UserContext$lambda$203$Type(){
}

defineClass(1197, $wnd.Function, $intern_22, UserContext$lambda$203$Type);
_.apply_0 = function apply_1535(arg0){
  return $clinit_UserContext() , castTo(arg0, 270).pendingOutgoingFollowRequests;
}
;
function UserContext$lambda$204$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(541, $wnd.Function, $intern_22, UserContext$lambda$204$Type);
_.apply_0 = function apply_1536(arg0){
  return $lambda$204(this.$$outer_0, arg0);
}
;
function UserContext$lambda$205$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1279, $wnd.Function, $intern_22, UserContext$lambda$205$Type);
_.apply_0 = function apply_1537(arg0){
  return $lambda$205(this.$$outer_0, arg0);
}
;
function UserContext$lambda$206$Type(pendingOutgoing_0){
  this.pendingOutgoing_0 = pendingOutgoing_0;
}

defineClass(1280, $wnd.Function, $intern_22, UserContext$lambda$206$Type);
_.apply_0 = function apply_1538(arg0){
  return lambda$206(this.pendingOutgoing_0, arg0);
}
;
function UserContext$lambda$207$Type(pendingOutgoing_0){
  this.pendingOutgoing_0 = pendingOutgoing_0;
}

defineClass(729, 1, {}, UserContext$lambda$207$Type);
_.test_0 = function test_35(arg0){
  return lambda$207(this.pendingOutgoing_0, arg0);
}
;
var Lpeergos_shared_user_UserContext$lambda$207$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$207$Type', 729);
function UserContext$lambda$208$Type(){
}

defineClass(2109, $wnd.Function, $intern_22, UserContext$lambda$208$Type);
_.apply_0 = function apply_1539(arg0){
  return $clinit_UserContext() , ($ensureUnmodified(castTo(arg0, 19)) , castTo(arg0, 19).props).name;
}
;
function UserContext$lambda$209$Type(){
}

defineClass(2110, $wnd.Function, $intern_22, UserContext$lambda$209$Type);
_.apply_0 = function apply_1540(arg0){
  return $clinit_UserContext() , castTo(arg0, 19);
}
;
function UserContext$lambda$21$Type(){
}

defineClass(2010, $wnd.Function, $intern_22, UserContext$lambda$21$Type);
_.apply_0 = function apply_1541(arg0){
  return lambda$21_2(arg0);
}
;
function UserContext$lambda$210$Type(){
}

defineClass(730, 1, {}, UserContext$lambda$210$Type);
_.test_0 = function test_36(arg0){
  return $clinit_UserContext() , instanceOf(castTo(arg0, 110), 241);
}
;
var Lpeergos_shared_user_UserContext$lambda$210$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$210$Type', 730);
function UserContext$lambda$211$Type(){
}

defineClass(1946, $wnd.Function, $intern_22, UserContext$lambda$211$Type);
_.apply_0 = function apply_1542(arg0){
  return $clinit_UserContext() , castTo(castTo(arg0, 110), 241);
}
;
function UserContext$lambda$212$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(731, 1, {}, UserContext$lambda$212$Type);
_.test_0 = function test_37(arg0){
  return $lambda$212(this.$$outer_0, arg0);
}
;
var Lpeergos_shared_user_UserContext$lambda$212$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$212$Type', 731);
function UserContext$lambda$213$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1281, $wnd.Function, $intern_22, UserContext$lambda$213$Type);
_.apply_0 = function apply_1543(arg0){
  return $lambda$213(this.$$outer_0, arg0);
}
;
function UserContext$lambda$214$Type($$outer_0, home_1){
  this.$$outer_0 = $$outer_0;
  this.home_1 = home_1;
}

defineClass(2111, $wnd.Function, $intern_22, UserContext$lambda$214$Type);
_.apply_0 = function apply_1544(arg0){
  return $lambda$214(this.$$outer_0, this.home_1, arg0);
}
;
function UserContext$lambda$215$Type($$outer_0, res_1){
  this.$$outer_0 = $$outer_0;
  this.res_1 = res_1;
}

defineClass(2112, $wnd.Function, $intern_22, UserContext$lambda$215$Type);
_.apply_0 = function apply_1545(arg0){
  return $lambda$215(this.$$outer_0, this.res_1, arg0);
}
;
function UserContext$lambda$216$Type(){
}

defineClass(2114, $wnd.Function, {}, UserContext$lambda$216$Type);
_.accept_5 = function accept_129(arg0){
  $clinit_UserContext();
}
;
function UserContext$lambda$217$Type(res_0, fileOpt_1){
  this.res_0 = res_0;
  this.fileOpt_1 = fileOpt_1;
}

defineClass(2115, $wnd.Function, $intern_22, UserContext$lambda$217$Type);
_.apply_0 = function apply_1546(arg0){
  return lambda$217(this.res_0, this.fileOpt_1, arg0);
}
;
function UserContext$lambda$219$Type(res_0){
  this.res_0 = res_0;
}

defineClass(732, 1, $intern_32, UserContext$lambda$219$Type);
_.accept = function accept_130(arg0){
  lambda$219(this.res_0, arg0);
}
;
_.andThen = function andThen_68(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_UserContext$lambda$219$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$219$Type', 732);
function UserContext$lambda$22$Type(loginRoot_0, legacyAccount_1, userData_2, loginSecret_3, generatedCredentials_4, username_5, pair_6, network_7, crypto_8, progressCallback_9){
  this.loginRoot_0 = loginRoot_0;
  this.legacyAccount_1 = legacyAccount_1;
  this.userData_2 = userData_2;
  this.loginSecret_3 = loginSecret_3;
  this.generatedCredentials_4 = generatedCredentials_4;
  this.username_5 = username_5;
  this.pair_6 = pair_6;
  this.network_7 = network_7;
  this.crypto_8 = crypto_8;
  this.progressCallback_9 = progressCallback_9;
}

defineClass(1906, $wnd.Function, $intern_22, UserContext$lambda$22$Type);
_.apply_0 = function apply_1547(arg0){
  return lambda$22_2(this.loginRoot_0, this.legacyAccount_1, this.userData_2, this.loginSecret_3, this.generatedCredentials_4, this.username_5, this.pair_6, this.network_7, this.crypto_8, this.progressCallback_9, arg0);
}
;
_.legacyAccount_1 = false;
function UserContext$lambda$220$Type(res_0){
  this.res_0 = res_0;
}

defineClass(2113, $wnd.Function, $intern_22, UserContext$lambda$220$Type);
_.apply_0 = function apply_1548(arg0){
  return $clinit_UserContext() , this.res_0;
}
;
function UserContext$lambda$221$Type($$outer_0, annotation_1){
  this.$$outer_0 = $$outer_0;
  this.annotation_1 = annotation_1;
}

defineClass(1947, $wnd.Function, $intern_22, UserContext$lambda$221$Type);
_.apply_0 = function apply_1549(arg0){
  return $lambda$221(this.$$outer_0, this.annotation_1, arg0);
}
;
function UserContext$lambda$222$Type($$outer_0, serialized_1){
  this.$$outer_0 = $$outer_0;
  this.serialized_1 = serialized_1;
}

defineClass(2117, $wnd.Function, $intern_22, UserContext$lambda$222$Type);
_.apply_0 = function apply_1550(arg0){
  return $lambda$222(this.$$outer_0, this.serialized_1, arg0);
}
;
function UserContext$lambda$223$Type(){
}

defineClass(2119, $wnd.Function, {}, UserContext$lambda$223$Type);
_.accept_5 = function accept_131(arg0){
  $clinit_UserContext();
}
;
function UserContext$lambda$224$Type(){
}

defineClass(2118, $wnd.Function, $intern_22, UserContext$lambda$224$Type);
_.apply_0 = function apply_1551(arg0){
  return $clinit_UserContext() , $clinit_Boolean() , true;
}
;
function UserContext$lambda$225$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(218, 1, {}, UserContext$lambda$225$Type);
_.get_0 = function get_120(){
  return generate_0(this.$$outer_0.crypto.random);
}
;
var Lpeergos_shared_user_UserContext$lambda$225$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$225$Type', 218);
function UserContext$lambda$228$Type(){
}

defineClass(2120, $wnd.Function, $intern_22, UserContext$lambda$228$Type);
_.apply_0 = function apply_1552(arg0){
  return $clinit_UserContext() , castTo($collect_0($map_0(castTo(arg0, 47).stream(), makeLambdaFunction(UserContext$22methodref$getName$Type.prototype.apply_0, UserContext$22methodref$getName$Type, [])), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47);
}
;
function UserContext$lambda$23$Type(username_0, signer_1, boxer_2, login_3, network_4, crypto_5, pair_6, userData_7, progressCallback_8){
  this.username_0 = username_0;
  this.signer_1 = signer_1;
  this.boxer_2 = boxer_2;
  this.login_3 = login_3;
  this.network_4 = network_4;
  this.crypto_5 = crypto_5;
  this.pair_6 = pair_6;
  this.userData_7 = userData_7;
  this.progressCallback_8 = progressCallback_8;
}

defineClass(1907, $wnd.Function, $intern_22, UserContext$lambda$23$Type);
_.apply_0 = function apply_1553(arg0){
  return lambda$23_3(this.username_0, this.signer_1, this.boxer_2, this.login_3, this.network_4, this.crypto_5, this.pair_6, this.userData_7, this.progressCallback_8, arg0);
}
;
function UserContext$lambda$230$Type($$outer_0, g_1){
  this.$$outer_0 = $$outer_0;
  this.g_1 = g_1;
}

defineClass(1948, $wnd.Function, $intern_22, UserContext$lambda$230$Type);
_.apply_0 = function apply_1554(arg0){
  return $lambda$230(this.$$outer_0, this.g_1, arg0);
}
;
function UserContext$lambda$231$Type($$outer_0, followers_1, g_2){
  this.$$outer_0 = $$outer_0;
  this.followers_1 = followers_1;
  this.g_2 = g_2;
}

defineClass(2121, $wnd.Function, $intern_22, UserContext$lambda$231$Type);
_.apply_0 = function apply_1555(arg0){
  return $lambda$231(this.$$outer_0, this.followers_1, this.g_2, arg0);
}
;
function UserContext$lambda$232$Type($$outer_0, followers_1, friends_2){
  this.$$outer_0 = $$outer_0;
  this.followers_1 = followers_1;
  this.friends_2 = friends_2;
}

defineClass(734, 1, $intern_34, UserContext$lambda$232$Type);
_.apply_1 = function apply_1556(arg0, arg1){
  return $lambda$232(this.$$outer_0, this.followers_1, this.friends_2, arg1);
}
;
var Lpeergos_shared_user_UserContext$lambda$232$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$232$Type', 734);
function UserContext$lambda$233$Type(){
}

defineClass(735, 1, $intern_34, UserContext$lambda$233$Type);
_.apply_1 = function apply_1557(arg0, arg1){
  return $clinit_UserContext() , $clinit_Boolean() , (checkCriticalNotNull(castToBoolean(arg0)) , castToBoolean(arg0)) && (checkCriticalNotNull(castToBoolean(arg1)) , castToBoolean(arg1))?true:false;
}
;
var Lpeergos_shared_user_UserContext$lambda$233$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$233$Type', 735);
function UserContext$lambda$234$Type($$outer_0, e_1){
  this.$$outer_0 = $$outer_0;
  this.e_1 = e_1;
}

defineClass(2122, $wnd.Function, $intern_22, UserContext$lambda$234$Type);
_.apply_0 = function apply_1558(arg0){
  return $lambda$234(this.$$outer_0, this.e_1, arg0);
}
;
function UserContext$lambda$235$Type($$outer_0, e_1, followers_2, friends_3){
  this.$$outer_0 = $$outer_0;
  this.e_1 = e_1;
  this.followers_2 = followers_2;
  this.friends_3 = friends_3;
}

defineClass(2123, $wnd.Function, $intern_22, UserContext$lambda$235$Type);
_.apply_0 = function apply_1559(arg0){
  return $lambda$235(this.$$outer_0, this.e_1, this.followers_2, this.friends_3);
}
;
function UserContext$lambda$236$Type($$outer_0, e_1, followers_2, friends_3){
  this.$$outer_0 = $$outer_0;
  this.e_1 = e_1;
  this.followers_2 = followers_2;
  this.friends_3 = friends_3;
}

defineClass(2125, $wnd.Function, $intern_22, UserContext$lambda$236$Type);
_.apply_0 = function apply_1560(arg0){
  return $lambda$236(this.$$outer_0, this.e_1, this.followers_2, this.friends_3, arg0);
}
;
function UserContext$lambda$237$Type($$outer_0, e_1, followers_2, friends_3){
  this.$$outer_0 = $$outer_0;
  this.e_1 = e_1;
  this.followers_2 = followers_2;
  this.friends_3 = friends_3;
}

defineClass(733, 1, {}, UserContext$lambda$237$Type);
_.apply_3 = function apply_1561(arg0, arg1){
  return $lambda$237(this.$$outer_0, this.e_1, this.followers_2, this.friends_3, arg0, arg1);
}
;
var Lpeergos_shared_user_UserContext$lambda$237$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$237$Type', 733);
function UserContext$lambda$238$Type(){
}

defineClass(2124, $wnd.Function, $intern_22, UserContext$lambda$238$Type);
_.apply_0 = function apply_1562(arg0){
  return $clinit_UserContext() , $clinit_Boolean() , true;
}
;
function UserContext$lambda$239$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(382, $wnd.Function, $intern_22, UserContext$lambda$239$Type);
_.apply_0 = function apply_1563(arg0){
  return $lambda$239(this.$$outer_0, arg0);
}
;
function UserContext$lambda$24$Type(username_0, signer_1, boxer_2, login_3, network_4, crypto_5, pair_6, userData_7, root_8, progressCallback_9){
  this.username_0 = username_0;
  this.signer_1 = signer_1;
  this.boxer_2 = boxer_2;
  this.login_3 = login_3;
  this.network_4 = network_4;
  this.crypto_5 = crypto_5;
  this.pair_6 = pair_6;
  this.userData_7 = userData_7;
  this.root_8 = root_8;
  this.progressCallback_9 = progressCallback_9;
}

defineClass(2011, $wnd.Function, $intern_22, UserContext$lambda$24$Type);
_.apply_0 = function apply_1564(arg0){
  return lambda$24_2(this.username_0, this.signer_1, this.boxer_2, this.login_3, this.network_4, this.crypto_5, this.pair_6, this.userData_7, this.root_8, this.progressCallback_9, arg0);
}
;
function UserContext$lambda$240$Type($$outer_0, home_1){
  this.$$outer_0 = $$outer_0;
  this.home_1 = home_1;
}

defineClass(2126, $wnd.Function, $intern_22, UserContext$lambda$240$Type);
_.apply_0 = function apply_1565(arg0){
  return $lambda$240(this.$$outer_0, this.home_1, arg0);
}
;
function UserContext$lambda$241$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2127, $wnd.Function, $intern_22, UserContext$lambda$241$Type);
_.apply_0 = function apply_1566(arg0){
  return $lambda$241(this.$$outer_0, arg0);
}
;
function UserContext$lambda$242$Type(){
}

defineClass(2128, $wnd.Function, {}, UserContext$lambda$242$Type);
_.accept_5 = function accept_132(arg0){
  $clinit_UserContext();
}
;
function UserContext$lambda$243$Type(fileOpt_0){
  this.fileOpt_0 = fileOpt_0;
}

defineClass(2129, $wnd.Function, $intern_22, UserContext$lambda$243$Type);
_.apply_0 = function apply_1567(arg0){
  return lambda$243(this.fileOpt_0, arg0);
}
;
function UserContext$lambda$245$Type($$outer_0, usernameToRemove_1){
  this.$$outer_0 = $$outer_0;
  this.usernameToRemove_1 = usernameToRemove_1;
}

defineClass(1949, $wnd.Function, $intern_22, UserContext$lambda$245$Type);
_.apply_0 = function apply_1568(arg0){
  return $lambda$245(this.$$outer_0, this.usernameToRemove_1, arg0);
}
;
function UserContext$lambda$246$Type($$outer_0, usernameToRemove_1, home_2){
  this.$$outer_0 = $$outer_0;
  this.usernameToRemove_1 = usernameToRemove_1;
  this.home_2 = home_2;
}

defineClass(2131, $wnd.Function, $intern_22, UserContext$lambda$246$Type);
_.apply_0 = function apply_1569(arg0){
  return $lambda$246(this.$$outer_0, this.usernameToRemove_1, this.home_2, arg0);
}
;
function UserContext$lambda$247$Type($$outer_0, usernameToRemove_1){
  this.$$outer_0 = $$outer_0;
  this.usernameToRemove_1 = usernameToRemove_1;
}

defineClass(2132, $wnd.Function, $intern_22, UserContext$lambda$247$Type);
_.apply_0 = function apply_1570(arg0){
  return $lambda$247(this.$$outer_0, this.usernameToRemove_1, arg0);
}
;
function UserContext$lambda$248$Type(){
}

defineClass(2133, $wnd.Function, {}, UserContext$lambda$248$Type);
_.accept_5 = function accept_133(arg0){
  $clinit_UserContext();
}
;
function UserContext$lambda$249$Type(fileOpt_0){
  this.fileOpt_0 = fileOpt_0;
}

defineClass(2134, $wnd.Function, $intern_22, UserContext$lambda$249$Type);
_.apply_0 = function apply_1571(arg0){
  return lambda$249(this.fileOpt_0, arg0);
}
;
function UserContext$lambda$25$Type(username_0, signer_1, boxer_2, login_3, network_4, tofuCorenode_5, crypto_6, pair_7, userData_8, root_9, progressCallback_10){
  this.username_0 = username_0;
  this.signer_1 = signer_1;
  this.boxer_2 = boxer_2;
  this.login_3 = login_3;
  this.network_4 = network_4;
  this.tofuCorenode_5 = tofuCorenode_5;
  this.crypto_6 = crypto_6;
  this.pair_7 = pair_7;
  this.userData_8 = userData_8;
  this.root_9 = root_9;
  this.progressCallback_10 = progressCallback_10;
}

defineClass(2016, $wnd.Function, $intern_22, UserContext$lambda$25$Type);
_.apply_0 = function apply_1572(arg0){
  return lambda$25_4(this.username_0, this.signer_1, this.boxer_2, this.login_3, this.network_4, this.tofuCorenode_5, this.crypto_6, this.pair_7, this.userData_8, this.root_9, this.progressCallback_10, arg0);
}
;
function UserContext$lambda$251$Type($$outer_0, usernameToRemove_1, fileOpt_2){
  this.$$outer_0 = $$outer_0;
  this.usernameToRemove_1 = usernameToRemove_1;
  this.fileOpt_2 = fileOpt_2;
}

defineClass(2135, $wnd.Function, $intern_22, UserContext$lambda$251$Type);
_.apply_0 = function apply_1573(arg0){
  return $lambda$251(this.$$outer_0, this.usernameToRemove_1, this.fileOpt_2, arg0);
}
;
function UserContext$lambda$252$Type(){
}

defineClass(2137, $wnd.Function, {}, UserContext$lambda$252$Type);
_.accept_5 = function accept_134(arg0){
  $clinit_UserContext();
}
;
function UserContext$lambda$253$Type(){
}

defineClass(2138, $wnd.Function, $intern_22, UserContext$lambda$253$Type);
_.apply_0 = function apply_1574(arg0){
  return $clinit_UserContext() , $clinit_Boolean() , true;
}
;
function UserContext$lambda$254$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(447, $wnd.Function, $intern_22, UserContext$lambda$254$Type);
_.apply_0 = function apply_1575(arg0){
  return $lambda$254(this.$$outer_0, arg0);
}
;
function UserContext$lambda$255$Type($$outer_0, pendingIncoming_1){
  this.$$outer_0 = $$outer_0;
  this.pendingIncoming_1 = pendingIncoming_1;
}

defineClass(2139, $wnd.Function, $intern_22, UserContext$lambda$255$Type);
_.apply_0 = function apply_1576(arg0){
  return $lambda$255(this.$$outer_0, this.pendingIncoming_1, arg0);
}
;
function UserContext$lambda$256$Type($$outer_0, pendingIncoming_1, pendingOutgoing_2){
  this.$$outer_0 = $$outer_0;
  this.pendingIncoming_1 = pendingIncoming_1;
  this.pendingOutgoing_2 = pendingOutgoing_2;
}

defineClass(2140, $wnd.Function, $intern_22, UserContext$lambda$256$Type);
_.apply_0 = function apply_1577(arg0){
  return $lambda$256(this.$$outer_0, this.pendingIncoming_1, this.pendingOutgoing_2, arg0);
}
;
function UserContext$lambda$257$Type($$outer_0, pendingIncoming_1, pendingOutgoing_2, followerRoots_3){
  this.$$outer_0 = $$outer_0;
  this.pendingIncoming_1 = pendingIncoming_1;
  this.pendingOutgoing_2 = pendingOutgoing_2;
  this.followerRoots_3 = followerRoots_3;
}

defineClass(2141, $wnd.Function, $intern_22, UserContext$lambda$257$Type);
_.apply_0 = function apply_1578(arg0){
  return $lambda$257(this.$$outer_0, this.pendingIncoming_1, this.pendingOutgoing_2, this.followerRoots_3, arg0);
}
;
function UserContext$lambda$258$Type($$outer_0, pendingIncoming_1, pendingOutgoing_2, followerRoots_3, followingRoots_4){
  this.$$outer_0 = $$outer_0;
  this.pendingIncoming_1 = pendingIncoming_1;
  this.pendingOutgoing_2 = pendingOutgoing_2;
  this.followerRoots_3 = followerRoots_3;
  this.followingRoots_4 = followingRoots_4;
}

defineClass(2142, $wnd.Function, $intern_22, UserContext$lambda$258$Type);
_.apply_0 = function apply_1579(arg0){
  return $lambda$258(this.$$outer_0, this.pendingIncoming_1, this.pendingOutgoing_2, this.followerRoots_3, this.followingRoots_4, arg0);
}
;
function UserContext$lambda$259$Type($$outer_0, pendingIncoming_1, pendingOutgoing_2, followers_3, followerRoots_4, followingRoots_5){
  this.$$outer_0 = $$outer_0;
  this.pendingIncoming_1 = pendingIncoming_1;
  this.pendingOutgoing_2 = pendingOutgoing_2;
  this.followers_3 = followers_3;
  this.followerRoots_4 = followerRoots_4;
  this.followingRoots_5 = followingRoots_5;
}

defineClass(2145, $wnd.Function, $intern_22, UserContext$lambda$259$Type);
_.apply_0 = function apply_1580(arg0){
  return $lambda$259(this.$$outer_0, this.pendingIncoming_1, this.pendingOutgoing_2, this.followers_3, this.followerRoots_4, this.followingRoots_5, arg0);
}
;
function UserContext$lambda$26$Type(username_0, signer_1, boxer_2, login_3, network_4, tofuCorenode_5, crypto_6, pair_7, userData_8, root_9, transactions_10, progressCallback_11){
  this.username_0 = username_0;
  this.signer_1 = signer_1;
  this.boxer_2 = boxer_2;
  this.login_3 = login_3;
  this.network_4 = network_4;
  this.tofuCorenode_5 = tofuCorenode_5;
  this.crypto_6 = crypto_6;
  this.pair_7 = pair_7;
  this.userData_8 = userData_8;
  this.root_9 = root_9;
  this.transactions_10 = transactions_10;
  this.progressCallback_11 = progressCallback_11;
}

defineClass(2017, $wnd.Function, $intern_22, UserContext$lambda$26$Type);
_.apply_0 = function apply_1581(arg0){
  return lambda$26_3(this.username_0, this.signer_1, this.boxer_2, this.login_3, this.network_4, this.tofuCorenode_5, this.crypto_6, this.pair_7, this.userData_8, this.root_9, this.transactions_10, this.progressCallback_11, arg0);
}
;
function UserContext$lambda$260$Type($$outer_0, pendingIncoming_1, pendingOutgoing_2, followers_3, followerRoots_4, followingRoots_5, blocked_6){
  this.$$outer_0 = $$outer_0;
  this.pendingIncoming_1 = pendingIncoming_1;
  this.pendingOutgoing_2 = pendingOutgoing_2;
  this.followers_3 = followers_3;
  this.followerRoots_4 = followerRoots_4;
  this.followingRoots_5 = followingRoots_5;
  this.blocked_6 = blocked_6;
}

defineClass(2146, $wnd.Function, $intern_22, UserContext$lambda$260$Type);
_.apply_0 = function apply_1582(arg0){
  return $lambda$260(this.$$outer_0, this.pendingIncoming_1, this.pendingOutgoing_2, this.followers_3, this.followerRoots_4, this.followingRoots_5, this.blocked_6, arg0);
}
;
function UserContext$lambda$261$Type(pendingIncoming_0, pendingOutgoing_1, followers_2, followerRoots_3, followingRoots_4, blocked_5, annotations_6){
  this.pendingIncoming_0 = pendingIncoming_0;
  this.pendingOutgoing_1 = pendingOutgoing_1;
  this.followers_2 = followers_2;
  this.followerRoots_3 = followerRoots_3;
  this.followingRoots_4 = followingRoots_4;
  this.blocked_5 = blocked_5;
  this.annotations_6 = annotations_6;
}

defineClass(2147, $wnd.Function, $intern_22, UserContext$lambda$261$Type);
_.apply_0 = function apply_1583(arg0){
  return lambda$261(this.pendingIncoming_0, this.pendingOutgoing_1, this.followers_2, this.followerRoots_3, this.followingRoots_4, this.blocked_5, this.annotations_6, arg0);
}
;
function UserContext$lambda$262$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(736, 1, $intern_34, UserContext$lambda$262$Type);
_.apply_1 = function apply_1584(arg0, arg1){
  return $sendFollowRequest_2(this.$$outer_0, castToString(arg1), ($clinit_SymmetricKey() , random_10(castTo($get(PROVIDERS_1, ($clinit_SymmetricKey$Type() , TweetNaCl)), 91), castTo($get(RNG_PROVIDERS_0, TweetNaCl), 86))));
}
;
var Lpeergos_shared_user_UserContext$lambda$262$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$262$Type', 736);
function UserContext$lambda$263$Type(){
}

defineClass(737, 1, $intern_34, UserContext$lambda$263$Type);
_.apply_1 = function apply_1585(arg0, arg1){
  return $clinit_UserContext() , castToBoolean(arg0);
}
;
var Lpeergos_shared_user_UserContext$lambda$263$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$263$Type', 737);
function UserContext$lambda$264$Type($$outer_0, initialRequestAndRaw_1, initialRequest_2, reply_3){
  this.$$outer_0 = $$outer_0;
  this.initialRequestAndRaw_1 = initialRequestAndRaw_1;
  this.initialRequest_2 = initialRequest_2;
  this.reply_3 = reply_3;
}

defineClass(1950, $wnd.Function, $intern_22, UserContext$lambda$264$Type);
_.apply_0 = function apply_1586(arg0){
  return $lambda$264(this.$$outer_0, this.initialRequestAndRaw_1, this.initialRequest_2, this.reply_3, arg0);
}
;
function UserContext$lambda$265$Type($$outer_0, initialRequestAndRaw_1){
  this.$$outer_0 = $$outer_0;
  this.initialRequestAndRaw_1 = initialRequestAndRaw_1;
}

defineClass(2148, $wnd.Function, $intern_22, UserContext$lambda$265$Type);
_.apply_0 = function apply_1587(arg0){
  return $lambda$265(this.$$outer_0, this.initialRequestAndRaw_1);
}
;
function UserContext$lambda$266$Type($$outer_0, theirUsername_1, initialRequest_2, accept_3){
  this.$$outer_0 = $$outer_0;
  this.theirUsername_1 = theirUsername_1;
  this.initialRequest_2 = initialRequest_2;
  this.accept_3 = accept_3;
}

defineClass(1951, $wnd.Function, $intern_22, UserContext$lambda$266$Type);
_.apply_0 = function apply_1588(arg0){
  return $lambda$266(this.$$outer_0, this.theirUsername_1, this.initialRequest_2, this.accept_3);
}
;
_.accept_3 = false;
function UserContext$lambda$267$Type($$outer_0, theirUsername_1, initialRequest_2){
  this.$$outer_0 = $$outer_0;
  this.theirUsername_1 = theirUsername_1;
  this.initialRequest_2 = initialRequest_2;
}

defineClass(2149, $wnd.Function, $intern_22, UserContext$lambda$267$Type);
_.apply_0 = function apply_1589(arg0){
  return $lambda$267(this.$$outer_0, this.theirUsername_1, this.initialRequest_2, arg0);
}
;
function UserContext$lambda$268$Type($$outer_0, theirUsername_1, sharing_2, initialRequest_3){
  this.$$outer_0 = $$outer_0;
  this.theirUsername_1 = theirUsername_1;
  this.sharing_2 = sharing_2;
  this.initialRequest_3 = initialRequest_3;
}

defineClass(2150, $wnd.Function, $intern_22, UserContext$lambda$268$Type);
_.apply_0 = function apply_1590(arg0){
  return $lambda$268(this.$$outer_0, this.theirUsername_1, this.sharing_2, this.initialRequest_3, arg0);
}
;
function UserContext$lambda$269$Type($$outer_0, theirUsername_1, sharing_2, initialRequest_3){
  this.$$outer_0 = $$outer_0;
  this.theirUsername_1 = theirUsername_1;
  this.sharing_2 = sharing_2;
  this.initialRequest_3 = initialRequest_3;
}

defineClass(2152, $wnd.Function, $intern_22, UserContext$lambda$269$Type);
_.apply_0 = function apply_1591(arg0){
  return $lambda$269(this.$$outer_0, this.theirUsername_1, this.sharing_2, this.initialRequest_3, arg0);
}
;
function UserContext$lambda$270$Type($$outer_0, theirUsername_1){
  this.$$outer_0 = $$outer_0;
  this.theirUsername_1 = theirUsername_1;
}

defineClass(2153, $wnd.Function, $intern_22, UserContext$lambda$270$Type);
_.apply_0 = function apply_1592(arg0){
  return $lambda$270(this.$$outer_0, this.theirUsername_1, arg0);
}
;
function UserContext$lambda$271$Type($$outer_0, theirUsername_1){
  this.$$outer_0 = $$outer_0;
  this.theirUsername_1 = theirUsername_1;
}

defineClass(2151, $wnd.Function, $intern_22, UserContext$lambda$271$Type);
_.apply_0 = function apply_1593(arg0){
  return $lambda$271(this.$$outer_0, this.theirUsername_1, arg0);
}
;
function UserContext$lambda$272$Type($$outer_0, theirUsername_1){
  this.$$outer_0 = $$outer_0;
  this.theirUsername_1 = theirUsername_1;
}

defineClass(2154, $wnd.Function, $intern_22, UserContext$lambda$272$Type);
_.apply_0 = function apply_1594(arg0){
  return $lambda$272(this.$$outer_0, this.theirUsername_1, arg0);
}
;
function UserContext$lambda$273$Type(entry_0){
  this.entry_0 = entry_0;
}

defineClass(2155, $wnd.Function, $intern_22, UserContext$lambda$273$Type);
_.apply_0 = function apply_1595(arg0){
  return $clinit_UserContext() , this.entry_0;
}
;
function UserContext$lambda$274$Type($$outer_0, theirUsername_1, initialRequest_2, reciprocate_3, accept_4){
  this.$$outer_0 = $$outer_0;
  this.theirUsername_1 = theirUsername_1;
  this.initialRequest_2 = initialRequest_2;
  this.reciprocate_3 = reciprocate_3;
  this.accept_4 = accept_4;
}

defineClass(1952, $wnd.Function, $intern_22, UserContext$lambda$274$Type);
_.apply_0 = function apply_1596(arg0){
  return $lambda$274(this.$$outer_0, this.theirUsername_1, this.initialRequest_2, this.reciprocate_3, this.accept_4, arg0);
}
;
_.accept_4 = false;
_.reciprocate_3 = false;
function UserContext$lambda$275$Type($$outer_0, theirUsername_1){
  this.$$outer_0 = $$outer_0;
  this.theirUsername_1 = theirUsername_1;
}

defineClass(2156, $wnd.Function, $intern_22, UserContext$lambda$275$Type);
_.apply_0 = function apply_1597(arg0){
  return $lambda$275(this.$$outer_0, this.theirUsername_1, arg0);
}
;
function UserContext$lambda$276$Type($$outer_0, initialRequest_1){
  this.$$outer_0 = $$outer_0;
  this.initialRequest_1 = initialRequest_1;
}

defineClass(2157, $wnd.Function, $intern_22, UserContext$lambda$276$Type);
_.apply_0 = function apply_1598(arg0){
  return $getPublicKeys(this.$$outer_0, castTo($get_6(this.initialRequest_1.entry), 60).ownerName);
}
;
function UserContext$lambda$277$Type($$outer_0, initialRequest_1, reply_2){
  this.$$outer_0 = $$outer_0;
  this.initialRequest_1 = initialRequest_1;
  this.reply_2 = reply_2;
}

defineClass(2158, $wnd.Function, $intern_22, UserContext$lambda$277$Type);
_.apply_0 = function apply_1599(arg0){
  return $lambda$277(this.$$outer_0, this.initialRequest_1, this.reply_2, arg0);
}
;
function UserContext$lambda$278$Type($$outer_0, initialRequest_1, reciprocate_2){
  this.$$outer_0 = $$outer_0;
  this.initialRequest_1 = initialRequest_1;
  this.reciprocate_2 = reciprocate_2;
}

defineClass(1953, $wnd.Function, $intern_22, UserContext$lambda$278$Type);
_.apply_0 = function apply_1600(arg0){
  return $lambda$278(this.$$outer_0, this.initialRequest_1, this.reciprocate_2);
}
;
_.reciprocate_2 = false;
function UserContext$lambda$279$Type($$outer_0, initialRequest_1){
  this.$$outer_0 = $$outer_0;
  this.initialRequest_1 = initialRequest_1;
}

defineClass(2159, $wnd.Function, $intern_22, UserContext$lambda$279$Type);
_.apply_0 = function apply_1601(arg0){
  return $lambda$279(this.$$outer_0, this.initialRequest_1);
}
;
function UserContext$lambda$28$Type(username_0, signer_1, boxer_2, login_3, network_4, tofuCorenode_5, crypto_6, pair_7, userData_8, root_9, transactions_10, mirrorBatId_11, progressCallback_12){
  this.username_0 = username_0;
  this.signer_1 = signer_1;
  this.boxer_2 = boxer_2;
  this.login_3 = login_3;
  this.network_4 = network_4;
  this.tofuCorenode_5 = tofuCorenode_5;
  this.crypto_6 = crypto_6;
  this.pair_7 = pair_7;
  this.userData_8 = userData_8;
  this.root_9 = root_9;
  this.transactions_10 = transactions_10;
  this.mirrorBatId_11 = mirrorBatId_11;
  this.progressCallback_12 = progressCallback_12;
}

defineClass(2019, $wnd.Function, $intern_22, UserContext$lambda$28$Type);
_.apply_0 = function apply_1602(arg0){
  return lambda$28_1(this.username_0, this.signer_1, this.boxer_2, this.login_3, this.network_4, this.tofuCorenode_5, this.crypto_6, this.pair_7, this.userData_8, this.root_9, this.transactions_10, this.mirrorBatId_11, this.progressCallback_12, arg0);
}
;
function UserContext$lambda$280$Type($$outer_0, initialRequestAndRaw_1){
  this.$$outer_0 = $$outer_0;
  this.initialRequestAndRaw_1 = initialRequestAndRaw_1;
}

defineClass(1954, $wnd.Function, $intern_22, UserContext$lambda$280$Type);
_.apply_0 = function apply_1603(arg0){
  return $lambda$280(this.$$outer_0, this.initialRequestAndRaw_1, arg0);
}
;
function UserContext$lambda$281$Type($$outer_0, targetUsername_1, requestedKey_2){
  this.$$outer_0 = $$outer_0;
  this.targetUsername_1 = targetUsername_1;
  this.requestedKey_2 = requestedKey_2;
}

defineClass(1955, $wnd.Function, $intern_22, UserContext$lambda$281$Type);
_.apply_0 = function apply_1604(arg0){
  return $lambda$281(this.$$outer_0, this.targetUsername_1, this.requestedKey_2, arg0);
}
;
function UserContext$lambda$282$Type($$outer_0, targetUsername_1, requestedKey_2, sharing_3){
  this.$$outer_0 = $$outer_0;
  this.targetUsername_1 = targetUsername_1;
  this.requestedKey_2 = requestedKey_2;
  this.sharing_3 = sharing_3;
}

defineClass(2160, $wnd.Function, $intern_22, UserContext$lambda$282$Type);
_.apply_0 = function apply_1605(arg0){
  return $lambda$282(this.$$outer_0, this.targetUsername_1, this.requestedKey_2, this.sharing_3, arg0);
}
;
function UserContext$lambda$283$Type(targetUsername_0){
  this.targetUsername_0 = targetUsername_0;
}

defineClass(738, 1, {}, UserContext$lambda$283$Type);
_.test_0 = function test_38(arg0){
  return lambda$283(this.targetUsername_0, arg0);
}
;
var Lpeergos_shared_user_UserContext$lambda$283$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$283$Type', 738);
function UserContext$lambda$284$Type($$outer_0, targetUsername_1, requestedKey_2, sharing_3){
  this.$$outer_0 = $$outer_0;
  this.targetUsername_1 = targetUsername_1;
  this.requestedKey_2 = requestedKey_2;
  this.sharing_3 = sharing_3;
}

defineClass(2161, $wnd.Function, $intern_22, UserContext$lambda$284$Type);
_.apply_0 = function apply_1606(arg0){
  return $lambda$284(this.$$outer_0, this.targetUsername_1, this.requestedKey_2, this.sharing_3, arg0);
}
;
function UserContext$lambda$285$Type($$outer_0, targetUsername_1, targetUser_2, requestedKey_3, targetUserOpt_4){
  this.$$outer_0 = $$outer_0;
  this.targetUsername_1 = targetUsername_1;
  this.targetUser_2 = targetUser_2;
  this.requestedKey_3 = requestedKey_3;
  this.targetUserOpt_4 = targetUserOpt_4;
}

defineClass(2162, $wnd.Function, $intern_22, UserContext$lambda$285$Type);
_.apply_0 = function apply_1607(arg0){
  return $lambda$285(this.$$outer_0, this.targetUsername_1, this.targetUser_2, this.requestedKey_3, this.targetUserOpt_4, arg0);
}
;
function UserContext$lambda$286$Type($$outer_0, targetUsername_1, targetSigner_2, targetUser_3, followReq_4){
  this.$$outer_0 = $$outer_0;
  this.targetUsername_1 = targetUsername_1;
  this.targetSigner_2 = targetSigner_2;
  this.targetUser_3 = targetUser_3;
  this.followReq_4 = followReq_4;
}

defineClass(2163, $wnd.Function, $intern_22, UserContext$lambda$286$Type);
_.apply_0 = function apply_1608(arg0){
  return $lambda$286(this.$$outer_0, this.targetUsername_1, this.targetSigner_2, this.targetUser_3, this.followReq_4, arg0);
}
;
function UserContext$lambda$287$Type($$outer_0, pending_1, targetUsername_2){
  this.$$outer_0 = $$outer_0;
  this.pending_1 = pending_1;
  this.targetUsername_2 = targetUsername_2;
}

defineClass(2164, $wnd.Function, $intern_22, UserContext$lambda$287$Type);
_.apply_0 = function apply_1609(arg0){
  return $lambda$287(this.$$outer_0, this.pending_1, this.targetUsername_2, arg0);
}
;
function UserContext$lambda$288$Type($$outer_0, raw_1){
  this.$$outer_0 = $$outer_0;
  this.raw_1 = raw_1;
}

defineClass(2165, $wnd.Function, $intern_22, UserContext$lambda$288$Type);
_.apply_0 = function apply_1610(arg0){
  return $lambda$288(this.$$outer_0, this.raw_1, arg0);
}
;
function UserContext$lambda$289$Type(){
}

defineClass(2167, $wnd.Function, {}, UserContext$lambda$289$Type);
_.accept_5 = function accept_135(arg0){
  $clinit_UserContext();
}
;
function UserContext$lambda$29$Type(username_0, signer_1, boxer_2, login_3, network_4, tofuCorenode_5, crypto_6, pair_7, userData_8, root_9, transactions_10, capCache_11, mirrorBatId_12, progressCallback_13){
  this.username_0 = username_0;
  this.signer_1 = signer_1;
  this.boxer_2 = boxer_2;
  this.login_3 = login_3;
  this.network_4 = network_4;
  this.tofuCorenode_5 = tofuCorenode_5;
  this.crypto_6 = crypto_6;
  this.pair_7 = pair_7;
  this.userData_8 = userData_8;
  this.root_9 = root_9;
  this.transactions_10 = transactions_10;
  this.capCache_11 = capCache_11;
  this.mirrorBatId_12 = mirrorBatId_12;
  this.progressCallback_13 = progressCallback_13;
}

defineClass(2021, $wnd.Function, $intern_22, UserContext$lambda$29$Type);
_.apply_0 = function apply_1611(arg0){
  return lambda$29_1(this.username_0, this.signer_1, this.boxer_2, this.login_3, this.network_4, this.tofuCorenode_5, this.crypto_6, this.pair_7, this.userData_8, this.root_9, this.transactions_10, this.capCache_11, this.mirrorBatId_12, this.progressCallback_13, arg0);
}
;
function UserContext$lambda$290$Type(b_0){
  this.b_0 = b_0;
}

defineClass(2166, $wnd.Function, $intern_22, UserContext$lambda$290$Type);
_.apply_0 = function apply_1612(arg0){
  return $clinit_UserContext() , this.b_0;
}
;
function UserContext$lambda$291$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1956, $wnd.Function, $intern_22, UserContext$lambda$291$Type);
_.apply_0 = function apply_1613(arg0){
  return $lambda$291(this.$$outer_0, arg0);
}
;
function UserContext$lambda$292$Type(){
}

defineClass(1288, $wnd.Function, $intern_22, UserContext$lambda$292$Type);
_.apply_0 = function apply_1614(arg0){
  return $clinit_UserContext() , $clinit_Boolean() , true;
}
;
function UserContext$lambda$293$Type(){
}

defineClass(2280, $wnd.Function, $intern_22, UserContext$lambda$293$Type);
_.apply_0 = function apply_1615(arg0){
  return $clinit_UserContext() , $clinit_Boolean() , true;
}
;
function UserContext$lambda$294$Type($$outer_0, rotateSigners_1, owner_2, parentCap_3, parent_4, file_5, c_6, originalCap_7){
  this.$$outer_0 = $$outer_0;
  this.rotateSigners_1 = rotateSigners_1;
  this.owner_2 = owner_2;
  this.parentCap_3 = parentCap_3;
  this.parent_4 = parent_4;
  this.file_5 = file_5;
  this.c_6 = c_6;
  this.originalCap_7 = originalCap_7;
}

defineClass(1957, $wnd.Function, $intern_22, UserContext$lambda$294$Type);
_.apply_0 = function apply_1616(arg0){
  return $lambda$294(this.$$outer_0, this.rotateSigners_1, this.owner_2, this.parentCap_3, this.parent_4, this.file_5, this.c_6, this.originalCap_7, arg0);
}
;
_.rotateSigners_1 = false;
function UserContext$lambda$295$Type($$outer_0, rotateSigners_1, newParentLink_2, owner_3, parentCap_4, parent_5, file_6, c_7){
  this.$$outer_0 = $$outer_0;
  this.rotateSigners_1 = rotateSigners_1;
  this.newParentLink_2 = newParentLink_2;
  this.owner_3 = owner_3;
  this.parentCap_4 = parentCap_4;
  this.parent_5 = parent_5;
  this.file_6 = file_6;
  this.c_7 = c_7;
}

defineClass(2170, $wnd.Function, $intern_22, UserContext$lambda$295$Type);
_.apply_0 = function apply_1617(arg0){
  return $lambda$295(this.$$outer_0, this.rotateSigners_1, this.newParentLink_2, this.owner_3, this.parentCap_4, this.parent_5, this.file_6, this.c_7, arg0);
}
;
_.rotateSigners_1 = false;
function UserContext$lambda$296$Type(linkCap_0){
  this.linkCap_0 = linkCap_0;
}

defineClass(2171, $wnd.Function, $intern_22, UserContext$lambda$296$Type);
_.apply_0 = function apply_1618(arg0){
  return lambda$296(this.linkCap_0, arg0);
}
;
function UserContext$lambda$297$Type($$outer_0, file_1, c_2, owner_3, rotateSigners_4, parentSigner_5, parent_6, parentCap_7, originalCap_8){
  this.$$outer_0 = $$outer_0;
  this.file_1 = file_1;
  this.c_2 = c_2;
  this.owner_3 = owner_3;
  this.rotateSigners_4 = rotateSigners_4;
  this.parentSigner_5 = parentSigner_5;
  this.parent_6 = parent_6;
  this.parentCap_7 = parentCap_7;
  this.originalCap_8 = originalCap_8;
}

defineClass(1958, $wnd.Function, $intern_22, UserContext$lambda$297$Type);
_.apply_0 = function apply_1619(arg0){
  return $lambda$297(this.$$outer_0, this.file_1, this.c_2, this.owner_3, this.rotateSigners_4, this.parentSigner_5, this.parent_6, this.parentCap_7, this.originalCap_8, arg0);
}
;
_.rotateSigners_4 = false;
function UserContext$lambda$298$Type($$outer_0, file_1, c_2, owner_3){
  this.$$outer_0 = $$outer_0;
  this.file_1 = file_1;
  this.c_2 = c_2;
  this.owner_3 = owner_3;
}

defineClass(2172, $wnd.Function, $intern_22, UserContext$lambda$298$Type);
_.apply_0 = function apply_1620(arg0){
  return $lambda$298(this.$$outer_0, this.file_1, this.c_2, this.owner_3, arg0);
}
;
function UserContext$lambda$299$Type($$outer_0, file_1, s_2, c_3){
  this.$$outer_0 = $$outer_0;
  this.file_1 = file_1;
  this.s_2 = s_2;
  this.c_3 = c_3;
}

defineClass(2174, $wnd.Function, $intern_22, UserContext$lambda$299$Type);
_.apply_0 = function apply_1621(arg0){
  return $lambda$299(this.$$outer_0, this.file_1, this.s_2, this.c_3, arg0);
}
;
function UserContext$lambda$3$Type(network_0, crypto_1){
  this.network_0 = network_0;
  this.crypto_1 = crypto_1;
}

defineClass(2015, $wnd.Function, $intern_22, UserContext$lambda$3$Type);
_.apply_0 = function apply_1622(arg0){
  return $clinit_UserContext() , new TransactionServiceImpl(this.network_0, this.crypto_1, castTo(arg0, 19));
}
;
function UserContext$lambda$300$Type($$outer_0, rotateSigners_1, owner_2, parentSigner_3, file_4, c_5){
  this.$$outer_0 = $$outer_0;
  this.rotateSigners_1 = rotateSigners_1;
  this.owner_2 = owner_2;
  this.parentSigner_3 = parentSigner_3;
  this.file_4 = file_4;
  this.c_5 = c_5;
}

defineClass(2173, $wnd.Function, $intern_22, UserContext$lambda$300$Type);
_.apply_0 = function apply_1623(arg0){
  return $lambda$300(this.$$outer_0, this.rotateSigners_1, this.owner_2, this.parentSigner_3, this.file_4, this.c_5, arg0);
}
;
_.rotateSigners_1 = false;
function UserContext$lambda$301$Type(){
}

defineClass(739, 1, {}, UserContext$lambda$301$Type);
_.test_0 = function test_39(arg0){
  return $clinit_UserContext() , $startsWith(castToString(arg0), '.');
}
;
var Lpeergos_shared_user_UserContext$lambda$301$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$301$Type', 739);
function UserContext$lambda$302$Type($$outer_0, initialReadersToRemove_1, path_2){
  this.$$outer_0 = $$outer_0;
  this.initialReadersToRemove_1 = initialReadersToRemove_1;
  this.path_2 = path_2;
}

defineClass(1959, $wnd.Function, $intern_22, UserContext$lambda$302$Type);
_.apply_0 = function apply_1624(arg0){
  return $lambda$302(this.$$outer_0, this.initialReadersToRemove_1, this.path_2, arg0);
}
;
function UserContext$lambda$303$Type(social_1, initialReadersToRemove_2){
  this.social_1 = social_1;
  this.initialReadersToRemove_2 = initialReadersToRemove_2;
}

defineClass(2175, $wnd.Function, $intern_22, UserContext$lambda$303$Type);
_.apply_0 = function apply_1625(arg0){
  return $lambda$303(this.social_1, this.initialReadersToRemove_2, arg0);
}
;
function UserContext$lambda$304$Type($$outer_0, path_1){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
}

defineClass(1960, $wnd.Function, $intern_22, UserContext$lambda$304$Type);
_.apply_0 = function apply_1626(arg0){
  return $lambda$304(this.$$outer_0, this.path_1, arg0);
}
;
function UserContext$lambda$305$Type($$outer_0, path_1, users_2){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.users_2 = users_2;
}

defineClass(2176, $wnd.Function, $intern_22, UserContext$lambda$305$Type);
_.apply_0 = function apply_1627(arg0){
  return $lambda$305(this.$$outer_0, this.path_1, this.users_2, arg0);
}
;
function UserContext$lambda$306$Type($$outer_0, path_1, users_2){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.users_2 = users_2;
}

defineClass(740, 1, {}, UserContext$lambda$306$Type);
_.apply_3 = function apply_1628(arg0, arg1){
  return $unShareReadAccessWith_0(this.$$outer_0, this.path_1, this.users_2, arg0, arg1);
}
;
var Lpeergos_shared_user_UserContext$lambda$306$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$306$Type', 740);
function UserContext$lambda$307$Type($$outer_0, absolutePathString_1, path_2, c_3, readersToRemove_4, s_5){
  this.$$outer_0 = $$outer_0;
  this.absolutePathString_1 = absolutePathString_1;
  this.path_2 = path_2;
  this.c_3 = c_3;
  this.readersToRemove_4 = readersToRemove_4;
  this.s_5 = s_5;
}

defineClass(1961, $wnd.Function, $intern_22, UserContext$lambda$307$Type);
_.apply_0 = function apply_1629(arg0){
  return $lambda$307(this.$$outer_0, this.absolutePathString_1, this.path_2, this.c_3, this.readersToRemove_4, this.s_5, arg0);
}
;
function UserContext$lambda$308$Type(absolutePathString_0){
  this.absolutePathString_0 = absolutePathString_0;
}

defineClass(741, 1, {}, UserContext$lambda$308$Type);
_.get_0 = function get_121(){
  return $clinit_UserContext() , new IllegalStateException_0('Specified un-shareWith path ' + this.absolutePathString_0 + ' does not exist');
}
;
var Lpeergos_shared_user_UserContext$lambda$308$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$308$Type', 741);
function UserContext$lambda$309$Type($$outer_0, path_1, c_2, readersToRemove_3, toUnshare_4){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.c_2 = c_2;
  this.readersToRemove_3 = readersToRemove_3;
  this.toUnshare_4 = toUnshare_4;
}

defineClass(2177, $wnd.Function, $intern_22, UserContext$lambda$309$Type);
_.apply_0 = function apply_1630(arg0){
  return $lambda$309(this.$$outer_0, this.path_1, this.c_2, this.readersToRemove_3, this.toUnshare_4, arg0);
}
;
function UserContext$lambda$310$Type($$outer_0, path_1, c_2, readersToRemove_3){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.c_2 = c_2;
  this.readersToRemove_3 = readersToRemove_3;
}

defineClass(2178, $wnd.Function, $intern_22, UserContext$lambda$310$Type);
_.apply_0 = function apply_1631(arg0){
  return $lambda$310(this.$$outer_0, this.path_1, this.c_2, this.readersToRemove_3, arg0);
}
;
function UserContext$lambda$311$Type($$outer_0, path_1, c_2){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.c_2 = c_2;
}

defineClass(2179, $wnd.Function, $intern_22, UserContext$lambda$311$Type);
_.apply_0 = function apply_1632(arg0){
  return $lambda$311(this.$$outer_0, this.path_1, this.c_2, arg0);
}
;
function UserContext$lambda$312$Type($$outer_0, path_1, c_2){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.c_2 = c_2;
}

defineClass(2180, $wnd.Function, $intern_22, UserContext$lambda$312$Type);
_.apply_0 = function apply_1633(arg0){
  return $lambda$312(this.$$outer_0, this.path_1, this.c_2, arg0);
}
;
function UserContext$lambda$313$Type(){
}

defineClass(742, 1, {}, UserContext$lambda$313$Type);
_.test_0 = function test_40(arg0){
  return $clinit_UserContext() , $startsWith(castToString(arg0), '.');
}
;
var Lpeergos_shared_user_UserContext$lambda$313$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$313$Type', 742);
function UserContext$lambda$314$Type($$outer_0, initialWritersToRemove_1, path_2){
  this.$$outer_0 = $$outer_0;
  this.initialWritersToRemove_1 = initialWritersToRemove_1;
  this.path_2 = path_2;
}

defineClass(1962, $wnd.Function, $intern_22, UserContext$lambda$314$Type);
_.apply_0 = function apply_1634(arg0){
  return $lambda$314(this.$$outer_0, this.initialWritersToRemove_1, this.path_2, arg0);
}
;
function UserContext$lambda$315$Type(social_1, initialWritersToRemove_2){
  this.social_1 = social_1;
  this.initialWritersToRemove_2 = initialWritersToRemove_2;
}

defineClass(2181, $wnd.Function, $intern_22, UserContext$lambda$315$Type);
_.apply_0 = function apply_1635(arg0){
  return $lambda$315(this.social_1, this.initialWritersToRemove_2, arg0);
}
;
function UserContext$lambda$316$Type($$outer_0, path_1){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
}

defineClass(1963, $wnd.Function, $intern_22, UserContext$lambda$316$Type);
_.apply_0 = function apply_1636(arg0){
  return $lambda$316(this.$$outer_0, this.path_1, arg0);
}
;
function UserContext$lambda$317$Type($$outer_0, absolutePathString_1, path_2, writersToRemove_3){
  this.$$outer_0 = $$outer_0;
  this.absolutePathString_1 = absolutePathString_1;
  this.path_2 = path_2;
  this.writersToRemove_3 = writersToRemove_3;
}

defineClass(2182, $wnd.Function, $intern_22, UserContext$lambda$317$Type);
_.apply_0 = function apply_1637(arg0){
  return $lambda$317(this.$$outer_0, this.absolutePathString_1, this.path_2, this.writersToRemove_3, arg0);
}
;
function UserContext$lambda$318$Type(absolutePathString_0){
  this.absolutePathString_0 = absolutePathString_0;
}

defineClass(743, 1, {}, UserContext$lambda$318$Type);
_.get_0 = function get_122(){
  return $clinit_UserContext() , new IllegalStateException_0('Specified un-shareWith path ' + this.absolutePathString_0 + ' does not exist');
}
;
var Lpeergos_shared_user_UserContext$lambda$318$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$318$Type', 743);
function UserContext$lambda$319$Type($$outer_0, path_1, writersToRemove_2, toUnshare_3){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.writersToRemove_2 = writersToRemove_2;
  this.toUnshare_3 = toUnshare_3;
}

defineClass(2183, $wnd.Function, $intern_22, UserContext$lambda$319$Type);
_.apply_0 = function apply_1638(arg0){
  return $lambda$319(this.$$outer_0, this.path_1, this.writersToRemove_2, this.toUnshare_3, arg0);
}
;
function UserContext$lambda$320$Type($$outer_0, path_1, writersToRemove_2, toUnshare_3, parent_4){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.writersToRemove_2 = writersToRemove_2;
  this.toUnshare_3 = toUnshare_3;
  this.parent_4 = parent_4;
}

defineClass(744, 1, {}, UserContext$lambda$320$Type);
_.apply_3 = function apply_1639(arg0, arg1){
  return $lambda$320(this.$$outer_0, this.path_1, this.writersToRemove_2, this.toUnshare_3, this.parent_4, arg0, arg1);
}
;
var Lpeergos_shared_user_UserContext$lambda$320$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$320$Type', 744);
function UserContext$lambda$321$Type($$outer_0, path_1, writersToRemove_2, c_3){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.writersToRemove_2 = writersToRemove_2;
  this.c_3 = c_3;
}

defineClass(2184, $wnd.Function, $intern_22, UserContext$lambda$321$Type);
_.apply_0 = function apply_1640(arg0){
  return $lambda$321(this.$$outer_0, this.path_1, this.writersToRemove_2, this.c_3, arg0);
}
;
function UserContext$lambda$322$Type($$outer_0, path_1, c_2){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.c_2 = c_2;
}

defineClass(2185, $wnd.Function, $intern_22, UserContext$lambda$322$Type);
_.apply_0 = function apply_1641(arg0){
  return $lambda$322(this.$$outer_0, this.path_1, this.c_2, arg0);
}
;
function UserContext$lambda$323$Type($$outer_0, path_1, c_2){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.c_2 = c_2;
}

defineClass(2186, $wnd.Function, $intern_22, UserContext$lambda$323$Type);
_.apply_0 = function apply_1642(arg0){
  return $lambda$323(this.$$outer_0, this.path_1, this.c_2, arg0);
}
;
function UserContext$lambda$324$Type($$outer_0, p_1){
  this.$$outer_0 = $$outer_0;
  this.p_1 = p_1;
}

defineClass(540, $wnd.Function, $intern_22, UserContext$lambda$324$Type);
_.apply_0 = function apply_1643(arg0){
  return $lambda$324(this.$$outer_0, this.p_1, arg0);
}
;
function UserContext$lambda$325$Type($$outer_0, dir_1){
  this.$$outer_0 = $$outer_0;
  this.dir_1 = dir_1;
}

defineClass(1964, $wnd.Function, $intern_22, UserContext$lambda$325$Type);
_.apply_0 = function apply_1644(arg0){
  return $lambda$325(this.$$outer_0, this.dir_1, arg0);
}
;
function UserContext$lambda$326$Type(){
}

defineClass(1965, $wnd.Function, $intern_22, UserContext$lambda$326$Type);
_.apply_0 = function apply_1645(arg0){
  return $clinit_UserContext() , castToString(castTo(arg0, 347).groupNameToUid.get('friends'));
}
;
function UserContext$lambda$327$Type($$outer_0, path_1){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
}

defineClass(1966, $wnd.Function, $intern_22, UserContext$lambda$327$Type);
_.apply_0 = function apply_1646(arg0){
  return $lambda$327(this.$$outer_0, this.path_1, arg0);
}
;
function UserContext$lambda$328$Type($$outer_0, path_1, friendsGroupUid_2){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.friendsGroupUid_2 = friendsGroupUid_2;
}

defineClass(2187, $wnd.Function, $intern_22, UserContext$lambda$328$Type);
_.apply_0 = function apply_1647(arg0){
  return $lambda$328(this.$$outer_0, this.path_1, this.friendsGroupUid_2, arg0);
}
;
function UserContext$lambda$329$Type($$outer_0, path_1, file_2, friendsGroupUid_3){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.file_2 = file_2;
  this.friendsGroupUid_3 = friendsGroupUid_3;
}

defineClass(2188, $wnd.Function, $intern_22, UserContext$lambda$329$Type);
_.apply_0 = function apply_1648(arg0){
  return $lambda$329(this.$$outer_0, this.path_1, this.file_2, this.friendsGroupUid_3, arg0);
}
;
function UserContext$lambda$330$Type($$outer_0, path_1, file_2, friendsGroupUid_3){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.file_2 = file_2;
  this.friendsGroupUid_3 = friendsGroupUid_3;
}

defineClass(746, 1, {}, UserContext$lambda$330$Type);
_.apply_3 = function apply_1649(arg0, arg1){
  return $lambda$330(this.$$outer_0, this.path_1, this.file_2, this.friendsGroupUid_3, arg0, arg1);
}
;
var Lpeergos_shared_user_UserContext$lambda$330$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$330$Type', 746);
function UserContext$lambda$331$Type(path_0){
  this.path_0 = path_0;
}

defineClass(745, 1, {}, UserContext$lambda$331$Type);
_.get_0 = function get_123(){
  return $clinit_UserContext() , new IllegalStateException_0('Could not find path ' + this.path_0);
}
;
var Lpeergos_shared_user_UserContext$lambda$331$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$331$Type', 745);
function UserContext$lambda$332$Type(){
}

defineClass(1967, $wnd.Function, $intern_22, UserContext$lambda$332$Type);
_.apply_0 = function apply_1650(arg0){
  return $clinit_UserContext() , castToString(castTo(arg0, 347).groupNameToUid.get('followers'));
}
;
function UserContext$lambda$333$Type($$outer_0, path_1){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
}

defineClass(1968, $wnd.Function, $intern_22, UserContext$lambda$333$Type);
_.apply_0 = function apply_1651(arg0){
  return $lambda$333(this.$$outer_0, this.path_1, arg0);
}
;
function UserContext$lambda$334$Type($$outer_0, path_1, followersGroupUid_2){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.followersGroupUid_2 = followersGroupUid_2;
}

defineClass(2189, $wnd.Function, $intern_22, UserContext$lambda$334$Type);
_.apply_0 = function apply_1652(arg0){
  return $lambda$334(this.$$outer_0, this.path_1, this.followersGroupUid_2, arg0);
}
;
function UserContext$lambda$335$Type($$outer_0, path_1, file_2, followersGroupUid_3){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.file_2 = file_2;
  this.followersGroupUid_3 = followersGroupUid_3;
}

defineClass(2190, $wnd.Function, $intern_22, UserContext$lambda$335$Type);
_.apply_0 = function apply_1653(arg0){
  return $lambda$335(this.$$outer_0, this.path_1, this.file_2, this.followersGroupUid_3, arg0);
}
;
function UserContext$lambda$336$Type($$outer_0, path_1, file_2, followersGroupUid_3){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.file_2 = file_2;
  this.followersGroupUid_3 = followersGroupUid_3;
}

defineClass(748, 1, {}, UserContext$lambda$336$Type);
_.apply_3 = function apply_1654(arg0, arg1){
  return $lambda$336(this.$$outer_0, this.path_1, this.file_2, this.followersGroupUid_3, arg0, arg1);
}
;
var Lpeergos_shared_user_UserContext$lambda$336$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$336$Type', 748);
function UserContext$lambda$337$Type(path_0){
  this.path_0 = path_0;
}

defineClass(747, 1, {}, UserContext$lambda$337$Type);
_.get_0 = function get_124(){
  return $clinit_UserContext() , new IllegalStateException_0('Could not find path ' + this.path_0.pathString);
}
;
var Lpeergos_shared_user_UserContext$lambda$337$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$337$Type', 747);
function UserContext$lambda$338$Type($$outer_0, path_1, readersToAdd_2){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.readersToAdd_2 = readersToAdd_2;
}

defineClass(1969, $wnd.Function, $intern_22, UserContext$lambda$338$Type);
_.apply_0 = function apply_1655(arg0){
  return $lambda$338(this.$$outer_0, this.path_1, this.readersToAdd_2, arg0);
}
;
function UserContext$lambda$339$Type($$outer_0, path_1, readersToAdd_2){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.readersToAdd_2 = readersToAdd_2;
}

defineClass(749, 1, {}, UserContext$lambda$339$Type);
_.apply_3 = function apply_1656(arg0, arg1){
  return $shareReadAccessWith_0(this.$$outer_0, this.path_1, this.readersToAdd_2, arg0, arg1);
}
;
var Lpeergos_shared_user_UserContext$lambda$339$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$339$Type', 749);
function UserContext$lambda$34$Type(username_0){
  this.username_0 = username_0;
}

defineClass(1911, $wnd.Function, $intern_22, UserContext$lambda$34$Type);
_.apply_0 = function apply_1657(arg0){
  return $clinit_UserContext() , new UserContext$lambda$35$Type(this.username_0, castToFunction(arg0));
}
;
function UserContext$lambda$340$Type($$outer_0, path_1, readersToAdd_2, s_3, c_4){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
  this.readersToAdd_2 = readersToAdd_2;
  this.s_3 = s_3;
  this.c_4 = c_4;
}

defineClass(1970, $wnd.Function, $intern_22, UserContext$lambda$340$Type);
_.apply_0 = function apply_1658(arg0){
  return $lambda$340(this.$$outer_0, this.path_1, this.readersToAdd_2, this.s_3, this.c_4, arg0);
}
;
function UserContext$lambda$341$Type(path_0){
  this.path_0 = path_0;
}

defineClass(750, 1, {}, UserContext$lambda$341$Type);
_.get_0 = function get_125(){
  return $clinit_UserContext() , new IllegalStateException_0('Could not find path ' + this.path_0);
}
;
var Lpeergos_shared_user_UserContext$lambda$341$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$341$Type', 750);
function UserContext$lambda$342$Type($$outer_0, c_1, in_2){
  this.$$outer_0 = $$outer_0;
  this.c_1 = c_1;
  this.in_2 = in_2;
}

defineClass(1200, $wnd.Function, $intern_22, UserContext$lambda$342$Type);
_.apply_0 = function apply_1659(arg0){
  return $lambda$342(this.$$outer_0, this.c_1, this.in_2, arg0);
}
;
function UserContext$lambda$343$Type($$outer_0, c_1){
  this.$$outer_0 = $$outer_0;
  this.c_1 = c_1;
}

defineClass(751, 1, $intern_34, UserContext$lambda$343$Type);
_.apply_1 = function apply_1660(arg0, arg1){
  return $lambda$343(this.$$outer_0, this.c_1, arg0, arg1);
}
;
var Lpeergos_shared_user_UserContext$lambda$343$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$343$Type', 751);
function UserContext$lambda$344$Type(){
}

defineClass(752, 1, $intern_34, UserContext$lambda$344$Type);
_.apply_1 = function apply_1661(arg0, arg1){
  return $clinit_UserContext() , castTo(arg1, 43);
}
;
var Lpeergos_shared_user_UserContext$lambda$344$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$344$Type', 752);
function UserContext$lambda$345$Type($$outer_0, c_1, in_2){
  this.$$outer_0 = $$outer_0;
  this.c_1 = c_1;
  this.in_2 = in_2;
}

defineClass(1202, $wnd.Function, $intern_22, UserContext$lambda$345$Type);
_.apply_0 = function apply_1662(arg0){
  return $lambda$345(this.$$outer_0, this.c_1, this.in_2, arg0);
}
;
function UserContext$lambda$346$Type($$outer_0, c_1){
  this.$$outer_0 = $$outer_0;
  this.c_1 = c_1;
}

defineClass(753, 1, $intern_34, UserContext$lambda$346$Type);
_.apply_1 = function apply_1663(arg0, arg1){
  return $lambda$346(this.$$outer_0, this.c_1, arg0, arg1);
}
;
var Lpeergos_shared_user_UserContext$lambda$346$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$346$Type', 753);
function UserContext$lambda$347$Type(){
}

defineClass(754, 1, $intern_34, UserContext$lambda$347$Type);
_.apply_1 = function apply_1664(arg0, arg1){
  return $clinit_UserContext() , castTo(arg1, 43);
}
;
var Lpeergos_shared_user_UserContext$lambda$347$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$347$Type', 754);
function UserContext$lambda$348$Type($$outer_0, c_1){
  this.$$outer_0 = $$outer_0;
  this.c_1 = c_1;
}

defineClass(755, 1, $intern_34, UserContext$lambda$348$Type);
_.apply_1 = function apply_1665(arg0, arg1){
  return $lambda$348(this.$$outer_0, this.c_1, arg0, arg1);
}
;
var Lpeergos_shared_user_UserContext$lambda$348$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$348$Type', 755);
function UserContext$lambda$349$Type($$outer_0, file_1, sharingFunction_2){
  this.$$outer_0 = $$outer_0;
  this.file_1 = file_1;
  this.sharingFunction_2 = sharingFunction_2;
}

defineClass(756, 1, $intern_34, UserContext$lambda$349$Type);
_.apply_1 = function apply_1666(arg0, arg1){
  return $lambda$349(this.$$outer_0, this.file_1, this.sharingFunction_2, arg0, arg1);
}
;
var Lpeergos_shared_user_UserContext$lambda$349$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$349$Type', 756);
function UserContext$lambda$35$Type(username_0, f_1){
  this.username_0 = username_0;
  this.f_1 = f_1;
}

defineClass(709, 1, $intern_34, UserContext$lambda$35$Type);
_.apply_1 = function apply_1667(arg0, arg1){
  return lambda$35_3(this.username_0, this.f_1, arg0, arg1);
}
;
var Lpeergos_shared_user_UserContext$lambda$35$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$35$Type', 709);
function UserContext$lambda$350$Type(){
}

defineClass(757, 1, $intern_34, UserContext$lambda$350$Type);
_.apply_1 = function apply_1668(arg0, arg1){
  return $clinit_UserContext() , $mergeAndOverwriteWith(castTo(arg0, 43), castTo(arg1, 43));
}
;
var Lpeergos_shared_user_UserContext$lambda$350$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$350$Type', 757);
function UserContext$lambda$351$Type($$outer_0, p_2, readersToAdd_3, c_4){
  this.$$outer_0 = $$outer_0;
  this.p_2 = p_2;
  this.readersToAdd_3 = readersToAdd_3;
  this.c_4 = c_4;
}

defineClass(1971, $wnd.Function, $intern_22, UserContext$lambda$351$Type);
_.apply_0 = function apply_1669(arg0){
  return $lambda$351(this.$$outer_0, this.p_2, this.readersToAdd_3, this.c_4, arg0);
}
;
function UserContext$lambda$352$Type($$outer_0, fileToShare_1, writersToAdd_2){
  this.$$outer_0 = $$outer_0;
  this.fileToShare_1 = fileToShare_1;
  this.writersToAdd_2 = writersToAdd_2;
}

defineClass(1972, $wnd.Function, $intern_22, UserContext$lambda$352$Type);
_.apply_0 = function apply_1670(arg0){
  return $lambda$352(this.$$outer_0, this.fileToShare_1, this.writersToAdd_2, arg0);
}
;
function UserContext$lambda$353$Type($$outer_0, fileToShare_1, parentOpt_2, writersToAdd_3){
  this.$$outer_0 = $$outer_0;
  this.fileToShare_1 = fileToShare_1;
  this.parentOpt_2 = parentOpt_2;
  this.writersToAdd_3 = writersToAdd_3;
}

defineClass(2191, $wnd.Function, $intern_22, UserContext$lambda$353$Type);
_.apply_0 = function apply_1671(arg0){
  return $lambda$353(this.$$outer_0, this.fileToShare_1, this.parentOpt_2, this.writersToAdd_3, arg0);
}
;
function UserContext$lambda$354$Type($$outer_0, pathToFile_1, writersToAdd_2){
  this.$$outer_0 = $$outer_0;
  this.pathToFile_1 = pathToFile_1;
  this.writersToAdd_2 = writersToAdd_2;
}

defineClass(758, 1, {}, UserContext$lambda$354$Type);
_.apply_3 = function apply_1672(arg0, arg1){
  return $lambda$354(this.$$outer_0, this.pathToFile_1, this.writersToAdd_2, arg0, arg1);
}
;
var Lpeergos_shared_user_UserContext$lambda$354$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$354$Type', 758);
function UserContext$lambda$355$Type($$outer_0, pathToFile_1, writersToAdd_2, c_3){
  this.$$outer_0 = $$outer_0;
  this.pathToFile_1 = pathToFile_1;
  this.writersToAdd_2 = writersToAdd_2;
  this.c_3 = c_3;
}

defineClass(2192, $wnd.Function, $intern_22, UserContext$lambda$355$Type);
_.apply_0 = function apply_1673(arg0){
  return $lambda$355(this.$$outer_0, this.pathToFile_1, this.writersToAdd_2, this.c_3, arg0);
}
;
function UserContext$lambda$356$Type($$outer_0, pathToFile_1, writersToAdd_2, file_3, parent_4){
  this.$$outer_0 = $$outer_0;
  this.pathToFile_1 = pathToFile_1;
  this.writersToAdd_2 = writersToAdd_2;
  this.file_3 = file_3;
  this.parent_4 = parent_4;
}

defineClass(759, 1, {}, UserContext$lambda$356$Type);
_.apply_3 = function apply_1674(arg0, arg1){
  return $lambda$356(this.$$outer_0, this.pathToFile_1, this.writersToAdd_2, this.file_3, this.parent_4, arg0, arg1);
}
;
var Lpeergos_shared_user_UserContext$lambda$356$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$356$Type', 759);
function UserContext$lambda$357$Type($$outer_0, pathToFile_1, writersToAdd_2, c_3){
  this.$$outer_0 = $$outer_0;
  this.pathToFile_1 = pathToFile_1;
  this.writersToAdd_2 = writersToAdd_2;
  this.c_3 = c_3;
}

defineClass(2193, $wnd.Function, $intern_22, UserContext$lambda$357$Type);
_.apply_0 = function apply_1675(arg0){
  return $lambda$357(this.$$outer_0, this.pathToFile_1, this.writersToAdd_2, this.c_3, arg0);
}
;
function UserContext$lambda$358$Type($$outer_0, pathToFile_1, writersToAdd_2, s2_3, c_4){
  this.$$outer_0 = $$outer_0;
  this.pathToFile_1 = pathToFile_1;
  this.writersToAdd_2 = writersToAdd_2;
  this.s2_3 = s2_3;
  this.c_4 = c_4;
}

defineClass(2194, $wnd.Function, $intern_22, UserContext$lambda$358$Type);
_.apply_0 = function apply_1676(arg0){
  return $lambda$358(this.$$outer_0, this.pathToFile_1, this.writersToAdd_2, this.s2_3, this.c_4);
}
;
function UserContext$lambda$359$Type($$outer_0, pathToFile_1, c_2){
  this.$$outer_0 = $$outer_0;
  this.pathToFile_1 = pathToFile_1;
  this.c_2 = c_2;
}

defineClass(2195, $wnd.Function, $intern_22, UserContext$lambda$359$Type);
_.apply_0 = function apply_1677(arg0){
  return $lambda$359(this.$$outer_0, this.pathToFile_1, this.c_2, arg0);
}
;
function UserContext$lambda$36$Type(username_0, i_1){
  this.username_0 = username_0;
  this.i_1 = i_1;
}

defineClass(2024, $wnd.Function, $intern_22, UserContext$lambda$36$Type);
_.apply_0 = function apply_1678(arg0){
  return $clinit_UserContext() , signSpaceRequest(this.username_0, this.i_1, castTo(arg0, 69).value_0);
}
;
function UserContext$lambda$360$Type($$outer_0, pathToFile_1, c_2){
  this.$$outer_0 = $$outer_0;
  this.pathToFile_1 = pathToFile_1;
  this.c_2 = c_2;
}

defineClass(2196, $wnd.Function, $intern_22, UserContext$lambda$360$Type);
_.apply_0 = function apply_1679(arg0){
  return $lambda$360(this.$$outer_0, this.pathToFile_1, this.c_2, arg0);
}
;
function UserContext$lambda$361$Type($$outer_0, toFile_1, writersToAdd_2, s_3, c_4){
  this.$$outer_0 = $$outer_0;
  this.toFile_1 = toFile_1;
  this.writersToAdd_2 = writersToAdd_2;
  this.s_3 = s_3;
  this.c_4 = c_4;
}

defineClass(1973, $wnd.Function, $intern_22, UserContext$lambda$361$Type);
_.apply_0 = function apply_1680(arg0){
  return $lambda$361(this.$$outer_0, this.toFile_1, this.writersToAdd_2, this.s_3, this.c_4, arg0);
}
;
function UserContext$lambda$362$Type($$outer_0, parent_1, toFile_2, writersToAdd_3, s_4, c_5){
  this.$$outer_0 = $$outer_0;
  this.parent_1 = parent_1;
  this.toFile_2 = toFile_2;
  this.writersToAdd_3 = writersToAdd_3;
  this.s_4 = s_4;
  this.c_5 = c_5;
}

defineClass(2197, $wnd.Function, $intern_22, UserContext$lambda$362$Type);
_.apply_0 = function apply_1681(arg0){
  return $lambda$362(this.$$outer_0, this.parent_1, this.toFile_2, this.writersToAdd_3, this.s_4, this.c_5, arg0);
}
;
function UserContext$lambda$363$Type($$outer_0, parent_1, toFile_2, writersToAdd_3, s_4, c_5){
  this.$$outer_0 = $$outer_0;
  this.parent_1 = parent_1;
  this.toFile_2 = toFile_2;
  this.writersToAdd_3 = writersToAdd_3;
  this.s_4 = s_4;
  this.c_5 = c_5;
}

defineClass(2198, $wnd.Function, $intern_22, UserContext$lambda$363$Type);
_.apply_0 = function apply_1682(arg0){
  return $lambda$363(this.$$outer_0, this.parent_1, this.toFile_2, this.writersToAdd_3, this.s_4, this.c_5, arg0);
}
;
function UserContext$lambda$364$Type(toFile_0){
  this.toFile_0 = toFile_0;
}

defineClass(760, 1, {}, UserContext$lambda$364$Type);
_.get_0 = function get_126(){
  return $clinit_UserContext() , errored(new IllegalStateException_0("Couldn't retrieve file at " + this.toFile_0));
}
;
var Lpeergos_shared_user_UserContext$lambda$364$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$364$Type', 760);
function UserContext$lambda$365$Type($$outer_0, file_1, c_2){
  this.$$outer_0 = $$outer_0;
  this.file_1 = file_1;
  this.c_2 = c_2;
}

defineClass(761, 1, $intern_34, UserContext$lambda$365$Type);
_.apply_1 = function apply_1683(arg0, arg1){
  return $lambda$365(this.$$outer_0, this.file_1, this.c_2, arg0);
}
;
var Lpeergos_shared_user_UserContext$lambda$365$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$365$Type', 761);
function UserContext$lambda$366$Type($$outer_0, file_1, sharingFunction_2){
  this.$$outer_0 = $$outer_0;
  this.file_1 = file_1;
  this.sharingFunction_2 = sharingFunction_2;
}

defineClass(762, 1, $intern_34, UserContext$lambda$366$Type);
_.apply_1 = function apply_1684(arg0, arg1){
  return $lambda$366(this.$$outer_0, this.file_1, this.sharingFunction_2, arg0, arg1);
}
;
var Lpeergos_shared_user_UserContext$lambda$366$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$366$Type', 762);
function UserContext$lambda$367$Type(){
}

defineClass(763, 1, $intern_34, UserContext$lambda$367$Type);
_.apply_1 = function apply_1685(arg0, arg1){
  return $clinit_UserContext() , $mergeAndOverwriteWith(castTo(arg0, 43), castTo(arg1, 43));
}
;
var Lpeergos_shared_user_UserContext$lambda$367$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$367$Type', 763);
function UserContext$lambda$368$Type($$outer_0, pathToFile_2, writersToAdd_3, c_4){
  this.$$outer_0 = $$outer_0;
  this.pathToFile_2 = pathToFile_2;
  this.writersToAdd_3 = writersToAdd_3;
  this.c_4 = c_4;
}

defineClass(1974, $wnd.Function, $intern_22, UserContext$lambda$368$Type);
_.apply_0 = function apply_1686(arg0){
  return $lambda$368(this.$$outer_0, this.pathToFile_2, this.writersToAdd_3, this.c_4, arg0);
}
;
function UserContext$lambda$369$Type(usernameToGrantAccess_0, sharingFunction_1, file_2){
  this.usernameToGrantAccess_0 = usernameToGrantAccess_0;
  this.sharingFunction_1 = sharingFunction_1;
  this.file_2 = file_2;
}

defineClass(1289, $wnd.Function, $intern_22, UserContext$lambda$369$Type);
_.apply_0 = function apply_1687(arg0){
  return lambda$369(this.usernameToGrantAccess_0, this.sharingFunction_1, this.file_2, arg0);
}
;
function UserContext$lambda$370$Type(version_0){
  this.version_0 = version_0;
}

defineClass(1975, $wnd.Function, $intern_22, UserContext$lambda$370$Type);
_.apply_0 = function apply_1688(arg0){
  return $clinit_UserContext() , this.version_0;
}
;
function UserContext$lambda$371$Type(rootKey_0, entry_1){
  this.rootKey_0 = rootKey_0;
  this.entry_1 = entry_1;
}

defineClass(1976, $wnd.Function, $intern_22, UserContext$lambda$371$Type);
_.apply_0 = function apply_1689(arg0){
  return lambda$371(this.rootKey_0, this.entry_1, arg0);
}
;
function UserContext$lambda$372$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
  this.filename_1 = '.from-friends.cborstream';
}

defineClass(1977, $wnd.Function, $intern_22, UserContext$lambda$372$Type);
_.apply_0 = function apply_1690(arg0){
  return $lambda$372(this.$$outer_0, this.filename_1, arg0);
}
;
function UserContext$lambda$373$Type($$outer_0, entry_2){
  this.$$outer_0 = $$outer_0;
  this.filename_1 = '.from-friends.cborstream';
  this.entry_2 = entry_2;
}

defineClass(1978, $wnd.Function, $intern_22, UserContext$lambda$373$Type);
_.apply_0 = function apply_1691(arg0){
  return $lambda$373(this.$$outer_0, this.filename_1, this.entry_2, arg0);
}
;
function UserContext$lambda$374$Type(){
}

defineClass(2199, $wnd.Function, $intern_22, UserContext$lambda$374$Type);
_.apply_0 = function apply_1692(arg0){
  return $clinit_UserContext() , valueOf_2(($ensureUnmodified(castTo(arg0, 19)) , castTo(arg0, 19).props).size_0);
}
;
function UserContext$lambda$375$Type(){
}

defineClass(2200, $wnd.Function, $intern_22, UserContext$lambda$375$Type);
_.apply_0 = function apply_1693(arg0){
  return $clinit_UserContext() , castTo(arg0, 19).pointer.capability.rBaseKey;
}
;
function UserContext$lambda$376$Type($$outer_0, filename_1, reader_2, offset_3, data_5, base_6){
  this.$$outer_0 = $$outer_0;
  this.filename_1 = filename_1;
  this.reader_2 = reader_2;
  this.offset_3 = offset_3;
  this.data_5 = data_5;
  this.base_6 = base_6;
}

defineClass(2201, $wnd.Function, $intern_22, UserContext$lambda$376$Type);
_.apply_0 = function apply_1694(arg0){
  return $lambda$376(this.$$outer_0, this.filename_1, this.reader_2, this.offset_3, this.data_5, this.base_6, arg0);
}
;
_.offset_3 = 0;
function UserContext$lambda$377$Type(){
}

defineClass(2202, $wnd.Function, {}, UserContext$lambda$377$Type);
_.accept_5 = function accept_136(arg0){
  $clinit_UserContext();
}
;
function UserContext$lambda$378$Type(){
}

defineClass(445, $wnd.Function, $intern_22, UserContext$lambda$378$Type);
_.apply_0 = function apply_1695(arg0){
  return lambda$378(arg0);
}
;
function UserContext$lambda$381$Type($$outer_0, all_1){
  this.$$outer_0 = $$outer_0;
  this.all_1 = all_1;
}

defineClass(1979, $wnd.Function, $intern_22, UserContext$lambda$381$Type);
_.apply_0 = function apply_1696(arg0){
  return $lambda$381(this.$$outer_0, this.all_1, arg0);
}
;
function UserContext$lambda$382$Type($$outer_0, all_1, sharing_2){
  this.$$outer_0 = $$outer_0;
  this.all_1 = all_1;
  this.sharing_2 = sharing_2;
}

defineClass(2204, $wnd.Function, $intern_22, UserContext$lambda$382$Type);
_.apply_0 = function apply_1697(arg0){
  return $lambda$382(this.$$outer_0, this.all_1, this.sharing_2, arg0);
}
;
function UserContext$lambda$383$Type($$outer_0, all_1, followerRoots_2, sharing_3){
  this.$$outer_0 = $$outer_0;
  this.all_1 = all_1;
  this.followerRoots_2 = followerRoots_2;
  this.sharing_3 = sharing_3;
}

defineClass(2205, $wnd.Function, $intern_22, UserContext$lambda$383$Type);
_.apply_0 = function apply_1698(arg0){
  return $lambda$383(this.$$outer_0, this.all_1, this.followerRoots_2, this.sharing_3, arg0);
}
;
function UserContext$lambda$384$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2206, $wnd.Function, $intern_22, UserContext$lambda$384$Type);
_.apply_0 = function apply_1699(arg0){
  return $lambda$384(this.$$outer_0, arg0);
}
;
function UserContext$lambda$386$Type(pendingOut_0){
  this.pendingOut_0 = pendingOut_0;
}

defineClass(764, 1, {}, UserContext$lambda$386$Type);
_.test_0 = function test_41(arg0){
  return lambda$386(this.pendingOut_0, arg0);
}
;
var Lpeergos_shared_user_UserContext$lambda$386$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$386$Type', 764);
function $apply_10(this$static, arg0, arg1){
  return $lambda$387(this$static.$$outer_0, arg0, arg1);
}

function UserContext$lambda$387$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(765, 1, $intern_34, UserContext$lambda$387$Type);
_.apply_1 = function apply_1700(arg0, arg1){
  return $apply_10(this, arg0, arg1);
}
;
var Lpeergos_shared_user_UserContext$lambda$387$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$387$Type', 765);
function UserContext$lambda$388$Type($$outer_0, freq_1){
  this.$$outer_0 = $$outer_0;
  this.freq_1 = freq_1;
}

defineClass(2209, $wnd.Function, $intern_22, UserContext$lambda$388$Type);
_.apply_0 = function apply_1701(arg0){
  return $removeFromPendingOutgoing(this.$$outer_0, castTo($get_6(this.freq_1.entry), 60).ownerName);
}
;
function UserContext$lambda$389$Type($$outer_0, root_1, freq_2){
  this.$$outer_0 = $$outer_0;
  this.root_1 = root_1;
  this.freq_2 = freq_2;
}

defineClass(2210, $wnd.Function, $intern_22, UserContext$lambda$389$Type);
_.apply_0 = function apply_1702(arg0){
  return $retrieveAndAddEntryPointToTrie(this.$$outer_0, this.root_1, castTo($get_6(this.freq_2.entry), 60));
}
;
function UserContext$lambda$39$Type(){
}

defineClass(710, 1, {}, UserContext$lambda$39$Type);
_.commit_0 = function commit_3(arg0, arg1, arg2){
  return $clinit_UserContext() , new CompletableFuture_0(arg1);
}
;
var Lpeergos_shared_user_UserContext$lambda$39$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$39$Type', 710);
function UserContext$lambda$390$Type($$outer_0, p_1){
  this.$$outer_0 = $$outer_0;
  this.p_1 = p_1;
}

defineClass(2211, $wnd.Function, $intern_22, UserContext$lambda$390$Type);
_.apply_0 = function apply_1703(arg0){
  return $lambda$390(this.$$outer_0, this.p_1, arg0);
}
;
function UserContext$lambda$391$Type(newRoot_0){
  this.newRoot_0 = newRoot_0;
}

defineClass(2213, $wnd.Function, $intern_22, UserContext$lambda$391$Type);
_.apply_0 = function apply_1704(arg0){
  return $clinit_UserContext() , this.newRoot_0;
}
;
function UserContext$lambda$392$Type(root_0){
  this.root_0 = root_0;
}

defineClass(2212, $wnd.Function, $intern_22, UserContext$lambda$392$Type);
_.apply_0 = function apply_1705(arg0){
  return $clinit_UserContext() , this.root_0;
}
;
function UserContext$lambda$393$Type($$outer_0, addToStatic_1, followerRoots_2, sharing_3){
  this.$$outer_0 = $$outer_0;
  this.addToStatic_1 = addToStatic_1;
  this.followerRoots_2 = followerRoots_2;
  this.sharing_3 = sharing_3;
}

defineClass(766, 1, $intern_34, UserContext$lambda$393$Type);
_.apply_1 = function apply_1706(arg0, arg1){
  return $lambda$393(this.$$outer_0, this.addToStatic_1, this.followerRoots_2, this.sharing_3, arg0, arg1);
}
;
var Lpeergos_shared_user_UserContext$lambda$393$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$393$Type', 766);
function UserContext$lambda$395$Type($$outer_0, freq_1){
  this.$$outer_0 = $$outer_0;
  this.freq_1 = freq_1;
}

defineClass(2215, $wnd.Function, $intern_22, UserContext$lambda$395$Type);
_.apply_0 = function apply_1707(arg0){
  return $removeFromPendingOutgoing(this.$$outer_0, castTo($get_6(this.freq_1.entry), 60).ownerName);
}
;
function UserContext$lambda$396$Type(addToStatic_0, trie_1, p_2){
  this.addToStatic_0 = addToStatic_0;
  this.trie_1 = trie_1;
  this.p_2 = p_2;
}

defineClass(2216, $wnd.Function, $intern_22, UserContext$lambda$396$Type);
_.apply_0 = function apply_1708(arg0){
  return $clinit_UserContext() , $apply_10(this.addToStatic_0, this.trie_1, this.p_2);
}
;
function UserContext$lambda$397$Type($$outer_0, theirName_1){
  this.$$outer_0 = $$outer_0;
  this.theirName_1 = theirName_1;
}

defineClass(2217, $wnd.Function, $intern_22, UserContext$lambda$397$Type);
_.apply_0 = function apply_1709(arg0){
  return $lambda$397(this.$$outer_0, this.theirName_1, arg0);
}
;
function UserContext$lambda$398$Type($$outer_0, p_1){
  this.$$outer_0 = $$outer_0;
  this.p_1 = p_1;
}

defineClass(2218, $wnd.Function, $intern_22, UserContext$lambda$398$Type);
_.apply_0 = function apply_1710(arg0){
  return $lambda$398(this.$$outer_0, this.p_1);
}
;
function UserContext$lambda$399$Type(trie_0){
  this.trie_0 = trie_0;
}

defineClass(2219, $wnd.Function, $intern_22, UserContext$lambda$399$Type);
_.apply_0 = function apply_1711(arg0){
  return $clinit_UserContext() , this.trie_0;
}
;
function UserContext$lambda$40$Type(){
}

defineClass(1912, $wnd.Function, $intern_22, UserContext$lambda$40$Type);
_.apply_0 = function apply_1712(arg0){
  return lambda$40_2(arg0);
}
;
function UserContext$lambda$400$Type($$outer_0, theirName_1){
  this.$$outer_0 = $$outer_0;
  this.theirName_1 = theirName_1;
}

defineClass(2220, $wnd.Function, $intern_22, UserContext$lambda$400$Type);
_.apply_0 = function apply_1713(arg0){
  return $lambda$400(this.$$outer_0, this.theirName_1, arg0);
}
;
function UserContext$lambda$401$Type($$outer_0, theirName_1){
  this.$$outer_0 = $$outer_0;
  this.theirName_1 = theirName_1;
}

defineClass(2221, $wnd.Function, $intern_22, UserContext$lambda$401$Type);
_.apply_0 = function apply_1714(arg0){
  return $lambda$401(this.$$outer_0, this.theirName_1);
}
;
function UserContext$lambda$402$Type($$outer_0, theirName_1){
  this.$$outer_0 = $$outer_0;
  this.theirName_1 = theirName_1;
}

defineClass(2224, $wnd.Function, $intern_22, UserContext$lambda$402$Type);
_.apply_0 = function apply_1715(arg0){
  return $lambda$402(this.$$outer_0, this.theirName_1, arg0);
}
;
function UserContext$lambda$403$Type(addToStatic_0, trie_1, p_2, entry_3){
  this.addToStatic_0 = addToStatic_0;
  this.trie_1 = trie_1;
  this.p_2 = p_2;
  this.entry_3 = entry_3;
}

defineClass(2222, $wnd.Function, $intern_22, UserContext$lambda$403$Type);
_.apply_0 = function apply_1716(arg0){
  return lambda$403(this.addToStatic_0, this.trie_1, this.p_2, this.entry_3);
}
;
function UserContext$lambda$404$Type(trie_0){
  this.trie_0 = trie_0;
}

defineClass(2223, $wnd.Function, $intern_22, UserContext$lambda$404$Type);
_.apply_0 = function apply_1717(arg0){
  return $clinit_UserContext() , this.trie_0;
}
;
function UserContext$lambda$405$Type(followerRoots_0){
  this.followerRoots_0 = followerRoots_0;
}

defineClass(767, 1, {}, UserContext$lambda$405$Type);
_.test_0 = function test_42(arg0){
  return $clinit_UserContext() , !this.followerRoots_0.containsKey(castTo($get_6(castTo(arg0, 344).req.entry), 60).ownerName);
}
;
var Lpeergos_shared_user_UserContext$lambda$405$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$405$Type', 767);
function UserContext$lambda$406$Type(){
}

defineClass(768, 1, $intern_34, UserContext$lambda$406$Type);
_.apply_1 = function apply_1718(arg0, arg1){
  return $clinit_UserContext() , castTo(arg0, 110);
}
;
var Lpeergos_shared_user_UserContext$lambda$406$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$406$Type', 768);
function UserContext$lambda$407$Type($$outer_0, initialRequests_1){
  this.$$outer_0 = $$outer_0;
  this.initialRequests_1 = initialRequests_1;
}

defineClass(2207, $wnd.Function, $intern_22, UserContext$lambda$407$Type);
_.apply_0 = function apply_1719(arg0){
  return $lambda$407(this.$$outer_0, this.initialRequests_1, arg0);
}
;
function UserContext$lambda$408$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1980, $wnd.Function, $intern_22, UserContext$lambda$408$Type);
_.apply_0 = function apply_1720(arg0){
  return $lambda$408(this.$$outer_0, arg0);
}
;
function UserContext$lambda$409$Type($$outer_0, s_1){
  this.$$outer_0 = $$outer_0;
  this.s_1 = s_1;
}

defineClass(770, 1, {}, UserContext$lambda$409$Type);
_.get_0 = function get_127(){
  return $lambda$409(this.$$outer_0, this.s_1);
}
;
var Lpeergos_shared_user_UserContext$lambda$409$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$409$Type', 770);
function UserContext$lambda$41$Type(username_0, password_1, crypto_2, algorithm_3){
  this.username_0 = username_0;
  this.password_1 = password_1;
  this.crypto_2 = crypto_2;
  this.algorithm_3 = algorithm_3;
}

defineClass(1913, $wnd.Function, $intern_22, UserContext$lambda$41$Type);
_.apply_0 = function apply_1721(arg0){
  return lambda$41_1(this.username_0, this.password_1, this.crypto_2, this.algorithm_3);
}
;
function UserContext$lambda$410$Type($$outer_0, s_1){
  this.$$outer_0 = $$outer_0;
  this.s_1 = s_1;
}

defineClass(2225, $wnd.Function, $intern_22, UserContext$lambda$410$Type);
_.apply_0 = function apply_1722(arg0){
  return $getByPath_4(this.$$outer_0, this.s_1.path);
}
;
function UserContext$lambda$411$Type($$outer_0, s_1){
  this.$$outer_0 = $$outer_0;
  this.s_1 = s_1;
}

defineClass(2227, $wnd.Function, $intern_22, UserContext$lambda$411$Type);
_.apply_0 = function apply_1723(arg0){
  return $lambda$411(this.$$outer_0, this.s_1, arg0);
}
;
function UserContext$lambda$412$Type(){
}

defineClass(2228, $wnd.Function, $intern_22, UserContext$lambda$412$Type);
_.apply_0 = function apply_1724(arg0){
  return $clinit_UserContext() , new CompletableFuture_0(($clinit_Optional() , new Optional(checkCriticalNotNull(castTo(arg0, 19)))));
}
;
function UserContext$lambda$413$Type($$outer_0, s_1){
  this.$$outer_0 = $$outer_0;
  this.s_1 = s_1;
}

defineClass(769, 1, {}, UserContext$lambda$413$Type);
_.get_0 = function get_128(){
  return $getByPath_4(this.$$outer_0, this.s_1.path);
}
;
var Lpeergos_shared_user_UserContext$lambda$413$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$413$Type', 769);
function UserContext$lambda$414$Type(s_0){
  this.s_0 = s_0;
}

defineClass(2226, $wnd.Function, $intern_22, UserContext$lambda$414$Type);
_.apply_0 = function apply_1725(arg0){
  return lambda$414(this.s_0, arg0);
}
;
function UserContext$lambda$415$Type(s_0){
  this.s_0 = s_0;
}

defineClass(2229, $wnd.Function, $intern_22, UserContext$lambda$415$Type);
_.apply_0 = function apply_1726(arg0){
  return $clinit_UserContext() , new Pair(this.s_0, castTo(arg0, 19));
}
;
function UserContext$lambda$416$Type(){
}

defineClass(1981, $wnd.Function, $intern_22, UserContext$lambda$416$Type);
_.apply_0 = function apply_1727(arg0){
  return $clinit_UserContext() , castTo($collect_0($flatMap_0(castTo(arg0, 17).stream(), makeLambdaFunction(UserContext$29methodref$stream$Type.prototype.apply_0, UserContext$29methodref$stream$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
}
;
function UserContext$lambda$42$Type(username_0, expiry_1, network_2, crypto_3, progressCallback_4, algorithm_5, token_6, addCard_7, opLog_8, initialNetwork_9, existingIdentity_10, tmpIdentityStore_11){
  this.username_0 = username_0;
  this.expiry_1 = expiry_1;
  this.network_2 = network_2;
  this.crypto_3 = crypto_3;
  this.progressCallback_4 = progressCallback_4;
  this.algorithm_5 = algorithm_5;
  this.token_6 = token_6;
  this.addCard_7 = addCard_7;
  this.opLog_8 = opLog_8;
  this.initialNetwork_9 = initialNetwork_9;
  this.existingIdentity_10 = existingIdentity_10;
  this.tmpIdentityStore_11 = tmpIdentityStore_11;
}

defineClass(1914, $wnd.Function, $intern_22, UserContext$lambda$42$Type);
_.apply_0 = function apply_1728(arg0){
  return lambda$42_0(this.username_0, this.expiry_1, this.network_2, this.crypto_3, this.progressCallback_4, this.algorithm_5, this.token_6, this.addCard_7, this.opLog_8, this.initialNetwork_9, this.existingIdentity_10, this.tmpIdentityStore_11, arg0);
}
;
function UserContext$lambda$420$Type($$outer_0, path_1){
  this.$$outer_0 = $$outer_0;
  this.path_1 = path_1;
}

defineClass(1982, $wnd.Function, $intern_22, UserContext$lambda$420$Type);
_.apply_0 = function apply_1729(arg0){
  return $lambda$420(this.$$outer_0, this.path_1, arg0);
}
;
function UserContext$lambda$421$Type(){
}

defineClass(89, $wnd.Function, $intern_22, UserContext$lambda$421$Type);
_.apply_0 = function apply_1730(arg0){
  return $clinit_UserContext() , checkCriticalElement(castTo(arg0, 12).ref != null) , castTo(castTo(arg0, 12).ref, 19);
}
;
function UserContext$lambda$422$Type(ourName_0){
  this.ourName_0 = ourName_0;
}

defineClass(771, 1, {}, UserContext$lambda$422$Type);
_.test_0 = function test_43(arg0){
  return lambda$422(this.ourName_0, arg0);
}
;
var Lpeergos_shared_user_UserContext$lambda$422$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$422$Type', 771);
function UserContext$lambda$423$Type(userData_0){
  this.userData_0 = userData_0;
}

defineClass(1983, $wnd.Function, $intern_22, UserContext$lambda$423$Type);
_.apply_0 = function apply_1731(arg0){
  return lambda$423(this.userData_0, arg0);
}
;
function UserContext$lambda$424$Type(network_0){
  this.network_0 = network_0;
}

defineClass(772, 1, $intern_34, UserContext$lambda$424$Type);
_.apply_1 = function apply_1732(arg0, arg1){
  return lambda$424(this.network_0, arg0, arg1);
}
;
var Lpeergos_shared_user_UserContext$lambda$424$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$424$Type', 772);
function UserContext$lambda$425$Type(){
}

defineClass(773, 1, $intern_34, UserContext$lambda$425$Type);
_.apply_1 = function apply_1733(arg0, arg1){
  return $clinit_UserContext() , castTo(arg0, 110);
}
;
var Lpeergos_shared_user_UserContext$lambda$425$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$425$Type', 773);
function UserContext$lambda$426$Type(t_0){
  this.t_0 = t_0;
}

defineClass(2230, $wnd.Function, $intern_22, UserContext$lambda$426$Type);
_.apply_0 = function apply_1734(arg0){
  return lambda$426(this.t_0, arg0);
}
;
function UserContext$lambda$428$Type($$outer_0, homeDir_1){
  this.$$outer_0 = $$outer_0;
  this.homeDir_1 = homeDir_1;
}

defineClass(774, 1, {}, UserContext$lambda$428$Type);
_.get_0 = function get_129(){
  return $lambda$428(this.$$outer_0, this.homeDir_1);
}
;
var Lpeergos_shared_user_UserContext$lambda$428$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$428$Type', 774);
function UserContext$lambda$429$Type($$outer_0, network_1, crypto_2, homeDir_3, includeUser_4, ourRoot_5){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
  this.crypto_2 = crypto_2;
  this.homeDir_3 = homeDir_3;
  this.includeUser_4 = includeUser_4;
  this.ourRoot_5 = ourRoot_5;
}

defineClass(1985, $wnd.Function, $intern_22, UserContext$lambda$429$Type);
_.apply_0 = function apply_1735(arg0){
  return $lambda$429(this.$$outer_0, this.network_1, this.crypto_2, this.homeDir_3, this.includeUser_4, this.ourRoot_5, arg0);
}
;
function UserContext$lambda$43$Type(crypto_0){
  this.crypto_0 = crypto_0;
}

defineClass(711, 1, {}, UserContext$lambda$43$Type);
_.get_0 = function get_130(){
  return lambda$43_0(this.crypto_0);
}
;
var Lpeergos_shared_user_UserContext$lambda$43$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$43$Type', 711);
function UserContext$lambda$430$Type($$outer_0, friendEntries_3, includeUser_4, ourRoot_5){
  this.$$outer_0 = $$outer_0;
  this.friendEntries_3 = friendEntries_3;
  this.includeUser_4 = includeUser_4;
  this.ourRoot_5 = ourRoot_5;
}

defineClass(2233, $wnd.Function, $intern_22, UserContext$lambda$430$Type);
_.apply_0 = function apply_1736(arg0){
  return $lambda$430(this.$$outer_0, this.friendEntries_3, this.includeUser_4, this.ourRoot_5);
}
;
function UserContext$lambda$431$Type(includeUser_0){
  this.includeUser_0 = includeUser_0;
}

defineClass(775, 1, {}, UserContext$lambda$431$Type);
_.test_0 = function test_44(arg0){
  return $clinit_UserContext() , this.includeUser_0.test_0(castTo(arg0, 60).ownerName);
}
;
var Lpeergos_shared_user_UserContext$lambda$431$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$431$Type', 775);
function UserContext$lambda$432$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2234, $wnd.Function, $intern_22, UserContext$lambda$432$Type);
_.apply_0 = function apply_1737(arg0){
  return $lambda$432(this.$$outer_0, arg0);
}
;
function UserContext$lambda$433$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(776, 1, {}, UserContext$lambda$433$Type);
_.add_1 = function add_22(arg0, arg1, arg2, arg3, arg4){
  return $lambda$433(this.$$outer_0, arg0, arg1, arg2, arg3, arg4);
}
;
var Lpeergos_shared_user_UserContext$lambda$433$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$433$Type', 776);
function UserContext$lambda$434$Type(){
}

defineClass(777, 1, $intern_34, UserContext$lambda$434$Type);
_.apply_1 = function apply_1738(arg0, arg1){
  return $clinit_UserContext() , $exceptionally($thenApply(castTo(arg1, 6), makeLambdaFunction(UserContext$lambda$436$Type.prototype.apply_0, UserContext$lambda$436$Type, [castTo(arg0, 110)])), makeLambdaFunction(UserContext$lambda$438$Type.prototype.apply_0, UserContext$lambda$438$Type, [castTo(arg0, 110)]));
}
;
var Lpeergos_shared_user_UserContext$lambda$434$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$434$Type', 777);
function UserContext$lambda$435$Type(){
}

defineClass(778, 1, $intern_34, UserContext$lambda$435$Type);
_.apply_1 = function apply_1739(arg0, arg1){
  return $clinit_UserContext() , castTo(arg0, 110);
}
;
var Lpeergos_shared_user_UserContext$lambda$435$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$435$Type', 778);
function UserContext$lambda$436$Type(t_0){
  this.t_0 = t_0;
}

defineClass(2287, $wnd.Function, $intern_22, UserContext$lambda$436$Type);
_.apply_0 = function apply_1740(arg0){
  return lambda$436(this.t_0, arg0);
}
;
function UserContext$lambda$437$Type(t_0){
  this.t_0 = t_0;
}

defineClass(2235, $wnd.Function, $intern_22, UserContext$lambda$437$Type);
_.apply_0 = function apply_1741(arg0){
  return lambda$437(this.t_0, arg0);
}
;
function UserContext$lambda$438$Type(t_0){
  this.t_0 = t_0;
}

defineClass(2288, $wnd.Function, $intern_22, UserContext$lambda$438$Type);
_.apply_0 = function apply_1742(arg0){
  return $clinit_UserContext() , this.t_0;
}
;
function UserContext$lambda$439$Type($$outer_0, includeUser_1, homeDir_2, network_3){
  this.$$outer_0 = $$outer_0;
  this.includeUser_1 = includeUser_1;
  this.homeDir_2 = homeDir_2;
  this.network_3 = network_3;
}

defineClass(1986, $wnd.Function, $intern_22, UserContext$lambda$439$Type);
_.apply_0 = function apply_1743(arg0){
  return $lambda$439(this.$$outer_0, this.includeUser_1, this.homeDir_2, this.network_3, arg0);
}
;
function UserContext$lambda$44$Type(identity_0, username_1, expiry_2, network_3, identityHash_4, identityPair_5, userWithRoot_6, crypto_7, progressCallback_8, isLegacy_9, entryData_10, algorithm_11, token_12, addCard_13, opLog_14, initialNetwork_15, loginPublicKey_16, mirror_17){
  this.identity_0 = identity_0;
  this.username_1 = username_1;
  this.expiry_2 = expiry_2;
  this.network_3 = network_3;
  this.identityHash_4 = identityHash_4;
  this.identityPair_5 = identityPair_5;
  this.userWithRoot_6 = userWithRoot_6;
  this.crypto_7 = crypto_7;
  this.progressCallback_8 = progressCallback_8;
  this.isLegacy_9 = isLegacy_9;
  this.entryData_10 = entryData_10;
  this.algorithm_11 = algorithm_11;
  this.token_12 = token_12;
  this.addCard_13 = addCard_13;
  this.opLog_14 = opLog_14;
  this.initialNetwork_15 = initialNetwork_15;
  this.loginPublicKey_16 = loginPublicKey_16;
  this.mirror_17 = mirror_17;
}

defineClass(2025, $wnd.Function, $intern_22, UserContext$lambda$44$Type);
_.apply_0 = function apply_1744(arg0){
  return lambda$44_2(this.identity_0, this.username_1, this.expiry_2, this.network_3, this.identityHash_4, this.identityPair_5, this.userWithRoot_6, this.crypto_7, this.progressCallback_8, this.isLegacy_9, this.entryData_10, this.algorithm_11, this.token_12, this.addCard_13, this.opLog_14, this.initialNetwork_15, this.loginPublicKey_16, this.mirror_17, arg0);
}
;
_.isLegacy_9 = false;
function UserContext$lambda$440$Type(root_0, includeUser_1){
  this.root_0 = root_0;
  this.includeUser_1 = includeUser_1;
}

defineClass(2236, $wnd.Function, $intern_22, UserContext$lambda$440$Type);
_.apply_0 = function apply_1745(arg0){
  return lambda$440(this.root_0, this.includeUser_1, arg0);
}
;
function UserContext$lambda$442$Type($$outer_0, ourRoot_1, ourName_2, network_3, crypto_4){
  this.$$outer_0 = $$outer_0;
  this.ourRoot_1 = ourRoot_1;
  this.ourName_2 = ourName_2;
  this.network_3 = network_3;
  this.crypto_4 = crypto_4;
}

defineClass(1988, $wnd.Function, $intern_22, UserContext$lambda$442$Type);
_.apply_0 = function apply_1746(arg0){
  return $lambda$442(this.$$outer_0, this.ourRoot_1, this.ourName_2, this.network_3, this.crypto_4, arg0);
}
;
function UserContext$lambda$443$Type(ourName_0){
  this.ourName_0 = ourName_0;
}

defineClass(779, 1, {}, UserContext$lambda$443$Type);
_.test_0 = function test_45(arg0){
  return lambda$443(this.ourName_0, arg0);
}
;
var Lpeergos_shared_user_UserContext$lambda$443$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$443$Type', 779);
function UserContext$lambda$445$Type($$outer_0, root_1){
  this.$$outer_0 = $$outer_0;
  this.root_1 = root_1;
}

defineClass(1990, $wnd.Function, $intern_22, UserContext$lambda$445$Type);
_.apply_0 = function apply_1747(arg0){
  return $lambda$445(this.$$outer_0, this.root_1, arg0);
}
;
function UserContext$lambda$446$Type($$outer_0, homeDir_1){
  this.$$outer_0 = $$outer_0;
  this.homeDir_1 = homeDir_1;
}

defineClass(2231, $wnd.Function, $intern_22, UserContext$lambda$446$Type);
_.apply_0 = function apply_1748(arg0){
  return $lambda$446(this.$$outer_0, this.homeDir_1, arg0);
}
;
function UserContext$lambda$447$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2237, $wnd.Function, $intern_22, UserContext$lambda$447$Type);
_.apply_0 = function apply_1749(arg0){
  return $lambda$447(this.$$outer_0, arg0);
}
;
function UserContext$lambda$448$Type(){
}

defineClass(2239, $wnd.Function, {}, UserContext$lambda$448$Type);
_.accept_5 = function accept_137(arg0){
  $clinit_UserContext();
}
;
function UserContext$lambda$449$Type(res_0, f_1){
  this.res_0 = res_0;
  this.f_1 = f_1;
}

defineClass(2240, $wnd.Function, $intern_22, UserContext$lambda$449$Type);
_.apply_0 = function apply_1750(arg0){
  return lambda$449(this.res_0, this.f_1, arg0);
}
;
function UserContext$lambda$45$Type(identity_0, username_1, expiry_2, network_3, identityHash_4, identityPair_5, userWithRoot_6, crypto_7, progressCallback_8, isLegacy_9, entryData_10, algorithm_11, batid_12, token_13, addCard_14, opLog_15, initialNetwork_16, loginPublicKey_17){
  this.identity_0 = identity_0;
  this.username_1 = username_1;
  this.expiry_2 = expiry_2;
  this.network_3 = network_3;
  this.identityHash_4 = identityHash_4;
  this.identityPair_5 = identityPair_5;
  this.userWithRoot_6 = userWithRoot_6;
  this.crypto_7 = crypto_7;
  this.progressCallback_8 = progressCallback_8;
  this.isLegacy_9 = isLegacy_9;
  this.entryData_10 = entryData_10;
  this.algorithm_11 = algorithm_11;
  this.batid_12 = batid_12;
  this.token_13 = token_13;
  this.addCard_14 = addCard_14;
  this.opLog_15 = opLog_15;
  this.initialNetwork_16 = initialNetwork_16;
  this.loginPublicKey_17 = loginPublicKey_17;
}

defineClass(2026, $wnd.Function, $intern_22, UserContext$lambda$45$Type);
_.apply_0 = function apply_1751(arg0){
  return lambda$45_0(this.identity_0, this.username_1, this.expiry_2, this.network_3, this.identityHash_4, this.identityPair_5, this.userWithRoot_6, this.crypto_7, this.progressCallback_8, this.isLegacy_9, this.entryData_10, this.algorithm_11, this.batid_12, this.token_13, this.addCard_14, this.opLog_15, this.initialNetwork_16, this.loginPublicKey_17);
}
;
_.isLegacy_9 = false;
function UserContext$lambda$452$Type(res_0){
  this.res_0 = res_0;
}

defineClass(2242, $wnd.Function, $intern_22, UserContext$lambda$452$Type);
_.apply_0 = function apply_1752(arg0){
  return $clinit_UserContext() , this.res_0;
}
;
function UserContext$lambda$453$Type($$outer_0, homeDir_1){
  this.$$outer_0 = $$outer_0;
  this.homeDir_1 = homeDir_1;
}

defineClass(2238, $wnd.Function, $intern_22, UserContext$lambda$453$Type);
_.apply_0 = function apply_1753(arg0){
  return $lambda$453(this.$$outer_0, this.homeDir_1, arg0);
}
;
function UserContext$lambda$454$Type($$outer_0, fromFriends_1){
  this.$$outer_0 = $$outer_0;
  this.fromFriends_1 = fromFriends_1;
}

defineClass(2243, $wnd.Function, $intern_22, UserContext$lambda$454$Type);
_.apply_0 = function apply_1754(arg0){
  return $lambda$454(this.$$outer_0, this.fromFriends_1, arg0);
}
;
function UserContext$lambda$455$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2244, $wnd.Function, $intern_22, UserContext$lambda$455$Type);
_.apply_0 = function apply_1755(arg0){
  return $lambda$455(this.$$outer_0, arg0);
}
;
function UserContext$lambda$456$Type(){
}

defineClass(2246, $wnd.Function, {}, UserContext$lambda$456$Type);
_.accept_5 = function accept_138(arg0){
  $clinit_UserContext();
}
;
function UserContext$lambda$457$Type(f_0){
  this.f_0 = f_0;
}

defineClass(2247, $wnd.Function, $intern_22, UserContext$lambda$457$Type);
_.apply_0 = function apply_1756(arg0){
  return lambda$457(this.f_0, arg0);
}
;
function UserContext$lambda$458$Type(){
}

defineClass(2248, $wnd.Function, $intern_22, UserContext$lambda$458$Type);
_.apply_0 = function apply_1757(arg0){
  return $clinit_UserContext() , castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new HashSet_1(new Arrays$ArrayList($split($create(castTo(arg0, 11)), '\n'))), 1)), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47);
}
;
function UserContext$lambda$459$Type(fromFriends_0){
  this.fromFriends_0 = fromFriends_0;
}

defineClass(2245, $wnd.Function, $intern_22, UserContext$lambda$459$Type);
_.apply_0 = function apply_1758(arg0){
  return lambda$459(this.fromFriends_0, arg0);
}
;
function UserContext$lambda$46$Type(identity_0, username_1, expiry_2){
  this.identity_0 = identity_0;
  this.username_1 = username_1;
  this.expiry_2 = expiry_2;
}

defineClass(2027, $wnd.Function, $intern_22, UserContext$lambda$46$Type);
_.apply_0 = function apply_1759(arg0){
  return $clinit_UserContext() , createInitial(this.identity_0, this.username_1, this.expiry_2, new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_io_ipfs_Multihash_2_classLit, 1), $intern_0, 58, 0, [castTo(arg0, 44)])));
}
;
function UserContext$lambda$460$Type(toRemove_0){
  this.toRemove_0 = toRemove_0;
}

defineClass(781, 1, {}, UserContext$lambda$460$Type);
_.test_0 = function test_46(arg0){
  return $clinit_UserContext() , !this.toRemove_0.contains(castTo(arg0, 60).ownerName);
}
;
var Lpeergos_shared_user_UserContext$lambda$460$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$460$Type', 781);
function UserContext$lambda$461$Type(){
}

defineClass(2232, $wnd.Function, $intern_22, UserContext$lambda$461$Type);
_.apply_0 = function apply_1760(arg0){
  var latest;
  return $clinit_UserContext() , latest = new LinkedHashMap , arg0.forEach(new UserContext$lambda$462$Type(latest)) , castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new AbstractMap$2(latest), 0)), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
}
;
function UserContext$lambda$462$Type(latest_0){
  this.latest_0 = latest_0;
}

defineClass(782, 1, $intern_32, UserContext$lambda$462$Type);
_.accept = function accept_139(arg0){
  lambda$462(this.latest_0, arg0);
}
;
_.andThen = function andThen_69(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_UserContext$lambda$462$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$462$Type', 782);
function UserContext$lambda$463$Type($$outer_0, s_1, network_2){
  this.$$outer_0 = $$outer_0;
  this.s_1 = s_1;
  this.network_2 = network_2;
}

defineClass(1282, $wnd.Function, $intern_22, UserContext$lambda$463$Type);
_.apply_0 = function apply_1761(arg0){
  return $lambda$463(this.$$outer_0, this.s_1, this.network_2, arg0);
}
;
function UserContext$lambda$464$Type($$outer_0, fopt_1, s_2, network_3){
  this.$$outer_0 = $$outer_0;
  this.fopt_1 = fopt_1;
  this.s_2 = s_2;
  this.network_3 = network_3;
}

defineClass(2249, $wnd.Function, $intern_22, UserContext$lambda$464$Type);
_.apply_0 = function apply_1762(arg0){
  return $lambda$464(this.$$outer_0, this.fopt_1, this.s_2, this.network_3, arg0);
}
;
function UserContext$lambda$465$Type(){
}

defineClass(2250, $wnd.Function, {}, UserContext$lambda$465$Type);
_.accept_5 = function accept_140(arg0){
  $clinit_UserContext();
}
;
function UserContext$lambda$466$Type(f_0){
  this.f_0 = f_0;
}

defineClass(2251, $wnd.Function, $intern_22, UserContext$lambda$466$Type);
_.apply_0 = function apply_1763(arg0){
  return lambda$466(this.f_0, arg0);
}
;
function UserContext$lambda$468$Type(fopt_0){
  this.fopt_0 = fopt_0;
}

defineClass(2252, $wnd.Function, $intern_22, UserContext$lambda$468$Type);
_.apply_0 = function apply_1764(arg0){
  return lambda$468(this.fopt_0, arg0);
}
;
function UserContext$lambda$47$Type(network_0, identityHash_1, identityPair_2, userWithRoot_3, crypto_4, identity_5, progressCallback_6, isLegacy_7, entryData_8, algorithm_9, username_10, batid_11, token_12, addCard_13, opLog_14, initialNetwork_15, loginPublicKey_16){
  this.network_0 = network_0;
  this.identityHash_1 = identityHash_1;
  this.identityPair_2 = identityPair_2;
  this.userWithRoot_3 = userWithRoot_3;
  this.crypto_4 = crypto_4;
  this.identity_5 = identity_5;
  this.progressCallback_6 = progressCallback_6;
  this.isLegacy_7 = isLegacy_7;
  this.entryData_8 = entryData_8;
  this.algorithm_9 = algorithm_9;
  this.username_10 = username_10;
  this.batid_11 = batid_11;
  this.token_12 = token_12;
  this.addCard_13 = addCard_13;
  this.opLog_14 = opLog_14;
  this.initialNetwork_15 = initialNetwork_15;
  this.loginPublicKey_16 = loginPublicKey_16;
}

defineClass(2028, $wnd.Function, $intern_22, UserContext$lambda$47$Type);
_.apply_0 = function apply_1765(arg0){
  return lambda$47_2(this.network_0, this.identityHash_1, this.identityPair_2, this.userWithRoot_3, this.crypto_4, this.identity_5, this.progressCallback_6, this.isLegacy_7, this.entryData_8, this.algorithm_9, this.username_10, this.batid_11, this.token_12, this.addCard_13, this.opLog_14, this.initialNetwork_15, this.loginPublicKey_16, arg0);
}
;
_.isLegacy_7 = false;
function UserContext$lambda$470$Type($$outer_0, group_1, owner_2, network_3, s_4, c_5){
  this.$$outer_0 = $$outer_0;
  this.group_1 = group_1;
  this.owner_2 = owner_2;
  this.network_3 = network_3;
  this.s_4 = s_4;
  this.c_5 = c_5;
}

defineClass(1284, $wnd.Function, $intern_22, UserContext$lambda$470$Type);
_.apply_0 = function apply_1766(arg0){
  return $lambda$470(this.$$outer_0, this.group_1, this.owner_2, this.network_3, this.s_4, this.c_5, arg0);
}
;
function UserContext$lambda$471$Type($$outer_0, group_1, owner_2, network_3, s_4, c_5, home_6){
  this.$$outer_0 = $$outer_0;
  this.group_1 = group_1;
  this.owner_2 = owner_2;
  this.network_3 = network_3;
  this.s_4 = s_4;
  this.c_5 = c_5;
  this.home_6 = home_6;
}

defineClass(2254, $wnd.Function, $intern_22, UserContext$lambda$471$Type);
_.apply_0 = function apply_1767(arg0){
  return $lambda$471(this.$$outer_0, this.group_1, this.owner_2, this.network_3, this.s_4, this.c_5, this.home_6, arg0);
}
;
function UserContext$lambda$472$Type(){
}

defineClass(2255, $wnd.Function, {}, UserContext$lambda$472$Type);
_.accept_5 = function accept_141(arg0){
  $clinit_UserContext();
}
;
function UserContext$lambda$473$Type(){
}

defineClass(2256, $wnd.Function, {}, UserContext$lambda$473$Type);
_.accept_5 = function accept_142(arg0){
  $clinit_UserContext();
}
;
function UserContext$lambda$474$Type(capCache_0, fileCap_1, context_2, network_3, crypto_4, root_5, path_6, ourName_7){
  this.capCache_0 = capCache_0;
  this.fileCap_1 = fileCap_1;
  this.context_2 = context_2;
  this.network_3 = network_3;
  this.crypto_4 = crypto_4;
  this.root_5 = root_5;
  this.path_6 = path_6;
  this.ourName_7 = ourName_7;
}

defineClass(1991, $wnd.Function, $intern_22, UserContext$lambda$474$Type);
_.apply_0 = function apply_1768(arg0){
  return lambda$474(this.capCache_0, this.fileCap_1, this.context_2, this.network_3, this.crypto_4, this.root_5, this.path_6, this.ourName_7, arg0);
}
;
function UserContext$lambda$475$Type(){
}

defineClass(2257, $wnd.Function, $intern_22, UserContext$lambda$475$Type);
_.apply_0 = function apply_1769(arg0){
  return $clinit_UserContext() , checkCriticalElement(castTo(arg0, 12).ref != null) , castTo(castTo(arg0, 12).ref, 19);
}
;
function UserContext$lambda$476$Type(capCache_0, fileCap_1, context_2){
  this.capCache_0 = capCache_0;
  this.fileCap_1 = fileCap_1;
  this.context_2 = context_2;
}

defineClass(2258, $wnd.Function, $intern_22, UserContext$lambda$476$Type);
_.apply_0 = function apply_1770(arg0){
  return $clinit_UserContext() , build_13(this.capCache_0, this.fileCap_1, new UserContext$39methodref$addFriendGroupCap$Type(this.context_2));
}
;
function UserContext$lambda$478$Type(root_0, username_1){
  this.root_0 = root_0;
  this.username_1 = username_1;
}

defineClass(2259, $wnd.Function, $intern_22, UserContext$lambda$478$Type);
_.apply_0 = function apply_1771(arg0){
  return lambda$478(this.root_0, this.username_1, arg0);
}
;
function UserContext$lambda$479$Type(root_0, username_1){
  this.root_0 = root_0;
  this.username_1 = username_1;
}

defineClass(2260, $wnd.Function, $intern_22, UserContext$lambda$479$Type);
_.apply_0 = function apply_1772(arg0){
  return $clinit_UserContext() , this.root_0.putNode(this.username_1, castTo(arg0, 241));
}
;
function UserContext$lambda$48$Type(network_0, identityHash_1, identityPair_2, userWithRoot_3, crypto_4, identity_5, progressCallback_6, isLegacy_7, entryData_8, algorithm_9){
  this.network_0 = network_0;
  this.identityHash_1 = identityHash_1;
  this.identityPair_2 = identityPair_2;
  this.userWithRoot_3 = userWithRoot_3;
  this.crypto_4 = crypto_4;
  this.identity_5 = identity_5;
  this.progressCallback_6 = progressCallback_6;
  this.isLegacy_7 = isLegacy_7;
  this.entryData_8 = entryData_8;
  this.algorithm_9 = algorithm_9;
}

defineClass(2029, $wnd.Function, $intern_22, UserContext$lambda$48$Type);
_.apply_0 = function apply_1773(arg0){
  return lambda$48_1(this.network_0, this.identityHash_1, this.identityPair_2, this.userWithRoot_3, this.crypto_4, this.identity_5, this.progressCallback_6, this.isLegacy_7, this.entryData_8, this.algorithm_9, arg0);
}
;
_.isLegacy_7 = false;
function UserContext$lambda$480$Type(){
}

defineClass(1992, $wnd.Function, $intern_22, UserContext$lambda$480$Type);
_.apply_0 = function apply_1774(arg0){
  return $clinit_UserContext() , new CommittedWriterData(castTo(castTo(arg0, 20).left, 111).updated, fromCbor_98(castTo(castTo(arg0, 20).right, 48)), castTo(castTo(arg0, 20).left, 111).sequence);
}
;
function UserContext$lambda$481$Type(){
}

defineClass(1555, $wnd.Function, $intern_22, UserContext$lambda$481$Type);
_.apply_0 = function apply_1775(arg0){
  return $clinit_UserContext() , new CommittedWriterData(castTo(castTo(arg0, 20).left, 111).updated, fromCbor_98(castTo(castTo(arg0, 20).right, 48)), castTo(castTo(arg0, 20).left, 111).sequence);
}
;
function UserContext$lambda$482$Type(username_0, network_1){
  this.username_0 = username_0;
  this.network_1 = network_1;
}

defineClass(1196, $wnd.Function, $intern_22, UserContext$lambda$482$Type);
_.apply_0 = function apply_1776(arg0){
  return lambda$482(this.username_0, this.network_1, arg0);
}
;
function UserContext$lambda$483$Type(username_0){
  this.username_0 = username_0;
}

defineClass(784, 1, {}, UserContext$lambda$483$Type);
_.get_0 = function get_131(){
  return $clinit_UserContext() , new IllegalStateException_0('No public-key for user ' + this.username_0);
}
;
var Lpeergos_shared_user_UserContext$lambda$483$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$483$Type', 784);
function UserContext$lambda$484$Type(ipfs_0, owner_1, writer_2){
  this.ipfs_0 = ipfs_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
}

defineClass(1257, $wnd.Function, $intern_22, UserContext$lambda$484$Type);
_.apply_0 = function apply_1777(arg0){
  return lambda$484(this.ipfs_0, this.owner_1, this.writer_2, arg0);
}
;
function UserContext$lambda$485$Type(casOpt_0){
  this.casOpt_0 = casOpt_0;
}

defineClass(2261, $wnd.Function, $intern_22, UserContext$lambda$485$Type);
_.apply_0 = function apply_1778(arg0){
  return $clinit_UserContext() , castTo($orElse($map(this.casOpt_0, makeLambdaFunction(UserContext$lambda$486$Type.prototype.apply_0, UserContext$lambda$486$Type, [castTo(arg0, 12)])), new PointerUpdate(null, ($clinit_MaybeMultihash() , $clinit_MaybeMultihash() , EMPTY_0), ($clinit_Optional() , $clinit_Optional() , EMPTY))), 111);
}
;
function UserContext$lambda$486$Type(signer_0){
  this.signer_0 = signer_0;
}

defineClass(2289, $wnd.Function, $intern_22, UserContext$lambda$486$Type);
_.apply_0 = function apply_1779(arg0){
  return lambda$486(this.signer_0, arg0);
}
;
function UserContext$lambda$487$Type(ipfs_0, owner_1){
  this.ipfs_0 = ipfs_0;
  this.owner_1 = owner_1;
}

defineClass(1258, $wnd.Function, $intern_22, UserContext$lambda$487$Type);
_.apply_0 = function apply_1780(arg0){
  return lambda$487(this.ipfs_0, this.owner_1, arg0);
}
;
function UserContext$lambda$489$Type(pointer_0){
  this.pointer_0 = pointer_0;
}

defineClass(2263, $wnd.Function, $intern_22, UserContext$lambda$489$Type);
_.apply_0 = function apply_1781(arg0){
  return $clinit_UserContext() , new Pair(this.pointer_0, castTo(arg0, 48));
}
;
function UserContext$lambda$49$Type(network_0, identityHash_1, identityPair_2, tid_3, userWithRoot_4, crypto_5){
  this.network_0 = network_0;
  this.identityHash_1 = identityHash_1;
  this.identityPair_2 = identityPair_2;
  this.tid_3 = tid_3;
  this.userWithRoot_4 = userWithRoot_4;
  this.crypto_5 = crypto_5;
}

defineClass(2031, $wnd.Function, $intern_22, UserContext$lambda$49$Type);
_.apply_0 = function apply_1782(arg0){
  return lambda$49_1(this.network_0, this.identityHash_1, this.identityPair_2, this.tid_3, this.userWithRoot_4, this.crypto_5);
}
;
function UserContext$lambda$490$Type($$outer_0, friendName_1){
  this.$$outer_0 = $$outer_0;
  this.friendName_1 = friendName_1;
}

defineClass(1993, $wnd.Function, $intern_22, UserContext$lambda$490$Type);
_.apply_0 = function apply_1783(arg0){
  return $lambda$490(this.$$outer_0, this.friendName_1, arg0);
}
;
function UserContext$lambda$491$Type($$outer_0, home_1, friendName_2){
  this.$$outer_0 = $$outer_0;
  this.home_1 = home_1;
  this.friendName_2 = friendName_2;
}

defineClass(2264, $wnd.Function, $intern_22, UserContext$lambda$491$Type);
_.apply_0 = function apply_1784(arg0){
  return $lambda$491(this.$$outer_0, this.home_1, this.friendName_2, arg0);
}
;
function UserContext$lambda$492$Type(){
}

defineClass(2265, $wnd.Function, $intern_22, UserContext$lambda$492$Type);
_.apply_0 = function apply_1785(arg0){
  return $clinit_UserContext() , valueOf_2(($ensureUnmodified(castTo(arg0, 19)) , castTo(arg0, 19).props).size_0);
}
;
function UserContext$lambda$493$Type(){
}

defineClass(2266, $wnd.Function, {}, UserContext$lambda$493$Type);
_.accept_5 = function accept_143(arg0){
  $clinit_UserContext();
}
;
function UserContext$lambda$494$Type($$outer_0, friendName_1){
  this.$$outer_0 = $$outer_0;
  this.friendName_1 = friendName_1;
}

defineClass(1994, $wnd.Function, $intern_22, UserContext$lambda$494$Type);
_.apply_0 = function apply_1786(arg0){
  return $lambda$494(this.$$outer_0, this.friendName_1);
}
;
function UserContext$lambda$495$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2143, $wnd.Function, $intern_22, UserContext$lambda$495$Type);
_.apply_0 = function apply_1787(arg0){
  return $lambda$495(this.$$outer_0, arg0);
}
;
function UserContext$lambda$497$Type(){
}

defineClass(1285, $wnd.Function, {}, UserContext$lambda$497$Type);
_.accept_5 = function accept_144(arg0){
  $clinit_UserContext();
}
;
function UserContext$lambda$498$Type(blockedUsernamesFile_0){
  this.blockedUsernamesFile_0 = blockedUsernamesFile_0;
}

defineClass(1286, $wnd.Function, $intern_22, UserContext$lambda$498$Type);
_.apply_0 = function apply_1788(arg0){
  return lambda$498(this.blockedUsernamesFile_0, arg0);
}
;
function UserContext$lambda$499$Type(){
}

defineClass(1287, $wnd.Function, $intern_22, UserContext$lambda$499$Type);
_.apply_0 = function apply_1789(arg0){
  return $clinit_UserContext() , new HashSet_1(new Arrays$ArrayList($split($create_0(castTo(arg0, 11), 0, castTo(arg0, 11).length, ($clinit_EmulatedCharset() , UTF_8_0)), '\n')));
}
;
function UserContext$lambda$5$Type(network_0, mirrorBatId_1, crypto_2){
  this.network_0 = network_0;
  this.mirrorBatId_1 = mirrorBatId_1;
  this.crypto_2 = crypto_2;
}

defineClass(1897, $wnd.Function, $intern_22, UserContext$lambda$5$Type);
_.apply_0 = function apply_1790(arg0){
  return lambda$5_6(this.network_0, this.mirrorBatId_1, this.crypto_2, arg0);
}
;
function UserContext$lambda$50$Type(network_0, identityHash_1, identityPair_2, publicBoxingKey_3, tid_4){
  this.network_0 = network_0;
  this.identityHash_1 = identityHash_1;
  this.identityPair_2 = identityPair_2;
  this.publicBoxingKey_3 = publicBoxingKey_3;
  this.tid_4 = tid_4;
}

defineClass(2033, $wnd.Function, $intern_22, UserContext$lambda$50$Type);
_.apply_0 = function apply_1791(arg0){
  return lambda$50_2(this.network_0, this.identityHash_1, this.identityPair_2, this.publicBoxingKey_3, this.tid_4, arg0);
}
;
function UserContext$lambda$500$Type($$outer_0, username_1){
  this.$$outer_0 = $$outer_0;
  this.username_1 = username_1;
}

defineClass(1995, $wnd.Function, $intern_22, UserContext$lambda$500$Type);
_.apply_0 = function apply_1792(arg0){
  return $lambda$500(this.$$outer_0, this.username_1, arg0);
}
;
function UserContext$lambda$501$Type($$outer_0, username_1){
  this.$$outer_0 = $$outer_0;
  this.username_1 = username_1;
}

defineClass(2267, $wnd.Function, $intern_22, UserContext$lambda$501$Type);
_.apply_0 = function apply_1793(arg0){
  return $lambda$501(this.$$outer_0, this.username_1, arg0);
}
;
function UserContext$lambda$502$Type($$outer_0, username_1, bopt_2){
  this.$$outer_0 = $$outer_0;
  this.username_1 = username_1;
  this.bopt_2 = bopt_2;
}

defineClass(2268, $wnd.Function, $intern_22, UserContext$lambda$502$Type);
_.apply_0 = function apply_1794(arg0){
  return $lambda$502(this.$$outer_0, this.username_1, this.bopt_2, arg0);
}
;
function UserContext$lambda$503$Type(username_0){
  this.username_0 = username_0;
}

defineClass(785, 1, {}, UserContext$lambda$503$Type);
_.test_0 = function test_47(arg0){
  return lambda$503(this.username_0, arg0);
}
;
var Lpeergos_shared_user_UserContext$lambda$503$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$503$Type', 785);
function UserContext$lambda$504$Type(){
}

defineClass(2269, $wnd.Function, $intern_22, UserContext$lambda$504$Type);
_.apply_0 = function apply_1795(arg0){
  return $clinit_UserContext() , castToString(arg0) + '\n';
}
;
function UserContext$lambda$505$Type(){
}

defineClass(2270, $wnd.Function, {}, UserContext$lambda$505$Type);
_.accept_5 = function accept_145(arg0){
  $clinit_UserContext();
}
;
function UserContext$lambda$506$Type(){
}

defineClass(2271, $wnd.Function, $intern_22, UserContext$lambda$506$Type);
_.apply_0 = function apply_1796(arg0){
  return $clinit_UserContext() , $clinit_Boolean() , true;
}
;
function UserContext$lambda$507$Type($$outer_0, username_1){
  this.$$outer_0 = $$outer_0;
  this.username_1 = username_1;
}

defineClass(1996, $wnd.Function, $intern_22, UserContext$lambda$507$Type);
_.apply_0 = function apply_1797(arg0){
  return $lambda$507(this.$$outer_0, this.username_1);
}
;
function UserContext$lambda$508$Type($$outer_0, username_1){
  this.$$outer_0 = $$outer_0;
  this.username_1 = username_1;
}

defineClass(2272, $wnd.Function, $intern_22, UserContext$lambda$508$Type);
_.apply_0 = function apply_1798(arg0){
  return $lambda$508(this.$$outer_0, this.username_1, arg0);
}
;
function UserContext$lambda$509$Type(username_0){
  this.username_0 = username_0;
}

defineClass(786, 1, {}, UserContext$lambda$509$Type);
_.test_0 = function test_48(arg0){
  return lambda$509(this.username_0, arg0);
}
;
var Lpeergos_shared_user_UserContext$lambda$509$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$509$Type', 786);
function UserContext$lambda$51$Type(network_0, identity_1, identityHash_2, tid_3, progressCallback_4, isLegacy_5, entryData_6, algorithm_7){
  this.network_0 = network_0;
  this.identity_1 = identity_1;
  this.identityHash_2 = identityHash_2;
  this.tid_3 = tid_3;
  this.progressCallback_4 = progressCallback_4;
  this.isLegacy_5 = isLegacy_5;
  this.entryData_6 = entryData_6;
  this.algorithm_7 = algorithm_7;
}

defineClass(2032, $wnd.Function, $intern_22, UserContext$lambda$51$Type);
_.apply_0 = function apply_1799(arg0){
  return lambda$51_2(this.network_0, this.identity_1, this.identityHash_2, this.tid_3, this.progressCallback_4, this.isLegacy_5, this.entryData_6, this.algorithm_7, arg0);
}
;
_.isLegacy_5 = false;
function UserContext$lambda$510$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2273, $wnd.Function, $intern_22, UserContext$lambda$510$Type);
_.apply_0 = function apply_1800(arg0){
  return $lambda$510(this.$$outer_0, arg0);
}
;
function UserContext$lambda$511$Type(groupName_0){
  this.groupName_0 = groupName_0;
}

defineClass(336, $wnd.Function, $intern_22, UserContext$lambda$511$Type);
_.apply_0 = function apply_1801(arg0){
  return lambda$511(this.groupName_0, arg0);
}
;
function UserContext$lambda$512$Type(groupName_0){
  this.groupName_0 = groupName_0;
}

defineClass(787, 1, {}, UserContext$lambda$512$Type);
_.test_0 = function test_49(arg0){
  return lambda$512(this.groupName_0, arg0);
}
;
var Lpeergos_shared_user_UserContext$lambda$512$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$512$Type', 787);
function UserContext$lambda$513$Type(){
}

defineClass(2274, $wnd.Function, $intern_22, UserContext$lambda$513$Type);
_.apply_0 = function apply_1802(arg0){
  return $clinit_UserContext() , castToString(castTo(arg0, 40).getKey());
}
;
function UserContext$lambda$514$Type($$outer_0, usernameToRemove_1){
  this.$$outer_0 = $$outer_0;
  this.usernameToRemove_1 = usernameToRemove_1;
}

defineClass(1998, $wnd.Function, $intern_22, UserContext$lambda$514$Type);
_.apply_0 = function apply_1803(arg0){
  return $lambda$514(this.$$outer_0, this.usernameToRemove_1);
}
;
function UserContext$lambda$515$Type($$outer_0, usernameToRemove_1){
  this.$$outer_0 = $$outer_0;
  this.usernameToRemove_1 = usernameToRemove_1;
}

defineClass(1999, $wnd.Function, $intern_22, UserContext$lambda$515$Type);
_.apply_0 = function apply_1804(arg0){
  return $lambda$515(this.$$outer_0, this.usernameToRemove_1);
}
;
function UserContext$lambda$516$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2000, $wnd.Function, $intern_22, UserContext$lambda$516$Type);
_.apply_0 = function apply_1805(arg0){
  return $lambda$516(this.$$outer_0);
}
;
function UserContext$lambda$517$Type($$outer_0, sharingDir_1){
  this.$$outer_0 = $$outer_0;
  this.sharingDir_1 = sharingDir_1;
}

defineClass(2001, $wnd.Function, $intern_22, UserContext$lambda$517$Type);
_.apply_0 = function apply_1806(arg0){
  return $lambda$517(this.$$outer_0, this.sharingDir_1, arg0);
}
;
function UserContext$lambda$518$Type($$outer_0, sharing_1, sharingDir_2){
  this.$$outer_0 = $$outer_0;
  this.sharing_1 = sharing_1;
  this.sharingDir_2 = sharingDir_2;
}

defineClass(2276, $wnd.Function, $intern_22, UserContext$lambda$518$Type);
_.apply_0 = function apply_1807(arg0){
  return $lambda$518(this.$$outer_0, this.sharing_1, this.sharingDir_2, arg0);
}
;
function UserContext$lambda$519$Type(){
}

defineClass(2002, $wnd.Function, $intern_22, UserContext$lambda$519$Type);
_.apply_0 = function apply_1808(arg0){
  return $clinit_UserContext() , $clinit_Boolean() , true;
}
;
function UserContext$lambda$52$Type(network_0, identity_1, identityHash_2, tid_3){
  this.network_0 = network_0;
  this.identity_1 = identity_1;
  this.identityHash_2 = identityHash_2;
  this.tid_3 = tid_3;
}

defineClass(2034, $wnd.Function, $intern_22, UserContext$lambda$52$Type);
_.apply_0 = function apply_1809(arg0){
  return lambda$52_3(this.network_0, this.identity_1, this.identityHash_2, this.tid_3, arg0);
}
;
function UserContext$lambda$520$Type($$outer_0, usernameToRemove_1){
  this.$$outer_0 = $$outer_0;
  this.usernameToRemove_1 = usernameToRemove_1;
}

defineClass(1997, $wnd.Function, $intern_22, UserContext$lambda$520$Type);
_.apply_0 = function apply_1810(arg0){
  return $lambda$520(this.$$outer_0, this.usernameToRemove_1, arg0);
}
;
function UserContext$lambda$521$Type($$outer_0, usernameToRemove_1){
  this.$$outer_0 = $$outer_0;
  this.usernameToRemove_1 = usernameToRemove_1;
}

defineClass(2275, $wnd.Function, $intern_22, UserContext$lambda$521$Type);
_.apply_0 = function apply_1811(arg0){
  return $lambda$521(this.$$outer_0, this.usernameToRemove_1, arg0);
}
;
function UserContext$lambda$522$Type($$outer_0, groupUid_1, username_2){
  this.$$outer_0 = $$outer_0;
  this.groupUid_1 = groupUid_1;
  this.username_2 = username_2;
}

defineClass(2003, $wnd.Function, $intern_22, UserContext$lambda$522$Type);
_.apply_0 = function apply_1812(arg0){
  return $lambda$522(this.$$outer_0, this.groupUid_1, this.username_2);
}
;
function UserContext$lambda$523$Type($$outer_0, usernameToRevoke_1){
  this.$$outer_0 = $$outer_0;
  this.usernameToRevoke_1 = usernameToRevoke_1;
}

defineClass(1292, $wnd.Function, $intern_22, UserContext$lambda$523$Type);
_.apply_0 = function apply_1813(arg0){
  return $lambda$523(this.$$outer_0, this.usernameToRevoke_1, arg0);
}
;
function UserContext$lambda$524$Type($$outer_0, usernameToRevoke_1){
  this.$$outer_0 = $$outer_0;
  this.usernameToRevoke_1 = usernameToRevoke_1;
}

defineClass(2277, $wnd.Function, $intern_22, UserContext$lambda$524$Type);
_.apply_0 = function apply_1814(arg0){
  return $lambda$524(this.$$outer_0, this.usernameToRevoke_1, arg0);
}
;
function UserContext$lambda$525$Type($$outer_0, usernameToRevoke_1, opt_2){
  this.$$outer_0 = $$outer_0;
  this.usernameToRevoke_1 = usernameToRevoke_1;
  this.opt_2 = opt_2;
}

defineClass(2278, $wnd.Function, $intern_22, UserContext$lambda$525$Type);
_.apply_0 = function apply_1815(arg0){
  return $lambda$525(this.$$outer_0, this.usernameToRevoke_1, this.opt_2);
}
;
function UserContext$lambda$526$Type($$outer_0, usernameToRevoke_1){
  this.$$outer_0 = $$outer_0;
  this.usernameToRevoke_1 = usernameToRevoke_1;
}

defineClass(2279, $wnd.Function, $intern_22, UserContext$lambda$526$Type);
_.apply_0 = function apply_1816(arg0){
  return $lambda$526(this.$$outer_0, this.usernameToRevoke_1, arg0);
}
;
function UserContext$lambda$527$Type($$outer_0, usernameToRevoke_1){
  this.$$outer_0 = $$outer_0;
  this.usernameToRevoke_1 = usernameToRevoke_1;
}

defineClass(788, 1, $intern_34, UserContext$lambda$527$Type);
_.apply_1 = function apply_1817(arg0, arg1){
  return $lambda$527(this.$$outer_0, this.usernameToRevoke_1, arg1);
}
;
var Lpeergos_shared_user_UserContext$lambda$527$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$527$Type', 788);
function UserContext$lambda$528$Type(){
}

defineClass(789, 1, $intern_34, UserContext$lambda$528$Type);
_.apply_1 = function apply_1818(arg0, arg1){
  return $clinit_UserContext() , $clinit_Boolean() , (checkCriticalNotNull(castToBoolean(arg0)) , castToBoolean(arg0)) && (checkCriticalNotNull(castToBoolean(arg1)) , castToBoolean(arg1))?true:false;
}
;
var Lpeergos_shared_user_UserContext$lambda$528$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$528$Type', 789);
function UserContext$lambda$529$Type($$outer_0, usernameToRevoke_1){
  this.$$outer_0 = $$outer_0;
  this.usernameToRevoke_1 = usernameToRevoke_1;
}

defineClass(790, 1, $intern_34, UserContext$lambda$529$Type);
_.apply_1 = function apply_1819(arg0, arg1){
  return $lambda$529(this.$$outer_0, this.usernameToRevoke_1, arg1);
}
;
var Lpeergos_shared_user_UserContext$lambda$529$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$529$Type', 790);
function UserContext$lambda$53$Type(identityHash_0, identity_1, newUserData_2, notCommitted_3, tid_4){
  this.identityHash_0 = identityHash_0;
  this.identity_1 = identity_1;
  this.newUserData_2 = newUserData_2;
  this.notCommitted_3 = notCommitted_3;
  this.tid_4 = tid_4;
}

defineClass(712, 1, {}, UserContext$lambda$53$Type);
_.apply_3 = function apply_1820(arg0, arg1){
  return lambda$53_3(this.identityHash_0, this.identity_1, this.newUserData_2, this.notCommitted_3, this.tid_4, arg1);
}
;
var Lpeergos_shared_user_UserContext$lambda$53$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$53$Type', 712);
function UserContext$lambda$530$Type(){
}

defineClass(791, 1, $intern_34, UserContext$lambda$530$Type);
_.apply_1 = function apply_1821(arg0, arg1){
  return $clinit_UserContext() , $clinit_Boolean() , (checkCriticalNotNull(castToBoolean(arg0)) , castToBoolean(arg0)) && (checkCriticalNotNull(castToBoolean(arg1)) , castToBoolean(arg1))?true:false;
}
;
var Lpeergos_shared_user_UserContext$lambda$530$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$530$Type', 791);
function UserContext$lambda$531$Type(){
}

defineClass(792, 1, {}, UserContext$lambda$531$Type);
_.test_0 = function test_50(arg0){
  return $clinit_UserContext() , lt(castTo(arg0, 144).startTimeEpochMillis, ($clinit_System() , sub_1(fromDouble_0(Date.now()), 86400000)));
}
;
var Lpeergos_shared_user_UserContext$lambda$531$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$531$Type', 792);
function UserContext$lambda$532$Type($$outer_0, txns_1, filter_2){
  this.$$outer_0 = $$outer_0;
  this.txns_1 = txns_1;
  this.filter_2 = filter_2;
}

defineClass(2004, $wnd.Function, $intern_22, UserContext$lambda$532$Type);
_.apply_0 = function apply_1822(arg0){
  return $lambda$532(this.$$outer_0, this.txns_1, this.filter_2, arg0);
}
;
function UserContext$lambda$533$Type(txns_0, filter_1){
  this.txns_0 = txns_0;
  this.filter_1 = filter_1;
}

defineClass(793, 1, {}, UserContext$lambda$533$Type);
_.apply_3 = function apply_1823(arg0, arg1){
  return lambda$533(this.txns_0, this.filter_1, arg0, arg1);
}
;
var Lpeergos_shared_user_UserContext$lambda$533$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$533$Type', 793);
function UserContext$lambda$535$Type(name_0, t0_1){
  this.name_0 = name_0;
  this.t0_1 = t0_1;
}

defineClass(2006, $wnd.Function, $intern_22, UserContext$lambda$535$Type);
_.apply_0 = function apply_1824(arg0){
  return lambda$535(this.name_0, this.t0_1, arg0);
}
;
_.t0_1 = 0;
function UserContext$lambda$54$Type(username_0, batid_1, network_2, crypto_3, identityHash_4, chain_5, identity_6, token_7, addCard_8, progressCallback_9, opLog_10, initialNetwork_11, userWithRoot_12, entryData_13, loginPublicKey_14){
  this.username_0 = username_0;
  this.batid_1 = batid_1;
  this.network_2 = network_2;
  this.crypto_3 = crypto_3;
  this.identityHash_4 = identityHash_4;
  this.chain_5 = chain_5;
  this.identity_6 = identity_6;
  this.token_7 = token_7;
  this.addCard_8 = addCard_8;
  this.progressCallback_9 = progressCallback_9;
  this.opLog_10 = opLog_10;
  this.initialNetwork_11 = initialNetwork_11;
  this.userWithRoot_12 = userWithRoot_12;
  this.entryData_13 = entryData_13;
  this.loginPublicKey_14 = loginPublicKey_14;
}

defineClass(2030, $wnd.Function, $intern_22, UserContext$lambda$54$Type);
_.apply_0 = function apply_1825(arg0){
  return lambda$54_0(this.username_0, this.batid_1, this.network_2, this.crypto_3, this.identityHash_4, this.chain_5, this.identity_6, this.token_7, this.addCard_8, this.progressCallback_9, this.opLog_10, this.initialNetwork_11, this.userWithRoot_12, this.entryData_13, this.loginPublicKey_14);
}
;
function UserContext$lambda$55$Type(t1_0, username_2, batid_3, network_4, crypto_5){
  this.t1_0 = t1_0;
  this.username_2 = username_2;
  this.batid_3 = batid_3;
  this.network_4 = network_4;
  this.crypto_5 = crypto_5;
}

defineClass(2035, $wnd.Function, $intern_22, UserContext$lambda$55$Type);
_.apply_0 = function apply_1826(arg0){
  return lambda$55_1(this.t1_0, this.username_2, this.batid_3, this.network_4, this.crypto_5, arg0);
}
;
_.t1_0 = 0;
function UserContext$lambda$56$Type(username_0, batid_1, network_2, crypto_3){
  this.username_0 = username_0;
  this.batid_1 = batid_1;
  this.network_2 = network_2;
  this.crypto_3 = crypto_3;
}

defineClass(2036, $wnd.Function, $intern_22, UserContext$lambda$56$Type);
_.apply_0 = function apply_1827(arg0){
  return lambda$56_2(this.username_0, this.batid_1, this.network_2, this.crypto_3, arg0);
}
;
function UserContext$lambda$57$Type(username_0, batid_1, network_2, crypto_3){
  this.username_0 = username_0;
  this.batid_1 = batid_1;
  this.network_2 = network_2;
  this.crypto_3 = crypto_3;
}

defineClass(2037, $wnd.Function, $intern_22, UserContext$lambda$57$Type);
_.apply_0 = function apply_1828(arg0){
  return lambda$57_0(this.username_0, this.batid_1, this.network_2, this.crypto_3, arg0);
}
;
function UserContext$lambda$58$Type(network_0, identityHash_1){
  this.network_0 = network_0;
  this.identityHash_1 = identityHash_1;
}

defineClass(2038, $wnd.Function, $intern_22, UserContext$lambda$58$Type);
_.apply_0 = function apply_1829(arg0){
  return $clinit_UserContext() , $commit(this.network_0, this.identityHash_1, new NetworkAccess$lambda$21$Type);
}
;
function UserContext$lambda$59$Type(username_0, chain_1, identity_2, token_3, addCard_4, progressCallback_5, opLog_6, initialNetwork_7, crypto_8){
  this.username_0 = username_0;
  this.chain_1 = chain_1;
  this.identity_2 = identity_2;
  this.token_3 = token_3;
  this.addCard_4 = addCard_4;
  this.progressCallback_5 = progressCallback_5;
  this.opLog_6 = opLog_6;
  this.initialNetwork_7 = initialNetwork_7;
  this.crypto_8 = crypto_8;
}

defineClass(2039, $wnd.Function, $intern_22, UserContext$lambda$59$Type);
_.apply_0 = function apply_1830(arg0){
  return lambda$59_0(this.username_0, this.chain_1, this.identity_2, this.token_3, this.addCard_4, this.progressCallback_5, this.opLog_6, this.initialNetwork_7, this.crypto_8);
}
;
function UserContext$lambda$6$Type(mirrorBatId_0, crypto_1, network_2){
  this.mirrorBatId_0 = mirrorBatId_0;
  this.crypto_1 = crypto_1;
  this.network_2 = network_2;
}

defineClass(1898, $wnd.Function, $intern_22, UserContext$lambda$6$Type);
_.apply_0 = function apply_1831(arg0){
  return lambda$6_4(this.mirrorBatId_0, this.crypto_1, this.network_2, arg0);
}
;
function UserContext$lambda$60$Type(username_0, userWithRoot_1, initialNetwork_2, crypto_3, progressCallback_4){
  this.username_0 = username_0;
  this.userWithRoot_1 = userWithRoot_1;
  this.initialNetwork_2 = initialNetwork_2;
  this.crypto_3 = crypto_3;
  this.progressCallback_4 = progressCallback_4;
}

defineClass(2040, $wnd.Function, $intern_22, UserContext$lambda$60$Type);
_.apply_0 = function apply_1832(arg0){
  return lambda$60_0(this.username_0, this.userWithRoot_1, this.initialNetwork_2, this.crypto_3, this.progressCallback_4);
}
;
function UserContext$lambda$61$Type(){
}

defineClass(2043, $wnd.Function, $intern_22, UserContext$lambda$61$Type);
_.apply_0 = function apply_1833(arg0){
  return $clinit_UserContext() , null;
}
;
function UserContext$lambda$63$Type(initialNetwork_0, identity_1, username_2, chain_3, opLog_4, addCard_5){
  this.initialNetwork_0 = initialNetwork_0;
  this.identity_1 = identity_1;
  this.username_2 = username_2;
  this.chain_3 = chain_3;
  this.opLog_4 = opLog_4;
  this.addCard_5 = addCard_5;
}

defineClass(2041, $wnd.Function, $intern_22, UserContext$lambda$63$Type);
_.apply_0 = function apply_1834(arg0){
  return lambda$63_2(this.initialNetwork_0, this.identity_1, this.username_2, this.chain_3, this.opLog_4, this.addCard_5, arg0);
}
;
function UserContext$lambda$64$Type(initialNetwork_0, username_1, chain_2, opLog_3, token_4){
  this.initialNetwork_0 = initialNetwork_0;
  this.username_1 = username_1;
  this.chain_2 = chain_2;
  this.opLog_3 = opLog_3;
  this.token_4 = token_4;
}

defineClass(2042, $wnd.Function, $intern_22, UserContext$lambda$64$Type);
_.apply_0 = function apply_1835(arg0){
  return lambda$64_2(this.initialNetwork_0, this.username_1, this.chain_2, this.opLog_3, this.token_4, arg0);
}
;
function UserContext$lambda$65$Type(initialNetwork_0, identity_1, username_2, chain_3, opLog_4, proof_5, addCard_6){
  this.initialNetwork_0 = initialNetwork_0;
  this.identity_1 = identity_1;
  this.username_2 = username_2;
  this.chain_3 = chain_3;
  this.opLog_4 = opLog_4;
  this.proof_5 = proof_5;
  this.addCard_6 = addCard_6;
}

defineClass(2044, $wnd.Function, $intern_22, UserContext$lambda$65$Type);
_.apply_0 = function apply_1836(arg0){
  return lambda$65_3(this.initialNetwork_0, this.identity_1, this.username_2, this.chain_3, this.opLog_4, this.proof_5, this.addCard_6, arg0);
}
;
function UserContext$lambda$66$Type(initialNetwork_0, identity_1, username_2, chain_3, opLog_4, proof_5){
  this.initialNetwork_0 = initialNetwork_0;
  this.identity_1 = identity_1;
  this.username_2 = username_2;
  this.chain_3 = chain_3;
  this.opLog_4 = opLog_4;
  this.proof_5 = proof_5;
}

defineClass(2045, $wnd.Function, $intern_22, UserContext$lambda$66$Type);
_.apply_0 = function apply_1837(arg0){
  return lambda$66_3(this.initialNetwork_0, this.identity_1, this.username_2, this.chain_3, this.opLog_4, this.proof_5, arg0);
}
;
function UserContext$lambda$67$Type(initialNetwork_0, identity_1, username_2, chain_3, opLog_4, signedSpaceReq_5, proof_6){
  this.initialNetwork_0 = initialNetwork_0;
  this.identity_1 = identity_1;
  this.username_2 = username_2;
  this.chain_3 = chain_3;
  this.opLog_4 = opLog_4;
  this.signedSpaceReq_5 = signedSpaceReq_5;
  this.proof_6 = proof_6;
}

defineClass(2046, $wnd.Function, $intern_22, UserContext$lambda$67$Type);
_.apply_0 = function apply_1838(arg0){
  return lambda$67_0(this.initialNetwork_0, this.identity_1, this.username_2, this.chain_3, this.opLog_4, this.signedSpaceReq_5, this.proof_6, arg0);
}
;
function UserContext$lambda$68$Type(initialNetwork_0, username_1, chain_2, opLog_3, signedSpaceReq_4, proof_5){
  this.initialNetwork_0 = initialNetwork_0;
  this.username_1 = username_1;
  this.chain_2 = chain_2;
  this.opLog_3 = opLog_3;
  this.signedSpaceReq_4 = signedSpaceReq_4;
  this.proof_5 = proof_5;
}

defineClass(713, 1, {}, UserContext$lambda$68$Type);
_.get_0 = function get_132(){
  return lambda$68(this.initialNetwork_0, this.username_1, this.chain_2, this.opLog_3, this.signedSpaceReq_4, this.proof_5);
}
;
var Lpeergos_shared_user_UserContext$lambda$68$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$68$Type', 713);
function UserContext$lambda$69$Type(){
}

defineClass(2047, $wnd.Function, $intern_22, UserContext$lambda$69$Type);
_.apply_0 = function apply_1839(arg0){
  return $clinit_UserContext() , $clinit_Optional() , $clinit_Optional() , EMPTY;
}
;
function UserContext$lambda$7$Type(){
}

defineClass(468, 1, $intern_32, UserContext$lambda$7$Type);
_.accept = function accept_146(arg0){
  $clinit_UserContext();
}
;
_.andThen = function andThen_70(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_UserContext$lambda$7$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$7$Type', 468);
function UserContext$lambda$70$Type(network_0, identity_1, retry_2, sleepMillis_3, attemptsLeft_5){
  this.network_0 = network_0;
  this.identity_1 = identity_1;
  this.retry_2 = retry_2;
  this.sleepMillis_3 = sleepMillis_3;
  this.attemptsLeft_5 = attemptsLeft_5;
}

defineClass(1269, $wnd.Function, $intern_22, UserContext$lambda$70$Type);
_.apply_0 = function apply_1840(arg0){
  return lambda$70(this.network_0, this.identity_1, this.retry_2, this.sleepMillis_3, this.attemptsLeft_5, arg0);
}
;
_.attemptsLeft_5 = 0;
_.sleepMillis_3 = 0;
function UserContext$lambda$71$Type(network_0, identity_1, retry_2, sleepMillis_3, attemptsLeft_5){
  this.network_0 = network_0;
  this.identity_1 = identity_1;
  this.retry_2 = retry_2;
  this.sleepMillis_3 = sleepMillis_3;
  this.attemptsLeft_5 = attemptsLeft_5;
}

defineClass(2048, $wnd.Function, $intern_22, UserContext$lambda$71$Type);
_.apply_0 = function apply_1841(arg0){
  return lambda$71(this.network_0, this.identity_1, this.retry_2, this.sleepMillis_3, this.attemptsLeft_5);
}
;
_.attemptsLeft_5 = 0;
_.sleepMillis_3 = 0;
function UserContext$lambda$72$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1917, $wnd.Function, $intern_22, UserContext$lambda$72$Type);
_.apply_0 = function apply_1842(arg0){
  return $lambda$72_2(this.$$outer_0, arg0);
}
;
function UserContext$lambda$73$Type(dirName_0, network_1, mirrorBatId_2, crypto_3){
  this.dirName_0 = dirName_0;
  this.network_1 = network_1;
  this.mirrorBatId_2 = mirrorBatId_2;
  this.crypto_3 = crypto_3;
}

defineClass(1918, $wnd.Function, $intern_22, UserContext$lambda$73$Type);
_.apply_0 = function apply_1843(arg0){
  return lambda$73(this.dirName_0, this.network_1, this.mirrorBatId_2, this.crypto_3, arg0);
}
;
function UserContext$lambda$74$Type(globalRoot_0){
  this.globalRoot_0 = globalRoot_0;
}

defineClass(1919, $wnd.Function, $intern_22, UserContext$lambda$74$Type);
_.apply_0 = function apply_1844(arg0){
  return $clinit_UserContext() , this.globalRoot_0;
}
;
function UserContext$lambda$75$Type($$outer_0, friendName_1){
  this.$$outer_0 = $$outer_0;
  this.friendName_1 = friendName_1;
}

defineClass(1920, $wnd.Function, $intern_22, UserContext$lambda$75$Type);
_.apply_0 = function apply_1845(arg0){
  return $lambda$75_0(this.$$outer_0, this.friendName_1, arg0);
}
;
function UserContext$lambda$76$Type($$outer_0, ourKeys_1, friendName_2){
  this.$$outer_0 = $$outer_0;
  this.ourKeys_1 = ourKeys_1;
  this.friendName_2 = friendName_2;
}

defineClass(2049, $wnd.Function, $intern_22, UserContext$lambda$76$Type);
_.apply_0 = function apply_1846(arg0){
  return $lambda$76(this.$$outer_0, this.ourKeys_1, this.friendName_2, arg0);
}
;
function UserContext$lambda$77$Type(context_0){
  this.context_0 = context_0;
}

defineClass(1921, $wnd.Function, $intern_22, UserContext$lambda$77$Type);
_.apply_0 = function apply_1847(arg0){
  return lambda$77_0(this.context_0, arg0);
}
;
function UserContext$lambda$78$Type(currentRoot_0, entry_1, network_2){
  this.currentRoot_0 = currentRoot_0;
  this.entry_1 = entry_1;
  this.network_2 = network_2;
}

defineClass(1922, $wnd.Function, $intern_22, UserContext$lambda$78$Type);
_.apply_0 = function apply_1848(arg0){
  return lambda$78_1(this.currentRoot_0, this.entry_1, this.network_2, arg0);
}
;
function UserContext$lambda$79$Type(currentRoot_0, r_1, entry_2){
  this.currentRoot_0 = currentRoot_0;
  this.r_1 = r_1;
  this.entry_2 = entry_2;
}

defineClass(2050, $wnd.Function, $intern_22, UserContext$lambda$79$Type);
_.apply_0 = function apply_1849(arg0){
  return lambda$79(this.currentRoot_0, this.r_1, this.entry_2, arg0);
}
;
function UserContext$lambda$8$Type(network_0, username_1){
  this.network_0 = network_0;
  this.username_1 = username_1;
}

defineClass(706, 1, {}, UserContext$lambda$8$Type);
_.get_0 = function get_133(){
  return lambda$8_6(this.network_0, this.username_1);
}
;
var Lpeergos_shared_user_UserContext$lambda$8$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$8$Type', 706);
function UserContext$lambda$80$Type(network_0, originalPath_1, ownerName_2){
  this.network_0 = network_0;
  this.originalPath_1 = originalPath_1;
  this.ownerName_2 = ownerName_2;
}

defineClass(1923, $wnd.Function, $intern_22, UserContext$lambda$80$Type);
_.apply_0 = function apply_1850(arg0){
  return lambda$80_2(this.network_0, this.originalPath_1, this.ownerName_2, arg0);
}
;
function UserContext$lambda$81$Type(owner_0, network_1, originalPath_2, ownerName_3){
  this.owner_0 = owner_0;
  this.network_1 = network_1;
  this.originalPath_2 = originalPath_2;
  this.ownerName_3 = ownerName_3;
}

defineClass(2051, $wnd.Function, $intern_22, UserContext$lambda$81$Type);
_.apply_0 = function apply_1851(arg0){
  return lambda$81_0(this.owner_0, this.network_1, this.originalPath_2, this.ownerName_3, arg0);
}
;
function UserContext$lambda$82$Type(owner_0, network_1){
  this.owner_0 = owner_0;
  this.network_1 = network_1;
}

defineClass(2052, $wnd.Function, $intern_22, UserContext$lambda$82$Type);
_.apply_0 = function apply_1852(arg0){
  return lambda$82_0(this.owner_0, this.network_1, arg0);
}
;
function UserContext$lambda$83$Type(originalPath_0){
  this.originalPath_0 = originalPath_0;
}

defineClass(2053, $wnd.Function, $intern_22, UserContext$lambda$83$Type);
_.apply_0 = function apply_1853(arg0){
  return lambda$83_0(this.originalPath_0, arg0);
}
;
function UserContext$lambda$84$Type(ownerName_0, originalPath_1){
  this.ownerName_0 = ownerName_0;
  this.originalPath_1 = originalPath_1;
}

defineClass(2054, $wnd.Function, $intern_22, UserContext$lambda$84$Type);
_.apply_0 = function apply_1854(arg0){
  return lambda$84_0(this.ownerName_0, this.originalPath_1, arg0);
}
;
function UserContext$lambda$85$Type($$outer_0, file_1){
  this.$$outer_0 = $$outer_0;
  this.file_1 = file_1;
}

defineClass(1270, $wnd.Function, $intern_22, UserContext$lambda$85$Type);
_.apply_0 = function apply_1855(arg0){
  return $lambda$85_1(this.$$outer_0, this.file_1, arg0);
}
;
function UserContext$lambda$86$Type($$outer_0, file_1){
  this.$$outer_0 = $$outer_0;
  this.file_1 = file_1;
}

defineClass(2055, $wnd.Function, $intern_22, UserContext$lambda$86$Type);
_.apply_0 = function apply_1856(arg0){
  return $lambda$86_2(this.$$outer_0, this.file_1, arg0);
}
;
function UserContext$lambda$87$Type(){
}

defineClass(1271, $wnd.Function, $intern_22, UserContext$lambda$87$Type);
_.apply_0 = function apply_1857(arg0){
  return $clinit_UserContext() , $clinit_Optional() , $clinit_Optional() , EMPTY;
}
;
function UserContext$lambda$88$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1924, $wnd.Function, $intern_22, UserContext$lambda$88$Type);
_.apply_0 = function apply_1858(arg0){
  return $lambda$88_2(this.$$outer_0, arg0);
}
;
function UserContext$lambda$89$Type(){
}

defineClass(1925, $wnd.Function, $intern_22, UserContext$lambda$89$Type);
_.apply_0 = function apply_1859(arg0){
  return $clinit_UserContext() , castToString(arg0).substr(1);
}
;
function UserContext$lambda$9$Type(){
}

defineClass(1899, $wnd.Function, $intern_22, UserContext$lambda$9$Type);
_.apply_0 = function apply_1860(arg0){
  return $clinit_UserContext() , castTo(arg0, 33).getMessage().indexOf('hash not present') != -1?errored(new IllegalStateException_0('User has been deleted. Did you mean a different username?')):castTo(arg0, 33).getMessage().indexOf('No public-key for user') != -1?errored(new IllegalStateException_0('Unknown username. Did you enter it correctly?')):errored(castTo(arg0, 33));
}
;
function UserContext$lambda$90$Type($$outer_0, file_1){
  this.$$outer_0 = $$outer_0;
  this.file_1 = file_1;
}

defineClass(1926, $wnd.Function, $intern_22, UserContext$lambda$90$Type);
_.apply_0 = function apply_1861(arg0){
  return $lambda$90_0(this.$$outer_0, this.file_1, arg0);
}
;
function UserContext$lambda$91$Type(file_0){
  this.file_0 = file_0;
}

defineClass(2056, $wnd.Function, $intern_22, UserContext$lambda$91$Type);
_.apply_0 = function apply_1862(arg0){
  return lambda$91_2(this.file_0, arg0);
}
;
function UserContext$lambda$92$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2022, $wnd.Function, $intern_22, UserContext$lambda$92$Type);
_.apply_0 = function apply_1863(arg0){
  return $lambda$92_2(this.$$outer_0);
}
;
function UserContext$lambda$93$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(714, 1, {}, UserContext$lambda$93$Type);
_.get_0 = function get_134(){
  return $lambda$93_1(this.$$outer_0);
}
;
var Lpeergos_shared_user_UserContext$lambda$93$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$93$Type', 714);
function UserContext$lambda$94$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2057, $wnd.Function, $intern_22, UserContext$lambda$94$Type);
_.apply_0 = function apply_1864(arg0){
  return $lambda$94(this.$$outer_0, arg0);
}
;
function UserContext$lambda$95$Type(network_0, username_1, loginRoot_2, identity_3){
  this.network_0 = network_0;
  this.username_1 = username_1;
  this.loginRoot_2 = loginRoot_2;
  this.identity_3 = identity_3;
}

defineClass(469, 1, {}, UserContext$lambda$95$Type);
_.get_0 = function get_135(){
  return lambda$95_2(this.network_0, this.username_1, this.loginRoot_2, this.identity_3);
}
;
var Lpeergos_shared_user_UserContext$lambda$95$Type_2_classLit = createForClass('peergos.shared.user', 'UserContext/lambda$95$Type', 469);
function UserContext$lambda$96$Type(network_0, username_1, loginRoot_2){
  this.network_0 = network_0;
  this.username_1 = username_1;
  this.loginRoot_2 = loginRoot_2;
}

defineClass(1272, $wnd.Function, $intern_22, UserContext$lambda$96$Type);
_.apply_0 = function apply_1865(arg0){
  return lambda$96_2(this.network_0, this.username_1, this.loginRoot_2, arg0);
}
;
function UserContext$lambda$97$Type(network_0, username_1, loginRoot_2){
  this.network_0 = network_0;
  this.username_1 = username_1;
  this.loginRoot_2 = loginRoot_2;
}

defineClass(2058, $wnd.Function, $intern_22, UserContext$lambda$97$Type);
_.apply_0 = function apply_1866(arg0){
  return lambda$97_0(this.network_0, this.username_1, this.loginRoot_2, arg0);
}
;
function UserContext$lambda$98$Type(){
}

defineClass(1273, $wnd.Function, $intern_22, UserContext$lambda$98$Type);
_.apply_0 = function apply_1867(arg0){
  return $clinit_UserContext() , castTo(arg0, 17).isEmpty()?($clinit_Optional() , $clinit_Optional() , EMPTY):($clinit_Optional() , new Optional(checkCriticalNotNull(castTo(castTo(arg0, 17).getAtIndex(castTo(arg0, 17).size() - 1), 112))));
}
;
function UserContext$lambda$99$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1927, $wnd.Function, $intern_22, UserContext$lambda$99$Type);
_.apply_0 = function apply_1868(arg0){
  return $lambda$99(this.$$outer_0, arg0);
}
;
function $clinit_UserStaticData(){
  $clinit_UserStaticData = emptyMethod;
  $clinit_Logger();
  getLogger();
}

function $getData(this$static, rootKey){
  return castTo($decrypt_3(this$static.allEntryPoints, rootKey, makeLambdaFunction(UserStaticData$4methodref$fromCbor$Type.prototype.apply_0, UserStaticData$4methodref$fromCbor$Type, [])), 185);
}

function UserStaticData(staticData, rootKey, identity, boxer){
  $clinit_UserStaticData();
  UserStaticData_1.call(this, new UserStaticData$EntryPoints(2, staticData, identity, boxer), rootKey);
}

function UserStaticData_0(allEntryPoints){
  $clinit_UserStaticData();
  this.allEntryPoints = allEntryPoints;
}

function UserStaticData_1(login, rootKey){
  $clinit_UserStaticData();
  UserStaticData_0.call(this, build_6(rootKey, login, $intern_15));
}

function fromByteArray_4(entryPoints){
  $clinit_UserStaticData();
  return new UserStaticData_0(new PaddedCipherText(fromCbor_9(deserialize(new CborDecoder(new ByteArrayInputStream(entryPoints)), entryPoints.length))));
}

defineClass(116, 1, {7:1, 116:1}, UserStaticData, UserStaticData_0, UserStaticData_1);
_.serialize = function serialize_119(){
  return $toByteArray_2($toCbor_5(this.allEntryPoints.cipherText));
}
;
_.toCbor = function toCbor_117(){
  return $toCbor_5(this.allEntryPoints.cipherText);
}
;
var Lpeergos_shared_user_UserStaticData_2_classLit = createForClass('peergos.shared.user', 'UserStaticData', 116);
function UserStaticData$4methodref$fromCbor$Type(){
}

defineClass(376, $wnd.Function, $intern_22, UserStaticData$4methodref$fromCbor$Type);
_.apply_0 = function apply_1869(arg0){
  return fromCbor_97(castTo(arg0, 7));
}
;
function $addEntryPoint(this$static, entry){
  var updated;
  updated = castTo(concat(this$static.entries_0.stream(), new StreamImpl(null, new Spliterators$IteratorSpliterator(singleton(entry), 1))).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  return new UserStaticData$EntryPoints(this$static.version, updated, this$static.identity, this$static.boxer);
}

function $toCbor_89(this$static){
  var res, transformed;
  res = new TreeMap;
  $put_6(res, 'v', new CborObject$CborLong(this$static.version));
  $put_6(res, 'e', new CborObject$CborList(castTo($collect_0($map_0(this$static.entries_0.stream(), makeLambdaFunction(UserStaticData$EntryPoints$0methodref$toCbor$Type.prototype.apply_0, UserStaticData$EntryPoints$0methodref$toCbor$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17)));
  $ifPresent(this$static.boxer, new UserStaticData$EntryPoints$lambda$1$Type(res));
  $ifPresent(this$static.identity, new UserStaticData$EntryPoints$lambda$2$Type(res));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(res), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function UserStaticData$EntryPoints(version, entries, identity, boxer){
  this.version = version;
  this.entries_0 = entries;
  this.identity = identity;
  this.boxer = boxer;
}

function fromCbor_97(cbor){
  var boxer, identity, m, version;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Incorrect cbor type for EntryPoints: ' + cbor));
  m = castTo(cbor, 18);
  version = castTo(castTo($get_0(m.values_0, new CborObject$CborString('v')), 7), 29).value_0;
  if (compare_1(version, 2) > 0)
    throw toJs(new IllegalStateException_0('Unknown UserStaticData version: ' + toString_4(version)));
  boxer = $getOptional(m, 'b', makeLambdaFunction(UserStaticData$EntryPoints$1methodref$fromCbor$Type.prototype.apply_0, UserStaticData$EntryPoints$1methodref$fromCbor$Type, []));
  identity = $getOptional(m, 'i', makeLambdaFunction(UserStaticData$EntryPoints$2methodref$fromCbor$Type.prototype.apply_0, UserStaticData$EntryPoints$2methodref$fromCbor$Type, []));
  return new UserStaticData$EntryPoints(version, castTo($collect_0($map_0(castTo(castTo($get_0(m.values_0, new CborObject$CborString('e')), 7), 21).value_0.stream(), makeLambdaFunction(UserStaticData$EntryPoints$3methodref$fromCbor$Type.prototype.apply_0, UserStaticData$EntryPoints$3methodref$fromCbor$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17), identity, boxer);
}

defineClass(185, 1, {7:1, 185:1}, UserStaticData$EntryPoints);
_.serialize = function serialize_120(){
  return $toByteArray_2($toCbor_89(this));
}
;
_.toCbor = function toCbor_118(){
  return $toCbor_89(this);
}
;
_.version = 0;
var Lpeergos_shared_user_UserStaticData$EntryPoints_2_classLit = createForClass('peergos.shared.user', 'UserStaticData/EntryPoints', 185);
function UserStaticData$EntryPoints$0methodref$toCbor$Type(){
}

defineClass(2312, $wnd.Function, $intern_22, UserStaticData$EntryPoints$0methodref$toCbor$Type);
_.apply_0 = function apply_1870(arg0){
  return $toCbor_70(castTo(arg0, 60));
}
;
function UserStaticData$EntryPoints$1methodref$fromCbor$Type(){
}

defineClass(2313, $wnd.Function, $intern_22, UserStaticData$EntryPoints$1methodref$fromCbor$Type);
_.apply_0 = function apply_1871(arg0){
  return fromCbor_8(castTo(arg0, 7));
}
;
function UserStaticData$EntryPoints$2methodref$fromCbor$Type(){
}

defineClass(2314, $wnd.Function, $intern_22, UserStaticData$EntryPoints$2methodref$fromCbor$Type);
_.apply_0 = function apply_1872(arg0){
  return fromCbor_12(castTo(arg0, 7));
}
;
function UserStaticData$EntryPoints$3methodref$fromCbor$Type(){
}

defineClass(2315, $wnd.Function, $intern_22, UserStaticData$EntryPoints$3methodref$fromCbor$Type);
_.apply_0 = function apply_1873(arg0){
  return fromCbor_80(castTo(arg0, 7));
}
;
function UserStaticData$EntryPoints$lambda$1$Type(res_0){
  this.res_0 = res_0;
}

defineClass(799, 1, $intern_32, UserStaticData$EntryPoints$lambda$1$Type);
_.accept = function accept_147(arg0){
  $put_6(this.res_0, 'b', castTo(arg0, 188));
}
;
_.andThen = function andThen_71(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_UserStaticData$EntryPoints$lambda$1$Type_2_classLit = createForClass('peergos.shared.user', 'UserStaticData/EntryPoints/lambda$1$Type', 799);
function UserStaticData$EntryPoints$lambda$2$Type(res_0){
  this.res_0 = res_0;
}

defineClass(800, 1, $intern_32, UserStaticData$EntryPoints$lambda$2$Type);
_.accept = function accept_148(arg0){
  $put_6(this.res_0, 'i', castTo(arg0, 190));
}
;
_.andThen = function andThen_72(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_UserStaticData$EntryPoints$lambda$2$Type_2_classLit = createForClass('peergos.shared.user', 'UserStaticData/EntryPoints/lambda$2$Type', 800);
function generateUser(username, password, hasher, provider, random, signer, boxer, algorithm){
  var fut;
  if ($equals_0(password, username))
    return errored(new IllegalStateException_0('Your password cannot be the same as your username!'));
  fut = $hashToKeyBytes(hasher, username + ('' + algorithm.getExtraSalt()), password, algorithm);
  return $thenApply(fut, makeLambdaFunction(UserUtil$lambda$0$Type.prototype.apply_0, UserUtil$lambda$0$Type, [algorithm, random, signer, boxer, provider]));
}

function lambda$0_26(algorithm_0, random_1, signer_2, boxer_3, provider_4, keyBytes_5){
  var boxingKeyPair, hasBoxer, pubilcBoxBytes, publicSignBytes, root, rootKeyBytes, secretBoxBytes, secretSignBytes, signBytesSeed, signingKeyPair;
  signBytesSeed = (checkCopyOfRange(keyBytes_5, 0, 32) , copyPrimitiveByteArray(keyBytes_5, initUnidimensionalArray(B_classLit, $intern_28, 8, 32, 15, 1), 0, 32));
  hasBoxer = algorithm_0.generateBoxerAndIdentity();
  secretBoxBytes = hasBoxer?(checkCopyOfRange(keyBytes_5, 32, 64) , copyPrimitiveByteArray(keyBytes_5, initUnidimensionalArray(B_classLit, $intern_28, 8, 32, 15, 1), 32, 64)):$randomBytes(random_1, 32);
  rootKeyBytes = (checkCopyOfRange(keyBytes_5, hasBoxer?64:32, hasBoxer?96:64) , copyPrimitiveByteArray(keyBytes_5, initUnidimensionalArray(B_classLit, $intern_28, 8, (hasBoxer?96:64) - (hasBoxer?64:32), 15, 1), hasBoxer?64:32, hasBoxer?96:64));
  secretSignBytes = (checkCriticalArraySize(64) , copyPrimitiveByteArray(signBytesSeed, initUnidimensionalArray(B_classLit, $intern_28, 8, 64, 15, 1), 0, 64));
  publicSignBytes = initUnidimensionalArray(B_classLit, $intern_28, 8, 32, 15, 1);
  $crypto_sign_keypair(signer_2, publicSignBytes, secretSignBytes);
  pubilcBoxBytes = initUnidimensionalArray(B_classLit, $intern_28, 8, 32, 15, 1);
  $crypto_box_keypair(boxer_3, pubilcBoxBytes, secretBoxBytes);
  signingKeyPair = new SigningKeyPair(new Ed25519PublicKey(publicSignBytes, signer_2), new Ed25519SecretKey(secretSignBytes, signer_2));
  boxingKeyPair = new BoxingKeyPair(new Curve25519PublicKey(pubilcBoxBytes, boxer_3, random_1), new Curve25519SecretKey(secretBoxBytes, boxer_3));
  root = new TweetNaClKey(rootKeyBytes, false, provider_4, random_1);
  return new UserWithRoot(signingKeyPair, boxingKeyPair, root);
}

function UserUtil$lambda$0$Type(algorithm_0, random_1, signer_2, boxer_3, provider_4){
  this.algorithm_0 = algorithm_0;
  this.random_1 = random_1;
  this.signer_2 = signer_2;
  this.boxer_3 = boxer_3;
  this.provider_4 = provider_4;
}

defineClass(3238, $wnd.Function, $intern_22, UserUtil$lambda$0$Type);
_.apply_0 = function apply_1874(arg0){
  return lambda$0_26(this.algorithm_0, this.random_1, this.signer_2, this.boxer_3, this.provider_4, arg0);
}
;
function UserWithRoot(signer, boxer, root){
  this.signer = signer;
  this.boxer = boxer;
  this.root = root;
}

defineClass(827, 1, {}, UserWithRoot);
var Lpeergos_shared_user_UserWithRoot_2_classLit = createForClass('peergos.shared.user', 'UserWithRoot', 827);
function $applyComplexComputation(this$static, owner, writer, transformer){
  var res;
  res = new CompletableFuture;
  return $thenCompose($runWithLock_0(castTo($computeIfAbsent(this$static.pending, new Pair(owner, writer.publicKeyHash), makeLambdaFunction(WriteSynchronizer$lambda$27$Type.prototype.apply_0, WriteSynchronizer$lambda$27$Type, [this$static, owner])), 154), makeLambdaFunction(WriteSynchronizer$lambda$28$Type.prototype.apply_0, WriteSynchronizer$lambda$28$Type, [this$static, owner, res, transformer]), new WriteSynchronizer$lambda$29$Type(this$static, owner, writer)), makeLambdaFunction(WriteSynchronizer$lambda$38$Type.prototype.apply_0, WriteSynchronizer$lambda$38$Type, [res]));
}

function $applyComplexUpdate(this$static, owner, writer, transformer, commitWatcher){
  return $runWithLock_0(castTo($computeIfAbsent(this$static.pending, new Pair(owner, writer.publicKeyHash), makeLambdaFunction(WriteSynchronizer$lambda$16$Type.prototype.apply_0, WriteSynchronizer$lambda$16$Type, [this$static, owner])), 154), makeLambdaFunction(WriteSynchronizer$lambda$17$Type.prototype.apply_0, WriteSynchronizer$lambda$17$Type, [this$static, owner, commitWatcher, transformer]), new WriteSynchronizer$lambda$18$Type(this$static, owner, writer));
}

function $applyUpdate(this$static, owner, writer, transformer){
  return $runWithLock_0(castTo($computeIfAbsent(this$static.pending, new Pair(owner, writer.publicKeyHash), makeLambdaFunction(WriteSynchronizer$lambda$7$Type.prototype.apply_0, WriteSynchronizer$lambda$7$Type, [this$static, owner])), 154), makeLambdaFunction(WriteSynchronizer$lambda$8$Type.prototype.apply_0, WriteSynchronizer$lambda$8$Type, [this$static, owner, writer, transformer]), new WriteSynchronizer$lambda$9$Type(this$static, owner, writer));
}

function $getValue_0(this$static, owner, writer){
  return $runWithLock_0(castTo($computeIfAbsent(this$static.pending, new Pair(owner, writer), makeLambdaFunction(WriteSynchronizer$lambda$4$Type.prototype.apply_0, WriteSynchronizer$lambda$4$Type, [this$static, owner])), 154), makeLambdaFunction(WriteSynchronizer$lambda$5$Type.prototype.apply_0, WriteSynchronizer$lambda$5$Type, [this$static, owner, writer]), new WriteSynchronizer$lambda$6$Type(this$static, owner, writer));
}

function $getWriterData(this$static, owner, writer){
  return $thenApply($thenCompose(this$static.mutable.getPointerTarget(owner, writer, this$static.dht), makeLambdaFunction(WriteSynchronizer$lambda$2$Type.prototype.apply_0, WriteSynchronizer$lambda$2$Type, [this$static, owner])), makeLambdaFunction(WriteSynchronizer$lambda$3$Type.prototype.apply_0, WriteSynchronizer$lambda$3$Type, [writer]));
}

function $lambda$10_9(this$static, owner_1, writer_2, current_3, transformer_4, tid_4){
  return $thenCompose(transformer_4.apply_4($get_31(current_3, writer_2).props, tid_4), makeLambdaFunction(WriteSynchronizer$lambda$11$Type.prototype.apply_0, WriteSynchronizer$lambda$11$Type, [this$static, owner_1, writer_2, current_3, tid_4]));
}

function $lambda$11_8(this$static, owner_1, writer_2, current_3, tid_4, wd_4){
  return $thenCompose(this$static.committerBuilder.buildCommitter(new WriteSynchronizer$lambda$12$Type(this$static), owner_1, new WriteSynchronizer$lambda$13$Type).commit_1(owner_1, writer_2, wd_4, $get_31(current_3, writer_2), tid_4), makeLambdaFunction(WriteSynchronizer$lambda$14$Type.prototype.apply_0, WriteSynchronizer$lambda$14$Type, [this$static, owner_1]));
}

function $lambda$12_7(this$static, aOwner_0, signer_1, wdr_2, existing_3, t_4){
  return $commit_3(wdr_2, aOwner_0, signer_1, existing_3.hash_0, existing_3.sequence, this$static.mutable, this$static.dht, this$static.hasher, t_4);
}

function $lambda$14_7(this$static, owner_1, v_1){
  return this$static.flusher.commit_0(owner_1, v_1, new WriteSynchronizer$lambda$15$Type);
}

function $lambda$17_11(this$static, owner_1, commitWatcher_2, transformer_3, current_3){
  return $thenCompose(transformer_3.apply_3(current_3, this$static.committerBuilder.buildCommitter(new WriteSynchronizer$lambda$19$Type(this$static, owner_1), owner_1, commitWatcher_2)), makeLambdaFunction(WriteSynchronizer$lambda$22$Type.prototype.apply_0, WriteSynchronizer$lambda$22$Type, [this$static, owner_1, commitWatcher_2]));
}

function $lambda$19_8(this$static, owner_1, aOwner_1, signer_2, wd_3, existing_4, tid_5){
  return $thenCompose($commit_3(wd_3, aOwner_1, signer_2, existing_4.hash_0, existing_4.sequence, this$static.mutable, this$static.dht, this$static.hasher, tid_5), makeLambdaFunction(WriteSynchronizer$lambda$20$Type.prototype.apply_0, WriteSynchronizer$lambda$20$Type, [this$static, owner_1, signer_2]));
}

function $lambda$2_23(this$static, owner_1, x_1){
  return getWriterData_1(owner_1, castTo($get_9(x_1.updated), 44), x_1.sequence, this$static.dht);
}

function $lambda$20_7(this$static, owner_1, signer_2, s_2){
  return $thenApply($updateWriterState(this$static, owner_1, signer_2.publicKeyHash, s_2), makeLambdaFunction(WriteSynchronizer$lambda$21$Type.prototype.apply_0, WriteSynchronizer$lambda$21$Type, [s_2]));
}

function $lambda$22_5(this$static, owner_1, commitWatcher_2, v_2){
  return this$static.flusher.commit_0(owner_1, v_2, commitWatcher_2);
}

function $lambda$28_4(this$static, owner_1, res_2, transformer_3, current_3){
  return $thenApply($thenCompose(transformer_3.apply_3(current_3, this$static.committerBuilder.buildCommitter(new WriteSynchronizer$lambda$30$Type(this$static, owner_1), owner_1, new WriteSynchronizer$lambda$31$Type)), makeLambdaFunction(WriteSynchronizer$lambda$34$Type.prototype.apply_0, WriteSynchronizer$lambda$34$Type, [this$static, owner_1])), makeLambdaFunction(WriteSynchronizer$lambda$37$Type.prototype.apply_0, WriteSynchronizer$lambda$37$Type, [res_2]));
}

function $lambda$30_6(this$static, owner_1, aOwner_1, signer_2, wd_3, existing_4, tid_5){
  return $thenCompose($commit_3(wd_3, aOwner_1, signer_2, existing_4.hash_0, existing_4.sequence, this$static.mutable, this$static.dht, this$static.hasher, tid_5), makeLambdaFunction(WriteSynchronizer$lambda$32$Type.prototype.apply_0, WriteSynchronizer$lambda$32$Type, [this$static, owner_1, signer_2]));
}

function $lambda$32_2(this$static, owner_1, signer_2, s_2){
  return $thenApply($updateWriterState(this$static, owner_1, signer_2.publicKeyHash, s_2), makeLambdaFunction(WriteSynchronizer$lambda$33$Type.prototype.apply_0, WriteSynchronizer$lambda$33$Type, [s_2]));
}

function $lambda$34_2(this$static, owner_1, p_1){
  return $thenApply(this$static.flusher.commit_0(owner_1, castTo(p_1.left, 43), new WriteSynchronizer$lambda$35$Type), makeLambdaFunction(WriteSynchronizer$lambda$36$Type.prototype.apply_0, WriteSynchronizer$lambda$36$Type, [p_1]));
}

function $lambda$5_15(this$static, owner_1, writer_2){
  return $thenApply($thenCompose(this$static.mutable.getPointerTarget(owner_1, writer_2, this$static.dht), makeLambdaFunction(WriteSynchronizer$lambda$2$Type.prototype.apply_0, WriteSynchronizer$lambda$2$Type, [this$static, owner_1])), makeLambdaFunction(WriteSynchronizer$lambda$3$Type.prototype.apply_0, WriteSynchronizer$lambda$3$Type, [writer_2]));
}

function $lambda$6_14(this$static, owner_1, writer_2){
  return $thenApply($thenCompose(this$static.mutable.getPointerTarget(owner_1, writer_2, this$static.dht), makeLambdaFunction(WriteSynchronizer$lambda$2$Type.prototype.apply_0, WriteSynchronizer$lambda$2$Type, [this$static, owner_1])), makeLambdaFunction(WriteSynchronizer$lambda$3$Type.prototype.apply_0, WriteSynchronizer$lambda$3$Type, [writer_2]));
}

function $lambda$8_10(this$static, owner_1, writer_2, transformer_3, current_3){
  return call_2(owner_1, makeLambdaFunction(WriteSynchronizer$lambda$10$Type.prototype.apply_0, WriteSynchronizer$lambda$10$Type, [this$static, owner_1, writer_2, current_3, transformer_3]), this$static.dht);
}

function $put_28(this$static, owner, writer, val){
  $put_7(this$static.pending, new Pair(owner, writer), new AsyncLock(new CompletableFuture_0(new Snapshot_0(writer, val))));
}

function $putEmpty(this$static, owner, writer){
  var emptyUserData, emptyWD;
  emptyWD = new WriterData(writer, ($clinit_Optional() , $clinit_Optional() , EMPTY), (null , EMPTY), (null , EMPTY), (null , EMPTY), ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP), (null , EMPTY), (null , EMPTY));
  emptyUserData = new CommittedWriterData(($clinit_MaybeMultihash() , $clinit_MaybeMultihash() , EMPTY_0), emptyWD, (null , EMPTY));
  $put_7(this$static.pending, new Pair(owner, writer), new AsyncLock(new CompletableFuture_0(new Snapshot_0(writer, emptyUserData))));
}

function $setCommitterBuilder(this$static, committerBuilder){
  this$static.committerBuilder = committerBuilder;
}

function $setFlusher(this$static, flusher){
  this$static.flusher = flusher;
}

function $updateWriterState(this$static, owner, writer, value_0){
  var existing;
  existing = castTo($get_7(this$static.pending, new Pair(owner, writer)), 154);
  if (!!existing && !existing.queueHead.isDone)
    return new CompletableFuture_0(($clinit_Boolean() , true));
  return $thenApply($runWithLock(castTo($computeIfAbsent(this$static.pending, new Pair(owner, writer), makeLambdaFunction(WriteSynchronizer$lambda$24$Type.prototype.apply_0, WriteSynchronizer$lambda$24$Type, [this$static, owner])), 154), makeLambdaFunction(WriteSynchronizer$lambda$25$Type.prototype.apply_0, WriteSynchronizer$lambda$25$Type, [writer, value_0])), makeLambdaFunction(WriteSynchronizer$lambda$26$Type.prototype.apply_0, WriteSynchronizer$lambda$26$Type, []));
}

function WriteSynchronizer(mutable, dht, hasher){
  this.pending = new ConcurrentHashMap;
  this.committerBuilder = new WriteSynchronizer$lambda$0$Type;
  this.flusher = new WriteSynchronizer$lambda$1$Type;
  this.mutable = mutable;
  this.dht = dht;
  this.hasher = hasher;
}

function lambda$25_5(writer_0, value_1, v_2){
  return new CompletableFuture_0($withVersion(v_2, writer_0, $get_32(value_1, writer_0)));
}

function lambda$37_3(res_0, p_1){
  $complete(res_0, p_1);
  return castTo(p_1.left, 43);
}

defineClass(267, 1, {}, WriteSynchronizer);
var Lpeergos_shared_user_WriteSynchronizer_2_classLit = createForClass('peergos.shared.user', 'WriteSynchronizer', 267);
function WriteSynchronizer$lambda$0$Type(){
}

defineClass(593, 1, {}, WriteSynchronizer$lambda$0$Type);
_.buildCommitter = function buildCommitter_0(arg0, arg1, arg2){
  return arg0;
}
;
var Lpeergos_shared_user_WriteSynchronizer$lambda$0$Type_2_classLit = createForClass('peergos.shared.user', 'WriteSynchronizer/lambda$0$Type', 593);
function WriteSynchronizer$lambda$1$Type(){
}

defineClass(594, 1, {}, WriteSynchronizer$lambda$1$Type);
_.commit_0 = function commit_4(arg0, arg1, arg2){
  return new CompletableFuture_0(arg1);
}
;
var Lpeergos_shared_user_WriteSynchronizer$lambda$1$Type_2_classLit = createForClass('peergos.shared.user', 'WriteSynchronizer/lambda$1$Type', 594);
function WriteSynchronizer$lambda$10$Type($$outer_0, owner_1, writer_2, current_3, transformer_4){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.current_3 = current_3;
  this.transformer_4 = transformer_4;
}

defineClass(1490, $wnd.Function, $intern_22, WriteSynchronizer$lambda$10$Type);
_.apply_0 = function apply_1875(arg0){
  return $lambda$10_9(this.$$outer_0, this.owner_1, this.writer_2, this.current_3, this.transformer_4, arg0);
}
;
function WriteSynchronizer$lambda$11$Type($$outer_0, owner_1, writer_2, current_3, tid_4){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.current_3 = current_3;
  this.tid_4 = tid_4;
}

defineClass(1491, $wnd.Function, $intern_22, WriteSynchronizer$lambda$11$Type);
_.apply_0 = function apply_1876(arg0){
  return $lambda$11_8(this.$$outer_0, this.owner_1, this.writer_2, this.current_3, this.tid_4, arg0);
}
;
function WriteSynchronizer$lambda$12$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(596, 1, {}, WriteSynchronizer$lambda$12$Type);
_.commit_1 = function commit_5(arg0, arg1, arg2, arg3, arg4){
  return $lambda$12_7(this.$$outer_0, arg0, arg1, arg2, arg3, arg4);
}
;
var Lpeergos_shared_user_WriteSynchronizer$lambda$12$Type_2_classLit = createForClass('peergos.shared.user', 'WriteSynchronizer/lambda$12$Type', 596);
function WriteSynchronizer$lambda$13$Type(){
}

defineClass(597, 1, {}, WriteSynchronizer$lambda$13$Type);
_.get_0 = function get_136(){
  return $clinit_Boolean() , true;
}
;
var Lpeergos_shared_user_WriteSynchronizer$lambda$13$Type_2_classLit = createForClass('peergos.shared.user', 'WriteSynchronizer/lambda$13$Type', 597);
function WriteSynchronizer$lambda$14$Type($$outer_0, owner_1){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
}

defineClass(1492, $wnd.Function, $intern_22, WriteSynchronizer$lambda$14$Type);
_.apply_0 = function apply_1877(arg0){
  return $lambda$14_7(this.$$outer_0, this.owner_1, arg0);
}
;
function WriteSynchronizer$lambda$15$Type(){
}

defineClass(598, 1, {}, WriteSynchronizer$lambda$15$Type);
_.get_0 = function get_137(){
  return $clinit_Boolean() , true;
}
;
var Lpeergos_shared_user_WriteSynchronizer$lambda$15$Type_2_classLit = createForClass('peergos.shared.user', 'WriteSynchronizer/lambda$15$Type', 598);
function WriteSynchronizer$lambda$16$Type($$outer_0, owner_1){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
}

defineClass(1482, $wnd.Function, $intern_22, WriteSynchronizer$lambda$16$Type);
_.apply_0 = function apply_1878(arg0){
  return new AsyncLock($getWriterData(this.$$outer_0, this.owner_1, castTo(castTo(arg0, 20).right, 55)));
}
;
function WriteSynchronizer$lambda$17$Type($$outer_0, owner_1, commitWatcher_2, transformer_3){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.commitWatcher_2 = commitWatcher_2;
  this.transformer_3 = transformer_3;
}

defineClass(1483, $wnd.Function, $intern_22, WriteSynchronizer$lambda$17$Type);
_.apply_0 = function apply_1879(arg0){
  return $lambda$17_11(this.$$outer_0, this.owner_1, this.commitWatcher_2, this.transformer_3, arg0);
}
;
function WriteSynchronizer$lambda$18$Type($$outer_0, owner_1, writer_2){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
}

defineClass(601, 1, {}, WriteSynchronizer$lambda$18$Type);
_.get_0 = function get_138(){
  return $getWriterData(this.$$outer_0, this.owner_1, this.writer_2.publicKeyHash);
}
;
var Lpeergos_shared_user_WriteSynchronizer$lambda$18$Type_2_classLit = createForClass('peergos.shared.user', 'WriteSynchronizer/lambda$18$Type', 601);
function WriteSynchronizer$lambda$19$Type($$outer_0, owner_1){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
}

defineClass(600, 1, {}, WriteSynchronizer$lambda$19$Type);
_.commit_1 = function commit_6(arg0, arg1, arg2, arg3, arg4){
  return $lambda$19_8(this.$$outer_0, this.owner_1, arg0, arg1, arg2, arg3, arg4);
}
;
var Lpeergos_shared_user_WriteSynchronizer$lambda$19$Type_2_classLit = createForClass('peergos.shared.user', 'WriteSynchronizer/lambda$19$Type', 600);
function WriteSynchronizer$lambda$2$Type($$outer_0, owner_1){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
}

defineClass(1191, $wnd.Function, $intern_22, WriteSynchronizer$lambda$2$Type);
_.apply_0 = function apply_1880(arg0){
  return $lambda$2_23(this.$$outer_0, this.owner_1, arg0);
}
;
function WriteSynchronizer$lambda$20$Type($$outer_0, owner_1, signer_2){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.signer_2 = signer_2;
}

defineClass(1494, $wnd.Function, $intern_22, WriteSynchronizer$lambda$20$Type);
_.apply_0 = function apply_1881(arg0){
  return $lambda$20_7(this.$$outer_0, this.owner_1, this.signer_2, arg0);
}
;
function WriteSynchronizer$lambda$21$Type(s_0){
  this.s_0 = s_0;
}

defineClass(1495, $wnd.Function, $intern_22, WriteSynchronizer$lambda$21$Type);
_.apply_0 = function apply_1882(arg0){
  return this.s_0;
}
;
function WriteSynchronizer$lambda$22$Type($$outer_0, owner_1, commitWatcher_2){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.commitWatcher_2 = commitWatcher_2;
}

defineClass(1493, $wnd.Function, $intern_22, WriteSynchronizer$lambda$22$Type);
_.apply_0 = function apply_1883(arg0){
  return $lambda$22_5(this.$$outer_0, this.owner_1, this.commitWatcher_2, arg0);
}
;
function WriteSynchronizer$lambda$23$Type(){
}

defineClass(82, 1, {}, WriteSynchronizer$lambda$23$Type);
_.get_0 = function get_139(){
  return $clinit_Boolean() , true;
}
;
var Lpeergos_shared_user_WriteSynchronizer$lambda$23$Type_2_classLit = createForClass('peergos.shared.user', 'WriteSynchronizer/lambda$23$Type', 82);
function WriteSynchronizer$lambda$24$Type($$outer_0, owner_1){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
}

defineClass(1484, $wnd.Function, $intern_22, WriteSynchronizer$lambda$24$Type);
_.apply_0 = function apply_1884(arg0){
  return new AsyncLock($getWriterData(this.$$outer_0, this.owner_1, castTo(castTo(arg0, 20).right, 55)));
}
;
function WriteSynchronizer$lambda$25$Type(writer_0, value_1){
  this.writer_0 = writer_0;
  this.value_1 = value_1;
}

defineClass(1485, $wnd.Function, $intern_22, WriteSynchronizer$lambda$25$Type);
_.apply_0 = function apply_1885(arg0){
  return lambda$25_5(this.writer_0, this.value_1, arg0);
}
;
function WriteSynchronizer$lambda$26$Type(){
}

defineClass(1486, $wnd.Function, $intern_22, WriteSynchronizer$lambda$26$Type);
_.apply_0 = function apply_1886(arg0){
  return $clinit_Boolean() , true;
}
;
function WriteSynchronizer$lambda$27$Type($$outer_0, owner_1){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
}

defineClass(1487, $wnd.Function, $intern_22, WriteSynchronizer$lambda$27$Type);
_.apply_0 = function apply_1887(arg0){
  return new AsyncLock($getWriterData(this.$$outer_0, this.owner_1, castTo(castTo(arg0, 20).right, 55)));
}
;
function WriteSynchronizer$lambda$28$Type($$outer_0, owner_1, res_2, transformer_3){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.res_2 = res_2;
  this.transformer_3 = transformer_3;
}

defineClass(1488, $wnd.Function, $intern_22, WriteSynchronizer$lambda$28$Type);
_.apply_0 = function apply_1888(arg0){
  return $lambda$28_4(this.$$outer_0, this.owner_1, this.res_2, this.transformer_3, arg0);
}
;
function WriteSynchronizer$lambda$29$Type($$outer_0, owner_1, writer_2){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
}

defineClass(605, 1, {}, WriteSynchronizer$lambda$29$Type);
_.get_0 = function get_140(){
  return $getWriterData(this.$$outer_0, this.owner_1, this.writer_2.publicKeyHash);
}
;
var Lpeergos_shared_user_WriteSynchronizer$lambda$29$Type_2_classLit = createForClass('peergos.shared.user', 'WriteSynchronizer/lambda$29$Type', 605);
function WriteSynchronizer$lambda$3$Type(writer_0){
  this.writer_0 = writer_0;
}

defineClass(1192, $wnd.Function, $intern_22, WriteSynchronizer$lambda$3$Type);
_.apply_0 = function apply_1889(arg0){
  return new Snapshot_0(this.writer_0, castTo(arg0, 104));
}
;
function WriteSynchronizer$lambda$30$Type($$outer_0, owner_1){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
}

defineClass(602, 1, {}, WriteSynchronizer$lambda$30$Type);
_.commit_1 = function commit_7(arg0, arg1, arg2, arg3, arg4){
  return $lambda$30_6(this.$$outer_0, this.owner_1, arg0, arg1, arg2, arg3, arg4);
}
;
var Lpeergos_shared_user_WriteSynchronizer$lambda$30$Type_2_classLit = createForClass('peergos.shared.user', 'WriteSynchronizer/lambda$30$Type', 602);
function WriteSynchronizer$lambda$31$Type(){
}

defineClass(603, 1, {}, WriteSynchronizer$lambda$31$Type);
_.get_0 = function get_141(){
  return $clinit_Boolean() , true;
}
;
var Lpeergos_shared_user_WriteSynchronizer$lambda$31$Type_2_classLit = createForClass('peergos.shared.user', 'WriteSynchronizer/lambda$31$Type', 603);
function WriteSynchronizer$lambda$32$Type($$outer_0, owner_1, signer_2){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.signer_2 = signer_2;
}

defineClass(1498, $wnd.Function, $intern_22, WriteSynchronizer$lambda$32$Type);
_.apply_0 = function apply_1890(arg0){
  return $lambda$32_2(this.$$outer_0, this.owner_1, this.signer_2, arg0);
}
;
function WriteSynchronizer$lambda$33$Type(s_0){
  this.s_0 = s_0;
}

defineClass(1499, $wnd.Function, $intern_22, WriteSynchronizer$lambda$33$Type);
_.apply_0 = function apply_1891(arg0){
  return this.s_0;
}
;
function WriteSynchronizer$lambda$34$Type($$outer_0, owner_1){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
}

defineClass(1496, $wnd.Function, $intern_22, WriteSynchronizer$lambda$34$Type);
_.apply_0 = function apply_1892(arg0){
  return $lambda$34_2(this.$$outer_0, this.owner_1, arg0);
}
;
function WriteSynchronizer$lambda$35$Type(){
}

defineClass(604, 1, {}, WriteSynchronizer$lambda$35$Type);
_.get_0 = function get_142(){
  return $clinit_Boolean() , true;
}
;
var Lpeergos_shared_user_WriteSynchronizer$lambda$35$Type_2_classLit = createForClass('peergos.shared.user', 'WriteSynchronizer/lambda$35$Type', 604);
function WriteSynchronizer$lambda$36$Type(p_0){
  this.p_0 = p_0;
}

defineClass(1500, $wnd.Function, $intern_22, WriteSynchronizer$lambda$36$Type);
_.apply_0 = function apply_1893(arg0){
  return this.p_0;
}
;
function WriteSynchronizer$lambda$37$Type(res_0){
  this.res_0 = res_0;
}

defineClass(1497, $wnd.Function, $intern_22, WriteSynchronizer$lambda$37$Type);
_.apply_0 = function apply_1894(arg0){
  return lambda$37_3(this.res_0, arg0);
}
;
function WriteSynchronizer$lambda$38$Type(res_0){
  this.res_0 = res_0;
}

defineClass(1489, $wnd.Function, $intern_22, WriteSynchronizer$lambda$38$Type);
_.apply_0 = function apply_1895(arg0){
  return this.res_0;
}
;
function WriteSynchronizer$lambda$4$Type($$outer_0, owner_1){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
}

defineClass(1478, $wnd.Function, $intern_22, WriteSynchronizer$lambda$4$Type);
_.apply_0 = function apply_1896(arg0){
  return new AsyncLock($getWriterData(this.$$outer_0, this.owner_1, castTo(castTo(arg0, 20).right, 55)));
}
;
function WriteSynchronizer$lambda$5$Type($$outer_0, owner_1, writer_2){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
}

defineClass(1479, $wnd.Function, $intern_22, WriteSynchronizer$lambda$5$Type);
_.apply_0 = function apply_1897(arg0){
  return $lambda$5_15(this.$$outer_0, this.owner_1, this.writer_2);
}
;
function WriteSynchronizer$lambda$6$Type($$outer_0, owner_1, writer_2){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
}

defineClass(595, 1, {}, WriteSynchronizer$lambda$6$Type);
_.get_0 = function get_143(){
  return $lambda$6_14(this.$$outer_0, this.owner_1, this.writer_2);
}
;
var Lpeergos_shared_user_WriteSynchronizer$lambda$6$Type_2_classLit = createForClass('peergos.shared.user', 'WriteSynchronizer/lambda$6$Type', 595);
function WriteSynchronizer$lambda$7$Type($$outer_0, owner_1){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
}

defineClass(1480, $wnd.Function, $intern_22, WriteSynchronizer$lambda$7$Type);
_.apply_0 = function apply_1898(arg0){
  return new AsyncLock($getWriterData(this.$$outer_0, this.owner_1, castTo(castTo(arg0, 20).right, 55)));
}
;
function WriteSynchronizer$lambda$8$Type($$outer_0, owner_1, writer_2, transformer_3){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.transformer_3 = transformer_3;
}

defineClass(1481, $wnd.Function, $intern_22, WriteSynchronizer$lambda$8$Type);
_.apply_0 = function apply_1899(arg0){
  return $lambda$8_10(this.$$outer_0, this.owner_1, this.writer_2, this.transformer_3, arg0);
}
;
function WriteSynchronizer$lambda$9$Type($$outer_0, owner_1, writer_2){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
}

defineClass(599, 1, {}, WriteSynchronizer$lambda$9$Type);
_.get_0 = function get_144(){
  return $getWriterData(this.$$outer_0, this.owner_1, this.writer_2.publicKeyHash);
}
;
var Lpeergos_shared_user_WriteSynchronizer$lambda$9$Type_2_classLit = createForClass('peergos.shared.user', 'WriteSynchronizer/lambda$9$Type', 599);
function $addOwnedKey(this$static, owner, signer, newOwned, ipfs, hasher){
  return call_2(owner, makeLambdaFunction(WriterData$lambda$0$Type.prototype.apply_0, WriterData$lambda$0$Type, [this$static, owner, ipfs, hasher, signer, newOwned]), ipfs);
}

function $addOwnedKeyAndCommit(this$static, owner, signer, newOwned, currentHash, currentSequence, network, c, tid){
  return $thenCompose($thenCompose($getOwnedKeyChamp(this$static, owner, network.dhtClient, network.hasher), makeLambdaFunction(WriterData$lambda$4$Type.prototype.apply_0, WriterData$lambda$4$Type, [this$static, owner, signer, newOwned, network, tid])), makeLambdaFunction(WriterData$lambda$6$Type.prototype.apply_0, WriterData$lambda$6$Type, [this$static, c, owner, signer, currentHash, currentSequence, tid]));
}

function $changeKeys(this$static, username, oldSigner, signer, newIdentity, newLogin, followRequestReceiver, currentKey, newKey, newAlgorithm, ownedKeys, network){
  $putEmpty(network.synchronizer, oldSigner.publicKeyHash, signer.publicKeyHash);
  return $exceptionally($thenApply($applyUpdate(network.synchronizer, oldSigner.publicKeyHash, signer, new WriterData$lambda$20$Type(this$static, currentKey, followRequestReceiver, newIdentity, newKey, network, oldSigner, ownedKeys, signer, username, newLogin, newAlgorithm)), makeLambdaFunction(WriterData$lambda$30$Type.prototype.apply_0, WriterData$lambda$30$Type, [signer])), makeLambdaFunction(WriterData$lambda$31$Type.prototype.apply_0, WriterData$lambda$31$Type, []));
}

function $commit_3(this$static, owner, signer, currentHash, currentSequence, mutable, immutable, hasher, tid){
  var raw;
  raw = $toByteArray_2($toCbor_90(this$static));
  return $thenCompose($thenCompose(hasher.scriptJS.sha256(raw), makeLambdaFunction(WriterData$lambda$34$Type.prototype.apply_0, WriterData$lambda$34$Type, [immutable, owner, signer, raw, tid])), makeLambdaFunction(WriterData$lambda$35$Type.prototype.apply_0, WriterData$lambda$35$Type, [this$static, signer, currentHash, currentSequence, mutable, owner]));
}

function $committed(this$static, hash, sequence){
  return new CommittedWriterData(hash, this$static, sequence);
}

function $getOwnedKeyChamp(this$static, owner, ipfs, hasher){
  return castTo($orElseThrow($map(this$static.ownedKeys, makeLambdaFunction(WriterData$lambda$15$Type.prototype.apply_0, WriterData$lambda$15$Type, [owner, ipfs, hasher])), new WriterData$lambda$16$Type), 6);
}

function $lambda$0_30(this$static, owner_1, ipfs_2, hasher_3, signer_4, newOwned_5, tid_5){
  return $thenApply($thenCompose(this$static.ownedKeys.ref != null?castTo($orElseThrow($map(this$static.ownedKeys, makeLambdaFunction(WriterData$lambda$15$Type.prototype.apply_0, WriterData$lambda$15$Type, [owner_1, ipfs_2, hasher_3])), new WriterData$lambda$16$Type), 6):$thenCompose(createEmpty_0(owner_1, signer_4, ipfs_2, hasher_3, tid_5), makeLambdaFunction(WriterData$lambda$1$Type.prototype.apply_0, WriterData$lambda$1$Type, [owner_1, ipfs_2, hasher_3])), makeLambdaFunction(WriterData$lambda$2$Type.prototype.apply_0, WriterData$lambda$2$Type, [owner_1, signer_4, newOwned_5, hasher_3, tid_5])), makeLambdaFunction(WriterData$lambda$3$Type.prototype.apply_0, WriterData$lambda$3$Type, [this$static]));
}

function $lambda$20_8(this$static, currentKey_1, followRequestReceiver_2, newIdentity_3, newKey_4, network_5, oldSigner_6, ownedKeys_7, signer_8, username_9, newLogin_10, newAlgorithm_11, tid_12){
  var newEntryPoints;
  newEntryPoints = $map(this$static.staticData, makeLambdaFunction(WriterData$lambda$21$Type.prototype.apply_0, WriterData$lambda$21$Type, [currentKey_1, followRequestReceiver_2, newIdentity_3, newKey_4]));
  return $thenCompose($thenCompose(network_5.account.setLoginData_0(new LoginData(username_9, (checkCriticalElement(newEntryPoints.ref != null) , castTo(newEntryPoints.ref, 116)), newLogin_10, ($clinit_Optional() , $clinit_Optional() , EMPTY)), oldSigner_6), makeLambdaFunction(WriterData$lambda$22$Type.prototype.apply_0, WriterData$lambda$22$Type, [network_5, oldSigner_6, followRequestReceiver_2, tid_12])), makeLambdaFunction(WriterData$lambda$24$Type.prototype.apply_0, WriterData$lambda$24$Type, [this$static, ownedKeys_7, signer_8, oldSigner_6, network_5, tid_12, newAlgorithm_11]));
}

function $lambda$24_3(this$static, ownedKeys_1, signer_2, oldSigner_3, network_4, tid_5, newAlgorithm_6, boxerHash_6){
  return $thenCompose(createEmpty_0(oldSigner_3.publicKeyHash, oldSigner_3, network_4.dhtClient, network_4.hasher, tid_5), makeLambdaFunction(WriterData$lambda$25$Type.prototype.apply_0, WriterData$lambda$25$Type, [this$static, ownedKeys_1, signer_2, oldSigner_3, network_4, newAlgorithm_6, boxerHash_6]));
}

function $lambda$25_3(this$static, ownedKeys_1, signer_2, oldSigner_3, network_4, newAlgorithm_5, boxerHash_6, ownedRoot_6){
  var base, newNamedOwnedKeys;
  newNamedOwnedKeys = castTo($collect_0(this$static.namedOwnedKeys.entrySet_0().stream(), toMap(makeLambdaFunction(WriterData$lambda$26$Type.prototype.apply_0, WriterData$lambda$26$Type, []), makeLambdaFunction(WriterData$lambda$27$Type.prototype.apply_0, WriterData$lambda$27$Type, [ownedKeys_1, signer_2]), new Collectors$lambda$44$Type, new Collectors$22methodref$ctor$Type)), 68);
  base = new WriterData(signer_2.publicKeyHash, ($clinit_Optional() , new Optional(checkCriticalNotNull(newAlgorithm_5))), this$static.publicData, new Optional(checkCriticalNotNull(new PublicKeyHash(boxerHash_6))), new Optional(checkCriticalNotNull(ownedRoot_6)), newNamedOwnedKeys, (null , EMPTY), this$static.tree);
  return $thenCompose($getOwnedKeyChamp(this$static, oldSigner_3.publicKeyHash, network_4.dhtClient, network_4.hasher), makeLambdaFunction(WriterData$lambda$28$Type.prototype.apply_0, WriterData$lambda$28$Type, [signer_2, oldSigner_3, ownedKeys_1, network_4, base]));
}

function $lambda$3_22(this$static, newRoot_0){
  return new WriterData(this$static.controller, this$static.generationAlgorithm, this$static.publicData, this$static.followRequestReceiver, ($clinit_Optional() , new Optional(checkCriticalNotNull(newRoot_0))), this$static.namedOwnedKeys, this$static.staticData, this$static.tree);
}

function $lambda$35_3(this$static, signer_1, currentHash_2, currentSequence_3, mutable_4, owner_5, blobHash_5){
  var cas, committed, newHash;
  newHash = ($clinit_MaybeMultihash() , new MaybeMultihash(blobHash_5));
  if ($equals_7(newHash, currentHash_2)) {
    committed = new CommittedWriterData(newHash, this$static, currentSequence_3);
    return new CompletableFuture_0(new Snapshot_0(signer_1.publicKeyHash, committed));
  }
  cas = new PointerUpdate(currentHash_2, newHash, castTo($orElse($map(currentSequence_3, makeLambdaFunction(PointerUpdate$lambda$0$Type.prototype.apply_0, PointerUpdate$lambda$0$Type, [])), ($clinit_Optional() , new Optional(checkCriticalNotNull(valueOf_2(1))))), 12));
  return $thenApply(mutable_4.setPointer(owner_5, signer_1, cas), makeLambdaFunction(WriterData$lambda$36$Type.prototype.apply_0, WriterData$lambda$36$Type, [this$static, newHash, cas, signer_1]));
}

function $lambda$36_4(this$static, newHash_1, cas_2, signer_3, res_3){
  var committed;
  if (!(checkCriticalNotNull(res_3) , res_3))
    throw toJs(new IllegalStateException_0('Mutable pointer update failed! Concurrent Modification.'));
  committed = $committed(this$static, newHash_1, cas_2.sequence);
  return new Snapshot_0(signer_3.publicKeyHash, committed);
}

function $lambda$4_16(this$static, owner_1, signer_2, newOwned_3, network_4, tid_5, champ_5){
  return $thenApply($add_5(champ_5, owner_1, signer_2, newOwned_3, network_4.hasher, tid_5), makeLambdaFunction(WriterData$lambda$5$Type.prototype.apply_0, WriterData$lambda$5$Type, [this$static]));
}

function $lambda$5_16(this$static, newRoot_0){
  return new WriterData(this$static.controller, this$static.generationAlgorithm, this$static.publicData, this$static.followRequestReceiver, ($clinit_Optional() , new Optional(checkCriticalNotNull(newRoot_0))), this$static.namedOwnedKeys, this$static.staticData, this$static.tree);
}

function $lambda$6_15(this$static, c_1, owner_2, signer_3, currentHash_4, currentSequence_5, tid_6, wd_6){
  return c_1.commit_1(owner_2, signer_3, wd_6, new CommittedWriterData(currentHash_4, this$static, currentSequence_5), tid_6);
}

function $lambda$7_9(this$static, owner_1, signer_2, ownedKey_3, ipfs_4, champ_4){
  return $thenApply(call_2(owner_1, makeLambdaFunction(WriterData$lambda$8$Type.prototype.apply_0, WriterData$lambda$8$Type, [champ_4, owner_1, signer_2, ownedKey_3]), ipfs_4), makeLambdaFunction(WriterData$lambda$9$Type.prototype.apply_0, WriterData$lambda$9$Type, [this$static]));
}

function $lambda$9_13(this$static, newRoot_0){
  return new WriterData(this$static.controller, this$static.generationAlgorithm, this$static.publicData, this$static.followRequestReceiver, ($clinit_Optional() , new Optional(checkCriticalNotNull(newRoot_0))), this$static.namedOwnedKeys, this$static.staticData, this$static.tree);
}

function $ownsKey(this$static, identityKey, ownedKey, ipfs, mutable, hasher){
  return $thenCompose(castTo($orElseThrow($map(this$static.ownedKeys, makeLambdaFunction(WriterData$lambda$15$Type.prototype.apply_0, WriterData$lambda$15$Type, [identityKey, ipfs, hasher])), new WriterData$lambda$16$Type), 6), makeLambdaFunction(WriterData$lambda$10$Type.prototype.apply_0, WriterData$lambda$10$Type, [identityKey, ownedKey, ipfs, mutable, hasher]));
}

function $removeOwnedKey(this$static, owner, signer, ownedKey, ipfs, hasher){
  return $thenCompose(castTo($orElseThrow($map(this$static.ownedKeys, makeLambdaFunction(WriterData$lambda$15$Type.prototype.apply_0, WriterData$lambda$15$Type, [owner, ipfs, hasher])), new WriterData$lambda$16$Type), 6), makeLambdaFunction(WriterData$lambda$7$Type.prototype.apply_0, WriterData$lambda$7$Type, [this$static, owner, signer, ownedKey, ipfs]));
}

function $toCbor_90(this$static){
  var result, transformed, transformed0;
  result = new TreeMap;
  $put_6(result, 'controller', new CborObject$CborMerkleLink(this$static.controller));
  $ifPresent(this$static.generationAlgorithm, new WriterData$lambda$37$Type(result));
  $ifPresent(this$static.publicData, new WriterData$lambda$38$Type(result));
  $ifPresent(this$static.followRequestReceiver, new WriterData$lambda$39$Type(result));
  $ifPresent(this$static.ownedKeys, new WriterData$lambda$40$Type(result));
  this$static.namedOwnedKeys.isEmpty() || $put_6(result, 'named', (transformed0 = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new AbstractHashMap$EntrySet(new HashMap_1(this$static.namedOwnedKeys)), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed0)));
  $ifPresent(this$static.staticData, new WriterData$lambda$41$Type(result));
  $ifPresent(this$static.tree, new WriterData$lambda$42$Type(result));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(result), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function $withAlgorithm(this$static, newAlg){
  return new WriterData(this$static.controller, ($clinit_Optional() , new Optional(checkCriticalNotNull(newAlg))), this$static.publicData, this$static.followRequestReceiver, this$static.ownedKeys, this$static.namedOwnedKeys, this$static.staticData, this$static.tree);
}

function $withChamp(this$static, treeRoot){
  return new WriterData(this$static.controller, this$static.generationAlgorithm, this$static.publicData, this$static.followRequestReceiver, this$static.ownedKeys, this$static.namedOwnedKeys, this$static.staticData, ($clinit_Optional() , new Optional(checkCriticalNotNull(treeRoot))));
}

function WriterData(controller, generationAlgorithm, publicData, followRequestReceiver, ownedKeys, namedOwnedKeys, staticData, tree){
  this.controller = controller;
  this.generationAlgorithm = generationAlgorithm;
  this.publicData = publicData;
  this.followRequestReceiver = followRequestReceiver;
  this.ownedKeys = ownedKeys;
  this.namedOwnedKeys = namedOwnedKeys;
  this.staticData = staticData;
  this.tree = tree;
}

function createEmpty_1(owner, writer, ipfs, hasher, tid){
  return $thenApply(createEmpty_0(owner, writer, ipfs, hasher, tid), makeLambdaFunction(WriterData$lambda$18$Type.prototype.apply_0, WriterData$lambda$18$Type, [writer]));
}

function createIdentity(owner, writer, followRequestReceiver, entryData, algorithm, ipfs, hasher, tid){
  return $thenApply(createEmpty_0(owner, writer, ipfs, hasher, tid), makeLambdaFunction(WriterData$lambda$19$Type.prototype.apply_0, WriterData$lambda$19$Type, [writer, algorithm, followRequestReceiver, entryData]));
}

function fromCbor_98(cbor){
  var algo, controller, followRequestReceiver, m, named, owned, publicData, staticData, tree;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Cbor for WriterData should be a map! ' + cbor));
  m = castTo(cbor, 18);
  controller = castTo($get_13(m, 'controller', makeLambdaFunction(WriterData$1methodref$fromCbor$Type.prototype.apply_0, WriterData$1methodref$fromCbor$Type, [])), 55);
  algo = $getOptional(m, 'algorithm', makeLambdaFunction(WriterData$2methodref$fromCbor$Type.prototype.apply_0, WriterData$2methodref$fromCbor$Type, []));
  publicData = $getOptional(m, 'public', makeLambdaFunction(WriterData$lambda$45$Type.prototype.apply_0, WriterData$lambda$45$Type, []));
  followRequestReceiver = $getOptional(m, 'inbound', makeLambdaFunction(WriterData$3methodref$fromCbor$Type.prototype.apply_0, WriterData$3methodref$fromCbor$Type, []));
  owned = $getOptional(m, 'owned', makeLambdaFunction(WriterData$lambda$47$Type.prototype.apply_0, WriterData$lambda$47$Type, []));
  named = castTo($orElseGet($map($getOptional(m, 'named', makeLambdaFunction(WriterData$lambda$48$Type.prototype.apply_0, WriterData$lambda$48$Type, [])), makeLambdaFunction(WriterData$lambda$49$Type.prototype.apply_0, WriterData$lambda$49$Type, [])), new WriterData$lambda$52$Type), 68);
  staticData = $getOptional(m, 'static', makeLambdaFunction(WriterData$5methodref$fromCbor$Type.prototype.apply_0, WriterData$5methodref$fromCbor$Type, []));
  tree = $getOptional(m, 'tree', makeLambdaFunction(WriterData$lambda$54$Type.prototype.apply_0, WriterData$lambda$54$Type, []));
  return new WriterData(controller, algo, publicData, followRequestReceiver, owned, named, staticData, tree);
}

function getWriterData_0(owner, controller, mutable, dht){
  return $thenCompose(mutable.getPointerTarget(owner, controller, dht), makeLambdaFunction(WriterData$lambda$55$Type.prototype.apply_0, WriterData$lambda$55$Type, [controller, owner, dht]));
}

function getWriterData_1(owner, hash, sequence, dht){
  return $thenApply(dht.get_1(owner, hash, ($clinit_Optional() , $clinit_Optional() , EMPTY)), makeLambdaFunction(WriterData$lambda$56$Type.prototype.apply_0, WriterData$lambda$56$Type, [hash, sequence]));
}

function lambda$1_18(owner_0, ipfs_1, hasher_2, root_3){
  return $thenApply(create_4(owner_0, root_3, makeLambdaFunction(OwnedKeyChamp$lambda$2$Type.prototype.apply_0, OwnedKeyChamp$lambda$2$Type, []), ipfs_1, hasher_2, makeLambdaFunction(OwnedKeyChamp$lambda$3$Type.prototype.apply_0, OwnedKeyChamp$lambda$3$Type, [])), makeLambdaFunction(OwnedKeyChamp$lambda$4$Type.prototype.apply_0, OwnedKeyChamp$lambda$4$Type, [ipfs_1]));
}

function lambda$10_8(identityKey_0, ownedKey_1, ipfs_2, mutable_3, hasher_4, champ_5){
  return $thenCompose($thenApply($thenCompose($get_16(champ_5.champ, reverse($toByteArray_2(new CborObject$CborMerkleLink(ownedKey_1.target)))), makeLambdaFunction(OwnedKeyChamp$lambda$5$Type.prototype.apply_0, OwnedKeyChamp$lambda$5$Type, [champ_5, identityKey_0])), makeLambdaFunction(WriterData$0methodref$isPresent$Type.prototype.apply_0, WriterData$0methodref$isPresent$Type, [])), makeLambdaFunction(WriterData$lambda$12$Type.prototype.apply_0, WriterData$lambda$12$Type, [identityKey_0, ownedKey_1, ipfs_2, mutable_3, hasher_4, champ_5]));
}

function lambda$12_6(identityKey_0, ownedKey_1, ipfs_2, mutable_3, hasher_4, champ_5, direct_6){
  if (checkCriticalNotNull(direct_6) , direct_6)
    return new CompletableFuture_0(($clinit_Boolean() , true));
  return $applyToAllMappings(champ_5, identityKey_0, ($clinit_Boolean() , false), new WriterData$lambda$13$Type(identityKey_0, ownedKey_1, ipfs_2, mutable_3, hasher_4), ipfs_2);
}

function lambda$13_4(identityKey_0, ownedKey_1, ipfs_2, mutable_3, hasher_4, b_5, p_6){
  var childKey;
  if (checkCriticalNotNull(b_5) , b_5)
    return new CompletableFuture_0(b_5);
  childKey = castTo(p_6.left, 55);
  return $thenCompose(($clinit_UserContext() , $thenApply($thenCompose($thenCompose(mutable_3.getPointer(identityKey_0, childKey), makeLambdaFunction(UserContext$lambda$484$Type.prototype.apply_0, UserContext$lambda$484$Type, [ipfs_2, identityKey_0, childKey])), makeLambdaFunction(UserContext$lambda$487$Type.prototype.apply_0, UserContext$lambda$487$Type, [ipfs_2, identityKey_0])), makeLambdaFunction(UserContext$lambda$481$Type.prototype.apply_0, UserContext$lambda$481$Type, []))), makeLambdaFunction(WriterData$lambda$14$Type.prototype.apply_0, WriterData$lambda$14$Type, [identityKey_0, ownedKey_1, ipfs_2, mutable_3, hasher_4]));
}

function lambda$14_7(identityKey_0, ownedKey_1, ipfs_2, mutable_3, hasher_4, wd_5){
  return $ownsKey(wd_5.props, identityKey_0, ownedKey_1, ipfs_2, mutable_3, hasher_4);
}

function lambda$15_3(owner_0, ipfs_1, hasher_2, root_3){
  return build_14(owner_0, castTo(root_3, 44), ipfs_1, hasher_2);
}

function lambda$18_5(writer_0, ownedRoot_1){
  return new WriterData(writer_0.publicKeyHash, ($clinit_Optional() , $clinit_Optional() , EMPTY), (null , EMPTY), (null , EMPTY), new Optional(checkCriticalNotNull(ownedRoot_1)), ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP), (null , EMPTY), (null , EMPTY));
}

function lambda$19_6(writer_0, algorithm_1, followRequestReceiver_2, entryData_3, ownedRoot_4){
  return new WriterData(writer_0.publicKeyHash, ($clinit_Optional() , new Optional(checkCriticalNotNull(algorithm_1))), (null , EMPTY), followRequestReceiver_2, new Optional(checkCriticalNotNull(ownedRoot_4)), ($clinit_Collections() , $clinit_Collections() , EMPTY_MAP), entryData_3, (null , EMPTY));
}

function lambda$2_12(owner_0, signer_1, newOwned_2, hasher_3, tid_4, champ_5){
  return $thenCompose(champ_5.ipfs.put_0(owner_0, signer_1, $toByteArray_2($toCbor_7(newOwned_2)), hasher_3, tid_4), makeLambdaFunction(OwnedKeyChamp$lambda$8$Type.prototype.apply_0, OwnedKeyChamp$lambda$8$Type, [champ_5, owner_0, signer_1, newOwned_2, tid_4]));
}

function lambda$21_3(currentKey_0, followRequestReceiver_1, newIdentity_2, newKey_3, sd_4){
  var boxer, identity, staticData;
  staticData = castTo($decrypt_3(sd_4.allEntryPoints, currentKey_0, makeLambdaFunction(UserStaticData$4methodref$fromCbor$Type.prototype.apply_0, UserStaticData$4methodref$fromCbor$Type, [])), 185);
  boxer = ($clinit_Optional() , new Optional(checkCriticalNotNull(castTo($orElse(staticData.boxer, followRequestReceiver_1), 188))));
  identity = new Optional(checkCriticalNotNull(castTo($orElse(staticData.identity, newIdentity_2), 190)));
  return new UserStaticData(staticData.entries_0, newKey_3, identity, boxer);
}

function lambda$22_3(network_0, oldSigner_1, followRequestReceiver_2, tid_3){
  return $thenCompose($sha256(network_0.hasher, $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [$toCbor_11(followRequestReceiver_2.publicBoxingKey), $toCbor_12(followRequestReceiver_2.secretBoxingKey)]))))), makeLambdaFunction(WriterData$lambda$23$Type.prototype.apply_0, WriterData$lambda$23$Type, [network_0, oldSigner_1, followRequestReceiver_2, tid_3]));
}

function lambda$23_4(network_0, oldSigner_1, followRequestReceiver_2, tid_3, boxerHash_4){
  return network_0.dhtClient.putBoxingKey(oldSigner_1.publicKeyHash, $signMessage(oldSigner_1.secret, boxerHash_4), followRequestReceiver_2.publicBoxingKey, tid_3);
}

function lambda$27_3(ownedKeys_0, signer_1, e_2){
  return build_4(castTo($get(ownedKeys_0, castTo(e_2.getValue(), 219).ownedKey), 105), signer_1.publicKeyHash);
}

function lambda$28_2(signer_0, oldSigner_1, ownedKeys_2, network_3, base_4, okChamp_5){
  return $applyToAllMappings(okChamp_5, oldSigner_1.publicKeyHash, base_4, new WriterData$lambda$29$Type(signer_0, oldSigner_1, ownedKeys_2, network_3), network_3.dhtClient);
}

function lambda$29_2(signer_0, oldSigner_1, ownedKeys_2, network_3, nwd_4, p_5){
  return $equals_13(castTo(p_5.left, 55), signer_0.publicKeyHash)?new CompletableFuture_0(nwd_4):$addOwnedKey(nwd_4, oldSigner_1.publicKeyHash, signer_0, build_4(castTo($get(ownedKeys_2, p_5.left), 105), signer_0.publicKeyHash), network_3.dhtClient, network_3.hasher);
}

function lambda$30_2(signer_0, version_1){
  return $get_31(version_1, signer_0).props;
}

function lambda$31_3(t_0){
  if (t_0.getMessage().indexOf('cas+failed') != -1)
    throw toJs(new IllegalStateException_0('You cannot reuse a previous password!'));
  throw toJs(new RuntimeException_2(t_0.cause_0));
}

function lambda$34_3(immutable_0, owner_1, signer_2, raw_3, tid_4, hash_5){
  return immutable_0.put_2(owner_1, signer_2.publicKeyHash, $signMessage(signer_2.secret, hash_5), raw_3, tid_4);
}

function lambda$55_2(controller_0, owner_1, dht_2, opt_3){
  if (!opt_3.updated.hash_0)
    throw toJs(new IllegalStateException_0('No root pointer present for controller ' + controller_0));
  return getWriterData_1(owner_1, castTo($get_9(opt_3.updated), 44), opt_3.sequence, dht_2);
}

function lambda$56_3(hash_0, sequence_1, cborOpt_2){
  if (cborOpt_2.ref == null)
    throw toJs(new IllegalStateException_0("Couldn't retrieve WriterData from dht! " + hash_0));
  return new CommittedWriterData(($clinit_MaybeMultihash() , new MaybeMultihash(hash_0)), fromCbor_98((checkCriticalElement(cborOpt_2.ref != null) , castTo(cborOpt_2.ref, 48))), sequence_1);
}

function lambda$8_7(champ_0, owner_1, signer_2, ownedKey_3, tid_4){
  var keyBytes;
  return keyBytes = reverse($toByteArray_2(new CborObject$CborMerkleLink(ownedKey_3.target))) , $thenCompose($get_16(champ_0.champ, keyBytes), makeLambdaFunction(OwnedKeyChamp$lambda$9$Type.prototype.apply_0, OwnedKeyChamp$lambda$9$Type, [champ_0, owner_1, signer_2, keyBytes, tid_4]));
}

defineClass(121, 1, {7:1, 121:1}, WriterData);
_.serialize = function serialize_121(){
  return $toByteArray_2($toCbor_90(this));
}
;
_.toCbor = function toCbor_119(){
  return $toCbor_90(this);
}
;
var Lpeergos_shared_user_WriterData_2_classLit = createForClass('peergos.shared.user', 'WriterData', 121);
function WriterData$0methodref$isPresent$Type(){
}

defineClass(1553, $wnd.Function, $intern_22, WriterData$0methodref$isPresent$Type);
_.apply_0 = function apply_1900(arg0){
  return $clinit_Boolean() , castTo(arg0, 12).ref != null?true:false;
}
;
function WriterData$1methodref$fromCbor$Type(){
}

defineClass(1534, $wnd.Function, $intern_22, WriterData$1methodref$fromCbor$Type);
_.apply_0 = function apply_1901(arg0){
  return fromCbor_23(castTo(arg0, 7));
}
;
function WriterData$2methodref$fromCbor$Type(){
}

defineClass(1535, $wnd.Function, $intern_22, WriterData$2methodref$fromCbor$Type);
_.apply_0 = function apply_1902(arg0){
  return fromCbor_90(castTo(arg0, 7));
}
;
function WriterData$3methodref$fromCbor$Type(){
}

defineClass(1537, $wnd.Function, $intern_22, WriterData$3methodref$fromCbor$Type);
_.apply_0 = function apply_1903(arg0){
  return fromCbor_23(castTo(arg0, 7));
}
;
function WriterData$4methodref$fromCbor$Type(){
}

defineClass(1567, $wnd.Function, $intern_22, WriterData$4methodref$fromCbor$Type);
_.apply_0 = function apply_1904(arg0){
  return fromCbor_11(castTo(arg0, 7));
}
;
function WriterData$5methodref$fromCbor$Type(){
}

defineClass(1541, $wnd.Function, $intern_22, WriterData$5methodref$fromCbor$Type);
_.apply_0 = function apply_1905(arg0){
  return $clinit_UserStaticData() , new UserStaticData_0(new PaddedCipherText(fromCbor_9(castTo(arg0, 7))));
}
;
function WriterData$lambda$0$Type($$outer_0, owner_1, ipfs_2, hasher_3, signer_4, newOwned_5){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.ipfs_2 = ipfs_2;
  this.hasher_3 = hasher_3;
  this.signer_4 = signer_4;
  this.newOwned_5 = newOwned_5;
}

defineClass(1523, $wnd.Function, $intern_22, WriterData$lambda$0$Type);
_.apply_0 = function apply_1906(arg0){
  return $lambda$0_30(this.$$outer_0, this.owner_1, this.ipfs_2, this.hasher_3, this.signer_4, this.newOwned_5, arg0);
}
;
function WriterData$lambda$1$Type(owner_0, ipfs_1, hasher_2){
  this.owner_0 = owner_0;
  this.ipfs_1 = ipfs_1;
  this.hasher_2 = hasher_2;
}

defineClass(1545, $wnd.Function, $intern_22, WriterData$lambda$1$Type);
_.apply_0 = function apply_1907(arg0){
  return lambda$1_18(this.owner_0, this.ipfs_1, this.hasher_2, arg0);
}
;
function WriterData$lambda$10$Type(identityKey_0, ownedKey_1, ipfs_2, mutable_3, hasher_4){
  this.identityKey_0 = identityKey_0;
  this.ownedKey_1 = ownedKey_1;
  this.ipfs_2 = ipfs_2;
  this.mutable_3 = mutable_3;
  this.hasher_4 = hasher_4;
}

defineClass(1527, $wnd.Function, $intern_22, WriterData$lambda$10$Type);
_.apply_0 = function apply_1908(arg0){
  return lambda$10_8(this.identityKey_0, this.ownedKey_1, this.ipfs_2, this.mutable_3, this.hasher_4, arg0);
}
;
function WriterData$lambda$12$Type(identityKey_0, ownedKey_1, ipfs_2, mutable_3, hasher_4, champ_5){
  this.identityKey_0 = identityKey_0;
  this.ownedKey_1 = ownedKey_1;
  this.ipfs_2 = ipfs_2;
  this.mutable_3 = mutable_3;
  this.hasher_4 = hasher_4;
  this.champ_5 = champ_5;
}

defineClass(1554, $wnd.Function, $intern_22, WriterData$lambda$12$Type);
_.apply_0 = function apply_1909(arg0){
  return lambda$12_6(this.identityKey_0, this.ownedKey_1, this.ipfs_2, this.mutable_3, this.hasher_4, this.champ_5, arg0);
}
;
function WriterData$lambda$13$Type(identityKey_0, ownedKey_1, ipfs_2, mutable_3, hasher_4){
  this.identityKey_0 = identityKey_0;
  this.ownedKey_1 = ownedKey_1;
  this.ipfs_2 = ipfs_2;
  this.mutable_3 = mutable_3;
  this.hasher_4 = hasher_4;
}

defineClass(615, 1, $intern_34, WriterData$lambda$13$Type);
_.apply_1 = function apply_1910(arg0, arg1){
  return lambda$13_4(this.identityKey_0, this.ownedKey_1, this.ipfs_2, this.mutable_3, this.hasher_4, arg0, arg1);
}
;
var Lpeergos_shared_user_WriterData$lambda$13$Type_2_classLit = createForClass('peergos.shared.user', 'WriterData/lambda$13$Type', 615);
function WriterData$lambda$14$Type(identityKey_0, ownedKey_1, ipfs_2, mutable_3, hasher_4){
  this.identityKey_0 = identityKey_0;
  this.ownedKey_1 = ownedKey_1;
  this.ipfs_2 = ipfs_2;
  this.mutable_3 = mutable_3;
  this.hasher_4 = hasher_4;
}

defineClass(1556, $wnd.Function, $intern_22, WriterData$lambda$14$Type);
_.apply_0 = function apply_1911(arg0){
  return lambda$14_7(this.identityKey_0, this.ownedKey_1, this.ipfs_2, this.mutable_3, this.hasher_4, arg0);
}
;
function WriterData$lambda$15$Type(owner_0, ipfs_1, hasher_2){
  this.owner_0 = owner_0;
  this.ipfs_1 = ipfs_1;
  this.hasher_2 = hasher_2;
}

defineClass(538, $wnd.Function, $intern_22, WriterData$lambda$15$Type);
_.apply_0 = function apply_1912(arg0){
  return lambda$15_3(this.owner_0, this.ipfs_1, this.hasher_2, arg0);
}
;
function WriterData$lambda$16$Type(){
}

defineClass(342, 1, {}, WriterData$lambda$16$Type);
_.get_0 = function get_145(){
  return new IllegalStateException_0('Owned key champ absent!');
}
;
var Lpeergos_shared_user_WriterData$lambda$16$Type_2_classLit = createForClass('peergos.shared.user', 'WriterData/lambda$16$Type', 342);
function WriterData$lambda$18$Type(writer_0){
  this.writer_0 = writer_0;
}

defineClass(1528, $wnd.Function, $intern_22, WriterData$lambda$18$Type);
_.apply_0 = function apply_1913(arg0){
  return lambda$18_5(this.writer_0, arg0);
}
;
function WriterData$lambda$19$Type(writer_0, algorithm_1, followRequestReceiver_2, entryData_3){
  this.writer_0 = writer_0;
  this.algorithm_1 = algorithm_1;
  this.followRequestReceiver_2 = followRequestReceiver_2;
  this.entryData_3 = entryData_3;
}

defineClass(1529, $wnd.Function, $intern_22, WriterData$lambda$19$Type);
_.apply_0 = function apply_1914(arg0){
  return lambda$19_6(this.writer_0, this.algorithm_1, this.followRequestReceiver_2, this.entryData_3, arg0);
}
;
function WriterData$lambda$2$Type(owner_0, signer_1, newOwned_2, hasher_3, tid_4){
  this.owner_0 = owner_0;
  this.signer_1 = signer_1;
  this.newOwned_2 = newOwned_2;
  this.hasher_3 = hasher_3;
  this.tid_4 = tid_4;
}

defineClass(1546, $wnd.Function, $intern_22, WriterData$lambda$2$Type);
_.apply_0 = function apply_1915(arg0){
  return lambda$2_12(this.owner_0, this.signer_1, this.newOwned_2, this.hasher_3, this.tid_4, arg0);
}
;
function WriterData$lambda$20$Type($$outer_0, currentKey_1, followRequestReceiver_2, newIdentity_3, newKey_4, network_5, oldSigner_6, ownedKeys_7, signer_8, username_9, newLogin_10, newAlgorithm_11){
  this.$$outer_0 = $$outer_0;
  this.currentKey_1 = currentKey_1;
  this.followRequestReceiver_2 = followRequestReceiver_2;
  this.newIdentity_3 = newIdentity_3;
  this.newKey_4 = newKey_4;
  this.network_5 = network_5;
  this.oldSigner_6 = oldSigner_6;
  this.ownedKeys_7 = ownedKeys_7;
  this.signer_8 = signer_8;
  this.username_9 = username_9;
  this.newLogin_10 = newLogin_10;
  this.newAlgorithm_11 = newAlgorithm_11;
}

defineClass(617, 1, {}, WriterData$lambda$20$Type);
_.apply_4 = function apply_1916(arg0, arg1){
  return $lambda$20_8(this.$$outer_0, this.currentKey_1, this.followRequestReceiver_2, this.newIdentity_3, this.newKey_4, this.network_5, this.oldSigner_6, this.ownedKeys_7, this.signer_8, this.username_9, this.newLogin_10, this.newAlgorithm_11, arg1);
}
;
var Lpeergos_shared_user_WriterData$lambda$20$Type_2_classLit = createForClass('peergos.shared.user', 'WriterData/lambda$20$Type', 617);
function WriterData$lambda$21$Type(currentKey_0, followRequestReceiver_1, newIdentity_2, newKey_3){
  this.currentKey_0 = currentKey_0;
  this.followRequestReceiver_1 = followRequestReceiver_1;
  this.newIdentity_2 = newIdentity_2;
  this.newKey_3 = newKey_3;
}

defineClass(1557, $wnd.Function, $intern_22, WriterData$lambda$21$Type);
_.apply_0 = function apply_1917(arg0){
  return lambda$21_3(this.currentKey_0, this.followRequestReceiver_1, this.newIdentity_2, this.newKey_3, arg0);
}
;
function WriterData$lambda$22$Type(network_0, oldSigner_1, followRequestReceiver_2, tid_3){
  this.network_0 = network_0;
  this.oldSigner_1 = oldSigner_1;
  this.followRequestReceiver_2 = followRequestReceiver_2;
  this.tid_3 = tid_3;
}

defineClass(1558, $wnd.Function, $intern_22, WriterData$lambda$22$Type);
_.apply_0 = function apply_1918(arg0){
  return lambda$22_3(this.network_0, this.oldSigner_1, this.followRequestReceiver_2, this.tid_3);
}
;
function WriterData$lambda$23$Type(network_0, oldSigner_1, followRequestReceiver_2, tid_3){
  this.network_0 = network_0;
  this.oldSigner_1 = oldSigner_1;
  this.followRequestReceiver_2 = followRequestReceiver_2;
  this.tid_3 = tid_3;
}

defineClass(1560, $wnd.Function, $intern_22, WriterData$lambda$23$Type);
_.apply_0 = function apply_1919(arg0){
  return lambda$23_4(this.network_0, this.oldSigner_1, this.followRequestReceiver_2, this.tid_3, arg0);
}
;
function WriterData$lambda$24$Type($$outer_0, ownedKeys_1, signer_2, oldSigner_3, network_4, tid_5, newAlgorithm_6){
  this.$$outer_0 = $$outer_0;
  this.ownedKeys_1 = ownedKeys_1;
  this.signer_2 = signer_2;
  this.oldSigner_3 = oldSigner_3;
  this.network_4 = network_4;
  this.tid_5 = tid_5;
  this.newAlgorithm_6 = newAlgorithm_6;
}

defineClass(1559, $wnd.Function, $intern_22, WriterData$lambda$24$Type);
_.apply_0 = function apply_1920(arg0){
  return $lambda$24_3(this.$$outer_0, this.ownedKeys_1, this.signer_2, this.oldSigner_3, this.network_4, this.tid_5, this.newAlgorithm_6, arg0);
}
;
function WriterData$lambda$25$Type($$outer_0, ownedKeys_1, signer_2, oldSigner_3, network_4, newAlgorithm_5, boxerHash_6){
  this.$$outer_0 = $$outer_0;
  this.ownedKeys_1 = ownedKeys_1;
  this.signer_2 = signer_2;
  this.oldSigner_3 = oldSigner_3;
  this.network_4 = network_4;
  this.newAlgorithm_5 = newAlgorithm_5;
  this.boxerHash_6 = boxerHash_6;
}

defineClass(1561, $wnd.Function, $intern_22, WriterData$lambda$25$Type);
_.apply_0 = function apply_1921(arg0){
  return $lambda$25_3(this.$$outer_0, this.ownedKeys_1, this.signer_2, this.oldSigner_3, this.network_4, this.newAlgorithm_5, this.boxerHash_6, arg0);
}
;
function WriterData$lambda$26$Type(){
}

defineClass(1562, $wnd.Function, $intern_22, WriterData$lambda$26$Type);
_.apply_0 = function apply_1922(arg0){
  return castToString(castTo(arg0, 40).getKey());
}
;
function WriterData$lambda$27$Type(ownedKeys_0, signer_1){
  this.ownedKeys_0 = ownedKeys_0;
  this.signer_1 = signer_1;
}

defineClass(1563, $wnd.Function, $intern_22, WriterData$lambda$27$Type);
_.apply_0 = function apply_1923(arg0){
  return lambda$27_3(this.ownedKeys_0, this.signer_1, arg0);
}
;
function WriterData$lambda$28$Type(signer_0, oldSigner_1, ownedKeys_2, network_3, base_4){
  this.signer_0 = signer_0;
  this.oldSigner_1 = oldSigner_1;
  this.ownedKeys_2 = ownedKeys_2;
  this.network_3 = network_3;
  this.base_4 = base_4;
}

defineClass(1564, $wnd.Function, $intern_22, WriterData$lambda$28$Type);
_.apply_0 = function apply_1924(arg0){
  return lambda$28_2(this.signer_0, this.oldSigner_1, this.ownedKeys_2, this.network_3, this.base_4, arg0);
}
;
function WriterData$lambda$29$Type(signer_0, oldSigner_1, ownedKeys_2, network_3){
  this.signer_0 = signer_0;
  this.oldSigner_1 = oldSigner_1;
  this.ownedKeys_2 = ownedKeys_2;
  this.network_3 = network_3;
}

defineClass(616, 1, $intern_34, WriterData$lambda$29$Type);
_.apply_1 = function apply_1925(arg0, arg1){
  return lambda$29_2(this.signer_0, this.oldSigner_1, this.ownedKeys_2, this.network_3, arg0, arg1);
}
;
var Lpeergos_shared_user_WriterData$lambda$29$Type_2_classLit = createForClass('peergos.shared.user', 'WriterData/lambda$29$Type', 616);
function WriterData$lambda$3$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1547, $wnd.Function, $intern_22, WriterData$lambda$3$Type);
_.apply_0 = function apply_1926(arg0){
  return $lambda$3_22(this.$$outer_0, arg0);
}
;
function WriterData$lambda$30$Type(signer_0){
  this.signer_0 = signer_0;
}

defineClass(1530, $wnd.Function, $intern_22, WriterData$lambda$30$Type);
_.apply_0 = function apply_1927(arg0){
  return lambda$30_2(this.signer_0, arg0);
}
;
function WriterData$lambda$31$Type(){
}

defineClass(1531, $wnd.Function, $intern_22, WriterData$lambda$31$Type);
_.apply_0 = function apply_1928(arg0){
  return lambda$31_3(arg0);
}
;
function WriterData$lambda$34$Type(immutable_0, owner_1, signer_2, raw_3, tid_4){
  this.immutable_0 = immutable_0;
  this.owner_1 = owner_1;
  this.signer_2 = signer_2;
  this.raw_3 = raw_3;
  this.tid_4 = tid_4;
}

defineClass(1532, $wnd.Function, $intern_22, WriterData$lambda$34$Type);
_.apply_0 = function apply_1929(arg0){
  return lambda$34_3(this.immutable_0, this.owner_1, this.signer_2, this.raw_3, this.tid_4, arg0);
}
;
function WriterData$lambda$35$Type($$outer_0, signer_1, currentHash_2, currentSequence_3, mutable_4, owner_5){
  this.$$outer_0 = $$outer_0;
  this.signer_1 = signer_1;
  this.currentHash_2 = currentHash_2;
  this.currentSequence_3 = currentSequence_3;
  this.mutable_4 = mutable_4;
  this.owner_5 = owner_5;
}

defineClass(1533, $wnd.Function, $intern_22, WriterData$lambda$35$Type);
_.apply_0 = function apply_1930(arg0){
  return $lambda$35_3(this.$$outer_0, this.signer_1, this.currentHash_2, this.currentSequence_3, this.mutable_4, this.owner_5, arg0);
}
;
function WriterData$lambda$36$Type($$outer_0, newHash_1, cas_2, signer_3){
  this.$$outer_0 = $$outer_0;
  this.newHash_1 = newHash_1;
  this.cas_2 = cas_2;
  this.signer_3 = signer_3;
}

defineClass(1565, $wnd.Function, $intern_22, WriterData$lambda$36$Type);
_.apply_0 = function apply_1931(arg0){
  return $lambda$36_4(this.$$outer_0, this.newHash_1, this.cas_2, this.signer_3, arg0);
}
;
function WriterData$lambda$37$Type(result_0){
  this.result_0 = result_0;
}

defineClass(618, 1, $intern_32, WriterData$lambda$37$Type);
_.accept = function accept_149(arg0){
  $put_6(this.result_0, 'algorithm', castTo(arg0, 441).toCbor());
}
;
_.andThen = function andThen_73(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_WriterData$lambda$37$Type_2_classLit = createForClass('peergos.shared.user', 'WriterData/lambda$37$Type', 618);
function WriterData$lambda$38$Type(result_0){
  this.result_0 = result_0;
}

defineClass(619, 1, $intern_32, WriterData$lambda$38$Type);
_.accept = function accept_150(arg0){
  $put_6(this.result_0, 'public', new CborObject$CborMerkleLink(castTo(arg0, 58)));
}
;
_.andThen = function andThen_74(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_WriterData$lambda$38$Type_2_classLit = createForClass('peergos.shared.user', 'WriterData/lambda$38$Type', 619);
function WriterData$lambda$39$Type(result_0){
  this.result_0 = result_0;
}

defineClass(620, 1, $intern_32, WriterData$lambda$39$Type);
_.accept = function accept_151(arg0){
  $put_6(this.result_0, 'inbound', new CborObject$CborMerkleLink(castTo(arg0, 55)));
}
;
_.andThen = function andThen_75(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_WriterData$lambda$39$Type_2_classLit = createForClass('peergos.shared.user', 'WriterData/lambda$39$Type', 620);
function WriterData$lambda$4$Type($$outer_0, owner_1, signer_2, newOwned_3, network_4, tid_5){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.signer_2 = signer_2;
  this.newOwned_3 = newOwned_3;
  this.network_4 = network_4;
  this.tid_5 = tid_5;
}

defineClass(1524, $wnd.Function, $intern_22, WriterData$lambda$4$Type);
_.apply_0 = function apply_1932(arg0){
  return $lambda$4_16(this.$$outer_0, this.owner_1, this.signer_2, this.newOwned_3, this.network_4, this.tid_5, arg0);
}
;
function WriterData$lambda$40$Type(result_0){
  this.result_0 = result_0;
}

defineClass(621, 1, $intern_32, WriterData$lambda$40$Type);
_.accept = function accept_152(arg0){
  $put_6(this.result_0, 'owned', new CborObject$CborMerkleLink(castTo(arg0, 58)));
}
;
_.andThen = function andThen_76(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_WriterData$lambda$40$Type_2_classLit = createForClass('peergos.shared.user', 'WriterData/lambda$40$Type', 621);
function WriterData$lambda$41$Type(result_0){
  this.result_0 = result_0;
}

defineClass(622, 1, $intern_32, WriterData$lambda$41$Type);
_.accept = function accept_153(arg0){
  $put_6(this.result_0, 'static', $toCbor_5(castTo(arg0, 116).allEntryPoints.cipherText));
}
;
_.andThen = function andThen_77(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_WriterData$lambda$41$Type_2_classLit = createForClass('peergos.shared.user', 'WriterData/lambda$41$Type', 622);
function WriterData$lambda$42$Type(result_0){
  this.result_0 = result_0;
}

defineClass(623, 1, $intern_32, WriterData$lambda$42$Type);
_.accept = function accept_154(arg0){
  $put_6(this.result_0, 'tree', new CborObject$CborMerkleLink(castTo(arg0, 58)));
}
;
_.andThen = function andThen_78(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_WriterData$lambda$42$Type_2_classLit = createForClass('peergos.shared.user', 'WriterData/lambda$42$Type', 623);
function WriterData$lambda$45$Type(){
}

defineClass(1536, $wnd.Function, $intern_22, WriterData$lambda$45$Type);
_.apply_0 = function apply_1933(arg0){
  return castTo(castTo(arg0, 7), 53).target;
}
;
function WriterData$lambda$47$Type(){
}

defineClass(1538, $wnd.Function, $intern_22, WriterData$lambda$47$Type);
_.apply_0 = function apply_1934(arg0){
  return castTo(castTo(arg0, 7), 53).target;
}
;
function WriterData$lambda$48$Type(){
}

defineClass(1539, $wnd.Function, $intern_22, WriterData$lambda$48$Type);
_.apply_0 = function apply_1935(arg0){
  return castTo(castTo(arg0, 7), 18);
}
;
function WriterData$lambda$49$Type(){
}

defineClass(1540, $wnd.Function, $intern_22, WriterData$lambda$49$Type);
_.apply_0 = function apply_1936(arg0){
  return $toMap(castTo(arg0, 18), makeLambdaFunction(WriterData$lambda$50$Type.prototype.apply_0, WriterData$lambda$50$Type, []), makeLambdaFunction(WriterData$4methodref$fromCbor$Type.prototype.apply_0, WriterData$4methodref$fromCbor$Type, []));
}
;
function WriterData$lambda$5$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1548, $wnd.Function, $intern_22, WriterData$lambda$5$Type);
_.apply_0 = function apply_1937(arg0){
  return $lambda$5_16(this.$$outer_0, arg0);
}
;
function WriterData$lambda$50$Type(){
}

defineClass(1566, $wnd.Function, $intern_22, WriterData$lambda$50$Type);
_.apply_0 = function apply_1938(arg0){
  return castTo(castTo(arg0, 7), 13).value_0;
}
;
function WriterData$lambda$52$Type(){
}

defineClass(624, 1, {}, WriterData$lambda$52$Type);
_.get_0 = function get_146(){
  return $clinit_Collections() , $clinit_Collections() , EMPTY_MAP;
}
;
var Lpeergos_shared_user_WriterData$lambda$52$Type_2_classLit = createForClass('peergos.shared.user', 'WriterData/lambda$52$Type', 624);
function WriterData$lambda$54$Type(){
}

defineClass(1542, $wnd.Function, $intern_22, WriterData$lambda$54$Type);
_.apply_0 = function apply_1939(arg0){
  return castTo(castTo(arg0, 7), 53).target;
}
;
function WriterData$lambda$55$Type(controller_0, owner_1, dht_2){
  this.controller_0 = controller_0;
  this.owner_1 = owner_1;
  this.dht_2 = dht_2;
}

defineClass(1543, $wnd.Function, $intern_22, WriterData$lambda$55$Type);
_.apply_0 = function apply_1940(arg0){
  return lambda$55_2(this.controller_0, this.owner_1, this.dht_2, arg0);
}
;
function WriterData$lambda$56$Type(hash_0, sequence_1){
  this.hash_0 = hash_0;
  this.sequence_1 = sequence_1;
}

defineClass(1544, $wnd.Function, $intern_22, WriterData$lambda$56$Type);
_.apply_0 = function apply_1941(arg0){
  return lambda$56_3(this.hash_0, this.sequence_1, arg0);
}
;
function WriterData$lambda$6$Type($$outer_0, c_1, owner_2, signer_3, currentHash_4, currentSequence_5, tid_6){
  this.$$outer_0 = $$outer_0;
  this.c_1 = c_1;
  this.owner_2 = owner_2;
  this.signer_3 = signer_3;
  this.currentHash_4 = currentHash_4;
  this.currentSequence_5 = currentSequence_5;
  this.tid_6 = tid_6;
}

defineClass(1525, $wnd.Function, $intern_22, WriterData$lambda$6$Type);
_.apply_0 = function apply_1942(arg0){
  return $lambda$6_15(this.$$outer_0, this.c_1, this.owner_2, this.signer_3, this.currentHash_4, this.currentSequence_5, this.tid_6, arg0);
}
;
function WriterData$lambda$7$Type($$outer_0, owner_1, signer_2, ownedKey_3, ipfs_4){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.signer_2 = signer_2;
  this.ownedKey_3 = ownedKey_3;
  this.ipfs_4 = ipfs_4;
}

defineClass(1526, $wnd.Function, $intern_22, WriterData$lambda$7$Type);
_.apply_0 = function apply_1943(arg0){
  return $lambda$7_9(this.$$outer_0, this.owner_1, this.signer_2, this.ownedKey_3, this.ipfs_4, arg0);
}
;
function WriterData$lambda$8$Type(champ_0, owner_1, signer_2, ownedKey_3){
  this.champ_0 = champ_0;
  this.owner_1 = owner_1;
  this.signer_2 = signer_2;
  this.ownedKey_3 = ownedKey_3;
}

defineClass(1549, $wnd.Function, $intern_22, WriterData$lambda$8$Type);
_.apply_0 = function apply_1944(arg0){
  return lambda$8_7(this.champ_0, this.owner_1, this.signer_2, this.ownedKey_3, arg0);
}
;
function WriterData$lambda$9$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1550, $wnd.Function, $intern_22, WriterData$lambda$9$Type);
_.apply_0 = function apply_1945(arg0){
  return $lambda$9_13(this.$$outer_0, arg0);
}
;
function $equals_24(this$static, o){
  var that;
  if (maskUndefined(this$static) === maskUndefined(o))
    return true;
  if (o == null || this$static.___clazz != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 71);
  return equals_28(this$static.owner, that.owner) && equals_28(this$static.writer, that.writer) && equals_16(this$static.mapKey, that.mapKey) && equals_28(this$static.rBaseKey, that.rBaseKey);
}

function $getLocation(this$static){
  return new Location_0(this$static.owner, this$static.writer, this$static.mapKey);
}

function $getMapKey(this$static){
  return copyOf(this$static.mapKey, this$static.mapKey.length);
}

function $hashCode_2(this$static){
  var result;
  result = hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this$static.owner, this$static.writer, this$static.rBaseKey]));
  result = 31 * result + hashCode_17(this$static.mapKey);
  return result;
}

function $isNull(this$static){
  var nullUser;
  nullUser = ($clinit_PublicKeyHash() , NULL);
  return $equals_13(nullUser, this$static.owner) && $equals_13(nullUser, this$static.writer) && equals_16(copyOf(this$static.mapKey, this$static.mapKey.length), initUnidimensionalArray(B_classLit, $intern_28, 8, 32, 15, 1)) && this$static.bat.ref == null && $equals_14(this$static.rBaseKey, ($clinit_SymmetricKey() , new TweetNaClKey(initUnidimensionalArray(B_classLit, $intern_28, 8, 32, 15, 1), false, castTo($get(PROVIDERS_1, ($clinit_SymmetricKey$Type() , TweetNaCl)), 91), castTo($get(RNG_PROVIDERS_0, TweetNaCl), 86))));
}

function $readOnly(this$static){
  return new AbsoluteCapability_0(this$static.owner, this$static.writer, this$static.mapKey, this$static.bat, this$static.rBaseKey, ($clinit_Optional() , $clinit_Optional() , EMPTY));
}

function $toCbor_91(this$static){
  var cbor, transformed;
  cbor = new TreeMap;
  $put_6(cbor, 'o', new CborObject$CborMerkleLink(this$static.owner.target));
  $put_6(cbor, 'w', new CborObject$CborMerkleLink(this$static.writer.target));
  $put_6(cbor, 'm', new CborObject$CborByteArray(this$static.mapKey));
  $ifPresent(this$static.bat, new AbsoluteCapability$lambda$1$Type(cbor));
  $put_6(cbor, 'k', $toCbor_15(this$static.rBaseKey));
  $ifPresent(this$static.wBaseKey, new AbsoluteCapability$lambda$2$Type(cbor));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(cbor), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function $toLink(this$static){
  var encodedBaseKey, encodedMapKeyAndBat, encodedOwnerKey, encodedWriterKey;
  encodedOwnerKey = encode_4($toByteArray_2(new CborObject$CborMerkleLink(this$static.owner.target)));
  encodedWriterKey = encode_4($toByteArray_2(new CborObject$CborMerkleLink(this$static.writer.target)));
  encodedMapKeyAndBat = encode_4(concat_0(this$static.mapKey, castTo($orElse($map(this$static.bat, makeLambdaFunction(AbsoluteCapability$0methodref$serialize$Type.prototype.apply_0, AbsoluteCapability$0methodref$serialize$Type, [])), initUnidimensionalArray(B_classLit, $intern_28, 8, 0, 15, 1)), 11)));
  encodedBaseKey = encode_4($toByteArray_2($toCbor_15(this$static.rBaseKey)));
  return castToString($collect_0(of_5(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [encodedOwnerKey, encodedWriterKey, encodedMapKeyAndBat, encodedBaseKey])), of_3(new Collectors$lambda$15$Type('/', '#'), new Collectors$9methodref$add$Type, new Collectors$10methodref$merge$Type, makeLambdaFunction(Collectors$11methodref$toString$Type.prototype.apply_0, Collectors$11methodref$toString$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, []))));
}

function $toWritable(this$static, writeBaseKey){
  return new WritableAbsoluteCapability(this$static.owner, this$static.writer, this$static.mapKey, this$static.bat, this$static.rBaseKey, writeBaseKey);
}

function $withMapKey(this$static, newMapKey, newBat){
  return new AbsoluteCapability_0(this$static.owner, this$static.writer, newMapKey, newBat, this$static.rBaseKey, this$static.wBaseKey);
}

function AbsoluteCapability(owner, writer, mapKey, bat, rBaseKey){
  AbsoluteCapability_0.call(this, owner, writer, mapKey, bat, rBaseKey, ($clinit_Optional() , $clinit_Optional() , EMPTY));
}

function AbsoluteCapability_0(owner, writer, mapKey, bat, rBaseKey, wBaseKey){
  if (mapKey.length != 32)
    throw toJs(new IllegalStateException_0('Invalid map key length: ' + mapKey.length));
  this.owner = owner;
  this.writer = writer;
  this.mapKey = mapKey;
  this.bat = bat;
  this.rBaseKey = rBaseKey;
  this.wBaseKey = wBaseKey;
}

function fromCbor_99(cbor){
  var baseKey, bat, map_0, mapKey, owner, writer, writerBaseKey;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Incorrect cbor for AbsoluteCapability: ' + cbor));
  map_0 = castTo(cbor, 18);
  owner = fromCbor_23(castTo($get_0(map_0.values_0, new CborObject$CborString('o')), 7));
  writer = fromCbor_23(castTo($get_0(map_0.values_0, new CborObject$CborString('w')), 7));
  mapKey = castTo(castTo($get_0(map_0.values_0, new CborObject$CborString('m')), 7), 27).value_0;
  bat = $getOptional(map_0, 'a', makeLambdaFunction(AbsoluteCapability$1methodref$fromCbor$Type.prototype.apply_0, AbsoluteCapability$1methodref$fromCbor$Type, []));
  baseKey = fromCbor_24(castTo($get_0(map_0.values_0, new CborObject$CborString('k')), 7));
  writerBaseKey = $map(ofNullable(castTo($get_0(map_0.values_0, new CborObject$CborString('b')), 7)), makeLambdaFunction(AbsoluteCapability$2methodref$fromCbor$Type.prototype.apply_0, AbsoluteCapability$2methodref$fromCbor$Type, []));
  if (writerBaseKey.ref != null)
    return new WritableAbsoluteCapability(owner, writer, mapKey, bat, baseKey, (checkCriticalElement(writerBaseKey.ref != null) , castTo(writerBaseKey.ref, 88)));
  return new AbsoluteCapability_0(owner, writer, mapKey, bat, baseKey, writerBaseKey);
}

function fromLink(keysString){
  var baseKey, baseWKey, bat, mapKey, mapKeyAndBat, owner, split_0, writer;
  $equals_0(keysString.substr(0, 1), '#') && (keysString = keysString.substr(1));
  split_0 = $split(keysString, '/');
  if (split_0.length == 4 || split_0.length == 5) {
    owner = fromCbor_23(fromByteArray(decode_6(split_0[0])));
    writer = fromCbor_23(fromByteArray(decode_6(split_0[1])));
    mapKeyAndBat = decode_6(split_0[2]);
    bat = mapKeyAndBat.length == 32?($clinit_Optional() , $clinit_Optional() , EMPTY):($clinit_Optional() , new Optional(checkCriticalNotNull(fromCbor_75(fromByteArray(copyOfRange(mapKeyAndBat, 32, mapKeyAndBat.length))))));
    mapKey = (checkCopyOfRange(mapKeyAndBat, 0, 32) , copyPrimitiveByteArray(mapKeyAndBat, initUnidimensionalArray(B_classLit, $intern_28, 8, 32, 15, 1), 0, 32));
    baseKey = fromByteArray_2(decode_6(split_0[3]));
    if (split_0.length == 4)
      return new AbsoluteCapability_0(owner, writer, mapKey, bat, baseKey, ($clinit_Optional() , $clinit_Optional() , EMPTY));
    baseWKey = fromByteArray_2(decode_6(split_0[4]));
    return new WritableAbsoluteCapability(owner, writer, mapKey, bat, baseKey, baseWKey);
  }
   else 
    throw toJs(new IllegalStateException_0('Invalid public link ' + keysString));
}

defineClass(71, 1, {7:1, 71:1}, AbsoluteCapability, AbsoluteCapability_0);
_.serialize = function serialize_122(){
  return $toByteArray_2($toCbor_91(this));
}
;
_.toCbor = function toCbor_120(){
  return $toCbor_91(this);
}
;
_.equals_0 = function equals_95(o){
  return $equals_24(this, o);
}
;
_.getMapKey = function getMapKey(){
  return $getMapKey(this);
}
;
_.hashCode_1 = function hashCode_92(){
  return $hashCode_2(this);
}
;
_.isWritable = function isWritable(){
  return this.wBaseKey.ref != null;
}
;
_.toLink_0 = function toLink(){
  return $toLink(this);
}
;
_.withMapKey = function withMapKey(newMapKey, newBat){
  return $withMapKey(this, newMapKey, newBat);
}
;
_.withOwner_0 = function withOwner_0(owner){
  return new AbsoluteCapability_0(owner, this.writer, this.mapKey, this.bat, this.rBaseKey, this.wBaseKey);
}
;
var Lpeergos_shared_user_fs_AbsoluteCapability_2_classLit = createForClass('peergos.shared.user.fs', 'AbsoluteCapability', 71);
function AbsoluteCapability$0methodref$serialize$Type(){
}

defineClass(1429, $wnd.Function, $intern_22, AbsoluteCapability$0methodref$serialize$Type);
_.apply_0 = function apply_1946(arg0){
  return castTo(arg0, 7).serialize();
}
;
function AbsoluteCapability$1methodref$fromCbor$Type(){
}

defineClass(1430, $wnd.Function, $intern_22, AbsoluteCapability$1methodref$fromCbor$Type);
_.apply_0 = function apply_1947(arg0){
  return fromCbor_75(castTo(arg0, 7));
}
;
function AbsoluteCapability$2methodref$fromCbor$Type(){
}

defineClass(1431, $wnd.Function, $intern_22, AbsoluteCapability$2methodref$fromCbor$Type);
_.apply_0 = function apply_1948(arg0){
  return fromCbor_24(castTo(arg0, 7));
}
;
function AbsoluteCapability$lambda$1$Type(cbor_0){
  this.cbor_0 = cbor_0;
}

defineClass(581, 1, $intern_32, AbsoluteCapability$lambda$1$Type);
_.accept = function accept_155(arg0){
  $put_6(this.cbor_0, 'a', castTo(arg0, 61));
}
;
_.andThen = function andThen_79(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_fs_AbsoluteCapability$lambda$1$Type_2_classLit = createForClass('peergos.shared.user.fs', 'AbsoluteCapability/lambda$1$Type', 581);
function AbsoluteCapability$lambda$2$Type(cbor_0){
  this.cbor_0 = cbor_0;
}

defineClass(582, 1, $intern_32, AbsoluteCapability$lambda$2$Type);
_.accept = function accept_156(arg0){
  $put_6(this.cbor_0, 'b', $toCbor_15(castTo(arg0, 161)));
}
;
_.andThen = function andThen_80(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_fs_AbsoluteCapability$lambda$2$Type_2_classLit = createForClass('peergos.shared.user.fs', 'AbsoluteCapability/lambda$2$Type', 582);
function $lambda$0_31(this$static, in_1, accumulator_2, fromCbor_3, buf_4, maxBytesToRead_5, bytesRead_5){
  var fromThisChunk, localOffset, readObject;
  for (localOffset = 0; localOffset < bytesRead_5.value_0;) {
    try {
      readObject = read_9(in_1, bytesRead_5.value_0);
      accumulator_2.accept(fromCbor_3(readObject));
      localOffset += readObject.toByteArray_0().length;
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 35)) {
        fromThisChunk = localOffset;
        return $thenApply(this$static.parseStreamRecurse(copyOfRange(buf_4, localOffset, bytesRead_5.value_0), fromCbor_3, accumulator_2, sub_1(maxBytesToRead_5, bytesRead_5.value_0)), makeLambdaFunction(AsyncReader$lambda$1$Type.prototype.apply_0, AsyncReader$lambda$1$Type, [fromThisChunk]));
      }
       else 
        throw toJs($e0);
    }
  }
  return $thenApply(this$static.parseStream(fromCbor_3, accumulator_2, sub_1(maxBytesToRead_5, bytesRead_5.value_0)), makeLambdaFunction(AsyncReader$lambda$2$Type.prototype.apply_0, AsyncReader$lambda$2$Type, [bytesRead_5]));
}

function $lambda$3_23(this$static, objectsToSkip_1, maxObjectsToRead_2, prefix_3, in_4, accumulator_5, fromCbor_6, buf_7, maxBytesToRead_8, bytesRead_8){
  var fromThisChunk, localOffset, objectsToRead, readObject, toSkip;
  toSkip = objectsToSkip_1;
  objectsToRead = maxObjectsToRead_2;
  for (localOffset = 0; localOffset < bytesRead_8.value_0 + prefix_3.length;) {
    try {
      readObject = read_9(in_4, prefix_3.length + bytesRead_8.value_0);
      if (toSkip > 0)
        --toSkip;
      else {
        --objectsToRead;
        accumulator_5.accept(fromCbor_6(readObject));
      }
      localOffset += readObject.toByteArray_0().length;
      if (objectsToRead == 0)
        return new CompletableFuture_0(valueOf_2(localOffset));
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 35)) {
        fromThisChunk = localOffset;
        return $thenApply(this$static.parseLimitedStreamRecurse(copyOfRange(buf_7, localOffset, bytesRead_8.value_0), fromCbor_6, accumulator_5, toSkip, objectsToRead, sub_1(maxBytesToRead_8, bytesRead_8.value_0)), makeLambdaFunction(AsyncReader$lambda$4$Type.prototype.apply_0, AsyncReader$lambda$4$Type, [fromThisChunk]));
      }
       else 
        throw toJs($e0);
    }
  }
  return $thenApply(this$static.parseLimitedStream(fromCbor_6, accumulator_5, toSkip, objectsToRead, sub_1(maxBytesToRead_8, bytesRead_8.value_0)), makeLambdaFunction(AsyncReader$lambda$5$Type.prototype.apply_0, AsyncReader$lambda$5$Type, [bytesRead_8]));
}

function $parseLimitedStreamRecurse(this$static, prefix, fromCbor, accumulator, objectsToSkip, maxObjectsToRead, maxBytesToRead){
  var buf, in_0, toRead;
  if (maxObjectsToRead == 0 || compare_1(maxBytesToRead, 0) == 0)
    return new CompletableFuture_0(valueOf_2(0));
  toRead = toInt_0(min_1($intern_70 - prefix.length, maxBytesToRead));
  buf = initUnidimensionalArray(B_classLit, $intern_28, 8, prefix.length + toRead, 15, 1);
  arraycopy(prefix, 0, buf, 0, prefix.length);
  in_0 = new ByteArrayInputStream(buf);
  return $thenCompose(this$static.readIntoArray(buf, prefix.length, toRead), makeLambdaFunction(AsyncReader$lambda$3$Type.prototype.apply_0, AsyncReader$lambda$3$Type, [this$static, objectsToSkip, maxObjectsToRead, prefix, in_0, accumulator, fromCbor, buf, maxBytesToRead]));
}

function $parseStreamRecurse(this$static, prefix, fromCbor, accumulator, maxBytesToRead){
  var buf, in_0;
  if (compare_1(maxBytesToRead, 0) == 0)
    return new CompletableFuture_0(valueOf_2(0));
  buf = initUnidimensionalArray(B_classLit, $intern_28, 8, $intern_70, 15, 1);
  arraycopy(prefix, 0, buf, 0, prefix.length);
  in_0 = new ByteArrayInputStream(buf);
  return $thenCompose(this$static.readIntoArray(buf, prefix.length, toInt_0(min_1(buf.length - prefix.length, maxBytesToRead))), makeLambdaFunction(AsyncReader$lambda$0$Type.prototype.apply_0, AsyncReader$lambda$0$Type, [this$static, in_0, accumulator, fromCbor, buf, maxBytesToRead]));
}

function build_18(data_0){
  return new AsyncReader$ArrayBacked(data_0);
}

function lambda$1_19(fromThisChunk_0, rest_1){
  return valueOf_2(add_1(rest_1.value_0, fromThisChunk_0));
}

function lambda$2_13(bytesRead_0, rest_1){
  return valueOf_2(add_1(rest_1.value_0, bytesRead_0.value_0));
}

function lambda$4_9(fromThisChunk_0, rest_1){
  return valueOf_2(add_1(rest_1.value_0, fromThisChunk_0));
}

function lambda$5_7(bytesRead_0, rest_1){
  return valueOf_2(add_1(rest_1.value_0, bytesRead_0.value_0));
}

function $seekJS(this$static, high32, low32){
  if (high32 != 0)
    throw toJs(new IllegalArgumentException_0('Cannot have arrays larger than 4GiB!'));
  this$static.index_0 = low32;
  return new CompletableFuture_0(this$static);
}

function AsyncReader$ArrayBacked(data_0){
  this.data_0 = data_0;
}

defineClass(70, 1, {118:1}, AsyncReader$ArrayBacked);
_.parseLimitedStream = function parseLimitedStream(fromCbor, accumulator, objectsToSkip, maxObjectsToRead, maxBytesToRead){
  return $parseLimitedStreamRecurse(this, initUnidimensionalArray(B_classLit, $intern_28, 8, 0, 15, 1), fromCbor, accumulator, objectsToSkip, maxObjectsToRead, maxBytesToRead);
}
;
_.parseLimitedStreamRecurse = function parseLimitedStreamRecurse(prefix, fromCbor, accumulator, objectsToSkip, maxObjectsToRead, maxBytesToRead){
  return $parseLimitedStreamRecurse(this, prefix, fromCbor, accumulator, objectsToSkip, maxObjectsToRead, maxBytesToRead);
}
;
_.parseStream = function parseStream_0(fromCbor, accumulator, maxBytesToRead){
  return $parseStreamRecurse(this, initUnidimensionalArray(B_classLit, $intern_28, 8, 0, 15, 1), fromCbor, accumulator, maxBytesToRead);
}
;
_.parseStreamRecurse = function parseStreamRecurse(prefix, fromCbor, accumulator, maxBytesToRead){
  return $parseStreamRecurse(this, prefix, fromCbor, accumulator, maxBytesToRead);
}
;
_.seek_1 = function seek_1(offset){
  return $seekJS(this, toInt_0(shr_0(offset, 32)), toInt_0(offset));
}
;
_.close = function close_7(){
}
;
_.readIntoArray = function readIntoArray(res, offset, length_0){
  arraycopy(this.data_0, this.index_0, res, offset, length_0);
  this.index_0 += length_0;
  return new CompletableFuture_0(valueOf_1(length_0));
}
;
_.reset = function reset_0(){
  this.index_0 = 0;
  return new CompletableFuture_0(this);
}
;
_.seekJS = function seekJS(high32, low32){
  return $seekJS(this, high32, low32);
}
;
_.index_0 = 0;
var Lpeergos_shared_user_fs_AsyncReader$ArrayBacked_2_classLit = createForClass('peergos.shared.user.fs', 'AsyncReader/ArrayBacked', 70);
function AsyncReader$lambda$0$Type($$outer_0, in_1, accumulator_2, fromCbor_3, buf_4, maxBytesToRead_5){
  this.$$outer_0 = $$outer_0;
  this.in_1 = in_1;
  this.accumulator_2 = accumulator_2;
  this.fromCbor_3 = fromCbor_3;
  this.buf_4 = buf_4;
  this.maxBytesToRead_5 = maxBytesToRead_5;
}

defineClass(1346, $wnd.Function, $intern_22, AsyncReader$lambda$0$Type);
_.apply_0 = function apply_1949(arg0){
  return $lambda$0_31(this.$$outer_0, this.in_1, this.accumulator_2, this.fromCbor_3, this.buf_4, this.maxBytesToRead_5, arg0);
}
;
_.maxBytesToRead_5 = 0;
function AsyncReader$lambda$1$Type(fromThisChunk_0){
  this.fromThisChunk_0 = fromThisChunk_0;
}

defineClass(1348, $wnd.Function, $intern_22, AsyncReader$lambda$1$Type);
_.apply_0 = function apply_1950(arg0){
  return lambda$1_19(this.fromThisChunk_0, arg0);
}
;
_.fromThisChunk_0 = 0;
function AsyncReader$lambda$2$Type(bytesRead_0){
  this.bytesRead_0 = bytesRead_0;
}

defineClass(1349, $wnd.Function, $intern_22, AsyncReader$lambda$2$Type);
_.apply_0 = function apply_1951(arg0){
  return lambda$2_13(this.bytesRead_0, arg0);
}
;
function AsyncReader$lambda$3$Type($$outer_0, objectsToSkip_1, maxObjectsToRead_2, prefix_3, in_4, accumulator_5, fromCbor_6, buf_7, maxBytesToRead_8){
  this.$$outer_0 = $$outer_0;
  this.objectsToSkip_1 = objectsToSkip_1;
  this.maxObjectsToRead_2 = maxObjectsToRead_2;
  this.prefix_3 = prefix_3;
  this.in_4 = in_4;
  this.accumulator_5 = accumulator_5;
  this.fromCbor_6 = fromCbor_6;
  this.buf_7 = buf_7;
  this.maxBytesToRead_8 = maxBytesToRead_8;
}

defineClass(1347, $wnd.Function, $intern_22, AsyncReader$lambda$3$Type);
_.apply_0 = function apply_1952(arg0){
  return $lambda$3_23(this.$$outer_0, this.objectsToSkip_1, this.maxObjectsToRead_2, this.prefix_3, this.in_4, this.accumulator_5, this.fromCbor_6, this.buf_7, this.maxBytesToRead_8, arg0);
}
;
_.maxBytesToRead_8 = 0;
_.maxObjectsToRead_2 = 0;
_.objectsToSkip_1 = 0;
function AsyncReader$lambda$4$Type(fromThisChunk_0){
  this.fromThisChunk_0 = fromThisChunk_0;
}

defineClass(1350, $wnd.Function, $intern_22, AsyncReader$lambda$4$Type);
_.apply_0 = function apply_1953(arg0){
  return lambda$4_9(this.fromThisChunk_0, arg0);
}
;
_.fromThisChunk_0 = 0;
function AsyncReader$lambda$5$Type(bytesRead_0){
  this.bytesRead_0 = bytesRead_0;
}

defineClass(1351, $wnd.Function, $intern_22, AsyncReader$lambda$5$Type);
_.apply_0 = function apply_1954(arg0){
  return lambda$5_7(this.bytesRead_0, arg0);
}
;
function $seekJS_0(this$static, high32, low32){
  return $thenApply(this$static.reader.seek(high32, low32), makeLambdaFunction(BrowserFileReader$lambda$0$Type.prototype.apply_0, BrowserFileReader$lambda$0$Type, [this$static]));
}

function BrowserFileReader(reader){
  this.reader = reader;
}

defineClass(1231, 1, {118:1}, BrowserFileReader);
_.parseLimitedStream = function parseLimitedStream_0(fromCbor, accumulator, objectsToSkip, maxObjectsToRead, maxBytesToRead){
  return $parseLimitedStreamRecurse(this, initUnidimensionalArray(B_classLit, $intern_28, 8, 0, 15, 1), fromCbor, accumulator, objectsToSkip, maxObjectsToRead, maxBytesToRead);
}
;
_.parseLimitedStreamRecurse = function parseLimitedStreamRecurse_0(prefix, fromCbor, accumulator, objectsToSkip, maxObjectsToRead, maxBytesToRead){
  return $parseLimitedStreamRecurse(this, prefix, fromCbor, accumulator, objectsToSkip, maxObjectsToRead, maxBytesToRead);
}
;
_.parseStream = function parseStream_1(fromCbor, accumulator, maxBytesToRead){
  return $parseStreamRecurse(this, initUnidimensionalArray(B_classLit, $intern_28, 8, 0, 15, 1), fromCbor, accumulator, maxBytesToRead);
}
;
_.parseStreamRecurse = function parseStreamRecurse_0(prefix, fromCbor, accumulator, maxBytesToRead){
  return $parseStreamRecurse(this, prefix, fromCbor, accumulator, maxBytesToRead);
}
;
_.seek_1 = function seek_2(offset){
  return $seekJS_0(this, toInt_0(shr_0(offset, 32)), toInt_0(offset));
}
;
_.close = function close_8(){
  this.reader.close();
}
;
_.readIntoArray = function readIntoArray_0(res, offset, length_0){
  return this.reader.readIntoArray(res, offset, length_0);
}
;
_.reset = function reset_1(){
  return $thenApply(this.reader.reset(), makeLambdaFunction(BrowserFileReader$lambda$1$Type.prototype.apply_0, BrowserFileReader$lambda$1$Type, [this]));
}
;
_.seekJS = function seekJS_0(high32, low32){
  return $seekJS_0(this, high32, low32);
}
;
var Lpeergos_shared_user_fs_BrowserFileReader_2_classLit = createForClass('peergos.shared.user.fs', 'BrowserFileReader', 1231);
function BrowserFileReader$lambda$0$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2990, $wnd.Function, $intern_22, BrowserFileReader$lambda$0$Type);
_.apply_0 = function apply_1955(arg0){
  return this.$$outer_0;
}
;
function BrowserFileReader$lambda$1$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2991, $wnd.Function, $intern_22, BrowserFileReader$lambda$1$Type);
_.apply_0 = function apply_1956(arg0){
  return this.$$outer_0;
}
;
function $toCbor_92(this$static){
  var cbor, transformed;
  cbor = new TreeMap;
  $put_6(cbor, 'bytes', new CborObject$CborLong(this$static.bytesRead));
  $put_6(cbor, 'caps', new CborObject$CborList(this$static.retrievedCapabilities));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(cbor), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function CapabilitiesFromUser(bytesRead, retrievedCapabilities){
  this.bytesRead = bytesRead;
  this.retrievedCapabilities = retrievedCapabilities;
}

function fromCbor_100(cbor){
  var bytesRead, caps, m;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('CapabilitiesFromUser cbor must be a Map! ' + cbor));
  m = castTo(cbor, 18);
  bytesRead = castTo(castTo($get_0(m.values_0, new CborObject$CborString('bytes')), 7), 29).value_0;
  caps = castTo($collect_0($map_0(castTo(castTo($get_0(m.values_0, new CborObject$CborString('caps')), 7), 21).value_0.stream(), makeLambdaFunction(CapabilitiesFromUser$0methodref$fromCbor$Type.prototype.apply_0, CapabilitiesFromUser$0methodref$fromCbor$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  return new CapabilitiesFromUser(bytesRead, caps);
}

defineClass(143, 1, {7:1, 143:1}, CapabilitiesFromUser);
_.serialize = function serialize_123(){
  return $toByteArray_2($toCbor_92(this));
}
;
_.toCbor = function toCbor_121(){
  return $toCbor_92(this);
}
;
_.bytesRead = 0;
var Lpeergos_shared_user_fs_CapabilitiesFromUser_2_classLit = createForClass('peergos.shared.user.fs', 'CapabilitiesFromUser', 143);
function CapabilitiesFromUser$0methodref$fromCbor$Type(){
}

defineClass(2608, $wnd.Function, $intern_22, CapabilitiesFromUser$0methodref$fromCbor$Type);
_.apply_0 = function apply_1957(arg0){
  return fromCbor_101(castTo(arg0, 7));
}
;
function addEditSharingLinkTo(sharedDir, capability, c, network, crypto_0){
  return addSharingLinkTo(sharedDir, capability, network, crypto_0, 'sharing.w', c);
}

function addReadOnlySharingLinkTo(sharedDir, capability, c, network, crypto_0){
  return addSharingLinkTo(sharedDir, new AbsoluteCapability_0(capability.owner, capability.writer, capability.mapKey, capability.bat, capability.rBaseKey, ($clinit_Optional() , $clinit_Optional() , EMPTY)), network, crypto_0, 'sharing.r', c);
}

function addSharingLinkTo(sharedDir, capability, network, crypto_0, capStoreFilename, c){
  var isNull;
  isNull = !sharedDir.pointer;
  if (!(isNull || sharedDir.pointer.fileAccess.isDirectory_0) || !sharedDir.isWritable_0) {
    return errored(new IllegalArgumentException_0('Can only add link to a writable directory!'));
  }
  return $thenCompose($getChild_3(sharedDir, sharedDir.version, capStoreFilename, network), makeLambdaFunction(CapabilityStore$lambda$0$Type.prototype.apply_0, CapabilityStore$lambda$0$Type, [capability, sharedDir, c, capStoreFilename, network, crypto_0]));
}

function lambda$0_27(capability_0, sharedDir_1, c_2, capStoreFilename_3, network_4, crypto_5, capStore_6){
  var newCapability, serializedCapability, startIndex;
  serializedCapability = $toByteArray_2($toCbor_91(capability_0));
  newCapability = new AsyncReader$ArrayBacked(serializedCapability);
  startIndex = castTo($orElse($map(capStore_6, makeLambdaFunction(CapabilityStore$lambda$1$Type.prototype.apply_0, CapabilityStore$lambda$1$Type, [])), valueOf_2(0)), 69).value_0;
  return $uploadFileSection_1(sharedDir_1, sharedDir_1.version, c_2, capStoreFilename_3, newCapability, false, startIndex, add_1(startIndex, serializedCapability.length), ($clinit_Optional() , $clinit_Optional() , EMPTY), true, false, network_4, crypto_5, makeLambdaFunction(CapabilityStore$lambda$2$Type.prototype.accept_5, CapabilityStore$lambda$2$Type, []), $randomBytes(crypto_5.random, 32), (null , EMPTY), new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(crypto_5.random, 32))))), $mirrorBatId(sharedDir_1.pointer.fileAccess));
}

function lambda$14_8(startOffset_0, reader_1){
  return reader_1.seek_1(startOffset_0);
}

function lambda$15_4(ownerName_0, owner_1, file_2, startOffset_3, network_5, seeked_5){
  return readSharingRecords(ownerName_0, owner_1, seeked_5, sub_1(($ensureUnmodified(file_2) , file_2.props).size_0, startOffset_3), network_5);
}

function lambda$18_6(network_0, ownerName_1, owner_2, reader_3, maxBytesToRead_4, caps_6, bytesRead_6){
  return $thenCompose($thenApply(combineAllInOrder(castTo($collect_0($map_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(caps_6, 16)), makeLambdaFunction(CapabilityStore$lambda$19$Type.prototype.apply_0, CapabilityStore$lambda$19$Type, [network_0, ownerName_1])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 54)), makeLambdaFunction(CapabilityStore$lambda$23$Type.prototype.apply_0, CapabilityStore$lambda$23$Type, [])), makeLambdaFunction(CapabilityStore$lambda$25$Type.prototype.apply_0, CapabilityStore$lambda$25$Type, [ownerName_1, owner_2, reader_3, maxBytesToRead_4, bytesRead_6, network_0]));
}

function lambda$19_7(network_0, ownerName_1, pointer_2){
  var entry;
  entry = new EntryPoint(pointer_2, ownerName_1);
  return $exceptionally($thenCompose($exceptionally($thenCompose($getValue_0(network_0.synchronizer, entry.pointer.owner, entry.pointer.writer), makeLambdaFunction(NetworkAccess$lambda$33$Type.prototype.apply_0, NetworkAccess$lambda$33$Type, [network_0, entry])), makeLambdaFunction(NetworkAccess$lambda$34$Type.prototype.apply_0, NetworkAccess$lambda$34$Type, [])), makeLambdaFunction(CapabilityStore$lambda$20$Type.prototype.apply_0, CapabilityStore$lambda$20$Type, [pointer_2, network_0])), makeLambdaFunction(CapabilityStore$lambda$22$Type.prototype.apply_0, CapabilityStore$lambda$22$Type, []));
}

function lambda$20_5(pointer_0, network_1, fileOpt_2){
  var nsee, res;
  if (fileOpt_2.ref != null) {
    try {
      res = $thenApply($getPath((checkCriticalElement(fileOpt_2.ref != null) , castTo(fileOpt_2.ref, 19)), network_1), makeLambdaFunction(CapabilityStore$lambda$21$Type.prototype.apply_0, CapabilityStore$lambda$21$Type, [pointer_0]));
      return res;
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 254)) {
        nsee = $e0;
        return errored(nsee);
      }
       else 
        throw toJs($e0);
    }
  }
   else {
    return new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_LIST));
  }
}

function lambda$21_4(pointer_0, path_1){
  return $clinit_Collections() , new Collections$SingletonList(new CapabilityWithPath(path_1, pointer_0));
}

function lambda$25_6(ownerName_0, owner_1, reader_2, maxBytesToRead_3, bytesRead_5, network_6, results_6){
  return $thenApply(readSharingRecords(ownerName_0, owner_1, reader_2, sub_1(maxBytesToRead_3, bytesRead_5.value_0), network_6), makeLambdaFunction(CapabilityStore$lambda$26$Type.prototype.apply_0, CapabilityStore$lambda$26$Type, [results_6]));
}

function lambda$26_4(results_0, recurse_1){
  return castTo(concat(results_0.stream(), recurse_1.stream()).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
}

function lambda$27_4(friendName_0, filenameSuffix_1, crypto_2, network_3, updated_4){
  return $getChild_2(updated_4, friendName_0 + ('' + filenameSuffix_1), network_3);
}

function lambda$29_3(cacheFile_0, reader_1){
  var storeData;
  storeData = initUnidimensionalArray(B_classLit, $intern_28, 8, toInt_0(($ensureUnmodified(cacheFile_0) , cacheFile_0.props).size_0), 15, 1);
  return $thenApply(reader_1.readIntoArray(storeData, 0, storeData.length), makeLambdaFunction(CapabilityStore$lambda$30$Type.prototype.apply_0, CapabilityStore$lambda$30$Type, [storeData]));
}

function lambda$3_8(friendSharedDir_0, network_1, crypto_2, inbound_3, capStoreFilename_4, friendName_5, cacheDir_6, capFile_7){
  var cacheFilenameSuffix, capFilesize;
  if (capFile_7.ref == null)
    return new CompletableFuture_0(new CapabilitiesFromUser(0, ($clinit_Collections() , $clinit_Collections() , EMPTY_LIST)));
  capFilesize = $getSize((checkCriticalElement(capFile_7.ref != null) , castTo(capFile_7.ref, 19)));
  cacheFilenameSuffix = (inbound_3?'-in-':'-out-') + capStoreFilename_4;
  return $thenCompose($thenCompose($thenCompose($getValue_0(network_1.synchronizer, $owner(cacheDir_6), cacheDir_6.pointer.capability.writer), makeLambdaFunction(FileWrapper$lambda$2$Type.prototype.apply_0, FileWrapper$lambda$2$Type, [cacheDir_6, network_1])), makeLambdaFunction(CapabilityStore$lambda$27$Type.prototype.apply_0, CapabilityStore$lambda$27$Type, [friendName_5, cacheFilenameSuffix, crypto_2, network_1])), makeLambdaFunction(CapabilityStore$lambda$4$Type.prototype.apply_0, CapabilityStore$lambda$4$Type, [capFilesize, friendSharedDir_0, capFile_7, network_1, crypto_2]));
}

function lambda$30_3(storeData_0){
  return fromCbor_100(deserialize(new CborDecoder(new ByteArrayInputStream(storeData_0)), storeData_0.length));
}

function lambda$4_10(capFilesize_0, friendSharedDir_2, capFile_3, network_4, crypto_5, optCachedFile_5){
  var cachedFile;
  if (optCachedFile_5.ref != null) {
    cachedFile = (checkCriticalElement(optCachedFile_5.ref != null) , castTo(optCachedFile_5.ref, 19));
    return $thenCompose($thenCompose($getInputStream_0(cachedFile, network_4, crypto_5, makeLambdaFunction(CapabilityStore$lambda$28$Type.prototype.accept_5, CapabilityStore$lambda$28$Type, [])), makeLambdaFunction(CapabilityStore$lambda$29$Type.prototype.apply_0, CapabilityStore$lambda$29$Type, [cachedFile])), makeLambdaFunction(CapabilityStore$lambda$6$Type.prototype.apply_0, CapabilityStore$lambda$6$Type, [capFilesize_0, friendSharedDir_2, capFile_3, network_4, crypto_5]));
  }
   else {
    return $thenCompose(readSharingFile_0(($ensureUnmodified(friendSharedDir_2) , friendSharedDir_2.props).name, $owner(friendSharedDir_2), (checkCriticalElement(capFile_3.ref != null) , castTo(capFile_3.ref, 19)), network_4, crypto_5), makeLambdaFunction(CapabilityStore$lambda$5$Type.prototype.apply_0, CapabilityStore$lambda$5$Type, [capFilesize_0]));
  }
}

function lambda$6_5(capFilesize_0, friendSharedDir_2, capFile_3, network_4, crypto_5, cache_5){
  if (eq(capFilesize_0, cache_5.bytesRead))
    return new CompletableFuture_0(cache_5);
  return $thenCompose(readSharingFile(cache_5.bytesRead, ($ensureUnmodified(friendSharedDir_2) , friendSharedDir_2.props).name, $owner(friendSharedDir_2), (checkCriticalElement(capFile_3.ref != null) , castTo(capFile_3.ref, 19)), network_4, crypto_5), makeLambdaFunction(CapabilityStore$lambda$7$Type.prototype.apply_0, CapabilityStore$lambda$7$Type, [capFilesize_0]));
}

function lambda$9_7(startOffset_0, friendSharedDir_2, network_3, crypto_4, file_4){
  var capFileSize;
  if (file_4.ref == null)
    return new CompletableFuture_0(new CapabilitiesFromUser(0, ($clinit_Collections() , $clinit_Collections() , EMPTY_LIST)));
  capFileSize = $getSize((checkCriticalElement(file_4.ref != null) , castTo(file_4.ref, 19)));
  if (compare_1(capFileSize, startOffset_0) == 0)
    return new CompletableFuture_0(new CapabilitiesFromUser(0, ($clinit_Collections() , $clinit_Collections() , EMPTY_LIST)));
  return $thenCompose(readSharingFile(startOffset_0, ($ensureUnmodified(friendSharedDir_2) , friendSharedDir_2.props).name, $owner(friendSharedDir_2), (checkCriticalElement(file_4.ref != null) , castTo(file_4.ref, 19)), network_3, crypto_4), makeLambdaFunction(CapabilityStore$lambda$10$Type.prototype.apply_0, CapabilityStore$lambda$10$Type, [capFileSize, startOffset_0]));
}

function loadReadAccessSharingLinksFromIndex(friendSharedDir, network, crypto_0){
  return $thenCompose($getChild_2(friendSharedDir, 'sharing.r', network), makeLambdaFunction(CapabilityStore$lambda$9$Type.prototype.apply_0, CapabilityStore$lambda$9$Type, [0, friendSharedDir, network, crypto_0]));
}

function loadReadOnlyLinks(cacheDir, friendSharedDir, friendName, network, crypto_0){
  return $thenCompose($getChild_2(friendSharedDir, 'sharing.r', network), makeLambdaFunction(CapabilityStore$lambda$3$Type.prototype.apply_0, CapabilityStore$lambda$3$Type, [friendSharedDir, network, crypto_0, 'sharing.r', friendName, cacheDir]));
}

function loadSharingLinksFromIndex(friendSharedDir, network, crypto_0){
  return $thenCompose($getChild_2(friendSharedDir, 'sharing.w', network), makeLambdaFunction(CapabilityStore$lambda$9$Type.prototype.apply_0, CapabilityStore$lambda$9$Type, [0, friendSharedDir, network, crypto_0]));
}

function loadWriteableLinks(cacheDir, friendSharedDir, friendName, network, crypto_0){
  return $thenCompose($getChild_2(friendSharedDir, 'sharing.w', network), makeLambdaFunction(CapabilityStore$lambda$3$Type.prototype.apply_0, CapabilityStore$lambda$3$Type, [friendSharedDir, network, crypto_0, 'sharing.w', friendName, cacheDir]));
}

function readSharingFile(startOffset, ownerName, owner, file, network, crypto_0){
  return $thenCompose($thenCompose($getInputStream_0(file, network, crypto_0, makeLambdaFunction(CapabilityStore$lambda$13$Type.prototype.accept_5, CapabilityStore$lambda$13$Type, [])), makeLambdaFunction(CapabilityStore$lambda$14$Type.prototype.apply_0, CapabilityStore$lambda$14$Type, [startOffset])), makeLambdaFunction(CapabilityStore$lambda$15$Type.prototype.apply_0, CapabilityStore$lambda$15$Type, [ownerName, owner, file, startOffset, network]));
}

function readSharingFile_0(ownerName, owner, file, network, crypto_0){
  return $thenCompose($thenCompose($getInputStream_0(file, network, crypto_0, makeLambdaFunction(CapabilityStore$lambda$13$Type.prototype.accept_5, CapabilityStore$lambda$13$Type, [])), makeLambdaFunction(CapabilityStore$lambda$14$Type.prototype.apply_0, CapabilityStore$lambda$14$Type, [0])), makeLambdaFunction(CapabilityStore$lambda$15$Type.prototype.apply_0, CapabilityStore$lambda$15$Type, [ownerName, owner, file, 0, network]));
}

function readSharingRecords(ownerName, owner, reader, maxBytesToRead, network){
  var caps;
  if (compare_1(maxBytesToRead, 0) == 0)
    return new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_LIST));
  caps = new ArrayList;
  return $thenCompose(reader.parseStream(makeLambdaFunction(CapabilityStore$0methodref$fromCbor$Type.prototype.apply_0, CapabilityStore$0methodref$fromCbor$Type, []), new CapabilityStore$1methodref$add$Type(caps), maxBytesToRead), makeLambdaFunction(CapabilityStore$lambda$18$Type.prototype.apply_0, CapabilityStore$lambda$18$Type, [network, ownerName, owner, reader, maxBytesToRead, caps]));
}

function CapabilityStore$0methodref$fromCbor$Type(){
}

defineClass(3360, $wnd.Function, $intern_22, CapabilityStore$0methodref$fromCbor$Type);
_.apply_0 = function apply_1958(arg0){
  return fromCbor_99(castTo(arg0, 7));
}
;
function CapabilityStore$1methodref$add$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1037, 1, $intern_32, CapabilityStore$1methodref$add$Type);
_.accept = function accept_157(arg0){
  $add(this.$$outer_0, castTo(arg0, 71));
}
;
_.andThen = function andThen_81(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_fs_CapabilityStore$1methodref$add$Type_2_classLit = createForClass('peergos.shared.user.fs', 'CapabilityStore/1methodref$add$Type', 1037);
function CapabilityStore$lambda$0$Type(capability_0, sharedDir_1, c_2, capStoreFilename_3, network_4, crypto_5){
  this.capability_0 = capability_0;
  this.sharedDir_1 = sharedDir_1;
  this.c_2 = c_2;
  this.capStoreFilename_3 = capStoreFilename_3;
  this.network_4 = network_4;
  this.crypto_5 = crypto_5;
}

defineClass(3359, $wnd.Function, $intern_22, CapabilityStore$lambda$0$Type);
_.apply_0 = function apply_1959(arg0){
  return lambda$0_27(this.capability_0, this.sharedDir_1, this.c_2, this.capStoreFilename_3, this.network_4, this.crypto_5, arg0);
}
;
function CapabilityStore$lambda$1$Type(){
}

defineClass(3362, $wnd.Function, $intern_22, CapabilityStore$lambda$1$Type);
_.apply_0 = function apply_1960(arg0){
  return valueOf_2(($ensureUnmodified(castTo(arg0, 19)) , castTo(arg0, 19).props).size_0);
}
;
function CapabilityStore$lambda$10$Type(capFileSize_0, startOffset_2){
  this.capFileSize_0 = capFileSize_0;
  this.startOffset_2 = startOffset_2;
}

defineClass(3371, $wnd.Function, $intern_22, CapabilityStore$lambda$10$Type);
_.apply_0 = function apply_1961(arg0){
  return new CompletableFuture_0(new CapabilitiesFromUser(sub_1(this.capFileSize_0, this.startOffset_2), castTo(arg0, 17)));
}
;
_.capFileSize_0 = 0;
_.startOffset_2 = 0;
function CapabilityStore$lambda$11$Type(){
}

defineClass(2402, $wnd.Function, $intern_22, CapabilityStore$lambda$11$Type);
_.apply_0 = function apply_1962(arg0){
  return castTo($orElse($map(castTo(arg0, 12), makeLambdaFunction(CapabilityStore$lambda$12$Type.prototype.apply_0, CapabilityStore$lambda$12$Type, [])), valueOf_2(0)), 69);
}
;
function CapabilityStore$lambda$12$Type(){
}

defineClass(3380, $wnd.Function, $intern_22, CapabilityStore$lambda$12$Type);
_.apply_0 = function apply_1963(arg0){
  return valueOf_2(($ensureUnmodified(castTo(arg0, 19)) , castTo(arg0, 19).props).size_0);
}
;
function CapabilityStore$lambda$13$Type(){
}

defineClass(1330, $wnd.Function, {}, CapabilityStore$lambda$13$Type);
_.accept_5 = function accept_158(arg0){
}
;
function CapabilityStore$lambda$14$Type(startOffset_0){
  this.startOffset_0 = startOffset_0;
}

defineClass(1331, $wnd.Function, $intern_22, CapabilityStore$lambda$14$Type);
_.apply_0 = function apply_1964(arg0){
  return lambda$14_8(this.startOffset_0, arg0);
}
;
_.startOffset_0 = 0;
function CapabilityStore$lambda$15$Type(ownerName_0, owner_1, file_2, startOffset_3, network_5){
  this.ownerName_0 = ownerName_0;
  this.owner_1 = owner_1;
  this.file_2 = file_2;
  this.startOffset_3 = startOffset_3;
  this.network_5 = network_5;
}

defineClass(1332, $wnd.Function, $intern_22, CapabilityStore$lambda$15$Type);
_.apply_0 = function apply_1965(arg0){
  return lambda$15_4(this.ownerName_0, this.owner_1, this.file_2, this.startOffset_3, this.network_5, arg0);
}
;
_.startOffset_3 = 0;
function CapabilityStore$lambda$18$Type(network_0, ownerName_1, owner_2, reader_3, maxBytesToRead_4, caps_6){
  this.network_0 = network_0;
  this.ownerName_1 = ownerName_1;
  this.owner_2 = owner_2;
  this.reader_3 = reader_3;
  this.maxBytesToRead_4 = maxBytesToRead_4;
  this.caps_6 = caps_6;
}

defineClass(3361, $wnd.Function, $intern_22, CapabilityStore$lambda$18$Type);
_.apply_0 = function apply_1966(arg0){
  return lambda$18_6(this.network_0, this.ownerName_1, this.owner_2, this.reader_3, this.maxBytesToRead_4, this.caps_6, arg0);
}
;
_.maxBytesToRead_4 = 0;
function CapabilityStore$lambda$19$Type(network_0, ownerName_1){
  this.network_0 = network_0;
  this.ownerName_1 = ownerName_1;
}

defineClass(3372, $wnd.Function, $intern_22, CapabilityStore$lambda$19$Type);
_.apply_0 = function apply_1967(arg0){
  return lambda$19_7(this.network_0, this.ownerName_1, arg0);
}
;
function CapabilityStore$lambda$2$Type(){
}

defineClass(3363, $wnd.Function, {}, CapabilityStore$lambda$2$Type);
_.accept_5 = function accept_159(arg0){
}
;
function CapabilityStore$lambda$20$Type(pointer_0, network_1){
  this.pointer_0 = pointer_0;
  this.network_1 = network_1;
}

defineClass(3375, $wnd.Function, $intern_22, CapabilityStore$lambda$20$Type);
_.apply_0 = function apply_1968(arg0){
  return lambda$20_5(this.pointer_0, this.network_1, arg0);
}
;
function CapabilityStore$lambda$21$Type(pointer_0){
  this.pointer_0 = pointer_0;
}

defineClass(3377, $wnd.Function, $intern_22, CapabilityStore$lambda$21$Type);
_.apply_0 = function apply_1969(arg0){
  return lambda$21_4(this.pointer_0, arg0);
}
;
function CapabilityStore$lambda$22$Type(){
}

defineClass(3376, $wnd.Function, $intern_22, CapabilityStore$lambda$22$Type);
_.apply_0 = function apply_1970(arg0){
  return $clinit_Collections() , $clinit_Collections() , EMPTY_LIST;
}
;
function CapabilityStore$lambda$23$Type(){
}

defineClass(3373, $wnd.Function, $intern_22, CapabilityStore$lambda$23$Type);
_.apply_0 = function apply_1971(arg0){
  return castTo($collect_0($flatMap_0(castTo(arg0, 17).stream(), makeLambdaFunction(CapabilityStore$lambda$24$Type.prototype.apply_0, CapabilityStore$lambda$24$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
}
;
function CapabilityStore$lambda$24$Type(){
}

defineClass(3381, $wnd.Function, $intern_22, CapabilityStore$lambda$24$Type);
_.apply_0 = function apply_1972(arg0){
  return castTo(arg0, 17).stream();
}
;
function CapabilityStore$lambda$25$Type(ownerName_0, owner_1, reader_2, maxBytesToRead_3, bytesRead_5, network_6){
  this.ownerName_0 = ownerName_0;
  this.owner_1 = owner_1;
  this.reader_2 = reader_2;
  this.maxBytesToRead_3 = maxBytesToRead_3;
  this.bytesRead_5 = bytesRead_5;
  this.network_6 = network_6;
}

defineClass(3374, $wnd.Function, $intern_22, CapabilityStore$lambda$25$Type);
_.apply_0 = function apply_1973(arg0){
  return lambda$25_6(this.ownerName_0, this.owner_1, this.reader_2, this.maxBytesToRead_3, this.bytesRead_5, this.network_6, arg0);
}
;
_.maxBytesToRead_3 = 0;
function CapabilityStore$lambda$26$Type(results_0){
  this.results_0 = results_0;
}

defineClass(3378, $wnd.Function, $intern_22, CapabilityStore$lambda$26$Type);
_.apply_0 = function apply_1974(arg0){
  return lambda$26_4(this.results_0, arg0);
}
;
function CapabilityStore$lambda$27$Type(friendName_0, filenameSuffix_1, crypto_2, network_3){
  this.friendName_0 = friendName_0;
  this.filenameSuffix_1 = filenameSuffix_1;
  this.crypto_2 = crypto_2;
  this.network_3 = network_3;
}

defineClass(3364, $wnd.Function, $intern_22, CapabilityStore$lambda$27$Type);
_.apply_0 = function apply_1975(arg0){
  return lambda$27_4(this.friendName_0, this.filenameSuffix_1, this.crypto_2, this.network_3, arg0);
}
;
function CapabilityStore$lambda$28$Type(){
}

defineClass(3366, $wnd.Function, {}, CapabilityStore$lambda$28$Type);
_.accept_5 = function accept_160(arg0){
}
;
function CapabilityStore$lambda$29$Type(cacheFile_0){
  this.cacheFile_0 = cacheFile_0;
}

defineClass(3367, $wnd.Function, $intern_22, CapabilityStore$lambda$29$Type);
_.apply_0 = function apply_1976(arg0){
  return lambda$29_3(this.cacheFile_0, arg0);
}
;
function CapabilityStore$lambda$3$Type(friendSharedDir_0, network_1, crypto_2, capStoreFilename_4, friendName_5, cacheDir_6){
  this.friendSharedDir_0 = friendSharedDir_0;
  this.network_1 = network_1;
  this.crypto_2 = crypto_2;
  this.inbound_3 = false;
  this.capStoreFilename_4 = capStoreFilename_4;
  this.friendName_5 = friendName_5;
  this.cacheDir_6 = cacheDir_6;
}

defineClass(1329, $wnd.Function, $intern_22, CapabilityStore$lambda$3$Type);
_.apply_0 = function apply_1977(arg0){
  return lambda$3_8(this.friendSharedDir_0, this.network_1, this.crypto_2, this.inbound_3, this.capStoreFilename_4, this.friendName_5, this.cacheDir_6, arg0);
}
;
_.inbound_3 = false;
function CapabilityStore$lambda$30$Type(storeData_0){
  this.storeData_0 = storeData_0;
}

defineClass(3379, $wnd.Function, $intern_22, CapabilityStore$lambda$30$Type);
_.apply_0 = function apply_1978(arg0){
  return lambda$30_3(this.storeData_0);
}
;
function CapabilityStore$lambda$4$Type(capFilesize_0, friendSharedDir_2, capFile_3, network_4, crypto_5){
  this.capFilesize_0 = capFilesize_0;
  this.friendSharedDir_2 = friendSharedDir_2;
  this.capFile_3 = capFile_3;
  this.network_4 = network_4;
  this.crypto_5 = crypto_5;
}

defineClass(3365, $wnd.Function, $intern_22, CapabilityStore$lambda$4$Type);
_.apply_0 = function apply_1979(arg0){
  return lambda$4_10(this.capFilesize_0, this.friendSharedDir_2, this.capFile_3, this.network_4, this.crypto_5, arg0);
}
;
_.capFilesize_0 = 0;
function CapabilityStore$lambda$5$Type(capFilesize_0){
  this.capFilesize_0 = capFilesize_0;
}

defineClass(3369, $wnd.Function, $intern_22, CapabilityStore$lambda$5$Type);
_.apply_0 = function apply_1980(arg0){
  return new CompletableFuture_0(new CapabilitiesFromUser(this.capFilesize_0, castTo(arg0, 17)));
}
;
_.capFilesize_0 = 0;
function CapabilityStore$lambda$6$Type(capFilesize_0, friendSharedDir_2, capFile_3, network_4, crypto_5){
  this.capFilesize_0 = capFilesize_0;
  this.friendSharedDir_2 = friendSharedDir_2;
  this.capFile_3 = capFile_3;
  this.network_4 = network_4;
  this.crypto_5 = crypto_5;
}

defineClass(3368, $wnd.Function, $intern_22, CapabilityStore$lambda$6$Type);
_.apply_0 = function apply_1981(arg0){
  return lambda$6_5(this.capFilesize_0, this.friendSharedDir_2, this.capFile_3, this.network_4, this.crypto_5, arg0);
}
;
_.capFilesize_0 = 0;
function CapabilityStore$lambda$7$Type(capFilesize_0){
  this.capFilesize_0 = capFilesize_0;
}

defineClass(3370, $wnd.Function, $intern_22, CapabilityStore$lambda$7$Type);
_.apply_0 = function apply_1982(arg0){
  return new CompletableFuture_0(new CapabilitiesFromUser(this.capFilesize_0, castTo(arg0, 17)));
}
;
_.capFilesize_0 = 0;
function CapabilityStore$lambda$9$Type(startOffset_0, friendSharedDir_2, network_3, crypto_4){
  this.startOffset_0 = startOffset_0;
  this.friendSharedDir_2 = friendSharedDir_2;
  this.network_3 = network_3;
  this.crypto_4 = crypto_4;
}

defineClass(542, $wnd.Function, $intern_22, CapabilityStore$lambda$9$Type);
_.apply_0 = function apply_1983(arg0){
  return lambda$9_7(this.startOffset_0, this.friendSharedDir_2, this.network_3, this.crypto_4, arg0);
}
;
_.startOffset_0 = 0;
function $toCbor_93(this$static){
  var cbor, transformed;
  cbor = new TreeMap;
  $put_6(cbor, 'p', new CborObject$CborString(this$static.path));
  $put_6(cbor, 'c', $toCbor_91(this$static.cap));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(cbor), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function CapabilityWithPath(path, cap){
  this.path = path;
  this.cap = cap;
}

function fromCbor_101(cbor){
  var fp, map_0, path;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Incorrect cbor for CapabilityWithPath: ' + cbor));
  map_0 = castTo(cbor, 18);
  path = castTo(castTo($get_0(map_0.values_0, new CborObject$CborString('p')), 7), 13).value_0;
  fp = castTo($getObject(map_0, 'c', makeLambdaFunction(CapabilityWithPath$0methodref$fromCbor$Type.prototype.apply_0, CapabilityWithPath$0methodref$fromCbor$Type, [])), 71);
  return new CapabilityWithPath(path, fp);
}

defineClass(303, 1, {7:1, 303:1}, CapabilityWithPath);
_.serialize = function serialize_124(){
  return $toByteArray_2($toCbor_93(this));
}
;
_.equals_0 = function equals_96(o){
  var that;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_user_fs_CapabilityWithPath_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 303);
  if (this.path != null?!$equals_0(this.path, that.path):that.path != null)
    return false;
  return this.cap?$equals_24(this.cap, that.cap):!that.cap;
}
;
_.hashCode_1 = function hashCode_93(){
  var result;
  result = this.path != null?getHashCode_1(this.path):0;
  result = 31 * result + (this.cap?$hashCode_2(this.cap):0);
  return result;
}
;
_.toCbor = function toCbor_122(){
  return $toCbor_93(this);
}
;
_.toString_0 = function toString_83(){
  return ' path:' + this.path;
}
;
var Lpeergos_shared_user_fs_CapabilityWithPath_2_classLit = createForClass('peergos.shared.user.fs', 'CapabilityWithPath', 303);
function CapabilityWithPath$0methodref$fromCbor$Type(){
}

defineClass(2530, $wnd.Function, $intern_22, CapabilityWithPath$0methodref$fromCbor$Type);
_.apply_0 = function apply_1984(arg0){
  return fromCbor_99(castTo(arg0, 7));
}
;
function $mapKey(this$static){
  return copyOfRange(this$static.mapKey, 0, this$static.mapKey.length);
}

function Chunk(data_0, dataKey, mapKey){
  this.data_0 = data_0;
  this.dataKey = dataKey;
  this.mapKey = mapKey;
}

defineClass(318, 1, {}, Chunk);
var Lpeergos_shared_user_fs_Chunk_2_classLit = createForClass('peergos.shared.user.fs', 'Chunk', 318);
function $getChunk(this$static, version, network, crypto_0, startIndex, truncateTo, ourCap, streamSecret, ourExistingHash, monitor){
  var nextChunkCap;
  if (compare_1(startIndex, $intern_70) >= 0) {
    nextChunkCap = ourCap.withMapKey(this$static.nextChunkLabel, this$static.nextChunkBat);
    return $thenCompose(network.getMetadata(version, nextChunkCap), makeLambdaFunction(EncryptedChunkRetriever$lambda$4$Type.prototype.apply_0, EncryptedChunkRetriever$lambda$4$Type, [this$static, version, network, crypto_0, startIndex, truncateTo, nextChunkCap, streamSecret, ourCap]));
  }
  return $thenApply($getAndDecrypt(this$static.linksToData, ourCap.owner, this$static.dataKey, makeLambdaFunction(EncryptedChunkRetriever$lambda$7$Type.prototype.apply_0, EncryptedChunkRetriever$lambda$7$Type, []), crypto_0.hasher, network, monitor), makeLambdaFunction(EncryptedChunkRetriever$lambda$8$Type.prototype.apply_0, EncryptedChunkRetriever$lambda$8$Type, [this$static, ourCap, ourExistingHash, truncateTo]));
}

function $getFile_2(this$static, version, network, crypto_0, ourCap, streamSecret, fileSize, ourExistingHash, nBufferedChunks, monitor){
  return $thenApply($getChunk(this$static, version, network, crypto_0, 0, fileSize, ourCap, streamSecret, ourExistingHash, monitor), makeLambdaFunction(EncryptedChunkRetriever$lambda$0$Type.prototype.apply_0, EncryptedChunkRetriever$lambda$0$Type, [this$static, ourCap, version, streamSecret, network, crypto_0, fileSize, nBufferedChunks, monitor]));
}

function $getMapLabelAt(this$static, version, startCap, streamSecret, offset, hasher, network){
  if (compare_1(offset, $intern_70) < 0)
    return new CompletableFuture_0(($clinit_Optional() , new Optional(checkCriticalNotNull(new Pair(copyOf(startCap.mapKey, startCap.mapKey.length), startCap.bat)))));
  if (compare_1(offset, 10485760) < 0)
    return new CompletableFuture_0(($clinit_Optional() , new Optional(checkCriticalNotNull(new Pair(this$static.nextChunkLabel, this$static.nextChunkBat)))));
  if (streamSecret.ref != null) {
    return $thenApply(calculateMapKey((checkCriticalElement(streamSecret.ref != null) , castTo(streamSecret.ref, 11)), copyOf(startCap.mapKey, startCap.mapKey.length), startCap.bat, offset, hasher), makeLambdaFunction(EncryptedChunkRetriever$0methodref$of$Type.prototype.apply_0, EncryptedChunkRetriever$0methodref$of$Type, []));
  }
  return $thenCompose(network.getMetadata(version, startCap.withMapKey(this$static.nextChunkLabel, this$static.nextChunkBat)), makeLambdaFunction(EncryptedChunkRetriever$lambda$2$Type.prototype.apply_0, EncryptedChunkRetriever$lambda$2$Type, [this$static, version, startCap, streamSecret, offset, hasher, network]));
}

function $lambda$0_32(this$static, ourCap_1, version_2, streamSecret_3, network_4, crypto_5, fileSize_6, nBufferedChunks_8, monitor_9, chunk_8){
  var nextChunk, nextChunkPointer;
  nextChunk = ourCap_1.withMapKey(this$static.nextChunkLabel, this$static.nextChunkBat);
  nextChunkPointer = new Location_0(nextChunk.owner, nextChunk.writer, nextChunk.mapKey);
  return new LazyInputStreamCombiner(version_2, (checkCriticalElement(chunk_8.ref != null) , castTo(chunk_8.ref, 192)).chunk.data_0, nextChunkPointer, this$static.nextChunkBat, (checkCriticalElement(chunk_8.ref != null) , castTo(chunk_8.ref, 192)).chunk.data_0, copyOf(ourCap_1.mapKey, ourCap_1.mapKey.length), ourCap_1.bat, streamSecret_3, nextChunkPointer, this$static.nextChunkBat, network_4, crypto_5, ourCap_1.rBaseKey, fileSize_6, nBufferedChunks_8, monitor_9);
}

function $lambda$2_24(this$static, version_1, startCap_2, streamSecret_3, offset_4, hasher_6, network_7, meta_6){
  return meta_6.ref != null?$thenCompose($retriever((checkCriticalElement(meta_6.ref != null) , castTo(meta_6.ref, 115)), startCap_2.rBaseKey, streamSecret_3, this$static.nextChunkLabel, this$static.nextChunkBat, hasher_6), makeLambdaFunction(EncryptedChunkRetriever$lambda$3$Type.prototype.apply_0, EncryptedChunkRetriever$lambda$3$Type, [this$static, version_1, startCap_2, streamSecret_3, offset_4, hasher_6, network_7])):new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY));
}

function $lambda$3_24(this$static, version_1, startCap_2, streamSecret_3, offset_4, hasher_6, network_7, retriever_6){
  return $getMapLabelAt(retriever_6, version_1, startCap_2.withMapKey(this$static.nextChunkLabel, this$static.nextChunkBat), streamSecret_3, sub_1(offset_4, $intern_70), hasher_6, network_7);
}

function $lambda$4_17(this$static, version_1, network_2, crypto_3, startIndex_4, truncateTo_6, nextChunkCap_8, streamSecret_9, ourCap_10, meta_8){
  var lastArg, newEmptyChunk, withLocation;
  if (meta_8.ref != null)
    return $thenCompose($retriever((checkCriticalElement(meta_8.ref != null) , castTo(meta_8.ref, 115)), ourCap_10.rBaseKey, streamSecret_9, this$static.nextChunkLabel, this$static.nextChunkBat, crypto_3.hasher), makeLambdaFunction(EncryptedChunkRetriever$lambda$5$Type.prototype.apply_0, EncryptedChunkRetriever$lambda$5$Type, [version_1, network_2, crypto_3, startIndex_4, truncateTo_6, nextChunkCap_8, streamSecret_9, meta_8]));
  newEmptyChunk = new Chunk(initUnidimensionalArray(B_classLit, $intern_28, 8, 0, 15, 1), this$static.dataKey, (lastArg = this$static.nextChunkLabel , $createNonce_0(this$static.dataKey) , lastArg));
  withLocation = new LocatedChunk(new Location_0(nextChunkCap_8.owner, nextChunkCap_8.writer, nextChunkCap_8.mapKey), this$static.nextChunkBat, ($clinit_MaybeMultihash() , $clinit_MaybeMultihash() , EMPTY_0), newEmptyChunk);
  return new CompletableFuture_0(($clinit_Optional() , new Optional(checkCriticalNotNull(withLocation))));
}

function $lambda$8_11(this$static, ourCap_1, ourExistingHash_2, truncateTo_3, data_3){
  var lastArg;
  return $clinit_Optional() , new Optional(checkCriticalNotNull(new LocatedChunk(new Location_0(ourCap_1.owner, ourCap_1.writer, ourCap_1.mapKey), ourCap_1.bat, ourExistingHash_2, new Chunk(truncate(data_3, toInt_0(compare_1($intern_70, truncateTo_3) < 0?$intern_70:truncateTo_3)), this$static.dataKey, (lastArg = copyOf(ourCap_1.mapKey, ourCap_1.mapKey.length) , $createNonce_0(ourCap_1.rBaseKey) , lastArg)))));
}

function EncryptedChunkRetriever(linksToData, nextChunkLabel, nextChunkBat, dataKey){
  this.linksToData = linksToData;
  this.nextChunkLabel = nextChunkLabel;
  this.nextChunkBat = nextChunkBat;
  this.dataKey = dataKey;
}

function lambda$5_8(version_0, network_1, crypto_2, startIndex_3, truncateTo_5, nextChunkCap_7, streamSecret_8, meta_9, retriever_8){
  return $getChunk(retriever_8, version_0, network_1, crypto_2, sub_1(startIndex_3, $intern_70), sub_1(truncateTo_5, $intern_70), nextChunkCap_7, streamSecret_8, (checkCriticalElement(meta_9.ref != null) , castTo(meta_9.ref, 115)).lastCommittedHash, makeLambdaFunction(EncryptedChunkRetriever$lambda$6$Type.prototype.accept_5, EncryptedChunkRetriever$lambda$6$Type, []));
}

function truncate(in_0, length_0){
  if (in_0.length == length_0)
    return in_0;
  return checkCopyOfRange(in_0, 0, length_0) , copyPrimitiveByteArray(in_0, initUnidimensionalArray(B_classLit, $intern_28, 8, length_0, 15, 1), 0, length_0);
}

defineClass(1141, 1, {}, EncryptedChunkRetriever);
var Lpeergos_shared_user_fs_EncryptedChunkRetriever_2_classLit = createForClass('peergos.shared.user.fs', 'EncryptedChunkRetriever', 1141);
function EncryptedChunkRetriever$0methodref$of$Type(){
}

defineClass(3493, $wnd.Function, $intern_22, EncryptedChunkRetriever$0methodref$of$Type);
_.apply_0 = function apply_1985(arg0){
  return $clinit_Optional() , new Optional(checkCriticalNotNull(castTo(arg0, 20)));
}
;
function EncryptedChunkRetriever$lambda$0$Type($$outer_0, ourCap_1, version_2, streamSecret_3, network_4, crypto_5, fileSize_6, nBufferedChunks_8, monitor_9){
  this.$$outer_0 = $$outer_0;
  this.ourCap_1 = ourCap_1;
  this.version_2 = version_2;
  this.streamSecret_3 = streamSecret_3;
  this.network_4 = network_4;
  this.crypto_5 = crypto_5;
  this.fileSize_6 = fileSize_6;
  this.nBufferedChunks_8 = nBufferedChunks_8;
  this.monitor_9 = monitor_9;
}

defineClass(3492, $wnd.Function, $intern_22, EncryptedChunkRetriever$lambda$0$Type);
_.apply_0 = function apply_1986(arg0){
  return $lambda$0_32(this.$$outer_0, this.ourCap_1, this.version_2, this.streamSecret_3, this.network_4, this.crypto_5, this.fileSize_6, this.nBufferedChunks_8, this.monitor_9, arg0);
}
;
_.fileSize_6 = 0;
_.nBufferedChunks_8 = 0;
function EncryptedChunkRetriever$lambda$2$Type($$outer_0, version_1, startCap_2, streamSecret_3, offset_4, hasher_6, network_7){
  this.$$outer_0 = $$outer_0;
  this.version_1 = version_1;
  this.startCap_2 = startCap_2;
  this.streamSecret_3 = streamSecret_3;
  this.offset_4 = offset_4;
  this.hasher_6 = hasher_6;
  this.network_7 = network_7;
}

defineClass(3494, $wnd.Function, $intern_22, EncryptedChunkRetriever$lambda$2$Type);
_.apply_0 = function apply_1987(arg0){
  return $lambda$2_24(this.$$outer_0, this.version_1, this.startCap_2, this.streamSecret_3, this.offset_4, this.hasher_6, this.network_7, arg0);
}
;
_.offset_4 = 0;
function EncryptedChunkRetriever$lambda$3$Type($$outer_0, version_1, startCap_2, streamSecret_3, offset_4, hasher_6, network_7){
  this.$$outer_0 = $$outer_0;
  this.version_1 = version_1;
  this.startCap_2 = startCap_2;
  this.streamSecret_3 = streamSecret_3;
  this.offset_4 = offset_4;
  this.hasher_6 = hasher_6;
  this.network_7 = network_7;
}

defineClass(3498, $wnd.Function, $intern_22, EncryptedChunkRetriever$lambda$3$Type);
_.apply_0 = function apply_1988(arg0){
  return $lambda$3_24(this.$$outer_0, this.version_1, this.startCap_2, this.streamSecret_3, this.offset_4, this.hasher_6, this.network_7, arg0);
}
;
_.offset_4 = 0;
function EncryptedChunkRetriever$lambda$4$Type($$outer_0, version_1, network_2, crypto_3, startIndex_4, truncateTo_6, nextChunkCap_8, streamSecret_9, ourCap_10){
  this.$$outer_0 = $$outer_0;
  this.version_1 = version_1;
  this.network_2 = network_2;
  this.crypto_3 = crypto_3;
  this.startIndex_4 = startIndex_4;
  this.truncateTo_6 = truncateTo_6;
  this.nextChunkCap_8 = nextChunkCap_8;
  this.streamSecret_9 = streamSecret_9;
  this.ourCap_10 = ourCap_10;
}

defineClass(3495, $wnd.Function, $intern_22, EncryptedChunkRetriever$lambda$4$Type);
_.apply_0 = function apply_1989(arg0){
  return $lambda$4_17(this.$$outer_0, this.version_1, this.network_2, this.crypto_3, this.startIndex_4, this.truncateTo_6, this.nextChunkCap_8, this.streamSecret_9, this.ourCap_10, arg0);
}
;
_.startIndex_4 = 0;
_.truncateTo_6 = 0;
function EncryptedChunkRetriever$lambda$5$Type(version_0, network_1, crypto_2, startIndex_3, truncateTo_5, nextChunkCap_7, streamSecret_8, meta_9){
  this.version_0 = version_0;
  this.network_1 = network_1;
  this.crypto_2 = crypto_2;
  this.startIndex_3 = startIndex_3;
  this.truncateTo_5 = truncateTo_5;
  this.nextChunkCap_7 = nextChunkCap_7;
  this.streamSecret_8 = streamSecret_8;
  this.meta_9 = meta_9;
}

defineClass(3499, $wnd.Function, $intern_22, EncryptedChunkRetriever$lambda$5$Type);
_.apply_0 = function apply_1990(arg0){
  return lambda$5_8(this.version_0, this.network_1, this.crypto_2, this.startIndex_3, this.truncateTo_5, this.nextChunkCap_7, this.streamSecret_8, this.meta_9, arg0);
}
;
_.startIndex_3 = 0;
_.truncateTo_5 = 0;
function EncryptedChunkRetriever$lambda$6$Type(){
}

defineClass(3500, $wnd.Function, {}, EncryptedChunkRetriever$lambda$6$Type);
_.accept_5 = function accept_161(arg0){
}
;
function EncryptedChunkRetriever$lambda$7$Type(){
}

defineClass(3496, $wnd.Function, $intern_22, EncryptedChunkRetriever$lambda$7$Type);
_.apply_0 = function apply_1991(arg0){
  return castTo(castTo(arg0, 48), 27).value_0;
}
;
function EncryptedChunkRetriever$lambda$8$Type($$outer_0, ourCap_1, ourExistingHash_2, truncateTo_3){
  this.$$outer_0 = $$outer_0;
  this.ourCap_1 = ourCap_1;
  this.ourExistingHash_2 = ourExistingHash_2;
  this.truncateTo_3 = truncateTo_3;
}

defineClass(3497, $wnd.Function, $intern_22, EncryptedChunkRetriever$lambda$8$Type);
_.apply_0 = function apply_1992(arg0){
  return $lambda$8_11(this.$$outer_0, this.ourCap_1, this.ourExistingHash_2, this.truncateTo_3, arg0);
}
;
_.truncateTo_3 = 0;
function fromCbor_103(cbor){
  var allowedFailures, map_0, originalFragments, t, type_0;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Incorrect cbor for Fragmenter: ' + cbor));
  map_0 = castTo(cbor, 18);
  t = castTo(castTo($get_0(map_0.values_0, new CborObject$CborString('t')), 7), 29).value_0;
  type_0 = ofVal(toInt_0(t));
  if (type_0 == ($clinit_Fragmenter$Type() , SIMPLE))
    return new SplitFragmenter;
  originalFragments = toInt_0(castTo(castTo($get_0(map_0.values_0, new CborObject$CborString('o')), 7), 29).value_0);
  allowedFailures = toInt_0(castTo(castTo($get_0(map_0.values_0, new CborObject$CborString('a')), 7), 29).value_0);
  return new ErasureFragmenter(originalFragments, allowedFailures);
}

function getInstance(){
  return new SplitFragmenter;
}

function $clinit_ErasureFragmenter(){
  $clinit_ErasureFragmenter = emptyMethod;
  castTo($collect_0(of_5(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Integer_2_classLit, 1), $intern_0, 100, 0, [valueOf_1(5), valueOf_1(10), valueOf_1(20), valueOf_1(40), valueOf_1(80)])), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47);
  castTo($collect_0(of_5(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Integer_2_classLit, 1), $intern_0, 100, 0, [valueOf_1(5), valueOf_1(10), valueOf_1(20), valueOf_1(40), valueOf_1(80)])), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [UNORDERED, IDENTITY_FINISH]))), 47);
}

function $toCbor_94(this$static){
  var res, transformed;
  res = new HashMap;
  $putStringValue(res, 't', new CborObject$CborLong(($clinit_Fragmenter$Type() , ERASURE_CODING).val_0));
  $putStringValue(res, 'o', new CborObject$CborLong(this$static.nOriginalFragments));
  $putStringValue(res, 'a', new CborObject$CborLong(this$static.nAllowedFailures));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new AbstractHashMap$EntrySet(res), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function ErasureFragmenter(nOriginalFragments, nAllowedFailures){
  $clinit_ErasureFragmenter();
  this.nOriginalFragments = nOriginalFragments;
  this.nAllowedFailures = nAllowedFailures;
}

defineClass(425, 1, {7:1, 425:1}, ErasureFragmenter);
_.serialize = function serialize_125(){
  return $toByteArray_2($toCbor_94(this));
}
;
_.equals_0 = function equals_97(o){
  var that;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_user_fs_ErasureFragmenter_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 425);
  if (this.nOriginalFragments != that.nOriginalFragments)
    return false;
  return this.nAllowedFailures == that.nAllowedFailures;
}
;
_.hashCode_1 = function hashCode_94(){
  var result;
  result = this.nOriginalFragments;
  result = 31 * result + this.nAllowedFailures;
  return result;
}
;
_.recombine = function recombine_0(encoded, startOffset, truncateLength){
  var withPrefix, withoutPrefix;
  withoutPrefix = recombine_3(encoded, truncateLength, this.nOriginalFragments, this.nAllowedFailures);
  withPrefix = initUnidimensionalArray(B_classLit, $intern_28, 8, startOffset + withoutPrefix.length, 15, 1);
  arraycopy(withoutPrefix, 0, withPrefix, startOffset, withoutPrefix.length);
  return withPrefix;
}
;
_.split = function split_4(input_0){
  return split_6(input_0, this.nOriginalFragments, this.nAllowedFailures);
}
;
_.storageIncreaseFactor = function storageIncreaseFactor(){
  return (2 * this.nAllowedFailures + this.nOriginalFragments) / this.nOriginalFragments;
}
;
_.toCbor = function toCbor_123(){
  return $toCbor_94(this);
}
;
_.nAllowedFailures = 0;
_.nOriginalFragments = 0;
var Lpeergos_shared_user_fs_ErasureFragmenter_2_classLit = createForClass('peergos.shared.user.fs', 'ErasureFragmenter', 425);
function FileExistsException(filename){
  RuntimeException_0.call(this, 'File already exists with name ' + filename);
}

defineClass(421, 35, {4:1, 51:1, 35:1, 33:1, 421:1}, FileExistsException);
var Lpeergos_shared_user_fs_FileExistsException_2_classLit = createForClass('peergos.shared.user.fs', 'FileExistsException', 421);
function $clinit_FileProperties(){
  $clinit_FileProperties = emptyMethod;
  EMPTY_2 = new FileProperties_0('', true, false, '', 0, ($clinit_LocalDateTime() , MIN_0), MIN_0, false, ($clinit_Optional() , $clinit_Optional() , EMPTY), (null , EMPTY));
}

function $getType(this$static){
  if (this$static.isDirectory)
    return 'dir';
  if ($equals_0(this$static.mimeType, 'text/calendar'))
    return 'calendar';
  if ($equals_0(this$static.mimeType, 'text/vcard'))
    return 'contact file';
  if ($startsWith(this$static.mimeType, 'image'))
    return 'image';
  if ($startsWith(this$static.mimeType, 'audio'))
    return 'audio';
  if ($startsWith(this$static.mimeType, 'video'))
    return 'video';
  if ($startsWith(this$static.mimeType, 'text'))
    return 'text';
  if ($equals_0(this$static.mimeType, 'application/pdf'))
    return 'pdf';
  if ($equals_0(this$static.mimeType, 'application/zip'))
    return 'zip';
  if ($equals_0(this$static.mimeType, 'application/java-archive'))
    return 'java-archive';
  if ($equals_0(this$static.mimeType, 'application/vnd.openxmlformats-officedocument.presentationml.presentation'))
    return 'powerpoint presentation';
  if ($equals_0(this$static.mimeType, 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'))
    return 'word document';
  if ($equals_0(this$static.mimeType, 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'))
    return 'excel spreadsheet';
  if ($equals_0(this$static.mimeType, 'application/vnd.oasis.opendocument.text'))
    return 'text document';
  if ($equals_0(this$static.mimeType, 'application/vnd.oasis.opendocument.spreadsheet'))
    return 'spreadsheet';
  if ($equals_0(this$static.mimeType, 'application/vnd.oasis.opendocument.presentation'))
    return 'presentation';
  if ($equals_0(this$static.mimeType, 'application/vnd.peergos-todo'))
    return 'todo';
  return 'file';
}

function $toCbor_95(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'd', new CborObject$CborBoolean(this$static.isDirectory));
  $put_6(state, 'l', new CborObject$CborBoolean(this$static.isLink));
  $put_6(state, 'n', new CborObject$CborString(this$static.name));
  $put_6(state, 'm', new CborObject$CborString(this$static.mimeType));
  $put_6(state, 's', new CborObject$CborLong(this$static.size_0));
  $put_6(state, 't', new CborObject$CborLong($toEpochSecond(this$static.modified, ($clinit_ZoneOffset() , UTC_0))));
  $put_6(state, 'tn', new CborObject$CborLong(this$static.modified.time.nano));
  $put_6(state, 'c', new CborObject$CborLong($toEpochSecond(this$static.created, UTC_0)));
  $put_6(state, 'cn', new CborObject$CborLong(this$static.created.time.nano));
  $put_6(state, 'h', new CborObject$CborBoolean(this$static.isHidden));
  $ifPresent(this$static.thumbnail, new FileProperties$lambda$9$Type(state));
  $ifPresent(this$static.thumbnail, new FileProperties$lambda$10$Type(state));
  $ifPresent(this$static.streamSecret, new FileProperties$lambda$11$Type(state));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function $withNewStreamSecret(this$static, streamSecret){
  return new FileProperties_0(this$static.name, this$static.isDirectory, this$static.isLink, this$static.mimeType, this$static.size_0, this$static.modified, this$static.created, this$static.isHidden, this$static.thumbnail, ($clinit_Optional() , new Optional(checkCriticalNotNull(streamSecret))));
}

function $withSize(this$static, newSize){
  return new FileProperties_0(this$static.name, this$static.isDirectory, this$static.isLink, this$static.mimeType, newSize, this$static.modified, this$static.created, this$static.isHidden, this$static.thumbnail, this$static.streamSecret);
}

function $withThumbnail(this$static, newThumbnail){
  return new FileProperties_0(this$static.name, this$static.isDirectory, this$static.isLink, this$static.mimeType, this$static.size_0, this$static.modified, this$static.created, this$static.isHidden, newThumbnail, this$static.streamSecret);
}

function FileProperties(name_0, isDirectory, isLink, mimeType, sizeHi, sizeLo, modified, created, isHidden, thumbnail, streamSecret){
  $clinit_FileProperties();
  if (name_0.length > 255)
    throw toJs(new IllegalStateException_0('File and directory names must be less than 256 characters.'));
  if (isDirectory && streamSecret.ref != null)
    throw toJs(new IllegalStateException_0('Directories cannot have stream secrets!'));
  this.name = name_0;
  this.isDirectory = isDirectory;
  this.isLink = isLink;
  this.mimeType = mimeType;
  this.size_0 = or_0(and_0(sizeLo, $intern_47), shl_0(or_0(sizeHi, 0), 32));
  this.modified = modified;
  this.created = created;
  this.isHidden = isHidden;
  this.thumbnail = thumbnail;
  this.streamSecret = streamSecret;
}

function FileProperties_0(name_0, isDirectory, isLink, mimeType, size_0, modified, created, isHidden, thumbnail, streamSecret){
  $clinit_FileProperties();
  FileProperties.call(this, name_0, isDirectory, isLink, mimeType, toInt_0(shr_0(size_0, 32)), toInt_0(size_0), modified, created, isHidden, thumbnail, streamSecret);
}

function calculateMapKey(streamSecret, firstMapKey, firstBat, offset, h){
  $clinit_FileProperties();
  var $tmp, counter, i, iterations;
  iterations = div(offset, $intern_70);
  counter = new ArrayList;
  for (i = 0; compare_1(i, iterations) < 0; $tmp = i , i = add_1(i, 1) , $tmp)
    $add(counter, valueOf_2(i));
  return reduceAll(counter, new Pair(firstMapKey, firstBat), new FileProperties$lambda$0$Type(streamSecret, h), new FileProperties$lambda$1$Type);
}

function calculateNextMapKey(streamSecret, currentMapKey, currentBat, h){
  $clinit_FileProperties();
  return $thenCompose($sha256(h, concat_0(streamSecret, currentMapKey)), makeLambdaFunction(FileProperties$lambda$5$Type.prototype.apply_0, FileProperties$lambda$5$Type, [currentBat, h, streamSecret]));
}

function calculateSubsequentMapKeys(streamSecret, firstMapKey, firstBat, nChunks, h){
  $clinit_FileProperties();
  var $tmp, counter, first, i;
  counter = new ArrayList;
  for (i = 0; compare_1(i, nChunks) < 0; $tmp = i , i = add_1(i, 1) , $tmp)
    $add(counter, valueOf_2(i));
  first = list_0(new Pair(firstMapKey, firstBat));
  return reduceAll(counter, first, new FileProperties$lambda$2$Type(streamSecret, h), new FileProperties$lambda$3$Type);
}

function ensureValidParsedPath(path){
  $clinit_FileProperties();
  ensureValidPath(path.pathString);
}

function ensureValidPath(path){
  $clinit_FileProperties();
  if (path.length > $intern_15)
    throw toJs(new IllegalArgumentException_0('Path too long! Paths must be smaller than 4096'));
}

function fromCbor_102(cbor){
  $clinit_FileProperties();
  var created, createdEpochSeconds, createdNano, isDirectory, isHidden, isLink, m, mimeType, modified, modifiedEpochSeconds, modifiedNano, name_0, size_0, streamSecret, thumbnail, thumbnailData, val, val0;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor for FileProperties! ' + cbor));
  m = castTo(cbor, 18);
  isDirectory = (val0 = castTo(castTo($get_0(m.values_0, new CborObject$CborString('d')), 7), 63) , !!val0 && val0.value_0);
  isLink = $getBoolean(m);
  name_0 = castTo(castTo($get_0(m.values_0, new CborObject$CborString('n')), 7), 13).value_0;
  mimeType = castTo(castTo($get_0(m.values_0, new CborObject$CborString('m')), 7), 13).value_0;
  size_0 = castTo(castTo($get_0(m.values_0, new CborObject$CborString('s')), 7), 29).value_0;
  modifiedEpochSeconds = castTo(castTo($get_0(m.values_0, new CborObject$CborString('t')), 7), 29).value_0;
  modifiedNano = toInt_0(castTo($orElse($map(ofNullable(castTo(castTo($get_0(m.values_0, new CborObject$CborString('tn')), 7), 29)), makeLambdaFunction(CborObject$CborMap$lambda$6$Type.prototype.apply_0, CborObject$CborMap$lambda$6$Type, [])), valueOf_2(0)), 69).value_0);
  createdEpochSeconds = castTo($orElse($map(ofNullable(castTo(castTo($get_0(m.values_0, new CborObject$CborString('c')), 7), 29)), makeLambdaFunction(CborObject$CborMap$lambda$6$Type.prototype.apply_0, CborObject$CborMap$lambda$6$Type, [])), valueOf_2(modifiedEpochSeconds)), 69).value_0;
  createdNano = toInt_0(castTo($orElse($map(ofNullable(castTo(castTo($get_0(m.values_0, new CborObject$CborString('cn')), 7), 29)), makeLambdaFunction(CborObject$CborMap$lambda$6$Type.prototype.apply_0, CborObject$CborMap$lambda$6$Type, [])), valueOf_2(0)), 69).value_0);
  isHidden = (val = castTo(castTo($get_0(m.values_0, new CborObject$CborString('h')), 7), 63) , !!val && val.value_0);
  thumbnailData = $map(ofNullable(castTo(castTo($get_0(m.values_0, new CborObject$CborString('i')), 7), 27)), makeLambdaFunction(CborObject$CborMap$lambda$5$Type.prototype.apply_0, CborObject$CborMap$lambda$5$Type, []));
  thumbnail = $map(thumbnailData, makeLambdaFunction(FileProperties$lambda$12$Type.prototype.apply_0, FileProperties$lambda$12$Type, [m]));
  streamSecret = $map(ofNullable(castTo(castTo($get_0(m.values_0, new CborObject$CborString('p')), 7), 27)), makeLambdaFunction(CborObject$CborMap$lambda$5$Type.prototype.apply_0, CborObject$CborMap$lambda$5$Type, []));
  modified = ofEpochSecond(modifiedEpochSeconds, modifiedNano, ($clinit_ZoneOffset() , UTC_0));
  created = ofEpochSecond(createdEpochSeconds, createdNano, UTC_0);
  return new FileProperties_0(name_0, isDirectory, isLink, mimeType, size_0, modified, created, isHidden, thumbnail, streamSecret);
}

function lambda$0_28(streamSecret_0, h_1, current_2){
  $clinit_FileProperties();
  return calculateNextMapKey(streamSecret_0, castTo(current_2.left, 11), castTo(current_2.right, 12), h_1);
}

function lambda$12_7(m_0, d_1){
  $clinit_FileProperties();
  return new Thumbnail($getString(m_0, 'im', 'image/png'), d_1);
}

function lambda$2_14(streamSecret_0, h_1, current_2){
  $clinit_FileProperties();
  return $thenApply(calculateNextMapKey(streamSecret_0, castTo(castTo(current_2.getAtIndex(current_2.size() - 1), 20).left, 11), castTo(castTo(current_2.getAtIndex(current_2.size() - 1), 20).right, 12), h_1), makeLambdaFunction(FileProperties$lambda$4$Type.prototype.apply_0, FileProperties$lambda$4$Type, [current_2]));
}

function lambda$4_11(current_0, next_1){
  $clinit_FileProperties();
  return current_0.add(next_1) , current_0;
}

function lambda$5_9(currentBat_0, h_1, streamSecret_2, nextMapKey_3){
  $clinit_FileProperties();
  return $thenApply(currentBat_0.ref != null?$thenApply($thenApply($sha256(h_1, concat_0(streamSecret_2, (checkCriticalElement(currentBat_0.ref != null) , castTo(currentBat_0.ref, 61)).secret)), makeLambdaFunction(FileProperties$0methodref$ctor$Type.prototype.apply_0, FileProperties$0methodref$ctor$Type, [])), makeLambdaFunction(FileProperties$1methodref$of$Type.prototype.apply_0, FileProperties$1methodref$of$Type, [])):new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY)), makeLambdaFunction(FileProperties$lambda$8$Type.prototype.apply_0, FileProperties$lambda$8$Type, [nextMapKey_3]));
}

function list_0(elem){
  var res;
  res = new ArrayList;
  res.array[res.array.length] = elem;
  return res;
}

defineClass(96, 1, {7:1, 96:1}, FileProperties, FileProperties_0);
_.serialize = function serialize_126(){
  return $toByteArray_2($toCbor_95(this));
}
;
_.asLink = function asLink(){
  return new FileProperties_0(this.name, this.isDirectory, true, this.mimeType, this.size_0, this.modified, this.created, this.isHidden, this.thumbnail, this.streamSecret);
}
;
_.chunkCount = function chunkCount(){
  return getNumberOfChunks(this.size_0);
}
;
_.getType = function getType_1(){
  return $getType(this);
}
;
_.isSocialPost = function isSocialPost(){
  return $equals_0('application/vnd.peergos-post', this.mimeType);
}
;
_.sizeHigh = function sizeHigh(){
  return toInt_0(shr_0(this.size_0, 32));
}
;
_.sizeLow = function sizeLow(){
  return toInt_0(this.size_0);
}
;
_.toCbor = function toCbor_124(){
  return $toCbor_95(this);
}
;
_.toString = function toString_84(){
  return "FileProperties{name='" + this.name + "'" + ', size=' + toString_4(this.size_0) + ', modified=' + this.modified + ', created=' + this.modified + ', isHidden=' + this.isHidden + ', thumbnail=' + this.thumbnail + '}';
}
;
_.toString_0 = function(){
  return this.toString();
}
;
_.withLink = function withLink(link_0){
  return new FileProperties_0(link_0.name, this.isDirectory, false, this.mimeType, this.size_0, this.modified, this.created, this.isHidden, this.thumbnail, this.streamSecret);
}
;
_.withModified = function withModified(modified){
  return new FileProperties_0(this.name, this.isDirectory, this.isLink, this.mimeType, this.size_0, modified, this.created, this.isHidden, this.thumbnail, this.streamSecret);
}
;
_.withNewStreamSecret = function withNewStreamSecret(streamSecret){
  return $withNewStreamSecret(this, streamSecret);
}
;
_.withNoThumbnail = function withNoThumbnail(){
  return new FileProperties_0(this.name, this.isDirectory, this.isLink, this.mimeType, this.size_0, this.modified, this.created, this.isHidden, ($clinit_Optional() , $clinit_Optional() , EMPTY), this.streamSecret);
}
;
_.withThumbnail = function withThumbnail(newThumbnail){
  return $withThumbnail(this, newThumbnail);
}
;
_.isDirectory = false;
_.isHidden = false;
_.isLink = false;
_.size_0 = 0;
var EMPTY_2, MAX_FILE_NAME_SIZE = 255, MAX_PATH_SIZE = $intern_15;
var Lpeergos_shared_user_fs_FileProperties_2_classLit = createForClass('peergos.shared.user.fs', 'FileProperties', 96);
function FileProperties$0methodref$ctor$Type(){
}

defineClass(2613, $wnd.Function, $intern_22, FileProperties$0methodref$ctor$Type);
_.apply_0 = function apply_1993(arg0){
  return new Bat(castTo(arg0, 11));
}
;
function FileProperties$1methodref$of$Type(){
}

defineClass(2614, $wnd.Function, $intern_22, FileProperties$1methodref$of$Type);
_.apply_0 = function apply_1994(arg0){
  return $clinit_Optional() , new Optional(checkCriticalNotNull(castTo(arg0, 61)));
}
;
function FileProperties$lambda$0$Type(streamSecret_0, h_1){
  this.streamSecret_0 = streamSecret_0;
  this.h_1 = h_1;
}

defineClass(846, 1, $intern_34, FileProperties$lambda$0$Type);
_.apply_1 = function apply_1995(arg0, arg1){
  return lambda$0_28(this.streamSecret_0, this.h_1, arg0);
}
;
var Lpeergos_shared_user_fs_FileProperties$lambda$0$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileProperties/lambda$0$Type', 846);
function FileProperties$lambda$1$Type(){
}

defineClass(847, 1, $intern_34, FileProperties$lambda$1$Type);
_.apply_1 = function apply_1996(arg0, arg1){
  return $clinit_FileProperties() , castTo(arg1, 20);
}
;
var Lpeergos_shared_user_fs_FileProperties$lambda$1$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileProperties/lambda$1$Type', 847);
function FileProperties$lambda$10$Type(state_0){
  this.state_0 = state_0;
}

defineClass(851, 1, $intern_32, FileProperties$lambda$10$Type);
_.accept = function accept_162(arg0){
  $clinit_FileProperties();
  $put_6(this.state_0, 'im', new CborObject$CborString(castTo(arg0, 245).mimeType));
}
;
_.andThen = function andThen_82(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_fs_FileProperties$lambda$10$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileProperties/lambda$10$Type', 851);
function FileProperties$lambda$11$Type(state_0){
  this.state_0 = state_0;
}

defineClass(852, 1, $intern_32, FileProperties$lambda$11$Type);
_.accept = function accept_163(arg0){
  $clinit_FileProperties();
  $put_6(this.state_0, 'p', new CborObject$CborByteArray(castTo(arg0, 11)));
}
;
_.andThen = function andThen_83(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_fs_FileProperties$lambda$11$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileProperties/lambda$11$Type', 852);
function FileProperties$lambda$12$Type(m_0){
  this.m_0 = m_0;
}

defineClass(2611, $wnd.Function, $intern_22, FileProperties$lambda$12$Type);
_.apply_0 = function apply_1997(arg0){
  return lambda$12_7(this.m_0, arg0);
}
;
function FileProperties$lambda$2$Type(streamSecret_0, h_1){
  this.streamSecret_0 = streamSecret_0;
  this.h_1 = h_1;
}

defineClass(848, 1, $intern_34, FileProperties$lambda$2$Type);
_.apply_1 = function apply_1998(arg0, arg1){
  return lambda$2_14(this.streamSecret_0, this.h_1, arg0);
}
;
var Lpeergos_shared_user_fs_FileProperties$lambda$2$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileProperties/lambda$2$Type', 848);
function FileProperties$lambda$3$Type(){
}

defineClass(849, 1, $intern_34, FileProperties$lambda$3$Type);
_.apply_1 = function apply_1999(arg0, arg1){
  return $clinit_FileProperties() , castTo(concat(castTo(arg0, 17).stream(), castTo(arg1, 17).stream()).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
}
;
var Lpeergos_shared_user_fs_FileProperties$lambda$3$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileProperties/lambda$3$Type', 849);
function FileProperties$lambda$4$Type(current_0){
  this.current_0 = current_0;
}

defineClass(2612, $wnd.Function, $intern_22, FileProperties$lambda$4$Type);
_.apply_0 = function apply_2000(arg0){
  return lambda$4_11(this.current_0, arg0);
}
;
function FileProperties$lambda$5$Type(currentBat_0, h_1, streamSecret_2){
  this.currentBat_0 = currentBat_0;
  this.h_1 = h_1;
  this.streamSecret_2 = streamSecret_2;
}

defineClass(2610, $wnd.Function, $intern_22, FileProperties$lambda$5$Type);
_.apply_0 = function apply_2001(arg0){
  return lambda$5_9(this.currentBat_0, this.h_1, this.streamSecret_2, arg0);
}
;
function FileProperties$lambda$8$Type(nextMapKey_0){
  this.nextMapKey_0 = nextMapKey_0;
}

defineClass(2615, $wnd.Function, $intern_22, FileProperties$lambda$8$Type);
_.apply_0 = function apply_2002(arg0){
  return $clinit_FileProperties() , new Pair(this.nextMapKey_0, castTo(arg0, 12));
}
;
function FileProperties$lambda$9$Type(state_0){
  this.state_0 = state_0;
}

defineClass(850, 1, $intern_32, FileProperties$lambda$9$Type);
_.accept = function accept_164(arg0){
  $clinit_FileProperties();
  $put_6(this.state_0, 'i', new CborObject$CborByteArray(castTo(arg0, 245).data_0));
}
;
_.andThen = function andThen_84(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_fs_FileProperties$lambda$9$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileProperties/lambda$9$Type', 850);
function $clinit_FileUploader(){
  $clinit_FileUploader = emptyMethod;
  LOG_6 = ($clinit_Logger() , getLogger());
}

function $encryptChunk(this$static, chunkIndex, owner, writer, mirrorBat, ourExistingHash, random, hasher, isJS){
  var data_0, fileLength, isLastChunk, length_0, position;
  $info(($clinit_Logger() , getLogger()), 'encrypting chunk: ' + toString_4(chunkIndex) + ' of ' + this$static.name_0);
  position = mul_0(chunkIndex, $intern_70);
  fileLength = this$static.length_0;
  isLastChunk = lt(fileLength, add_1(position, $intern_70));
  length_0 = isLastChunk?toInt_0(sub_1(fileLength, position)):$intern_70;
  data_0 = initUnidimensionalArray(B_classLit, $intern_28, 8, length_0, 15, 1);
  return $thenCompose(this$static.reader.readIntoArray(data_0, 0, data_0.length), makeLambdaFunction(FileUploader$lambda$13$Type.prototype.apply_0, FileUploader$lambda$13$Type, [this$static, owner, writer, mirrorBat, random, hasher, isJS, data_0, ourExistingHash, chunkIndex]));
}

function $lambda$0_33(this$static, owner_1, writer_2, mirrorBat_3, random_4, hasher_5, network_6, c_7, startChunkIndex_8, current_9){
  var input_0, queue, res, t1;
  t1 = ($clinit_System() , fromDouble_0(Date.now()));
  queue = new FileUploader$AsyncUploadQueue;
  input_0 = castTo(range_0(startChunkIndex_8, toInt_0(this$static.nchunks)).mapToObj(new FileUploader$lambda$1$Type).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  res = new CompletableFuture;
  $exceptionally(reduceAll(input_0, ($clinit_Boolean() , true), new FileUploader$lambda$2$Type(this$static, owner_1, writer_2, mirrorBat_3, random_4, hasher_5, network_6, queue), new FileUploader$lambda$3$Type), makeLambdaFunction(FileUploader$1methodref$completeExceptionally$Type.prototype.apply_0, FileUploader$1methodref$completeExceptionally$Type, [res]));
  $exceptionally($thenApply($thenApply(reduceAll(input_0, current_9, new FileUploader$lambda$7$Type(this$static, c_7, writer_2, network_6, queue), new FileUploader$lambda$8$Type), makeLambdaFunction(FileUploader$lambda$10$Type.prototype.apply_0, FileUploader$lambda$10$Type, [t1])), makeLambdaFunction(FileUploader$2methodref$complete$Type.prototype.apply_0, FileUploader$2methodref$complete$Type, [res])), makeLambdaFunction(FileUploader$3methodref$completeExceptionally$Type.prototype.apply_0, FileUploader$3methodref$completeExceptionally$Type, [res]));
  return res;
}

function $lambda$13_10(this$static, owner_1, writer_2, mirrorBat_3, random_4, hasher_5, isJS_6, data_7, ourExistingHash_8, chunkIndex_9){
  $createNonce_0(this$static.baseKey);
  return $thenCompose(calculateMapKey(castTo($get_6(this$static.props.streamSecret), 11), this$static.firstLocation, this$static.firstBat, mul_0(chunkIndex_9, $intern_70), hasher_5), makeLambdaFunction(FileUploader$lambda$14$Type.prototype.apply_0, FileUploader$lambda$14$Type, [this$static, owner_1, writer_2, mirrorBat_3, random_4, hasher_5, isJS_6, data_7, ourExistingHash_8]));
}

function $lambda$14_8(this$static, owner_1, writer_2, mirrorBat_3, random_4, hasher_5, isJS_6, data_7, ourExistingHash_9, mapKeyAndBat_9){
  var chunk, rawChunk;
  rawChunk = new Chunk(data_7, this$static.dataKey, castTo(mapKeyAndBat_9.left, 11));
  chunk = new LocatedChunk(new Location_0(owner_1, writer_2.publicKeyHash, copyOfRange(rawChunk.mapKey, 0, rawChunk.mapKey.length)), castTo(mapKeyAndBat_9.right, 12), ourExistingHash_9, rawChunk);
  return $thenCompose(calculateNextMapKey(castTo($get_6(this$static.props.streamSecret), 11), castTo(mapKeyAndBat_9.left, 11), castTo(mapKeyAndBat_9.right, 12), hasher_5), makeLambdaFunction(FileUploader$lambda$15$Type.prototype.apply_0, FileUploader$lambda$15$Type, [this$static, chunk, owner_1, writer_2, mirrorBat_3, random_4, hasher_5, isJS_6]));
}

function $lambda$15_8(this$static, chunk_1, owner_2, writer_3, mirrorBat_4, random_5, hasher_6, isJS_7, nextMapKeyAndBat_7){
  var nextChunk, nextChunkBat, nextChunkLocation;
  nextChunkBat = castTo(nextMapKeyAndBat_7.right, 12);
  nextChunkLocation = new Location_0(owner_2, writer_3.publicKeyHash, castTo(nextMapKeyAndBat_7.left, 11));
  if (!$equals_13(writer_3.publicKeyHash, chunk_1.location_0.writer))
    throw toJs(new IllegalStateException_0('Trying to write a chunk to the wrong signing key space!'));
  nextChunk = buildSubsequentChunk(copyOf(nextChunkLocation.mapKey, nextChunkLocation.mapKey.length), nextChunkBat, this$static.baseKey);
  return $thenApply(createFile_1(chunk_1.existingHash, chunk_1.location_0.writer, this$static.baseKey, chunk_1.chunk.dataKey, this$static.props, chunk_1.chunk.data_0, this$static.parentLocation, this$static.parentBat, this$static.parentparentKey, nextChunk, chunk_1.bat, mirrorBat_4, random_5, hasher_6, isJS_7), makeLambdaFunction(FileUploader$lambda$16$Type.prototype.apply_0, FileUploader$lambda$16$Type, [chunk_1]));
}

function $lambda$2_25(this$static, owner_1, writer_2, mirrorBat_3, random_4, hasher_5, network_6, queue_7, i_8){
  return runAsync(new FileUploader$lambda$4$Type(this$static, i_8, owner_1, writer_2, mirrorBat_3, random_4, hasher_5, network_6, queue_7), ($clinit_ForkJoinPool() , $clinit_ForkJoinPool() , instance_0));
}

function $lambda$4_18(this$static, i_1, owner_2, writer_3, mirrorBat_4, random_5, hasher_6, network_7, queue_8){
  return $thenCompose($encryptChunk(this$static, i_1.value_0, owner_2, writer_3, mirrorBat_4, ($clinit_MaybeMultihash() , $clinit_MaybeMultihash() , EMPTY_0), random_5, hasher_6, network_7.isJavascript), makeLambdaFunction(FileUploader$0methodref$add$Type.prototype.apply_0, FileUploader$0methodref$add$Type, [queue_8]));
}

function $lambda$7_10(this$static, c_1, writer_2, network_3, queue_4, s_4){
  return $thenCompose($poll_0(queue_4), makeLambdaFunction(FileUploader$lambda$9$Type.prototype.apply_0, FileUploader$lambda$9$Type, [this$static, s_4, c_1, writer_2, network_3]));
}

function $lambda$9_14(this$static, s_1, c_2, writer_3, network_4, chunk_4){
  return uploadChunk_0(s_1, c_2, chunk_4, writer_3, network_4, this$static.monitor);
}

function $upload(this$static, current, c, network, owner, writer, mirrorBat, random, hasher){
  return $thenCompose(this$static.reader.seek_1(0), makeLambdaFunction(FileUploader$lambda$0$Type.prototype.apply_0, FileUploader$lambda$0$Type, [this$static, owner, writer, mirrorBat, random, hasher, network, c, 0, current]));
}

function $uploadFrom(this$static, current, c, network, startChunkIndex, owner, writer, mirrorBat, random, hasher){
  return $thenCompose(this$static.reader.seek_1(startChunkIndex * $intern_70), makeLambdaFunction(FileUploader$lambda$0$Type.prototype.apply_0, FileUploader$lambda$0$Type, [this$static, owner, writer, mirrorBat, random, hasher, network, c, startChunkIndex, current]));
}

function FileUploader(name_0, fileData, lengthHi, lengthLow, baseKey, dataKey, parentLocation, parentBat, parentparentKey, monitor, fileProperties, firstLocation, firstBat){
  var length_0;
  length_0 = add_1(and_0(lengthLow, $intern_47), shl_0(and_0(lengthHi, $intern_47), 32));
  this.props = fileProperties;
  !baseKey && (baseKey = ($clinit_SymmetricKey() , random_10(castTo($get(PROVIDERS_1, ($clinit_SymmetricKey$Type() , TweetNaCl)), 91), castTo($get(RNG_PROVIDERS_0, TweetNaCl), 86))));
  this.nchunks = compare_1(length_0, 0) > 0?div(sub_1(add_1(length_0, $intern_70), 1), $intern_70):1;
  this.name_0 = name_0;
  this.length_0 = length_0;
  this.reader = fileData;
  this.baseKey = baseKey;
  this.dataKey = dataKey;
  this.parentLocation = parentLocation;
  this.parentBat = parentBat;
  this.parentparentKey = parentparentKey;
  this.monitor = monitor;
  this.firstLocation = firstLocation;
  this.firstBat = firstBat;
}

function FileUploader_0(name_0, fileData, length_0, baseKey, dataKey, parentLocation, parentBat, parentparentKey, monitor, fileProperties, firstLocation, firstBat){
  $clinit_FileUploader();
  FileUploader.call(this, name_0, fileData, toInt_0(shr_0(length_0, 32)), toInt_0(length_0), baseKey, dataKey, parentLocation, parentBat, parentparentKey, monitor, fileProperties, firstLocation, firstBat);
}

function lambda$10_9(t1_0, x_1){
  $clinit_FileUploader();
  $info(LOG_6, ($clinit_System() , 'File encryption, upload took: ' + toString_4(sub_1(fromDouble_0(Date.now()), t1_0)) + ' mS'));
  return x_1;
}

function lambda$16_7(chunk_0, p_1){
  $clinit_FileUploader();
  return new FileUploader$ChunkUpload(chunk_0, castTo(p_1.left, 115), castTo(p_1.right, 17));
}

function lambda$19_8(network_0, current_1, committer_2, metadata_3, chunk_4, writer_5, fragments_6, progress_7, tid_8){
  $clinit_FileUploader();
  return $thenCompose($uploadFragments(network_0, fragments_6, chunk_4.location_0.owner, writer_5, progress_7, tid_8), makeLambdaFunction(FileUploader$lambda$20$Type.prototype.apply_0, FileUploader$lambda$20$Type, [network_0, current_1, committer_2, metadata_3, chunk_4, writer_5, tid_8]));
}

function lambda$20_6(network_0, current_1, committer_2, metadata_3, chunk_4, writer_5, tid_6){
  $clinit_FileUploader();
  return $uploadChunk(network_0, current_1, committer_2, metadata_3, chunk_4.location_0.owner, $mapKey(chunk_4.chunk), writer_5, tid_6);
}

function lambda$21_5(current_0, committer_1, chunk_2, baseKey_3, writerLink_4, writer_5, network_6, progress_7, file_8){
  $clinit_FileUploader();
  return uploadChunk_0(current_0, committer_1, new FileUploader$ChunkUpload(chunk_2, $withWriterLink(castTo(file_8.left, 115), baseKey_3, writerLink_4), castTo(file_8.right, 17)), writer_5, network_6, progress_7);
}

function uploadChunk(current, committer, writer, props, parentLocation, parentBat, parentparentKey, baseKey, chunk, nextChunkLocation, nextChunkBat, writerLink, mirrorBat, random, hasher, network, monitor){
  $clinit_FileUploader();
  var nextChunk, progress;
  progress = makeLambdaFunction(CappedProgressConsumer.prototype.accept_5, CappedProgressConsumer, [monitor, chunk.chunk.data_0.length]);
  if (!$equals_13(writer.publicKeyHash, chunk.location_0.writer))
    throw toJs(new IllegalStateException_0('Trying to write a chunk to the wrong signing key space!'));
  nextChunk = buildSubsequentChunk(copyOf(nextChunkLocation.mapKey, nextChunkLocation.mapKey.length), nextChunkBat, baseKey);
  return $thenCompose(createFile_1(chunk.existingHash, chunk.location_0.writer, baseKey, chunk.chunk.dataKey, props, chunk.chunk.data_0, parentLocation, parentBat, parentparentKey, nextChunk, chunk.bat, mirrorBat, random, hasher, network.isJavascript), makeLambdaFunction(FileUploader$lambda$21$Type.prototype.apply_0, FileUploader$lambda$21$Type, [current, committer, chunk, baseKey, writerLink, writer, network, progress]));
}

function uploadChunk_0(current, committer, file, writer, network, monitor){
  var chunk, fragments, metadata, progress;
  metadata = file.metadata;
  chunk = file.chunk;
  fragments = castTo($collect_0($map_0($filter(file.fragments.stream(), new FileUploader$lambda$17$Type), makeLambdaFunction(FileUploader$lambda$18$Type.prototype.apply_0, FileUploader$lambda$18$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  progress = makeLambdaFunction(CappedProgressConsumer.prototype.accept_5, CappedProgressConsumer, [monitor, chunk.chunk.data_0.length]);
  (fragments.size() < file.fragments.size() || fragments.isEmpty()) && $accept_4(progress, valueOf_2(chunk.chunk.data_0.length));
  $info(($clinit_Logger() , getLogger()), 'Uploading chunk with ' + fragments.size() + ' fragments to mapkey ' + bytesToHex((new ByteArrayWrapper(chunk.location_0.mapKey)).data_0) + '\n');
  return call_2(chunk.location_0.owner, makeLambdaFunction(FileUploader$lambda$19$Type.prototype.apply_0, FileUploader$lambda$19$Type, [network, current, committer, metadata, chunk, writer, fragments, progress]), network.dhtClient);
}

defineClass(420, 1, {118:1}, FileUploader_0);
_.length_0 = 0;
_.nchunks = 0;
var LOG_6;
var Lpeergos_shared_user_fs_FileUploader_2_classLit = createForClass('peergos.shared.user.fs', 'FileUploader', 420);
function FileUploader$0methodref$add$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3390, $wnd.Function, $intern_22, FileUploader$0methodref$add$Type);
_.apply_0 = function apply_2003(arg0){
  return $add_7(this.$$outer_0, castTo(arg0, 364));
}
;
function FileUploader$1methodref$completeExceptionally$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3386, $wnd.Function, $intern_22, FileUploader$1methodref$completeExceptionally$Type);
_.apply_0 = function apply_2004(arg0){
  return $clinit_Boolean() , $completeExceptionally(this.$$outer_0, castTo(arg0, 33))?true:false;
}
;
function FileUploader$2methodref$complete$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3388, $wnd.Function, $intern_22, FileUploader$2methodref$complete$Type);
_.apply_0 = function apply_2005(arg0){
  return $clinit_Boolean() , $complete(this.$$outer_0, castTo(arg0, 43))?true:false;
}
;
function FileUploader$3methodref$completeExceptionally$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3389, $wnd.Function, $intern_22, FileUploader$3methodref$completeExceptionally$Type);
_.apply_0 = function apply_2006(arg0){
  return $clinit_Boolean() , $completeExceptionally(this.$$outer_0, castTo(arg0, 33))?true:false;
}
;
function $add_7(this$static, chunk){
  var wait;
  if (this$static.waitingUploaders.size_0 != 0) {
    $complete(castTo($poll(this$static.waitingUploaders), 6), chunk);
    return new CompletableFuture_0(($clinit_Boolean() , true));
  }
  $add_2(this$static.toUpload, new CompletableFuture_0(chunk));
  if (this$static.toUpload.size_0 < 10) {
    return new CompletableFuture_0(($clinit_Boolean() , true));
  }
  wait = new CompletableFuture;
  $add_2(this$static.waitingWorkers, wait);
  return wait;
}

function $poll_0(this$static){
  var res, wait, worker;
  if (this$static.toUpload.size_0 != 0) {
    res = castTo($poll(this$static.toUpload), 6);
    if (this$static.waitingWorkers.size_0 != 0) {
      worker = castTo($poll(this$static.waitingWorkers), 6);
      runAsync(new FileUploader$AsyncUploadQueue$lambda$0$Type(worker), ($clinit_ForkJoinPool() , $clinit_ForkJoinPool() , instance_0));
    }
    return res;
  }
  wait = new CompletableFuture;
  $add_2(this$static.waitingUploaders, wait);
  return wait;
}

function FileUploader$AsyncUploadQueue(){
  this.toUpload = new LinkedList;
  this.waitingWorkers = new LinkedList;
  this.waitingUploaders = new LinkedList;
}

function lambda$0_29(worker_0){
  return new CompletableFuture_0(($clinit_Boolean() , $complete(worker_0, true)?true:false));
}

defineClass(1041, 1, {}, FileUploader$AsyncUploadQueue);
var Lpeergos_shared_user_fs_FileUploader$AsyncUploadQueue_2_classLit = createForClass('peergos.shared.user.fs', 'FileUploader/AsyncUploadQueue', 1041);
function FileUploader$AsyncUploadQueue$lambda$0$Type(worker_0){
  this.worker_0 = worker_0;
}

defineClass(1042, 1, {}, FileUploader$AsyncUploadQueue$lambda$0$Type);
_.get_0 = function get_147(){
  return lambda$0_29(this.worker_0);
}
;
var Lpeergos_shared_user_fs_FileUploader$AsyncUploadQueue$lambda$0$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileUploader/AsyncUploadQueue/lambda$0$Type', 1042);
function FileUploader$ChunkUpload(chunk, metadata, fragments){
  this.chunk = chunk;
  this.metadata = metadata;
  this.fragments = fragments;
}

defineClass(364, 1, {364:1}, FileUploader$ChunkUpload);
var Lpeergos_shared_user_fs_FileUploader$ChunkUpload_2_classLit = createForClass('peergos.shared.user.fs', 'FileUploader/ChunkUpload', 364);
function FileUploader$lambda$0$Type($$outer_0, owner_1, writer_2, mirrorBat_3, random_4, hasher_5, network_6, c_7, startChunkIndex_8, current_9){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.mirrorBat_3 = mirrorBat_3;
  this.random_4 = random_4;
  this.hasher_5 = hasher_5;
  this.network_6 = network_6;
  this.c_7 = c_7;
  this.startChunkIndex_8 = startChunkIndex_8;
  this.current_9 = current_9;
}

defineClass(1333, $wnd.Function, $intern_22, FileUploader$lambda$0$Type);
_.apply_0 = function apply_2007(arg0){
  return $lambda$0_33(this.$$outer_0, this.owner_1, this.writer_2, this.mirrorBat_3, this.random_4, this.hasher_5, this.network_6, this.c_7, this.startChunkIndex_8, this.current_9);
}
;
_.startChunkIndex_8 = 0;
function FileUploader$lambda$1$Type(){
}

defineClass(1043, 1, {}, FileUploader$lambda$1$Type);
_.apply_2 = function apply_2008(arg0){
  return $clinit_FileUploader() , valueOf_1(arg0);
}
;
var Lpeergos_shared_user_fs_FileUploader$lambda$1$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileUploader/lambda$1$Type', 1043);
function FileUploader$lambda$10$Type(t1_0){
  this.t1_0 = t1_0;
}

defineClass(3387, $wnd.Function, $intern_22, FileUploader$lambda$10$Type);
_.apply_0 = function apply_2009(arg0){
  return lambda$10_9(this.t1_0, arg0);
}
;
_.t1_0 = 0;
function FileUploader$lambda$13$Type($$outer_0, owner_1, writer_2, mirrorBat_3, random_4, hasher_5, isJS_6, data_7, ourExistingHash_8, chunkIndex_9){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.mirrorBat_3 = mirrorBat_3;
  this.random_4 = random_4;
  this.hasher_5 = hasher_5;
  this.isJS_6 = isJS_6;
  this.data_7 = data_7;
  this.ourExistingHash_8 = ourExistingHash_8;
  this.chunkIndex_9 = chunkIndex_9;
}

defineClass(3382, $wnd.Function, $intern_22, FileUploader$lambda$13$Type);
_.apply_0 = function apply_2010(arg0){
  return $lambda$13_10(this.$$outer_0, this.owner_1, this.writer_2, this.mirrorBat_3, this.random_4, this.hasher_5, this.isJS_6, this.data_7, this.ourExistingHash_8, this.chunkIndex_9);
}
;
_.chunkIndex_9 = 0;
_.isJS_6 = false;
function FileUploader$lambda$14$Type($$outer_0, owner_1, writer_2, mirrorBat_3, random_4, hasher_5, isJS_6, data_7, ourExistingHash_9){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.mirrorBat_3 = mirrorBat_3;
  this.random_4 = random_4;
  this.hasher_5 = hasher_5;
  this.isJS_6 = isJS_6;
  this.data_7 = data_7;
  this.ourExistingHash_9 = ourExistingHash_9;
}

defineClass(3392, $wnd.Function, $intern_22, FileUploader$lambda$14$Type);
_.apply_0 = function apply_2011(arg0){
  return $lambda$14_8(this.$$outer_0, this.owner_1, this.writer_2, this.mirrorBat_3, this.random_4, this.hasher_5, this.isJS_6, this.data_7, this.ourExistingHash_9, arg0);
}
;
_.isJS_6 = false;
function FileUploader$lambda$15$Type($$outer_0, chunk_1, owner_2, writer_3, mirrorBat_4, random_5, hasher_6, isJS_7){
  this.$$outer_0 = $$outer_0;
  this.chunk_1 = chunk_1;
  this.owner_2 = owner_2;
  this.writer_3 = writer_3;
  this.mirrorBat_4 = mirrorBat_4;
  this.random_5 = random_5;
  this.hasher_6 = hasher_6;
  this.isJS_7 = isJS_7;
}

defineClass(3393, $wnd.Function, $intern_22, FileUploader$lambda$15$Type);
_.apply_0 = function apply_2012(arg0){
  return $lambda$15_8(this.$$outer_0, this.chunk_1, this.owner_2, this.writer_3, this.mirrorBat_4, this.random_5, this.hasher_6, this.isJS_7, arg0);
}
;
_.isJS_7 = false;
function FileUploader$lambda$16$Type(chunk_0){
  this.chunk_0 = chunk_0;
}

defineClass(3394, $wnd.Function, $intern_22, FileUploader$lambda$16$Type);
_.apply_0 = function apply_2013(arg0){
  return lambda$16_7(this.chunk_0, arg0);
}
;
function FileUploader$lambda$17$Type(){
}

defineClass(1049, 1, {}, FileUploader$lambda$17$Type);
_.test_0 = function test_51(arg0){
  return $clinit_FileUploader() , castTo(arg0, 131).hash_0.ref != null;
}
;
var Lpeergos_shared_user_fs_FileUploader$lambda$17$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileUploader/lambda$17$Type', 1049);
function FileUploader$lambda$18$Type(){
}

defineClass(3383, $wnd.Function, $intern_22, FileUploader$lambda$18$Type);
_.apply_0 = function apply_2014(arg0){
  return $clinit_FileUploader() , castTo(arg0, 131).fragment;
}
;
function FileUploader$lambda$19$Type(network_0, current_1, committer_2, metadata_3, chunk_4, writer_5, fragments_6, progress_7){
  this.network_0 = network_0;
  this.current_1 = current_1;
  this.committer_2 = committer_2;
  this.metadata_3 = metadata_3;
  this.chunk_4 = chunk_4;
  this.writer_5 = writer_5;
  this.fragments_6 = fragments_6;
  this.progress_7 = progress_7;
}

defineClass(3384, $wnd.Function, $intern_22, FileUploader$lambda$19$Type);
_.apply_0 = function apply_2015(arg0){
  return lambda$19_8(this.network_0, this.current_1, this.committer_2, this.metadata_3, this.chunk_4, this.writer_5, this.fragments_6, this.progress_7, arg0);
}
;
function FileUploader$lambda$2$Type($$outer_0, owner_1, writer_2, mirrorBat_3, random_4, hasher_5, network_6, queue_7){
  this.$$outer_0 = $$outer_0;
  this.owner_1 = owner_1;
  this.writer_2 = writer_2;
  this.mirrorBat_3 = mirrorBat_3;
  this.random_4 = random_4;
  this.hasher_5 = hasher_5;
  this.network_6 = network_6;
  this.queue_7 = queue_7;
}

defineClass(1045, 1, $intern_34, FileUploader$lambda$2$Type);
_.apply_1 = function apply_2016(arg0, arg1){
  return $lambda$2_25(this.$$outer_0, this.owner_1, this.writer_2, this.mirrorBat_3, this.random_4, this.hasher_5, this.network_6, this.queue_7, arg1);
}
;
var Lpeergos_shared_user_fs_FileUploader$lambda$2$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileUploader/lambda$2$Type', 1045);
function FileUploader$lambda$20$Type(network_0, current_1, committer_2, metadata_3, chunk_4, writer_5, tid_6){
  this.network_0 = network_0;
  this.current_1 = current_1;
  this.committer_2 = committer_2;
  this.metadata_3 = metadata_3;
  this.chunk_4 = chunk_4;
  this.writer_5 = writer_5;
  this.tid_6 = tid_6;
}

defineClass(3395, $wnd.Function, $intern_22, FileUploader$lambda$20$Type);
_.apply_0 = function apply_2017(arg0){
  return lambda$20_6(this.network_0, this.current_1, this.committer_2, this.metadata_3, this.chunk_4, this.writer_5, this.tid_6);
}
;
function FileUploader$lambda$21$Type(current_0, committer_1, chunk_2, baseKey_3, writerLink_4, writer_5, network_6, progress_7){
  this.current_0 = current_0;
  this.committer_1 = committer_1;
  this.chunk_2 = chunk_2;
  this.baseKey_3 = baseKey_3;
  this.writerLink_4 = writerLink_4;
  this.writer_5 = writer_5;
  this.network_6 = network_6;
  this.progress_7 = progress_7;
}

defineClass(3385, $wnd.Function, $intern_22, FileUploader$lambda$21$Type);
_.apply_0 = function apply_2018(arg0){
  return lambda$21_5(this.current_0, this.committer_1, this.chunk_2, this.baseKey_3, this.writerLink_4, this.writer_5, this.network_6, this.progress_7, arg0);
}
;
function FileUploader$lambda$3$Type(){
}

defineClass(1046, 1, $intern_34, FileUploader$lambda$3$Type);
_.apply_1 = function apply_2019(arg0, arg1){
  return $clinit_FileUploader() , castToBoolean(arg1);
}
;
var Lpeergos_shared_user_fs_FileUploader$lambda$3$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileUploader/lambda$3$Type', 1046);
function FileUploader$lambda$4$Type($$outer_0, i_1, owner_2, writer_3, mirrorBat_4, random_5, hasher_6, network_7, queue_8){
  this.$$outer_0 = $$outer_0;
  this.i_1 = i_1;
  this.owner_2 = owner_2;
  this.writer_3 = writer_3;
  this.mirrorBat_4 = mirrorBat_4;
  this.random_5 = random_5;
  this.hasher_6 = hasher_6;
  this.network_7 = network_7;
  this.queue_8 = queue_8;
}

defineClass(1044, 1, {}, FileUploader$lambda$4$Type);
_.get_0 = function get_148(){
  return $lambda$4_18(this.$$outer_0, this.i_1, this.owner_2, this.writer_3, this.mirrorBat_4, this.random_5, this.hasher_6, this.network_7, this.queue_8);
}
;
var Lpeergos_shared_user_fs_FileUploader$lambda$4$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileUploader/lambda$4$Type', 1044);
function FileUploader$lambda$7$Type($$outer_0, c_1, writer_2, network_3, queue_4){
  this.$$outer_0 = $$outer_0;
  this.c_1 = c_1;
  this.writer_2 = writer_2;
  this.network_3 = network_3;
  this.queue_4 = queue_4;
}

defineClass(1047, 1, $intern_34, FileUploader$lambda$7$Type);
_.apply_1 = function apply_2020(arg0, arg1){
  return $lambda$7_10(this.$$outer_0, this.c_1, this.writer_2, this.network_3, this.queue_4, arg0);
}
;
var Lpeergos_shared_user_fs_FileUploader$lambda$7$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileUploader/lambda$7$Type', 1047);
function FileUploader$lambda$8$Type(){
}

defineClass(1048, 1, $intern_34, FileUploader$lambda$8$Type);
_.apply_1 = function apply_2021(arg0, arg1){
  return $clinit_FileUploader() , castTo(arg1, 43);
}
;
var Lpeergos_shared_user_fs_FileUploader$lambda$8$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileUploader/lambda$8$Type', 1048);
function FileUploader$lambda$9$Type($$outer_0, s_1, c_2, writer_3, network_4){
  this.$$outer_0 = $$outer_0;
  this.s_1 = s_1;
  this.c_2 = c_2;
  this.writer_3 = writer_3;
  this.network_4 = network_4;
}

defineClass(3391, $wnd.Function, $intern_22, FileUploader$lambda$9$Type);
_.apply_0 = function apply_2022(arg0){
  return $lambda$9_14(this.$$outer_0, this.s_1, this.c_2, this.writer_3, this.network_4, arg0);
}
;
function $clinit_FileWrapper(){
  $clinit_FileWrapper = emptyMethod;
  LOG_7 = ($clinit_Logger() , getLogger());
  thumbnail_0 = new $wnd.thumbnail.NativeJSThumbnail;
}

function $addChildPointer(this$static, current, committer, childCap, network, crypto_0){
  return $addChildPointers(this$static, current, committer, ($clinit_Collections() , new Collections$SingletonList(childCap)), network, crypto_0);
}

function $addChildPointers(this$static, current, committer, childCaps, network, crypto_0){
  return $thenApply($addChildrenAndCommit(this$static.pointer.fileAccess, current, committer, childCaps, $writableFilePointer(this$static), $signingPair(this$static), $mirrorBatId(this$static.pointer.fileAccess), network, crypto_0), makeLambdaFunction(FileWrapper$lambda$171$Type.prototype.apply_0, FileWrapper$lambda$171$Type, [this$static]));
}

function $append_5(this$static, fileData, network, crypto_0, committer, progress){
  var size_0;
  size_0 = ($ensureUnmodified(this$static) , this$static.props).size_0;
  return $overwriteSection(this$static, this$static.version, committer, new AsyncReader$ArrayBacked(fileData), size_0, add_1(size_0, fileData.length), network, crypto_0, progress);
}

function $appendFileJS(this$static, filename, fileData, lengthHi, lengthLow, network, crypto_0, monitor){
  var fileSize;
  fileSize = add_1(and_0(lengthLow, $intern_47), shl_0(and_0(lengthHi, $intern_47), 32));
  return $thenCompose($applyComplexUpdate(network.synchronizer, $owner(this$static), $signingPair(this$static), new FileWrapper$lambda$49$Type(this$static, filename, fileData, fileSize, network, crypto_0, monitor), new WriteSynchronizer$lambda$23$Type), makeLambdaFunction(FileWrapper$lambda$51$Type.prototype.apply_0, FileWrapper$lambda$51$Type, [this$static, network]));
}

function $appendToChild(this$static, expectedSize, fileData, mirrorBat, network, crypto_0, monitor){
  return $thenCompose($getChild_2(this$static, '.blocked-usernames.txt', network), makeLambdaFunction(FileWrapper$lambda$172$Type.prototype.apply_0, FileWrapper$lambda$172$Type, [this$static, crypto_0, expectedSize, fileData, network, monitor, mirrorBat]));
}

function $clean(this$static, current, committer, network, crypto_0){
  var currentCap, isLink, isNull, parentCap, parentOrLinkBat, parentOrLinkLocation, parentOrLinkParentKey;
  $ensureUnmodified(this$static);
  if (!$isDirty(this$static.pointer.fileAccess, this$static.pointer.capability.rBaseKey))
    return new CompletableFuture_0(new Pair(this$static, current));
  isNull = !this$static.pointer;
  if (isNull || this$static.pointer.fileAccess.isDirectory_0) {
    throw toJs(new IllegalStateException_0('Directories are never dirty (they are cleaned immediately)!'));
  }
   else {
    currentCap = $writableFilePointer(this$static);
    isLink = this$static.linkPointer.ref != null;
    parentCap = $getParentCapability(this$static.pointer.fileAccess, this$static.pointer.capability.rBaseKey);
    parentOrLinkLocation = isLink?$getLocation(castTo($get_6(this$static.linkPointer), 83).capability):$getLocation_1((checkCriticalElement(parentCap.ref != null) , castTo(parentCap.ref, 102)), $owner(this$static), this$static.pointer.capability.writer);
    parentOrLinkParentKey = isLink?$getParentKey(castTo($get_6(this$static.linkPointer), 83)):(checkCriticalElement(parentCap.ref != null) , castTo(parentCap.ref, 102)).rBaseKey;
    parentOrLinkBat = isLink?castTo($get_6(this$static.linkPointer), 83).capability.bat:(checkCriticalElement(parentCap.ref != null) , castTo(parentCap.ref, 102)).bat;
    return $thenCompose($cleanAndCommit(this$static.pointer.fileAccess, current, committer, currentCap, currentCap, this$static.props.streamSecret, ($clinit_Optional() , $clinit_Optional() , EMPTY), $signingPair(this$static), ($clinit_SymmetricKey() , random_10(castTo($get(PROVIDERS_1, ($clinit_SymmetricKey$Type() , TweetNaCl)), 91), castTo($get(RNG_PROVIDERS_0, TweetNaCl), 86))), parentOrLinkLocation, parentOrLinkBat, parentOrLinkParentKey, network, crypto_0), makeLambdaFunction(FileWrapper$lambda$30$Type.prototype.apply_0, FileWrapper$lambda$30$Type, [this$static, network]));
  }
}

function $copyTo(this$static, target, existingThumbnail, targetMirrorBat, network, crypto_0, version, committer){
  var isNull;
  isNull = !target.pointer;
  if (!(isNull || target.pointer.fileAccess.isDirectory_0)) {
    return errored(new IllegalStateException_0('CopyTo target ' + target + ' must be a directory'));
  }
  return $thenCompose($hasChildWithName(target, version, ($ensureUnmodified(this$static) , this$static.props).name, network), makeLambdaFunction(FileWrapper$lambda$219$Type.prototype.apply_0, FileWrapper$lambda$219$Type, [this$static, existingThumbnail, targetMirrorBat, network, crypto_0, committer, target, version]));
}

function $copyTo_0(this$static, target, context){
  var crypto_0, isNull, network, targetMirrorBatId;
  $ensureUnmodified(this$static);
  network = context.network;
  crypto_0 = context.crypto;
  isNull = !target.pointer;
  if (!(isNull || target.pointer.fileAccess.isDirectory_0)) {
    return errored(new IllegalStateException_0('CopyTo target ' + target + ' must be a directory'));
  }
  targetMirrorBatId = $or($mirrorBatId(target.pointer.fileAccess), new FileWrapper$lambda$215$Type(target, context));
  return $thenApply($applyComplexUpdate(context.network.synchronizer, $owner(target), $signingPair(target), new FileWrapper$lambda$216$Type(this$static, target, targetMirrorBatId, network, crypto_0), new WriteSynchronizer$lambda$23$Type), makeLambdaFunction(FileWrapper$lambda$218$Type.prototype.apply_0, FileWrapper$lambda$218$Type, []));
}

function $ensureUnmodified(this$static){
  if (this$static.modified.value_0)
    throw toJs(new IllegalStateException_0('This file has already been modified, use the returned instance'));
}

function $findFirstAbsentChunkIndex(this$static, currentIndex, streamSecret, currentLoc, s, network, crypto_0){
  return $thenCompose($chunkIsPresent(network, s, currentLoc.owner, currentLoc.writer, copyOf(currentLoc.mapKey, currentLoc.mapKey.length)), makeLambdaFunction(FileWrapper$lambda$55$Type.prototype.apply_0, FileWrapper$lambda$55$Type, [this$static, currentIndex, streamSecret, currentLoc, s, network, crypto_0]));
}

function $generateThumbnail(network, fileData, fileSize, filename, mimeType){
  var bytes, fut, mp3Data;
  fut = new CompletableFuture;
  if (fileSize > 40) {
    if ($equals_0(mimeType.substr(0, 5), 'image')) {
      if (network.isJavascript) {
        $thenAccept(thumbnail_0.generateThumbnail(fileData, fileSize, filename), new FileWrapper$lambda$287$Type(fut));
      }
       else {
        bytes = initUnidimensionalArray(B_classLit, $intern_28, 8, fileSize, 15, 1);
        $exceptionally($thenAccept(fileData.readIntoArray(bytes, 0, fileSize), new FileWrapper$lambda$288$Type(fut)), makeLambdaFunction(FileWrapper$lambda$289$Type.prototype.apply_0, FileWrapper$lambda$289$Type, [fut]));
      }
    }
     else if ($equals_0(mimeType.substr(0, 5), 'video')) {
      network.isJavascript?$thenAccept(thumbnail_0.generateVideoThumbnail(fileData, fileSize, filename, mimeType), new FileWrapper$lambda$290$Type(fut)):$complete(fut, ($clinit_Optional() , $clinit_Optional() , EMPTY));
    }
     else if ($equals_0(mimeType.substr(0, 10), 'audio/mpeg')) {
      mp3Data = initUnidimensionalArray(B_classLit, $intern_28, 8, fileSize, 15, 1);
      $thenAccept(fileData.readIntoArray(mp3Data, 0, fileSize), new FileWrapper$lambda$291$Type(mp3Data, fut, network, filename));
    }
     else {
      $complete(fut, ($clinit_Optional() , $clinit_Optional() , EMPTY));
    }
  }
   else {
    $complete(fut, ($clinit_Optional() , $clinit_Optional() , EMPTY));
  }
  return fut;
}

function $generateThumbnailAndUpdate(this$static, base, committer, cap, fileName, fileData, network, isHidden, mimeType, fileSize, updatedDateTime, createdDateTime, streamSecret, replaceExistingThumbnail, monitor){
  return $thenApply($thenCompose($getFile_0(network, base, cap, $map(this$static.pointer.capability.wBaseKey, makeLambdaFunction(FileWrapper$lambda$17$Type.prototype.apply_0, FileWrapper$lambda$17$Type, [this$static])), this$static.ownername), makeLambdaFunction(FileWrapper$lambda$168$Type.prototype.apply_0, FileWrapper$lambda$168$Type, [this$static, base, fileName, mimeType, fileSize, updatedDateTime, createdDateTime, isHidden, streamSecret, committer, network, replaceExistingThumbnail, fileData])), makeLambdaFunction(FileWrapper$lambda$170$Type.prototype.apply_0, FileWrapper$lambda$170$Type, [monitor]));
}

function $getAnyLinkPointer(this$static, network){
  var cap, parent_0;
  if (!this$static.pointer)
    return new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY));
  cap = this$static.pointer.capability;
  parent_0 = $getParent_0(this$static.pointer.fileAccess, cap.owner, cap.writer, cap.rBaseKey, network, this$static.version);
  return $thenApply(parent_0, makeLambdaFunction(FileWrapper$lambda$14$Type.prototype.apply_0, FileWrapper$lambda$14$Type, []));
}

function $getChild_2(this$static, name_0, network){
  return $getChild_3(this$static, this$static.version, name_0, network);
}

function $getChild_3(this$static, version, name_0, network){
  if (this$static.capTrie.ref != null)
    return castTo($get_6(this$static.capTrie), 110).getByPath_0('/' + name_0, $merge_3(version, this$static.version), network.hasher, network);
  return $thenCompose($getChild_4(this$static.pointer.fileAccess, name_0, this$static.pointer.capability, version, network.hasher, network), makeLambdaFunction(FileWrapper$lambda$25$Type.prototype.apply_0, FileWrapper$lambda$25$Type, [this$static, network, version]));
}

function $getChildren_4(this$static, hasher, network){
  if (this$static.capTrie.ref != null)
    return castTo($get_6(this$static.capTrie), 110).getChildren('', hasher, network);
  return $getChildren_5(this$static, this$static.version, hasher, network);
}

function $getChildren_5(this$static, version, hasher, network){
  var childsEntryWriter;
  if (this$static.capTrie.ref != null)
    return castTo($get_6(this$static.capTrie), 110).getChildren_0('', hasher, $merge_3(version, this$static.version), network);
  if ($isReadable(this$static.pointer.fileAccess, this$static.pointer.capability.rBaseKey)) {
    childsEntryWriter = $map(this$static.pointer.capability.wBaseKey, makeLambdaFunction(FileWrapper$lambda$18$Type.prototype.apply_0, FileWrapper$lambda$18$Type, [this$static]));
    return $thenCompose($getAllChildrenCapabilities(this$static.pointer.fileAccess, version, this$static.pointer.capability, hasher, network), makeLambdaFunction(FileWrapper$lambda$19$Type.prototype.apply_0, FileWrapper$lambda$19$Type, [this$static, childsEntryWriter, network, version]));
  }
  throw toJs(new IllegalStateException_0('Unreadable FileWrapper!'));
}

function $getChildrenCapabilities(this$static, hasher, network){
  var isNull;
  $ensureUnmodified(this$static);
  isNull = !this$static.pointer;
  if (!(isNull || this$static.pointer.fileAccess.isDirectory_0))
    return new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_SET));
  return $getAllChildrenCapabilities(this$static.pointer.fileAccess, this$static.version, this$static.pointer.capability, hasher, network);
}

function $getDescendentByPath(this$static, path, hasher, network){
  return $getDescendentByPath_0(this$static, path, this$static.version, hasher, network);
}

function $getDescendentByPath_0(this$static, path, version, hasher, network){
  var canon, isNull;
  $ensureUnmodified(this$static);
  if (path.length == 0)
    return new CompletableFuture_0(($clinit_Optional() , new Optional(checkCriticalNotNull(this$static))));
  if ($equals_0(path, '/'))
    return isNull = !this$static.pointer , isNull || this$static.pointer.fileAccess.isDirectory_0?new CompletableFuture_0(($clinit_Optional() , new Optional(checkCriticalNotNull(this$static)))):new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY));
  canon = get_176(path, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, []));
  return $thenCompose($getChild_3(this$static, version, $getName_0(canon, 0).pathString, network), makeLambdaFunction(FileWrapper$lambda$10$Type.prototype.apply_0, FileWrapper$lambda$10$Type, [canon, hasher, network]));
}

function $getFileProperties(this$static){
  $ensureUnmodified(this$static);
  return this$static.props;
}

function $getInputStream(this$static, network, crypto_0, fileSize, monitor){
  return $thenCompose($getValue_0(network.synchronizer, $owner(this$static), this$static.pointer.capability.writer), makeLambdaFunction(FileWrapper$lambda$285$Type.prototype.apply_0, FileWrapper$lambda$285$Type, [this$static, network, crypto_0, fileSize, 1, monitor]));
}

function $getInputStream_0(this$static, network, crypto_0, monitor){
  return $thenCompose($getValue_0(network.synchronizer, $owner(this$static), this$static.pointer.capability.writer), makeLambdaFunction(FileWrapper$lambda$283$Type.prototype.apply_0, FileWrapper$lambda$283$Type, [this$static, network, crypto_0, monitor]));
}

function $getInputStream_1(this$static, version, network, crypto_0, fileSize, nBufferedChunks, monitor){
  var fileAccess;
  $ensureUnmodified(this$static);
  if (this$static.pointer.fileAccess.isDirectory_0)
    throw toJs(new IllegalStateException_0('Cannot get input stream for a directory!'));
  fileAccess = this$static.pointer.fileAccess;
  return $thenCompose($retriever(fileAccess, this$static.pointer.capability.rBaseKey, this$static.props.streamSecret, $getMapKey_0(new Location_0(this$static.pointer.capability.owner, this$static.pointer.capability.writer, $getMapKey(this$static.pointer.capability))), this$static.pointer.capability.bat, crypto_0.hasher), makeLambdaFunction(FileWrapper$lambda$286$Type.prototype.apply_0, FileWrapper$lambda$286$Type, [this$static, version, network, crypto_0, fileSize, fileAccess, nBufferedChunks, monitor]));
}

function $getInputStream_2(this$static, version, network, crypto_0, monitor){
  return $getInputStream_1(this$static, version, network, crypto_0, ($ensureUnmodified(this$static) , this$static.props).size_0, 1, monitor);
}

function $getLocation_0(this$static){
  return new Location_0(this$static.pointer.capability.owner, this$static.pointer.capability.writer, $getMapKey(this$static.pointer.capability));
}

function $getName_1(this$static){
  return ($ensureUnmodified(this$static) , this$static.props).name;
}

function $getOrMkdir_0(this$static, newFolderName, requestedBaseReadKey, requestedBaseWriteKey, desiredMapKey, desiredBat, isSystemFolder, mirrorBat, network, crypto_0, version, committer){
  var fullVersion, isNull;
  isNull = !this$static.pointer;
  if (!(isNull || this$static.pointer.fileAccess.isDirectory_0)) {
    return errored(new IllegalStateException_0('Cannot mkdir in a file!'));
  }
  if (!(newFolderName.indexOf('/') == -1 && !$equals_0(newFolderName, '.') && !$equals_0(newFolderName, '..') && newFolderName.length != 0)) {
    return errored(new IllegalStateException_0('Illegal directory name: ' + newFolderName));
  }
  fullVersion = $mergeAndOverwriteWith(this$static.version, version);
  return $thenCompose($getChild_3(this$static, fullVersion, newFolderName, network), makeLambdaFunction(FileWrapper$lambda$194$Type.prototype.apply_0, FileWrapper$lambda$194$Type, [this$static, newFolderName, crypto_0, network, fullVersion, committer, requestedBaseReadKey, requestedBaseWriteKey, desiredMapKey, desiredBat, isSystemFolder, mirrorBat]));
}

function $getOrMkdirs(this$static, subPath, network, isSystemFolder, mirrorBat, crypto_0){
  var elements, finalPath;
  finalPath = canonicalise_0(subPath.pathString);
  elements = new Arrays$ArrayList($split(finalPath, '/'));
  return $thenApply($applyComplexComputation(network.synchronizer, $owner(this$static), $signingPair(this$static), new FileWrapper$lambda$189$Type(this$static, elements, isSystemFolder, mirrorBat, network, crypto_0)), makeLambdaFunction(FileWrapper$lambda$190$Type.prototype.apply_0, FileWrapper$lambda$190$Type, []));
}

function $getOrMkdirs_0(this$static, subPath, mirrorBat, network, crypto_0, version, committer){
  return reduceAll(subPath, new Pair(version, this$static), new FileWrapper$lambda$191$Type(false, mirrorBat, network, crypto_0, committer), new FileWrapper$lambda$192$Type);
}

function $getPath(this$static, network){
  return $thenCompose(($ensureUnmodified(this$static) , retrieveParent(castTo($orElse(this$static.linkPointer, this$static.pointer), 83), this$static.ownername, this$static.version, network)), makeLambdaFunction(FileWrapper$lambda$6$Type.prototype.apply_0, FileWrapper$lambda$6$Type, [this$static, network]));
}

function $getRetriever(this$static, hasher){
  if (this$static.pointer.fileAccess.isDirectory_0)
    throw toJs(new IllegalStateException_0('Cannot get input stream for a directory!'));
  return $retriever(this$static.pointer.fileAccess, this$static.pointer.capability.rBaseKey, this$static.props.streamSecret, $getMapKey_0(new Location_0(this$static.pointer.capability.owner, this$static.pointer.capability.writer, $getMapKey(this$static.pointer.capability))), this$static.pointer.capability.bat, hasher);
}

function $getSize(this$static){
  return ($ensureUnmodified(this$static) , this$static.props).size_0;
}

function $getUpdated(this$static, network){
  return $thenCompose($getValue_0(network.synchronizer, $owner(this$static), this$static.pointer.capability.writer), makeLambdaFunction(FileWrapper$lambda$2$Type.prototype.apply_0, FileWrapper$lambda$2$Type, [this$static, network]));
}

function $getUpdated_0(this$static, version, network){
  return $thenCompose($withWriter(version, $owner(this$static), this$static.pointer.capability.writer, network), makeLambdaFunction(FileWrapper$lambda$3$Type.prototype.apply_0, FileWrapper$lambda$3$Type, [this$static, network]));
}

function $getVersionRoot(this$static){
  return $get_32(this$static.version, this$static.pointer.capability.writer);
}

function $hasChild(this$static, fileName, network){
  if (!(fileName.indexOf('/') == -1 && !$equals_0(fileName, '.') && !$equals_0(fileName, '..') && fileName.length != 0)) {
    return errored(new IllegalArgumentException_0('Illegal file/directory name: ' + fileName));
  }
  return $thenApply($hasChildWithName(this$static, this$static.version, fileName, network), makeLambdaFunction(FileWrapper$lambda$231$Type.prototype.apply_0, FileWrapper$lambda$231$Type, []));
}

function $hasChildWithName(this$static, version, name_0, network){
  $ensureUnmodified(this$static);
  return $thenApply($getChild_3(this$static, version, name_0, network), makeLambdaFunction(FileWrapper$1methodref$isPresent$Type.prototype.apply_0, FileWrapper$1methodref$isPresent$Type, []));
}

function $isUserRoot(this$static){
  if (!this$static.pointer)
    return false;
  return !$hasParentLink(this$static.pointer.fileAccess, this$static.pointer.capability.rBaseKey);
}

function $lambda$1_26(this$static, network_1, latest_1){
  return $thenCompose($withWriter(latest_1, $owner(this$static), this$static.pointer.capability.writer, network_1), makeLambdaFunction(FileWrapper$lambda$3$Type.prototype.apply_0, FileWrapper$lambda$3$Type, [this$static, network_1]));
}

function $lambda$109_0(this$static, crypto_1){
  return new Location_0((new Location_0(this$static.pointer.capability.owner, this$static.pointer.capability.writer, $getMapKey(this$static.pointer.capability))).owner, (new Location_0(this$static.pointer.capability.owner, this$static.pointer.capability.writer, $getMapKey(this$static.pointer.capability))).writer, $randomBytes(crypto_1.random, 32));
}

function $lambda$110_0(this$static, ourCap_1, props_2, crypto_3, network_4, endIndex_5, committer_7, parentLocation_8, parentBat_9, parentParentKey_10, monitor_11, fileData_12, legacyLocs_13, inputStartIndex_14, base_13){
  var filesSize, us;
  us = this$static;
  filesSize = new AtomicLong(props_2.size_0);
  return $thenCompose($getRetriever(us, crypto_3.hasher), makeLambdaFunction(FileWrapper$lambda$111$Type.prototype.apply_0, FileWrapper$lambda$111$Type, [this$static, us, ourCap_1, props_2, crypto_3, network_4, endIndex_5, committer_7, filesSize, parentLocation_8, parentBat_9, parentParentKey_10, monitor_11, fileData_12, legacyLocs_13, inputStartIndex_14, base_13]));
}

function $lambda$111(this$static, us_1, ourCap_2, props_3, crypto_4, network_5, endIndex_6, committer_8, filesSize_9, parentLocation_10, parentBat_11, parentParentKey_12, monitor_13, fileData_14, legacyLocs_15, inputStartIndex_16, base_18, retriever_16){
  var baseKey, composer, dataKey, fileAccess, startIndex, startIndexes;
  baseKey = us_1.pointer.capability.rBaseKey;
  fileAccess = us_1.pointer.fileAccess;
  dataKey = $getDataKey(fileAccess, baseKey);
  startIndexes = new ArrayList;
  for (startIndex = inputStartIndex_16; compare_1(startIndex, endIndex_6) < 0; startIndex = sub_1(add_1(startIndex, $intern_70), mod_0(startIndex, $intern_70)))
    $add(startIndexes, valueOf_2(startIndex));
  composer = new FileWrapper$lambda$112$Type(this$static, retriever_16, us_1, ourCap_2, props_3, crypto_4, network_5, endIndex_6, committer_8, filesSize_9, dataKey, parentLocation_10, parentBat_11, parentParentKey_12, baseKey, monitor_13, fileData_14, legacyLocs_15);
  return reduceAll(startIndexes, base_18, composer, new FileWrapper$lambda$127$Type);
}

function $lambda$112(this$static, retriever_1, us_2, ourCap_3, props_4, crypto_5, network_6, endIndex_7, committer_9, filesSize_10, dataKey_11, parentLocation_12, parentBat_13, parentParentKey_14, baseKey_15, monitor_16, fileData_17, legacyLocs_18, version_17, startIndex_18){
  var currentHash;
  currentHash = us_2.pointer.fileAccess.lastCommittedHash;
  return $thenCompose($thenCompose($getChunk(retriever_1, $get_32(version_17, us_2.pointer.capability.writer).props, network_6, crypto_5, startIndex_18.value_0, filesSize_10.value_0, ourCap_3, props_4.streamSecret, currentHash, monitor_16), makeLambdaFunction(FileWrapper$lambda$113$Type.prototype.apply_0, FileWrapper$lambda$113$Type, [this$static, retriever_1, version_17, us_2, ourCap_3, props_4, startIndex_18, crypto_5, network_6])), makeLambdaFunction(FileWrapper$lambda$117$Type.prototype.apply_0, FileWrapper$lambda$117$Type, [this$static, us_2, crypto_5, ourCap_3, endIndex_7, committer_9, network_6, startIndex_18, filesSize_10, dataKey_11, props_4, version_17, parentLocation_12, parentBat_13, parentParentKey_14, baseKey_15, monitor_16, fileData_17, legacyLocs_18]));
}

function $lambda$113(this$static, retriever_1, version_2, us_3, ourCap_4, props_5, startIndex_6, crypto_7, network_8, currentLocation_8){
  var locationAt;
  locationAt = $thenApply($getMapLabelAt(retriever_1, $get_32(version_2, us_3.pointer.capability.writer).props, ourCap_4, props_5.streamSecret, add_1(startIndex_6.value_0, $intern_70), crypto_7.hasher, network_8), makeLambdaFunction(FileWrapper$lambda$114$Type.prototype.apply_0, FileWrapper$lambda$114$Type, [this$static]));
  return $thenCompose(locationAt, makeLambdaFunction(FileWrapper$lambda$116$Type.prototype.apply_0, FileWrapper$lambda$116$Type, [currentLocation_8]));
}

function $lambda$114(this$static, x_0){
  return $map(x_0, makeLambdaFunction(FileWrapper$lambda$115$Type.prototype.apply_0, FileWrapper$lambda$115$Type, [this$static]));
}

function $lambda$115(this$static, mb_0){
  return new Pair($withMapKey_0(new Location_0(this$static.pointer.capability.owner, this$static.pointer.capability.writer, $getMapKey(this$static.pointer.capability)), castTo(mb_0.left, 11)), castTo(mb_0.right, 12));
}

function $lambda$117(this$static, us_1, crypto_2, ourCap_3, endIndex_4, committer_6, network_7, startIndex_8, filesSize_9, dataKey_10, props_11, version_12, parentLocation_13, parentBat_14, parentParentKey_15, baseKey_16, monitor_17, fileData_18, legacyLocs_19, pair_18){
  var currentOriginal, nextChunkLocationFut, nextChunkLocationOpt, result;
  if (castTo(pair_18.left, 12).ref == null) {
    result = new CompletableFuture;
    $completeExceptionally(result, new IllegalStateException_0('Current chunk not present'));
    return result;
  }
  currentOriginal = castTo($get_6(castTo(pair_18.left, 12)), 192);
  nextChunkLocationOpt = castTo(pair_18.right, 12);
  nextChunkLocationFut = castTo($orElseGet($map(nextChunkLocationOpt, makeLambdaFunction(FileWrapper$4methodref$of$Type.prototype.apply_0, FileWrapper$4methodref$of$Type, [])), new FileWrapper$lambda$119$Type(us_1, currentOriginal, crypto_2, props_11, legacyLocs_19)), 6);
  return $thenCompose(nextChunkLocationFut, makeLambdaFunction(FileWrapper$lambda$123$Type.prototype.apply_0, FileWrapper$lambda$123$Type, [this$static, ourCap_3, endIndex_4, committer_6, network_7, startIndex_8, filesSize_9, dataKey_10, currentOriginal, props_11, version_12, us_1, parentLocation_13, parentBat_14, parentParentKey_15, baseKey_16, crypto_2, monitor_17, fileData_18]));
}

function $lambda$123(this$static, ourCap_1, endIndex_2, committer_4, network_5, startIndex_6, filesSize_7, dataKey_8, currentOriginal_9, props_10, version_11, us_12, parentLocation_13, parentBat_14, parentParentKey_15, baseKey_16, crypto_17, monitor_18, fileData_19, nextChunkLocationAndBat_18){
  var internalEnd, internalStart, nextChunkBat, nextChunkLocation, raw, rawData, writerLink;
  nextChunkLocation = castTo(nextChunkLocationAndBat_18.left, 92);
  nextChunkBat = castTo(nextChunkLocationAndBat_18.right, 12);
  $info(LOG_7, '********** Writing to chunk at mapkey: ' + bytesToHex($getMapKey_0(currentOriginal_9.location_0)) + ' next: ' + nextChunkLocation);
  internalStart = toInt_0(mod_0(startIndex_6.value_0, $intern_70));
  internalEnd = gt(sub_1(endIndex_2, sub_1(startIndex_6.value_0, internalStart)), $intern_70)?$intern_70:toInt_0(sub_1(endIndex_2, sub_1(startIndex_6.value_0, internalStart)));
  rawData = currentOriginal_9.chunk.data_0;
  rawData.length < internalEnd && (rawData = (checkCopyOfRange(rawData, 0, internalEnd) , copyPrimitiveByteArray(rawData, initUnidimensionalArray(B_classLit, $intern_28, 8, internalEnd, 15, 1), 0, internalEnd)));
  raw = rawData;
  writerLink = lt(startIndex_6.value_0, $intern_70)?$getWriterLink(us_12.pointer.fileAccess, us_12.pointer.capability.rBaseKey):($clinit_Optional() , $clinit_Optional() , EMPTY);
  return $thenCompose(fileData_19.readIntoArray(raw, internalStart, internalEnd - internalStart), makeLambdaFunction(FileWrapper$lambda$124$Type.prototype.apply_0, FileWrapper$lambda$124$Type, [this$static, ourCap_1, endIndex_2, committer_4, network_5, startIndex_6, internalEnd, internalStart, filesSize_7, raw, dataKey_8, currentOriginal_9, props_10, version_11, us_12, parentLocation_13, parentBat_14, parentParentKey_15, baseKey_16, nextChunkLocation, nextChunkBat, writerLink, crypto_17, monitor_18]));
}

function $lambda$124(this$static, ourCap_1, endIndex_2, committer_4, network_5, startIndex_6, internalEnd_7, internalStart_8, filesSize_9, raw_10, dataKey_11, currentOriginal_12, props_13, version_14, us_15, parentLocation_16, parentBat_17, parentParentKey_18, baseKey_19, nextChunkLocation_20, nextChunkBat_21, writerLink_22, crypto_23, monitor_24){
  var chunkUploaded, currentSize, lastArg, located, mirrorBat, newProps, res, updated;
  updated = new Chunk(raw_10, dataKey_11, (lastArg = $getMapKey_0(currentOriginal_12.location_0) , res = initUnidimensionalArray(B_classLit, $intern_28, 8, 24, 15, 1) , $randombytes(dataKey_11.random_0, res, 0, res.length) , lastArg));
  located = new LocatedChunk(currentOriginal_12.location_0, currentOriginal_12.bat, currentOriginal_12.existingHash, updated);
  currentSize = filesSize_9.value_0;
  newProps = new FileProperties_0(props_13.name, false, props_13.isLink, props_13.mimeType, compare_1(endIndex_2, currentSize) > 0?endIndex_2:currentSize, ($clinit_LocalDateTime() , now_4()), props_13.created, props_13.isHidden, props_13.thumbnail, props_13.streamSecret);
  mirrorBat = $mirrorBatId(this$static.pointer.fileAccess);
  chunkUploaded = uploadChunk(version_14, committer_4, $signingPair(us_15), newProps, parentLocation_16, parentBat_17, parentParentKey_18, baseKey_19, located, nextChunkLocation_20, nextChunkBat_21, writerLink_22, mirrorBat, crypto_23.random, crypto_23.hasher, network_5, monitor_24);
  return $thenCompose(chunkUploaded, makeLambdaFunction(FileWrapper$lambda$125$Type.prototype.apply_0, FileWrapper$lambda$125$Type, [this$static, ourCap_1, endIndex_2, committer_4, network_5, startIndex_6, internalEnd_7, internalStart_8, filesSize_9]));
}

function $lambda$125(this$static, ourCap_1, endIndex_2, committer_4, network_5, startIndex_6, internalEnd_7, internalStart_8, filesSize_9, updatedBase_8){
  var updatedLength;
  updatedLength = sub_1(add_1(startIndex_6.value_0, internalEnd_7), internalStart_8);
  if (gt(updatedLength, filesSize_9.value_0)) {
    filesSize_9.value_0 = updatedLength;
    if (compare_1(updatedLength, $intern_70) > 0) {
      return $thenCompose($getFile_0(network_5, updatedBase_8, ourCap_1, this$static.entryWriter, this$static.ownername), makeLambdaFunction(FileWrapper$lambda$126$Type.prototype.apply_0, FileWrapper$lambda$126$Type, [this$static, ourCap_1, endIndex_2, updatedBase_8, committer_4, network_5]));
    }
  }
  return new CompletableFuture_0(updatedBase_8);
}

function $lambda$126(this$static, ourCap_1, endIndex_2, updatedBase_4, committer_5, network_6, updatedUs_5){
  var correctedSize;
  correctedSize = $withSize($getParentBlock((checkCriticalElement(updatedUs_5.ref != null) , castTo(updatedUs_5.ref, 19)).pointer.fileAccess, ourCap_1.rBaseKey).properties, endIndex_2);
  return $updateProperties_0((checkCriticalElement(updatedUs_5.ref != null) , castTo(updatedUs_5.ref, 19)).pointer.fileAccess, updatedBase_4, committer_5, ourCap_1, this$static.entryWriter, correctedSize, network_6);
}

function $lambda$128(this$static, filename_1, fileData_2, isHidden_3, startIndex_4, endIndex_6, baseKey_8, overwriteExisting_9, network_10, crypto_11, monitor_12, firstChunkMapKey_13, streamSecret_14, firstBat_15, mirrorBat_16, current_14, committer_15){
  return $thenCompose($uploadFileSection_0(this$static, current_14, committer_15, filename_1, fileData_2, ($clinit_Optional() , $clinit_Optional() , EMPTY), isHidden_3, startIndex_4, endIndex_6, baseKey_8, (null , EMPTY), (null , EMPTY), false, overwriteExisting_9, false, network_10, crypto_11, monitor_12, firstChunkMapKey_13, streamSecret_14, firstBat_15, mirrorBat_16), makeLambdaFunction(FileWrapper$lambda$135$Type.prototype.apply_0, FileWrapper$lambda$135$Type, [this$static, committer_15, network_10, crypto_11]));
}

function $lambda$129_0(this$static, network_1, finalBase_1){
  return $thenCompose($withWriter(finalBase_1, $owner(this$static), this$static.pointer.capability.writer, network_1), makeLambdaFunction(FileWrapper$lambda$3$Type.prototype.apply_0, FileWrapper$lambda$3$Type, [this$static, network_1]));
}

function $lambda$130_0(this$static, filename_1, network_2, fileData_3, startIndex_4, endIndex_6, crypto_8, monitor_9, c_7){
  var child;
  if (c_7.ref == null)
    return errored(new IllegalStateException_0('No child with name ' + filename_1));
  child = (checkCriticalElement(c_7.ref != null) , castTo(c_7.ref, 19));
  return $thenApply($applyComplexUpdate(network_2.synchronizer, $owner(this$static), $signingPair(child), new FileWrapper$lambda$131$Type(child, fileData_3, startIndex_4, endIndex_6, network_2, crypto_8, monitor_9), new WriteSynchronizer$lambda$23$Type), makeLambdaFunction(FileWrapper$lambda$132$Type.prototype.apply_0, FileWrapper$lambda$132$Type, [this$static]));
}

function $lambda$131_0(child_1, fileData_2, startIndex_3, endIndex_5, network_7, crypto_8, monitor_9, current_7, committer_8){
  return $updateExistingChild(current_7, committer_8, child_1, fileData_2, startIndex_3, endIndex_5, network_7, crypto_8, monitor_9);
}

function $lambda$132_0(this$static, childVersion_0){
  return $withVersion_0(this$static, $mergeAndOverwriteWith(this$static.version, childVersion_0));
}

function $lambda$133_0(this$static, updatedProperties_1, network_2, s_2, committer_3){
  return $updateProperties_0(this$static.pointer.fileAccess, s_2, committer_3, $writableFilePointer(this$static), $map(this$static.pointer.capability.wBaseKey, makeLambdaFunction(FileWrapper$lambda$17$Type.prototype.apply_0, FileWrapper$lambda$17$Type, [this$static])), updatedProperties_1, network_2);
}

function $lambda$134_0(this$static, network_1, finished_1){
  return $thenCompose($withWriter(finished_1, $owner(this$static), this$static.pointer.capability.writer, network_1), makeLambdaFunction(FileWrapper$lambda$3$Type.prototype.apply_0, FileWrapper$lambda$3$Type, [this$static, network_1]));
}

function $lambda$135_0(this$static, committer_1, network_2, crypto_3, p_3){
  return $thenCompose($getUpdated_0(this$static, castTo(p_3.left, 43), network_2), makeLambdaFunction(FileWrapper$lambda$136$Type.prototype.apply_0, FileWrapper$lambda$136$Type, [p_3, committer_1, network_2, crypto_3]));
}

function $lambda$138_0(this$static, committer_1, filename_2, isHidden_3, network_4, endIndex_5, fileData_7, startIndex_8, crypto_10, monitor_11, streamSecret_12, existingThumbnail_13, firstChunkMapKey_14, firstBat_15, mirrorBat_16, skipExisting_17, overwriteExisting_18, truncateExisting_19, requestedWriteKey_20, requestedBaseKey_21, requestedDataKey_22, current_20){
  return $thenCompose($thenCompose($withWriter(current_20, $owner(this$static), this$static.pointer.capability.writer, network_4), makeLambdaFunction(FileWrapper$lambda$3$Type.prototype.apply_0, FileWrapper$lambda$3$Type, [this$static, network_4])), makeLambdaFunction(FileWrapper$lambda$139$Type.prototype.apply_0, FileWrapper$lambda$139$Type, [this$static, committer_1, filename_2, isHidden_3, network_4, endIndex_5, fileData_7, startIndex_8, crypto_10, monitor_11, streamSecret_12, existingThumbnail_13, firstChunkMapKey_14, firstBat_15, current_20, mirrorBat_16, skipExisting_17, overwriteExisting_18, truncateExisting_19, requestedWriteKey_20, requestedBaseKey_21, requestedDataKey_22]));
}

function $lambda$139_0(this$static, committer_1, filename_2, isHidden_3, network_4, endIndex_5, fileData_7, startIndex_8, crypto_10, monitor_11, streamSecret_12, existingThumbnail_13, firstChunkMapKey_14, firstBat_15, current_16, mirrorBat_17, skipExisting_18, overwriteExisting_19, truncateExisting_20, requestedWriteKey_21, requestedBaseKey_22, requestedDataKey_23, latest_21){
  return $thenCompose($getChild_3(latest_21, current_16, filename_2, network_4), makeLambdaFunction(FileWrapper$lambda$140$Type.prototype.apply_0, FileWrapper$lambda$140$Type, [this$static, committer_1, filename_2, isHidden_3, network_4, endIndex_5, fileData_7, startIndex_8, crypto_10, monitor_11, streamSecret_12, existingThumbnail_13, firstChunkMapKey_14, firstBat_15, current_16, mirrorBat_17, skipExisting_18, overwriteExisting_19, truncateExisting_20, requestedWriteKey_21, requestedBaseKey_22, requestedDataKey_23, latest_21]));
}

function $lambda$140_0(this$static, committer_1, filename_2, isHidden_3, network_4, endIndex_5, fileData_7, startIndex_8, crypto_10, monitor_11, streamSecret_12, existingThumbnail_13, firstChunkMapKey_14, firstBat_15, current_16, mirrorBat_17, skipExisting_18, overwriteExisting_19, truncateExisting_20, requestedWriteKey_21, requestedBaseKey_22, requestedDataKey_23, latest_24, childOpt_22){
  var child, childProps, dataKey, dirAccess, dirParentKey, fileKey, fileWriteKey, header, parentBat, parentLocation, rootRKey, timestamp, updatePropsIfNecessary;
  if (childOpt_22.ref != null) {
    if (skipExisting_18)
      return new CompletableFuture_0(new Pair(current_16, ($clinit_Optional() , $clinit_Optional() , EMPTY)));
    if (!overwriteExisting_19)
      throw toJs(new FileExistsException(filename_2));
    child = (checkCriticalElement(childOpt_22.ref != null) , castTo(childOpt_22.ref, 19));
    childProps = ($ensureUnmodified(child) , child.props);
    updatePropsIfNecessary = new FileWrapper$lambda$141$Type(committer_1, filename_2, isHidden_3, network_4, childProps, crypto_10);
    return truncateExisting_20 && lt(endIndex_5, childProps.size_0)?$thenApply($thenCompose($truncate_0(child, current_16, committer_1, endIndex_5, network_4, crypto_10), makeLambdaFunction(FileWrapper$lambda$144$Type.prototype.apply_0, FileWrapper$lambda$144$Type, [this$static, updatePropsIfNecessary, endIndex_5, committer_1, fileData_7, startIndex_8, network_4, crypto_10, monitor_11, child])), makeLambdaFunction(FileWrapper$lambda$148$Type.prototype.apply_0, FileWrapper$lambda$148$Type, [])):$thenApply($updateExistingChild(current_16, committer_1, child, fileData_7, startIndex_8, endIndex_5, network_4, crypto_10, monitor_11), makeLambdaFunction(FileWrapper$lambda$149$Type.prototype.apply_0, FileWrapper$lambda$149$Type, [monitor_11]));
  }
  if (compare_1(startIndex_8, 0) > 0) {
    throw toJs(new IllegalStateException_0('Unimplemented!'));
  }
  fileWriteKey = castTo($orElseGet(requestedWriteKey_21, new FileWrapper$5methodref$random$Type), 88);
  fileKey = castTo($orElseGet(requestedBaseKey_22, new FileWrapper$6methodref$random$Type), 88);
  dataKey = castTo($orElseGet(requestedDataKey_23, new FileWrapper$7methodref$random$Type), 88);
  rootRKey = latest_24.pointer.capability.rBaseKey;
  dirAccess = latest_24.pointer.fileAccess;
  dirParentKey = $getParentKey_0(dirAccess, rootRKey);
  parentLocation = new Location_0(this$static.pointer.capability.owner, this$static.pointer.capability.writer, $getMapKey(this$static.pointer.capability));
  parentBat = $writableFilePointer(this$static).bat;
  timestamp = ($clinit_LocalDateTime() , now_4());
  return $thenCompose((header = initUnidimensionalArray(B_classLit, $intern_28, 8, toInt_0(compare_1(endIndex_5, 40) < 0?endIndex_5:40), 15, 1) , $thenApply(fileData_7.readIntoArray(header, 0, header.length), makeLambdaFunction(FileWrapper$lambda$295$Type.prototype.apply_0, FileWrapper$lambda$295$Type, [header, filename_2]))), makeLambdaFunction(FileWrapper$lambda$153$Type.prototype.apply_0, FileWrapper$lambda$153$Type, [this$static, committer_1, filename_2, network_4, isHidden_3, endIndex_5, timestamp, monitor_11, fileData_7, streamSecret_12, crypto_10, existingThumbnail_13, fileKey, dataKey, parentLocation, parentBat, dirParentKey, firstChunkMapKey_14, firstBat_15, fileWriteKey, current_16, mirrorBat_17]));
}

function $lambda$144(this$static, updatePropsIfNecessary_1, endIndex_2, committer_4, fileData_5, startIndex_6, network_8, crypto_9, monitor_10, child_11, updatedSnapshot_9){
  return $thenCompose($thenCompose($withWriter(updatedSnapshot_9, $owner(this$static), this$static.pointer.capability.writer, network_8), makeLambdaFunction(FileWrapper$lambda$3$Type.prototype.apply_0, FileWrapper$lambda$3$Type, [this$static, network_8])), makeLambdaFunction(FileWrapper$lambda$145$Type.prototype.apply_0, FileWrapper$lambda$145$Type, [updatePropsIfNecessary_1, endIndex_2, updatedSnapshot_9, committer_4, fileData_5, startIndex_6, network_8, crypto_9, monitor_10, child_11]));
}

function $lambda$153(this$static, committer_1, filename_2, network_3, isHidden_4, endIndex_5, timestamp_7, monitor_8, fileData_9, streamSecret_10, crypto_11, existingThumbnail_12, fileKey_15, dataKey_16, parentLocation_17, parentBat_18, dirParentKey_19, firstChunkMapKey_20, firstBat_21, fileWriteKey_22, current_23, mirrorBat_24, mimeType_22){
  return $thenCompose(fileData_9.reset(), makeLambdaFunction(FileWrapper$lambda$154$Type.prototype.apply_0, FileWrapper$lambda$154$Type, [this$static, committer_1, filename_2, network_3, isHidden_4, mimeType_22, endIndex_5, timestamp_7, monitor_8, fileData_9, streamSecret_10, crypto_11, existingThumbnail_12, fileKey_15, dataKey_16, parentLocation_17, parentBat_18, dirParentKey_19, firstChunkMapKey_20, firstBat_21, fileWriteKey_22, current_23, mirrorBat_24]));
}

function $lambda$154(this$static, committer_1, filename_2, network_3, isHidden_4, mimeType_5, endIndex_6, timestamp_8, monitor_9, fileData_10, streamSecret_11, crypto_12, existingThumbnail_13, fileKey_16, dataKey_17, parentLocation_18, parentBat_19, dirParentKey_20, firstChunkMapKey_21, firstBat_22, fileWriteKey_23, current_24, mirrorBat_25, resetReader_23){
  var actualStreamSecret, chunks, fileProps, fileWriteCap, signer;
  actualStreamSecret = streamSecret_11.ref != null?streamSecret_11:($clinit_Optional() , new Optional(checkCriticalNotNull($randomBytes(crypto_12.random, 32))));
  fileProps = new FileProperties_0(filename_2, false, false, mimeType_5, endIndex_6, timestamp_8, timestamp_8, isHidden_4, existingThumbnail_13, actualStreamSecret);
  chunks = new FileUploader_0(filename_2, resetReader_23, endIndex_6, fileKey_16, dataKey_17, parentLocation_18, parentBat_19, dirParentKey_20, monitor_9, fileProps, firstChunkMapKey_21, firstBat_22);
  signer = $signingPair(this$static);
  fileWriteCap = new WritableAbsoluteCapability($owner(this$static), signer.publicKeyHash, firstChunkMapKey_21, firstBat_22, fileKey_16, fileWriteKey_23);
  return $thenApply($thenCompose($upload(chunks, current_24, committer_1, network_3, parentLocation_18.owner, signer, mirrorBat_25, crypto_12.random, crypto_12.hasher), makeLambdaFunction(FileWrapper$lambda$155$Type.prototype.apply_0, FileWrapper$lambda$155$Type, [this$static, committer_1, fileWriteCap, filename_2, network_3, isHidden_4, mimeType_5, endIndex_6, timestamp_8, actualStreamSecret, monitor_9, fileData_10])), makeLambdaFunction(FileWrapper$lambda$157$Type.prototype.apply_0, FileWrapper$lambda$157$Type, [this$static, filename_2, fileWriteCap]));
}

function $lambda$155(this$static, committer_1, fileWriteCap_2, filename_3, network_4, isHidden_5, mimeType_6, endIndex_7, timestamp_9, actualStreamSecret_10, monitor_11, fileData_12, cwd_11){
  return $thenCompose(fileData_12.reset(), makeLambdaFunction(FileWrapper$lambda$156$Type.prototype.apply_0, FileWrapper$lambda$156$Type, [this$static, cwd_11, committer_1, fileWriteCap_2, filename_3, network_4, isHidden_5, mimeType_6, endIndex_7, timestamp_9, actualStreamSecret_10, monitor_11]));
}

function $lambda$156(this$static, cwd_1, committer_2, fileWriteCap_3, filename_4, network_5, isHidden_6, mimeType_7, endIndex_8, timestamp_10, actualStreamSecret_11, monitor_12, resetAgain_11){
  return $generateThumbnailAndUpdate(this$static, cwd_1, committer_2, fileWriteCap_3, filename_4, resetAgain_11, network_5, ($clinit_Boolean() , isHidden_6?true:false), mimeType_7, endIndex_8, timestamp_10, timestamp_10, actualStreamSecret_11, false, monitor_12);
}

function $lambda$157(this$static, filename_1, fileWriteCap_2, s_2){
  return new Pair(s_2, ($clinit_Optional() , new Optional(checkCriticalNotNull(new NamedRelativeCapability(filename_1, $relativise($writableFilePointer(this$static), fileWriteCap_2))))));
}

function $lambda$158(this$static, network_1, crypto_2, latestSnapshot_2, committer_3){
  return $exceptionally($thenApply($thenCompose($getInputStream_2(this$static, $get_32(latestSnapshot_2, this$static.pointer.capability.writer).props, network_1, crypto_2, makeLambdaFunction(FileWrapper$lambda$159$Type.prototype.accept_5, FileWrapper$lambda$159$Type, [])), makeLambdaFunction(FileWrapper$lambda$160$Type.prototype.apply_0, FileWrapper$lambda$160$Type, [this$static, latestSnapshot_2, committer_3, network_1])), makeLambdaFunction(FileWrapper$lambda$161$Type.prototype.apply_0, FileWrapper$lambda$161$Type, [])), makeLambdaFunction(FileWrapper$lambda$162$Type.prototype.apply_0, FileWrapper$lambda$162$Type, [latestSnapshot_2]));
}

function $lambda$160(this$static, latestSnapshot_1, committer_2, network_3, is_3){
  return $recalculateThumbnail(this$static, latestSnapshot_1, committer_2, ($ensureUnmodified(this$static) , this$static.props).name, is_3, this$static.props.isHidden, ($ensureUnmodified(this$static) , this$static.props).size_0, this$static.props.created, network_3, castTo(this$static.pointer.capability, 74), ($ensureUnmodified(this$static) , this$static.props).streamSecret);
}

function $lambda$164_0(this$static, snapshot_1, committer_2, fileWriteCap_3, filename_4, network_5, isHidden_6, fileSize_7, createdDateTime_9, streamSecret_10, fileData_11, fileData2_10){
  var header;
  return $thenCompose((header = initUnidimensionalArray(B_classLit, $intern_28, 8, toInt_0(compare_1(fileSize_7, 40) < 0?fileSize_7:40), 15, 1) , $thenApply(fileData2_10.readIntoArray(header, 0, header.length), makeLambdaFunction(FileWrapper$lambda$295$Type.prototype.apply_0, FileWrapper$lambda$295$Type, [header, filename_4]))), makeLambdaFunction(FileWrapper$lambda$165$Type.prototype.apply_0, FileWrapper$lambda$165$Type, [this$static, snapshot_1, committer_2, fileWriteCap_3, filename_4, network_5, isHidden_6, fileSize_7, createdDateTime_9, streamSecret_10, fileData_11]));
}

function $lambda$165_0(this$static, snapshot_1, committer_2, fileWriteCap_3, filename_4, network_5, isHidden_6, fileSize_7, createdDateTime_9, streamSecret_10, fileData_11, mimeType_10){
  return $thenCompose(fileData_11.reset(), makeLambdaFunction(FileWrapper$lambda$166$Type.prototype.apply_0, FileWrapper$lambda$166$Type, [this$static, snapshot_1, committer_2, fileWriteCap_3, filename_4, network_5, isHidden_6, mimeType_10, fileSize_7, createdDateTime_9, streamSecret_10]));
}

function $lambda$166_0(this$static, snapshot_1, committer_2, fileWriteCap_3, filename_4, network_5, isHidden_6, mimeType_7, fileSize_8, createdDateTime_10, streamSecret_11, resetAgain_10){
  return $generateThumbnailAndUpdate(this$static, snapshot_1, committer_2, fileWriteCap_3, filename_4, resetAgain_10, network_5, ($clinit_Boolean() , isHidden_6?true:false), mimeType_7, fileSize_8, ($clinit_LocalDateTime() , now_4()), createdDateTime_10, streamSecret_11, true, makeLambdaFunction(FileWrapper$lambda$167$Type.prototype.accept_5, FileWrapper$lambda$167$Type, []));
}

function $lambda$168(this$static, base_1, fileName_2, mimeType_3, fileSize_4, updatedDateTime_6, createdDateTime_7, isHidden_8, streamSecret_9, committer_10, network_11, replaceExistingThumbnail_12, fileData_13, fileOpt_12){
  return replaceExistingThumbnail_12 || (checkCriticalElement(fileOpt_12.ref != null) , castTo(fileOpt_12.ref, 19)).props.thumbnail.ref == null?$thenCompose($generateThumbnail(network_11, fileData_13, toInt_0(compare_1(fileSize_4, $intern_1) < 0?fileSize_4:$intern_1), fileName_2, mimeType_3), makeLambdaFunction(FileWrapper$lambda$169$Type.prototype.apply_0, FileWrapper$lambda$169$Type, [this$static, base_1, fileName_2, mimeType_3, fileSize_4, updatedDateTime_6, createdDateTime_7, isHidden_8, streamSecret_9, fileOpt_12, committer_10, network_11])):new CompletableFuture_0(base_1);
}

function $lambda$169(this$static, base_1, fileName_2, mimeType_3, fileSize_4, updatedDateTime_6, createdDateTime_7, isHidden_8, streamSecret_9, fileOpt_10, committer_11, network_12, thumbData_11){
  var fileProps;
  if (thumbData_11.ref == null)
    return new CompletableFuture_0(base_1);
  fileProps = new FileProperties_0(fileName_2, false, this$static.props.isLink, mimeType_3, fileSize_4, updatedDateTime_6, createdDateTime_7, (checkCriticalNotNull(isHidden_8) , isHidden_8), thumbData_11, streamSecret_9);
  return $updateProperties((checkCriticalElement(fileOpt_10.ref != null) , castTo(fileOpt_10.ref, 19)), base_1, committer_11, fileProps, network_12);
}

function $lambda$17_12(this$static, wBase_0){
  return $getSigner(this$static.pointer.fileAccess, this$static.pointer.capability.rBaseKey, wBase_0, this$static.entryWriter);
}

function $lambda$171(this$static, newBase_0){
  $setModified(this$static);
  return newBase_0;
}

function $lambda$172(this$static, crypto_1, expectedSize_2, filename_4, fileData_5, isHidden_6, network_7, monitor_8, mirrorBat_9, child_8){
  return $thenCompose(castTo($orElseGet($map($flatMap(child_8, makeLambdaFunction(FileWrapper$lambda$173$Type.prototype.apply_0, FileWrapper$lambda$173$Type, [])), makeLambdaFunction(FileWrapper$lambda$174$Type.prototype.apply_0, FileWrapper$lambda$174$Type, [child_8, crypto_1])), new FileWrapper$lambda$176$Type(crypto_1)), 6), makeLambdaFunction(FileWrapper$lambda$177$Type.prototype.apply_0, FileWrapper$lambda$177$Type, [this$static, child_8, expectedSize_2, filename_4, fileData_5, isHidden_6, network_7, crypto_1, monitor_8, mirrorBat_9]));
}

function $lambda$177_0(this$static, child_1, expectedSize_2, filename_4, fileData_5, isHidden_6, network_7, crypto_8, monitor_9, mirrorBat_10, x_9){
  var size_0;
  size_0 = castTo($orElse($map(child_1, makeLambdaFunction(FileWrapper$lambda$178$Type.prototype.apply_0, FileWrapper$lambda$178$Type, [])), valueOf_2(0)), 69).value_0;
  if (compare_1(size_0, expectedSize_2) != 0)
    throw toJs(new IllegalStateException_0('File has been concurrently modified!'));
  return $uploadFileSection(this$static, filename_4, new AsyncReader$ArrayBacked(fileData_5), isHidden_6, size_0, add_1(fileData_5.length, size_0), $map(child_1, makeLambdaFunction(FileWrapper$lambda$179$Type.prototype.apply_0, FileWrapper$lambda$179$Type, [])), true, network_7, crypto_8, monitor_9, castTo(x_9.left, 11), castTo(x_9.right, 12), castTo(x_9.middle, 12), mirrorBat_10);
}

function $lambda$18_6(this$static, wBase_0){
  return $getSigner(this$static.pointer.fileAccess, this$static.pointer.capability.rBaseKey, wBase_0, this$static.entryWriter);
}

function $lambda$183_0(this$static, newFolderName_1, requestedBaseSymmetricKey_2, desiredBat_3, isSystemFolder_4, mirrorBat_5, network_6, crypto_7, state_7, committer_8){
  return $mkdir(this$static, newFolderName_1, ($clinit_Optional() , !requestedBaseSymmetricKey_2?EMPTY:new Optional(checkCriticalNotNull(requestedBaseSymmetricKey_2))), (null , EMPTY), (null , EMPTY), desiredBat_3, isSystemFolder_4, $or($mirrorBatId(this$static.pointer.fileAccess), new FileWrapper$lambda$184$Type(mirrorBat_5)), network_6, crypto_7, state_7, committer_8);
}

function $lambda$185_0(this$static, network_1, version_1){
  return $thenCompose($withWriter(version_1, $owner(this$static), this$static.pointer.capability.writer, network_1), makeLambdaFunction(FileWrapper$lambda$3$Type.prototype.apply_0, FileWrapper$lambda$3$Type, [this$static, network_1]));
}

function $lambda$186_0(this$static, newFolderName_1, fullVersion_2, committer_3, network_4, requestedBaseReadKey_5, requestedBaseWriteKey_6, desiredMapKey_7, desiredBat_8, isSystemFolder_9, mirrorBat_10, crypto_11, hasChild_11){
  if (checkCriticalNotNull(hasChild_11) , hasChild_11) {
    return errored(new IllegalStateException_0('Child already exists with name: ' + newFolderName_1));
  }
  return $thenApply($mkdir_2(this$static.pointer.fileAccess, fullVersion_2, committer_3, newFolderName_1, network_4, $writableFilePointer(this$static), $map(this$static.pointer.capability.wBaseKey, makeLambdaFunction(FileWrapper$lambda$17$Type.prototype.apply_0, FileWrapper$lambda$17$Type, [this$static])), requestedBaseReadKey_5, requestedBaseWriteKey_6, desiredMapKey_7, desiredBat_8, isSystemFolder_9, $or($mirrorBatId(this$static.pointer.fileAccess), new FileWrapper$lambda$187$Type(mirrorBat_10)), crypto_11), makeLambdaFunction(FileWrapper$lambda$188$Type.prototype.apply_0, FileWrapper$lambda$188$Type, [this$static]));
}

function $lambda$188_0(this$static, x_0){
  $setModified(this$static);
  return x_0;
}

function $lambda$189(this$static, elements_1, isSystemFolder_2, mirrorBat_3, network_4, crypto_5, state_5, committer_6){
  return reduceAll(elements_1, new Pair(state_5, this$static), new FileWrapper$lambda$191$Type(isSystemFolder_2, mirrorBat_3, network_4, crypto_5, committer_6), new FileWrapper$lambda$192$Type);
}

function $lambda$19_9(this$static, childsEntryWriter_1, network_2, version_3, childCaps_3){
  return getFiles_0($owner(this$static), childCaps_3, childsEntryWriter_1, this$static.ownername, network_2, version_3);
}

function $lambda$194_0(this$static, newFolderName_1, crypto_2, network_3, fullVersion_4, committer_5, requestedBaseReadKey_6, requestedBaseWriteKey_7, desiredMapKey_8, desiredBat_9, isSystemFolder_10, mirrorBat_11, childOpt_11){
  if (childOpt_11.ref != null) {
    return new CompletableFuture_0(new Pair(fullVersion_4, (checkCriticalElement(childOpt_11.ref != null) , castTo(childOpt_11.ref, 19))));
  }
  return $thenCompose($mkdir_2(this$static.pointer.fileAccess, fullVersion_4, committer_5, newFolderName_1, network_3, $writableFilePointer(this$static), $map(this$static.pointer.capability.wBaseKey, makeLambdaFunction(FileWrapper$lambda$17$Type.prototype.apply_0, FileWrapper$lambda$17$Type, [this$static])), requestedBaseReadKey_6, requestedBaseWriteKey_7, desiredMapKey_8, desiredBat_9, isSystemFolder_10, mirrorBat_11, crypto_2), makeLambdaFunction(FileWrapper$lambda$195$Type.prototype.apply_0, FileWrapper$lambda$195$Type, [this$static, newFolderName_1, crypto_2, network_3]));
}

function $lambda$195_0(this$static, newFolderName_1, crypto_2, network_3, x_3){
  $setModified(this$static);
  return $thenApply($thenCompose($thenCompose($withWriter(x_3, $owner(this$static), this$static.pointer.capability.writer, network_3), makeLambdaFunction(FileWrapper$lambda$3$Type.prototype.apply_0, FileWrapper$lambda$3$Type, [this$static, network_3])), makeLambdaFunction(FileWrapper$lambda$196$Type.prototype.apply_0, FileWrapper$lambda$196$Type, [newFolderName_1, crypto_2, network_3])), makeLambdaFunction(FileWrapper$lambda$197$Type.prototype.apply_0, FileWrapper$lambda$197$Type, [x_3]));
}

function $lambda$198_0(this$static, parent_1, newFilename_2, userContext_3, ourPath_4, currentProps_5, existing_5){
  var isDir, isLink, isNull, newProps, nodeToUpdate, ourPointer, signer, us;
  if (existing_5.ref != null)
    throw toJs(new IllegalStateException_0('Cannot rename, child already exists with name: ' + newFilename_2));
  ourPointer = castTo($orElse(this$static.linkPointer, this$static.pointer), 83);
  us = castTo(ourPointer.capability, 74);
  nodeToUpdate = ourPointer.fileAccess;
  isDir = (isNull = !this$static.pointer , isNull || this$static.pointer.fileAccess.isDirectory_0);
  isLink = $getParentBlock(ourPointer.fileAccess, getParentKey(ourPointer.fileAccess, ourPointer.capability.rBaseKey)).properties.isLink;
  newProps = new FileProperties_0(newFilename_2, isDir, isLink, currentProps_5.mimeType, currentProps_5.size_0, currentProps_5.modified, currentProps_5.created, currentProps_5.isHidden, currentProps_5.thumbnail, currentProps_5.streamSecret);
  signer = isLink?$signingPair(parent_1):$signingPair(this$static);
  return $thenCompose($applyComplexUpdate(userContext_3.network.synchronizer, $owner(this$static), signer, new FileWrapper$lambda$199$Type(this$static, parent_1, us, newFilename_2, userContext_3, ourPath_4, nodeToUpdate, newProps), new WriteSynchronizer$lambda$23$Type), makeLambdaFunction(FileWrapper$lambda$202$Type.prototype.apply_0, FileWrapper$lambda$202$Type, [parent_1, userContext_3]));
}

function $lambda$199_0(this$static, parent_1, us_2, newFilename_3, userContext_4, ourPath_5, nodeToUpdate_6, newProps_7, s_7, committer_8){
  return $thenCompose($thenCompose($updateProperties_0(nodeToUpdate_6, s_7, committer_8, us_2, this$static.entryWriter, newProps_7, userContext_4.network), makeLambdaFunction(FileWrapper$lambda$200$Type.prototype.apply_0, FileWrapper$lambda$200$Type, [parent_1, committer_8, us_2, newFilename_3, userContext_4])), makeLambdaFunction(FileWrapper$lambda$201$Type.prototype.apply_0, FileWrapper$lambda$201$Type, [userContext_4, ourPath_5, newFilename_3, committer_8]));
}

function $lambda$2_26(this$static, network_1, v_1){
  return $thenCompose($withWriter(v_1, $owner(this$static), this$static.pointer.capability.writer, network_1), makeLambdaFunction(FileWrapper$lambda$3$Type.prototype.apply_0, FileWrapper$lambda$3$Type, [this$static, network_1]));
}

function $lambda$204_0(this$static, parent_1, newName_2, hasher_3, network_4, updatedProperties_5, s_5, comitter_6){
  return $thenCompose($thenCompose($thenCompose(parent_1.ref != null?$withWriter(s_5, $owner(this$static), (checkCriticalElement(parent_1.ref != null) , castTo(parent_1.ref, 19)).pointer.capability.writer, network_4):new CompletableFuture_0(s_5), makeLambdaFunction(FileWrapper$lambda$205$Type.prototype.apply_0, FileWrapper$lambda$205$Type, [parent_1, newName_2, network_4])), makeLambdaFunction(FileWrapper$lambda$206$Type.prototype.apply_0, FileWrapper$lambda$206$Type, [this$static, parent_1, hasher_3, network_4])), makeLambdaFunction(FileWrapper$lambda$209$Type.prototype.apply_0, FileWrapper$lambda$209$Type, [this$static, s_5, comitter_6, updatedProperties_5, network_4]));
}

function $lambda$206(this$static, parent_1, hasher_2, network_3, hasChild_3){
  return (checkCriticalNotNull(hasChild_3) , hasChild_3)?$thenApply($getChildrenCapabilities((checkCriticalElement(parent_1.ref != null) , castTo(parent_1.ref, 19)), hasher_2, network_3), makeLambdaFunction(FileWrapper$lambda$207$Type.prototype.apply_0, FileWrapper$lambda$207$Type, [this$static])):new CompletableFuture_0(($clinit_Boolean() , true));
}

function $lambda$207(this$static, childCaps_0){
  if (!castTo($collect_0($map_0(childCaps_0.stream(), makeLambdaFunction(FileWrapper$lambda$208$Type.prototype.apply_0, FileWrapper$lambda$208$Type, [])), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47).contains(new ByteArrayWrapper($getMapKey(this$static.pointer.capability))))
    throw toJs(new IllegalStateException_0('Cannot rename to same name as an existing file'));
  return $clinit_Boolean() , true;
}

function $lambda$209(this$static, s_1, comitter_2, updatedProperties_3, network_4){
  var fileAccess;
  fileAccess = this$static.pointer.fileAccess;
  return $updateProperties_0(fileAccess, s_1, comitter_2, $writableFilePointer(this$static), this$static.entryWriter, updatedProperties_3, network_4);
}

function $lambda$211(this$static, w_0){
  return $getSigner(this$static.pointer.fileAccess, this$static.pointer.capability.rBaseKey, w_0, this$static.entryWriter);
}

function $lambda$216(this$static, target_1, targetMirrorBatId_2, network_3, crypto_4, version_4, committer_5){
  return $thenCompose($withWriter(version_4, $owner(this$static), this$static.pointer.capability.writer, network_3), makeLambdaFunction(FileWrapper$lambda$217$Type.prototype.apply_0, FileWrapper$lambda$217$Type, [this$static, target_1, targetMirrorBatId_2, network_3, crypto_4, committer_5]));
}

function $lambda$217(this$static, target_1, targetMirrorBatId_2, network_3, crypto_4, committer_5, both_5){
  return $copyTo(this$static, target_1, this$static.props.thumbnail, targetMirrorBatId_2, network_3, crypto_4, both_5, committer_5);
}

function $lambda$219(this$static, existingThumbnail_1, targetMirrorBat_2, network_3, crypto_4, committer_5, target_6, version_7, childExists_7){
  var isNull, newBaseR, newBaseW, newBat, newCap, newMapKey;
  if (checkCriticalNotNull(childExists_7) , childExists_7) {
    return errored(new IllegalStateException_0('CopyTo target ' + target_6 + ' already has child with name ' + ($ensureUnmodified(this$static) , this$static.props).name));
  }
  isNull = !this$static.pointer;
  if (isNull || this$static.pointer.fileAccess.isDirectory_0) {
    newMapKey = $randomBytes(crypto_4.random, 32);
    newBat = ($clinit_Optional() , new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(crypto_4.random, 32))))));
    newBaseR = ($clinit_SymmetricKey() , random_10(castTo($get(PROVIDERS_1, ($clinit_SymmetricKey$Type() , TweetNaCl)), 91), castTo($get(RNG_PROVIDERS_0, TweetNaCl), 86)));
    newBaseW = random_10(castTo($get(PROVIDERS_1, TweetNaCl), 91), castTo($get(RNG_PROVIDERS_0, TweetNaCl), 86));
    newCap = $withBaseWriteKey($withBaseKey($withMapKey_1(castTo(target_6.pointer.capability, 74), newMapKey, newBat), newBaseR), newBaseW);
    return $thenCompose($getChildren_5($withVersion_0(this$static, $mergeAndOverwriteWith(this$static.version, version_7)), version_7, crypto_4.hasher, network_3), makeLambdaFunction(FileWrapper$lambda$220$Type.prototype.apply_0, FileWrapper$lambda$220$Type, [this$static, existingThumbnail_1, targetMirrorBat_2, network_3, crypto_4, committer_5, target_6, newBaseR, newBaseW, newMapKey, newBat, version_7, newCap]));
  }
   else {
    return $thenCompose($withWriter(version_7, $owner(this$static), this$static.pointer.capability.writer, network_3), makeLambdaFunction(FileWrapper$lambda$226$Type.prototype.apply_0, FileWrapper$lambda$226$Type, [this$static, target_6, committer_5, network_3, crypto_4, existingThumbnail_1, targetMirrorBat_2]));
  }
}

function $lambda$220(this$static, existingThumbnail_1, targetMirrorBat_2, network_3, crypto_4, committer_5, target_6, newBaseR_7, newBaseW_8, newMapKey_9, newBat_10, version_11, newCap_12, children_12){
  return $thenCompose($mkdir(target_6, ($ensureUnmodified(this$static) , this$static.props).name, ($clinit_Optional() , new Optional(checkCriticalNotNull(newBaseR_7))), new Optional(checkCriticalNotNull(newBaseW_8)), new Optional(checkCriticalNotNull(newMapKey_9)), newBat_10, ($ensureUnmodified(this$static) , this$static.props).isHidden, targetMirrorBat_2, network_3, crypto_4, version_11, committer_5), makeLambdaFunction(FileWrapper$lambda$221$Type.prototype.apply_0, FileWrapper$lambda$221$Type, [existingThumbnail_1, targetMirrorBat_2, network_3, crypto_4, committer_5, newCap_12, target_6, children_12]));
}

function $lambda$226(this$static, target_1, committer_2, network_3, crypto_4, existingThumbnail_5, targetMirrorBat_6, snapshot_6){
  return $thenCompose($getInputStream_2(this$static, $get_32(snapshot_6, this$static.pointer.capability.writer).props, network_3, crypto_4, makeLambdaFunction(FileWrapper$lambda$227$Type.prototype.accept_5, FileWrapper$lambda$227$Type, [])), makeLambdaFunction(FileWrapper$lambda$228$Type.prototype.apply_0, FileWrapper$lambda$228$Type, [this$static, target_1, committer_2, network_3, crypto_4, snapshot_6, existingThumbnail_5, targetMirrorBat_6]));
}

function $lambda$228(this$static, target_1, committer_2, network_3, crypto_4, snapshot_5, existingThumbnail_6, targetMirrorBat_7, stream_7){
  return $thenCompose($uploadFileSection_0(target_1, snapshot_5, committer_2, ($ensureUnmodified(this$static) , this$static.props).name, stream_7, existingThumbnail_6, false, 0, ($ensureUnmodified(this$static) , this$static.props).size_0, ($clinit_Optional() , $clinit_Optional() , EMPTY), (null , EMPTY), (null , EMPTY), false, false, false, network_3, crypto_4, makeLambdaFunction(FileWrapper$lambda$229$Type.prototype.accept_5, FileWrapper$lambda$229$Type, []), $randomBytes(crypto_4.random, 32), (null , EMPTY), new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(crypto_4.random, 32))))), targetMirrorBat_7), makeLambdaFunction(FileWrapper$lambda$230$Type.prototype.apply_0, FileWrapper$lambda$230$Type, [target_1, committer_2, network_3, crypto_4]));
}

function $lambda$25_4(this$static, network_1, version_2, rcOpt_2){
  var childsEntryWriter, props, rc;
  if (rcOpt_2.ref == null)
    return new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY));
  rc = (checkCriticalElement(rcOpt_2.ref != null) , castTo(rcOpt_2.ref, 83));
  props = $getParentBlock(rc.fileAccess, getParentKey(rc.fileAccess, rc.capability.rBaseKey)).properties;
  childsEntryWriter = $map(this$static.pointer.capability.wBaseKey, makeLambdaFunction(FileWrapper$lambda$26$Type.prototype.apply_0, FileWrapper$lambda$26$Type, [this$static]));
  if (!props.isLink)
    return $thenApply($withWriter(version_2, $owner(this$static), rc.capability.writer, network_1), makeLambdaFunction(FileWrapper$lambda$27$Type.prototype.apply_0, FileWrapper$lambda$27$Type, [this$static, rc, childsEntryWriter]));
  return $thenCompose($withWriter(version_2, $owner(this$static), rc.capability.writer, network_1), makeLambdaFunction(FileWrapper$lambda$28$Type.prototype.apply_0, FileWrapper$lambda$28$Type, [this$static, rc, childsEntryWriter, network_1]));
}

function $lambda$26_6(this$static, wBase_0){
  return $getSigner(this$static.pointer.fileAccess, this$static.pointer.capability.rBaseKey, wBase_0, this$static.entryWriter);
}

function $lambda$27_3(this$static, rc_1, childsEntryWriter_2, fullVersion_2){
  return $clinit_Optional() , new Optional(checkCriticalNotNull(new FileWrapper_0(rc_1, (null , EMPTY), childsEntryWriter_2, this$static.ownername, fullVersion_2)));
}

function $lambda$273(this$static, parent_1, network_2, userContext_3, hasher_4, writableParent_5, ourPath_6, version_6, c_7){
  return $thenCompose(writableParent_5?$thenCompose($withWriter(version_6, $owner(this$static), parent_1.pointer.capability.writer, network_2), makeLambdaFunction(FileWrapper$lambda$274$Type.prototype.apply_0, FileWrapper$lambda$274$Type, [this$static, parent_1, c_7, network_2, userContext_3, hasher_4])):new CompletableFuture_0(version_6), makeLambdaFunction(FileWrapper$lambda$275$Type.prototype.apply_0, FileWrapper$lambda$275$Type, [this$static, writableParent_5, parent_1, hasher_4, network_2, c_7, userContext_3, ourPath_6]));
}

function $lambda$274_0(this$static, parent_1, c_2, network_3, userContext_4, hasher_5, v2_5){
  return $removeChildren(parent_1.pointer.fileAccess, v2_5, c_2, new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_user_fs_AbsoluteCapability_2_classLit, 1), $intern_0, 71, 0, [this$static.pointer.capability])), $writableFilePointer(parent_1), parent_1.entryWriter, network_3, userContext_4.crypto.random, hasher_5);
}

function $lambda$275_0(this$static, writableParent_1, parent_2, hasher_3, network_4, c_5, userContext_6, ourPath_7, v_7){
  return $thenCompose(call_2($owner(this$static), makeLambdaFunction(FileWrapper$lambda$276$Type.prototype.apply_0, FileWrapper$lambda$276$Type, [this$static, writableParent_1, parent_2, hasher_3, network_4, v_7, c_5]), network_4.dhtClient), makeLambdaFunction(FileWrapper$lambda$277$Type.prototype.apply_0, FileWrapper$lambda$277$Type, [userContext_6, ourPath_7, c_5, network_4]));
}

function $lambda$276(this$static, writableParent_1, parent_2, hasher_3, network_4, v_5, c_6, tid_6){
  return deleteAllChunks(this$static.linkPointer.ref != null?castTo(castTo($get_6(this$static.linkPointer), 83).capability, 74):$writableFilePointer(this$static), writableParent_1?$signingPair(parent_2):$signingPair(this$static), tid_6, hasher_3, network_4, v_5, c_6);
}

function $lambda$28_5(this$static, rc_1, childsEntryWriter_2, network_3, fullVersion_3){
  return $thenApply(getFileFromLink($owner(this$static), rc_1, childsEntryWriter_2, this$static.ownername, network_3, fullVersion_3), makeLambdaFunction(FileWrapper$2methodref$of$Type.prototype.apply_0, FileWrapper$2methodref$of$Type, []));
}

function $lambda$283(this$static, network_1, crypto_2, monitor_3, state_3){
  return $getInputStream_1(this$static, $get_32(state_3, this$static.pointer.capability.writer).props, network_1, crypto_2, ($ensureUnmodified(this$static) , this$static.props).size_0, 1, monitor_3);
}

function $lambda$284_0(this$static, network_1, crypto_2, fileSizeHi_3, fileSizeLow_4, monitor_5, state_5){
  return $getInputStream_1(this$static, $get_32(state_5, this$static.pointer.capability.writer).props, network_1, crypto_2, add_1(and_0(fileSizeLow_4, $intern_47), shl_0(and_0(fileSizeHi_3, $intern_47), 32)), 1, monitor_5);
}

function $lambda$285_0(this$static, network_1, crypto_2, fileSize_3, nBufferedChunks_5, monitor_6, state_5){
  return $getInputStream_1(this$static, $get_32(state_5, this$static.pointer.capability.writer).props, network_1, crypto_2, fileSize_3, nBufferedChunks_5, monitor_6);
}

function $lambda$286_0(this$static, version_1, network_2, crypto_3, fileSize_4, fileAccess_6, nBufferedChunks_7, monitor_8, retriever_7){
  return $getFile_2(retriever_7, version_1, network_2, crypto_3, this$static.pointer.capability, this$static.props.streamSecret, fileSize_4, fileAccess_6.lastCommittedHash, nBufferedChunks_7, monitor_8);
}

function $lambda$3_25(this$static, network_1, v_1){
  if ($equals_22($get_32(this$static.version, this$static.pointer.capability.writer), $get_32(v_1, this$static.pointer.capability.writer)))
    return new CompletableFuture_0(this$static);
  return $thenApply($thenApply($getFile_0(network_1, v_1, this$static.pointer.capability, this$static.entryWriter, this$static.ownername), makeLambdaFunction(FileWrapper$0methodref$get$Type.prototype.apply_0, FileWrapper$0methodref$get$Type, [])), makeLambdaFunction(FileWrapper$lambda$5$Type.prototype.apply_0, FileWrapper$lambda$5$Type, [this$static]));
}

function $lambda$30_7(this$static, network_1, cwd_1){
  $setModified(this$static);
  return $thenApply($thenCompose($withWriter(cwd_1, $owner(this$static), this$static.pointer.capability.writer, network_1), makeLambdaFunction(FileWrapper$lambda$3$Type.prototype.apply_0, FileWrapper$lambda$3$Type, [this$static, network_1])), makeLambdaFunction(FileWrapper$lambda$31$Type.prototype.apply_0, FileWrapper$lambda$31$Type, [cwd_1]));
}

function $lambda$32_3(this$static, offset_1, crypto_3, network_4, retriever_3){
  return $thenApply($getMapLabelAt(retriever_3, $get_32(this$static.version, this$static.pointer.capability.writer).props, $writableFilePointer(this$static), ($ensureUnmodified(this$static) , this$static.props).streamSecret, offset_1, crypto_3.hasher, network_4), makeLambdaFunction(FileWrapper$3methodref$get$Type.prototype.apply_0, FileWrapper$3methodref$get$Type, []));
}

function $lambda$34_3(this$static, newSize_1, network_3, crypto_4, current_3, committer_4){
  return $truncate_0(this$static, current_3, committer_4, newSize_1, network_3, crypto_4);
}

function $lambda$35_4(this$static, network_1, finished_1){
  return $thenCompose($withWriter(finished_1, $owner(this$static), this$static.pointer.capability.writer, network_1), makeLambdaFunction(FileWrapper$lambda$3$Type.prototype.apply_0, FileWrapper$lambda$3$Type, [this$static, network_1]));
}

function $lambda$36_5(this$static, props_1, crypto_2, network_3, committer_4, newSize_5, snapshot_5){
  var fileAccess;
  return $thenCompose((fileAccess = this$static.pointer.fileAccess , $thenCompose($retriever(fileAccess, this$static.pointer.capability.rBaseKey, this$static.props.streamSecret, $getMapKey_0(new Location_0(this$static.pointer.capability.owner, this$static.pointer.capability.writer, $getMapKey(this$static.pointer.capability))), this$static.pointer.capability.bat, crypto_2.hasher), makeLambdaFunction(FileWrapper$lambda$32$Type.prototype.apply_0, FileWrapper$lambda$32$Type, [this$static, newSize_5, crypto_2, network_3]))), makeLambdaFunction(FileWrapper$lambda$37$Type.prototype.apply_0, FileWrapper$lambda$37$Type, [this$static, props_1, crypto_2, network_3, snapshot_5, committer_4, newSize_5]));
}

function $lambda$37_2(this$static, props_1, crypto_2, network_3, snapshot_4, committer_5, newSize_6, endMapKey_6){
  return $thenCompose($getInputStream_1(this$static, $get_32(snapshot_4, this$static.pointer.capability.writer).props, network_3, crypto_2, props_1.size_0, 1, makeLambdaFunction(FileWrapper$lambda$38$Type.prototype.accept_5, FileWrapper$lambda$38$Type, [])), makeLambdaFunction(FileWrapper$lambda$39$Type.prototype.apply_0, FileWrapper$lambda$39$Type, [this$static, props_1, endMapKey_6, crypto_2, network_3, snapshot_4, committer_5, newSize_6]));
}

function $lambda$39_4(this$static, props_1, endMapKey_2, crypto_3, network_4, snapshot_5, committer_6, newSize_7, originalReader_7){
  var startOfLastChunk;
  startOfLastChunk = sub_1(newSize_7, mod_0(newSize_7, $intern_70));
  return $thenCompose(originalReader_7.seek_1(startOfLastChunk), makeLambdaFunction(FileWrapper$lambda$40$Type.prototype.apply_0, FileWrapper$lambda$40$Type, [this$static, props_1, endMapKey_2, crypto_3, network_4, snapshot_5, committer_6, newSize_7, startOfLastChunk]));
}

function $lambda$40_3(this$static, props_1, endMapKey_2, crypto_3, network_4, snapshot_5, committer_6, newSize_7, startOfLastChunk_9, seekedOriginal_8){
  var lastChunk;
  lastChunk = initUnidimensionalArray(B_classLit, $intern_28, 8, toInt_0(mod_0(newSize_7, $intern_70)), 15, 1);
  return $thenCompose($thenCompose(seekedOriginal_8.readIntoArray(lastChunk, 0, lastChunk.length), makeLambdaFunction(FileWrapper$lambda$41$Type.prototype.apply_0, FileWrapper$lambda$41$Type, [this$static, props_1, endMapKey_2, crypto_3, network_4, snapshot_5, committer_6, newSize_7])), makeLambdaFunction(FileWrapper$lambda$43$Type.prototype.apply_0, FileWrapper$lambda$43$Type, [this$static, committer_6, lastChunk, startOfLastChunk_9, newSize_7, network_4, crypto_3, props_1]));
}

function $lambda$41_2(this$static, props_1, endMapKey_2, crypto_3, network_4, snapshot_5, committer_6, newSize_7){
  var currentChunk;
  if (compare_1(newSize_7, $intern_70) <= 0)
    return new CompletableFuture_0(snapshot_5);
  currentChunk = toInt_0(div(newSize_7, $intern_70));
  return call_2($owner(this$static), makeLambdaFunction(FileWrapper$lambda$42$Type.prototype.apply_0, FileWrapper$lambda$42$Type, [this$static, props_1, currentChunk, endMapKey_2, crypto_3, network_4, snapshot_5, committer_6]), network_4.dhtClient);
}

function $lambda$42_4(this$static, props_1, currentChunk_2, endMapKey_3, crypto_4, network_5, snapshot_6, committer_7, tid_7){
  return deleteFileChunks(castTo($get_6(props_1.streamSecret), 11), getNumberOfChunks(props_1.size_0) - currentChunk_2, $withMapKey_1($writableFilePointer(this$static), castTo(endMapKey_3.left, 11), castTo(endMapKey_3.right, 12)), $signingPair(this$static), tid_7, crypto_4.hasher, network_5, snapshot_6, committer_7);
}

function $lambda$43_3(this$static, committer_1, lastChunk_2, startOfLastChunk_3, newSize_5, network_7, crypto_8, props_9, deleted_7){
  return $thenCompose($updateProperties_0(this$static.pointer.fileAccess, deleted_7, committer_1, $writableFilePointer(this$static), this$static.entryWriter, new FileProperties_0(props_9.name, props_9.isDirectory, props_9.isLink, props_9.mimeType, startOfLastChunk_3, props_9.modified, props_9.created, props_9.isHidden, props_9.thumbnail, props_9.streamSecret), network_7), makeLambdaFunction(FileWrapper$lambda$44$Type.prototype.apply_0, FileWrapper$lambda$44$Type, [this$static, committer_1, lastChunk_2, startOfLastChunk_3, newSize_5, network_7, crypto_8]));
}

function $lambda$44_3(this$static, committer_1, lastChunk_2, startOfLastChunk_3, newSize_5, network_7, crypto_8, resized_6){
  return $thenCompose($thenCompose($withWriter(resized_6, $owner(this$static), this$static.pointer.capability.writer, network_7), makeLambdaFunction(FileWrapper$lambda$3$Type.prototype.apply_0, FileWrapper$lambda$3$Type, [this$static, network_7])), makeLambdaFunction(FileWrapper$lambda$45$Type.prototype.apply_0, FileWrapper$lambda$45$Type, [committer_1, lastChunk_2, startOfLastChunk_3, newSize_5, network_7, crypto_8, resized_6]));
}

function $lambda$49_3(this$static, filename_1, fileData_2, fileSize_3, network_5, crypto_6, monitor_7, s_6, committer_7){
  return $thenCompose($getChild_3(this$static, s_6, filename_1, network_5), makeLambdaFunction(FileWrapper$lambda$50$Type.prototype.apply_0, FileWrapper$lambda$50$Type, [this$static, filename_1, s_6, committer_7, fileData_2, fileSize_3, network_5, crypto_6, monitor_7]));
}

function $lambda$5_17(this$static, f_0){
  return $withTrieNodeOpt(f_0, this$static.capTrie);
}

function $lambda$50_0(this$static, filename_1, s_2, committer_3, fileData_4, fileSize_5, network_7, crypto_8, monitor_9, childOpt_8){
  var props, startIndex;
  if (childOpt_8.ref == null) {
    throw toJs(new IllegalStateException_0('File does not exists with name ' + filename_1));
  }
   else {
    props = $getFileProperties((checkCriticalElement(childOpt_8.ref != null) , castTo(childOpt_8.ref, 19)));
    if (props.isHidden) {
      throw toJs(new IllegalStateException_0('File is hidden ' + filename_1));
    }
    startIndex = props.size_0;
    return $uploadFileSection_1(this$static, s_2, committer_3, filename_1, fileData_4, false, startIndex, add_1(startIndex, fileSize_5), ($clinit_Optional() , $clinit_Optional() , EMPTY), true, false, network_7, crypto_8, monitor_9, $randomBytes(crypto_8.random, 32), (null , EMPTY), new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(crypto_8.random, 32))))), $mirrorBatId(this$static.pointer.fileAccess));
  }
}

function $lambda$51_1(this$static, network_1, finished_1){
  return $thenCompose($withWriter(finished_1, $owner(this$static), this$static.pointer.capability.writer, network_1), makeLambdaFunction(FileWrapper$lambda$3$Type.prototype.apply_0, FileWrapper$lambda$3$Type, [this$static, network_1]));
}

function $lambda$53_0(this$static, monitor_1, txn_2, data_3, props_4, s_5, c_6, network_7, crypto_8, startChunkIndex_8){
  var path, uploader;
  monitor_1(valueOf_2(mul_0(startChunkIndex_8.value_0, $intern_70)));
  uploader = new FileUploader_0((path = get_176(txn_2.path, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])) , $getFileName(path).pathString), data_3, txn_2.size_0, txn_2.baseKey, txn_2.dataKey, new Location_0(this$static.pointer.capability.owner, this$static.pointer.capability.writer, $getMapKey(this$static.pointer.capability)), this$static.pointer.capability.bat, $getParentKey(this$static.pointer), monitor_1, props_4, $getMapKey_0(txn_2.firstChunk), txn_2.firstBat);
  return $uploadFrom(uploader, s_5, c_6, network_7, toInt_0(startChunkIndex_8.value_0), txn_2.firstChunk.owner, $signingPair(this$static), $mirrorBatId(this$static.pointer.fileAccess), crypto_8.random, crypto_8.hasher);
}

function $lambda$55_2(this$static, currentIndex_1, streamSecret_3, currentLoc_4, s_5, network_6, crypto_7, present_6){
  return (checkCriticalNotNull(present_6) , present_6)?$thenCompose(calculateNextMapKey(streamSecret_3, copyOf(currentLoc_4.mapKey, currentLoc_4.mapKey.length), ($clinit_Optional() , $clinit_Optional() , EMPTY), crypto_7.hasher), makeLambdaFunction(FileWrapper$lambda$56$Type.prototype.apply_0, FileWrapper$lambda$56$Type, [this$static, currentIndex_1, streamSecret_3, currentLoc_4, s_5, network_6, crypto_7])):new CompletableFuture_0(valueOf_2(currentIndex_1));
}

function $lambda$56_0(this$static, currentIndex_1, streamSecret_3, currentLoc_4, s_5, network_6, crypto_7, p_6){
  return $findFirstAbsentChunkIndex(this$static, add_1(currentIndex_1, 1), streamSecret_3, $withMapKey_0(currentLoc_4, castTo(p_6.left, 11)), s_5, network_6, crypto_7);
}

function $lambda$6_16(this$static, network_1, parent_1){
  if (parent_1.ref == null || $equals_0((checkCriticalElement(parent_1.ref != null) , castTo(parent_1.ref, 19)).props.name, '/'))
    return new CompletableFuture_0('/' + this$static.props.name);
  return $thenApply($getPath((checkCriticalElement(parent_1.ref != null) , castTo(parent_1.ref, 19)), network_1), makeLambdaFunction(FileWrapper$lambda$7$Type.prototype.apply_0, FileWrapper$lambda$7$Type, [this$static]));
}

function $lambda$64_2(this$static, committer_1, newSize_2, network_4, crypto_5, size_6, v_5){
  return compare_1(newSize_2, size_6) >= 0?new CompletableFuture_0(v_5):$thenCompose($thenCompose($withWriter(v_5, $owner(this$static), this$static.pointer.capability.writer, network_4), makeLambdaFunction(FileWrapper$lambda$3$Type.prototype.apply_0, FileWrapper$lambda$3$Type, [this$static, network_4])), makeLambdaFunction(FileWrapper$lambda$65$Type.prototype.apply_0, FileWrapper$lambda$65$Type, [v_5, committer_1, newSize_2, network_4, crypto_5]));
}

function $lambda$66_1(this$static, fileData_1, newSize_2, network_4, crypto_5, monitor_6, committer_6){
  return $overwriteFile_0(this$static, fileData_1, newSize_2, network_4, crypto_5, monitor_6, this$static.version, committer_6);
}

function $lambda$67_1(this$static, network_1, v_1){
  return $thenCompose($withWriter(v_1, $owner(this$static), this$static.pointer.capability.writer, network_1), makeLambdaFunction(FileWrapper$lambda$3$Type.prototype.apply_0, FileWrapper$lambda$3$Type, [this$static, network_1]));
}

function $lambda$68_2(this$static, fileData_1, startHigh_2, startLow_3, endHigh_4, endLow_5, network_6, crypto_7, monitor_8, s_8, committer_9){
  return $overwriteSection(this$static, s_8, committer_9, fileData_1, add_1(and_0(startLow_3, $intern_47), shl_0(and_0(startHigh_2, $intern_47), 32)), add_1(and_0(endLow_5, $intern_47), shl_0(and_0(endHigh_4, $intern_47), 32)), network_6, crypto_7, monitor_8);
}

function $lambda$69_2(this$static, network_1, v_1){
  return $thenCompose($withWriter(v_1, $owner(this$static), this$static.pointer.capability.writer, network_1), makeLambdaFunction(FileWrapper$lambda$3$Type.prototype.apply_0, FileWrapper$lambda$3$Type, [this$static, network_1]));
}

function $lambda$7_11(this$static, parentPath_0){
  return parentPath_0 + '/' + this$static.props.name;
}

function $lambda$71_1(this$static, network_1, mirrorBat_2, txns_3, resumeFile_4, commitWatcher_5, crypto_6, mirror_7, directories_8, path_8){
  return $applyComplexUpdate(network_1.synchronizer, $owner(this$static), $signingPair(this$static), new FileWrapper$lambda$72$Type(this$static, network_1, path_8, mirrorBat_2, txns_3, resumeFile_4, commitWatcher_5, crypto_6, mirror_7, directories_8), commitWatcher_5);
}

function $lambda$72_3(this$static, network_1, path_2, mirrorBat_3, txns_4, resumeFile_5, commitWatcher_6, crypto_7, mirror_8, directories_9, s_9, c_10){
  return $thenApply($thenCompose($thenCompose($withWriter(s_9, $owner(this$static), this$static.pointer.capability.writer, network_1), makeLambdaFunction(FileWrapper$lambda$3$Type.prototype.apply_0, FileWrapper$lambda$3$Type, [this$static, network_1])), makeLambdaFunction(FileWrapper$lambda$73$Type.prototype.apply_0, FileWrapper$lambda$73$Type, [network_1, path_2, mirrorBat_3, txns_4, resumeFile_5, commitWatcher_6, crypto_7, c_10, mirror_8, directories_9])), makeLambdaFunction(FileWrapper$lambda$78$Type.prototype.apply_0, FileWrapper$lambda$78$Type, []));
}

function $lambda$79_1(this$static, network_1, finished_1){
  return $thenCompose($withWriter(finished_1, $owner(this$static), this$static.pointer.capability.writer, network_1), makeLambdaFunction(FileWrapper$lambda$3$Type.prototype.apply_0, FileWrapper$lambda$3$Type, [this$static, network_1]));
}

function $lambda$9_15(this$static, crypto_1, reader_1){
  return $hashFromStream(crypto_1.hasher, reader_1, ($ensureUnmodified(this$static) , this$static.props).size_0);
}

function $mkdir(this$static, newFolderName, requestedBaseReadKey, requestedBaseWriteKey, desiredMapKey, desiredBat, isSystemFolder, mirrorBat, network, crypto_0, version, committer){
  var fullVersion, isNull;
  isNull = !this$static.pointer;
  if (!(isNull || this$static.pointer.fileAccess.isDirectory_0)) {
    return errored(new IllegalStateException_0('Cannot mkdir in a file!'));
  }
  if (!(newFolderName.indexOf('/') == -1 && !$equals_0(newFolderName, '.') && !$equals_0(newFolderName, '..') && newFolderName.length != 0)) {
    return errored(new IllegalStateException_0('Illegal directory name: ' + newFolderName));
  }
  fullVersion = $mergeAndOverwriteWith(this$static.version, version);
  return $thenCompose(($ensureUnmodified(this$static) , $thenApply($getChild_3(this$static, fullVersion, newFolderName, network), makeLambdaFunction(FileWrapper$1methodref$isPresent$Type.prototype.apply_0, FileWrapper$1methodref$isPresent$Type, []))), makeLambdaFunction(FileWrapper$lambda$186$Type.prototype.apply_0, FileWrapper$lambda$186$Type, [this$static, newFolderName, fullVersion, committer, network, requestedBaseReadKey, requestedBaseWriteKey, desiredMapKey, desiredBat, isSystemFolder, mirrorBat, crypto_0]));
}

function $mkdir_0(this$static, newFolderName, network, requestedBaseSymmetricKey, desiredBat, isSystemFolder, mirrorBat, crypto_0){
  return $thenCompose($applyComplexUpdate(network.synchronizer, $owner(this$static), $signingPair(this$static), new FileWrapper$lambda$183$Type(this$static, newFolderName, requestedBaseSymmetricKey, desiredBat, isSystemFolder, mirrorBat, network, crypto_0), new WriteSynchronizer$lambda$23$Type), makeLambdaFunction(FileWrapper$lambda$185$Type.prototype.apply_0, FileWrapper$lambda$185$Type, [this$static, network]));
}

function $mkdir_1(this$static, newFolderName, network, isSystemFolder, mirrorBat, crypto_0){
  return $mkdir_0(this$static, newFolderName, network, null, ($clinit_Optional() , $clinit_Optional() , EMPTY), isSystemFolder, $or($mirrorBatId(this$static.pointer.fileAccess), new FileWrapper$lambda$182$Type(mirrorBat)), crypto_0);
}

function $overwriteFile(this$static, fileData, newSize, network, crypto_0, monitor){
  return $thenCompose($applyComplexUpdate(network.synchronizer, $owner(this$static), $signingPair(this$static), new FileWrapper$lambda$66$Type(this$static, fileData, newSize, network, crypto_0, monitor), new WriteSynchronizer$lambda$23$Type), makeLambdaFunction(FileWrapper$lambda$67$Type.prototype.apply_0, FileWrapper$lambda$67$Type, [this$static, network]));
}

function $overwriteFile_0(this$static, fileData, newSize, network, crypto_0, monitor, s, committer){
  var size_0;
  size_0 = ($ensureUnmodified(this$static) , this$static.props).size_0;
  return $thenCompose($thenCompose($clean(this$static, s, committer, network, crypto_0), makeLambdaFunction(FileWrapper$lambda$63$Type.prototype.apply_0, FileWrapper$lambda$63$Type, [committer, fileData, newSize, network, crypto_0, monitor])), makeLambdaFunction(FileWrapper$lambda$64$Type.prototype.apply_0, FileWrapper$lambda$64$Type, [this$static, committer, newSize, network, crypto_0, size_0]));
}

function $overwriteSection(this$static, current, committer, fileData, inputStartIndex, endIndex, network, crypto_0, monitor){
  var filename, legacyLocs, ourCap, parentBat, parentLocation, parentParentKey, props;
  if (!this$static.isWritable_0)
    return errored(new IllegalStateException_0('Unable to modify file without write access!'));
  $ensureUnmodified(this$static);
  if ($isDirty(this$static.pointer.fileAccess, this$static.pointer.capability.rBaseKey))
    return errored(new IllegalStateException_0('File needs cleaning before modification.'));
  props = ($ensureUnmodified(this$static) , this$static.props);
  filename = props.name;
  $info(LOG_7, 'Overwriting section [' + toPowerOfTwoUnsignedString(inputStartIndex) + ', ' + toPowerOfTwoUnsignedString(endIndex) + '] of: ' + filename);
  legacyLocs = new FileWrapper$lambda$109$Type(this$static, crypto_0);
  parentParentKey = $getParentParentKey(this$static.pointer);
  parentLocation = $getLocation_1($getParentCap(this$static.pointer), $owner(this$static), this$static.pointer.capability.writer);
  parentBat = $getParentCap(this$static.pointer).bat;
  ourCap = $writableFilePointer(this$static);
  return $thenCompose($withWriter(current, $owner(this$static), this$static.pointer.capability.writer, network), makeLambdaFunction(FileWrapper$lambda$110$Type.prototype.apply_0, FileWrapper$lambda$110$Type, [this$static, ourCap, props, crypto_0, network, endIndex, committer, parentLocation, parentBat, parentParentKey, monitor, fileData, legacyLocs, inputStartIndex]));
}

function $owner(this$static){
  var e;
  try {
    return this$static.pointer.capability.owner;
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 51)) {
      e = $e0;
      ($clinit_System() , out_0).println();
      throw toJs(e);
    }
     else 
      throw toJs($e0);
  }
}

function $recalculateThumbnail(this$static, snapshot, committer, filename, fileData, isHidden, fileSize, createdDateTime, network, fileWriteCap, streamSecret){
  return $thenCompose(fileData.reset(), makeLambdaFunction(FileWrapper$lambda$164$Type.prototype.apply_0, FileWrapper$lambda$164$Type, [this$static, snapshot, committer, fileWriteCap, filename, network, isHidden, fileSize, createdDateTime, streamSecret, fileData]));
}

function $remove_16(this$static, parent_0, ourPath, userContext){
  var hasher, network, writableParent;
  network = userContext.network;
  hasher = userContext.crypto.hasher;
  $ensureUnmodified(this$static);
  if (this$static.pointer.capability.wBaseKey.ref == null)
    return errored(new IllegalStateException_0('Cannot delete file without write access to it'));
  writableParent = parent_0.isWritable_0;
  $setModified(parent_0);
  network.disableCommits();
  return $thenCompose($applyComplexUpdate(network.synchronizer, $owner(this$static), $signingPair(this$static), new FileWrapper$lambda$273$Type(this$static, parent_0, network, userContext, hasher, writableParent, ourPath), new WriteSynchronizer$lambda$23$Type), makeLambdaFunction(FileWrapper$lambda$278$Type.prototype.apply_0, FileWrapper$lambda$278$Type, [parent_0, network]));
}

function $removeChild_0(this$static, version, committer, child, network, random, hasher){
  return $removeChildren(this$static.pointer.fileAccess, version, committer, new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_user_fs_AbsoluteCapability_2_classLit, 1), $intern_0, 71, 0, [child.pointer.capability])), $writableFilePointer(this$static), this$static.entryWriter, network, random, hasher);
}

function $resumeUpload(this$static, txn, data_0, monitor, s, c, network, crypto_0){
  var fromParent, props;
  fromParent = $relativise($writableFilePointer(this$static), new WritableAbsoluteCapability(txn.owner, txn.writer.publicKeyHash, $getMapKey_0(txn.firstChunk), txn.firstBat, txn.baseKey, txn.writeKey));
  props = txn.props;
  return $thenApply($thenCompose($findFirstAbsentChunkIndex(this$static, 0, txn.streamSecret, txn.firstChunk, s, network, crypto_0), makeLambdaFunction(FileWrapper$lambda$53$Type.prototype.apply_0, FileWrapper$lambda$53$Type, [this$static, monitor, txn, data_0, props, s, c, network, crypto_0])), makeLambdaFunction(FileWrapper$lambda$54$Type.prototype.apply_0, FileWrapper$lambda$54$Type, [txn, fromParent]));
}

function $retrieveParent(this$static, network){
  $ensureUnmodified(this$static);
  return retrieveParent(castTo($orElse(this$static.linkPointer, this$static.pointer), 83), this$static.ownername, this$static.version, network);
}

function $setModified(this$static){
  if (this$static.modified.value_0)
    throw toJs(new IllegalStateException_0('This file has already been modified, use the returned instance'));
  $set_3(this$static.modified, true);
}

function $setProperties(this$static, updatedProperties, hasher, network, parent_0){
  var newName;
  $setModified(this$static);
  newName = updatedProperties.name;
  if (!(newName.indexOf('/') == -1 && !$equals_0(newName, '.') && !$equals_0(newName, '..') && newName.length != 0)) {
    return errored(new IllegalArgumentException_0('Illegal file name: ' + newName));
  }
  return $thenApply($applyComplexUpdate(network.synchronizer, $owner(this$static), $signingPair(this$static), new FileWrapper$lambda$204$Type(this$static, parent_0, newName, hasher, network, updatedProperties), new WriteSynchronizer$lambda$23$Type), makeLambdaFunction(FileWrapper$lambda$210$Type.prototype.apply_0, FileWrapper$lambda$210$Type, []));
}

function $signingPair(this$static){
  if (!this$static.isWritable_0)
    throw toJs(new IllegalStateException_0('File is not writable!'));
  return castTo($orElseGet($map(this$static.pointer.capability.wBaseKey, makeLambdaFunction(FileWrapper$lambda$211$Type.prototype.apply_0, FileWrapper$lambda$211$Type, [this$static])), new FileWrapper$8methodref$get$Type(this$static.entryWriter)), 105);
}

function $truncate(this$static, newSize, network, crypto_0){
  if (lte(($ensureUnmodified(this$static) , this$static.props).size_0, newSize))
    return new CompletableFuture_0(this$static);
  return $thenCompose($applyComplexUpdate(network.synchronizer, $owner(this$static), $signingPair(this$static), new FileWrapper$lambda$34$Type(this$static, newSize, network, crypto_0), new WriteSynchronizer$lambda$23$Type), makeLambdaFunction(FileWrapper$lambda$35$Type.prototype.apply_0, FileWrapper$lambda$35$Type, [this$static, network]));
}

function $truncate_0(this$static, initialVersion, committer, newSize, network, crypto_0){
  var isNull, props;
  isNull = !this$static.pointer;
  if (isNull || this$static.pointer.fileAccess.isDirectory_0)
    return errored(new IllegalStateException_0('You cannot truncate a directory!'));
  props = ($ensureUnmodified(this$static) , this$static.props);
  if (lte(props.size_0, newSize))
    return new CompletableFuture_0(initialVersion);
  return $thenCompose($withWriter(initialVersion, $owner(this$static), this$static.pointer.capability.writer, network), makeLambdaFunction(FileWrapper$lambda$36$Type.prototype.apply_0, FileWrapper$lambda$36$Type, [this$static, props, crypto_0, network, committer, newSize]));
}

function $updateChildLinks(this$static, version, committer, childCases, network, random, hasher){
  return $updateChildLinks_0(this$static.pointer.fileAccess, version, committer, castTo(this$static.pointer.capability, 74), $signingPair(this$static), childCases, network, random, hasher);
}

function $updateExistingChild(current, committer, existingChild, fileData, inputStartIndex, endIndex, network, crypto_0, monitor){
  var existingProps, filename;
  existingProps = ($ensureUnmodified(existingChild) , existingChild.props);
  filename = existingProps.name;
  $info(LOG_7, 'Overwriting section [' + toPowerOfTwoUnsignedString(inputStartIndex) + ', ' + toPowerOfTwoUnsignedString(endIndex) + '] of child with name: ' + filename);
  return $thenCompose($withWriter(current, $owner(existingChild), existingChild.pointer.capability.writer, network), makeLambdaFunction(FileWrapper$lambda$180$Type.prototype.apply_0, FileWrapper$lambda$180$Type, [committer, fileData, inputStartIndex, endIndex, network, crypto_0, monitor, existingChild]));
}

function $updateProperties(this$static, base, committer, newProps, network){
  return $updateProperties_0(this$static.pointer.fileAccess, base, committer, $writableFilePointer(this$static), $map(this$static.pointer.capability.wBaseKey, makeLambdaFunction(FileWrapper$lambda$17$Type.prototype.apply_0, FileWrapper$lambda$17$Type, [this$static])), newProps, network);
}

function $updateSize(this$static, committer, newSize, network){
  var newProps;
  newProps = $withSize(($ensureUnmodified(this$static) , this$static.props), newSize);
  return $updateProperties(this$static, this$static.version, committer, newProps, network);
}

function $uploadAndReturnFile(this$static, filename, fileData, length_0, isHidden, mirrorBat, network, crypto_0){
  return $uploadAndReturnFile_0(this$static, filename, fileData, length_0, isHidden, makeLambdaFunction(FileWrapper$lambda$60$Type.prototype.accept_5, FileWrapper$lambda$60$Type, []), mirrorBat, network, crypto_0);
}

function $uploadAndReturnFile_0(this$static, filename, fileData, length_0, isHidden, progressMonitor, mirrorBat, network, crypto_0){
  return $thenCompose($uploadFileSection(this$static, filename, fileData, isHidden, 0, length_0, ($clinit_Optional() , $clinit_Optional() , EMPTY), true, network, crypto_0, progressMonitor, $randomBytes(crypto_0.random, 32), (null , EMPTY), new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(crypto_0.random, 32))))), mirrorBat), makeLambdaFunction(FileWrapper$lambda$61$Type.prototype.apply_0, FileWrapper$lambda$61$Type, [length_0, network, crypto_0, filename]));
}

function $uploadFileSection(this$static, filename, fileData, isHidden, startIndex, endIndex, baseKey, overwriteExisting, network, crypto_0, monitor, firstChunkMapKey, streamSecret, firstBat, mirrorBat){
  if (this$static.isWritable_0)
    return $thenCompose($applyComplexUpdate(network.synchronizer, $owner(this$static), $signingPair(this$static), new FileWrapper$lambda$128$Type(this$static, filename, fileData, isHidden, startIndex, endIndex, baseKey, overwriteExisting, network, crypto_0, monitor, firstChunkMapKey, streamSecret, firstBat, mirrorBat), new WriteSynchronizer$lambda$23$Type), makeLambdaFunction(FileWrapper$lambda$129$Type.prototype.apply_0, FileWrapper$lambda$129$Type, [this$static, network]));
  if (!overwriteExisting)
    return errored(new IllegalStateException_0('Cannot upload a file to a directory without write access!'));
  return $thenCompose($getChild_3(this$static, this$static.version, filename, network), makeLambdaFunction(FileWrapper$lambda$130$Type.prototype.apply_0, FileWrapper$lambda$130$Type, [this$static, filename, network, fileData, startIndex, endIndex, crypto_0, monitor]));
}

function $uploadFileSection_0(this$static, initialVersion, committer, filename, fileData, existingThumbnail, isHidden, startIndex, endIndex, requestedBaseKey, requestedDataKey, requestedWriteKey, skipExisting, overwriteExisting, truncateExisting, network, crypto_0, monitor, firstChunkMapKey, streamSecret, firstBat, requestedMirrorBat){
  var isNull, mirrorBat;
  if (!(filename.indexOf('/') == -1 && !$equals_0(filename, '.') && !$equals_0(filename, '..') && filename.length != 0)) {
    return errored(new IllegalStateException_0('Illegal filename: ' + filename));
  }
  isNull = !this$static.pointer;
  if (!(isNull || this$static.pointer.fileAccess.isDirectory_0)) {
    return errored(new IllegalStateException_0('Cannot upload a sub file to a file!'));
  }
  mirrorBat = $or($mirrorBatId(this$static.pointer.fileAccess), new FileWrapper$lambda$137$Type(requestedMirrorBat));
  return $thenCompose($withWriter(initialVersion, $owner(this$static), this$static.pointer.capability.writer, network), makeLambdaFunction(FileWrapper$lambda$138$Type.prototype.apply_0, FileWrapper$lambda$138$Type, [this$static, committer, filename, isHidden, network, endIndex, fileData, startIndex, crypto_0, monitor, streamSecret, existingThumbnail, firstChunkMapKey, firstBat, mirrorBat, skipExisting, overwriteExisting, truncateExisting, requestedWriteKey, requestedBaseKey, requestedDataKey]));
}

function $uploadFileSection_1(this$static, initialVersion, committer, filename, fileData, isHidden, startIndex, endIndex, baseKey, overwriteExisting, truncateExisting, network, crypto_0, monitor, firstChunkMapKey, streamSecret, firstBat, requestedMirrorBat){
  return $thenCompose($uploadFileSection_0(this$static, initialVersion, committer, filename, fileData, ($clinit_Optional() , $clinit_Optional() , EMPTY), isHidden, startIndex, endIndex, baseKey, (null , EMPTY), (null , EMPTY), false, overwriteExisting, truncateExisting, network, crypto_0, monitor, firstChunkMapKey, streamSecret, firstBat, requestedMirrorBat), makeLambdaFunction(FileWrapper$lambda$135$Type.prototype.apply_0, FileWrapper$lambda$135$Type, [this$static, committer, network, crypto_0]));
}

function $uploadOrReplaceFile(this$static, filename, fileData, length_0, network, crypto_0, monitor){
  return $uploadOrReplaceFile_0(this$static, filename, fileData, length_0, network, crypto_0, monitor, $randomBytes(crypto_0.random, 32), ($clinit_Optional() , new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(crypto_0.random, 32)))))), $mirrorBatId(this$static.pointer.fileAccess));
}

function $uploadOrReplaceFile_0(this$static, filename, fileData, length_0, network, crypto_0, monitor, firstChunkMapKey, firstChunkBat, mirrorBat){
  return $thenCompose($uploadFileSection(this$static, filename, fileData, false, 0, length_0, ($clinit_Optional() , $clinit_Optional() , EMPTY), true, network, crypto_0, monitor, firstChunkMapKey, (null , EMPTY), firstChunkBat, mirrorBat), makeLambdaFunction(FileWrapper$lambda$57$Type.prototype.apply_0, FileWrapper$lambda$57$Type, [length_0, network, crypto_0, filename]));
}

function $uploadOrReplaceFile_1(this$static, filename, fileData, length_0, isHidden, s, c, network, crypto_0, monitor, firstChunkMapKey, firstChunkBat, mirrorBat){
  return $uploadFileSection_1(this$static, s, c, filename, fileData, isHidden, 0, length_0, ($clinit_Optional() , $clinit_Optional() , EMPTY), true, true, network, crypto_0, monitor, firstChunkMapKey, (null , EMPTY), firstChunkBat, mirrorBat);
}

function $uploadSubtree(this$static, directories_0, mirrorBat, network, crypto_0, txns, resumeFile, commitWatcher){
  var mirror;
  mirror = $or($mirrorBatId(this$static.pointer.fileAccess), new FileWrapper$lambda$70$Type(mirrorBat));
  return $thenCompose($thenCompose($thenCompose(($ensureUnmodified(this$static) , retrieveParent(castTo($orElse(this$static.linkPointer, this$static.pointer), 83), this$static.ownername, this$static.version, network)), makeLambdaFunction(FileWrapper$lambda$6$Type.prototype.apply_0, FileWrapper$lambda$6$Type, [this$static, network])), makeLambdaFunction(FileWrapper$lambda$71$Type.prototype.apply_0, FileWrapper$lambda$71$Type, [this$static, network, mirrorBat, txns, resumeFile, commitWatcher, crypto_0, mirror, directories_0])), makeLambdaFunction(FileWrapper$lambda$79$Type.prototype.apply_0, FileWrapper$lambda$79$Type, [this$static, network]));
}

function $withTrieNode(this$static, trie){
  return new FileWrapper(($clinit_Optional() , new Optional(checkCriticalNotNull(trie))), this$static.pointer, this$static.linkPointer, this$static.entryWriter, this$static.ownername, this$static.version);
}

function $withTrieNodeOpt(this$static, trie){
  return new FileWrapper(trie, this$static.pointer, this$static.linkPointer, this$static.entryWriter, this$static.ownername, this$static.version);
}

function $withVersion_0(this$static, version){
  return new FileWrapper(this$static.capTrie, this$static.pointer, this$static.linkPointer, this$static.entryWriter, this$static.ownername, version);
}

function $writableFilePointer(this$static){
  if (!this$static.isWritable_0)
    throw toJs(new IllegalStateException_0('File is not writable!'));
  return castTo(this$static.pointer.capability, 74);
}

function FileWrapper(capTrie, pointer, linkPointer, entryWriter, ownername, version){
  $clinit_FileWrapper();
  var directProps, link_0, linkProps, parentKey;
  this.modified = new AtomicBoolean;
  this.capTrie = capTrie;
  this.pointer = pointer;
  this.linkPointer = linkPointer;
  this.entryWriter = entryWriter;
  this.ownername = ownername;
  this.version = version;
  this.isWritable_0 = !!pointer && instanceOf(pointer.capability, 74) || $booleanValue(castToBoolean($orElse($map(entryWriter, makeLambdaFunction(FileWrapper$lambda$0$Type.prototype.apply_0, FileWrapper$lambda$0$Type, [pointer])), ($clinit_Boolean() , false))));
  if (!pointer)
    this.props = new FileProperties_0('/', true, false, '', 0, ($clinit_LocalDateTime() , MIN_0), MIN_0, false, ($clinit_Optional() , $clinit_Optional() , EMPTY), (null , EMPTY));
  else {
    parentKey = $getParentKey(this.pointer);
    directProps = $getParentBlock(pointer.fileAccess, parentKey).properties;
    if (linkPointer.ref != null) {
      link_0 = (checkCriticalElement(linkPointer.ref != null) , castTo(linkPointer.ref, 83));
      linkProps = $getParentBlock(link_0.fileAccess, getParentKey(link_0.fileAccess, link_0.capability.rBaseKey)).properties;
      this.props = new FileProperties_0(linkProps.name, directProps.isDirectory, false, directProps.mimeType, directProps.size_0, directProps.modified, directProps.created, directProps.isHidden, directProps.thumbnail, directProps.streamSecret);
    }
     else {
      this.props = directProps;
    }
  }
  if (!!pointer && !$contains_5(version, pointer.capability.writer))
    throw toJs(new IllegalStateException_0("File version doesn't include its own writer!"));
  if (this.isWritable_0 && !$equals_13($signingPair(this).publicKeyHash, pointer.capability.writer))
    throw toJs(new IllegalStateException_0("Invalid FileWrapper! public writing keys don't match!"));
}

function FileWrapper_0(pointer, linkPointer, entryWriter, ownername, version){
  $clinit_FileWrapper();
  FileWrapper.call(this, ($clinit_Optional() , $clinit_Optional() , EMPTY), pointer, linkPointer, entryWriter, ownername, version);
}

function atomicallyClearTransactionsAndAddToParent(toClose, childLinks, parent_0, transactions, in_0, c, commitWatcher, network, crypto_0){
  if (toClose.isEmpty() && childLinks.isEmpty())
    return new CompletableFuture_0(new Pair(in_0, childLinks));
  return $thenApply($thenCompose($thenApply($thenCompose($thenCompose($thenCompose($withWriter(in_0, $owner(parent_0), parent_0.pointer.capability.writer, network), makeLambdaFunction(FileWrapper$lambda$3$Type.prototype.apply_0, FileWrapper$lambda$3$Type, [parent_0, network])), makeLambdaFunction(FileWrapper$lambda$101$Type.prototype.apply_0, FileWrapper$lambda$101$Type, [in_0, c, childLinks, network, crypto_0])), makeLambdaFunction(FileWrapper$lambda$102$Type.prototype.apply_0, FileWrapper$lambda$102$Type, [transactions, c, toClose])), makeLambdaFunction(FileWrapper$lambda$105$Type.prototype.apply_0, FileWrapper$lambda$105$Type, [network])), makeLambdaFunction(FileWrapper$lambda$106$Type.prototype.apply_0, FileWrapper$lambda$106$Type, [network, parent_0, commitWatcher])), makeLambdaFunction(FileWrapper$lambda$108$Type.prototype.apply_0, FileWrapper$lambda$108$Type, []));
}

function calculateMimeType(data_0, fileSize, filename){
  var header;
  header = initUnidimensionalArray(B_classLit, $intern_28, 8, toInt_0(compare_1(fileSize, 40) < 0?fileSize:40), 15, 1);
  return $thenApply(data_0.readIntoArray(header, 0, header.length), makeLambdaFunction(FileWrapper$lambda$295$Type.prototype.apply_0, FileWrapper$lambda$295$Type, [header, filename]));
}

function convertFromBase64(base64Url){
  $clinit_FileWrapper();
  var base64data, data_0;
  base64data = $substring(base64Url, base64Url.indexOf(',') + 1);
  data_0 = ($clinit_Base64Coder() , decode($toCharArray(base64data)));
  if (data_0.length == 0)
    return $clinit_Optional() , $clinit_Optional() , EMPTY;
  if ($equals_0(base64Url.substr(0, 23), 'data:image/jpeg;base64,'))
    return $clinit_Optional() , new Optional(checkCriticalNotNull(new Thumbnail('image/jpeg', data_0)));
  if ($equals_0(base64Url.substr(0, 23), 'data:image/webp;base64,'))
    return $clinit_Optional() , new Optional(checkCriticalNotNull(new Thumbnail('image/webp', data_0)));
  throw toJs(new IllegalStateException_0('Unknown image type for generated thumbnail!'));
}

function createRoot(root){
  $clinit_FileWrapper();
  return new FileWrapper(($clinit_Optional() , new Optional(checkCriticalNotNull(root))), null, (null , EMPTY), (null , EMPTY), null, new Snapshot(new HashMap));
}

function deleteAllChunks(currentCap, signer, tid, hasher, network, version, committer){
  $clinit_FileWrapper();
  return $thenCompose($withWriter(version, currentCap.owner, currentCap.writer, network), makeLambdaFunction(FileWrapper$lambda$250$Type.prototype.apply_0, FileWrapper$lambda$250$Type, [currentCap, signer, tid, hasher, network, committer]));
}

function deleteChildren(parent_0, childrenToDelete, parentPath, context){
  $clinit_FileWrapper();
  var hasher, network, owner;
  network = context.network;
  hasher = context.crypto.hasher;
  $ensureUnmodified(parent_0);
  if (parent_0.pointer.capability.wBaseKey.ref == null)
    return errored(new IllegalStateException_0('Cannot delete file without write access to it'));
  $setModified(parent_0);
  network.disableCommits();
  owner = $owner(parent_0);
  return $thenCompose($applyComplexUpdate(network.synchronizer, owner, $signingPair(parent_0), new FileWrapper$lambda$264$Type(parent_0, childrenToDelete, network, context, hasher, owner, parentPath), new WriteSynchronizer$lambda$23$Type), makeLambdaFunction(FileWrapper$lambda$270$Type.prototype.apply_0, FileWrapper$lambda$270$Type, [parent_0, network]));
}

function deleteFileChunks(streamSecret, nChunks, startCap, ourSigner, tid, hasher, network, current, c){
  return $thenCompose(getAllChunkLocations(copyOf(startCap.mapKey, startCap.mapKey.length), streamSecret, nChunks, hasher), makeLambdaFunction(FileWrapper$lambda$259$Type.prototype.apply_0, FileWrapper$lambda$259$Type, [network, current, c, startCap, ourSigner, tid]));
}

function getAllChunkLocations(first, streamSecret, nChunks, h){
  var res;
  res = new ArrayList_0(nChunks);
  res.array[res.array.length] = first;
  return reduceAll_0(range_0(1, nChunks).mapToObj(new FileWrapper$lambda$260$Type), res, new FileWrapper$lambda$261$Type(streamSecret, h), new FileWrapper$lambda$262$Type);
}

function getFiles_0(owner, caps, entryWriter, ownername, network, version){
  var childWriters;
  childWriters = castTo($collect_0($map_0(caps.stream(), makeLambdaFunction(FileWrapper$lambda$20$Type.prototype.apply_0, FileWrapper$lambda$20$Type, [])), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47);
  return $thenCompose(reduceAll(childWriters, version, new Snapshot$lambda$1$Type(owner, network), new Snapshot$lambda$2$Type), makeLambdaFunction(FileWrapper$lambda$21$Type.prototype.apply_0, FileWrapper$lambda$21$Type, [entryWriter, ownername, owner, network, version, caps]));
}

function getNumberOfChunks(size_0){
  $clinit_FileWrapper();
  if (compare_1(size_0, 0) == 0)
    return 1;
  return toInt_0(div(sub_1(add_1(size_0, $intern_70), 1), $intern_70));
}

function lambda$0_30(pointer_0, s_1){
  $clinit_FileWrapper();
  return $clinit_Boolean() , $equals_13(s_1.publicKeyHash, pointer_0.capability.writer)?true:false;
}

function lambda$10_10(canon_0, hasher_1, network_2, child_3){
  $clinit_FileWrapper();
  var names;
  if (child_3.ref != null) {
    names = $getNameCount(canon_0);
    if (names == 1)
      return new CompletableFuture_0(child_3);
    return $getDescendentByPath_0((checkCriticalElement(child_3.ref != null) , castTo(child_3.ref, 19)), $subpath(canon_0, 1, names).pathString, (checkCriticalElement(child_3.ref != null) , castTo(child_3.ref, 19)).version, hasher_1, network_2);
  }
  return new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY));
}

function lambda$101_0(in_0, c_1, childLinks_2, network_3, crypto_4, latest_5){
  $clinit_FileWrapper();
  return $addChildPointers(latest_5, in_0, c_1, childLinks_2, network_3.disableCommits(), crypto_4);
}

function lambda$102_0(transactions_0, c_1, toClose_2, res_3){
  $clinit_FileWrapper();
  return reduceAll(toClose_2, res_3, new FileWrapper$lambda$103$Type(transactions_0, c_1), new FileWrapper$lambda$104$Type);
}

function lambda$103(transactions_0, c_1, v_2, f_3){
  $clinit_FileWrapper();
  return $thenCompose($getUpdated_0(transactions_0.transactionsDir, v_2, transactions_0.networkAccess), makeLambdaFunction(TransactionServiceImpl$lambda$8$Type.prototype.apply_0, TransactionServiceImpl$lambda$8$Type, [transactions_0, c_1, v_2, f_3]));
}

function lambda$105_0(network_0, s_1){
  $clinit_FileWrapper();
  network_0.enableCommits();
  return s_1;
}

function lambda$106_0(network_0, parent_1, commitWatcher_2, s_3){
  $clinit_FileWrapper();
  return network_0.isFull()?$thenApply(network_0.commit($owner(parent_1), commitWatcher_2), makeLambdaFunction(FileWrapper$lambda$107$Type.prototype.apply_0, FileWrapper$lambda$107$Type, [s_3])):new CompletableFuture_0(s_3);
}

function lambda$119_0(us_0, currentOriginal_1, crypto_2, props_3, legacyLocs_4){
  $clinit_FileWrapper();
  return castTo($orElseGet($map(props_3.streamSecret, makeLambdaFunction(FileWrapper$lambda$120$Type.prototype.apply_0, FileWrapper$lambda$120$Type, [us_0, currentOriginal_1, crypto_2])), new FileWrapper$lambda$122$Type(legacyLocs_4)), 6);
}

function lambda$120_0(us_0, currentOriginal_1, crypto_2, streamSecret_3){
  $clinit_FileWrapper();
  return $thenApply(calculateNextMapKey(streamSecret_3, $getMapKey_0(currentOriginal_1.location_0), currentOriginal_1.bat, crypto_2.hasher), makeLambdaFunction(FileWrapper$lambda$121$Type.prototype.apply_0, FileWrapper$lambda$121$Type, [us_0]));
}

function lambda$121_0(us_0, nextMapKeyAndBat_1){
  $clinit_FileWrapper();
  return new Pair($withMapKey_0(new Location_0(us_0.pointer.capability.owner, us_0.pointer.capability.writer, $getMapKey(us_0.pointer.capability)), castTo(nextMapKeyAndBat_1.left, 11)), castTo(nextMapKeyAndBat_1.right, 12));
}

function lambda$136(p_0, committer_1, network_2, crypto_3, latest_4){
  $clinit_FileWrapper();
  return castTo(p_0.right, 12).ref == null?new CompletableFuture_0(castTo(p_0.left, 43)):$addChildPointer(latest_4, castTo(p_0.left, 43), committer_1, castTo($get_6(castTo(p_0.right, 12)), 150), network_2, crypto_3);
}

function lambda$14_9(parentRFP_0){
  $clinit_FileWrapper();
  var parentProps;
  if (!parentRFP_0)
    return $clinit_Optional() , $clinit_Optional() , EMPTY;
  parentProps = $getParentBlock(parentRFP_0.fileAccess, getParentKey(parentRFP_0.fileAccess, parentRFP_0.capability.rBaseKey)).properties;
  if (!parentProps.isLink)
    return $clinit_Optional() , $clinit_Optional() , EMPTY;
  return $clinit_Optional() , new Optional(checkCriticalNotNull(parentRFP_0));
}

function lambda$141(committer_0, filename_1, isHidden_2, network_3, childProps_4, crypto_5, updatedChild_6, latestSnapshot_7, writeEnd_8){
  $clinit_FileWrapper();
  if (childProps_4.thumbnail.ref == null) {
    if (lte(writeEnd_8.value_0, childProps_4.size_0))
      return new CompletableFuture_0(latestSnapshot_7);
    return $updateSize(updatedChild_6, committer_0, writeEnd_8.value_0, network_3);
  }
  return $thenCompose($getInputStream_2(updatedChild_6, $get_32(latestSnapshot_7, updatedChild_6.pointer.capability.writer).props, network_3, crypto_5, makeLambdaFunction(FileWrapper$lambda$142$Type.prototype.accept_5, FileWrapper$lambda$142$Type, [])), makeLambdaFunction(FileWrapper$lambda$143$Type.prototype.apply_0, FileWrapper$lambda$143$Type, [updatedChild_6, latestSnapshot_7, committer_0, filename_1, isHidden_2, network_3]));
}

function lambda$143(updatedChild_0, latestSnapshot_1, committer_2, filename_3, isHidden_4, network_5, is_6){
  $clinit_FileWrapper();
  return $recalculateThumbnail(updatedChild_0, latestSnapshot_1, committer_2, filename_3, is_6, isHidden_4, ($ensureUnmodified(updatedChild_0) , updatedChild_0.props).size_0, updatedChild_0.props.created, network_5, castTo(updatedChild_0.pointer.capability, 74), ($ensureUnmodified(updatedChild_0) , updatedChild_0.props).streamSecret);
}

function lambda$145(updatePropsIfNecessary_0, endIndex_1, updatedSnapshot_3, committer_4, fileData_5, startIndex_6, network_8, crypto_9, monitor_10, child_11){
  $clinit_FileWrapper();
  return $thenCompose($thenCompose($withWriter(updatedSnapshot_3, $owner(child_11), child_11.pointer.capability.writer, network_8), makeLambdaFunction(FileWrapper$lambda$3$Type.prototype.apply_0, FileWrapper$lambda$3$Type, [child_11, network_8])), makeLambdaFunction(FileWrapper$lambda$146$Type.prototype.apply_0, FileWrapper$lambda$146$Type, [updatePropsIfNecessary_0, endIndex_1, updatedSnapshot_3, committer_4, fileData_5, startIndex_6, network_8, crypto_9, monitor_10]));
}

function lambda$146(updatePropsIfNecessary_0, endIndex_1, updatedSnapshot_4, committer_5, fileData_6, startIndex_7, network_9, crypto_10, monitor_11, updatedChild_10){
  $clinit_FileWrapper();
  return $thenCompose($updateExistingChild(updatedSnapshot_4, committer_5, updatedChild_10, fileData_6, startIndex_7, endIndex_1, network_9, crypto_10, monitor_11), makeLambdaFunction(FileWrapper$lambda$147$Type.prototype.apply_0, FileWrapper$lambda$147$Type, [updatePropsIfNecessary_0, updatedChild_10, endIndex_1]));
}

function lambda$147_0(updatePropsIfNecessary_0, updatedChild_1, endIndex_2, latestSnapshot_3){
  $clinit_FileWrapper();
  return $apply_11(updatePropsIfNecessary_0, updatedChild_1, latestSnapshot_3, valueOf_2(endIndex_2));
}

function lambda$149_0(monitor_0, s_1){
  $clinit_FileWrapper();
  monitor_0(valueOf_2(20480));
  return new Pair(s_1, ($clinit_Optional() , $clinit_Optional() , EMPTY));
}

function lambda$15_5(ownerName_0, version_1, network_2, parentRFP_3){
  $clinit_FileWrapper();
  var parentProps;
  if (!parentRFP_3)
    return new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY));
  parentProps = $getParentBlock(parentRFP_3.fileAccess, getParentKey(parentRFP_3.fileAccess, parentRFP_3.capability.rBaseKey)).properties;
  if (!parentProps.isLink)
    return $thenApply($withWriter(version_1, parentRFP_3.capability.owner, parentRFP_3.capability.writer, network_2), makeLambdaFunction(FileWrapper$lambda$16$Type.prototype.apply_0, FileWrapper$lambda$16$Type, [parentRFP_3, ownerName_0]));
  return retrieveParent(parentRFP_3, ownerName_0, version_1, network_2);
}

function lambda$16_8(parentRFP_0, ownerName_1, fullVersion_2){
  $clinit_FileWrapper();
  return $clinit_Optional() , new Optional(checkCriticalNotNull(new FileWrapper_0(parentRFP_0, (null , EMPTY), (null , EMPTY), ownerName_1, fullVersion_2)));
}

function lambda$170(monitor_0, s_1){
  $clinit_FileWrapper();
  monitor_0(valueOf_2(20480));
  return s_1;
}

function lambda$174(child_0, crypto_1, secret_2){
  $clinit_FileWrapper();
  return $thenApply(calculateMapKey(secret_2, $getMapKey_0($getLocation_0((checkCriticalElement(child_0.ref != null) , castTo(child_0.ref, 19)))), (checkCriticalElement(child_0.ref != null) , castTo(child_0.ref, 19)).pointer.capability.bat, $getFileProperties((checkCriticalElement(child_0.ref != null) , castTo(child_0.ref, 19))).size_0, crypto_1.hasher), makeLambdaFunction(FileWrapper$lambda$175$Type.prototype.apply_0, FileWrapper$lambda$175$Type, [secret_2]));
}

function lambda$175(secret_0, p_1){
  $clinit_FileWrapper();
  return new Triple(castTo(p_1.left, 11), castTo(p_1.right, 12), ($clinit_Optional() , new Optional(checkCriticalNotNull(secret_0))));
}

function lambda$176(crypto_0){
  $clinit_FileWrapper();
  return new CompletableFuture_0(new Triple($randomBytes(crypto_0.random, 32), ($clinit_Optional() , new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(crypto_0.random, 32)))))), (null , EMPTY)));
}

function lambda$180(committer_0, fileData_1, inputStartIndex_2, endIndex_4, network_6, crypto_7, monitor_8, existingChild_9, state_8){
  $clinit_FileWrapper();
  return $thenCompose($clean(existingChild_9, state_8, committer_0, network_6, crypto_7), makeLambdaFunction(FileWrapper$lambda$181$Type.prototype.apply_0, FileWrapper$lambda$181$Type, [committer_0, fileData_1, inputStartIndex_2, endIndex_4, network_6, crypto_7, monitor_8]));
}

function lambda$181(committer_0, fileData_1, inputStartIndex_2, endIndex_4, network_6, crypto_7, monitor_8, pair_7){
  $clinit_FileWrapper();
  return $overwriteSection(castTo(pair_7.left, 19), castTo(pair_7.right, 43), committer_0, fileData_1, inputStartIndex_2, endIndex_4, network_6, crypto_7, monitor_8);
}

function lambda$191(isSystemFolder_0, mirrorBat_1, network_2, crypto_3, committer_4, p_5, name_6){
  $clinit_FileWrapper();
  return $getOrMkdir_0(castTo(p_5.right, 19), name_6, ($clinit_Optional() , $clinit_Optional() , EMPTY), (null , EMPTY), (null , EMPTY), (null , EMPTY), isSystemFolder_0, $or($mirrorBatId(castTo(p_5.right, 19).pointer.fileAccess), new FileWrapper$lambda$193$Type(mirrorBat_1)), network_2, crypto_3, castTo(p_5.left, 43), committer_4);
}

function lambda$196_0(newFolderName_0, crypto_1, network_2, us_3){
  $clinit_FileWrapper();
  return $getChild_2(us_3, newFolderName_0, network_2);
}

function lambda$197(x_0, child_1){
  $clinit_FileWrapper();
  return new Pair(x_0, (checkCriticalElement(child_1.ref != null) , castTo(child_1.ref, 19)));
}

function lambda$200(parent_0, committer_1, us_2, newFilename_3, userContext_4, updated_5){
  $clinit_FileWrapper();
  return $updateChildLinks(parent_0, updated_5, committer_1, new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_util_Pair_2_classLit, 1), $intern_0, 20, 0, [new Pair(us_2, new NamedAbsoluteCapability(newFilename_3, us_2))])), userContext_4.network, userContext_4.crypto.random, userContext_4.crypto.hasher);
}

function lambda$201(userContext_0, ourPath_1, newFilename_2, committer_3, v_4){
  $clinit_FileWrapper();
  return userContext_0.username == null?new CompletableFuture_0(v_4):$rename(userContext_0.sharedWithCache, ourPath_1, $resolve($getParent(ourPath_1), newFilename_2), v_4, committer_3, userContext_0.network);
}

function lambda$202(parent_0, userContext_1, newVersion_2){
  $clinit_FileWrapper();
  return $getUpdated_0(parent_0, newVersion_2, userContext_1.network);
}

function lambda$205(parent_0, newName_1, network_3, withParent_4){
  $clinit_FileWrapper();
  return $hasChildWithName((checkCriticalElement(parent_0.ref != null) , castTo(parent_0.ref, 19)), withParent_4, newName_1, network_3);
}

function lambda$21_6(entryWriter_0, ownername_1, owner_2, network_3, version_4, caps_5, fullVersion_6){
  $clinit_FileWrapper();
  return $thenCompose($retrieveAllMetadata(network_3, castTo($collect_0($map_0(caps_5.stream(), makeLambdaFunction(FileWrapper$lambda$22$Type.prototype.apply_0, FileWrapper$lambda$22$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17), fullVersion_6), makeLambdaFunction(FileWrapper$lambda$23$Type.prototype.apply_0, FileWrapper$lambda$23$Type, [entryWriter_0, ownername_1, fullVersion_6, owner_2, network_3, version_4]));
}

function lambda$215(target_0, context_1){
  $clinit_FileWrapper();
  return $equals_13($owner(target_0), context_1.signer.publicKeyHash)?$map(context_1.mirrorBat, makeLambdaFunction(UserContext$13methodref$id$Type.prototype.apply_0, UserContext$13methodref$id$Type, [])):($clinit_Optional() , $clinit_Optional() , EMPTY);
}

function lambda$221(existingThumbnail_0, targetMirrorBat_1, network_2, crypto_3, committer_4, newCap_5, target_6, children_7, versionWithDir_8){
  $clinit_FileWrapper();
  return $thenCompose($getFile_0(network_2, versionWithDir_8, newCap_5, $map(target_6.pointer.capability.wBaseKey, makeLambdaFunction(FileWrapper$lambda$17$Type.prototype.apply_0, FileWrapper$lambda$17$Type, [target_6])), target_6.ownername), makeLambdaFunction(FileWrapper$lambda$222$Type.prototype.apply_0, FileWrapper$lambda$222$Type, [existingThumbnail_0, targetMirrorBat_1, network_2, crypto_3, committer_4, children_7, versionWithDir_8]));
}

function lambda$222(existingThumbnail_0, targetMirrorBat_1, network_2, crypto_3, committer_4, children_5, versionWithDir_6, subTargetOpt_7){
  $clinit_FileWrapper();
  var newTarget;
  newTarget = (checkCriticalElement(subTargetOpt_7.ref != null) , castTo(subTargetOpt_7.ref, 19));
  return reduceAll(children_5, versionWithDir_6, new FileWrapper$lambda$223$Type(existingThumbnail_0, targetMirrorBat_1, network_2, crypto_3, committer_4, newTarget), new FileWrapper$lambda$224$Type);
}

function lambda$223(existingThumbnail_0, targetMirrorBat_1, network_2, crypto_3, committer_4, newTarget_5, s_6, child_7){
  $clinit_FileWrapper();
  return $thenCompose($thenCompose($withWriter(s_6, $owner(newTarget_5), newTarget_5.pointer.capability.writer, network_2), makeLambdaFunction(FileWrapper$lambda$3$Type.prototype.apply_0, FileWrapper$lambda$3$Type, [newTarget_5, network_2])), makeLambdaFunction(FileWrapper$lambda$225$Type.prototype.apply_0, FileWrapper$lambda$225$Type, [child_7, existingThumbnail_0, targetMirrorBat_1, network_2, crypto_3, s_6, committer_4]));
}

function lambda$225(child_0, existingThumbnail_1, targetMirrorBat_2, network_3, crypto_4, s_5, committer_6, updated_7){
  $clinit_FileWrapper();
  return $copyTo(child_0, updated_7, existingThumbnail_1, targetMirrorBat_2, network_3, crypto_4, s_5, committer_6);
}

function lambda$23_5(entryWriter_0, ownername_1, fullVersion_2, owner_3, network_4, version_5, rcs_6){
  $clinit_FileWrapper();
  return combineAll(castTo($collect_0($map_0(rcs_6.stream(), makeLambdaFunction(FileWrapper$lambda$24$Type.prototype.apply_0, FileWrapper$lambda$24$Type, [entryWriter_0, ownername_1, fullVersion_2, owner_3, network_4, version_5])), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 54));
}

function lambda$230(target_0, committer_1, network_2, crypto_3, p_4){
  $clinit_FileWrapper();
  return castTo(p_4.right, 12).ref == null?new CompletableFuture_0(castTo(p_4.left, 43)):$addChildPointer(target_0, castTo(p_4.left, 43), committer_1, castTo($get_6(castTo(p_4.right, 12)), 150), network_2, crypto_3);
}

function lambda$24_3(entryWriter_0, ownername_1, fullVersion_2, owner_3, network_4, version_5, rc_6){
  $clinit_FileWrapper();
  var props;
  props = $getParentBlock(rc_6.fileAccess, getParentKey(rc_6.fileAccess, rc_6.capability.rBaseKey)).properties;
  if (!props.isLink)
    return new CompletableFuture_0(new FileWrapper_0(rc_6, ($clinit_Optional() , $clinit_Optional() , EMPTY), entryWriter_0, ownername_1, fullVersion_2));
  return $clinit_NetworkAccess() , $thenCompose($getDirectChildrenCapabilities(rc_6.fileAccess, rc_6.capability, version_5, network_4), makeLambdaFunction(NetworkAccess$lambda$48$Type.prototype.apply_0, NetworkAccess$lambda$48$Type, [rc_6, entryWriter_0, ownername_1, owner_3, network_4, version_5]));
}

function lambda$250(currentCap_0, signer_1, tid_2, hasher_3, network_4, committer_5, current_6){
  $clinit_FileWrapper();
  return $thenCompose(network_4.getMetadata($get_32(current_6, currentCap_0.writer).props, currentCap_0), makeLambdaFunction(FileWrapper$lambda$251$Type.prototype.apply_0, FileWrapper$lambda$251$Type, [currentCap_0, signer_1, tid_2, hasher_3, network_4, committer_5, current_6]));
}

function lambda$251(currentCap_0, signer_1, tid_2, hasher_3, network_4, committer_5, current_6, mOpt_7){
  $clinit_FileWrapper();
  var chunk, normalFile, ourSigner, props, streamSecret;
  if (mOpt_7.ref == null) {
    return new CompletableFuture_0(current_6);
  }
  chunk = (checkCriticalElement(mOpt_7.ref != null) , castTo(mOpt_7.ref, 115));
  ourSigner = $getSigner(chunk, currentCap_0.rBaseKey, castTo($get_6(currentCap_0.wBaseKey), 88), ($clinit_Optional() , new Optional(checkCriticalNotNull(signer_1))));
  props = $getProperties(chunk, $getParentKey_0(chunk, currentCap_0.rBaseKey));
  streamSecret = props.streamSecret;
  normalFile = !chunk.isDirectory_0 && streamSecret.ref != null;
  return $thenCompose($thenCompose(normalFile?deleteFileChunks(castTo($get_6(props.streamSecret), 11), getNumberOfChunks(props.size_0), currentCap_0, ourSigner, tid_2, hasher_3, network_4, current_6, committer_5):$thenCompose($deleteChunk(network_4, current_6, committer_5, chunk, currentCap_0.owner, copyOf(currentCap_0.mapKey, currentCap_0.mapKey.length), ourSigner, tid_2), makeLambdaFunction(FileWrapper$lambda$252$Type.prototype.apply_0, FileWrapper$lambda$252$Type, [currentCap_0, signer_1, tid_2, hasher_3, network_4, committer_5, chunk, streamSecret])), makeLambdaFunction(FileWrapper$lambda$254$Type.prototype.apply_0, FileWrapper$lambda$254$Type, [signer_1, tid_2, hasher_3, network_4, committer_5, chunk, currentCap_0])), makeLambdaFunction(FileWrapper$lambda$258$Type.prototype.apply_0, FileWrapper$lambda$258$Type, [currentCap_0, signer_1, network_4, committer_5]));
}

function lambda$252(currentCap_0, signer_1, tid_2, hasher_3, network_4, committer_5, chunk_6, streamSecret_7, deletedVersion_8){
  $clinit_FileWrapper();
  return $thenCompose($getNextChunkLocation(chunk_6, currentCap_0.rBaseKey, streamSecret_7, copyOf(currentCap_0.mapKey, currentCap_0.mapKey.length), currentCap_0.bat, hasher_3), makeLambdaFunction(FileWrapper$lambda$253$Type.prototype.apply_0, FileWrapper$lambda$253$Type, [currentCap_0, signer_1, tid_2, hasher_3, network_4, deletedVersion_8, committer_5]));
}

function lambda$253(currentCap_0, signer_1, tid_2, hasher_3, network_4, deletedVersion_5, committer_6, nextChunkMapKeyAndBat_7){
  $clinit_FileWrapper();
  return deleteAllChunks($withMapKey_1(currentCap_0, castTo(nextChunkMapKeyAndBat_7.left, 11), castTo(nextChunkMapKeyAndBat_7.right, 12)), signer_1, tid_2, hasher_3, network_4, deletedVersion_5, committer_6);
}

function lambda$254(signer_0, tid_1, hasher_2, network_3, committer_4, chunk_5, currentCap_6, updatedVersion_7){
  $clinit_FileWrapper();
  if (!chunk_5.isDirectory_0)
    return new CompletableFuture_0(updatedVersion_7);
  return $thenCompose($thenApply($getDirectChildren_0(chunk_5, currentCap_6, updatedVersion_7, network_3), makeLambdaFunction(CryptreeNode$lambda$14$Type.prototype.apply_0, CryptreeNode$lambda$14$Type, [currentCap_6])), makeLambdaFunction(FileWrapper$lambda$255$Type.prototype.apply_0, FileWrapper$lambda$255$Type, [signer_0, tid_1, hasher_2, network_3, committer_4, updatedVersion_7]));
}

function lambda$255(signer_0, tid_1, hasher_2, network_3, committer_4, updatedVersion_5, childCaps_6){
  $clinit_FileWrapper();
  return reduceAll(childCaps_6, updatedVersion_5, new FileWrapper$lambda$256$Type(signer_0, tid_1, hasher_2, network_3, committer_4), new FileWrapper$lambda$257$Type);
}

function lambda$256(signer_0, tid_1, hasher_2, network_3, committer_4, v_5, cap_6){
  $clinit_FileWrapper();
  return deleteAllChunks(castTo(cap_6.cap, 74), signer_0, tid_1, hasher_2, network_3, v_5, committer_4);
}

function lambda$258(currentCap_0, signer_1, network_2, committer_3, s_4){
  $clinit_FileWrapper();
  return removeSigningKey(currentCap_0.writer, signer_1, currentCap_0.owner, network_2, s_4, committer_3);
}

function lambda$259(network_0, current_1, c_2, startCap_3, ourSigner_4, tid_5, labels_6){
  $clinit_FileWrapper();
  return $deleteAllChunksIfPresent(network_0, current_1, c_2, startCap_3.owner, ourSigner_4, labels_6, tid_5);
}

function lambda$261_0(streamSecret_0, h_1, labels_2){
  $clinit_FileWrapper();
  return $thenApply(calculateNextMapKey(streamSecret_0, castTo(labels_2.getAtIndex(labels_2.size() - 1), 11), ($clinit_Optional() , $clinit_Optional() , EMPTY), h_1), makeLambdaFunction(FileWrapper$lambda$263$Type.prototype.apply_0, FileWrapper$lambda$263$Type, [labels_2]));
}

function lambda$263(labels_0, next_1){
  $clinit_FileWrapper();
  labels_0.add(castTo(next_1.left, 11));
  return labels_0;
}

function lambda$264(parent_0, childrenToDelete_1, network_2, context_3, hasher_4, owner_5, parentPath_6, version_7, c_8){
  $clinit_FileWrapper();
  return $thenCompose($thenCompose($withWriter(version_7, owner_5, parent_0.pointer.capability.writer, network_2), makeLambdaFunction(FileWrapper$lambda$265$Type.prototype.apply_0, FileWrapper$lambda$265$Type, [parent_0, c_8, childrenToDelete_1, network_2, context_3, hasher_4])), makeLambdaFunction(FileWrapper$lambda$267$Type.prototype.apply_0, FileWrapper$lambda$267$Type, [owner_5, parent_0, parentPath_6, c_8, context_3, childrenToDelete_1]));
}

function lambda$265(parent_0, c_1, childrenToDelete_2, network_3, context_4, hasher_5, v2_6){
  $clinit_FileWrapper();
  return $removeChildren(parent_0.pointer.fileAccess, v2_6, c_1, castTo($collect_0($map_0(childrenToDelete_2.stream(), makeLambdaFunction(FileWrapper$lambda$266$Type.prototype.apply_0, FileWrapper$lambda$266$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17), $writableFilePointer(parent_0), parent_0.entryWriter, network_3, context_4.crypto.random, hasher_5);
}

function lambda$267(owner_0, parent_1, parentPath_2, c_3, context_4, childrenToDelete_5, v3_6){
  $clinit_FileWrapper();
  return reduceAll(childrenToDelete_5, v3_6, new FileWrapper$lambda$268$Type(owner_0, parent_1, parentPath_2, c_3, context_4), new FileWrapper$lambda$269$Type);
}

function lambda$268(owner_0, parent_1, parentPath_2, c_3, context_4, s_5, f_6){
  var hasher, network;
  $clinit_FileWrapper();
  return hasher = context_4.crypto.hasher , network = context_4.network , $thenCompose(call_2(owner_0, makeLambdaFunction(FileWrapper$lambda$271$Type.prototype.apply_0, FileWrapper$lambda$271$Type, [f_6, parent_1, hasher, network, s_5, c_3]), network.dhtClient), makeLambdaFunction(FileWrapper$lambda$272$Type.prototype.apply_0, FileWrapper$lambda$272$Type, [context_4, parentPath_2, f_6, c_3, network]));
}

function lambda$270(parent_0, network_1, s_2){
  $clinit_FileWrapper();
  return $thenCompose($withWriter(s_2, $owner(parent_0), parent_0.pointer.capability.writer, network_1), makeLambdaFunction(FileWrapper$lambda$3$Type.prototype.apply_0, FileWrapper$lambda$3$Type, [parent_0, network_1]));
}

function lambda$271(child_0, parent_1, hasher_2, network_3, version_4, c_5, tid_6){
  $clinit_FileWrapper();
  return deleteAllChunks(child_0.linkPointer.ref != null?castTo(castTo($get_6(child_0.linkPointer), 83).capability, 74):$writableFilePointer(child_0), parent_1.isWritable_0?$signingPair(parent_1):$signingPair(child_0), tid_6, hasher_2, network_3, version_4, c_5);
}

function lambda$272(context_0, parentPath_1, child_2, c_3, network_4, s_5){
  $clinit_FileWrapper();
  return context_0.username == null?new CompletableFuture_0(s_5):$clearSharedWith(context_0.sharedWithCache, $resolve(parentPath_1, ($ensureUnmodified(child_2) , child_2.props).name), s_5, c_3, network_4);
}

function lambda$277(userContext_0, ourPath_1, c_2, network_3, s_4){
  $clinit_FileWrapper();
  return userContext_0.username == null?new CompletableFuture_0(s_4):$clearSharedWith(userContext_0.sharedWithCache, ourPath_1, s_4, c_2, network_3);
}

function lambda$278(parent_0, network_1, s_2){
  $clinit_FileWrapper();
  return $thenCompose($withWriter(s_2, $owner(parent_0), parent_0.pointer.capability.writer, network_1), makeLambdaFunction(FileWrapper$lambda$3$Type.prototype.apply_0, FileWrapper$lambda$3$Type, [parent_0, network_1]));
}

function lambda$279(committer_0, owner_1, parentSigner_2, parentWriter_3, signerToRemove_4, network_5, s_6){
  $clinit_FileWrapper();
  return $thenApply($thenCompose($removeOwnedKey($get_31(s_6, parentSigner_2).props, owner_1, parentSigner_2, signerToRemove_4, network_5.dhtClient, network_5.hasher), makeLambdaFunction(FileWrapper$lambda$280$Type.prototype.apply_0, FileWrapper$lambda$280$Type, [committer_0, owner_1, parentSigner_2, s_6, network_5])), makeLambdaFunction(FileWrapper$lambda$282$Type.prototype.apply_0, FileWrapper$lambda$282$Type, [s_6, parentWriter_3]));
}

function lambda$280(committer_0, owner_1, parentSigner_2, s_3, network_4, removed_5){
  $clinit_FileWrapper();
  return call_2(owner_1, makeLambdaFunction(FileWrapper$lambda$281$Type.prototype.apply_0, FileWrapper$lambda$281$Type, [committer_0, owner_1, parentSigner_2, removed_5, s_3]), network_4.dhtClient);
}

function lambda$281(committer_0, owner_1, parentSigner_2, removed_3, s_4, tid_5){
  $clinit_FileWrapper();
  return committer_0.commit_1(owner_1, parentSigner_2, removed_3, $get_31(s_4, parentSigner_2), tid_5);
}

function lambda$282(s_0, parentWriter_1, committed_2){
  $clinit_FileWrapper();
  return $withVersion(s_0, parentWriter_1, $get_32(committed_2, parentWriter_1));
}

function lambda$290(fut_0, base64Str_1){
  $clinit_FileWrapper();
  base64Str_1 == null && $complete(fut_0, ($clinit_Optional() , $clinit_Optional() , EMPTY));
  $complete(fut_0, convertFromBase64(base64Str_1));
}

function lambda$291(mp3Data_0, fut_1, network_2, filename_3){
  var bytes, fileStart, headers, tag, lastArg;
  $clinit_FileWrapper();
  var imageBlob, mp3CoverImage;
  try {
    mp3CoverImage = (bytes = (checkCopyOfRange(mp3Data_0, 0, 10) , copyPrimitiveByteArray(mp3Data_0, initUnidimensionalArray(B_classLit, $intern_28, 8, 10, 15, 1), 0, 10)) , sanityCheckTag(bytes) , fileStart = 10 + unpackSynchsafeInteger(bytes[6], bytes[7], bytes[8], bytes[9]) , headers = (checkCopyOfRange(mp3Data_0, 0, fileStart) , copyPrimitiveByteArray(mp3Data_0, initUnidimensionalArray(B_classLit, $intern_28, 8, fileStart, 15, 1), 0, fileStart)) , tag = createTag(headers) , new Mp3CoverImage((lastArg = $getAlbumImage(tag) , $getAlbumImageMimeType(tag) , lastArg)));
    if (mp3CoverImage.imageData == null) {
      $complete(fut_1, ($clinit_Optional() , $clinit_Optional() , EMPTY));
    }
     else {
      if (network_2.isJavascript) {
        imageBlob = new AsyncReader$ArrayBacked(mp3CoverImage.imageData);
        $thenAccept(thumbnail_0.generateThumbnail(imageBlob, mp3CoverImage.imageData.length, filename_3), new FileWrapper$lambda$292$Type(fut_1));
      }
       else {
        $complete(fut_1, get_165().$_nullMethod());
      }
    }
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 51)) {
      $complete(fut_1, ($clinit_Optional() , $clinit_Optional() , EMPTY));
    }
     else 
      throw toJs($e0);
  }
}

function lambda$31_4(cwd_0, updated_1){
  $clinit_FileWrapper();
  return new Pair(updated_1, cwd_0);
}

function lambda$45_1(committer_0, lastChunk_1, startOfLastChunk_2, newSize_4, network_6, crypto_7, resized_8, f_7){
  $clinit_FileWrapper();
  return $thenCompose($clean(f_7, resized_8, committer_0, network_6, crypto_7), makeLambdaFunction(FileWrapper$lambda$46$Type.prototype.apply_0, FileWrapper$lambda$46$Type, [committer_0, lastChunk_1, startOfLastChunk_2, newSize_4, network_6, crypto_7]));
}

function lambda$46_4(committer_0, lastChunk_1, startOfLastChunk_2, newSize_4, network_6, crypto_7, p_6){
  $clinit_FileWrapper();
  return $overwriteSection(castTo(p_6.left, 19), castTo(p_6.right, 43), committer_0, new AsyncReader$ArrayBacked(lastChunk_1), startOfLastChunk_2, newSize_4, network_6, crypto_7, makeLambdaFunction(FileWrapper$lambda$47$Type.prototype.accept_5, FileWrapper$lambda$47$Type, []));
}

function lambda$54_1(txn_0, fromParent_1, v_2){
  $clinit_FileWrapper();
  var path;
  return new Pair(v_2, ($clinit_Optional() , new Optional(checkCriticalNotNull(new NamedRelativeCapability((path = get_176(txn_0.path, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])) , $getFileName(path).pathString), fromParent_1)))));
}

function lambda$57_1(length_0, network_2, crypto_3, filename_4, f_4){
  $clinit_FileWrapper();
  return $thenCompose($thenCompose($getChild_2(f_4, filename_4, network_2), makeLambdaFunction(FileWrapper$lambda$58$Type.prototype.apply_0, FileWrapper$lambda$58$Type, [length_0, network_2, crypto_3])), makeLambdaFunction(FileWrapper$lambda$59$Type.prototype.apply_0, FileWrapper$lambda$59$Type, [f_4, network_2]));
}

function lambda$58_0(length_0, network_2, crypto_3, childOpt_3){
  $clinit_FileWrapper();
  return $truncate((checkCriticalElement(childOpt_3.ref != null) , castTo(childOpt_3.ref, 19)), length_0, network_2, crypto_3);
}

function lambda$59_1(f_0, network_1, c_2){
  $clinit_FileWrapper();
  return $getUpdated_0(f_0, $mergeAndOverwriteWith(f_0.version, c_2.version), network_1);
}

function lambda$61_2(length_0, network_2, crypto_3, filename_4, f_4){
  $clinit_FileWrapper();
  return $thenCompose($getChild_2(f_4, filename_4, network_2), makeLambdaFunction(FileWrapper$lambda$62$Type.prototype.apply_0, FileWrapper$lambda$62$Type, [length_0, network_2, crypto_3]));
}

function lambda$62_1(length_0, network_2, crypto_3, childOpt_3){
  $clinit_FileWrapper();
  return $truncate((checkCriticalElement(childOpt_3.ref != null) , castTo(childOpt_3.ref, 19)), length_0, network_2, crypto_3);
}

function lambda$63_3(committer_0, fileData_1, newSize_2, network_4, crypto_5, monitor_6, u_6){
  $clinit_FileWrapper();
  return $overwriteSection(castTo(u_6.left, 19), castTo(u_6.right, 43), committer_0, fileData_1, 0, newSize_2, network_4, crypto_5, monitor_6);
}

function lambda$65_4(v_0, committer_1, newSize_2, network_4, crypto_5, f_5){
  $clinit_FileWrapper();
  return $truncate_0(f_5, v_0, committer_1, newSize_2, network_4, crypto_5);
}

function lambda$73_0(network_0, path_1, mirrorBat_2, txns_3, resumeFile_4, commitWatcher_5, crypto_6, c_7, mirror_8, directories_9, us_10){
  $clinit_FileWrapper();
  return reduceAll_0(directories_9, us_10, new FileWrapper$lambda$74$Type(network_0, path_1, mirrorBat_2, txns_3, resumeFile_4, commitWatcher_5, crypto_6, c_7, mirror_8), new FileWrapper$lambda$75$Type);
}

function lambda$74(network_0, path_1, mirrorBat_2, txns_3, resumeFile_4, commitWatcher_5, crypto_6, c_7, mirror_8, dir_9, children_10){
  $clinit_FileWrapper();
  return $thenCompose($getOrMkdirs_0(dir_9, children_10.relativePath, mirror_8, network_0, crypto_6, dir_9.version, c_7), makeLambdaFunction(FileWrapper$lambda$76$Type.prototype.apply_0, FileWrapper$lambda$76$Type, [dir_9, network_0, path_1, children_10, mirrorBat_2, txns_3, resumeFile_4, commitWatcher_5, crypto_6, c_7]));
}

function lambda$76(dir_0, network_1, path_2, children_3, mirrorBat_4, txns_5, resumeFile_6, commitWatcher_7, crypto_8, c_9, p_10){
  $clinit_FileWrapper();
  return $thenCompose(uploadFolder($resolve(get_176(path_2, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])), get_176(castToString($collect_0(children_3.relativePath.stream(), of_3(new Collectors$lambda$15$Type('/', ''), new Collectors$9methodref$add$Type, new Collectors$10methodref$merge$Type, makeLambdaFunction(Collectors$11methodref$toString$Type.prototype.apply_0, Collectors$11methodref$toString$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [])))), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])).pathString), castTo(p_10.right, 19), children_3, mirrorBat_4, txns_5, resumeFile_6, commitWatcher_7, network_1, crypto_8, c_9), makeLambdaFunction(FileWrapper$lambda$77$Type.prototype.apply_0, FileWrapper$lambda$77$Type, [dir_0, network_1]));
}

function lambda$77_1(dir_0, network_1, v_2){
  $clinit_FileWrapper();
  return $thenCompose($withWriter(v_2, $owner(dir_0), dir_0.pointer.capability.writer, network_1), makeLambdaFunction(FileWrapper$lambda$3$Type.prototype.apply_0, FileWrapper$lambda$3$Type, [dir_0, network_1]));
}

function lambda$81_1(network_0, parent_1, transactions_2, c_3, commitWatcher_4, crypto_5, toParent_6, mirrorBat_7, resumeFile_8, p_9, f_10){
  $clinit_FileWrapper();
  var now_0, toClose;
  if (lte(f_10.length_0, $intern_70) || !transactions_2)
    return $thenCompose($thenApply($uploadFileSection_0(parent_1, castTo(p_9.left, 43), c_3, f_10.filename, f_10.fileData, ($clinit_Optional() , $clinit_Optional() , EMPTY), false, 0, f_10.length_0, (null , EMPTY), (null , EMPTY), (null , EMPTY), f_10.skipExisting, f_10.overwriteExisting, true, network_0.disableCommits(), crypto_5, f_10.monitor, $randomBytes(crypto_5.random, 32), (null , EMPTY), new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(crypto_5.random, 32))))), mirrorBat_7), makeLambdaFunction(FileWrapper$lambda$83$Type.prototype.apply_0, FileWrapper$lambda$83$Type, [p_9])), makeLambdaFunction(FileWrapper$lambda$84$Type.prototype.apply_0, FileWrapper$lambda$84$Type, [network_0, parent_1, transactions_2, c_3, commitWatcher_4, crypto_5]));
  network_0.enableCommits();
  toClose = new ArrayList;
  now_0 = ($clinit_LocalDateTime() , now_4());
  return $thenCompose($thenCompose($thenCompose(calculateMimeType(f_10.fileData, f_10.length_0, f_10.filename), makeLambdaFunction(FileWrapper$lambda$85$Type.prototype.apply_0, FileWrapper$lambda$85$Type, [f_10, now_0, crypto_5, toParent_6, parent_1])), makeLambdaFunction(FileWrapper$lambda$86$Type.prototype.apply_0, FileWrapper$lambda$86$Type, [parent_1, c_3, f_10, network_0, transactions_2, crypto_5, mirrorBat_7, toClose, p_9, resumeFile_8])), makeLambdaFunction(FileWrapper$lambda$98$Type.prototype.apply_0, FileWrapper$lambda$98$Type, [toClose, parent_1, transactions_2, c_3, commitWatcher_4, network_0, crypto_5]));
}

function lambda$83_1(p_0, pair_1){
  $clinit_FileWrapper();
  return new Pair(castTo(pair_1.left, 43), castTo(concat(castTo(p_0.right, 17).stream(), $stream(castTo(pair_1.right, 12))).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17));
}

function lambda$84_1(network_0, parent_1, transactions_2, c_3, commitWatcher_4, crypto_5, r_6){
  $clinit_FileWrapper();
  if (!network_0.isFull())
    return new CompletableFuture_0(r_6);
  return atomicallyClearTransactionsAndAddToParent(($clinit_Collections() , $clinit_Collections() , EMPTY_LIST), castTo(r_6.right, 17), parent_1, transactions_2, castTo(r_6.left, 43), c_3, commitWatcher_4, network_0, crypto_5);
}

function lambda$85_0(f_0, now_1, crypto_2, toParent_3, parent_4, mimeType_5){
  $clinit_FileWrapper();
  var props;
  props = new FileProperties_0(f_0.filename, false, false, mimeType_5, f_0.length_0, now_1, now_1, false, ($clinit_Optional() , $clinit_Optional() , EMPTY), new Optional(checkCriticalNotNull($randomBytes(crypto_2.random, 32))));
  return buildFileUploadTransaction($resolve(toParent_3, f_0.filename).pathString, f_0.length_0, props, castTo($get_6(props.streamSecret), 11), ($clinit_SymmetricKey() , random_10(castTo($get(PROVIDERS_1, ($clinit_SymmetricKey$Type() , TweetNaCl)), 91), castTo($get(RNG_PROVIDERS_0, TweetNaCl), 86))), random_10(castTo($get(PROVIDERS_1, TweetNaCl), 91), castTo($get(RNG_PROVIDERS_0, TweetNaCl), 86)), random_10(castTo($get(PROVIDERS_1, TweetNaCl), 91), castTo($get(RNG_PROVIDERS_0, TweetNaCl), 86)), $signingPair(parent_4), new Location_0($owner(parent_4), parent_4.pointer.capability.writer, $randomBytes(crypto_2.random, 32)), new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(crypto_2.random, 32))))), crypto_2.hasher);
}

function lambda$86(parent_0, c_1, f_2, network_3, transactions_4, crypto_5, mirrorBat_6, toClose_7, p_8, resumeFile_9, txn_10){
  $clinit_FileWrapper();
  return $thenCompose($open(transactions_4, castTo(p_8.left, 43), c_1, txn_10), makeLambdaFunction(FileWrapper$lambda$87$Type.prototype.apply_0, FileWrapper$lambda$87$Type, [parent_0, c_1, f_2, network_3, transactions_4, txn_10, crypto_5, mirrorBat_6, toClose_7, p_8, resumeFile_9]));
}

function lambda$87_0(parent_0, c_1, f_2, network_3, transactions_4, txn_5, crypto_6, mirrorBat_7, toClose_8, p_9, resumeFile_10, r_11){
  $clinit_FileWrapper();
  if (r_11.b_0 != null)
    return $thenApply($thenCompose(!castTo($b(r_11), 144).props || !$equals_13(parent_0.pointer.capability.writer, castTo($b(r_11), 144).writer.publicKeyHash)?new CompletableFuture_0(($clinit_Boolean() , false)):castTo(resumeFile_10(castTo($b(r_11), 144)), 6), makeLambdaFunction(FileWrapper$lambda$88$Type.prototype.apply_0, FileWrapper$lambda$88$Type, [parent_0, c_1, r_11, f_2, network_3, transactions_4, txn_5, crypto_6, mirrorBat_7, toClose_8, p_9])), makeLambdaFunction(FileWrapper$lambda$95$Type.prototype.apply_0, FileWrapper$lambda$95$Type, [p_9]));
  toClose_8.array[toClose_8.array.length] = txn_5;
  return $thenApply($thenCompose(f_2.fileData.reset(), makeLambdaFunction(FileWrapper$lambda$96$Type.prototype.apply_0, FileWrapper$lambda$96$Type, [parent_0, r_11, c_1, f_2, txn_5, network_3, crypto_6, mirrorBat_7])), makeLambdaFunction(FileWrapper$lambda$97$Type.prototype.apply_0, FileWrapper$lambda$97$Type, [p_9]));
}

function lambda$88_0(parent_0, c_1, r_2, f_3, network_4, transactions_5, txn_6, crypto_7, mirrorBat_8, toClose_9, p_10, resume_11){
  $clinit_FileWrapper();
  if (checkCriticalNotNull(resume_11) , resume_11) {
    $add(toClose_9, castTo($b(r_2), 144));
    return $thenCompose($resumeUpload(parent_0, castTo($b(r_2), 144), f_3.fileData, f_3.monitor, castTo(p_10.left, 43), c_1, network_4, crypto_7), makeLambdaFunction(FileWrapper$lambda$89$Type.prototype.apply_0, FileWrapper$lambda$89$Type, [parent_0, c_1, r_2, f_3, network_4]));
  }
  return $thenCompose($thenCompose($close_0(transactions_5, castTo(p_10.left, 43), c_1, castTo($b(r_2), 1267)), makeLambdaFunction(FileWrapper$lambda$92$Type.prototype.apply_0, FileWrapper$lambda$92$Type, [transactions_5, c_1, txn_6])), makeLambdaFunction(FileWrapper$lambda$93$Type.prototype.apply_0, FileWrapper$lambda$93$Type, [parent_0, c_1, f_3, txn_6, network_4, crypto_7, mirrorBat_8, toClose_9]));
}

function lambda$89_0(parent_0, c_1, r_2, f_3, network_4, res_5){
  $clinit_FileWrapper();
  return $thenApply($thenCompose(f_3.fileData.reset(), makeLambdaFunction(FileWrapper$lambda$90$Type.prototype.apply_0, FileWrapper$lambda$90$Type, [parent_0, res_5, c_1, r_2, f_3, network_4])), makeLambdaFunction(FileWrapper$lambda$91$Type.prototype.apply_0, FileWrapper$lambda$91$Type, [res_5]));
}

function lambda$90(parent_0, res_1, c_2, r_3, f_4, network_5, resetAgain_6){
  $clinit_FileWrapper();
  return $generateThumbnailAndUpdate(parent_0, castTo(res_1.left, 43), c_2, $writeCap(castTo($b(r_3), 144)), f_4.filename, resetAgain_6, network_5, ($clinit_Boolean() , false), castTo($b(r_3), 144).props.mimeType, f_4.length_0, $startTime(castTo($b(r_3), 144)), $startTime(castTo($b(r_3), 144)), ($clinit_Optional() , new Optional(checkCriticalNotNull(castTo($b(r_3), 144).streamSecret))), false, f_4.monitor);
}

function lambda$91_3(res_0, s_1){
  $clinit_FileWrapper();
  return new Pair(s_1, castTo(res_0.right, 12));
}

function lambda$92(transactions_0, c_1, txn_2, s2_3){
  $clinit_FileWrapper();
  return $open(transactions_0, s2_3, c_1, txn_2);
}

function lambda$93_0(parent_0, c_1, f_2, txn_3, network_4, crypto_5, mirrorBat_6, toClose_7, r2_8){
  $clinit_FileWrapper();
  if (r2_8.b_0 != null)
    throw toJs(new IllegalStateException_0('Error uploading file - concurrent upload of same file?'));
  toClose_7.array[toClose_7.array.length] = txn_3;
  return $thenCompose(f_2.fileData.reset(), makeLambdaFunction(FileWrapper$lambda$94$Type.prototype.apply_0, FileWrapper$lambda$94$Type, [parent_0, r2_8, c_1, f_2, txn_3, network_4, crypto_5, mirrorBat_6]));
}

function lambda$94_2(parent_0, r2_1, c_2, f_3, txn_4, network_5, crypto_6, mirrorBat_7, reset_8){
  $clinit_FileWrapper();
  return $uploadFileSection_0(parent_0, castTo($a(r2_1), 43), c_2, f_3.filename, reset_8, ($clinit_Optional() , $clinit_Optional() , EMPTY), false, 0, f_3.length_0, new Optional(checkCriticalNotNull(txn_4.baseKey)), new Optional(checkCriticalNotNull(txn_4.dataKey)), new Optional(checkCriticalNotNull(txn_4.writeKey)), f_3.skipExisting, f_3.overwriteExisting, true, network_5, crypto_6, f_3.monitor, $getMapKey_0(txn_4.firstChunk), new Optional(checkCriticalNotNull(txn_4.streamSecret)), txn_4.firstBat, mirrorBat_7);
}

function lambda$95_3(p_0, pair_1){
  $clinit_FileWrapper();
  return new Pair(castTo(pair_1.left, 43), castTo(concat(castTo(p_0.right, 17).stream(), $stream(castTo(pair_1.right, 12))).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17));
}

function lambda$96_3(parent_0, r_1, c_2, f_3, txn_4, network_5, crypto_6, mirrorBat_7){
  $clinit_FileWrapper();
  return $uploadFileSection_0(parent_0, castTo($a(r_1), 43), c_2, f_3.filename, f_3.fileData, ($clinit_Optional() , $clinit_Optional() , EMPTY), false, 0, f_3.length_0, new Optional(checkCriticalNotNull(txn_4.baseKey)), new Optional(checkCriticalNotNull(txn_4.dataKey)), new Optional(checkCriticalNotNull(txn_4.writeKey)), f_3.skipExisting, f_3.overwriteExisting, true, network_5, crypto_6, f_3.monitor, $getMapKey_0(txn_4.firstChunk), new Optional(checkCriticalNotNull(txn_4.streamSecret)), txn_4.firstBat, mirrorBat_7);
}

function lambda$97_1(p_0, pair_1){
  $clinit_FileWrapper();
  return new Pair(castTo(pair_1.left, 43), castTo(concat(castTo(p_0.right, 17).stream(), $stream(castTo(pair_1.right, 12))).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17));
}

function lambda$98_0(toClose_0, parent_1, transactions_2, c_3, commitWatcher_4, network_5, crypto_6, r_7){
  $clinit_FileWrapper();
  return atomicallyClearTransactionsAndAddToParent(toClose_0, castTo(r_7.right, 17), parent_1, transactions_2, castTo(r_7.left, 43), c_3, commitWatcher_4, network_5, crypto_6);
}

function lambda$99_0(parent_0, transactions_1, c_2, commitWatcher_3, network_4, crypto_5, r_6){
  $clinit_FileWrapper();
  return atomicallyClearTransactionsAndAddToParent(($clinit_Collections() , $clinit_Collections() , EMPTY_LIST), castTo(r_6.right, 17), parent_0, transactions_1, castTo(r_6.left, 43), c_2, commitWatcher_3, network_4, crypto_5);
}

function removeSigningKey(signerToRemove, parentSigner, owner, network, current, committer){
  var parentWriter;
  parentWriter = parentSigner.publicKeyHash;
  if (!!signerToRemove && parentWriter.target.equals(signerToRemove.target))
    return new CompletableFuture_0(current);
  return $thenCompose($withWriter(current, owner, parentWriter, network), makeLambdaFunction(FileWrapper$lambda$279$Type.prototype.apply_0, FileWrapper$lambda$279$Type, [committer, owner, parentSigner, parentWriter, signerToRemove, network]));
}

function retrieveParent(pointer, ownerName, version, network){
  $clinit_FileWrapper();
  var cap, parent_0;
  if (!pointer)
    return new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY));
  cap = pointer.capability;
  parent_0 = $getParent_0(pointer.fileAccess, cap.owner, cap.writer, cap.rBaseKey, network, version);
  return $thenCompose(parent_0, makeLambdaFunction(FileWrapper$lambda$15$Type.prototype.apply_0, FileWrapper$lambda$15$Type, [ownerName, version, network]));
}

function uploadFolder(toParent, parent_0, children, mirrorBat, transactions, resumeFile, commitWatcher, network, crypto_0, c){
  var identity, sortedChildren;
  identity = new Pair(parent_0.version, ($clinit_Collections() , $clinit_Collections() , EMPTY_LIST));
  sortedChildren = castTo($collect_0($sorted_0(children.files.stream(), (checkCriticalNotNull(new FileWrapper$lambda$80$Type) , new Comparator$lambda$4$Type)), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  return $thenApply($thenCompose(reduceAll(sortedChildren, identity, new FileWrapper$lambda$81$Type(network, parent_0, transactions, c, commitWatcher, crypto_0, toParent, mirrorBat, resumeFile), new FileWrapper$lambda$82$Type), makeLambdaFunction(FileWrapper$lambda$99$Type.prototype.apply_0, FileWrapper$lambda$99$Type, [parent_0, transactions, c, commitWatcher, network, crypto_0])), makeLambdaFunction(FileWrapper$lambda$100$Type.prototype.apply_0, FileWrapper$lambda$100$Type, []));
}

defineClass(19, 1, {19:1}, FileWrapper, FileWrapper_0);
_.appendFileJS = function appendFileJS(filename, fileData, lengthHi, lengthLow, network, crypto_0, monitor){
  return $appendFileJS(this, filename, fileData, lengthHi, lengthLow, network, crypto_0, monitor);
}
;
_.calculateAndUpdateThumbnail = function calculateAndUpdateThumbnail(network, crypto_0){
  return $thenApply($applyComplexComputation(network.synchronizer, $owner(this), $signingPair(this), new FileWrapper$lambda$158$Type(this, network, crypto_0)), makeLambdaFunction(FileWrapper$lambda$163$Type.prototype.apply_0, FileWrapper$lambda$163$Type, []));
}
;
_.copyTo = function copyTo(target, context){
  return $copyTo_0(this, target, context);
}
;
_.getBase64Thumbnail = function getBase64Thumbnail_0(){
  var base64Data, thumb, thumbnail;
  thumbnail = this.props.thumbnail;
  if (thumbnail.ref != null) {
    thumb = (checkCriticalElement(thumbnail.ref != null) , castTo(thumbnail.ref, 245));
    base64Data = $encodeToString(thumb.data_0);
    if ($equals_0(thumb.mimeType, 'image/webp'))
      return 'data:image/webp;base64,' + base64Data;
    if ($equals_0(thumb.mimeType, 'image/jpeg'))
      return 'data:image/jpeg;base64,' + base64Data;
    if ($equals_0(thumb.mimeType, 'image/png'))
      return 'data:image/png;base64,' + base64Data;
    throw toJs(new IllegalStateException_0('Unknown thumbnail mimetype: ' + thumb.mimeType));
  }
   else {
    return '';
  }
}
;
_.getBufferedInputStream = function getBufferedInputStream(network, crypto_0, fileSizeHi, fileSizeLow, nBufferedChunks, monitor){
  return $thenCompose($getValue_0(network.synchronizer, $owner(this), this.pointer.capability.writer), makeLambdaFunction(FileWrapper$lambda$285$Type.prototype.apply_0, FileWrapper$lambda$285$Type, [this, network, crypto_0, add_1(and_0(fileSizeLow, $intern_47), shl_0(and_0(fileSizeHi, $intern_47), 32)), nBufferedChunks, monitor]));
}
;
_.getChild = function getChild(name_0, hasher, network){
  return $getChild_2(this, name_0, network);
}
;
_.getChildren = function getChildren_5(hasher, network){
  return $getChildren_4(this, hasher, network);
}
;
_.getContentHash = function getContentHash(network, crypto_0){
  return $thenCompose($getInputStream_0(this, network, crypto_0, makeLambdaFunction(FileWrapper$lambda$8$Type.prototype.accept_5, FileWrapper$lambda$8$Type, [])), makeLambdaFunction(FileWrapper$lambda$9$Type.prototype.apply_0, FileWrapper$lambda$9$Type, [this, crypto_0]));
}
;
_.getFileProperties = function getFileProperties(){
  return $getFileProperties(this);
}
;
_.getInputStream = function getInputStream(network, crypto_0, fileSizeHi, fileSizeLow, monitor){
  return $thenCompose($getValue_0(network.synchronizer, $owner(this), this.pointer.capability.writer), makeLambdaFunction(FileWrapper$lambda$284$Type.prototype.apply_0, FileWrapper$lambda$284$Type, [this, network, crypto_0, fileSizeHi, fileSizeLow, monitor]));
}
;
_.getLatest = function getLatest(network){
  return $thenCompose($getValue_0(network.synchronizer, $owner(this), this.pointer.capability.writer), makeLambdaFunction(FileWrapper$lambda$1$Type.prototype.apply_0, FileWrapper$lambda$1$Type, [this, network]));
}
;
_.getName = function getName_7(){
  return $getName_1(this);
}
;
_.getOrMkdirs = function getOrMkdirs_0(subPath, network, isSystemFolder, mirrorBat, crypto_0){
  return $getOrMkdirs(this, subPath, network, isSystemFolder, mirrorBat, crypto_0);
}
;
_.getOwnerName = function getOwnerName(){
  return this.ownername;
}
;
_.hasChild = function hasChild_0(fileName, hasher, network){
  return $hasChild(this, fileName, network);
}
;
_.isDirectory = function isDirectory_0(){
  var isNull;
  return isNull = !this.pointer , isNull || this.pointer.fileAccess.isDirectory_0;
}
;
_.isReadable = function isReadable(){
  return $isReadable(this.pointer.fileAccess, this.pointer.capability.rBaseKey);
}
;
_.isUserRoot = function isUserRoot(){
  return $isUserRoot(this);
}
;
_.isWritable = function isWritable_0(){
  return this.isWritable_0;
}
;
_.mkdir = function mkdir(newFolderName, network, isSystemFolder, mirrorBat, crypto_0){
  return $mkdir_1(this, newFolderName, network, isSystemFolder, mirrorBat, crypto_0);
}
;
_.moveTo = function moveTo_0(target, parent_0, ourPath, context){
  return $thenApply($thenCompose($copyTo_0(this, target, context), makeLambdaFunction(FileWrapper$lambda$213$Type.prototype.apply_0, FileWrapper$lambda$213$Type, [this, parent_0, ourPath, context])), makeLambdaFunction(FileWrapper$lambda$214$Type.prototype.apply_0, FileWrapper$lambda$214$Type, []));
}
;
_.overwriteFileJS = function overwriteFileJS(fileData, endHigh, endLow, network, crypto_0, monitor){
  var newSize;
  newSize = add_1(and_0(endLow, $intern_47), shl_0(and_0(endHigh, $intern_47), 32));
  return $thenCompose($applyComplexUpdate(network.synchronizer, $owner(this), $signingPair(this), new FileWrapper$lambda$66$Type(this, fileData, newSize, network, crypto_0, monitor), new WriteSynchronizer$lambda$23$Type), makeLambdaFunction(FileWrapper$lambda$67$Type.prototype.apply_0, FileWrapper$lambda$67$Type, [this, network]));
}
;
_.overwriteSectionJS = function overwriteSectionJS(fileData, startHigh, startLow, endHigh, endLow, network, crypto_0, monitor){
  return $thenCompose($applyComplexUpdate(network.synchronizer, $owner(this), $signingPair(this), new FileWrapper$lambda$68$Type(this, fileData, startHigh, startLow, endHigh, endLow, network, crypto_0, monitor), new WriteSynchronizer$lambda$23$Type), makeLambdaFunction(FileWrapper$lambda$69$Type.prototype.apply_0, FileWrapper$lambda$69$Type, [this, network]));
}
;
_.readOnlyPointer = function readOnlyPointer(){
  return $readOnly(this.pointer.capability);
}
;
_.remove = function remove_41(parent_0, ourPath, userContext){
  return $remove_16(this, parent_0, ourPath, userContext);
}
;
_.rename = function rename(newFilename, parent_0, ourPath, userContext){
  var childExists, currentProps;
  if (!(newFilename.indexOf('/') == -1 && !$equals_0(newFilename, '.') && !$equals_0(newFilename, '..') && newFilename.length != 0))
    return new CompletableFuture_0(parent_0);
  if (!parent_0.isWritable_0)
    return errored(new IllegalStateException_0('Unable to rename something without write access to the parent!'));
  childExists = !parent_0?new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY)):$getDescendentByPath(parent_0, newFilename, userContext.crypto.hasher, userContext.network);
  $ensureUnmodified(this);
  currentProps = ($ensureUnmodified(this) , this.props);
  $setModified(this);
  return $thenCompose(childExists, makeLambdaFunction(FileWrapper$lambda$198$Type.prototype.apply_0, FileWrapper$lambda$198$Type, [this, parent_0, newFilename, userContext, ourPath, currentProps]));
}
;
_.samePointer = function samePointer(other){
  return equals_Ljava_lang_Object__Z__devirtual$(this.pointer, other.pointer);
}
;
_.toLink = function toLink_0(){
  return $toLink($readOnly(this.pointer.capability));
}
;
_.toString_0 = function toString_85(){
  return ($ensureUnmodified(this) , this.props).name;
}
;
_.toWritableLink = function toWritableLink(){
  if (!this.isWritable_0)
    throw toJs(new IllegalStateException_0('You do not have write access to ' + ($ensureUnmodified(this) , this.props).name));
  return this.pointer.capability.toLink_0();
}
;
_.truncate = function truncate_0(newSize, network, crypto_0){
  return $truncate(this, newSize, network, crypto_0);
}
;
_.updateThumbnail = function updateThumbnail(base64Str, network){
  var thumbData, updatedProperties;
  thumbData = ($clinit_Optional() , $clinit_Optional() , EMPTY);
  base64Str != null && base64Str.length > 0 && (thumbData = convertFromBase64(base64Str));
  updatedProperties = $withThumbnail(this.props, thumbData);
  return $thenCompose($applyComplexUpdate(network.synchronizer, $owner(this), $signingPair(this), new FileWrapper$lambda$133$Type(this, updatedProperties, network), new WriteSynchronizer$lambda$23$Type), makeLambdaFunction(FileWrapper$lambda$134$Type.prototype.apply_0, FileWrapper$lambda$134$Type, [this, network]));
}
;
_.uploadFileJS = function uploadFileJS(filename, fileData, lengthHi, lengthLow, overwriteExisting, mirrorBat, network, crypto_0, monitor, transactions, resumeFile){
  var currentFolder, fileProps;
  fileProps = new FileWrapper$FileUploadProperties(filename, fileData, lengthHi, lengthLow, false, overwriteExisting, monitor);
  currentFolder = new FileWrapper$FolderUploadProperties(($clinit_Collections() , $clinit_Collections() , EMPTY_LIST), new Collections$SingletonList(fileProps));
  return $uploadSubtree(this, new StreamImpl(null, new Spliterators$IteratorSpliterator(singleton(currentFolder), 1)), mirrorBat, network, crypto_0, transactions, resumeFile, new FileWrapper$lambda$52$Type);
}
;
_.uploadOrReplaceFile = function uploadOrReplaceFile(filename, fileData, fileSizeHi, fileSizeLow, network, crypto_0, monitor){
  var fileSize;
  fileSize = add_1(and_0(fileSizeLow, $intern_47), shl_0(and_0(fileSizeHi, $intern_47), 32));
  return $uploadOrReplaceFile_0(this, filename, fileData, fileSize, network, crypto_0, monitor, $randomBytes(crypto_0.random, 32), ($clinit_Optional() , new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(crypto_0.random, 32)))))), $mirrorBatId(this.pointer.fileAccess));
}
;
_.uploadSubtree = function uploadSubtree(directories_0, mirrorBat, network, crypto_0, txns, resumeFile, commitWatcher){
  return $uploadSubtree(this, directories_0, mirrorBat, network, crypto_0, txns, resumeFile, commitWatcher);
}
;
_.isWritable_0 = false;
var LOG_7, thumbnail_0;
var Lpeergos_shared_user_fs_FileWrapper_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper', 19);
function FileWrapper$0methodref$get$Type(){
}

defineClass(1758, $wnd.Function, $intern_22, FileWrapper$0methodref$get$Type);
_.apply_0 = function apply_2023(arg0){
  return $get_6(castTo(arg0, 12));
}
;
function FileWrapper$1methodref$isPresent$Type(){
}

defineClass(1263, $wnd.Function, $intern_22, FileWrapper$1methodref$isPresent$Type);
_.apply_0 = function apply_2024(arg0){
  return $clinit_Boolean() , castTo(arg0, 12).ref != null?true:false;
}
;
function FileWrapper$2methodref$of$Type(){
}

defineClass(1768, $wnd.Function, $intern_22, FileWrapper$2methodref$of$Type);
_.apply_0 = function apply_2025(arg0){
  return $clinit_Optional() , new Optional(checkCriticalNotNull(castTo(arg0, 19)));
}
;
function FileWrapper$3methodref$get$Type(){
}

defineClass(1770, $wnd.Function, $intern_22, FileWrapper$3methodref$get$Type);
_.apply_0 = function apply_2026(arg0){
  return $get_6(castTo(arg0, 12));
}
;
function FileWrapper$4methodref$of$Type(){
}

defineClass(1816, $wnd.Function, $intern_22, FileWrapper$4methodref$of$Type);
_.apply_0 = function apply_2027(arg0){
  return new CompletableFuture_0(castTo(arg0, 20));
}
;
function FileWrapper$5methodref$random$Type(){
}

defineClass(671, 1, {}, FileWrapper$5methodref$random$Type);
_.get_0 = function get_149(){
  return $clinit_SymmetricKey() , random_10(castTo($get(PROVIDERS_1, ($clinit_SymmetricKey$Type() , TweetNaCl)), 91), castTo($get(RNG_PROVIDERS_0, TweetNaCl), 86));
}
;
var Lpeergos_shared_user_fs_FileWrapper$5methodref$random$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/5methodref$random$Type', 671);
function FileWrapper$6methodref$random$Type(){
}

defineClass(672, 1, {}, FileWrapper$6methodref$random$Type);
_.get_0 = function get_150(){
  return $clinit_SymmetricKey() , random_10(castTo($get(PROVIDERS_1, ($clinit_SymmetricKey$Type() , TweetNaCl)), 91), castTo($get(RNG_PROVIDERS_0, TweetNaCl), 86));
}
;
var Lpeergos_shared_user_fs_FileWrapper$6methodref$random$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/6methodref$random$Type', 672);
function FileWrapper$7methodref$random$Type(){
}

defineClass(673, 1, {}, FileWrapper$7methodref$random$Type);
_.get_0 = function get_151(){
  return $clinit_SymmetricKey() , random_10(castTo($get(PROVIDERS_1, ($clinit_SymmetricKey$Type() , TweetNaCl)), 91), castTo($get(RNG_PROVIDERS_0, TweetNaCl), 86));
}
;
var Lpeergos_shared_user_fs_FileWrapper$7methodref$random$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/7methodref$random$Type', 673);
function FileWrapper$8methodref$get$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(684, 1, {}, FileWrapper$8methodref$get$Type);
_.get_0 = function get_152(){
  return $get_6(this.$$outer_0);
}
;
var Lpeergos_shared_user_fs_FileWrapper$8methodref$get$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/8methodref$get$Type', 684);
function FileWrapper$FileUploadProperties(filename, fileData, lengthHi, lengthLow, skipExisting, overwriteExisting, monitor){
  this.filename = filename;
  this.fileData = fileData;
  this.length_0 = or_0(shl_0(lengthHi, 32), and_0(lengthLow, $intern_47));
  this.skipExisting = skipExisting;
  this.overwriteExisting = overwriteExisting;
  this.monitor = monitor;
}

defineClass(339, 1, {339:1}, FileWrapper$FileUploadProperties);
_.length_0 = 0;
_.overwriteExisting = false;
_.skipExisting = false;
var Lpeergos_shared_user_fs_FileWrapper$FileUploadProperties_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/FileUploadProperties', 339);
function FileWrapper$FolderUploadProperties(relativePath, files){
  this.relativePath = relativePath;
  this.files = files;
}

defineClass(647, 1, {}, FileWrapper$FolderUploadProperties);
var Lpeergos_shared_user_fs_FileWrapper$FolderUploadProperties_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/FolderUploadProperties', 647);
function FileWrapper$lambda$0$Type(pointer_0){
  this.pointer_0 = pointer_0;
}

defineClass(1689, $wnd.Function, $intern_22, FileWrapper$lambda$0$Type);
_.apply_0 = function apply_2028(arg0){
  return lambda$0_30(this.pointer_0, arg0);
}
;
function FileWrapper$lambda$1$Type($$outer_0, network_1){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
}

defineClass(1690, $wnd.Function, $intern_22, FileWrapper$lambda$1$Type);
_.apply_0 = function apply_2029(arg0){
  return $lambda$1_26(this.$$outer_0, this.network_1, arg0);
}
;
function FileWrapper$lambda$10$Type(canon_0, hasher_1, network_2){
  this.canon_0 = canon_0;
  this.hasher_1 = hasher_1;
  this.network_2 = network_2;
}

defineClass(1693, $wnd.Function, $intern_22, FileWrapper$lambda$10$Type);
_.apply_0 = function apply_2030(arg0){
  return lambda$10_10(this.canon_0, this.hasher_1, this.network_2, arg0);
}
;
function FileWrapper$lambda$100$Type(){
}

defineClass(1717, $wnd.Function, $intern_22, FileWrapper$lambda$100$Type);
_.apply_0 = function apply_2031(arg0){
  return $clinit_FileWrapper() , castTo(castTo(arg0, 20).left, 43);
}
;
function FileWrapper$lambda$101$Type(in_0, c_1, childLinks_2, network_3, crypto_4){
  this.in_0 = in_0;
  this.c_1 = c_1;
  this.childLinks_2 = childLinks_2;
  this.network_3 = network_3;
  this.crypto_4 = crypto_4;
}

defineClass(1718, $wnd.Function, $intern_22, FileWrapper$lambda$101$Type);
_.apply_0 = function apply_2032(arg0){
  return lambda$101_0(this.in_0, this.c_1, this.childLinks_2, this.network_3, this.crypto_4, arg0);
}
;
function FileWrapper$lambda$102$Type(transactions_0, c_1, toClose_2){
  this.transactions_0 = transactions_0;
  this.c_1 = c_1;
  this.toClose_2 = toClose_2;
}

defineClass(1719, $wnd.Function, $intern_22, FileWrapper$lambda$102$Type);
_.apply_0 = function apply_2033(arg0){
  return lambda$102_0(this.transactions_0, this.c_1, this.toClose_2, arg0);
}
;
function FileWrapper$lambda$103$Type(transactions_0, c_1){
  this.transactions_0 = transactions_0;
  this.c_1 = c_1;
}

defineClass(659, 1, $intern_34, FileWrapper$lambda$103$Type);
_.apply_1 = function apply_2034(arg0, arg1){
  return lambda$103(this.transactions_0, this.c_1, arg0, arg1);
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$103$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$103$Type', 659);
function FileWrapper$lambda$104$Type(){
}

defineClass(660, 1, $intern_34, FileWrapper$lambda$104$Type);
_.apply_1 = function apply_2035(arg0, arg1){
  return $clinit_FileWrapper() , castTo(arg1, 43);
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$104$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$104$Type', 660);
function FileWrapper$lambda$105$Type(network_0){
  this.network_0 = network_0;
}

defineClass(1720, $wnd.Function, $intern_22, FileWrapper$lambda$105$Type);
_.apply_0 = function apply_2036(arg0){
  return lambda$105_0(this.network_0, arg0);
}
;
function FileWrapper$lambda$106$Type(network_0, parent_1, commitWatcher_2){
  this.network_0 = network_0;
  this.parent_1 = parent_1;
  this.commitWatcher_2 = commitWatcher_2;
}

defineClass(1721, $wnd.Function, $intern_22, FileWrapper$lambda$106$Type);
_.apply_0 = function apply_2037(arg0){
  return lambda$106_0(this.network_0, this.parent_1, this.commitWatcher_2, arg0);
}
;
function FileWrapper$lambda$107$Type(s_0){
  this.s_0 = s_0;
}

defineClass(1809, $wnd.Function, $intern_22, FileWrapper$lambda$107$Type);
_.apply_0 = function apply_2038(arg0){
  return $clinit_FileWrapper() , this.s_0;
}
;
function FileWrapper$lambda$108$Type(){
}

defineClass(1722, $wnd.Function, $intern_22, FileWrapper$lambda$108$Type);
_.apply_0 = function apply_2039(arg0){
  return $clinit_FileWrapper() , new Pair(castTo(arg0, 43), ($clinit_Collections() , $clinit_Collections() , EMPTY_LIST));
}
;
function $get_33(this$static){
  return $lambda$109_0(this$static.$$outer_0, this$static.crypto_1);
}

function FileWrapper$lambda$109$Type($$outer_0, crypto_1){
  this.$$outer_0 = $$outer_0;
  this.crypto_1 = crypto_1;
}

defineClass(661, 1, {}, FileWrapper$lambda$109$Type);
_.get_0 = function get_153(){
  return $get_33(this);
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$109$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$109$Type', 661);
function FileWrapper$lambda$110$Type($$outer_0, ourCap_1, props_2, crypto_3, network_4, endIndex_5, committer_7, parentLocation_8, parentBat_9, parentParentKey_10, monitor_11, fileData_12, legacyLocs_13, inputStartIndex_14){
  this.$$outer_0 = $$outer_0;
  this.ourCap_1 = ourCap_1;
  this.props_2 = props_2;
  this.crypto_3 = crypto_3;
  this.network_4 = network_4;
  this.endIndex_5 = endIndex_5;
  this.committer_7 = committer_7;
  this.parentLocation_8 = parentLocation_8;
  this.parentBat_9 = parentBat_9;
  this.parentParentKey_10 = parentParentKey_10;
  this.monitor_11 = monitor_11;
  this.fileData_12 = fileData_12;
  this.legacyLocs_13 = legacyLocs_13;
  this.inputStartIndex_14 = inputStartIndex_14;
}

defineClass(1723, $wnd.Function, $intern_22, FileWrapper$lambda$110$Type);
_.apply_0 = function apply_2040(arg0){
  return $lambda$110_0(this.$$outer_0, this.ourCap_1, this.props_2, this.crypto_3, this.network_4, this.endIndex_5, this.committer_7, this.parentLocation_8, this.parentBat_9, this.parentParentKey_10, this.monitor_11, this.fileData_12, this.legacyLocs_13, this.inputStartIndex_14, arg0);
}
;
_.endIndex_5 = 0;
_.inputStartIndex_14 = 0;
function FileWrapper$lambda$111$Type($$outer_0, us_1, ourCap_2, props_3, crypto_4, network_5, endIndex_6, committer_8, filesSize_9, parentLocation_10, parentBat_11, parentParentKey_12, monitor_13, fileData_14, legacyLocs_15, inputStartIndex_16, base_18){
  this.$$outer_0 = $$outer_0;
  this.us_1 = us_1;
  this.ourCap_2 = ourCap_2;
  this.props_3 = props_3;
  this.crypto_4 = crypto_4;
  this.network_5 = network_5;
  this.endIndex_6 = endIndex_6;
  this.committer_8 = committer_8;
  this.filesSize_9 = filesSize_9;
  this.parentLocation_10 = parentLocation_10;
  this.parentBat_11 = parentBat_11;
  this.parentParentKey_12 = parentParentKey_12;
  this.monitor_13 = monitor_13;
  this.fileData_14 = fileData_14;
  this.legacyLocs_15 = legacyLocs_15;
  this.inputStartIndex_16 = inputStartIndex_16;
  this.base_18 = base_18;
}

defineClass(1810, $wnd.Function, $intern_22, FileWrapper$lambda$111$Type);
_.apply_0 = function apply_2041(arg0){
  return $lambda$111(this.$$outer_0, this.us_1, this.ourCap_2, this.props_3, this.crypto_4, this.network_5, this.endIndex_6, this.committer_8, this.filesSize_9, this.parentLocation_10, this.parentBat_11, this.parentParentKey_12, this.monitor_13, this.fileData_14, this.legacyLocs_15, this.inputStartIndex_16, this.base_18, arg0);
}
;
_.endIndex_6 = 0;
_.inputStartIndex_16 = 0;
function FileWrapper$lambda$112$Type($$outer_0, retriever_1, us_2, ourCap_3, props_4, crypto_5, network_6, endIndex_7, committer_9, filesSize_10, dataKey_11, parentLocation_12, parentBat_13, parentParentKey_14, baseKey_15, monitor_16, fileData_17, legacyLocs_18){
  this.$$outer_0 = $$outer_0;
  this.retriever_1 = retriever_1;
  this.us_2 = us_2;
  this.ourCap_3 = ourCap_3;
  this.props_4 = props_4;
  this.crypto_5 = crypto_5;
  this.network_6 = network_6;
  this.endIndex_7 = endIndex_7;
  this.committer_9 = committer_9;
  this.filesSize_10 = filesSize_10;
  this.dataKey_11 = dataKey_11;
  this.parentLocation_12 = parentLocation_12;
  this.parentBat_13 = parentBat_13;
  this.parentParentKey_14 = parentParentKey_14;
  this.baseKey_15 = baseKey_15;
  this.monitor_16 = monitor_16;
  this.fileData_17 = fileData_17;
  this.legacyLocs_18 = legacyLocs_18;
}

defineClass(664, 1, $intern_34, FileWrapper$lambda$112$Type);
_.apply_1 = function apply_2042(arg0, arg1){
  return $lambda$112(this.$$outer_0, this.retriever_1, this.us_2, this.ourCap_3, this.props_4, this.crypto_5, this.network_6, this.endIndex_7, this.committer_9, this.filesSize_10, this.dataKey_11, this.parentLocation_12, this.parentBat_13, this.parentParentKey_14, this.baseKey_15, this.monitor_16, this.fileData_17, this.legacyLocs_18, arg0, arg1);
}
;
_.endIndex_7 = 0;
var Lpeergos_shared_user_fs_FileWrapper$lambda$112$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$112$Type', 664);
function FileWrapper$lambda$113$Type($$outer_0, retriever_1, version_2, us_3, ourCap_4, props_5, startIndex_6, crypto_7, network_8){
  this.$$outer_0 = $$outer_0;
  this.retriever_1 = retriever_1;
  this.version_2 = version_2;
  this.us_3 = us_3;
  this.ourCap_4 = ourCap_4;
  this.props_5 = props_5;
  this.startIndex_6 = startIndex_6;
  this.crypto_7 = crypto_7;
  this.network_8 = network_8;
}

defineClass(1811, $wnd.Function, $intern_22, FileWrapper$lambda$113$Type);
_.apply_0 = function apply_2043(arg0){
  return $lambda$113(this.$$outer_0, this.retriever_1, this.version_2, this.us_3, this.ourCap_4, this.props_5, this.startIndex_6, this.crypto_7, this.network_8, arg0);
}
;
function FileWrapper$lambda$114$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1813, $wnd.Function, $intern_22, FileWrapper$lambda$114$Type);
_.apply_0 = function apply_2044(arg0){
  return $lambda$114(this.$$outer_0, arg0);
}
;
function FileWrapper$lambda$115$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1815, $wnd.Function, $intern_22, FileWrapper$lambda$115$Type);
_.apply_0 = function apply_2045(arg0){
  return $lambda$115(this.$$outer_0, arg0);
}
;
function FileWrapper$lambda$116$Type(currentLocation_0){
  this.currentLocation_0 = currentLocation_0;
}

defineClass(1814, $wnd.Function, $intern_22, FileWrapper$lambda$116$Type);
_.apply_0 = function apply_2046(arg0){
  return $clinit_FileWrapper() , new CompletableFuture_0(new Pair(this.currentLocation_0, castTo(arg0, 12)));
}
;
function FileWrapper$lambda$117$Type($$outer_0, us_1, crypto_2, ourCap_3, endIndex_4, committer_6, network_7, startIndex_8, filesSize_9, dataKey_10, props_11, version_12, parentLocation_13, parentBat_14, parentParentKey_15, baseKey_16, monitor_17, fileData_18, legacyLocs_19){
  this.$$outer_0 = $$outer_0;
  this.us_1 = us_1;
  this.crypto_2 = crypto_2;
  this.ourCap_3 = ourCap_3;
  this.endIndex_4 = endIndex_4;
  this.committer_6 = committer_6;
  this.network_7 = network_7;
  this.startIndex_8 = startIndex_8;
  this.filesSize_9 = filesSize_9;
  this.dataKey_10 = dataKey_10;
  this.props_11 = props_11;
  this.version_12 = version_12;
  this.parentLocation_13 = parentLocation_13;
  this.parentBat_14 = parentBat_14;
  this.parentParentKey_15 = parentParentKey_15;
  this.baseKey_16 = baseKey_16;
  this.monitor_17 = monitor_17;
  this.fileData_18 = fileData_18;
  this.legacyLocs_19 = legacyLocs_19;
}

defineClass(1812, $wnd.Function, $intern_22, FileWrapper$lambda$117$Type);
_.apply_0 = function apply_2047(arg0){
  return $lambda$117(this.$$outer_0, this.us_1, this.crypto_2, this.ourCap_3, this.endIndex_4, this.committer_6, this.network_7, this.startIndex_8, this.filesSize_9, this.dataKey_10, this.props_11, this.version_12, this.parentLocation_13, this.parentBat_14, this.parentParentKey_15, this.baseKey_16, this.monitor_17, this.fileData_18, this.legacyLocs_19, arg0);
}
;
_.endIndex_4 = 0;
function FileWrapper$lambda$119$Type(us_0, currentOriginal_1, crypto_2, props_3, legacyLocs_4){
  this.us_0 = us_0;
  this.currentOriginal_1 = currentOriginal_1;
  this.crypto_2 = crypto_2;
  this.props_3 = props_3;
  this.legacyLocs_4 = legacyLocs_4;
}

defineClass(663, 1, {}, FileWrapper$lambda$119$Type);
_.get_0 = function get_154(){
  return lambda$119_0(this.us_0, this.currentOriginal_1, this.crypto_2, this.props_3, this.legacyLocs_4);
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$119$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$119$Type', 663);
function FileWrapper$lambda$120$Type(us_0, currentOriginal_1, crypto_2){
  this.us_0 = us_0;
  this.currentOriginal_1 = currentOriginal_1;
  this.crypto_2 = crypto_2;
}

defineClass(1818, $wnd.Function, $intern_22, FileWrapper$lambda$120$Type);
_.apply_0 = function apply_2048(arg0){
  return lambda$120_0(this.us_0, this.currentOriginal_1, this.crypto_2, arg0);
}
;
function FileWrapper$lambda$121$Type(us_0){
  this.us_0 = us_0;
}

defineClass(1819, $wnd.Function, $intern_22, FileWrapper$lambda$121$Type);
_.apply_0 = function apply_2049(arg0){
  return lambda$121_0(this.us_0, arg0);
}
;
function FileWrapper$lambda$122$Type(legacyLocs_0){
  this.legacyLocs_0 = legacyLocs_0;
}

defineClass(662, 1, {}, FileWrapper$lambda$122$Type);
_.get_0 = function get_155(){
  return $clinit_FileWrapper() , new CompletableFuture_0(new Pair($get_33(this.legacyLocs_0), ($clinit_Optional() , $clinit_Optional() , EMPTY)));
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$122$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$122$Type', 662);
function FileWrapper$lambda$123$Type($$outer_0, ourCap_1, endIndex_2, committer_4, network_5, startIndex_6, filesSize_7, dataKey_8, currentOriginal_9, props_10, version_11, us_12, parentLocation_13, parentBat_14, parentParentKey_15, baseKey_16, crypto_17, monitor_18, fileData_19){
  this.$$outer_0 = $$outer_0;
  this.ourCap_1 = ourCap_1;
  this.endIndex_2 = endIndex_2;
  this.committer_4 = committer_4;
  this.network_5 = network_5;
  this.startIndex_6 = startIndex_6;
  this.filesSize_7 = filesSize_7;
  this.dataKey_8 = dataKey_8;
  this.currentOriginal_9 = currentOriginal_9;
  this.props_10 = props_10;
  this.version_11 = version_11;
  this.us_12 = us_12;
  this.parentLocation_13 = parentLocation_13;
  this.parentBat_14 = parentBat_14;
  this.parentParentKey_15 = parentParentKey_15;
  this.baseKey_16 = baseKey_16;
  this.crypto_17 = crypto_17;
  this.monitor_18 = monitor_18;
  this.fileData_19 = fileData_19;
}

defineClass(1817, $wnd.Function, $intern_22, FileWrapper$lambda$123$Type);
_.apply_0 = function apply_2050(arg0){
  return $lambda$123(this.$$outer_0, this.ourCap_1, this.endIndex_2, this.committer_4, this.network_5, this.startIndex_6, this.filesSize_7, this.dataKey_8, this.currentOriginal_9, this.props_10, this.version_11, this.us_12, this.parentLocation_13, this.parentBat_14, this.parentParentKey_15, this.baseKey_16, this.crypto_17, this.monitor_18, this.fileData_19, arg0);
}
;
_.endIndex_2 = 0;
function FileWrapper$lambda$124$Type($$outer_0, ourCap_1, endIndex_2, committer_4, network_5, startIndex_6, internalEnd_7, internalStart_8, filesSize_9, raw_10, dataKey_11, currentOriginal_12, props_13, version_14, us_15, parentLocation_16, parentBat_17, parentParentKey_18, baseKey_19, nextChunkLocation_20, nextChunkBat_21, writerLink_22, crypto_23, monitor_24){
  this.$$outer_0 = $$outer_0;
  this.ourCap_1 = ourCap_1;
  this.endIndex_2 = endIndex_2;
  this.committer_4 = committer_4;
  this.network_5 = network_5;
  this.startIndex_6 = startIndex_6;
  this.internalEnd_7 = internalEnd_7;
  this.internalStart_8 = internalStart_8;
  this.filesSize_9 = filesSize_9;
  this.raw_10 = raw_10;
  this.dataKey_11 = dataKey_11;
  this.currentOriginal_12 = currentOriginal_12;
  this.props_13 = props_13;
  this.version_14 = version_14;
  this.us_15 = us_15;
  this.parentLocation_16 = parentLocation_16;
  this.parentBat_17 = parentBat_17;
  this.parentParentKey_18 = parentParentKey_18;
  this.baseKey_19 = baseKey_19;
  this.nextChunkLocation_20 = nextChunkLocation_20;
  this.nextChunkBat_21 = nextChunkBat_21;
  this.writerLink_22 = writerLink_22;
  this.crypto_23 = crypto_23;
  this.monitor_24 = monitor_24;
}

defineClass(1820, $wnd.Function, $intern_22, FileWrapper$lambda$124$Type);
_.apply_0 = function apply_2051(arg0){
  return $lambda$124(this.$$outer_0, this.ourCap_1, this.endIndex_2, this.committer_4, this.network_5, this.startIndex_6, this.internalEnd_7, this.internalStart_8, this.filesSize_9, this.raw_10, this.dataKey_11, this.currentOriginal_12, this.props_13, this.version_14, this.us_15, this.parentLocation_16, this.parentBat_17, this.parentParentKey_18, this.baseKey_19, this.nextChunkLocation_20, this.nextChunkBat_21, this.writerLink_22, this.crypto_23, this.monitor_24);
}
;
_.endIndex_2 = 0;
_.internalEnd_7 = 0;
_.internalStart_8 = 0;
function FileWrapper$lambda$125$Type($$outer_0, ourCap_1, endIndex_2, committer_4, network_5, startIndex_6, internalEnd_7, internalStart_8, filesSize_9){
  this.$$outer_0 = $$outer_0;
  this.ourCap_1 = ourCap_1;
  this.endIndex_2 = endIndex_2;
  this.committer_4 = committer_4;
  this.network_5 = network_5;
  this.startIndex_6 = startIndex_6;
  this.internalEnd_7 = internalEnd_7;
  this.internalStart_8 = internalStart_8;
  this.filesSize_9 = filesSize_9;
}

defineClass(1821, $wnd.Function, $intern_22, FileWrapper$lambda$125$Type);
_.apply_0 = function apply_2052(arg0){
  return $lambda$125(this.$$outer_0, this.ourCap_1, this.endIndex_2, this.committer_4, this.network_5, this.startIndex_6, this.internalEnd_7, this.internalStart_8, this.filesSize_9, arg0);
}
;
_.endIndex_2 = 0;
_.internalEnd_7 = 0;
_.internalStart_8 = 0;
function FileWrapper$lambda$126$Type($$outer_0, ourCap_1, endIndex_2, updatedBase_4, committer_5, network_6){
  this.$$outer_0 = $$outer_0;
  this.ourCap_1 = ourCap_1;
  this.endIndex_2 = endIndex_2;
  this.updatedBase_4 = updatedBase_4;
  this.committer_5 = committer_5;
  this.network_6 = network_6;
}

defineClass(1822, $wnd.Function, $intern_22, FileWrapper$lambda$126$Type);
_.apply_0 = function apply_2053(arg0){
  return $lambda$126(this.$$outer_0, this.ourCap_1, this.endIndex_2, this.updatedBase_4, this.committer_5, this.network_6, arg0);
}
;
_.endIndex_2 = 0;
function FileWrapper$lambda$127$Type(){
}

defineClass(665, 1, $intern_34, FileWrapper$lambda$127$Type);
_.apply_1 = function apply_2054(arg0, arg1){
  return $clinit_FileWrapper() , castTo(arg1, 43);
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$127$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$127$Type', 665);
function FileWrapper$lambda$128$Type($$outer_0, filename_1, fileData_2, isHidden_3, startIndex_4, endIndex_6, baseKey_8, overwriteExisting_9, network_10, crypto_11, monitor_12, firstChunkMapKey_13, streamSecret_14, firstBat_15, mirrorBat_16){
  this.$$outer_0 = $$outer_0;
  this.filename_1 = filename_1;
  this.fileData_2 = fileData_2;
  this.isHidden_3 = isHidden_3;
  this.startIndex_4 = startIndex_4;
  this.endIndex_6 = endIndex_6;
  this.baseKey_8 = baseKey_8;
  this.overwriteExisting_9 = overwriteExisting_9;
  this.network_10 = network_10;
  this.crypto_11 = crypto_11;
  this.monitor_12 = monitor_12;
  this.firstChunkMapKey_13 = firstChunkMapKey_13;
  this.streamSecret_14 = streamSecret_14;
  this.firstBat_15 = firstBat_15;
  this.mirrorBat_16 = mirrorBat_16;
}

defineClass(666, 1, {}, FileWrapper$lambda$128$Type);
_.apply_3 = function apply_2055(arg0, arg1){
  return $lambda$128(this.$$outer_0, this.filename_1, this.fileData_2, this.isHidden_3, this.startIndex_4, this.endIndex_6, this.baseKey_8, this.overwriteExisting_9, this.network_10, this.crypto_11, this.monitor_12, this.firstChunkMapKey_13, this.streamSecret_14, this.firstBat_15, this.mirrorBat_16, arg0, arg1);
}
;
_.endIndex_6 = 0;
_.isHidden_3 = false;
_.overwriteExisting_9 = false;
_.startIndex_4 = 0;
var Lpeergos_shared_user_fs_FileWrapper$lambda$128$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$128$Type', 666);
function FileWrapper$lambda$129$Type($$outer_0, network_1){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
}

defineClass(1724, $wnd.Function, $intern_22, FileWrapper$lambda$129$Type);
_.apply_0 = function apply_2056(arg0){
  return $lambda$129_0(this.$$outer_0, this.network_1, arg0);
}
;
function FileWrapper$lambda$130$Type($$outer_0, filename_1, network_2, fileData_3, startIndex_4, endIndex_6, crypto_8, monitor_9){
  this.$$outer_0 = $$outer_0;
  this.filename_1 = filename_1;
  this.network_2 = network_2;
  this.fileData_3 = fileData_3;
  this.startIndex_4 = startIndex_4;
  this.endIndex_6 = endIndex_6;
  this.crypto_8 = crypto_8;
  this.monitor_9 = monitor_9;
}

defineClass(1725, $wnd.Function, $intern_22, FileWrapper$lambda$130$Type);
_.apply_0 = function apply_2057(arg0){
  return $lambda$130_0(this.$$outer_0, this.filename_1, this.network_2, this.fileData_3, this.startIndex_4, this.endIndex_6, this.crypto_8, this.monitor_9, arg0);
}
;
_.endIndex_6 = 0;
_.startIndex_4 = 0;
function FileWrapper$lambda$131$Type(child_1, fileData_2, startIndex_3, endIndex_5, network_7, crypto_8, monitor_9){
  this.child_1 = child_1;
  this.fileData_2 = fileData_2;
  this.startIndex_3 = startIndex_3;
  this.endIndex_5 = endIndex_5;
  this.network_7 = network_7;
  this.crypto_8 = crypto_8;
  this.monitor_9 = monitor_9;
}

defineClass(667, 1, {}, FileWrapper$lambda$131$Type);
_.apply_3 = function apply_2058(arg0, arg1){
  return $lambda$131_0(this.child_1, this.fileData_2, this.startIndex_3, this.endIndex_5, this.network_7, this.crypto_8, this.monitor_9, arg0, arg1);
}
;
_.endIndex_5 = 0;
_.startIndex_3 = 0;
var Lpeergos_shared_user_fs_FileWrapper$lambda$131$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$131$Type', 667);
function FileWrapper$lambda$132$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1823, $wnd.Function, $intern_22, FileWrapper$lambda$132$Type);
_.apply_0 = function apply_2059(arg0){
  return $lambda$132_0(this.$$outer_0, arg0);
}
;
function FileWrapper$lambda$133$Type($$outer_0, updatedProperties_1, network_2){
  this.$$outer_0 = $$outer_0;
  this.updatedProperties_1 = updatedProperties_1;
  this.network_2 = network_2;
}

defineClass(668, 1, {}, FileWrapper$lambda$133$Type);
_.apply_3 = function apply_2060(arg0, arg1){
  return $lambda$133_0(this.$$outer_0, this.updatedProperties_1, this.network_2, arg0, arg1);
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$133$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$133$Type', 668);
function FileWrapper$lambda$134$Type($$outer_0, network_1){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
}

defineClass(1726, $wnd.Function, $intern_22, FileWrapper$lambda$134$Type);
_.apply_0 = function apply_2061(arg0){
  return $lambda$134_0(this.$$outer_0, this.network_1, arg0);
}
;
function FileWrapper$lambda$135$Type($$outer_0, committer_1, network_2, crypto_3){
  this.$$outer_0 = $$outer_0;
  this.committer_1 = committer_1;
  this.network_2 = network_2;
  this.crypto_3 = crypto_3;
}

defineClass(1265, $wnd.Function, $intern_22, FileWrapper$lambda$135$Type);
_.apply_0 = function apply_2062(arg0){
  return $lambda$135_0(this.$$outer_0, this.committer_1, this.network_2, this.crypto_3, arg0);
}
;
function FileWrapper$lambda$136$Type(p_0, committer_1, network_2, crypto_3){
  this.p_0 = p_0;
  this.committer_1 = committer_1;
  this.network_2 = network_2;
  this.crypto_3 = crypto_3;
}

defineClass(1824, $wnd.Function, $intern_22, FileWrapper$lambda$136$Type);
_.apply_0 = function apply_2063(arg0){
  return lambda$136(this.p_0, this.committer_1, this.network_2, this.crypto_3, arg0);
}
;
function FileWrapper$lambda$137$Type(requestedMirrorBat_0){
  this.requestedMirrorBat_0 = requestedMirrorBat_0;
}

defineClass(669, 1, {}, FileWrapper$lambda$137$Type);
_.get_0 = function get_156(){
  return $clinit_FileWrapper() , this.requestedMirrorBat_0;
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$137$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$137$Type', 669);
function FileWrapper$lambda$138$Type($$outer_0, committer_1, filename_2, isHidden_3, network_4, endIndex_5, fileData_7, startIndex_8, crypto_10, monitor_11, streamSecret_12, existingThumbnail_13, firstChunkMapKey_14, firstBat_15, mirrorBat_16, skipExisting_17, overwriteExisting_18, truncateExisting_19, requestedWriteKey_20, requestedBaseKey_21, requestedDataKey_22){
  this.$$outer_0 = $$outer_0;
  this.committer_1 = committer_1;
  this.filename_2 = filename_2;
  this.isHidden_3 = isHidden_3;
  this.network_4 = network_4;
  this.endIndex_5 = endIndex_5;
  this.fileData_7 = fileData_7;
  this.startIndex_8 = startIndex_8;
  this.crypto_10 = crypto_10;
  this.monitor_11 = monitor_11;
  this.streamSecret_12 = streamSecret_12;
  this.existingThumbnail_13 = existingThumbnail_13;
  this.firstChunkMapKey_14 = firstChunkMapKey_14;
  this.firstBat_15 = firstBat_15;
  this.mirrorBat_16 = mirrorBat_16;
  this.skipExisting_17 = skipExisting_17;
  this.overwriteExisting_18 = overwriteExisting_18;
  this.truncateExisting_19 = truncateExisting_19;
  this.requestedWriteKey_20 = requestedWriteKey_20;
  this.requestedBaseKey_21 = requestedBaseKey_21;
  this.requestedDataKey_22 = requestedDataKey_22;
}

defineClass(1727, $wnd.Function, $intern_22, FileWrapper$lambda$138$Type);
_.apply_0 = function apply_2064(arg0){
  return $lambda$138_0(this.$$outer_0, this.committer_1, this.filename_2, this.isHidden_3, this.network_4, this.endIndex_5, this.fileData_7, this.startIndex_8, this.crypto_10, this.monitor_11, this.streamSecret_12, this.existingThumbnail_13, this.firstChunkMapKey_14, this.firstBat_15, this.mirrorBat_16, this.skipExisting_17, this.overwriteExisting_18, this.truncateExisting_19, this.requestedWriteKey_20, this.requestedBaseKey_21, this.requestedDataKey_22, arg0);
}
;
_.endIndex_5 = 0;
_.isHidden_3 = false;
_.overwriteExisting_18 = false;
_.skipExisting_17 = false;
_.startIndex_8 = 0;
_.truncateExisting_19 = false;
function FileWrapper$lambda$139$Type($$outer_0, committer_1, filename_2, isHidden_3, network_4, endIndex_5, fileData_7, startIndex_8, crypto_10, monitor_11, streamSecret_12, existingThumbnail_13, firstChunkMapKey_14, firstBat_15, current_16, mirrorBat_17, skipExisting_18, overwriteExisting_19, truncateExisting_20, requestedWriteKey_21, requestedBaseKey_22, requestedDataKey_23){
  this.$$outer_0 = $$outer_0;
  this.committer_1 = committer_1;
  this.filename_2 = filename_2;
  this.isHidden_3 = isHidden_3;
  this.network_4 = network_4;
  this.endIndex_5 = endIndex_5;
  this.fileData_7 = fileData_7;
  this.startIndex_8 = startIndex_8;
  this.crypto_10 = crypto_10;
  this.monitor_11 = monitor_11;
  this.streamSecret_12 = streamSecret_12;
  this.existingThumbnail_13 = existingThumbnail_13;
  this.firstChunkMapKey_14 = firstChunkMapKey_14;
  this.firstBat_15 = firstBat_15;
  this.current_16 = current_16;
  this.mirrorBat_17 = mirrorBat_17;
  this.skipExisting_18 = skipExisting_18;
  this.overwriteExisting_19 = overwriteExisting_19;
  this.truncateExisting_20 = truncateExisting_20;
  this.requestedWriteKey_21 = requestedWriteKey_21;
  this.requestedBaseKey_22 = requestedBaseKey_22;
  this.requestedDataKey_23 = requestedDataKey_23;
}

defineClass(1825, $wnd.Function, $intern_22, FileWrapper$lambda$139$Type);
_.apply_0 = function apply_2065(arg0){
  return $lambda$139_0(this.$$outer_0, this.committer_1, this.filename_2, this.isHidden_3, this.network_4, this.endIndex_5, this.fileData_7, this.startIndex_8, this.crypto_10, this.monitor_11, this.streamSecret_12, this.existingThumbnail_13, this.firstChunkMapKey_14, this.firstBat_15, this.current_16, this.mirrorBat_17, this.skipExisting_18, this.overwriteExisting_19, this.truncateExisting_20, this.requestedWriteKey_21, this.requestedBaseKey_22, this.requestedDataKey_23, arg0);
}
;
_.endIndex_5 = 0;
_.isHidden_3 = false;
_.overwriteExisting_19 = false;
_.skipExisting_18 = false;
_.startIndex_8 = 0;
_.truncateExisting_20 = false;
function FileWrapper$lambda$14$Type(){
}

defineClass(1694, $wnd.Function, $intern_22, FileWrapper$lambda$14$Type);
_.apply_0 = function apply_2066(arg0){
  return lambda$14_9(arg0);
}
;
function FileWrapper$lambda$140$Type($$outer_0, committer_1, filename_2, isHidden_3, network_4, endIndex_5, fileData_7, startIndex_8, crypto_10, monitor_11, streamSecret_12, existingThumbnail_13, firstChunkMapKey_14, firstBat_15, current_16, mirrorBat_17, skipExisting_18, overwriteExisting_19, truncateExisting_20, requestedWriteKey_21, requestedBaseKey_22, requestedDataKey_23, latest_24){
  this.$$outer_0 = $$outer_0;
  this.committer_1 = committer_1;
  this.filename_2 = filename_2;
  this.isHidden_3 = isHidden_3;
  this.network_4 = network_4;
  this.endIndex_5 = endIndex_5;
  this.fileData_7 = fileData_7;
  this.startIndex_8 = startIndex_8;
  this.crypto_10 = crypto_10;
  this.monitor_11 = monitor_11;
  this.streamSecret_12 = streamSecret_12;
  this.existingThumbnail_13 = existingThumbnail_13;
  this.firstChunkMapKey_14 = firstChunkMapKey_14;
  this.firstBat_15 = firstBat_15;
  this.current_16 = current_16;
  this.mirrorBat_17 = mirrorBat_17;
  this.skipExisting_18 = skipExisting_18;
  this.overwriteExisting_19 = overwriteExisting_19;
  this.truncateExisting_20 = truncateExisting_20;
  this.requestedWriteKey_21 = requestedWriteKey_21;
  this.requestedBaseKey_22 = requestedBaseKey_22;
  this.requestedDataKey_23 = requestedDataKey_23;
  this.latest_24 = latest_24;
}

defineClass(1826, $wnd.Function, $intern_22, FileWrapper$lambda$140$Type);
_.apply_0 = function apply_2067(arg0){
  return $lambda$140_0(this.$$outer_0, this.committer_1, this.filename_2, this.isHidden_3, this.network_4, this.endIndex_5, this.fileData_7, this.startIndex_8, this.crypto_10, this.monitor_11, this.streamSecret_12, this.existingThumbnail_13, this.firstChunkMapKey_14, this.firstBat_15, this.current_16, this.mirrorBat_17, this.skipExisting_18, this.overwriteExisting_19, this.truncateExisting_20, this.requestedWriteKey_21, this.requestedBaseKey_22, this.requestedDataKey_23, this.latest_24, arg0);
}
;
_.endIndex_5 = 0;
_.isHidden_3 = false;
_.overwriteExisting_19 = false;
_.skipExisting_18 = false;
_.startIndex_8 = 0;
_.truncateExisting_20 = false;
function $apply_11(this$static, arg0, arg1, arg2){
  return lambda$141(this$static.committer_0, this$static.filename_1, this$static.isHidden_2, this$static.network_3, this$static.childProps_4, this$static.crypto_5, arg0, arg1, arg2);
}

function FileWrapper$lambda$141$Type(committer_0, filename_1, isHidden_2, network_3, childProps_4, crypto_5){
  this.committer_0 = committer_0;
  this.filename_1 = filename_1;
  this.isHidden_2 = isHidden_2;
  this.network_3 = network_3;
  this.childProps_4 = childProps_4;
  this.crypto_5 = crypto_5;
}

defineClass(670, 1, {}, FileWrapper$lambda$141$Type);
_.isHidden_2 = false;
var Lpeergos_shared_user_fs_FileWrapper$lambda$141$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$141$Type', 670);
function FileWrapper$lambda$142$Type(){
}

defineClass(1831, $wnd.Function, {}, FileWrapper$lambda$142$Type);
_.accept_5 = function accept_165(arg0){
  $clinit_FileWrapper();
}
;
function FileWrapper$lambda$143$Type(updatedChild_0, latestSnapshot_1, committer_2, filename_3, isHidden_4, network_5){
  this.updatedChild_0 = updatedChild_0;
  this.latestSnapshot_1 = latestSnapshot_1;
  this.committer_2 = committer_2;
  this.filename_3 = filename_3;
  this.isHidden_4 = isHidden_4;
  this.network_5 = network_5;
}

defineClass(1832, $wnd.Function, $intern_22, FileWrapper$lambda$143$Type);
_.apply_0 = function apply_2068(arg0){
  return lambda$143(this.updatedChild_0, this.latestSnapshot_1, this.committer_2, this.filename_3, this.isHidden_4, this.network_5, arg0);
}
;
_.isHidden_4 = false;
function FileWrapper$lambda$144$Type($$outer_0, updatePropsIfNecessary_1, endIndex_2, committer_4, fileData_5, startIndex_6, network_8, crypto_9, monitor_10, child_11){
  this.$$outer_0 = $$outer_0;
  this.updatePropsIfNecessary_1 = updatePropsIfNecessary_1;
  this.endIndex_2 = endIndex_2;
  this.committer_4 = committer_4;
  this.fileData_5 = fileData_5;
  this.startIndex_6 = startIndex_6;
  this.network_8 = network_8;
  this.crypto_9 = crypto_9;
  this.monitor_10 = monitor_10;
  this.child_11 = child_11;
}

defineClass(1827, $wnd.Function, $intern_22, FileWrapper$lambda$144$Type);
_.apply_0 = function apply_2069(arg0){
  return $lambda$144(this.$$outer_0, this.updatePropsIfNecessary_1, this.endIndex_2, this.committer_4, this.fileData_5, this.startIndex_6, this.network_8, this.crypto_9, this.monitor_10, this.child_11, arg0);
}
;
_.endIndex_2 = 0;
_.startIndex_6 = 0;
function FileWrapper$lambda$145$Type(updatePropsIfNecessary_0, endIndex_1, updatedSnapshot_3, committer_4, fileData_5, startIndex_6, network_8, crypto_9, monitor_10, child_11){
  this.updatePropsIfNecessary_0 = updatePropsIfNecessary_0;
  this.endIndex_1 = endIndex_1;
  this.updatedSnapshot_3 = updatedSnapshot_3;
  this.committer_4 = committer_4;
  this.fileData_5 = fileData_5;
  this.startIndex_6 = startIndex_6;
  this.network_8 = network_8;
  this.crypto_9 = crypto_9;
  this.monitor_10 = monitor_10;
  this.child_11 = child_11;
}

defineClass(1833, $wnd.Function, $intern_22, FileWrapper$lambda$145$Type);
_.apply_0 = function apply_2070(arg0){
  return lambda$145(this.updatePropsIfNecessary_0, this.endIndex_1, this.updatedSnapshot_3, this.committer_4, this.fileData_5, this.startIndex_6, this.network_8, this.crypto_9, this.monitor_10, this.child_11);
}
;
_.endIndex_1 = 0;
_.startIndex_6 = 0;
function FileWrapper$lambda$146$Type(updatePropsIfNecessary_0, endIndex_1, updatedSnapshot_4, committer_5, fileData_6, startIndex_7, network_9, crypto_10, monitor_11){
  this.updatePropsIfNecessary_0 = updatePropsIfNecessary_0;
  this.endIndex_1 = endIndex_1;
  this.updatedSnapshot_4 = updatedSnapshot_4;
  this.committer_5 = committer_5;
  this.fileData_6 = fileData_6;
  this.startIndex_7 = startIndex_7;
  this.network_9 = network_9;
  this.crypto_10 = crypto_10;
  this.monitor_11 = monitor_11;
}

defineClass(1834, $wnd.Function, $intern_22, FileWrapper$lambda$146$Type);
_.apply_0 = function apply_2071(arg0){
  return lambda$146(this.updatePropsIfNecessary_0, this.endIndex_1, this.updatedSnapshot_4, this.committer_5, this.fileData_6, this.startIndex_7, this.network_9, this.crypto_10, this.monitor_11, arg0);
}
;
_.endIndex_1 = 0;
_.startIndex_7 = 0;
function FileWrapper$lambda$147$Type(updatePropsIfNecessary_0, updatedChild_1, endIndex_2){
  this.updatePropsIfNecessary_0 = updatePropsIfNecessary_0;
  this.updatedChild_1 = updatedChild_1;
  this.endIndex_2 = endIndex_2;
}

defineClass(1835, $wnd.Function, $intern_22, FileWrapper$lambda$147$Type);
_.apply_0 = function apply_2072(arg0){
  return lambda$147_0(this.updatePropsIfNecessary_0, this.updatedChild_1, this.endIndex_2, arg0);
}
;
_.endIndex_2 = 0;
function FileWrapper$lambda$148$Type(){
}

defineClass(1828, $wnd.Function, $intern_22, FileWrapper$lambda$148$Type);
_.apply_0 = function apply_2073(arg0){
  return $clinit_FileWrapper() , new Pair(castTo(arg0, 43), ($clinit_Optional() , $clinit_Optional() , EMPTY));
}
;
function FileWrapper$lambda$149$Type(monitor_0){
  this.monitor_0 = monitor_0;
}

defineClass(1829, $wnd.Function, $intern_22, FileWrapper$lambda$149$Type);
_.apply_0 = function apply_2074(arg0){
  return lambda$149_0(this.monitor_0, arg0);
}
;
function FileWrapper$lambda$15$Type(ownerName_0, version_1, network_2){
  this.ownerName_0 = ownerName_0;
  this.version_1 = version_1;
  this.network_2 = network_2;
}

defineClass(1695, $wnd.Function, $intern_22, FileWrapper$lambda$15$Type);
_.apply_0 = function apply_2075(arg0){
  return lambda$15_5(this.ownerName_0, this.version_1, this.network_2, arg0);
}
;
function FileWrapper$lambda$153$Type($$outer_0, committer_1, filename_2, network_3, isHidden_4, endIndex_5, timestamp_7, monitor_8, fileData_9, streamSecret_10, crypto_11, existingThumbnail_12, fileKey_15, dataKey_16, parentLocation_17, parentBat_18, dirParentKey_19, firstChunkMapKey_20, firstBat_21, fileWriteKey_22, current_23, mirrorBat_24){
  this.$$outer_0 = $$outer_0;
  this.committer_1 = committer_1;
  this.filename_2 = filename_2;
  this.network_3 = network_3;
  this.isHidden_4 = isHidden_4;
  this.endIndex_5 = endIndex_5;
  this.timestamp_7 = timestamp_7;
  this.monitor_8 = monitor_8;
  this.fileData_9 = fileData_9;
  this.streamSecret_10 = streamSecret_10;
  this.crypto_11 = crypto_11;
  this.existingThumbnail_12 = existingThumbnail_12;
  this.fileKey_15 = fileKey_15;
  this.dataKey_16 = dataKey_16;
  this.parentLocation_17 = parentLocation_17;
  this.parentBat_18 = parentBat_18;
  this.dirParentKey_19 = dirParentKey_19;
  this.firstChunkMapKey_20 = firstChunkMapKey_20;
  this.firstBat_21 = firstBat_21;
  this.fileWriteKey_22 = fileWriteKey_22;
  this.current_23 = current_23;
  this.mirrorBat_24 = mirrorBat_24;
}

defineClass(1830, $wnd.Function, $intern_22, FileWrapper$lambda$153$Type);
_.apply_0 = function apply_2076(arg0){
  return $lambda$153(this.$$outer_0, this.committer_1, this.filename_2, this.network_3, this.isHidden_4, this.endIndex_5, this.timestamp_7, this.monitor_8, this.fileData_9, this.streamSecret_10, this.crypto_11, this.existingThumbnail_12, this.fileKey_15, this.dataKey_16, this.parentLocation_17, this.parentBat_18, this.dirParentKey_19, this.firstChunkMapKey_20, this.firstBat_21, this.fileWriteKey_22, this.current_23, this.mirrorBat_24, arg0);
}
;
_.endIndex_5 = 0;
_.isHidden_4 = false;
function FileWrapper$lambda$154$Type($$outer_0, committer_1, filename_2, network_3, isHidden_4, mimeType_5, endIndex_6, timestamp_8, monitor_9, fileData_10, streamSecret_11, crypto_12, existingThumbnail_13, fileKey_16, dataKey_17, parentLocation_18, parentBat_19, dirParentKey_20, firstChunkMapKey_21, firstBat_22, fileWriteKey_23, current_24, mirrorBat_25){
  this.$$outer_0 = $$outer_0;
  this.committer_1 = committer_1;
  this.filename_2 = filename_2;
  this.network_3 = network_3;
  this.isHidden_4 = isHidden_4;
  this.mimeType_5 = mimeType_5;
  this.endIndex_6 = endIndex_6;
  this.timestamp_8 = timestamp_8;
  this.monitor_9 = monitor_9;
  this.fileData_10 = fileData_10;
  this.streamSecret_11 = streamSecret_11;
  this.crypto_12 = crypto_12;
  this.existingThumbnail_13 = existingThumbnail_13;
  this.fileKey_16 = fileKey_16;
  this.dataKey_17 = dataKey_17;
  this.parentLocation_18 = parentLocation_18;
  this.parentBat_19 = parentBat_19;
  this.dirParentKey_20 = dirParentKey_20;
  this.firstChunkMapKey_21 = firstChunkMapKey_21;
  this.firstBat_22 = firstBat_22;
  this.fileWriteKey_23 = fileWriteKey_23;
  this.current_24 = current_24;
  this.mirrorBat_25 = mirrorBat_25;
}

defineClass(1836, $wnd.Function, $intern_22, FileWrapper$lambda$154$Type);
_.apply_0 = function apply_2077(arg0){
  return $lambda$154(this.$$outer_0, this.committer_1, this.filename_2, this.network_3, this.isHidden_4, this.mimeType_5, this.endIndex_6, this.timestamp_8, this.monitor_9, this.fileData_10, this.streamSecret_11, this.crypto_12, this.existingThumbnail_13, this.fileKey_16, this.dataKey_17, this.parentLocation_18, this.parentBat_19, this.dirParentKey_20, this.firstChunkMapKey_21, this.firstBat_22, this.fileWriteKey_23, this.current_24, this.mirrorBat_25, arg0);
}
;
_.endIndex_6 = 0;
_.isHidden_4 = false;
function FileWrapper$lambda$155$Type($$outer_0, committer_1, fileWriteCap_2, filename_3, network_4, isHidden_5, mimeType_6, endIndex_7, timestamp_9, actualStreamSecret_10, monitor_11, fileData_12){
  this.$$outer_0 = $$outer_0;
  this.committer_1 = committer_1;
  this.fileWriteCap_2 = fileWriteCap_2;
  this.filename_3 = filename_3;
  this.network_4 = network_4;
  this.isHidden_5 = isHidden_5;
  this.mimeType_6 = mimeType_6;
  this.endIndex_7 = endIndex_7;
  this.timestamp_9 = timestamp_9;
  this.actualStreamSecret_10 = actualStreamSecret_10;
  this.monitor_11 = monitor_11;
  this.fileData_12 = fileData_12;
}

defineClass(1837, $wnd.Function, $intern_22, FileWrapper$lambda$155$Type);
_.apply_0 = function apply_2078(arg0){
  return $lambda$155(this.$$outer_0, this.committer_1, this.fileWriteCap_2, this.filename_3, this.network_4, this.isHidden_5, this.mimeType_6, this.endIndex_7, this.timestamp_9, this.actualStreamSecret_10, this.monitor_11, this.fileData_12, arg0);
}
;
_.endIndex_7 = 0;
_.isHidden_5 = false;
function FileWrapper$lambda$156$Type($$outer_0, cwd_1, committer_2, fileWriteCap_3, filename_4, network_5, isHidden_6, mimeType_7, endIndex_8, timestamp_10, actualStreamSecret_11, monitor_12){
  this.$$outer_0 = $$outer_0;
  this.cwd_1 = cwd_1;
  this.committer_2 = committer_2;
  this.fileWriteCap_3 = fileWriteCap_3;
  this.filename_4 = filename_4;
  this.network_5 = network_5;
  this.isHidden_6 = isHidden_6;
  this.mimeType_7 = mimeType_7;
  this.endIndex_8 = endIndex_8;
  this.timestamp_10 = timestamp_10;
  this.actualStreamSecret_11 = actualStreamSecret_11;
  this.monitor_12 = monitor_12;
}

defineClass(1839, $wnd.Function, $intern_22, FileWrapper$lambda$156$Type);
_.apply_0 = function apply_2079(arg0){
  return $lambda$156(this.$$outer_0, this.cwd_1, this.committer_2, this.fileWriteCap_3, this.filename_4, this.network_5, this.isHidden_6, this.mimeType_7, this.endIndex_8, this.timestamp_10, this.actualStreamSecret_11, this.monitor_12, arg0);
}
;
_.endIndex_8 = 0;
_.isHidden_6 = false;
function FileWrapper$lambda$157$Type($$outer_0, filename_1, fileWriteCap_2){
  this.$$outer_0 = $$outer_0;
  this.filename_1 = filename_1;
  this.fileWriteCap_2 = fileWriteCap_2;
}

defineClass(1838, $wnd.Function, $intern_22, FileWrapper$lambda$157$Type);
_.apply_0 = function apply_2080(arg0){
  return $lambda$157(this.$$outer_0, this.filename_1, this.fileWriteCap_2, arg0);
}
;
function FileWrapper$lambda$158$Type($$outer_0, network_1, crypto_2){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
  this.crypto_2 = crypto_2;
}

defineClass(674, 1, {}, FileWrapper$lambda$158$Type);
_.apply_3 = function apply_2081(arg0, arg1){
  return $lambda$158(this.$$outer_0, this.network_1, this.crypto_2, arg0, arg1);
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$158$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$158$Type', 674);
function FileWrapper$lambda$159$Type(){
}

defineClass(1840, $wnd.Function, {}, FileWrapper$lambda$159$Type);
_.accept_5 = function accept_166(arg0){
  $clinit_FileWrapper();
}
;
function FileWrapper$lambda$16$Type(parentRFP_0, ownerName_1){
  this.parentRFP_0 = parentRFP_0;
  this.ownerName_1 = ownerName_1;
}

defineClass(1761, $wnd.Function, $intern_22, FileWrapper$lambda$16$Type);
_.apply_0 = function apply_2082(arg0){
  return lambda$16_8(this.parentRFP_0, this.ownerName_1, arg0);
}
;
function FileWrapper$lambda$160$Type($$outer_0, latestSnapshot_1, committer_2, network_3){
  this.$$outer_0 = $$outer_0;
  this.latestSnapshot_1 = latestSnapshot_1;
  this.committer_2 = committer_2;
  this.network_3 = network_3;
}

defineClass(1841, $wnd.Function, $intern_22, FileWrapper$lambda$160$Type);
_.apply_0 = function apply_2083(arg0){
  return $lambda$160(this.$$outer_0, this.latestSnapshot_1, this.committer_2, this.network_3, arg0);
}
;
function FileWrapper$lambda$161$Type(){
}

defineClass(1842, $wnd.Function, $intern_22, FileWrapper$lambda$161$Type);
_.apply_0 = function apply_2084(arg0){
  return $clinit_FileWrapper() , new Pair(castTo(arg0, 43), ($clinit_Boolean() , true));
}
;
function FileWrapper$lambda$162$Type(latestSnapshot_0){
  this.latestSnapshot_0 = latestSnapshot_0;
}

defineClass(1843, $wnd.Function, $intern_22, FileWrapper$lambda$162$Type);
_.apply_0 = function apply_2085(arg0){
  return $clinit_FileWrapper() , new Pair(this.latestSnapshot_0, ($clinit_Boolean() , false));
}
;
function FileWrapper$lambda$163$Type(){
}

defineClass(1728, $wnd.Function, $intern_22, FileWrapper$lambda$163$Type);
_.apply_0 = function apply_2086(arg0){
  return $clinit_FileWrapper() , castToBoolean(castTo(arg0, 20).right);
}
;
function FileWrapper$lambda$164$Type($$outer_0, snapshot_1, committer_2, fileWriteCap_3, filename_4, network_5, isHidden_6, fileSize_7, createdDateTime_9, streamSecret_10, fileData_11){
  this.$$outer_0 = $$outer_0;
  this.snapshot_1 = snapshot_1;
  this.committer_2 = committer_2;
  this.fileWriteCap_3 = fileWriteCap_3;
  this.filename_4 = filename_4;
  this.network_5 = network_5;
  this.isHidden_6 = isHidden_6;
  this.fileSize_7 = fileSize_7;
  this.createdDateTime_9 = createdDateTime_9;
  this.streamSecret_10 = streamSecret_10;
  this.fileData_11 = fileData_11;
}

defineClass(1729, $wnd.Function, $intern_22, FileWrapper$lambda$164$Type);
_.apply_0 = function apply_2087(arg0){
  return $lambda$164_0(this.$$outer_0, this.snapshot_1, this.committer_2, this.fileWriteCap_3, this.filename_4, this.network_5, this.isHidden_6, this.fileSize_7, this.createdDateTime_9, this.streamSecret_10, this.fileData_11, arg0);
}
;
_.fileSize_7 = 0;
_.isHidden_6 = false;
function FileWrapper$lambda$165$Type($$outer_0, snapshot_1, committer_2, fileWriteCap_3, filename_4, network_5, isHidden_6, fileSize_7, createdDateTime_9, streamSecret_10, fileData_11){
  this.$$outer_0 = $$outer_0;
  this.snapshot_1 = snapshot_1;
  this.committer_2 = committer_2;
  this.fileWriteCap_3 = fileWriteCap_3;
  this.filename_4 = filename_4;
  this.network_5 = network_5;
  this.isHidden_6 = isHidden_6;
  this.fileSize_7 = fileSize_7;
  this.createdDateTime_9 = createdDateTime_9;
  this.streamSecret_10 = streamSecret_10;
  this.fileData_11 = fileData_11;
}

defineClass(1844, $wnd.Function, $intern_22, FileWrapper$lambda$165$Type);
_.apply_0 = function apply_2088(arg0){
  return $lambda$165_0(this.$$outer_0, this.snapshot_1, this.committer_2, this.fileWriteCap_3, this.filename_4, this.network_5, this.isHidden_6, this.fileSize_7, this.createdDateTime_9, this.streamSecret_10, this.fileData_11, arg0);
}
;
_.fileSize_7 = 0;
_.isHidden_6 = false;
function FileWrapper$lambda$166$Type($$outer_0, snapshot_1, committer_2, fileWriteCap_3, filename_4, network_5, isHidden_6, mimeType_7, fileSize_8, createdDateTime_10, streamSecret_11){
  this.$$outer_0 = $$outer_0;
  this.snapshot_1 = snapshot_1;
  this.committer_2 = committer_2;
  this.fileWriteCap_3 = fileWriteCap_3;
  this.filename_4 = filename_4;
  this.network_5 = network_5;
  this.isHidden_6 = isHidden_6;
  this.mimeType_7 = mimeType_7;
  this.fileSize_8 = fileSize_8;
  this.createdDateTime_10 = createdDateTime_10;
  this.streamSecret_11 = streamSecret_11;
}

defineClass(1845, $wnd.Function, $intern_22, FileWrapper$lambda$166$Type);
_.apply_0 = function apply_2089(arg0){
  return $lambda$166_0(this.$$outer_0, this.snapshot_1, this.committer_2, this.fileWriteCap_3, this.filename_4, this.network_5, this.isHidden_6, this.mimeType_7, this.fileSize_8, this.createdDateTime_10, this.streamSecret_11, arg0);
}
;
_.fileSize_8 = 0;
_.isHidden_6 = false;
function FileWrapper$lambda$167$Type(){
}

defineClass(1846, $wnd.Function, {}, FileWrapper$lambda$167$Type);
_.accept_5 = function accept_167(arg0){
  $clinit_FileWrapper();
}
;
function FileWrapper$lambda$168$Type($$outer_0, base_1, fileName_2, mimeType_3, fileSize_4, updatedDateTime_6, createdDateTime_7, isHidden_8, streamSecret_9, committer_10, network_11, replaceExistingThumbnail_12, fileData_13){
  this.$$outer_0 = $$outer_0;
  this.base_1 = base_1;
  this.fileName_2 = fileName_2;
  this.mimeType_3 = mimeType_3;
  this.fileSize_4 = fileSize_4;
  this.updatedDateTime_6 = updatedDateTime_6;
  this.createdDateTime_7 = createdDateTime_7;
  this.isHidden_8 = isHidden_8;
  this.streamSecret_9 = streamSecret_9;
  this.committer_10 = committer_10;
  this.network_11 = network_11;
  this.replaceExistingThumbnail_12 = replaceExistingThumbnail_12;
  this.fileData_13 = fileData_13;
}

defineClass(1730, $wnd.Function, $intern_22, FileWrapper$lambda$168$Type);
_.apply_0 = function apply_2090(arg0){
  return $lambda$168(this.$$outer_0, this.base_1, this.fileName_2, this.mimeType_3, this.fileSize_4, this.updatedDateTime_6, this.createdDateTime_7, this.isHidden_8, this.streamSecret_9, this.committer_10, this.network_11, this.replaceExistingThumbnail_12, this.fileData_13, arg0);
}
;
_.fileSize_4 = 0;
_.replaceExistingThumbnail_12 = false;
function FileWrapper$lambda$169$Type($$outer_0, base_1, fileName_2, mimeType_3, fileSize_4, updatedDateTime_6, createdDateTime_7, isHidden_8, streamSecret_9, fileOpt_10, committer_11, network_12){
  this.$$outer_0 = $$outer_0;
  this.base_1 = base_1;
  this.fileName_2 = fileName_2;
  this.mimeType_3 = mimeType_3;
  this.fileSize_4 = fileSize_4;
  this.updatedDateTime_6 = updatedDateTime_6;
  this.createdDateTime_7 = createdDateTime_7;
  this.isHidden_8 = isHidden_8;
  this.streamSecret_9 = streamSecret_9;
  this.fileOpt_10 = fileOpt_10;
  this.committer_11 = committer_11;
  this.network_12 = network_12;
}

defineClass(1847, $wnd.Function, $intern_22, FileWrapper$lambda$169$Type);
_.apply_0 = function apply_2091(arg0){
  return $lambda$169(this.$$outer_0, this.base_1, this.fileName_2, this.mimeType_3, this.fileSize_4, this.updatedDateTime_6, this.createdDateTime_7, this.isHidden_8, this.streamSecret_9, this.fileOpt_10, this.committer_11, this.network_12, arg0);
}
;
_.fileSize_4 = 0;
function FileWrapper$lambda$17$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(381, $wnd.Function, $intern_22, FileWrapper$lambda$17$Type);
_.apply_0 = function apply_2092(arg0){
  return $lambda$17_12(this.$$outer_0, arg0);
}
;
function FileWrapper$lambda$170$Type(monitor_0){
  this.monitor_0 = monitor_0;
}

defineClass(1731, $wnd.Function, $intern_22, FileWrapper$lambda$170$Type);
_.apply_0 = function apply_2093(arg0){
  return lambda$170(this.monitor_0, arg0);
}
;
function FileWrapper$lambda$171$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1732, $wnd.Function, $intern_22, FileWrapper$lambda$171$Type);
_.apply_0 = function apply_2094(arg0){
  return $lambda$171(this.$$outer_0, arg0);
}
;
function FileWrapper$lambda$172$Type($$outer_0, crypto_1, expectedSize_2, fileData_5, network_7, monitor_8, mirrorBat_9){
  this.$$outer_0 = $$outer_0;
  this.crypto_1 = crypto_1;
  this.expectedSize_2 = expectedSize_2;
  this.filename_4 = '.blocked-usernames.txt';
  this.fileData_5 = fileData_5;
  this.isHidden_6 = true;
  this.network_7 = network_7;
  this.monitor_8 = monitor_8;
  this.mirrorBat_9 = mirrorBat_9;
}

defineClass(1733, $wnd.Function, $intern_22, FileWrapper$lambda$172$Type);
_.apply_0 = function apply_2095(arg0){
  return $lambda$172(this.$$outer_0, this.crypto_1, this.expectedSize_2, this.filename_4, this.fileData_5, this.isHidden_6, this.network_7, this.monitor_8, this.mirrorBat_9, arg0);
}
;
_.expectedSize_2 = 0;
_.isHidden_6 = false;
function FileWrapper$lambda$173$Type(){
}

defineClass(1848, $wnd.Function, $intern_22, FileWrapper$lambda$173$Type);
_.apply_0 = function apply_2096(arg0){
  return $clinit_FileWrapper() , ($ensureUnmodified(castTo(arg0, 19)) , castTo(arg0, 19).props).streamSecret;
}
;
function FileWrapper$lambda$174$Type(child_0, crypto_1){
  this.child_0 = child_0;
  this.crypto_1 = crypto_1;
}

defineClass(1849, $wnd.Function, $intern_22, FileWrapper$lambda$174$Type);
_.apply_0 = function apply_2097(arg0){
  return lambda$174(this.child_0, this.crypto_1, arg0);
}
;
function FileWrapper$lambda$175$Type(secret_0){
  this.secret_0 = secret_0;
}

defineClass(1851, $wnd.Function, $intern_22, FileWrapper$lambda$175$Type);
_.apply_0 = function apply_2098(arg0){
  return lambda$175(this.secret_0, arg0);
}
;
function FileWrapper$lambda$176$Type(crypto_0){
  this.crypto_0 = crypto_0;
}

defineClass(675, 1, {}, FileWrapper$lambda$176$Type);
_.get_0 = function get_157(){
  return lambda$176(this.crypto_0);
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$176$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$176$Type', 675);
function FileWrapper$lambda$177$Type($$outer_0, child_1, expectedSize_2, filename_4, fileData_5, isHidden_6, network_7, crypto_8, monitor_9, mirrorBat_10){
  this.$$outer_0 = $$outer_0;
  this.child_1 = child_1;
  this.expectedSize_2 = expectedSize_2;
  this.filename_4 = filename_4;
  this.fileData_5 = fileData_5;
  this.isHidden_6 = isHidden_6;
  this.network_7 = network_7;
  this.crypto_8 = crypto_8;
  this.monitor_9 = monitor_9;
  this.mirrorBat_10 = mirrorBat_10;
}

defineClass(1850, $wnd.Function, $intern_22, FileWrapper$lambda$177$Type);
_.apply_0 = function apply_2099(arg0){
  return $lambda$177_0(this.$$outer_0, this.child_1, this.expectedSize_2, this.filename_4, this.fileData_5, this.isHidden_6, this.network_7, this.crypto_8, this.monitor_9, this.mirrorBat_10, arg0);
}
;
_.expectedSize_2 = 0;
_.isHidden_6 = false;
function FileWrapper$lambda$178$Type(){
}

defineClass(1852, $wnd.Function, $intern_22, FileWrapper$lambda$178$Type);
_.apply_0 = function apply_2100(arg0){
  return $clinit_FileWrapper() , valueOf_2(($ensureUnmodified(castTo(arg0, 19)) , castTo(arg0, 19).props).size_0);
}
;
function FileWrapper$lambda$179$Type(){
}

defineClass(1853, $wnd.Function, $intern_22, FileWrapper$lambda$179$Type);
_.apply_0 = function apply_2101(arg0){
  return $clinit_FileWrapper() , castTo(arg0, 19).pointer.capability.rBaseKey;
}
;
function FileWrapper$lambda$18$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1696, $wnd.Function, $intern_22, FileWrapper$lambda$18$Type);
_.apply_0 = function apply_2102(arg0){
  return $lambda$18_6(this.$$outer_0, arg0);
}
;
function FileWrapper$lambda$180$Type(committer_0, fileData_1, inputStartIndex_2, endIndex_4, network_6, crypto_7, monitor_8, existingChild_9){
  this.committer_0 = committer_0;
  this.fileData_1 = fileData_1;
  this.inputStartIndex_2 = inputStartIndex_2;
  this.endIndex_4 = endIndex_4;
  this.network_6 = network_6;
  this.crypto_7 = crypto_7;
  this.monitor_8 = monitor_8;
  this.existingChild_9 = existingChild_9;
}

defineClass(1734, $wnd.Function, $intern_22, FileWrapper$lambda$180$Type);
_.apply_0 = function apply_2103(arg0){
  return lambda$180(this.committer_0, this.fileData_1, this.inputStartIndex_2, this.endIndex_4, this.network_6, this.crypto_7, this.monitor_8, this.existingChild_9, arg0);
}
;
_.endIndex_4 = 0;
_.inputStartIndex_2 = 0;
function FileWrapper$lambda$181$Type(committer_0, fileData_1, inputStartIndex_2, endIndex_4, network_6, crypto_7, monitor_8){
  this.committer_0 = committer_0;
  this.fileData_1 = fileData_1;
  this.inputStartIndex_2 = inputStartIndex_2;
  this.endIndex_4 = endIndex_4;
  this.network_6 = network_6;
  this.crypto_7 = crypto_7;
  this.monitor_8 = monitor_8;
}

defineClass(1854, $wnd.Function, $intern_22, FileWrapper$lambda$181$Type);
_.apply_0 = function apply_2104(arg0){
  return lambda$181(this.committer_0, this.fileData_1, this.inputStartIndex_2, this.endIndex_4, this.network_6, this.crypto_7, this.monitor_8, arg0);
}
;
_.endIndex_4 = 0;
_.inputStartIndex_2 = 0;
function FileWrapper$lambda$182$Type(mirrorBat_0){
  this.mirrorBat_0 = mirrorBat_0;
}

defineClass(676, 1, {}, FileWrapper$lambda$182$Type);
_.get_0 = function get_158(){
  return $clinit_FileWrapper() , this.mirrorBat_0;
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$182$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$182$Type', 676);
function FileWrapper$lambda$183$Type($$outer_0, newFolderName_1, requestedBaseSymmetricKey_2, desiredBat_3, isSystemFolder_4, mirrorBat_5, network_6, crypto_7){
  this.$$outer_0 = $$outer_0;
  this.newFolderName_1 = newFolderName_1;
  this.requestedBaseSymmetricKey_2 = requestedBaseSymmetricKey_2;
  this.desiredBat_3 = desiredBat_3;
  this.isSystemFolder_4 = isSystemFolder_4;
  this.mirrorBat_5 = mirrorBat_5;
  this.network_6 = network_6;
  this.crypto_7 = crypto_7;
}

defineClass(678, 1, {}, FileWrapper$lambda$183$Type);
_.apply_3 = function apply_2105(arg0, arg1){
  return $lambda$183_0(this.$$outer_0, this.newFolderName_1, this.requestedBaseSymmetricKey_2, this.desiredBat_3, this.isSystemFolder_4, this.mirrorBat_5, this.network_6, this.crypto_7, arg0, arg1);
}
;
_.isSystemFolder_4 = false;
var Lpeergos_shared_user_fs_FileWrapper$lambda$183$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$183$Type', 678);
function FileWrapper$lambda$184$Type(mirrorBat_0){
  this.mirrorBat_0 = mirrorBat_0;
}

defineClass(677, 1, {}, FileWrapper$lambda$184$Type);
_.get_0 = function get_159(){
  return $clinit_FileWrapper() , this.mirrorBat_0;
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$184$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$184$Type', 677);
function FileWrapper$lambda$185$Type($$outer_0, network_1){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
}

defineClass(1735, $wnd.Function, $intern_22, FileWrapper$lambda$185$Type);
_.apply_0 = function apply_2106(arg0){
  return $lambda$185_0(this.$$outer_0, this.network_1, arg0);
}
;
function FileWrapper$lambda$186$Type($$outer_0, newFolderName_1, fullVersion_2, committer_3, network_4, requestedBaseReadKey_5, requestedBaseWriteKey_6, desiredMapKey_7, desiredBat_8, isSystemFolder_9, mirrorBat_10, crypto_11){
  this.$$outer_0 = $$outer_0;
  this.newFolderName_1 = newFolderName_1;
  this.fullVersion_2 = fullVersion_2;
  this.committer_3 = committer_3;
  this.network_4 = network_4;
  this.requestedBaseReadKey_5 = requestedBaseReadKey_5;
  this.requestedBaseWriteKey_6 = requestedBaseWriteKey_6;
  this.desiredMapKey_7 = desiredMapKey_7;
  this.desiredBat_8 = desiredBat_8;
  this.isSystemFolder_9 = isSystemFolder_9;
  this.mirrorBat_10 = mirrorBat_10;
  this.crypto_11 = crypto_11;
}

defineClass(1736, $wnd.Function, $intern_22, FileWrapper$lambda$186$Type);
_.apply_0 = function apply_2107(arg0){
  return $lambda$186_0(this.$$outer_0, this.newFolderName_1, this.fullVersion_2, this.committer_3, this.network_4, this.requestedBaseReadKey_5, this.requestedBaseWriteKey_6, this.desiredMapKey_7, this.desiredBat_8, this.isSystemFolder_9, this.mirrorBat_10, this.crypto_11, arg0);
}
;
_.isSystemFolder_9 = false;
function FileWrapper$lambda$187$Type(mirrorBat_0){
  this.mirrorBat_0 = mirrorBat_0;
}

defineClass(679, 1, {}, FileWrapper$lambda$187$Type);
_.get_0 = function get_160(){
  return $clinit_FileWrapper() , this.mirrorBat_0;
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$187$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$187$Type', 679);
function FileWrapper$lambda$188$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1855, $wnd.Function, $intern_22, FileWrapper$lambda$188$Type);
_.apply_0 = function apply_2108(arg0){
  return $lambda$188_0(this.$$outer_0, arg0);
}
;
function FileWrapper$lambda$189$Type($$outer_0, elements_1, isSystemFolder_2, mirrorBat_3, network_4, crypto_5){
  this.$$outer_0 = $$outer_0;
  this.elements_1 = elements_1;
  this.isSystemFolder_2 = isSystemFolder_2;
  this.mirrorBat_3 = mirrorBat_3;
  this.network_4 = network_4;
  this.crypto_5 = crypto_5;
}

defineClass(680, 1, {}, FileWrapper$lambda$189$Type);
_.apply_3 = function apply_2109(arg0, arg1){
  return $lambda$189(this.$$outer_0, this.elements_1, this.isSystemFolder_2, this.mirrorBat_3, this.network_4, this.crypto_5, arg0, arg1);
}
;
_.isSystemFolder_2 = false;
var Lpeergos_shared_user_fs_FileWrapper$lambda$189$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$189$Type', 680);
function FileWrapper$lambda$19$Type($$outer_0, childsEntryWriter_1, network_2, version_3){
  this.$$outer_0 = $$outer_0;
  this.childsEntryWriter_1 = childsEntryWriter_1;
  this.network_2 = network_2;
  this.version_3 = version_3;
}

defineClass(1697, $wnd.Function, $intern_22, FileWrapper$lambda$19$Type);
_.apply_0 = function apply_2110(arg0){
  return $lambda$19_9(this.$$outer_0, this.childsEntryWriter_1, this.network_2, this.version_3, arg0);
}
;
function FileWrapper$lambda$190$Type(){
}

defineClass(1737, $wnd.Function, $intern_22, FileWrapper$lambda$190$Type);
_.apply_0 = function apply_2111(arg0){
  return $clinit_FileWrapper() , castTo(castTo(arg0, 20).right, 19);
}
;
function FileWrapper$lambda$191$Type(isSystemFolder_0, mirrorBat_1, network_2, crypto_3, committer_4){
  this.isSystemFolder_0 = isSystemFolder_0;
  this.mirrorBat_1 = mirrorBat_1;
  this.network_2 = network_2;
  this.crypto_3 = crypto_3;
  this.committer_4 = committer_4;
}

defineClass(465, 1, $intern_34, FileWrapper$lambda$191$Type);
_.apply_1 = function apply_2112(arg0, arg1){
  return lambda$191(this.isSystemFolder_0, this.mirrorBat_1, this.network_2, this.crypto_3, this.committer_4, arg0, arg1);
}
;
_.isSystemFolder_0 = false;
var Lpeergos_shared_user_fs_FileWrapper$lambda$191$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$191$Type', 465);
function FileWrapper$lambda$192$Type(){
}

defineClass(466, 1, $intern_34, FileWrapper$lambda$192$Type);
_.apply_1 = function apply_2113(arg0, arg1){
  return $clinit_FileWrapper() , castTo(arg1, 20);
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$192$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$192$Type', 466);
function FileWrapper$lambda$193$Type(mirrorBat_0){
  this.mirrorBat_0 = mirrorBat_0;
}

defineClass(681, 1, {}, FileWrapper$lambda$193$Type);
_.get_0 = function get_161(){
  return $clinit_FileWrapper() , this.mirrorBat_0;
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$193$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$193$Type', 681);
function FileWrapper$lambda$194$Type($$outer_0, newFolderName_1, crypto_2, network_3, fullVersion_4, committer_5, requestedBaseReadKey_6, requestedBaseWriteKey_7, desiredMapKey_8, desiredBat_9, isSystemFolder_10, mirrorBat_11){
  this.$$outer_0 = $$outer_0;
  this.newFolderName_1 = newFolderName_1;
  this.crypto_2 = crypto_2;
  this.network_3 = network_3;
  this.fullVersion_4 = fullVersion_4;
  this.committer_5 = committer_5;
  this.requestedBaseReadKey_6 = requestedBaseReadKey_6;
  this.requestedBaseWriteKey_7 = requestedBaseWriteKey_7;
  this.desiredMapKey_8 = desiredMapKey_8;
  this.desiredBat_9 = desiredBat_9;
  this.isSystemFolder_10 = isSystemFolder_10;
  this.mirrorBat_11 = mirrorBat_11;
}

defineClass(1738, $wnd.Function, $intern_22, FileWrapper$lambda$194$Type);
_.apply_0 = function apply_2114(arg0){
  return $lambda$194_0(this.$$outer_0, this.newFolderName_1, this.crypto_2, this.network_3, this.fullVersion_4, this.committer_5, this.requestedBaseReadKey_6, this.requestedBaseWriteKey_7, this.desiredMapKey_8, this.desiredBat_9, this.isSystemFolder_10, this.mirrorBat_11, arg0);
}
;
_.isSystemFolder_10 = false;
function FileWrapper$lambda$195$Type($$outer_0, newFolderName_1, crypto_2, network_3){
  this.$$outer_0 = $$outer_0;
  this.newFolderName_1 = newFolderName_1;
  this.crypto_2 = crypto_2;
  this.network_3 = network_3;
}

defineClass(1856, $wnd.Function, $intern_22, FileWrapper$lambda$195$Type);
_.apply_0 = function apply_2115(arg0){
  return $lambda$195_0(this.$$outer_0, this.newFolderName_1, this.crypto_2, this.network_3, arg0);
}
;
function FileWrapper$lambda$196$Type(newFolderName_0, crypto_1, network_2){
  this.newFolderName_0 = newFolderName_0;
  this.crypto_1 = crypto_1;
  this.network_2 = network_2;
}

defineClass(1857, $wnd.Function, $intern_22, FileWrapper$lambda$196$Type);
_.apply_0 = function apply_2116(arg0){
  return lambda$196_0(this.newFolderName_0, this.crypto_1, this.network_2, arg0);
}
;
function FileWrapper$lambda$197$Type(x_0){
  this.x_0 = x_0;
}

defineClass(1858, $wnd.Function, $intern_22, FileWrapper$lambda$197$Type);
_.apply_0 = function apply_2117(arg0){
  return lambda$197(this.x_0, arg0);
}
;
function FileWrapper$lambda$198$Type($$outer_0, parent_1, newFilename_2, userContext_3, ourPath_4, currentProps_5){
  this.$$outer_0 = $$outer_0;
  this.parent_1 = parent_1;
  this.newFilename_2 = newFilename_2;
  this.userContext_3 = userContext_3;
  this.ourPath_4 = ourPath_4;
  this.currentProps_5 = currentProps_5;
}

defineClass(1739, $wnd.Function, $intern_22, FileWrapper$lambda$198$Type);
_.apply_0 = function apply_2118(arg0){
  return $lambda$198_0(this.$$outer_0, this.parent_1, this.newFilename_2, this.userContext_3, this.ourPath_4, this.currentProps_5, arg0);
}
;
function FileWrapper$lambda$199$Type($$outer_0, parent_1, us_2, newFilename_3, userContext_4, ourPath_5, nodeToUpdate_6, newProps_7){
  this.$$outer_0 = $$outer_0;
  this.parent_1 = parent_1;
  this.us_2 = us_2;
  this.newFilename_3 = newFilename_3;
  this.userContext_4 = userContext_4;
  this.ourPath_5 = ourPath_5;
  this.nodeToUpdate_6 = nodeToUpdate_6;
  this.newProps_7 = newProps_7;
}

defineClass(682, 1, {}, FileWrapper$lambda$199$Type);
_.apply_3 = function apply_2119(arg0, arg1){
  return $lambda$199_0(this.$$outer_0, this.parent_1, this.us_2, this.newFilename_3, this.userContext_4, this.ourPath_5, this.nodeToUpdate_6, this.newProps_7, arg0, arg1);
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$199$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$199$Type', 682);
function FileWrapper$lambda$2$Type($$outer_0, network_1){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
}

defineClass(539, $wnd.Function, $intern_22, FileWrapper$lambda$2$Type);
_.apply_0 = function apply_2120(arg0){
  return $lambda$2_26(this.$$outer_0, this.network_1, arg0);
}
;
function FileWrapper$lambda$20$Type(){
}

defineClass(1698, $wnd.Function, $intern_22, FileWrapper$lambda$20$Type);
_.apply_0 = function apply_2121(arg0){
  return $clinit_FileWrapper() , castTo(arg0, 151).cap.writer;
}
;
function FileWrapper$lambda$200$Type(parent_0, committer_1, us_2, newFilename_3, userContext_4){
  this.parent_0 = parent_0;
  this.committer_1 = committer_1;
  this.us_2 = us_2;
  this.newFilename_3 = newFilename_3;
  this.userContext_4 = userContext_4;
}

defineClass(1860, $wnd.Function, $intern_22, FileWrapper$lambda$200$Type);
_.apply_0 = function apply_2122(arg0){
  return lambda$200(this.parent_0, this.committer_1, this.us_2, this.newFilename_3, this.userContext_4, arg0);
}
;
function FileWrapper$lambda$201$Type(userContext_0, ourPath_1, newFilename_2, committer_3){
  this.userContext_0 = userContext_0;
  this.ourPath_1 = ourPath_1;
  this.newFilename_2 = newFilename_2;
  this.committer_3 = committer_3;
}

defineClass(1861, $wnd.Function, $intern_22, FileWrapper$lambda$201$Type);
_.apply_0 = function apply_2123(arg0){
  return lambda$201(this.userContext_0, this.ourPath_1, this.newFilename_2, this.committer_3, arg0);
}
;
function FileWrapper$lambda$202$Type(parent_0, userContext_1){
  this.parent_0 = parent_0;
  this.userContext_1 = userContext_1;
}

defineClass(1859, $wnd.Function, $intern_22, FileWrapper$lambda$202$Type);
_.apply_0 = function apply_2124(arg0){
  return lambda$202(this.parent_0, this.userContext_1, arg0);
}
;
function FileWrapper$lambda$204$Type($$outer_0, parent_1, newName_2, hasher_3, network_4, updatedProperties_5){
  this.$$outer_0 = $$outer_0;
  this.parent_1 = parent_1;
  this.newName_2 = newName_2;
  this.hasher_3 = hasher_3;
  this.network_4 = network_4;
  this.updatedProperties_5 = updatedProperties_5;
}

defineClass(683, 1, {}, FileWrapper$lambda$204$Type);
_.apply_3 = function apply_2125(arg0, arg1){
  return $lambda$204_0(this.$$outer_0, this.parent_1, this.newName_2, this.hasher_3, this.network_4, this.updatedProperties_5, arg0, arg1);
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$204$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$204$Type', 683);
function FileWrapper$lambda$205$Type(parent_0, newName_1, network_3){
  this.parent_0 = parent_0;
  this.newName_1 = newName_1;
  this.network_3 = network_3;
}

defineClass(1862, $wnd.Function, $intern_22, FileWrapper$lambda$205$Type);
_.apply_0 = function apply_2126(arg0){
  return lambda$205(this.parent_0, this.newName_1, this.network_3, arg0);
}
;
function FileWrapper$lambda$206$Type($$outer_0, parent_1, hasher_2, network_3){
  this.$$outer_0 = $$outer_0;
  this.parent_1 = parent_1;
  this.hasher_2 = hasher_2;
  this.network_3 = network_3;
}

defineClass(1863, $wnd.Function, $intern_22, FileWrapper$lambda$206$Type);
_.apply_0 = function apply_2127(arg0){
  return $lambda$206(this.$$outer_0, this.parent_1, this.hasher_2, this.network_3, arg0);
}
;
function FileWrapper$lambda$207$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1865, $wnd.Function, $intern_22, FileWrapper$lambda$207$Type);
_.apply_0 = function apply_2128(arg0){
  return $lambda$207(this.$$outer_0, arg0);
}
;
function FileWrapper$lambda$208$Type(){
}

defineClass(1866, $wnd.Function, $intern_22, FileWrapper$lambda$208$Type);
_.apply_0 = function apply_2129(arg0){
  return $clinit_FileWrapper() , new ByteArrayWrapper($getMapKey(castTo(arg0, 151).cap));
}
;
function FileWrapper$lambda$209$Type($$outer_0, s_1, comitter_2, updatedProperties_3, network_4){
  this.$$outer_0 = $$outer_0;
  this.s_1 = s_1;
  this.comitter_2 = comitter_2;
  this.updatedProperties_3 = updatedProperties_3;
  this.network_4 = network_4;
}

defineClass(1864, $wnd.Function, $intern_22, FileWrapper$lambda$209$Type);
_.apply_0 = function apply_2130(arg0){
  return $lambda$209(this.$$outer_0, this.s_1, this.comitter_2, this.updatedProperties_3, this.network_4);
}
;
function FileWrapper$lambda$21$Type(entryWriter_0, ownername_1, owner_2, network_3, version_4, caps_5){
  this.entryWriter_0 = entryWriter_0;
  this.ownername_1 = ownername_1;
  this.owner_2 = owner_2;
  this.network_3 = network_3;
  this.version_4 = version_4;
  this.caps_5 = caps_5;
}

defineClass(1699, $wnd.Function, $intern_22, FileWrapper$lambda$21$Type);
_.apply_0 = function apply_2131(arg0){
  return lambda$21_6(this.entryWriter_0, this.ownername_1, this.owner_2, this.network_3, this.version_4, this.caps_5, arg0);
}
;
function FileWrapper$lambda$210$Type(){
}

defineClass(1740, $wnd.Function, $intern_22, FileWrapper$lambda$210$Type);
_.apply_0 = function apply_2132(arg0){
  return $clinit_FileWrapper() , $clinit_Boolean() , true;
}
;
function FileWrapper$lambda$211$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1741, $wnd.Function, $intern_22, FileWrapper$lambda$211$Type);
_.apply_0 = function apply_2133(arg0){
  return $lambda$211(this.$$outer_0, arg0);
}
;
function FileWrapper$lambda$213$Type($$outer_0, parent_1, ourPath_2, context_3){
  this.$$outer_0 = $$outer_0;
  this.parent_1 = parent_1;
  this.ourPath_2 = ourPath_2;
  this.context_3 = context_3;
}

defineClass(1742, $wnd.Function, $intern_22, FileWrapper$lambda$213$Type);
_.apply_0 = function apply_2134(arg0){
  return $remove_16(this.$$outer_0, this.parent_1, this.ourPath_2, this.context_3);
}
;
function FileWrapper$lambda$214$Type(){
}

defineClass(1743, $wnd.Function, $intern_22, FileWrapper$lambda$214$Type);
_.apply_0 = function apply_2135(arg0){
  return $clinit_FileWrapper() , $clinit_Boolean() , true;
}
;
function FileWrapper$lambda$215$Type(target_0, context_1){
  this.target_0 = target_0;
  this.context_1 = context_1;
}

defineClass(685, 1, {}, FileWrapper$lambda$215$Type);
_.get_0 = function get_162(){
  return lambda$215(this.target_0, this.context_1);
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$215$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$215$Type', 685);
function FileWrapper$lambda$216$Type($$outer_0, target_1, targetMirrorBatId_2, network_3, crypto_4){
  this.$$outer_0 = $$outer_0;
  this.target_1 = target_1;
  this.targetMirrorBatId_2 = targetMirrorBatId_2;
  this.network_3 = network_3;
  this.crypto_4 = crypto_4;
}

defineClass(686, 1, {}, FileWrapper$lambda$216$Type);
_.apply_3 = function apply_2136(arg0, arg1){
  return $lambda$216(this.$$outer_0, this.target_1, this.targetMirrorBatId_2, this.network_3, this.crypto_4, arg0, arg1);
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$216$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$216$Type', 686);
function FileWrapper$lambda$217$Type($$outer_0, target_1, targetMirrorBatId_2, network_3, crypto_4, committer_5){
  this.$$outer_0 = $$outer_0;
  this.target_1 = target_1;
  this.targetMirrorBatId_2 = targetMirrorBatId_2;
  this.network_3 = network_3;
  this.crypto_4 = crypto_4;
  this.committer_5 = committer_5;
}

defineClass(1867, $wnd.Function, $intern_22, FileWrapper$lambda$217$Type);
_.apply_0 = function apply_2137(arg0){
  return $lambda$217(this.$$outer_0, this.target_1, this.targetMirrorBatId_2, this.network_3, this.crypto_4, this.committer_5, arg0);
}
;
function FileWrapper$lambda$218$Type(){
}

defineClass(1744, $wnd.Function, $intern_22, FileWrapper$lambda$218$Type);
_.apply_0 = function apply_2138(arg0){
  return $clinit_FileWrapper() , $clinit_Boolean() , true;
}
;
function FileWrapper$lambda$219$Type($$outer_0, existingThumbnail_1, targetMirrorBat_2, network_3, crypto_4, committer_5, target_6, version_7){
  this.$$outer_0 = $$outer_0;
  this.existingThumbnail_1 = existingThumbnail_1;
  this.targetMirrorBat_2 = targetMirrorBat_2;
  this.network_3 = network_3;
  this.crypto_4 = crypto_4;
  this.committer_5 = committer_5;
  this.target_6 = target_6;
  this.version_7 = version_7;
}

defineClass(1745, $wnd.Function, $intern_22, FileWrapper$lambda$219$Type);
_.apply_0 = function apply_2139(arg0){
  return $lambda$219(this.$$outer_0, this.existingThumbnail_1, this.targetMirrorBat_2, this.network_3, this.crypto_4, this.committer_5, this.target_6, this.version_7, arg0);
}
;
function FileWrapper$lambda$22$Type(){
}

defineClass(1762, $wnd.Function, $intern_22, FileWrapper$lambda$22$Type);
_.apply_0 = function apply_2140(arg0){
  return $clinit_FileWrapper() , castTo(arg0, 151).cap;
}
;
function FileWrapper$lambda$220$Type($$outer_0, existingThumbnail_1, targetMirrorBat_2, network_3, crypto_4, committer_5, target_6, newBaseR_7, newBaseW_8, newMapKey_9, newBat_10, version_11, newCap_12){
  this.$$outer_0 = $$outer_0;
  this.existingThumbnail_1 = existingThumbnail_1;
  this.targetMirrorBat_2 = targetMirrorBat_2;
  this.network_3 = network_3;
  this.crypto_4 = crypto_4;
  this.committer_5 = committer_5;
  this.target_6 = target_6;
  this.newBaseR_7 = newBaseR_7;
  this.newBaseW_8 = newBaseW_8;
  this.newMapKey_9 = newMapKey_9;
  this.newBat_10 = newBat_10;
  this.version_11 = version_11;
  this.newCap_12 = newCap_12;
}

defineClass(1868, $wnd.Function, $intern_22, FileWrapper$lambda$220$Type);
_.apply_0 = function apply_2141(arg0){
  return $lambda$220(this.$$outer_0, this.existingThumbnail_1, this.targetMirrorBat_2, this.network_3, this.crypto_4, this.committer_5, this.target_6, this.newBaseR_7, this.newBaseW_8, this.newMapKey_9, this.newBat_10, this.version_11, this.newCap_12, arg0);
}
;
function FileWrapper$lambda$221$Type(existingThumbnail_0, targetMirrorBat_1, network_2, crypto_3, committer_4, newCap_5, target_6, children_7){
  this.existingThumbnail_0 = existingThumbnail_0;
  this.targetMirrorBat_1 = targetMirrorBat_1;
  this.network_2 = network_2;
  this.crypto_3 = crypto_3;
  this.committer_4 = committer_4;
  this.newCap_5 = newCap_5;
  this.target_6 = target_6;
  this.children_7 = children_7;
}

defineClass(1870, $wnd.Function, $intern_22, FileWrapper$lambda$221$Type);
_.apply_0 = function apply_2142(arg0){
  return lambda$221(this.existingThumbnail_0, this.targetMirrorBat_1, this.network_2, this.crypto_3, this.committer_4, this.newCap_5, this.target_6, this.children_7, arg0);
}
;
function FileWrapper$lambda$222$Type(existingThumbnail_0, targetMirrorBat_1, network_2, crypto_3, committer_4, children_5, versionWithDir_6){
  this.existingThumbnail_0 = existingThumbnail_0;
  this.targetMirrorBat_1 = targetMirrorBat_1;
  this.network_2 = network_2;
  this.crypto_3 = crypto_3;
  this.committer_4 = committer_4;
  this.children_5 = children_5;
  this.versionWithDir_6 = versionWithDir_6;
}

defineClass(1871, $wnd.Function, $intern_22, FileWrapper$lambda$222$Type);
_.apply_0 = function apply_2143(arg0){
  return lambda$222(this.existingThumbnail_0, this.targetMirrorBat_1, this.network_2, this.crypto_3, this.committer_4, this.children_5, this.versionWithDir_6, arg0);
}
;
function FileWrapper$lambda$223$Type(existingThumbnail_0, targetMirrorBat_1, network_2, crypto_3, committer_4, newTarget_5){
  this.existingThumbnail_0 = existingThumbnail_0;
  this.targetMirrorBat_1 = targetMirrorBat_1;
  this.network_2 = network_2;
  this.crypto_3 = crypto_3;
  this.committer_4 = committer_4;
  this.newTarget_5 = newTarget_5;
}

defineClass(687, 1, $intern_34, FileWrapper$lambda$223$Type);
_.apply_1 = function apply_2144(arg0, arg1){
  return lambda$223(this.existingThumbnail_0, this.targetMirrorBat_1, this.network_2, this.crypto_3, this.committer_4, this.newTarget_5, arg0, arg1);
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$223$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$223$Type', 687);
function FileWrapper$lambda$224$Type(){
}

defineClass(688, 1, $intern_34, FileWrapper$lambda$224$Type);
_.apply_1 = function apply_2145(arg0, arg1){
  return $clinit_FileWrapper() , $merge_3(castTo(arg0, 43), castTo(arg1, 43));
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$224$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$224$Type', 688);
function FileWrapper$lambda$225$Type(child_0, existingThumbnail_1, targetMirrorBat_2, network_3, crypto_4, s_5, committer_6){
  this.child_0 = child_0;
  this.existingThumbnail_1 = existingThumbnail_1;
  this.targetMirrorBat_2 = targetMirrorBat_2;
  this.network_3 = network_3;
  this.crypto_4 = crypto_4;
  this.s_5 = s_5;
  this.committer_6 = committer_6;
}

defineClass(1872, $wnd.Function, $intern_22, FileWrapper$lambda$225$Type);
_.apply_0 = function apply_2146(arg0){
  return lambda$225(this.child_0, this.existingThumbnail_1, this.targetMirrorBat_2, this.network_3, this.crypto_4, this.s_5, this.committer_6, arg0);
}
;
function FileWrapper$lambda$226$Type($$outer_0, target_1, committer_2, network_3, crypto_4, existingThumbnail_5, targetMirrorBat_6){
  this.$$outer_0 = $$outer_0;
  this.target_1 = target_1;
  this.committer_2 = committer_2;
  this.network_3 = network_3;
  this.crypto_4 = crypto_4;
  this.existingThumbnail_5 = existingThumbnail_5;
  this.targetMirrorBat_6 = targetMirrorBat_6;
}

defineClass(1869, $wnd.Function, $intern_22, FileWrapper$lambda$226$Type);
_.apply_0 = function apply_2147(arg0){
  return $lambda$226(this.$$outer_0, this.target_1, this.committer_2, this.network_3, this.crypto_4, this.existingThumbnail_5, this.targetMirrorBat_6, arg0);
}
;
function FileWrapper$lambda$227$Type(){
}

defineClass(1873, $wnd.Function, {}, FileWrapper$lambda$227$Type);
_.accept_5 = function accept_168(arg0){
  $clinit_FileWrapper();
}
;
function FileWrapper$lambda$228$Type($$outer_0, target_1, committer_2, network_3, crypto_4, snapshot_5, existingThumbnail_6, targetMirrorBat_7){
  this.$$outer_0 = $$outer_0;
  this.target_1 = target_1;
  this.committer_2 = committer_2;
  this.network_3 = network_3;
  this.crypto_4 = crypto_4;
  this.snapshot_5 = snapshot_5;
  this.existingThumbnail_6 = existingThumbnail_6;
  this.targetMirrorBat_7 = targetMirrorBat_7;
}

defineClass(1874, $wnd.Function, $intern_22, FileWrapper$lambda$228$Type);
_.apply_0 = function apply_2148(arg0){
  return $lambda$228(this.$$outer_0, this.target_1, this.committer_2, this.network_3, this.crypto_4, this.snapshot_5, this.existingThumbnail_6, this.targetMirrorBat_7, arg0);
}
;
function FileWrapper$lambda$229$Type(){
}

defineClass(1875, $wnd.Function, {}, FileWrapper$lambda$229$Type);
_.accept_5 = function accept_169(arg0){
  $clinit_FileWrapper();
}
;
function FileWrapper$lambda$23$Type(entryWriter_0, ownername_1, fullVersion_2, owner_3, network_4, version_5){
  this.entryWriter_0 = entryWriter_0;
  this.ownername_1 = ownername_1;
  this.fullVersion_2 = fullVersion_2;
  this.owner_3 = owner_3;
  this.network_4 = network_4;
  this.version_5 = version_5;
}

defineClass(1763, $wnd.Function, $intern_22, FileWrapper$lambda$23$Type);
_.apply_0 = function apply_2149(arg0){
  return lambda$23_5(this.entryWriter_0, this.ownername_1, this.fullVersion_2, this.owner_3, this.network_4, this.version_5, arg0);
}
;
function FileWrapper$lambda$230$Type(target_0, committer_1, network_2, crypto_3){
  this.target_0 = target_0;
  this.committer_1 = committer_1;
  this.network_2 = network_2;
  this.crypto_3 = crypto_3;
}

defineClass(1876, $wnd.Function, $intern_22, FileWrapper$lambda$230$Type);
_.apply_0 = function apply_2150(arg0){
  return lambda$230(this.target_0, this.committer_1, this.network_2, this.crypto_3, arg0);
}
;
function FileWrapper$lambda$231$Type(){
}

defineClass(1746, $wnd.Function, $intern_22, FileWrapper$lambda$231$Type);
_.apply_0 = function apply_2151(arg0){
  return $clinit_FileWrapper() , castToBoolean(arg0);
}
;
function FileWrapper$lambda$24$Type(entryWriter_0, ownername_1, fullVersion_2, owner_3, network_4, version_5){
  this.entryWriter_0 = entryWriter_0;
  this.ownername_1 = ownername_1;
  this.fullVersion_2 = fullVersion_2;
  this.owner_3 = owner_3;
  this.network_4 = network_4;
  this.version_5 = version_5;
}

defineClass(1764, $wnd.Function, $intern_22, FileWrapper$lambda$24$Type);
_.apply_0 = function apply_2152(arg0){
  return lambda$24_3(this.entryWriter_0, this.ownername_1, this.fullVersion_2, this.owner_3, this.network_4, this.version_5, arg0);
}
;
function FileWrapper$lambda$25$Type($$outer_0, network_1, version_2){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
  this.version_2 = version_2;
}

defineClass(1700, $wnd.Function, $intern_22, FileWrapper$lambda$25$Type);
_.apply_0 = function apply_2153(arg0){
  return $lambda$25_4(this.$$outer_0, this.network_1, this.version_2, arg0);
}
;
function FileWrapper$lambda$250$Type(currentCap_0, signer_1, tid_2, hasher_3, network_4, committer_5){
  this.currentCap_0 = currentCap_0;
  this.signer_1 = signer_1;
  this.tid_2 = tid_2;
  this.hasher_3 = hasher_3;
  this.network_4 = network_4;
  this.committer_5 = committer_5;
}

defineClass(1747, $wnd.Function, $intern_22, FileWrapper$lambda$250$Type);
_.apply_0 = function apply_2154(arg0){
  return lambda$250(this.currentCap_0, this.signer_1, this.tid_2, this.hasher_3, this.network_4, this.committer_5, arg0);
}
;
function FileWrapper$lambda$251$Type(currentCap_0, signer_1, tid_2, hasher_3, network_4, committer_5, current_6){
  this.currentCap_0 = currentCap_0;
  this.signer_1 = signer_1;
  this.tid_2 = tid_2;
  this.hasher_3 = hasher_3;
  this.network_4 = network_4;
  this.committer_5 = committer_5;
  this.current_6 = current_6;
}

defineClass(1877, $wnd.Function, $intern_22, FileWrapper$lambda$251$Type);
_.apply_0 = function apply_2155(arg0){
  return lambda$251(this.currentCap_0, this.signer_1, this.tid_2, this.hasher_3, this.network_4, this.committer_5, this.current_6, arg0);
}
;
function FileWrapper$lambda$252$Type(currentCap_0, signer_1, tid_2, hasher_3, network_4, committer_5, chunk_6, streamSecret_7){
  this.currentCap_0 = currentCap_0;
  this.signer_1 = signer_1;
  this.tid_2 = tid_2;
  this.hasher_3 = hasher_3;
  this.network_4 = network_4;
  this.committer_5 = committer_5;
  this.chunk_6 = chunk_6;
  this.streamSecret_7 = streamSecret_7;
}

defineClass(1878, $wnd.Function, $intern_22, FileWrapper$lambda$252$Type);
_.apply_0 = function apply_2156(arg0){
  return lambda$252(this.currentCap_0, this.signer_1, this.tid_2, this.hasher_3, this.network_4, this.committer_5, this.chunk_6, this.streamSecret_7, arg0);
}
;
function FileWrapper$lambda$253$Type(currentCap_0, signer_1, tid_2, hasher_3, network_4, deletedVersion_5, committer_6){
  this.currentCap_0 = currentCap_0;
  this.signer_1 = signer_1;
  this.tid_2 = tid_2;
  this.hasher_3 = hasher_3;
  this.network_4 = network_4;
  this.deletedVersion_5 = deletedVersion_5;
  this.committer_6 = committer_6;
}

defineClass(1881, $wnd.Function, $intern_22, FileWrapper$lambda$253$Type);
_.apply_0 = function apply_2157(arg0){
  return lambda$253(this.currentCap_0, this.signer_1, this.tid_2, this.hasher_3, this.network_4, this.deletedVersion_5, this.committer_6, arg0);
}
;
function FileWrapper$lambda$254$Type(signer_0, tid_1, hasher_2, network_3, committer_4, chunk_5, currentCap_6){
  this.signer_0 = signer_0;
  this.tid_1 = tid_1;
  this.hasher_2 = hasher_2;
  this.network_3 = network_3;
  this.committer_4 = committer_4;
  this.chunk_5 = chunk_5;
  this.currentCap_6 = currentCap_6;
}

defineClass(1879, $wnd.Function, $intern_22, FileWrapper$lambda$254$Type);
_.apply_0 = function apply_2158(arg0){
  return lambda$254(this.signer_0, this.tid_1, this.hasher_2, this.network_3, this.committer_4, this.chunk_5, this.currentCap_6, arg0);
}
;
function FileWrapper$lambda$255$Type(signer_0, tid_1, hasher_2, network_3, committer_4, updatedVersion_5){
  this.signer_0 = signer_0;
  this.tid_1 = tid_1;
  this.hasher_2 = hasher_2;
  this.network_3 = network_3;
  this.committer_4 = committer_4;
  this.updatedVersion_5 = updatedVersion_5;
}

defineClass(1882, $wnd.Function, $intern_22, FileWrapper$lambda$255$Type);
_.apply_0 = function apply_2159(arg0){
  return lambda$255(this.signer_0, this.tid_1, this.hasher_2, this.network_3, this.committer_4, this.updatedVersion_5, arg0);
}
;
function FileWrapper$lambda$256$Type(signer_0, tid_1, hasher_2, network_3, committer_4){
  this.signer_0 = signer_0;
  this.tid_1 = tid_1;
  this.hasher_2 = hasher_2;
  this.network_3 = network_3;
  this.committer_4 = committer_4;
}

defineClass(689, 1, $intern_34, FileWrapper$lambda$256$Type);
_.apply_1 = function apply_2160(arg0, arg1){
  return lambda$256(this.signer_0, this.tid_1, this.hasher_2, this.network_3, this.committer_4, arg0, arg1);
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$256$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$256$Type', 689);
function FileWrapper$lambda$257$Type(){
}

defineClass(690, 1, $intern_34, FileWrapper$lambda$257$Type);
_.apply_1 = function apply_2161(arg0, arg1){
  return $clinit_FileWrapper() , castTo(arg1, 43);
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$257$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$257$Type', 690);
function FileWrapper$lambda$258$Type(currentCap_0, signer_1, network_2, committer_3){
  this.currentCap_0 = currentCap_0;
  this.signer_1 = signer_1;
  this.network_2 = network_2;
  this.committer_3 = committer_3;
}

defineClass(1880, $wnd.Function, $intern_22, FileWrapper$lambda$258$Type);
_.apply_0 = function apply_2162(arg0){
  return lambda$258(this.currentCap_0, this.signer_1, this.network_2, this.committer_3, arg0);
}
;
function FileWrapper$lambda$259$Type(network_0, current_1, c_2, startCap_3, ourSigner_4, tid_5){
  this.network_0 = network_0;
  this.current_1 = current_1;
  this.c_2 = c_2;
  this.startCap_3 = startCap_3;
  this.ourSigner_4 = ourSigner_4;
  this.tid_5 = tid_5;
}

defineClass(1748, $wnd.Function, $intern_22, FileWrapper$lambda$259$Type);
_.apply_0 = function apply_2163(arg0){
  return lambda$259(this.network_0, this.current_1, this.c_2, this.startCap_3, this.ourSigner_4, this.tid_5, arg0);
}
;
function FileWrapper$lambda$26$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1765, $wnd.Function, $intern_22, FileWrapper$lambda$26$Type);
_.apply_0 = function apply_2164(arg0){
  return $lambda$26_6(this.$$outer_0, arg0);
}
;
function FileWrapper$lambda$260$Type(){
}

defineClass(691, 1, {}, FileWrapper$lambda$260$Type);
_.apply_2 = function apply_2165(arg0){
  return $clinit_FileWrapper() , valueOf_1(arg0);
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$260$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$260$Type', 691);
function FileWrapper$lambda$261$Type(streamSecret_0, h_1){
  this.streamSecret_0 = streamSecret_0;
  this.h_1 = h_1;
}

defineClass(692, 1, $intern_34, FileWrapper$lambda$261$Type);
_.apply_1 = function apply_2166(arg0, arg1){
  return lambda$261_0(this.streamSecret_0, this.h_1, arg0);
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$261$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$261$Type', 692);
function FileWrapper$lambda$262$Type(){
}

defineClass(693, 1, $intern_34, FileWrapper$lambda$262$Type);
_.apply_1 = function apply_2167(arg0, arg1){
  return $clinit_FileWrapper() , castTo(arg1, 17);
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$262$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$262$Type', 693);
function FileWrapper$lambda$263$Type(labels_0){
  this.labels_0 = labels_0;
}

defineClass(1883, $wnd.Function, $intern_22, FileWrapper$lambda$263$Type);
_.apply_0 = function apply_2168(arg0){
  return lambda$263(this.labels_0, arg0);
}
;
function FileWrapper$lambda$264$Type(parent_0, childrenToDelete_1, network_2, context_3, hasher_4, owner_5, parentPath_6){
  this.parent_0 = parent_0;
  this.childrenToDelete_1 = childrenToDelete_1;
  this.network_2 = network_2;
  this.context_3 = context_3;
  this.hasher_4 = hasher_4;
  this.owner_5 = owner_5;
  this.parentPath_6 = parentPath_6;
}

defineClass(696, 1, {}, FileWrapper$lambda$264$Type);
_.apply_3 = function apply_2169(arg0, arg1){
  return lambda$264(this.parent_0, this.childrenToDelete_1, this.network_2, this.context_3, this.hasher_4, this.owner_5, this.parentPath_6, arg0, arg1);
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$264$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$264$Type', 696);
function FileWrapper$lambda$265$Type(parent_0, c_1, childrenToDelete_2, network_3, context_4, hasher_5){
  this.parent_0 = parent_0;
  this.c_1 = c_1;
  this.childrenToDelete_2 = childrenToDelete_2;
  this.network_3 = network_3;
  this.context_4 = context_4;
  this.hasher_5 = hasher_5;
}

defineClass(1884, $wnd.Function, $intern_22, FileWrapper$lambda$265$Type);
_.apply_0 = function apply_2170(arg0){
  return lambda$265(this.parent_0, this.c_1, this.childrenToDelete_2, this.network_3, this.context_4, this.hasher_5, arg0);
}
;
function FileWrapper$lambda$266$Type(){
}

defineClass(1886, $wnd.Function, $intern_22, FileWrapper$lambda$266$Type);
_.apply_0 = function apply_2171(arg0){
  return $clinit_FileWrapper() , castTo(arg0, 19).pointer.capability;
}
;
function FileWrapper$lambda$267$Type(owner_0, parent_1, parentPath_2, c_3, context_4, childrenToDelete_5){
  this.owner_0 = owner_0;
  this.parent_1 = parent_1;
  this.parentPath_2 = parentPath_2;
  this.c_3 = c_3;
  this.context_4 = context_4;
  this.childrenToDelete_5 = childrenToDelete_5;
}

defineClass(1885, $wnd.Function, $intern_22, FileWrapper$lambda$267$Type);
_.apply_0 = function apply_2172(arg0){
  return lambda$267(this.owner_0, this.parent_1, this.parentPath_2, this.c_3, this.context_4, this.childrenToDelete_5, arg0);
}
;
function FileWrapper$lambda$268$Type(owner_0, parent_1, parentPath_2, c_3, context_4){
  this.owner_0 = owner_0;
  this.parent_1 = parent_1;
  this.parentPath_2 = parentPath_2;
  this.c_3 = c_3;
  this.context_4 = context_4;
}

defineClass(694, 1, $intern_34, FileWrapper$lambda$268$Type);
_.apply_1 = function apply_2173(arg0, arg1){
  return lambda$268(this.owner_0, this.parent_1, this.parentPath_2, this.c_3, this.context_4, arg0, arg1);
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$268$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$268$Type', 694);
function FileWrapper$lambda$269$Type(){
}

defineClass(695, 1, $intern_34, FileWrapper$lambda$269$Type);
_.apply_1 = function apply_2174(arg0, arg1){
  return $clinit_FileWrapper() , $mergeAndOverwriteWith(castTo(arg0, 43), castTo(arg1, 43));
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$269$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$269$Type', 695);
function FileWrapper$lambda$27$Type($$outer_0, rc_1, childsEntryWriter_2){
  this.$$outer_0 = $$outer_0;
  this.rc_1 = rc_1;
  this.childsEntryWriter_2 = childsEntryWriter_2;
}

defineClass(1766, $wnd.Function, $intern_22, FileWrapper$lambda$27$Type);
_.apply_0 = function apply_2175(arg0){
  return $lambda$27_3(this.$$outer_0, this.rc_1, this.childsEntryWriter_2, arg0);
}
;
function FileWrapper$lambda$270$Type(parent_0, network_1){
  this.parent_0 = parent_0;
  this.network_1 = network_1;
}

defineClass(1749, $wnd.Function, $intern_22, FileWrapper$lambda$270$Type);
_.apply_0 = function apply_2176(arg0){
  return lambda$270(this.parent_0, this.network_1, arg0);
}
;
function FileWrapper$lambda$271$Type(child_0, parent_1, hasher_2, network_3, version_4, c_5){
  this.child_0 = child_0;
  this.parent_1 = parent_1;
  this.hasher_2 = hasher_2;
  this.network_3 = network_3;
  this.version_4 = version_4;
  this.c_5 = c_5;
}

defineClass(1750, $wnd.Function, $intern_22, FileWrapper$lambda$271$Type);
_.apply_0 = function apply_2177(arg0){
  return lambda$271(this.child_0, this.parent_1, this.hasher_2, this.network_3, this.version_4, this.c_5, arg0);
}
;
function FileWrapper$lambda$272$Type(context_0, parentPath_1, child_2, c_3, network_4){
  this.context_0 = context_0;
  this.parentPath_1 = parentPath_1;
  this.child_2 = child_2;
  this.c_3 = c_3;
  this.network_4 = network_4;
}

defineClass(1751, $wnd.Function, $intern_22, FileWrapper$lambda$272$Type);
_.apply_0 = function apply_2178(arg0){
  return lambda$272(this.context_0, this.parentPath_1, this.child_2, this.c_3, this.network_4, arg0);
}
;
function FileWrapper$lambda$273$Type($$outer_0, parent_1, network_2, userContext_3, hasher_4, writableParent_5, ourPath_6){
  this.$$outer_0 = $$outer_0;
  this.parent_1 = parent_1;
  this.network_2 = network_2;
  this.userContext_3 = userContext_3;
  this.hasher_4 = hasher_4;
  this.writableParent_5 = writableParent_5;
  this.ourPath_6 = ourPath_6;
}

defineClass(697, 1, {}, FileWrapper$lambda$273$Type);
_.apply_3 = function apply_2179(arg0, arg1){
  return $lambda$273(this.$$outer_0, this.parent_1, this.network_2, this.userContext_3, this.hasher_4, this.writableParent_5, this.ourPath_6, arg0, arg1);
}
;
_.writableParent_5 = false;
var Lpeergos_shared_user_fs_FileWrapper$lambda$273$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$273$Type', 697);
function FileWrapper$lambda$274$Type($$outer_0, parent_1, c_2, network_3, userContext_4, hasher_5){
  this.$$outer_0 = $$outer_0;
  this.parent_1 = parent_1;
  this.c_2 = c_2;
  this.network_3 = network_3;
  this.userContext_4 = userContext_4;
  this.hasher_5 = hasher_5;
}

defineClass(1887, $wnd.Function, $intern_22, FileWrapper$lambda$274$Type);
_.apply_0 = function apply_2180(arg0){
  return $lambda$274_0(this.$$outer_0, this.parent_1, this.c_2, this.network_3, this.userContext_4, this.hasher_5, arg0);
}
;
function FileWrapper$lambda$275$Type($$outer_0, writableParent_1, parent_2, hasher_3, network_4, c_5, userContext_6, ourPath_7){
  this.$$outer_0 = $$outer_0;
  this.writableParent_1 = writableParent_1;
  this.parent_2 = parent_2;
  this.hasher_3 = hasher_3;
  this.network_4 = network_4;
  this.c_5 = c_5;
  this.userContext_6 = userContext_6;
  this.ourPath_7 = ourPath_7;
}

defineClass(1888, $wnd.Function, $intern_22, FileWrapper$lambda$275$Type);
_.apply_0 = function apply_2181(arg0){
  return $lambda$275_0(this.$$outer_0, this.writableParent_1, this.parent_2, this.hasher_3, this.network_4, this.c_5, this.userContext_6, this.ourPath_7, arg0);
}
;
_.writableParent_1 = false;
function FileWrapper$lambda$276$Type($$outer_0, writableParent_1, parent_2, hasher_3, network_4, v_5, c_6){
  this.$$outer_0 = $$outer_0;
  this.writableParent_1 = writableParent_1;
  this.parent_2 = parent_2;
  this.hasher_3 = hasher_3;
  this.network_4 = network_4;
  this.v_5 = v_5;
  this.c_6 = c_6;
}

defineClass(1889, $wnd.Function, $intern_22, FileWrapper$lambda$276$Type);
_.apply_0 = function apply_2182(arg0){
  return $lambda$276(this.$$outer_0, this.writableParent_1, this.parent_2, this.hasher_3, this.network_4, this.v_5, this.c_6, arg0);
}
;
_.writableParent_1 = false;
function FileWrapper$lambda$277$Type(userContext_0, ourPath_1, c_2, network_3){
  this.userContext_0 = userContext_0;
  this.ourPath_1 = ourPath_1;
  this.c_2 = c_2;
  this.network_3 = network_3;
}

defineClass(1890, $wnd.Function, $intern_22, FileWrapper$lambda$277$Type);
_.apply_0 = function apply_2183(arg0){
  return lambda$277(this.userContext_0, this.ourPath_1, this.c_2, this.network_3, arg0);
}
;
function FileWrapper$lambda$278$Type(parent_0, network_1){
  this.parent_0 = parent_0;
  this.network_1 = network_1;
}

defineClass(1752, $wnd.Function, $intern_22, FileWrapper$lambda$278$Type);
_.apply_0 = function apply_2184(arg0){
  return lambda$278(this.parent_0, this.network_1, arg0);
}
;
function FileWrapper$lambda$279$Type(committer_0, owner_1, parentSigner_2, parentWriter_3, signerToRemove_4, network_5){
  this.committer_0 = committer_0;
  this.owner_1 = owner_1;
  this.parentSigner_2 = parentSigner_2;
  this.parentWriter_3 = parentWriter_3;
  this.signerToRemove_4 = signerToRemove_4;
  this.network_5 = network_5;
}

defineClass(1753, $wnd.Function, $intern_22, FileWrapper$lambda$279$Type);
_.apply_0 = function apply_2185(arg0){
  return lambda$279(this.committer_0, this.owner_1, this.parentSigner_2, this.parentWriter_3, this.signerToRemove_4, this.network_5, arg0);
}
;
function FileWrapper$lambda$28$Type($$outer_0, rc_1, childsEntryWriter_2, network_3){
  this.$$outer_0 = $$outer_0;
  this.rc_1 = rc_1;
  this.childsEntryWriter_2 = childsEntryWriter_2;
  this.network_3 = network_3;
}

defineClass(1767, $wnd.Function, $intern_22, FileWrapper$lambda$28$Type);
_.apply_0 = function apply_2186(arg0){
  return $lambda$28_5(this.$$outer_0, this.rc_1, this.childsEntryWriter_2, this.network_3, arg0);
}
;
function FileWrapper$lambda$280$Type(committer_0, owner_1, parentSigner_2, s_3, network_4){
  this.committer_0 = committer_0;
  this.owner_1 = owner_1;
  this.parentSigner_2 = parentSigner_2;
  this.s_3 = s_3;
  this.network_4 = network_4;
}

defineClass(1891, $wnd.Function, $intern_22, FileWrapper$lambda$280$Type);
_.apply_0 = function apply_2187(arg0){
  return lambda$280(this.committer_0, this.owner_1, this.parentSigner_2, this.s_3, this.network_4, arg0);
}
;
function FileWrapper$lambda$281$Type(committer_0, owner_1, parentSigner_2, removed_3, s_4){
  this.committer_0 = committer_0;
  this.owner_1 = owner_1;
  this.parentSigner_2 = parentSigner_2;
  this.removed_3 = removed_3;
  this.s_4 = s_4;
}

defineClass(1893, $wnd.Function, $intern_22, FileWrapper$lambda$281$Type);
_.apply_0 = function apply_2188(arg0){
  return lambda$281(this.committer_0, this.owner_1, this.parentSigner_2, this.removed_3, this.s_4, arg0);
}
;
function FileWrapper$lambda$282$Type(s_0, parentWriter_1){
  this.s_0 = s_0;
  this.parentWriter_1 = parentWriter_1;
}

defineClass(1892, $wnd.Function, $intern_22, FileWrapper$lambda$282$Type);
_.apply_0 = function apply_2189(arg0){
  return lambda$282(this.s_0, this.parentWriter_1, arg0);
}
;
function FileWrapper$lambda$283$Type($$outer_0, network_1, crypto_2, monitor_3){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
  this.crypto_2 = crypto_2;
  this.monitor_3 = monitor_3;
}

defineClass(1754, $wnd.Function, $intern_22, FileWrapper$lambda$283$Type);
_.apply_0 = function apply_2190(arg0){
  return $lambda$283(this.$$outer_0, this.network_1, this.crypto_2, this.monitor_3, arg0);
}
;
function FileWrapper$lambda$284$Type($$outer_0, network_1, crypto_2, fileSizeHi_3, fileSizeLow_4, monitor_5){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
  this.crypto_2 = crypto_2;
  this.fileSizeHi_3 = fileSizeHi_3;
  this.fileSizeLow_4 = fileSizeLow_4;
  this.monitor_5 = monitor_5;
}

defineClass(1755, $wnd.Function, $intern_22, FileWrapper$lambda$284$Type);
_.apply_0 = function apply_2191(arg0){
  return $lambda$284_0(this.$$outer_0, this.network_1, this.crypto_2, this.fileSizeHi_3, this.fileSizeLow_4, this.monitor_5, arg0);
}
;
_.fileSizeHi_3 = 0;
_.fileSizeLow_4 = 0;
function FileWrapper$lambda$285$Type($$outer_0, network_1, crypto_2, fileSize_3, nBufferedChunks_5, monitor_6){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
  this.crypto_2 = crypto_2;
  this.fileSize_3 = fileSize_3;
  this.nBufferedChunks_5 = nBufferedChunks_5;
  this.monitor_6 = monitor_6;
}

defineClass(1266, $wnd.Function, $intern_22, FileWrapper$lambda$285$Type);
_.apply_0 = function apply_2192(arg0){
  return $lambda$285_0(this.$$outer_0, this.network_1, this.crypto_2, this.fileSize_3, this.nBufferedChunks_5, this.monitor_6, arg0);
}
;
_.fileSize_3 = 0;
_.nBufferedChunks_5 = 0;
function FileWrapper$lambda$286$Type($$outer_0, version_1, network_2, crypto_3, fileSize_4, fileAccess_6, nBufferedChunks_7, monitor_8){
  this.$$outer_0 = $$outer_0;
  this.version_1 = version_1;
  this.network_2 = network_2;
  this.crypto_3 = crypto_3;
  this.fileSize_4 = fileSize_4;
  this.fileAccess_6 = fileAccess_6;
  this.nBufferedChunks_7 = nBufferedChunks_7;
  this.monitor_8 = monitor_8;
}

defineClass(1756, $wnd.Function, $intern_22, FileWrapper$lambda$286$Type);
_.apply_0 = function apply_2193(arg0){
  return $lambda$286_0(this.$$outer_0, this.version_1, this.network_2, this.crypto_3, this.fileSize_4, this.fileAccess_6, this.nBufferedChunks_7, this.monitor_8, arg0);
}
;
_.fileSize_4 = 0;
_.nBufferedChunks_7 = 0;
function FileWrapper$lambda$287$Type(fut_0){
  this.fut_0 = fut_0;
}

defineClass(698, 1, $intern_32, FileWrapper$lambda$287$Type);
_.accept = function accept_170(arg0){
  $clinit_FileWrapper();
  $complete(this.fut_0, convertFromBase64(castToString(arg0)));
}
;
_.andThen = function andThen_85(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$287$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$287$Type', 698);
function FileWrapper$lambda$288$Type(fut_0){
  this.fut_0 = fut_0;
}

defineClass(699, 1, $intern_32, FileWrapper$lambda$288$Type);
_.accept = function accept_171(arg0){
  $clinit_FileWrapper();
  $complete(this.fut_0, get_165().$_nullMethod());
}
;
_.andThen = function andThen_86(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$288$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$288$Type', 699);
function FileWrapper$lambda$289$Type(fut_0){
  this.fut_0 = fut_0;
}

defineClass(1757, $wnd.Function, $intern_22, FileWrapper$lambda$289$Type);
_.apply_0 = function apply_2194(arg0){
  return $clinit_FileWrapper() , $complete(this.fut_0, ($clinit_Optional() , $clinit_Optional() , EMPTY)) , null;
}
;
function FileWrapper$lambda$290$Type(fut_0){
  this.fut_0 = fut_0;
}

defineClass(700, 1, $intern_32, FileWrapper$lambda$290$Type);
_.accept = function accept_172(arg0){
  lambda$290(this.fut_0, arg0);
}
;
_.andThen = function andThen_87(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$290$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$290$Type', 700);
function FileWrapper$lambda$291$Type(mp3Data_0, fut_1, network_2, filename_3){
  this.mp3Data_0 = mp3Data_0;
  this.fut_1 = fut_1;
  this.network_2 = network_2;
  this.filename_3 = filename_3;
}

defineClass(702, 1, $intern_32, FileWrapper$lambda$291$Type);
_.accept = function accept_173(arg0){
  lambda$291(this.mp3Data_0, this.fut_1, this.network_2, this.filename_3);
}
;
_.andThen = function andThen_88(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$291$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$291$Type', 702);
function FileWrapper$lambda$292$Type(fut_0){
  this.fut_0 = fut_0;
}

defineClass(701, 1, $intern_32, FileWrapper$lambda$292$Type);
_.accept = function accept_174(arg0){
  $clinit_FileWrapper();
  $complete(this.fut_0, convertFromBase64(castToString(arg0)));
}
;
_.andThen = function andThen_89(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$292$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$292$Type', 701);
function FileWrapper$lambda$295$Type(header_0, filename_1){
  this.header_0 = header_0;
  this.filename_1 = filename_1;
}

defineClass(1194, $wnd.Function, $intern_22, FileWrapper$lambda$295$Type);
_.apply_0 = function apply_2195(arg0){
  return $clinit_FileWrapper() , calculateMimeType_0(this.header_0, this.filename_1);
}
;
function FileWrapper$lambda$3$Type($$outer_0, network_1){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
}

defineClass(99, $wnd.Function, $intern_22, FileWrapper$lambda$3$Type);
_.apply_0 = function apply_2196(arg0){
  return $lambda$3_25(this.$$outer_0, this.network_1, arg0);
}
;
function FileWrapper$lambda$30$Type($$outer_0, network_1){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
}

defineClass(1701, $wnd.Function, $intern_22, FileWrapper$lambda$30$Type);
_.apply_0 = function apply_2197(arg0){
  return $lambda$30_7(this.$$outer_0, this.network_1, arg0);
}
;
function FileWrapper$lambda$31$Type(cwd_0){
  this.cwd_0 = cwd_0;
}

defineClass(1769, $wnd.Function, $intern_22, FileWrapper$lambda$31$Type);
_.apply_0 = function apply_2198(arg0){
  return lambda$31_4(this.cwd_0, arg0);
}
;
function FileWrapper$lambda$32$Type($$outer_0, offset_1, crypto_3, network_4){
  this.$$outer_0 = $$outer_0;
  this.offset_1 = offset_1;
  this.crypto_3 = crypto_3;
  this.network_4 = network_4;
}

defineClass(1771, $wnd.Function, $intern_22, FileWrapper$lambda$32$Type);
_.apply_0 = function apply_2199(arg0){
  return $lambda$32_3(this.$$outer_0, this.offset_1, this.crypto_3, this.network_4, arg0);
}
;
_.offset_1 = 0;
function FileWrapper$lambda$34$Type($$outer_0, newSize_1, network_3, crypto_4){
  this.$$outer_0 = $$outer_0;
  this.newSize_1 = newSize_1;
  this.network_3 = network_3;
  this.crypto_4 = crypto_4;
}

defineClass(648, 1, {}, FileWrapper$lambda$34$Type);
_.apply_3 = function apply_2200(arg0, arg1){
  return $lambda$34_3(this.$$outer_0, this.newSize_1, this.network_3, this.crypto_4, arg0, arg1);
}
;
_.newSize_1 = 0;
var Lpeergos_shared_user_fs_FileWrapper$lambda$34$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$34$Type', 648);
function FileWrapper$lambda$35$Type($$outer_0, network_1){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
}

defineClass(1702, $wnd.Function, $intern_22, FileWrapper$lambda$35$Type);
_.apply_0 = function apply_2201(arg0){
  return $lambda$35_4(this.$$outer_0, this.network_1, arg0);
}
;
function FileWrapper$lambda$36$Type($$outer_0, props_1, crypto_2, network_3, committer_4, newSize_5){
  this.$$outer_0 = $$outer_0;
  this.props_1 = props_1;
  this.crypto_2 = crypto_2;
  this.network_3 = network_3;
  this.committer_4 = committer_4;
  this.newSize_5 = newSize_5;
}

defineClass(1703, $wnd.Function, $intern_22, FileWrapper$lambda$36$Type);
_.apply_0 = function apply_2202(arg0){
  return $lambda$36_5(this.$$outer_0, this.props_1, this.crypto_2, this.network_3, this.committer_4, this.newSize_5, arg0);
}
;
_.newSize_5 = 0;
function FileWrapper$lambda$37$Type($$outer_0, props_1, crypto_2, network_3, snapshot_4, committer_5, newSize_6){
  this.$$outer_0 = $$outer_0;
  this.props_1 = props_1;
  this.crypto_2 = crypto_2;
  this.network_3 = network_3;
  this.snapshot_4 = snapshot_4;
  this.committer_5 = committer_5;
  this.newSize_6 = newSize_6;
}

defineClass(1772, $wnd.Function, $intern_22, FileWrapper$lambda$37$Type);
_.apply_0 = function apply_2203(arg0){
  return $lambda$37_2(this.$$outer_0, this.props_1, this.crypto_2, this.network_3, this.snapshot_4, this.committer_5, this.newSize_6, arg0);
}
;
_.newSize_6 = 0;
function FileWrapper$lambda$38$Type(){
}

defineClass(1773, $wnd.Function, {}, FileWrapper$lambda$38$Type);
_.accept_5 = function accept_175(arg0){
  $clinit_FileWrapper();
}
;
function FileWrapper$lambda$39$Type($$outer_0, props_1, endMapKey_2, crypto_3, network_4, snapshot_5, committer_6, newSize_7){
  this.$$outer_0 = $$outer_0;
  this.props_1 = props_1;
  this.endMapKey_2 = endMapKey_2;
  this.crypto_3 = crypto_3;
  this.network_4 = network_4;
  this.snapshot_5 = snapshot_5;
  this.committer_6 = committer_6;
  this.newSize_7 = newSize_7;
}

defineClass(1774, $wnd.Function, $intern_22, FileWrapper$lambda$39$Type);
_.apply_0 = function apply_2204(arg0){
  return $lambda$39_4(this.$$outer_0, this.props_1, this.endMapKey_2, this.crypto_3, this.network_4, this.snapshot_5, this.committer_6, this.newSize_7, arg0);
}
;
_.newSize_7 = 0;
function FileWrapper$lambda$40$Type($$outer_0, props_1, endMapKey_2, crypto_3, network_4, snapshot_5, committer_6, newSize_7, startOfLastChunk_9){
  this.$$outer_0 = $$outer_0;
  this.props_1 = props_1;
  this.endMapKey_2 = endMapKey_2;
  this.crypto_3 = crypto_3;
  this.network_4 = network_4;
  this.snapshot_5 = snapshot_5;
  this.committer_6 = committer_6;
  this.newSize_7 = newSize_7;
  this.startOfLastChunk_9 = startOfLastChunk_9;
}

defineClass(1775, $wnd.Function, $intern_22, FileWrapper$lambda$40$Type);
_.apply_0 = function apply_2205(arg0){
  return $lambda$40_3(this.$$outer_0, this.props_1, this.endMapKey_2, this.crypto_3, this.network_4, this.snapshot_5, this.committer_6, this.newSize_7, this.startOfLastChunk_9, arg0);
}
;
_.newSize_7 = 0;
_.startOfLastChunk_9 = 0;
function FileWrapper$lambda$41$Type($$outer_0, props_1, endMapKey_2, crypto_3, network_4, snapshot_5, committer_6, newSize_7){
  this.$$outer_0 = $$outer_0;
  this.props_1 = props_1;
  this.endMapKey_2 = endMapKey_2;
  this.crypto_3 = crypto_3;
  this.network_4 = network_4;
  this.snapshot_5 = snapshot_5;
  this.committer_6 = committer_6;
  this.newSize_7 = newSize_7;
}

defineClass(1776, $wnd.Function, $intern_22, FileWrapper$lambda$41$Type);
_.apply_0 = function apply_2206(arg0){
  return $lambda$41_2(this.$$outer_0, this.props_1, this.endMapKey_2, this.crypto_3, this.network_4, this.snapshot_5, this.committer_6, this.newSize_7);
}
;
_.newSize_7 = 0;
function FileWrapper$lambda$42$Type($$outer_0, props_1, currentChunk_2, endMapKey_3, crypto_4, network_5, snapshot_6, committer_7){
  this.$$outer_0 = $$outer_0;
  this.props_1 = props_1;
  this.currentChunk_2 = currentChunk_2;
  this.endMapKey_3 = endMapKey_3;
  this.crypto_4 = crypto_4;
  this.network_5 = network_5;
  this.snapshot_6 = snapshot_6;
  this.committer_7 = committer_7;
}

defineClass(1778, $wnd.Function, $intern_22, FileWrapper$lambda$42$Type);
_.apply_0 = function apply_2207(arg0){
  return $lambda$42_4(this.$$outer_0, this.props_1, this.currentChunk_2, this.endMapKey_3, this.crypto_4, this.network_5, this.snapshot_6, this.committer_7, arg0);
}
;
_.currentChunk_2 = 0;
function FileWrapper$lambda$43$Type($$outer_0, committer_1, lastChunk_2, startOfLastChunk_3, newSize_5, network_7, crypto_8, props_9){
  this.$$outer_0 = $$outer_0;
  this.committer_1 = committer_1;
  this.lastChunk_2 = lastChunk_2;
  this.startOfLastChunk_3 = startOfLastChunk_3;
  this.newSize_5 = newSize_5;
  this.network_7 = network_7;
  this.crypto_8 = crypto_8;
  this.props_9 = props_9;
}

defineClass(1777, $wnd.Function, $intern_22, FileWrapper$lambda$43$Type);
_.apply_0 = function apply_2208(arg0){
  return $lambda$43_3(this.$$outer_0, this.committer_1, this.lastChunk_2, this.startOfLastChunk_3, this.newSize_5, this.network_7, this.crypto_8, this.props_9, arg0);
}
;
_.newSize_5 = 0;
_.startOfLastChunk_3 = 0;
function FileWrapper$lambda$44$Type($$outer_0, committer_1, lastChunk_2, startOfLastChunk_3, newSize_5, network_7, crypto_8){
  this.$$outer_0 = $$outer_0;
  this.committer_1 = committer_1;
  this.lastChunk_2 = lastChunk_2;
  this.startOfLastChunk_3 = startOfLastChunk_3;
  this.newSize_5 = newSize_5;
  this.network_7 = network_7;
  this.crypto_8 = crypto_8;
}

defineClass(1779, $wnd.Function, $intern_22, FileWrapper$lambda$44$Type);
_.apply_0 = function apply_2209(arg0){
  return $lambda$44_3(this.$$outer_0, this.committer_1, this.lastChunk_2, this.startOfLastChunk_3, this.newSize_5, this.network_7, this.crypto_8, arg0);
}
;
_.newSize_5 = 0;
_.startOfLastChunk_3 = 0;
function FileWrapper$lambda$45$Type(committer_0, lastChunk_1, startOfLastChunk_2, newSize_4, network_6, crypto_7, resized_8){
  this.committer_0 = committer_0;
  this.lastChunk_1 = lastChunk_1;
  this.startOfLastChunk_2 = startOfLastChunk_2;
  this.newSize_4 = newSize_4;
  this.network_6 = network_6;
  this.crypto_7 = crypto_7;
  this.resized_8 = resized_8;
}

defineClass(1780, $wnd.Function, $intern_22, FileWrapper$lambda$45$Type);
_.apply_0 = function apply_2210(arg0){
  return lambda$45_1(this.committer_0, this.lastChunk_1, this.startOfLastChunk_2, this.newSize_4, this.network_6, this.crypto_7, this.resized_8, arg0);
}
;
_.newSize_4 = 0;
_.startOfLastChunk_2 = 0;
function FileWrapper$lambda$46$Type(committer_0, lastChunk_1, startOfLastChunk_2, newSize_4, network_6, crypto_7){
  this.committer_0 = committer_0;
  this.lastChunk_1 = lastChunk_1;
  this.startOfLastChunk_2 = startOfLastChunk_2;
  this.newSize_4 = newSize_4;
  this.network_6 = network_6;
  this.crypto_7 = crypto_7;
}

defineClass(1781, $wnd.Function, $intern_22, FileWrapper$lambda$46$Type);
_.apply_0 = function apply_2211(arg0){
  return lambda$46_4(this.committer_0, this.lastChunk_1, this.startOfLastChunk_2, this.newSize_4, this.network_6, this.crypto_7, arg0);
}
;
_.newSize_4 = 0;
_.startOfLastChunk_2 = 0;
function FileWrapper$lambda$47$Type(){
}

defineClass(1782, $wnd.Function, {}, FileWrapper$lambda$47$Type);
_.accept_5 = function accept_176(arg0){
  $clinit_FileWrapper();
}
;
function FileWrapper$lambda$49$Type($$outer_0, filename_1, fileData_2, fileSize_3, network_5, crypto_6, monitor_7){
  this.$$outer_0 = $$outer_0;
  this.filename_1 = filename_1;
  this.fileData_2 = fileData_2;
  this.fileSize_3 = fileSize_3;
  this.network_5 = network_5;
  this.crypto_6 = crypto_6;
  this.monitor_7 = monitor_7;
}

defineClass(649, 1, {}, FileWrapper$lambda$49$Type);
_.apply_3 = function apply_2212(arg0, arg1){
  return $lambda$49_3(this.$$outer_0, this.filename_1, this.fileData_2, this.fileSize_3, this.network_5, this.crypto_6, this.monitor_7, arg0, arg1);
}
;
_.fileSize_3 = 0;
var Lpeergos_shared_user_fs_FileWrapper$lambda$49$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$49$Type', 649);
function FileWrapper$lambda$5$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1759, $wnd.Function, $intern_22, FileWrapper$lambda$5$Type);
_.apply_0 = function apply_2213(arg0){
  return $lambda$5_17(this.$$outer_0, arg0);
}
;
function FileWrapper$lambda$50$Type($$outer_0, filename_1, s_2, committer_3, fileData_4, fileSize_5, network_7, crypto_8, monitor_9){
  this.$$outer_0 = $$outer_0;
  this.filename_1 = filename_1;
  this.s_2 = s_2;
  this.committer_3 = committer_3;
  this.fileData_4 = fileData_4;
  this.fileSize_5 = fileSize_5;
  this.network_7 = network_7;
  this.crypto_8 = crypto_8;
  this.monitor_9 = monitor_9;
}

defineClass(1783, $wnd.Function, $intern_22, FileWrapper$lambda$50$Type);
_.apply_0 = function apply_2214(arg0){
  return $lambda$50_0(this.$$outer_0, this.filename_1, this.s_2, this.committer_3, this.fileData_4, this.fileSize_5, this.network_7, this.crypto_8, this.monitor_9, arg0);
}
;
_.fileSize_5 = 0;
function FileWrapper$lambda$51$Type($$outer_0, network_1){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
}

defineClass(1704, $wnd.Function, $intern_22, FileWrapper$lambda$51$Type);
_.apply_0 = function apply_2215(arg0){
  return $lambda$51_1(this.$$outer_0, this.network_1, arg0);
}
;
function FileWrapper$lambda$52$Type(){
}

defineClass(650, 1, {}, FileWrapper$lambda$52$Type);
_.get_0 = function get_163(){
  return $clinit_FileWrapper() , $clinit_Boolean() , true;
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$52$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$52$Type', 650);
function FileWrapper$lambda$53$Type($$outer_0, monitor_1, txn_2, data_3, props_4, s_5, c_6, network_7, crypto_8){
  this.$$outer_0 = $$outer_0;
  this.monitor_1 = monitor_1;
  this.txn_2 = txn_2;
  this.data_3 = data_3;
  this.props_4 = props_4;
  this.s_5 = s_5;
  this.c_6 = c_6;
  this.network_7 = network_7;
  this.crypto_8 = crypto_8;
}

defineClass(1705, $wnd.Function, $intern_22, FileWrapper$lambda$53$Type);
_.apply_0 = function apply_2216(arg0){
  return $lambda$53_0(this.$$outer_0, this.monitor_1, this.txn_2, this.data_3, this.props_4, this.s_5, this.c_6, this.network_7, this.crypto_8, arg0);
}
;
function FileWrapper$lambda$54$Type(txn_0, fromParent_1){
  this.txn_0 = txn_0;
  this.fromParent_1 = fromParent_1;
}

defineClass(1706, $wnd.Function, $intern_22, FileWrapper$lambda$54$Type);
_.apply_0 = function apply_2217(arg0){
  return lambda$54_1(this.txn_0, this.fromParent_1, arg0);
}
;
function FileWrapper$lambda$55$Type($$outer_0, currentIndex_1, streamSecret_3, currentLoc_4, s_5, network_6, crypto_7){
  this.$$outer_0 = $$outer_0;
  this.currentIndex_1 = currentIndex_1;
  this.streamSecret_3 = streamSecret_3;
  this.currentLoc_4 = currentLoc_4;
  this.s_5 = s_5;
  this.network_6 = network_6;
  this.crypto_7 = crypto_7;
}

defineClass(1707, $wnd.Function, $intern_22, FileWrapper$lambda$55$Type);
_.apply_0 = function apply_2218(arg0){
  return $lambda$55_2(this.$$outer_0, this.currentIndex_1, this.streamSecret_3, this.currentLoc_4, this.s_5, this.network_6, this.crypto_7, arg0);
}
;
_.currentIndex_1 = 0;
function FileWrapper$lambda$56$Type($$outer_0, currentIndex_1, streamSecret_3, currentLoc_4, s_5, network_6, crypto_7){
  this.$$outer_0 = $$outer_0;
  this.currentIndex_1 = currentIndex_1;
  this.streamSecret_3 = streamSecret_3;
  this.currentLoc_4 = currentLoc_4;
  this.s_5 = s_5;
  this.network_6 = network_6;
  this.crypto_7 = crypto_7;
}

defineClass(1784, $wnd.Function, $intern_22, FileWrapper$lambda$56$Type);
_.apply_0 = function apply_2219(arg0){
  return $lambda$56_0(this.$$outer_0, this.currentIndex_1, this.streamSecret_3, this.currentLoc_4, this.s_5, this.network_6, this.crypto_7, arg0);
}
;
_.currentIndex_1 = 0;
function FileWrapper$lambda$57$Type(length_0, network_2, crypto_3, filename_4){
  this.length_0 = length_0;
  this.network_2 = network_2;
  this.crypto_3 = crypto_3;
  this.filename_4 = filename_4;
}

defineClass(1708, $wnd.Function, $intern_22, FileWrapper$lambda$57$Type);
_.apply_0 = function apply_2220(arg0){
  return lambda$57_1(this.length_0, this.network_2, this.crypto_3, this.filename_4, arg0);
}
;
_.length_0 = 0;
function FileWrapper$lambda$58$Type(length_0, network_2, crypto_3){
  this.length_0 = length_0;
  this.network_2 = network_2;
  this.crypto_3 = crypto_3;
}

defineClass(1785, $wnd.Function, $intern_22, FileWrapper$lambda$58$Type);
_.apply_0 = function apply_2221(arg0){
  return lambda$58_0(this.length_0, this.network_2, this.crypto_3, arg0);
}
;
_.length_0 = 0;
function FileWrapper$lambda$59$Type(f_0, network_1){
  this.f_0 = f_0;
  this.network_1 = network_1;
}

defineClass(1786, $wnd.Function, $intern_22, FileWrapper$lambda$59$Type);
_.apply_0 = function apply_2222(arg0){
  return lambda$59_1(this.f_0, this.network_1, arg0);
}
;
function FileWrapper$lambda$6$Type($$outer_0, network_1){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
}

defineClass(1262, $wnd.Function, $intern_22, FileWrapper$lambda$6$Type);
_.apply_0 = function apply_2223(arg0){
  return $lambda$6_16(this.$$outer_0, this.network_1, arg0);
}
;
function FileWrapper$lambda$60$Type(){
}

defineClass(1709, $wnd.Function, {}, FileWrapper$lambda$60$Type);
_.accept_5 = function accept_177(arg0){
  $clinit_FileWrapper();
}
;
function FileWrapper$lambda$61$Type(length_0, network_2, crypto_3, filename_4){
  this.length_0 = length_0;
  this.network_2 = network_2;
  this.crypto_3 = crypto_3;
  this.filename_4 = filename_4;
}

defineClass(1710, $wnd.Function, $intern_22, FileWrapper$lambda$61$Type);
_.apply_0 = function apply_2224(arg0){
  return lambda$61_2(this.length_0, this.network_2, this.crypto_3, this.filename_4, arg0);
}
;
_.length_0 = 0;
function FileWrapper$lambda$62$Type(length_0, network_2, crypto_3){
  this.length_0 = length_0;
  this.network_2 = network_2;
  this.crypto_3 = crypto_3;
}

defineClass(1787, $wnd.Function, $intern_22, FileWrapper$lambda$62$Type);
_.apply_0 = function apply_2225(arg0){
  return lambda$62_1(this.length_0, this.network_2, this.crypto_3, arg0);
}
;
_.length_0 = 0;
function FileWrapper$lambda$63$Type(committer_0, fileData_1, newSize_2, network_4, crypto_5, monitor_6){
  this.committer_0 = committer_0;
  this.fileData_1 = fileData_1;
  this.newSize_2 = newSize_2;
  this.network_4 = network_4;
  this.crypto_5 = crypto_5;
  this.monitor_6 = monitor_6;
}

defineClass(1711, $wnd.Function, $intern_22, FileWrapper$lambda$63$Type);
_.apply_0 = function apply_2226(arg0){
  return lambda$63_3(this.committer_0, this.fileData_1, this.newSize_2, this.network_4, this.crypto_5, this.monitor_6, arg0);
}
;
_.newSize_2 = 0;
function FileWrapper$lambda$64$Type($$outer_0, committer_1, newSize_2, network_4, crypto_5, size_6){
  this.$$outer_0 = $$outer_0;
  this.committer_1 = committer_1;
  this.newSize_2 = newSize_2;
  this.network_4 = network_4;
  this.crypto_5 = crypto_5;
  this.size_6 = size_6;
}

defineClass(1712, $wnd.Function, $intern_22, FileWrapper$lambda$64$Type);
_.apply_0 = function apply_2227(arg0){
  return $lambda$64_2(this.$$outer_0, this.committer_1, this.newSize_2, this.network_4, this.crypto_5, this.size_6, arg0);
}
;
_.newSize_2 = 0;
_.size_6 = 0;
function FileWrapper$lambda$65$Type(v_0, committer_1, newSize_2, network_4, crypto_5){
  this.v_0 = v_0;
  this.committer_1 = committer_1;
  this.newSize_2 = newSize_2;
  this.network_4 = network_4;
  this.crypto_5 = crypto_5;
}

defineClass(1788, $wnd.Function, $intern_22, FileWrapper$lambda$65$Type);
_.apply_0 = function apply_2228(arg0){
  return lambda$65_4(this.v_0, this.committer_1, this.newSize_2, this.network_4, this.crypto_5, arg0);
}
;
_.newSize_2 = 0;
function FileWrapper$lambda$66$Type($$outer_0, fileData_1, newSize_2, network_4, crypto_5, monitor_6){
  this.$$outer_0 = $$outer_0;
  this.fileData_1 = fileData_1;
  this.newSize_2 = newSize_2;
  this.network_4 = network_4;
  this.crypto_5 = crypto_5;
  this.monitor_6 = monitor_6;
}

defineClass(464, 1, {}, FileWrapper$lambda$66$Type);
_.apply_3 = function apply_2229(arg0, arg1){
  return $lambda$66_1(this.$$outer_0, this.fileData_1, this.newSize_2, this.network_4, this.crypto_5, this.monitor_6, arg1);
}
;
_.newSize_2 = 0;
var Lpeergos_shared_user_fs_FileWrapper$lambda$66$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$66$Type', 464);
function FileWrapper$lambda$67$Type($$outer_0, network_1){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
}

defineClass(1264, $wnd.Function, $intern_22, FileWrapper$lambda$67$Type);
_.apply_0 = function apply_2230(arg0){
  return $lambda$67_1(this.$$outer_0, this.network_1, arg0);
}
;
function FileWrapper$lambda$68$Type($$outer_0, fileData_1, startHigh_2, startLow_3, endHigh_4, endLow_5, network_6, crypto_7, monitor_8){
  this.$$outer_0 = $$outer_0;
  this.fileData_1 = fileData_1;
  this.startHigh_2 = startHigh_2;
  this.startLow_3 = startLow_3;
  this.endHigh_4 = endHigh_4;
  this.endLow_5 = endLow_5;
  this.network_6 = network_6;
  this.crypto_7 = crypto_7;
  this.monitor_8 = monitor_8;
}

defineClass(651, 1, {}, FileWrapper$lambda$68$Type);
_.apply_3 = function apply_2231(arg0, arg1){
  return $lambda$68_2(this.$$outer_0, this.fileData_1, this.startHigh_2, this.startLow_3, this.endHigh_4, this.endLow_5, this.network_6, this.crypto_7, this.monitor_8, arg0, arg1);
}
;
_.endHigh_4 = 0;
_.endLow_5 = 0;
_.startHigh_2 = 0;
_.startLow_3 = 0;
var Lpeergos_shared_user_fs_FileWrapper$lambda$68$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$68$Type', 651);
function FileWrapper$lambda$69$Type($$outer_0, network_1){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
}

defineClass(1713, $wnd.Function, $intern_22, FileWrapper$lambda$69$Type);
_.apply_0 = function apply_2232(arg0){
  return $lambda$69_2(this.$$outer_0, this.network_1, arg0);
}
;
function FileWrapper$lambda$7$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1760, $wnd.Function, $intern_22, FileWrapper$lambda$7$Type);
_.apply_0 = function apply_2233(arg0){
  return $lambda$7_11(this.$$outer_0, arg0);
}
;
function FileWrapper$lambda$70$Type(mirrorBat_0){
  this.mirrorBat_0 = mirrorBat_0;
}

defineClass(652, 1, {}, FileWrapper$lambda$70$Type);
_.get_0 = function get_164(){
  return $clinit_FileWrapper() , this.mirrorBat_0;
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$70$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$70$Type', 652);
function FileWrapper$lambda$71$Type($$outer_0, network_1, mirrorBat_2, txns_3, resumeFile_4, commitWatcher_5, crypto_6, mirror_7, directories_8){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
  this.mirrorBat_2 = mirrorBat_2;
  this.txns_3 = txns_3;
  this.resumeFile_4 = resumeFile_4;
  this.commitWatcher_5 = commitWatcher_5;
  this.crypto_6 = crypto_6;
  this.mirror_7 = mirror_7;
  this.directories_8 = directories_8;
}

defineClass(1714, $wnd.Function, $intern_22, FileWrapper$lambda$71$Type);
_.apply_0 = function apply_2234(arg0){
  return $lambda$71_1(this.$$outer_0, this.network_1, this.mirrorBat_2, this.txns_3, this.resumeFile_4, this.commitWatcher_5, this.crypto_6, this.mirror_7, this.directories_8, arg0);
}
;
function FileWrapper$lambda$72$Type($$outer_0, network_1, path_2, mirrorBat_3, txns_4, resumeFile_5, commitWatcher_6, crypto_7, mirror_8, directories_9){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
  this.path_2 = path_2;
  this.mirrorBat_3 = mirrorBat_3;
  this.txns_4 = txns_4;
  this.resumeFile_5 = resumeFile_5;
  this.commitWatcher_6 = commitWatcher_6;
  this.crypto_7 = crypto_7;
  this.mirror_8 = mirror_8;
  this.directories_9 = directories_9;
}

defineClass(655, 1, {}, FileWrapper$lambda$72$Type);
_.apply_3 = function apply_2235(arg0, arg1){
  return $lambda$72_3(this.$$outer_0, this.network_1, this.path_2, this.mirrorBat_3, this.txns_4, this.resumeFile_5, this.commitWatcher_6, this.crypto_7, this.mirror_8, this.directories_9, arg0, arg1);
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$72$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$72$Type', 655);
function FileWrapper$lambda$73$Type(network_0, path_1, mirrorBat_2, txns_3, resumeFile_4, commitWatcher_5, crypto_6, c_7, mirror_8, directories_9){
  this.network_0 = network_0;
  this.path_1 = path_1;
  this.mirrorBat_2 = mirrorBat_2;
  this.txns_3 = txns_3;
  this.resumeFile_4 = resumeFile_4;
  this.commitWatcher_5 = commitWatcher_5;
  this.crypto_6 = crypto_6;
  this.c_7 = c_7;
  this.mirror_8 = mirror_8;
  this.directories_9 = directories_9;
}

defineClass(1789, $wnd.Function, $intern_22, FileWrapper$lambda$73$Type);
_.apply_0 = function apply_2236(arg0){
  return lambda$73_0(this.network_0, this.path_1, this.mirrorBat_2, this.txns_3, this.resumeFile_4, this.commitWatcher_5, this.crypto_6, this.c_7, this.mirror_8, this.directories_9, arg0);
}
;
function FileWrapper$lambda$74$Type(network_0, path_1, mirrorBat_2, txns_3, resumeFile_4, commitWatcher_5, crypto_6, c_7, mirror_8){
  this.network_0 = network_0;
  this.path_1 = path_1;
  this.mirrorBat_2 = mirrorBat_2;
  this.txns_3 = txns_3;
  this.resumeFile_4 = resumeFile_4;
  this.commitWatcher_5 = commitWatcher_5;
  this.crypto_6 = crypto_6;
  this.c_7 = c_7;
  this.mirror_8 = mirror_8;
}

defineClass(653, 1, $intern_34, FileWrapper$lambda$74$Type);
_.apply_1 = function apply_2237(arg0, arg1){
  return lambda$74(this.network_0, this.path_1, this.mirrorBat_2, this.txns_3, this.resumeFile_4, this.commitWatcher_5, this.crypto_6, this.c_7, this.mirror_8, arg0, arg1);
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$74$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$74$Type', 653);
function FileWrapper$lambda$75$Type(){
}

defineClass(654, 1, $intern_34, FileWrapper$lambda$75$Type);
_.apply_1 = function apply_2238(arg0, arg1){
  return $clinit_FileWrapper() , castTo(arg1, 19);
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$75$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$75$Type', 654);
function FileWrapper$lambda$76$Type(dir_0, network_1, path_2, children_3, mirrorBat_4, txns_5, resumeFile_6, commitWatcher_7, crypto_8, c_9){
  this.dir_0 = dir_0;
  this.network_1 = network_1;
  this.path_2 = path_2;
  this.children_3 = children_3;
  this.mirrorBat_4 = mirrorBat_4;
  this.txns_5 = txns_5;
  this.resumeFile_6 = resumeFile_6;
  this.commitWatcher_7 = commitWatcher_7;
  this.crypto_8 = crypto_8;
  this.c_9 = c_9;
}

defineClass(1791, $wnd.Function, $intern_22, FileWrapper$lambda$76$Type);
_.apply_0 = function apply_2239(arg0){
  return lambda$76(this.dir_0, this.network_1, this.path_2, this.children_3, this.mirrorBat_4, this.txns_5, this.resumeFile_6, this.commitWatcher_7, this.crypto_8, this.c_9, arg0);
}
;
function FileWrapper$lambda$77$Type(dir_0, network_1){
  this.dir_0 = dir_0;
  this.network_1 = network_1;
}

defineClass(1792, $wnd.Function, $intern_22, FileWrapper$lambda$77$Type);
_.apply_0 = function apply_2240(arg0){
  return lambda$77_1(this.dir_0, this.network_1, arg0);
}
;
function FileWrapper$lambda$78$Type(){
}

defineClass(1790, $wnd.Function, $intern_22, FileWrapper$lambda$78$Type);
_.apply_0 = function apply_2241(arg0){
  return $clinit_FileWrapper() , castTo(arg0, 19).version;
}
;
function FileWrapper$lambda$79$Type($$outer_0, network_1){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
}

defineClass(1715, $wnd.Function, $intern_22, FileWrapper$lambda$79$Type);
_.apply_0 = function apply_2242(arg0){
  return $lambda$79_1(this.$$outer_0, this.network_1, arg0);
}
;
function FileWrapper$lambda$8$Type(){
}

defineClass(1691, $wnd.Function, {}, FileWrapper$lambda$8$Type);
_.accept_5 = function accept_178(arg0){
  $clinit_FileWrapper();
}
;
function FileWrapper$lambda$80$Type(){
}

defineClass(656, 1, {}, FileWrapper$lambda$80$Type);
var Lpeergos_shared_user_fs_FileWrapper$lambda$80$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$80$Type', 656);
function FileWrapper$lambda$81$Type(network_0, parent_1, transactions_2, c_3, commitWatcher_4, crypto_5, toParent_6, mirrorBat_7, resumeFile_8){
  this.network_0 = network_0;
  this.parent_1 = parent_1;
  this.transactions_2 = transactions_2;
  this.c_3 = c_3;
  this.commitWatcher_4 = commitWatcher_4;
  this.crypto_5 = crypto_5;
  this.toParent_6 = toParent_6;
  this.mirrorBat_7 = mirrorBat_7;
  this.resumeFile_8 = resumeFile_8;
}

defineClass(657, 1, $intern_34, FileWrapper$lambda$81$Type);
_.apply_1 = function apply_2243(arg0, arg1){
  return lambda$81_1(this.network_0, this.parent_1, this.transactions_2, this.c_3, this.commitWatcher_4, this.crypto_5, this.toParent_6, this.mirrorBat_7, this.resumeFile_8, arg0, arg1);
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$81$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$81$Type', 657);
function FileWrapper$lambda$82$Type(){
}

defineClass(658, 1, $intern_34, FileWrapper$lambda$82$Type);
_.apply_1 = function apply_2244(arg0, arg1){
  return $clinit_FileWrapper() , new Pair(castTo(castTo(arg1, 20).left, 43), castTo(concat(castTo(castTo(arg0, 20).right, 17).stream(), castTo(castTo(arg1, 20).right, 17).stream()).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17));
}
;
var Lpeergos_shared_user_fs_FileWrapper$lambda$82$Type_2_classLit = createForClass('peergos.shared.user.fs', 'FileWrapper/lambda$82$Type', 658);
function FileWrapper$lambda$83$Type(p_0){
  this.p_0 = p_0;
}

defineClass(1793, $wnd.Function, $intern_22, FileWrapper$lambda$83$Type);
_.apply_0 = function apply_2245(arg0){
  return lambda$83_1(this.p_0, arg0);
}
;
function FileWrapper$lambda$84$Type(network_0, parent_1, transactions_2, c_3, commitWatcher_4, crypto_5){
  this.network_0 = network_0;
  this.parent_1 = parent_1;
  this.transactions_2 = transactions_2;
  this.c_3 = c_3;
  this.commitWatcher_4 = commitWatcher_4;
  this.crypto_5 = crypto_5;
}

defineClass(1794, $wnd.Function, $intern_22, FileWrapper$lambda$84$Type);
_.apply_0 = function apply_2246(arg0){
  return lambda$84_1(this.network_0, this.parent_1, this.transactions_2, this.c_3, this.commitWatcher_4, this.crypto_5, arg0);
}
;
function FileWrapper$lambda$85$Type(f_0, now_1, crypto_2, toParent_3, parent_4){
  this.f_0 = f_0;
  this.now_1 = now_1;
  this.crypto_2 = crypto_2;
  this.toParent_3 = toParent_3;
  this.parent_4 = parent_4;
}

defineClass(1795, $wnd.Function, $intern_22, FileWrapper$lambda$85$Type);
_.apply_0 = function apply_2247(arg0){
  return lambda$85_0(this.f_0, this.now_1, this.crypto_2, this.toParent_3, this.parent_4, arg0);
}
;
function FileWrapper$lambda$86$Type(parent_0, c_1, f_2, network_3, transactions_4, crypto_5, mirrorBat_6, toClose_7, p_8, resumeFile_9){
  this.parent_0 = parent_0;
  this.c_1 = c_1;
  this.f_2 = f_2;
  this.network_3 = network_3;
  this.transactions_4 = transactions_4;
  this.crypto_5 = crypto_5;
  this.mirrorBat_6 = mirrorBat_6;
  this.toClose_7 = toClose_7;
  this.p_8 = p_8;
  this.resumeFile_9 = resumeFile_9;
}

defineClass(1796, $wnd.Function, $intern_22, FileWrapper$lambda$86$Type);
_.apply_0 = function apply_2248(arg0){
  return lambda$86(this.parent_0, this.c_1, this.f_2, this.network_3, this.transactions_4, this.crypto_5, this.mirrorBat_6, this.toClose_7, this.p_8, this.resumeFile_9, arg0);
}
;
function FileWrapper$lambda$87$Type(parent_0, c_1, f_2, network_3, transactions_4, txn_5, crypto_6, mirrorBat_7, toClose_8, p_9, resumeFile_10){
  this.parent_0 = parent_0;
  this.c_1 = c_1;
  this.f_2 = f_2;
  this.network_3 = network_3;
  this.transactions_4 = transactions_4;
  this.txn_5 = txn_5;
  this.crypto_6 = crypto_6;
  this.mirrorBat_7 = mirrorBat_7;
  this.toClose_8 = toClose_8;
  this.p_9 = p_9;
  this.resumeFile_10 = resumeFile_10;
}

defineClass(1798, $wnd.Function, $intern_22, FileWrapper$lambda$87$Type);
_.apply_0 = function apply_2249(arg0){
  return lambda$87_0(this.parent_0, this.c_1, this.f_2, this.network_3, this.transactions_4, this.txn_5, this.crypto_6, this.mirrorBat_7, this.toClose_8, this.p_9, this.resumeFile_10, arg0);
}
;
function FileWrapper$lambda$88$Type(parent_0, c_1, r_2, f_3, network_4, transactions_5, txn_6, crypto_7, mirrorBat_8, toClose_9, p_10){
  this.parent_0 = parent_0;
  this.c_1 = c_1;
  this.r_2 = r_2;
  this.f_3 = f_3;
  this.network_4 = network_4;
  this.transactions_5 = transactions_5;
  this.txn_6 = txn_6;
  this.crypto_7 = crypto_7;
  this.mirrorBat_8 = mirrorBat_8;
  this.toClose_9 = toClose_9;
  this.p_10 = p_10;
}

defineClass(1799, $wnd.Function, $intern_22, FileWrapper$lambda$88$Type);
_.apply_0 = function apply_2250(arg0){
  return lambda$88_0(this.parent_0, this.c_1, this.r_2, this.f_3, this.network_4, this.transactions_5, this.txn_6, this.crypto_7, this.mirrorBat_8, this.toClose_9, this.p_10, arg0);
}
;
function FileWrapper$lambda$89$Type(parent_0, c_1, r_2, f_3, network_4){
  this.parent_0 = parent_0;
  this.c_1 = c_1;
  this.r_2 = r_2;
  this.f_3 = f_3;
  this.network_4 = network_4;
}

defineClass(1803, $wnd.Function, $intern_22, FileWrapper$lambda$89$Type);
_.apply_0 = function apply_2251(arg0){
  return lambda$89_0(this.parent_0, this.c_1, this.r_2, this.f_3, this.network_4, arg0);
}
;
function FileWrapper$lambda$9$Type($$outer_0, crypto_1){
  this.$$outer_0 = $$outer_0;
  this.crypto_1 = crypto_1;
}

defineClass(1692, $wnd.Function, $intern_22, FileWrapper$lambda$9$Type);
_.apply_0 = function apply_2252(arg0){
  return $lambda$9_15(this.$$outer_0, this.crypto_1, arg0);
}
;
function FileWrapper$lambda$90$Type(parent_0, res_1, c_2, r_3, f_4, network_5){
  this.parent_0 = parent_0;
  this.res_1 = res_1;
  this.c_2 = c_2;
  this.r_3 = r_3;
  this.f_4 = f_4;
  this.network_5 = network_5;
}

defineClass(1806, $wnd.Function, $intern_22, FileWrapper$lambda$90$Type);
_.apply_0 = function apply_2253(arg0){
  return lambda$90(this.parent_0, this.res_1, this.c_2, this.r_3, this.f_4, this.network_5, arg0);
}
;
function FileWrapper$lambda$91$Type(res_0){
  this.res_0 = res_0;
}

defineClass(1807, $wnd.Function, $intern_22, FileWrapper$lambda$91$Type);
_.apply_0 = function apply_2254(arg0){
  return lambda$91_3(this.res_0, arg0);
}
;
function FileWrapper$lambda$92$Type(transactions_0, c_1, txn_2){
  this.transactions_0 = transactions_0;
  this.c_1 = c_1;
  this.txn_2 = txn_2;
}

defineClass(1804, $wnd.Function, $intern_22, FileWrapper$lambda$92$Type);
_.apply_0 = function apply_2255(arg0){
  return lambda$92(this.transactions_0, this.c_1, this.txn_2, arg0);
}
;
function FileWrapper$lambda$93$Type(parent_0, c_1, f_2, txn_3, network_4, crypto_5, mirrorBat_6, toClose_7){
  this.parent_0 = parent_0;
  this.c_1 = c_1;
  this.f_2 = f_2;
  this.txn_3 = txn_3;
  this.network_4 = network_4;
  this.crypto_5 = crypto_5;
  this.mirrorBat_6 = mirrorBat_6;
  this.toClose_7 = toClose_7;
}

defineClass(1805, $wnd.Function, $intern_22, FileWrapper$lambda$93$Type);
_.apply_0 = function apply_2256(arg0){
  return lambda$93_0(this.parent_0, this.c_1, this.f_2, this.txn_3, this.network_4, this.crypto_5, this.mirrorBat_6, this.toClose_7, arg0);
}
;
function FileWrapper$lambda$94$Type(parent_0, r2_1, c_2, f_3, txn_4, network_5, crypto_6, mirrorBat_7){
  this.parent_0 = parent_0;
  this.r2_1 = r2_1;
  this.c_2 = c_2;
  this.f_3 = f_3;
  this.txn_4 = txn_4;
  this.network_5 = network_5;
  this.crypto_6 = crypto_6;
  this.mirrorBat_7 = mirrorBat_7;
}

defineClass(1808, $wnd.Function, $intern_22, FileWrapper$lambda$94$Type);
_.apply_0 = function apply_2257(arg0){
  return lambda$94_2(this.parent_0, this.r2_1, this.c_2, this.f_3, this.txn_4, this.network_5, this.crypto_6, this.mirrorBat_7, arg0);
}
;
function FileWrapper$lambda$95$Type(p_0){
  this.p_0 = p_0;
}

defineClass(1800, $wnd.Function, $intern_22, FileWrapper$lambda$95$Type);
_.apply_0 = function apply_2258(arg0){
  return lambda$95_3(this.p_0, arg0);
}
;
function FileWrapper$lambda$96$Type(parent_0, r_1, c_2, f_3, txn_4, network_5, crypto_6, mirrorBat_7){
  this.parent_0 = parent_0;
  this.r_1 = r_1;
  this.c_2 = c_2;
  this.f_3 = f_3;
  this.txn_4 = txn_4;
  this.network_5 = network_5;
  this.crypto_6 = crypto_6;
  this.mirrorBat_7 = mirrorBat_7;
}

defineClass(1801, $wnd.Function, $intern_22, FileWrapper$lambda$96$Type);
_.apply_0 = function apply_2259(arg0){
  return lambda$96_3(this.parent_0, this.r_1, this.c_2, this.f_3, this.txn_4, this.network_5, this.crypto_6, this.mirrorBat_7);
}
;
function FileWrapper$lambda$97$Type(p_0){
  this.p_0 = p_0;
}

defineClass(1802, $wnd.Function, $intern_22, FileWrapper$lambda$97$Type);
_.apply_0 = function apply_2260(arg0){
  return lambda$97_1(this.p_0, arg0);
}
;
function FileWrapper$lambda$98$Type(toClose_0, parent_1, transactions_2, c_3, commitWatcher_4, network_5, crypto_6){
  this.toClose_0 = toClose_0;
  this.parent_1 = parent_1;
  this.transactions_2 = transactions_2;
  this.c_3 = c_3;
  this.commitWatcher_4 = commitWatcher_4;
  this.network_5 = network_5;
  this.crypto_6 = crypto_6;
}

defineClass(1797, $wnd.Function, $intern_22, FileWrapper$lambda$98$Type);
_.apply_0 = function apply_2261(arg0){
  return lambda$98_0(this.toClose_0, this.parent_1, this.transactions_2, this.c_3, this.commitWatcher_4, this.network_5, this.crypto_6, arg0);
}
;
function FileWrapper$lambda$99$Type(parent_0, transactions_1, c_2, commitWatcher_3, network_4, crypto_5){
  this.parent_0 = parent_0;
  this.transactions_1 = transactions_1;
  this.c_2 = c_2;
  this.commitWatcher_3 = commitWatcher_3;
  this.network_4 = network_4;
  this.crypto_5 = crypto_5;
}

defineClass(1716, $wnd.Function, $intern_22, FileWrapper$lambda$99$Type);
_.apply_0 = function apply_2262(arg0){
  return lambda$99_0(this.parent_0, this.transactions_1, this.c_2, this.commitWatcher_3, this.network_4, this.crypto_5, arg0);
}
;
function Fragment(data_0){
  if (1048676 < data_0.length)
    throw toJs(new IllegalStateException_0('fragment size ' + data_0.length + ' greater than max ' + $intern_11));
  this.data_0 = data_0;
}

defineClass(246, 1, {246:1}, Fragment);
var Lpeergos_shared_user_fs_Fragment_2_classLit = createForClass('peergos.shared.user.fs', 'Fragment', 246);
function FragmentWithHash(fragment, hash){
  this.fragment = fragment;
  this.hash_0 = hash;
}

defineClass(131, 1, {131:1}, FragmentWithHash);
var Lpeergos_shared_user_fs_FragmentWithHash_2_classLit = createForClass('peergos.shared.user.fs', 'FragmentWithHash', 131);
function $clinit_Fragmenter$Type(){
  $clinit_Fragmenter$Type = emptyMethod;
  SIMPLE = new Fragmenter$Type('SIMPLE', 0, 0);
  ERASURE_CODING = new Fragmenter$Type('ERASURE_CODING', 1, 1);
  MAP = castTo($collect_0(of_5(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_user_fs_Fragmenter$Type_2_classLit, 1), $intern_33, 223, 0, [SIMPLE, ERASURE_CODING])), toMap(makeLambdaFunction(Fragmenter$Type$lambda$0$Type.prototype.apply_0, Fragmenter$Type$lambda$0$Type, []), makeLambdaFunction(Fragmenter$Type$lambda$1$Type.prototype.apply_0, Fragmenter$Type$lambda$1$Type, []), new Collectors$lambda$44$Type, new Collectors$22methodref$ctor$Type)), 68);
}

function Fragmenter$Type(enum$name, enum$ordinal, val){
  Enum.call(this, enum$name, enum$ordinal);
  this.val_0 = val;
}

function ofVal(val){
  $clinit_Fragmenter$Type();
  var type_0;
  type_0 = castTo(MAP.get(valueOf_1(val)), 223);
  if (!type_0)
    throw toJs(new IllegalStateException_0('No Fragmenter type for value ' + val));
  return type_0;
}

function values_20(){
  $clinit_Fragmenter$Type();
  return stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_user_fs_Fragmenter$Type_2_classLit, 1), $intern_33, 223, 0, [SIMPLE, ERASURE_CODING]);
}

defineClass(223, 52, {4:1, 57:1, 52:1, 223:1}, Fragmenter$Type);
_.val_0 = 0;
var ERASURE_CODING, MAP, SIMPLE;
var Lpeergos_shared_user_fs_Fragmenter$Type_2_classLit = createForEnum('peergos.shared.user.fs', 'Fragmenter/Type', 223, values_20);
function Fragmenter$Type$lambda$0$Type(){
}

defineClass(2992, $wnd.Function, $intern_22, Fragmenter$Type$lambda$0$Type);
_.apply_0 = function apply_2263(arg0){
  return $clinit_Fragmenter$Type() , valueOf_1(castTo(arg0, 223).val_0);
}
;
function Fragmenter$Type$lambda$1$Type(){
}

defineClass(2993, $wnd.Function, $intern_22, Fragmenter$Type$lambda$1$Type);
_.apply_0 = function apply_2264(arg0){
  return $clinit_Fragmenter$Type() , castTo(arg0, 223);
}
;
function $ensureBufferWithinLimit(this$static){
  var first, last, sorted;
  if ((new AbstractHashMap$EntrySet(this$static.bufferedChunks.backingMap)).this$01.size() > this$static.nBufferedChunks) {
    sorted = castTo($collect_0($sorted(new StreamImpl(null, new Spliterators$IteratorSpliterator(new AbstractMap$1(this$static.bufferedChunks), 1))), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
    first = castTo(sorted.getAtIndex(0), 69).value_0;
    if (lt(first, this$static.globalIndex))
      $remove_11(this$static.bufferedChunks, valueOf_2(first));
    else {
      last = castTo(sorted.getAtIndex(sorted.size() - 1), 69).value_0;
      gt(last, this$static.globalIndex) && $remove_11(this$static.bufferedChunks, valueOf_2(last));
    }
  }
}

function $getChunk_0(this$static, cap, chunkOffset, len){
  var existing, pending;
  existing = castTo($get_7(this$static.bufferedChunks, valueOf_2(chunkOffset)), 20);
  if (existing)
    return new CompletableFuture_0(existing);
  pending = castTo($get_7(this$static.inProgress, valueOf_2(chunkOffset)), 6);
  if (pending)
    return pending;
  $put_7(this$static.inProgress, valueOf_2(chunkOffset), new CompletableFuture);
  ($clinit_System() , out_0).println_0('Downloading chunk ' + toString_4(div(chunkOffset, $intern_70)));
  return $exceptionally($thenApply($thenCompose($getSubsequentMetadata(this$static, cap, 0), makeLambdaFunction(LazyInputStreamCombiner$lambda$3$Type.prototype.apply_0, LazyInputStreamCombiner$lambda$3$Type, [this$static, cap, len])), makeLambdaFunction(LazyInputStreamCombiner$lambda$4$Type.prototype.apply_0, LazyInputStreamCombiner$lambda$4$Type, [this$static, chunkOffset])), makeLambdaFunction(LazyInputStreamCombiner$lambda$5$Type.prototype.apply_0, LazyInputStreamCombiner$lambda$5$Type, [this$static, chunkOffset]));
}

function $getChunk_1(this$static, access, chunkLocation, bat, truncateTo){
  if (access.isDirectory_0)
    throw toJs(new IllegalStateException_0('File linked to a directory for its next chunk!'));
  return $thenCompose($retriever(access, this$static.baseKey, this$static.streamSecret, chunkLocation, bat, this$static.crypto_0.hasher), makeLambdaFunction(LazyInputStreamCombiner$lambda$6$Type.prototype.apply_0, LazyInputStreamCombiner$lambda$6$Type, [this$static, truncateTo, chunkLocation, bat, access]));
}

function $getSubsequentMetadata(this$static, nextCap, chunks){
  var err;
  if (!nextCap) {
    err = new CompletableFuture;
    $completeExceptionally(err, new EOFException);
    return err;
  }
  return $thenCompose($thenCompose(this$static.network.getMetadata(this$static.version, nextCap), makeLambdaFunction(LazyInputStreamCombiner$lambda$9$Type.prototype.apply_0, LazyInputStreamCombiner$lambda$9$Type, [])), makeLambdaFunction(LazyInputStreamCombiner$lambda$10$Type.prototype.apply_0, LazyInputStreamCombiner$lambda$10$Type, [this$static, nextCap, chunks]));
}

function $lambda$1_27(this$static, finalCount_1, finalBufferedChunk_2, nextChunkCap_4, mapKeys_3){
  $parallelChunksDownload(this$static, finalCount_1, finalBufferedChunk_2, mapKeys_3, nextChunkCap_4);
}

function $lambda$10_10(this$static, nextCap_1, chunks_2, access_2){
  if (compare_1(chunks_2, 0) == 0)
    return new CompletableFuture_0(access_2);
  return $thenCompose($getNextChunkLocation(access_2, this$static.baseKey, this$static.streamSecret, copyOf(nextCap_1.mapKey, nextCap_1.mapKey.length), nextCap_1.bat, this$static.crypto_0.hasher), makeLambdaFunction(LazyInputStreamCombiner$lambda$11$Type.prototype.apply_0, LazyInputStreamCombiner$lambda$11$Type, [this$static, nextCap_1, chunks_2]));
}

function $lambda$11_9(this$static, nextCap_1, chunks_2, mapKeyAndBat_2){
  var newNextCap;
  newNextCap = nextCap_1.withMapKey(castTo(mapKeyAndBat_2.left, 11), castTo(mapKeyAndBat_2.right, 12));
  return $getSubsequentMetadata(this$static, newNextCap, sub_1(chunks_2, 1));
}

function $lambda$12_8(this$static, truncateTo_1, startOfTargetChunk_2, finalInternalIndex_4, targetChunkLocation_3){
  var targetPointer;
  targetPointer = castTo(castTo($get_7(this$static.bufferedChunks, valueOf_2(this$static.globalIndex)), 20).right, 71).withMapKey(castTo(targetChunkLocation_3.left, 11), castTo(targetChunkLocation_3.right, 12));
  return $thenCompose($thenCompose($getSubsequentMetadata(this$static, targetPointer, 0), makeLambdaFunction(LazyInputStreamCombiner$lambda$13$Type.prototype.apply_0, LazyInputStreamCombiner$lambda$13$Type, [this$static, targetPointer, truncateTo_1])), makeLambdaFunction(LazyInputStreamCombiner$lambda$14$Type.prototype.apply_0, LazyInputStreamCombiner$lambda$14$Type, [this$static, startOfTargetChunk_2, finalInternalIndex_4]));
}

function $lambda$13_11(this$static, targetPointer_1, truncateTo_2, access_2){
  return $getChunk_1(this$static, access_2, copyOf(targetPointer_1.mapKey, targetPointer_1.mapKey.length), targetPointer_1.bat, truncateTo_2);
}

function $lambda$14_9(this$static, startOfTargetChunk_1, finalInternalIndex_3, p_2){
  $updateState(this$static, startOfTargetChunk_1, castTo(p_2.left, 11), castTo(p_2.right, 71));
  return $skip_1(this$static, finalInternalIndex_3);
}

function $lambda$15_9(this$static, truncateTo_1, access_1){
  return $getChunk_1(this$static, access_1, $getMapKey(castTo(castTo($get_7(this$static.bufferedChunks, valueOf_2(this$static.globalIndex)), 20).right, 71)), castTo(castTo($get_7(this$static.bufferedChunks, valueOf_2(this$static.globalIndex)), 20).right, 71).bat, truncateTo_1);
}

function $lambda$16_10(this$static, startOfTargetChunk_1, finalInternalIndex_3, p_2){
  $updateState(this$static, startOfTargetChunk_1, castTo(p_2.left, 11), castTo(p_2.right, 71));
  return $skip_1(this$static, finalInternalIndex_3);
}

function $lambda$18_7(this$static, toRead_1, nextChunk_2, res_4, offset_5, length_6, current_5){
  this$static.index_0 = 0;
  this$static.globalIndex = nextChunk_2;
  this$static.currentChunk = castTo(current_5.left, 11);
  this$static.currentNextChunkPointer = castTo(current_5.right, 71);
  $ensureBufferWithinLimit(this$static);
  return $thenApply($readIntoArray(this$static, res_4, offset_5 + toRead_1, length_6 - toRead_1), makeLambdaFunction(LazyInputStreamCombiner$lambda$19$Type.prototype.apply_0, LazyInputStreamCombiner$lambda$19$Type, [toRead_1]));
}

function $lambda$2_27(this$static, nextChunkCap_1, mapKey_2, chunkOffset_3, size_5){
  return $getChunk_0(this$static, nextChunkCap_1.withMapKey(castTo(mapKey_2.left, 11), castTo(mapKey_2.right, 12)), chunkOffset_3, size_5);
}

function $lambda$3_26(this$static, cap_1, len_2, access_2){
  return $getChunk_1(this$static, access_2, copyOf(cap_1.mapKey, cap_1.mapKey.length), cap_1.bat, len_2);
}

function $lambda$4_19(this$static, chunkOffset_1, p_1){
  var fut, res;
  res = new Pair(castTo(p_1.left, 11), castTo(p_1.right, 71));
  $put_7(this$static.bufferedChunks, valueOf_2(chunkOffset_1), res);
  fut = castTo($remove_11(this$static.inProgress, valueOf_2(chunkOffset_1)), 6);
  !!fut && $complete(fut, res);
  ($clinit_System() , out_0).println_0('Completed chunk ' + toString_4(div(chunkOffset_1, $intern_70)));
  return res;
}

function $lambda$5_18(this$static, chunkOffset_1, t_1){
  var fut;
  fut = castTo($remove_11(this$static.inProgress, valueOf_2(chunkOffset_1)), 6);
  !!fut && $completeExceptionally(fut, t_1);
  throw toJs(new RuntimeException_2(t_1));
}

function $lambda$6_17(this$static, truncateTo_1, chunkLocation_2, bat_3, access_4, retriever_4){
  return $thenCompose($getNextChunkLocation(access_4, this$static.baseKey, this$static.streamSecret, chunkLocation_2, bat_3, this$static.crypto_0.hasher), makeLambdaFunction(LazyInputStreamCombiner$lambda$7$Type.prototype.apply_0, LazyInputStreamCombiner$lambda$7$Type, [this$static, retriever_4, truncateTo_1, chunkLocation_2, bat_3, access_4]));
}

function $lambda$7_12(this$static, retriever_1, truncateTo_2, chunkLocation_3, bat_4, access_5, mapKeyAndBat_5){
  var newNextChunkPointer;
  newNextChunkPointer = $withMapKey(this$static.originalNextPointer, castTo(mapKeyAndBat_5.left, 11), castTo(mapKeyAndBat_5.right, 12));
  return $thenApply($getChunk(retriever_1, this$static.version, this$static.network, this$static.crypto_0, 0, truncateTo_2, $withMapKey(this$static.originalNextPointer, chunkLocation_3, bat_4), this$static.streamSecret, access_5.lastCommittedHash, this$static.monitor), makeLambdaFunction(LazyInputStreamCombiner$lambda$8$Type.prototype.apply_0, LazyInputStreamCombiner$lambda$8$Type, [newNextChunkPointer]));
}

function $parallelChunksDownload(this$static, finalCount, lastBufferedChunk, mapKeys, nextChunkCap){
  var chunkOffset, i, mapKey, size_0;
  for (i = 1; i < finalCount + 1; i++) {
    size_0 = lt(add_1(div(lastBufferedChunk, $intern_70), i), this$static.totalChunks)?$intern_70:toInt_0(mod_0(this$static.totalLength, $intern_70));
    mapKey = castTo(mapKeys.getAtIndex(i - 1), 20);
    chunkOffset = add_1(lastBufferedChunk, i * $intern_70);
    if ($containsKey_3(this$static.inProgress, valueOf_2(chunkOffset)) || $containsKey_3(this$static.bufferedChunks, valueOf_2(chunkOffset)))
      continue;
    ($clinit_System() , out_0).println_0('Submitting chunk download ' + toString_4(div(chunkOffset, $intern_70)));
    $execute(($clinit_ForkJoinPool() , $clinit_ForkJoinPool() , instance_0), new LazyInputStreamCombiner$lambda$2$Type(this$static, nextChunkCap, mapKey, chunkOffset, size_0));
  }
}

function $readIntoArray(this$static, res, offset, length_0){
  var available, err, globalOffset, nextChunk, nextChunkSize, toRead;
  available = this$static.currentChunk.length - this$static.index_0;
  toRead = $wnd.Math.min(available, length_0);
  arraycopy(this$static.currentChunk, this$static.index_0, res, offset, toRead);
  this$static.index_0 += toRead;
  globalOffset = add_1(this$static.globalIndex, this$static.index_0);
  $execute(($clinit_ForkJoinPool() , $clinit_ForkJoinPool() , instance_0), new LazyInputStreamCombiner$lambda$0$Type(this$static));
  if (available >= length_0)
    return new CompletableFuture_0(valueOf_1(length_0));
  if (gt(globalOffset, this$static.totalLength)) {
    err = new CompletableFuture;
    $completeExceptionally(err, new EOFException);
    return err;
  }
  nextChunkSize = gt(sub_1(this$static.totalLength, globalOffset), $intern_70)?$intern_70:toInt_0(sub_1(this$static.totalLength, globalOffset));
  nextChunk = add_1(this$static.globalIndex, $intern_70);
  return $thenCompose($getChunk_0(this$static, castTo(castTo($get_7(this$static.bufferedChunks, valueOf_2(this$static.globalIndex)), 20).right, 71), nextChunk, nextChunkSize), makeLambdaFunction(LazyInputStreamCombiner$lambda$18$Type.prototype.apply_0, LazyInputStreamCombiner$lambda$18$Type, [this$static, toRead, nextChunk, res, offset, length_0]));
}

function $reset_5(this$static){
  $put_7(this$static.bufferedChunks, valueOf_2(0), new Pair(this$static.originalChunk, this$static.originalNextPointer));
  this$static.globalIndex = 0;
  this$static.currentChunk = this$static.originalChunk;
  this$static.currentNextChunkPointer = this$static.originalNextPointer;
  this$static.index_0 = 0;
  return new CompletableFuture_0(this$static);
}

function $seekJS_1(this$static, hi32, low32){
  var globalOffset, seek;
  seek = or_0(shl_0(hi32, 32), and_0(low32, $intern_47));
  if (lt(this$static.totalLength, seek))
    throw toJs(new IllegalStateException_0('Cannot seek to position ' + toString_4(seek) + ' in file of length ' + toString_4(this$static.totalLength)));
  globalOffset = add_1(this$static.globalIndex, this$static.index_0);
  if (compare_1(seek, globalOffset) > 0)
    return $skip_1(this$static, sub_1(seek, globalOffset));
  return $thenCompose($reset_5(this$static), makeLambdaFunction(LazyInputStreamCombiner$lambda$17$Type.prototype.apply_0, LazyInputStreamCombiner$lambda$17$Type, [seek]));
}

function $skip_1(this$static, skip){
  var available, chunksToSkip, finalInternalIndex, finalOffset, startOfTargetChunk, toRead, toSkipAfterThisChunk, truncateTo;
  available = this$static.currentChunk.length - this$static.index_0;
  if (compare_1(skip, available) <= 0) {
    this$static.index_0 += toInt_0(skip);
    return new CompletableFuture_0(this$static);
  }
  toRead = compare_1(available, skip) < 0?available:skip;
  toSkipAfterThisChunk = sub_1(skip, toRead);
  finalOffset = add_1(add_1(this$static.index_0, this$static.globalIndex), skip);
  finalInternalIndex = mod_0(finalOffset, $intern_70);
  startOfTargetChunk = sub_1(finalOffset, finalInternalIndex);
  chunksToSkip = div(toSkipAfterThisChunk, $intern_70);
  truncateTo = toInt_0(min_1($intern_70, sub_1(this$static.totalLength, startOfTargetChunk)));
  if (this$static.streamSecret.ref != null) {
    return $thenCompose(calculateMapKey(castTo($get_6(this$static.streamSecret), 11), this$static.originalChunkLocation, this$static.originalChunkBat, finalOffset, this$static.crypto_0.hasher), makeLambdaFunction(LazyInputStreamCombiner$lambda$12$Type.prototype.apply_0, LazyInputStreamCombiner$lambda$12$Type, [this$static, truncateTo, startOfTargetChunk, finalInternalIndex]));
  }
  return $thenCompose($thenCompose($getSubsequentMetadata(this$static, castTo(castTo($get_7(this$static.bufferedChunks, valueOf_2(this$static.globalIndex)), 20).right, 71), chunksToSkip), makeLambdaFunction(LazyInputStreamCombiner$lambda$15$Type.prototype.apply_0, LazyInputStreamCombiner$lambda$15$Type, [this$static, truncateTo])), makeLambdaFunction(LazyInputStreamCombiner$lambda$16$Type.prototype.apply_0, LazyInputStreamCombiner$lambda$16$Type, [this$static, startOfTargetChunk, finalInternalIndex]));
}

function $syncPrefetch(this$static, nChunks){
  var finalBufferedChunk, finalCount, globalIndexCopy, i, lastBufferedChunkInSequence, nextChunkCap;
  if (this$static.streamSecret.ref == null)
    return;
  globalIndexCopy = this$static.globalIndex;
  if (gt(add_1(globalIndexCopy, $intern_70), this$static.totalLength))
    return;
  lastBufferedChunkInSequence = globalIndexCopy;
  for (i = 1; i <= nChunks; i++) {
    if (!$containsKey_3(this$static.bufferedChunks, valueOf_2(add_1(lastBufferedChunkInSequence, i * $intern_70)))) {
      lastBufferedChunkInSequence = add_1(lastBufferedChunkInSequence, (i - 1) * $intern_70);
      break;
    }
  }
  gte_0(add_1(lastBufferedChunkInSequence, nChunks * $intern_70), this$static.totalLength) && (nChunks = toInt_0(div(sub_1(sub_1(this$static.totalLength, lastBufferedChunkInSequence), 1), $intern_70)));
  if (nChunks == 0)
    return;
  finalCount = nChunks;
  nextChunkCap = castTo(castTo($get_7(this$static.bufferedChunks, valueOf_2(lastBufferedChunkInSequence)), 20).right, 71);
  finalBufferedChunk = lastBufferedChunkInSequence;
  ($clinit_System() , out_0).println_0('Prefetching ' + finalCount + ' chunks, starting from chunk ' + toString_4(add_1(div(lastBufferedChunkInSequence, $intern_70), 1)));
  $thenAccept(calculateSubsequentMapKeys(castTo($get_6(this$static.streamSecret), 11), copyOf(nextChunkCap.mapKey, nextChunkCap.mapKey.length), nextChunkCap.bat, finalCount - 1, this$static.crypto_0.hasher), new LazyInputStreamCombiner$lambda$1$Type(this$static, finalCount, finalBufferedChunk, nextChunkCap));
}

function $updateState(this$static, globalIndex, chunk, nextChunkPointer){
  this$static.index_0 = 0;
  this$static.globalIndex = globalIndex;
  this$static.currentChunk = chunk;
  this$static.currentNextChunkPointer = nextChunkPointer;
  $put_7(this$static.bufferedChunks, valueOf_2(globalIndex), new Pair(chunk, nextChunkPointer));
}

function LazyInputStreamCombiner(version, chunk, nextChunkLoc, nextChunkBat, originalChunk, originalChunkLocation, originalChunkBat, streamSecret, originalNextChunkPointer, originalNextChunkBat, network, crypto_0, baseKey, totalLength, nBufferedChunks, monitor){
  this.bufferedChunks = new ConcurrentHashMap;
  this.inProgress = new ConcurrentHashMap;
  if (chunk == null)
    throw toJs(new IllegalStateException_0('Null initial chunk!'));
  this.version = version;
  this.network = network;
  this.crypto_0 = crypto_0;
  this.baseKey = baseKey;
  this.monitor = monitor;
  this.totalLength = totalLength;
  this.totalChunks = div(sub_1(add_1(totalLength, $intern_70), 1), $intern_70);
  this.originalChunk = originalChunk;
  this.originalChunkLocation = originalChunkLocation;
  this.originalChunkBat = originalChunkBat;
  this.streamSecret = streamSecret;
  this.originalNextPointer = new AbsoluteCapability(originalNextChunkPointer.owner, originalNextChunkPointer.writer, copyOf(originalNextChunkPointer.mapKey, originalNextChunkPointer.mapKey.length), originalNextChunkBat, baseKey);
  this.globalIndex = 0;
  this.currentChunk = chunk;
  this.currentNextChunkPointer = new AbsoluteCapability(nextChunkLoc.owner, nextChunkLoc.writer, copyOf(nextChunkLoc.mapKey, nextChunkLoc.mapKey.length), nextChunkBat, baseKey);
  $put_7(this.bufferedChunks, valueOf_2(0), new Pair(chunk, this.currentNextChunkPointer));
  this.index_0 = 0;
  this.nBufferedChunks = nBufferedChunks;
}

function lambda$17_4(seek_0, x_1){
  return $skip_1(castTo(x_1, 438), seek_0);
}

function lambda$19_9(toRead_0, bytesRead_1){
  return valueOf_1(bytesRead_1.value_0 + toRead_0);
}

function lambda$8_8(newNextChunkPointer_0, x_1){
  var nextData;
  nextData = (checkCriticalElement(x_1.ref != null) , castTo(x_1.ref, 192)).chunk.data_0;
  return new Pair(nextData, newNextChunkPointer_0);
}

function lambda$9_8(meta_0){
  var err;
  if (meta_0.ref == null) {
    err = new CompletableFuture;
    $completeExceptionally(err, new EOFException);
    return err;
  }
  return new CompletableFuture_0((checkCriticalElement(meta_0.ref != null) , castTo(meta_0.ref, 115)));
}

defineClass(438, 1, {118:1, 438:1}, LazyInputStreamCombiner);
_.parseLimitedStream = function parseLimitedStream_1(fromCbor, accumulator, objectsToSkip, maxObjectsToRead, maxBytesToRead){
  return $parseLimitedStreamRecurse(this, initUnidimensionalArray(B_classLit, $intern_28, 8, 0, 15, 1), fromCbor, accumulator, objectsToSkip, maxObjectsToRead, maxBytesToRead);
}
;
_.parseLimitedStreamRecurse = function parseLimitedStreamRecurse_1(prefix, fromCbor, accumulator, objectsToSkip, maxObjectsToRead, maxBytesToRead){
  return $parseLimitedStreamRecurse(this, prefix, fromCbor, accumulator, objectsToSkip, maxObjectsToRead, maxBytesToRead);
}
;
_.parseStream = function parseStream_2(fromCbor, accumulator, maxBytesToRead){
  return $parseStreamRecurse(this, initUnidimensionalArray(B_classLit, $intern_28, 8, 0, 15, 1), fromCbor, accumulator, maxBytesToRead);
}
;
_.parseStreamRecurse = function parseStreamRecurse_1(prefix, fromCbor, accumulator, maxBytesToRead){
  return $parseStreamRecurse(this, prefix, fromCbor, accumulator, maxBytesToRead);
}
;
_.seek_1 = function seek_3(offset){
  return $seekJS_1(this, toInt_0(shr_0(offset, 32)), toInt_0(offset));
}
;
_.close = function close_9(){
}
;
_.readIntoArray = function readIntoArray_1(res, offset, length_0){
  return $readIntoArray(this, res, offset, length_0);
}
;
_.reset = function reset_2(){
  return $reset_5(this);
}
;
_.seekJS = function seekJS_1(hi32, low32){
  return $seekJS_1(this, hi32, low32);
}
;
_.globalIndex = 0;
_.index_0 = 0;
_.nBufferedChunks = 0;
_.totalChunks = 0;
_.totalLength = 0;
var Lpeergos_shared_user_fs_LazyInputStreamCombiner_2_classLit = createForClass('peergos.shared.user.fs', 'LazyInputStreamCombiner', 438);
function LazyInputStreamCombiner$lambda$0$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
  this.nChunks_1 = 5;
}

defineClass(1174, 1, {}, LazyInputStreamCombiner$lambda$0$Type);
_.run = function run_4(){
  $syncPrefetch(this.$$outer_0, this.nChunks_1);
}
;
_.nChunks_1 = 0;
var Lpeergos_shared_user_fs_LazyInputStreamCombiner$lambda$0$Type_2_classLit = createForClass('peergos.shared.user.fs', 'LazyInputStreamCombiner/lambda$0$Type', 1174);
function LazyInputStreamCombiner$lambda$1$Type($$outer_0, finalCount_1, finalBufferedChunk_2, nextChunkCap_4){
  this.$$outer_0 = $$outer_0;
  this.finalCount_1 = finalCount_1;
  this.finalBufferedChunk_2 = finalBufferedChunk_2;
  this.nextChunkCap_4 = nextChunkCap_4;
}

defineClass(1175, 1, $intern_32, LazyInputStreamCombiner$lambda$1$Type);
_.accept = function accept_179(arg0){
  $lambda$1_27(this.$$outer_0, this.finalCount_1, this.finalBufferedChunk_2, this.nextChunkCap_4, arg0);
}
;
_.andThen = function andThen_90(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
_.finalBufferedChunk_2 = 0;
_.finalCount_1 = 0;
var Lpeergos_shared_user_fs_LazyInputStreamCombiner$lambda$1$Type_2_classLit = createForClass('peergos.shared.user.fs', 'LazyInputStreamCombiner/lambda$1$Type', 1175);
function LazyInputStreamCombiner$lambda$10$Type($$outer_0, nextCap_1, chunks_2){
  this.$$outer_0 = $$outer_0;
  this.nextCap_1 = nextCap_1;
  this.chunks_2 = chunks_2;
}

defineClass(3549, $wnd.Function, $intern_22, LazyInputStreamCombiner$lambda$10$Type);
_.apply_0 = function apply_2265(arg0){
  return $lambda$10_10(this.$$outer_0, this.nextCap_1, this.chunks_2, arg0);
}
;
_.chunks_2 = 0;
function LazyInputStreamCombiner$lambda$11$Type($$outer_0, nextCap_1, chunks_2){
  this.$$outer_0 = $$outer_0;
  this.nextCap_1 = nextCap_1;
  this.chunks_2 = chunks_2;
}

defineClass(3557, $wnd.Function, $intern_22, LazyInputStreamCombiner$lambda$11$Type);
_.apply_0 = function apply_2266(arg0){
  return $lambda$11_9(this.$$outer_0, this.nextCap_1, this.chunks_2, arg0);
}
;
_.chunks_2 = 0;
function LazyInputStreamCombiner$lambda$12$Type($$outer_0, truncateTo_1, startOfTargetChunk_2, finalInternalIndex_4){
  this.$$outer_0 = $$outer_0;
  this.truncateTo_1 = truncateTo_1;
  this.startOfTargetChunk_2 = startOfTargetChunk_2;
  this.finalInternalIndex_4 = finalInternalIndex_4;
}

defineClass(3550, $wnd.Function, $intern_22, LazyInputStreamCombiner$lambda$12$Type);
_.apply_0 = function apply_2267(arg0){
  return $lambda$12_8(this.$$outer_0, this.truncateTo_1, this.startOfTargetChunk_2, this.finalInternalIndex_4, arg0);
}
;
_.finalInternalIndex_4 = 0;
_.startOfTargetChunk_2 = 0;
_.truncateTo_1 = 0;
function LazyInputStreamCombiner$lambda$13$Type($$outer_0, targetPointer_1, truncateTo_2){
  this.$$outer_0 = $$outer_0;
  this.targetPointer_1 = targetPointer_1;
  this.truncateTo_2 = truncateTo_2;
}

defineClass(3558, $wnd.Function, $intern_22, LazyInputStreamCombiner$lambda$13$Type);
_.apply_0 = function apply_2268(arg0){
  return $lambda$13_11(this.$$outer_0, this.targetPointer_1, this.truncateTo_2, arg0);
}
;
_.truncateTo_2 = 0;
function LazyInputStreamCombiner$lambda$14$Type($$outer_0, startOfTargetChunk_1, finalInternalIndex_3){
  this.$$outer_0 = $$outer_0;
  this.startOfTargetChunk_1 = startOfTargetChunk_1;
  this.finalInternalIndex_3 = finalInternalIndex_3;
}

defineClass(3559, $wnd.Function, $intern_22, LazyInputStreamCombiner$lambda$14$Type);
_.apply_0 = function apply_2269(arg0){
  return $lambda$14_9(this.$$outer_0, this.startOfTargetChunk_1, this.finalInternalIndex_3, arg0);
}
;
_.finalInternalIndex_3 = 0;
_.startOfTargetChunk_1 = 0;
function LazyInputStreamCombiner$lambda$15$Type($$outer_0, truncateTo_1){
  this.$$outer_0 = $$outer_0;
  this.truncateTo_1 = truncateTo_1;
}

defineClass(3551, $wnd.Function, $intern_22, LazyInputStreamCombiner$lambda$15$Type);
_.apply_0 = function apply_2270(arg0){
  return $lambda$15_9(this.$$outer_0, this.truncateTo_1, arg0);
}
;
_.truncateTo_1 = 0;
function LazyInputStreamCombiner$lambda$16$Type($$outer_0, startOfTargetChunk_1, finalInternalIndex_3){
  this.$$outer_0 = $$outer_0;
  this.startOfTargetChunk_1 = startOfTargetChunk_1;
  this.finalInternalIndex_3 = finalInternalIndex_3;
}

defineClass(3552, $wnd.Function, $intern_22, LazyInputStreamCombiner$lambda$16$Type);
_.apply_0 = function apply_2271(arg0){
  return $lambda$16_10(this.$$outer_0, this.startOfTargetChunk_1, this.finalInternalIndex_3, arg0);
}
;
_.finalInternalIndex_3 = 0;
_.startOfTargetChunk_1 = 0;
function LazyInputStreamCombiner$lambda$17$Type(seek_0){
  this.seek_0 = seek_0;
}

defineClass(3553, $wnd.Function, $intern_22, LazyInputStreamCombiner$lambda$17$Type);
_.apply_0 = function apply_2272(arg0){
  return lambda$17_4(this.seek_0, arg0);
}
;
_.seek_0 = 0;
function LazyInputStreamCombiner$lambda$18$Type($$outer_0, toRead_1, nextChunk_2, res_4, offset_5, length_6){
  this.$$outer_0 = $$outer_0;
  this.toRead_1 = toRead_1;
  this.nextChunk_2 = nextChunk_2;
  this.res_4 = res_4;
  this.offset_5 = offset_5;
  this.length_6 = length_6;
}

defineClass(3554, $wnd.Function, $intern_22, LazyInputStreamCombiner$lambda$18$Type);
_.apply_0 = function apply_2273(arg0){
  return $lambda$18_7(this.$$outer_0, this.toRead_1, this.nextChunk_2, this.res_4, this.offset_5, this.length_6, arg0);
}
;
_.length_6 = 0;
_.nextChunk_2 = 0;
_.offset_5 = 0;
_.toRead_1 = 0;
function LazyInputStreamCombiner$lambda$19$Type(toRead_0){
  this.toRead_0 = toRead_0;
}

defineClass(3560, $wnd.Function, $intern_22, LazyInputStreamCombiner$lambda$19$Type);
_.apply_0 = function apply_2274(arg0){
  return lambda$19_9(this.toRead_0, arg0);
}
;
_.toRead_0 = 0;
function LazyInputStreamCombiner$lambda$2$Type($$outer_0, nextChunkCap_1, mapKey_2, chunkOffset_3, size_5){
  this.$$outer_0 = $$outer_0;
  this.nextChunkCap_1 = nextChunkCap_1;
  this.mapKey_2 = mapKey_2;
  this.chunkOffset_3 = chunkOffset_3;
  this.size_5 = size_5;
}

defineClass(1176, 1, {}, LazyInputStreamCombiner$lambda$2$Type);
_.run = function run_5(){
  $lambda$2_27(this.$$outer_0, this.nextChunkCap_1, this.mapKey_2, this.chunkOffset_3, this.size_5);
}
;
_.chunkOffset_3 = 0;
_.size_5 = 0;
var Lpeergos_shared_user_fs_LazyInputStreamCombiner$lambda$2$Type_2_classLit = createForClass('peergos.shared.user.fs', 'LazyInputStreamCombiner/lambda$2$Type', 1176);
function LazyInputStreamCombiner$lambda$3$Type($$outer_0, cap_1, len_2){
  this.$$outer_0 = $$outer_0;
  this.cap_1 = cap_1;
  this.len_2 = len_2;
}

defineClass(3544, $wnd.Function, $intern_22, LazyInputStreamCombiner$lambda$3$Type);
_.apply_0 = function apply_2275(arg0){
  return $lambda$3_26(this.$$outer_0, this.cap_1, this.len_2, arg0);
}
;
_.len_2 = 0;
function LazyInputStreamCombiner$lambda$4$Type($$outer_0, chunkOffset_1){
  this.$$outer_0 = $$outer_0;
  this.chunkOffset_1 = chunkOffset_1;
}

defineClass(3545, $wnd.Function, $intern_22, LazyInputStreamCombiner$lambda$4$Type);
_.apply_0 = function apply_2276(arg0){
  return $lambda$4_19(this.$$outer_0, this.chunkOffset_1, arg0);
}
;
_.chunkOffset_1 = 0;
function LazyInputStreamCombiner$lambda$5$Type($$outer_0, chunkOffset_1){
  this.$$outer_0 = $$outer_0;
  this.chunkOffset_1 = chunkOffset_1;
}

defineClass(3546, $wnd.Function, $intern_22, LazyInputStreamCombiner$lambda$5$Type);
_.apply_0 = function apply_2277(arg0){
  return $lambda$5_18(this.$$outer_0, this.chunkOffset_1, arg0);
}
;
_.chunkOffset_1 = 0;
function LazyInputStreamCombiner$lambda$6$Type($$outer_0, truncateTo_1, chunkLocation_2, bat_3, access_4){
  this.$$outer_0 = $$outer_0;
  this.truncateTo_1 = truncateTo_1;
  this.chunkLocation_2 = chunkLocation_2;
  this.bat_3 = bat_3;
  this.access_4 = access_4;
}

defineClass(3547, $wnd.Function, $intern_22, LazyInputStreamCombiner$lambda$6$Type);
_.apply_0 = function apply_2278(arg0){
  return $lambda$6_17(this.$$outer_0, this.truncateTo_1, this.chunkLocation_2, this.bat_3, this.access_4, arg0);
}
;
_.truncateTo_1 = 0;
function LazyInputStreamCombiner$lambda$7$Type($$outer_0, retriever_1, truncateTo_2, chunkLocation_3, bat_4, access_5){
  this.$$outer_0 = $$outer_0;
  this.retriever_1 = retriever_1;
  this.truncateTo_2 = truncateTo_2;
  this.chunkLocation_3 = chunkLocation_3;
  this.bat_4 = bat_4;
  this.access_5 = access_5;
}

defineClass(3555, $wnd.Function, $intern_22, LazyInputStreamCombiner$lambda$7$Type);
_.apply_0 = function apply_2279(arg0){
  return $lambda$7_12(this.$$outer_0, this.retriever_1, this.truncateTo_2, this.chunkLocation_3, this.bat_4, this.access_5, arg0);
}
;
_.truncateTo_2 = 0;
function LazyInputStreamCombiner$lambda$8$Type(newNextChunkPointer_0){
  this.newNextChunkPointer_0 = newNextChunkPointer_0;
}

defineClass(3556, $wnd.Function, $intern_22, LazyInputStreamCombiner$lambda$8$Type);
_.apply_0 = function apply_2280(arg0){
  return lambda$8_8(this.newNextChunkPointer_0, arg0);
}
;
function LazyInputStreamCombiner$lambda$9$Type(){
}

defineClass(3548, $wnd.Function, $intern_22, LazyInputStreamCombiner$lambda$9$Type);
_.apply_0 = function apply_2281(arg0){
  return lambda$9_8(arg0);
}
;
function LocatedChunk(location_0, bat, existingHash, chunk){
  this.location_0 = location_0;
  this.bat = bat;
  this.existingHash = existingHash;
  this.chunk = chunk;
}

defineClass(192, 1, {192:1}, LocatedChunk);
var Lpeergos_shared_user_fs_LocatedChunk_2_classLit = createForClass('peergos.shared.user.fs', 'LocatedChunk', 192);
function $getMapKey_0(this$static){
  return copyOf(this$static.mapKey, this$static.mapKey.length);
}

function $withMapKey_0(this$static, newMapKey){
  return new Location_0(this$static.owner, this$static.writer, newMapKey);
}

function Location_0(owner, writer, mapKey){
  if (mapKey.length != 32)
    throw toJs(new IllegalArgumentException_0('map key length ' + mapKey.length + ' is not ' + 32));
  this.owner = owner;
  this.writer = writer;
  this.mapKey = mapKey;
}

defineClass(92, 1, {7:1, 92:1}, Location_0);
_.serialize = function serialize_127(){
  return $toByteArray_2(new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborMerkleLink(this.owner.target), new CborObject$CborMerkleLink(this.writer.target), new CborObject$CborByteArray(this.mapKey)]))));
}
;
_.equals_0 = function equals_98(o){
  var location_0;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_user_fs_Location_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  location_0 = castTo(o, 92);
  if (this.owner?!$equals_13(this.owner, location_0.owner):!!location_0.owner)
    return false;
  if (this.writer?!$equals_13(this.writer, location_0.writer):!!location_0.writer)
    return false;
  return equals_16(this.mapKey, location_0.mapKey);
}
;
_.getMapKey = function getMapKey_0(){
  return $getMapKey_0(this);
}
;
_.hashCode_1 = function hashCode_95(){
  var result;
  result = this.owner?this.owner.target.hashCode():0;
  result = 31 * result + (this.writer?this.writer.target.hashCode():0);
  result = 31 * result + hashCode_17(this.mapKey);
  return result;
}
;
_.toCbor = function toCbor_125(){
  return new CborObject$CborList(new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_cbor_CborObject_2_classLit, 1), $intern_0, 48, 0, [new CborObject$CborMerkleLink(this.owner.target), new CborObject$CborMerkleLink(this.writer.target), new CborObject$CborByteArray(this.mapKey)])));
}
;
_.toString_0 = function toString_86(){
  return bytesToHex((new ByteArrayWrapper(this.mapKey)).data_0);
}
;
var Lpeergos_shared_user_fs_Location_2_classLit = createForClass('peergos.shared.user.fs', 'Location', 92);
function $clinit_MimeTypes(){
  $clinit_MimeTypes = emptyMethod;
  MID = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [77, 84, 104, 100]);
  ID3 = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [73, 68, 51]);
  MP3 = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [255, 251]);
  MP3_2 = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [255, 250]);
  RIFF = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [82, 73, 70, 70]);
  WAV_2 = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [87, 65, 86, 69]);
  FLAC = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [102, 76, 97, 67]);
  MP4 = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [102, 116, 121, 112]);
  ISO2 = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [105, 115, 111, 50]);
  ISOM = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [105, 115, 111, 109]);
  DASH = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [100, 97, 115, 104]);
  MP41 = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [109, 112, 52, 49]);
  MP42 = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [109, 112, 52, 50]);
  M4V = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [77, 52, 86, 32]);
  AVIF = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [97, 118, 105, 102]);
  HEIC = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [104, 101, 105, 99]);
  AVC1 = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [97, 118, 99, 49]);
  M4A = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [77, 52, 65, 32]);
  QT = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [113, 116, 32, 32]);
  THREEGP = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [51, 103, 112]);
  FLV = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [70, 76, 86]);
  FORM = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [70, 79, 82, 77]);
  AIFF = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [65, 73, 70, 70]);
  AVI = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [65, 86, 73, 32]);
  OGG = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [79, 103, 103, 83, 0, 2]);
  WEBM = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [119, 101, 98, 109]);
  MATROSKA_START = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [26, 69, 223, 163]);
  ICO = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [0, 0, 1, 0]);
  CUR = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [0, 0, 2, 0]);
  BMP = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [66, 77]);
  GIF = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [71, 73, 70]);
  JPEG = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [255, 216]);
  TIFF1 = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [73, 73, 42, 0]);
  TIFF2 = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [77, 77, 0, 42]);
  PNG = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [137, 80, 78, 71, 13, 10, 26, 10]);
  WEBP = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [87, 69, 66, 80]);
  JPEGXL = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [255, 10]);
  JPEGXL2 = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [0, 0, 0, 12, 74, 88, 76, 32, 13, 10, 135, 10]);
  PDF = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [37, 80, 68, 70]);
  PS = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [37, 33, 80, 83, 45, 65, 100, 111, 98, 101, 45]);
  ZIP = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [80, 75, 3, 4]);
  GZIP = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [31, 139, 8]);
  RAR = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [82, 97, 114, 33, 26, 7]);
  WASM = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [0, 97, 115, 109]);
  ICS = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [66, 69, 71, 73, 78, 58, 86, 67, 65, 76, 69, 78, 68, 65, 82]);
  VCF = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [66, 69, 71, 73, 78, 58, 86, 67, 65, 82, 68]);
  XML = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [60, 63, 120, 109, 108]);
  SVG = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [60, 115, 118, 103, 32]);
  WOFF = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [119, 79, 70, 70]);
  WOFF2 = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [119, 79, 70, 50]);
  OTF = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [79, 84, 84, 79]);
  TTF = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [0, 1, 0, 0]);
  CBOR_PEERGOS_TODO = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [130, 10]);
  CBOR_PEERGOS_POST = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [130, 17]);
  CBOR_PEERGOS_IDENTITY_PROOF = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [130, 24, 24]);
}

function calculateMimeType_0(start_0, filename){
  $clinit_MimeTypes();
  var prefix, suffixlength, suffixlength0, suffixlength1, suffixlength2, suffixlength3, suffixlength4, suffixlength5, suffixlength6, suffixlength7, suffixlength8;
  if (equalArrays(start_0, 0, BMP))
    return 'image/bmp';
  if (equalArrays(start_0, 0, GIF))
    return 'image/gif';
  if (equalArrays(start_0, 0, PNG)) {
    suffixlength0 = '.ico'.length;
    if ($equals_0(filename.substr(filename.length - suffixlength0, suffixlength0), '.ico'))
      return 'image/vnd.microsoft.icon';
    return 'image/png';
  }
  if (equalArrays(start_0, 0, JPEG))
    return 'image/jpg';
  if (equalArrays(start_0, 0, ICO))
    return 'image/x-icon';
  if (equalArrays(start_0, 0, CUR))
    return 'image/x-icon';
  if (equalArrays(start_0, 0, RIFF) && equalArrays(start_0, 8, WEBP))
    return 'image/webp';
  if (equalArrays(start_0, 0, JPEGXL) || equalArrays(start_0, 0, JPEGXL2))
    return 'image/jxl';
  if (equalArrays(start_0, 0, TIFF1))
    return 'image/tiff';
  if (equalArrays(start_0, 0, TIFF2))
    return 'image/tiff';
  if (equalArrays(start_0, 4, MP4)) {
    if (equalArrays(start_0, 8, ISO2) || equalArrays(start_0, 8, ISOM) || equalArrays(start_0, 8, DASH) || equalArrays(start_0, 8, MP42) || equalArrays(start_0, 8, MP41))
      return 'video/mp4';
    if (equalArrays(start_0, 8, M4V))
      return 'video/m4v';
    if (equalArrays(start_0, 8, AVIF))
      return 'image/avif';
    if (equalArrays(start_0, 8, HEIC))
      return 'image/heic';
    if (equalArrays(start_0, 8, M4A))
      return 'audio/mp4';
    if (equalArrays(start_0, 8, AVC1))
      return 'video/h264';
    if (equalArrays(start_0, 8, QT))
      return 'video/quicktime';
    if (equalArrays(start_0, 8, THREEGP))
      return 'video/3gpp';
  }
  if (equalArrays(start_0, 24, WEBM))
    return 'video/webm';
  if (equalArrays(start_0, 0, OGG) && (suffixlength1 = 'oga'.length , !$equals_0(filename.substr(filename.length - suffixlength1, suffixlength1), 'oga')))
    return 'video/ogg';
  if (equalArrays(start_0, 0, MATROSKA_START))
    return 'video/x-matroska';
  if (equalArrays(start_0, 0, FLV))
    return 'video/x-flv';
  if (equalArrays(start_0, 8, AVI))
    return 'video/avi';
  if (equalArrays(start_0, 0, MID))
    return 'audio/midi';
  if (equalArrays(start_0, 0, ID3))
    return 'audio/mpeg';
  if (equalArrays(start_0, 0, MP3))
    return 'audio/mpeg';
  if (equalArrays(start_0, 0, MP3_2))
    return 'audio/mpeg';
  if (equalArrays(start_0, 0, FLAC))
    return 'audio/flac';
  if (equalArrays(start_0, 0, OGG))
    return 'audio/ogg';
  if (equalArrays(start_0, 0, RIFF) && equalArrays(start_0, 8, WAV_2))
    return 'audio/wav';
  if (equalArrays(start_0, 0, FORM) && equalArrays(start_0, 8, AIFF))
    return 'audio/aiff';
  if (equalArrays(start_0, 0, PDF))
    return 'application/pdf';
  if (equalArrays(start_0, 0, PS))
    return 'application/postscript';
  if (equalArrays(start_0, 0, WASM))
    return 'application/wasm';
  if (equalArrays(start_0, 0, ZIP)) {
    suffixlength0 = '.jar'.length;
    if ($equals_0(filename.substr(filename.length - suffixlength0, suffixlength0), '.jar'))
      return 'application/java-archive';
    suffixlength2 = '.epub'.length;
    if ($equals_0(filename.substr(filename.length - suffixlength2, suffixlength2), '.epub'))
      return 'application/epub+zip';
    suffixlength3 = '.pptx'.length;
    if ($equals_0(filename.substr(filename.length - suffixlength3, suffixlength3), '.pptx'))
      return 'application/vnd.openxmlformats-officedocument.presentationml.presentation';
    suffixlength4 = '.docx'.length;
    if ($equals_0(filename.substr(filename.length - suffixlength4, suffixlength4), '.docx'))
      return 'application/vnd.openxmlformats-officedocument.wordprocessingml.document';
    suffixlength5 = '.xlsx'.length;
    if ($equals_0(filename.substr(filename.length - suffixlength5, suffixlength5), '.xlsx'))
      return 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';
    suffixlength6 = '.odt'.length;
    if ($equals_0(filename.substr(filename.length - suffixlength6, suffixlength6), '.odt'))
      return 'application/vnd.oasis.opendocument.text';
    suffixlength7 = '.ods'.length;
    if ($equals_0(filename.substr(filename.length - suffixlength7, suffixlength7), '.ods'))
      return 'application/vnd.oasis.opendocument.spreadsheet';
    suffixlength8 = '.odp'.length;
    if ($equals_0(filename.substr(filename.length - suffixlength8, suffixlength8), '.odp'))
      return 'application/vnd.oasis.opendocument.presentation';
    suffixlength = '.apk'.length;
    if ($equals_0(filename.substr(filename.length - suffixlength, suffixlength), '.apk'))
      return 'application/vnd.android.package-archive';
    return 'application/zip';
  }
  if (equalArrays(start_0, 0, GZIP))
    return 'application/x-gzip';
  if (equalArrays(start_0, 0, RAR))
    return 'application/x-rar-compressed';
  if (equalArrays(start_0, 0, WOFF))
    return 'font/woff';
  if (equalArrays(start_0, 0, WOFF2))
    return 'font/woff2';
  if (equalArrays(start_0, 0, OTF))
    return 'font/otf';
  if (equalArrays(start_0, 0, TTF))
    return 'font/ttf';
  if (equalArrays(start_0, 0, CBOR_PEERGOS_TODO))
    return 'application/vnd.peergos-todo';
  if (equalArrays(start_0, 0, CBOR_PEERGOS_POST))
    return 'application/vnd.peergos-post';
  if (equalArrays(start_0, 0, CBOR_PEERGOS_IDENTITY_PROOF))
    return 'application/vnd.peergos-identity-proof';
  if (validUtf8(start_0)) {
    suffixlength0 = '.ics'.length;
    if ($equals_0(filename.substr(filename.length - suffixlength0, suffixlength0), '.ics') && equalArrays(start_0, 0, ICS))
      return 'text/calendar';
    suffixlength2 = '.vcf'.length;
    if ($equals_0(filename.substr(filename.length - suffixlength2, suffixlength2), '.vcf') && equalArrays(start_0, 0, VCF))
      return 'text/vcard';
    suffixlength3 = '.html'.length;
    if ($equals_0(filename.substr(filename.length - suffixlength3, suffixlength3), '.html'))
      return 'text/html';
    suffixlength4 = '.css'.length;
    if ($equals_0(filename.substr(filename.length - suffixlength4, suffixlength4), '.css'))
      return 'text/css';
    suffixlength5 = '.js'.length;
    if ($equals_0(filename.substr(filename.length - suffixlength5, suffixlength5), '.js'))
      return 'text/javascript';
    suffixlength6 = '.svg'.length;
    if ($equals_0(filename.substr(filename.length - suffixlength6, suffixlength6), '.svg') && (equalArrays(start_0, 0, XML) || equalArrays(start_0, 0, SVG)))
      return 'image/svg+xml';
    suffixlength = '.json'.length;
    if ($equals_0(filename.substr(filename.length - suffixlength, suffixlength), '.json'))
      return 'application/json';
    prefix = $trim($create_0(start_0, 0, start_0.length, ($clinit_EmulatedCharset() , UTF_8_0))).toLowerCase();
    if (prefix.indexOf('html>') != -1 || prefix.indexOf('<html') != -1)
      return 'text/html';
    return 'text/plain';
  }
  return 'application/octet-stream';
}

function equalArrays(a, aOffset, target){
  var i;
  if (a == null || target == null || aOffset + target.length > a.length) {
    return false;
  }
  for (i = 0; i < target.length; i++) {
    if ((a[i + aOffset] & 255) != (target[i] & 255)) {
      return false;
    }
  }
  return true;
}

function validUtf8(data_0){
  var b, i, len, val, x_0, x0;
  for (i = 0; i < data_0.length; i++) {
    b = data_0[i];
    if ((b & 255) < 128)
      continue;
    len = numberOfLeadingZeros_0(~b << 24);
    if (len > 4 || len < 2)
      return false;
    if (i + len > data_0.length) {
      for (x0 = i + 1; x0 < data_0.length; x0++)
        if ((data_0[x0] & 192) != 128)
          return false;
      return true;
    }
    for (x_0 = 1; x_0 < len; x_0++)
      if ((data_0[i + x_0] & 192) != 128)
        return false;
    if (len == 2) {
      val = (b & 31) << 6 | data_0[i + 1] & 63;
      if (val <= 127)
        return false;
    }
     else if (len == 3) {
      val = (b & 15) << 12 | (data_0[i + 1] & 63) << 6 | data_0[i + 2] & 63;
      if (val <= 2047)
        return false;
    }
     else {
      val = (b & 7) << 18 | (data_0[i + 1] & 63) << 12 | (data_0[i + 2] & 63) << 6 | data_0[i + 3] & 63;
      if (val <= $intern_20)
        return false;
    }
    if (val > 1114111)
      return false;
    if (val > 55296 && val <= 57343)
      return false;
    i += len - 1;
  }
  return true;
}

var AIFF, AVC1, AVI, AVIF, BMP, CBOR_PEERGOS_IDENTITY_PROOF, CBOR_PEERGOS_POST, CBOR_PEERGOS_TODO, CUR, DASH, FLAC, FLV, FORM, GIF, GZIP, HEIC, ICO, ICS, ID3, ISO2, ISOM, JPEG, JPEGXL, JPEGXL2, M4A, M4V, MATROSKA_START, MID, MP3, MP3_2, MP4, MP41, MP42, OGG, OTF, PDF, PNG, PS, QT, RAR, RIFF, SVG, THREEGP, TIFF1, TIFF2, TTF, VCF, WASM, WAV_2, WEBM, WEBP, WOFF, WOFF2, XML, ZIP;
function Mp3CoverImage(imageData){
  this.imageData = imageData;
}

function byteBufferToString(bytes, offset, length_0){
  if (length_0 < 1)
    return '';
  return $create_0(bytes, offset, length_0, getCharset('ISO-8859-1'));
}

function byteBufferToStringIgnoringEncodingIssues(bytes, offset, length_0){
  try {
    return byteBufferToString(bytes, offset, length_0);
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 136)) {
      return null;
    }
     else 
      throw toJs($e0);
  }
}

function createTag(bytes){
  var majorVersion, tag;
  sanityCheckTag(bytes);
  majorVersion = bytes[3];
  switch (majorVersion) {
    case 2:
      tag = new Mp3CoverImage$ID3v22Tag(bytes);
      tag.frameSets.size_0 == 0 && (tag = new Mp3CoverImage$ID3v22Tag_0(bytes));
      return tag;
    case 3:
      return new Mp3CoverImage$ID3v23Tag(bytes);
    case 4:
      return new Mp3CoverImage$ID3v24Tag(bytes);
  }
  throw toJs(new Mp3CoverImage$UnsupportedTagException('Tag version not supported'));
}

function indexOfTerminator(bytes, fromIndex, terminatorLength){
  var i, marker, matched;
  marker = -1;
  for (i = fromIndex; i <= bytes.length - terminatorLength; i++) {
    if ((i - fromIndex) % terminatorLength == 0) {
      for (matched = 0; matched < terminatorLength; matched++) {
        if (bytes[i + matched] != 0)
          break;
      }
      if (matched == terminatorLength) {
        marker = i;
        break;
      }
    }
  }
  return marker;
}

function indexOfTerminatorForEncoding(bytes, fromIndex, encoding){
  var terminatorLength;
  terminatorLength = encoding == 1 || encoding == 2?2:1;
  return indexOfTerminator(bytes, fromIndex, terminatorLength);
}

function sanityCheckTag(bytes){
  var majorVersion, minorVersion;
  if (bytes.length < 10) {
    throw toJs(new Mp3CoverImage$NoSuchTagException_0);
  }
  if (!$equals_0('ID3', byteBufferToStringIgnoringEncodingIssues(bytes, 0, 3))) {
    throw toJs(new Mp3CoverImage$NoSuchTagException);
  }
  majorVersion = bytes[3];
  if (majorVersion != 2 && majorVersion != 3 && majorVersion != 4) {
    minorVersion = bytes[4];
    throw toJs(new Mp3CoverImage$UnsupportedTagException('Unsupported version 2.' + majorVersion + '.' + minorVersion));
  }
}

function shiftByte(c, places){
  var i;
  i = c & 255;
  if (places < 0) {
    return i << -places;
  }
   else if (places > 0) {
    return i >> places;
  }
  return i;
}

function sizeSynchronisationWouldSubtract(bytes){
  var count, i;
  count = 0;
  for (i = 0; i < bytes.length - 2; i++) {
    bytes[i] == -1 && bytes[i + 1] == 0 && ((bytes[i + 2] & -32) == -32 || bytes[i + 2] == 0) && ++count;
  }
  bytes.length > 1 && bytes[bytes.length - 2] == -1 && bytes[bytes.length - 1] == 0 && ++count;
  return count;
}

function synchroniseBuffer(bytes){
  var count, i, j, newBuffer;
  count = sizeSynchronisationWouldSubtract(bytes);
  if (count == 0)
    return bytes;
  newBuffer = initUnidimensionalArray(B_classLit, $intern_28, 8, bytes.length - count, 15, 1);
  i = 0;
  for (j = 0; j < newBuffer.length - 1; j++) {
    newBuffer[j] = bytes[i];
    bytes[i] == -1 && bytes[i + 1] == 0 && ((bytes[i + 2] & -32) == -32 || bytes[i + 2] == 0) && ++i;
    ++i;
  }
  newBuffer[newBuffer.length - 1] = bytes[i];
  return newBuffer;
}

function unpackInteger(b1, b2, b3, b4){
  var value_0;
  value_0 = b4 & 255;
  value_0 += shiftByte(b3, -8);
  value_0 += shiftByte(b2, -16);
  value_0 += shiftByte(b1, -24);
  return value_0;
}

function unpackSynchsafeInteger(b1, b2, b3, b4){
  var value_0;
  value_0 = (b4 & 127) << 24 >> 24;
  value_0 += shiftByte((b3 & 127) << 24 >> 24, -7);
  value_0 += shiftByte((b2 & 127) << 24 >> 24, -14);
  value_0 += shiftByte((b1 & 127) << 24 >> 24, -21);
  return value_0;
}

defineClass(1050, 1, {}, Mp3CoverImage);
var Lpeergos_shared_user_fs_Mp3CoverImage_2_classLit = createForClass('peergos.shared.user.fs', 'Mp3CoverImage', 1050);
function $synchroniseAndUnpackFrameData(this$static, bytes){
  var synchronisedBytes;
  if (this$static.unsynchronisation && sizeSynchronisationWouldSubtract(bytes) > 0) {
    synchronisedBytes = synchroniseBuffer(bytes);
    this$static.unpackFrameData(synchronisedBytes);
  }
   else {
    this$static.unpackFrameData(bytes);
  }
}

defineClass(1053, 1, {});
_.unsynchronisation = false;
var Lpeergos_shared_user_fs_Mp3CoverImage$AbstractID3v2FrameData_2_classLit = createForClass('peergos.shared.user.fs', 'Mp3CoverImage/AbstractID3v2FrameData', 1053);
function $addFrame(this$static, frame_0){
  var frameSet;
  frameSet = castTo($get_0(this$static.frameSets, frame_0.id_0), 367);
  if (!frameSet) {
    frameSet = new Mp3CoverImage$ID3v2FrameSet(frame_0.id_0);
    $add(frameSet.frames_0, frame_0);
    $put_6(this$static.frameSets, frame_0.id_0, frameSet);
  }
   else {
    $add(frameSet.frames_0, frame_0);
  }
}

function $createFrame(this$static, bytes, currentOffset){
  if (this$static.obseleteFormat)
    return new Mp3CoverImage$ID3v2ObseleteFrame(bytes, currentOffset);
  return new Mp3CoverImage$ID3v2Frame(bytes, currentOffset);
}

function $createPictureFrameData(this$static, id_0){
  var frame_0, frameData, frameSet;
  frameSet = castTo($get_0(this$static.frameSets, id_0), 367);
  if (frameSet) {
    frame_0 = castTo($get_1(frameSet.frames_0, 0), 320);
    try {
      this$static.obseleteFormat?(frameData = new Mp3CoverImage$ID3v2ObseletePictureFrameData(this$static.useFrameUnsynchronisation(), frame_0.data_0)):(frameData = new Mp3CoverImage$ID3v2PictureFrameData(this$static.useFrameUnsynchronisation(), frame_0.data_0));
      return frameData;
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (!instanceOf($e0, 253))
        throw toJs($e0);
    }
  }
  return null;
}

function $getAlbumImage(this$static){
  var frameData;
  frameData = $createPictureFrameData(this$static, this$static.obseleteFormat?'PIC':'APIC');
  if (frameData)
    return frameData.imageData;
  return null;
}

function $getAlbumImageMimeType(this$static){
  var frameData;
  frameData = $createPictureFrameData(this$static, this$static.obseleteFormat?'PIC':'APIC');
  if (!!frameData && frameData.mimeType != null)
    return frameData.mimeType;
  return null;
}

function $unpackFooter(bytes, offset){
  if (!$equals_0('3DI', byteBufferToStringIgnoringEncodingIssues(bytes, offset, 3))) {
    throw toJs(new Mp3CoverImage$InvalidDataException('Invalid footer'));
  }
  return 10;
}

function $unpackFrames(this$static, bytes, offset, framesLength){
  var currentOffset, frame_0;
  currentOffset = offset;
  while (currentOffset <= framesLength) {
    try {
      frame_0 = $createFrame(this$static, bytes, currentOffset);
      $addFrame(this$static, frame_0);
      currentOffset += frame_0.getLength();
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 253)) {
        break;
      }
       else 
        throw toJs($e0);
    }
  }
  return currentOffset;
}

function $unpackHeader(this$static, bytes){
  var majorVersion, minorVersion;
  majorVersion = bytes[3];
  minorVersion = bytes[4];
  this$static.version = majorVersion + '.' + minorVersion;
  if (majorVersion != 2 && majorVersion != 3 && majorVersion != 4) {
    throw toJs(new Mp3CoverImage$UnsupportedTagException('Unsupported version ' + this$static.version));
  }
  this$static.unpackFlags(bytes);
  if ((bytes[5] & 15) != 0)
    throw toJs(new Mp3CoverImage$UnsupportedTagException('Unrecognised bits in header'));
  this$static.dataLength = unpackSynchsafeInteger(bytes[6], bytes[7], bytes[8], bytes[9]);
  if (this$static.dataLength < 1)
    throw toJs(new Mp3CoverImage$InvalidDataException('Zero size tag'));
  return 10;
}

function $unpackTag(this$static, bytes){
  var e, framesLength, offset;
  sanityCheckTag(bytes);
  offset = $unpackHeader(this$static, bytes);
  try {
    this$static.extendedHeader && (offset = (this$static.extendedHeaderLength = unpackSynchsafeInteger(bytes[offset], bytes[offset + 1], bytes[offset + 2], bytes[offset + 3]) + 4 , copyOfRange(bytes, offset + 4, offset + 4 + this$static.extendedHeaderLength) , this$static.extendedHeaderLength));
    framesLength = this$static.dataLength;
    this$static.footer && (framesLength -= 10);
    offset = $unpackFrames(this$static, bytes, offset, framesLength);
    this$static.footer && (offset = $unpackFooter(bytes, this$static.dataLength));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 235)) {
      e = $e0;
      throw toJs(new Mp3CoverImage$InvalidDataException_0(e));
    }
     else 
      throw toJs($e0);
  }
}

function Mp3CoverImage$AbstractID3v2Tag(bytes){
  Mp3CoverImage$AbstractID3v2Tag_0.call(this, bytes, false);
}

function Mp3CoverImage$AbstractID3v2Tag_0(bytes, obseleteFormat){
  this.frameSets = new TreeMap;
  this.obseleteFormat = obseleteFormat;
  $unpackTag(this, bytes);
}

defineClass(319, 1, {});
_.useFrameUnsynchronisation = function useFrameUnsynchronisation(){
  return false;
}
;
_.dataLength = 0;
_.extendedHeader = false;
_.extendedHeaderLength = 0;
_.footer = false;
_.obseleteFormat = false;
_.unsynchronisation = false;
_.version = null;
var Lpeergos_shared_user_fs_Mp3CoverImage$AbstractID3v2Tag_2_classLit = createForClass('peergos.shared.user.fs', 'Mp3CoverImage/AbstractID3v2Tag', 319);
function $clinit_Mp3CoverImage$EncodedText(){
  $clinit_Mp3CoverImage$EncodedText = emptyMethod;
  characterSets = stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['ISO-8859-1', 'UTF-16LE', 'UTF-16BE', 'UTF-8']);
  terminators = stampJavaTypeInfo(getClassLiteralForArray(B_classLit, 2), $intern_0, 11, 0, [stampJavaTypeInfo(getClassLiteralForArray(B_classLit, 1), $intern_28, 8, 15, [0]), stampJavaTypeInfo(getClassLiteralForArray(B_classLit, 1), $intern_28, 8, 15, [0, 0]), stampJavaTypeInfo(getClassLiteralForArray(B_classLit, 1), $intern_28, 8, 15, [0, 0]), stampJavaTypeInfo(getClassLiteralForArray(B_classLit, 1), $intern_28, 8, 15, [0])]);
}

function $getTerminator(this$static){
  return terminators[this$static.textEncoding];
}

function $stripBomAndTerminator(this$static){
  var haveTerminator, i, leadingCharsToRemove, newLength, newValue, terminator, trailingCharsToRemove;
  leadingCharsToRemove = 0;
  this$static.value_0.length >= 2 && (this$static.value_0[0] == -2 && this$static.value_0[1] == -1 || this$static.value_0[0] == -1 && this$static.value_0[1] == -2)?(leadingCharsToRemove = 2):this$static.value_0.length >= 3 && this$static.value_0[0] == -17 && this$static.value_0[1] == -69 && this$static.value_0[2] == -65 && (leadingCharsToRemove = 3);
  trailingCharsToRemove = 0;
  terminator = terminators[this$static.textEncoding];
  if (this$static.value_0.length - leadingCharsToRemove >= terminator.length) {
    haveTerminator = true;
    for (i = 0; i < terminator.length; i++) {
      if (this$static.value_0[this$static.value_0.length - terminator.length + i] != terminator[i]) {
        haveTerminator = false;
        break;
      }
    }
    haveTerminator && (trailingCharsToRemove = terminator.length);
  }
  if (leadingCharsToRemove + trailingCharsToRemove > 0) {
    newLength = this$static.value_0.length - leadingCharsToRemove - trailingCharsToRemove;
    newValue = initUnidimensionalArray(B_classLit, $intern_28, 8, newLength, 15, 1);
    newLength > 0 && arraycopy(this$static.value_0, leadingCharsToRemove, newValue, 0, newValue.length);
    this$static.value_0 = newValue;
  }
}

function Mp3CoverImage$EncodedText(textEncoding){
  $clinit_Mp3CoverImage$EncodedText();
  this.textEncoding = textEncoding;
  this.value_0 = forName(characterSetForTextEncoding(textEncoding)).getBytes('');
  $stripBomAndTerminator(this);
}

function Mp3CoverImage$EncodedText_0(textEncoding, value_0){
  $clinit_Mp3CoverImage$EncodedText();
  textEncoding == 1 && (value_0.length >= 2 && value_0[0] == -1 && value_0[1] == -2?1:value_0.length >= 2 && value_0[0] == -2 && value_0[1] == -1?2:value_0.length >= 3 && value_0[0] == -17 && value_0[1] == -69 && value_0[2] == -65?3:0) == 2?(this.textEncoding = 2):(this.textEncoding = textEncoding);
  this.value_0 = value_0;
  $stripBomAndTerminator(this);
}

function characterSetForTextEncoding(textEncoding){
  try {
    return characterSets[textEncoding];
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 235)) {
      throw toJs(new IllegalArgumentException_0('Invalid text encoding ' + textEncoding));
    }
     else 
      throw toJs($e0);
  }
}

defineClass(366, 1, {}, Mp3CoverImage$EncodedText, Mp3CoverImage$EncodedText_0);
_.textEncoding = 0;
var characterSets, terminators;
var Lpeergos_shared_user_fs_Mp3CoverImage$EncodedText_2_classLit = createForClass('peergos.shared.user.fs', 'Mp3CoverImage/EncodedText', 366);
function Mp3CoverImage$ID3v22Tag(buffer){
  Mp3CoverImage$AbstractID3v2Tag.call(this, buffer);
}

function Mp3CoverImage$ID3v22Tag_0(buffer){
  Mp3CoverImage$AbstractID3v2Tag_0.call(this, buffer, true);
}

defineClass(508, 319, {}, Mp3CoverImage$ID3v22Tag, Mp3CoverImage$ID3v22Tag_0);
_.unpackFlags = function unpackFlags(bytes){
  this.unsynchronisation = (bytes[5] & 128) != 0;
}
;
var Lpeergos_shared_user_fs_Mp3CoverImage$ID3v22Tag_2_classLit = createForClass('peergos.shared.user.fs', 'Mp3CoverImage/ID3v22Tag', 508);
function Mp3CoverImage$ID3v23Tag(buffer){
  Mp3CoverImage$AbstractID3v2Tag.call(this, buffer);
}

defineClass(1051, 319, {}, Mp3CoverImage$ID3v23Tag);
_.unpackFlags = function unpackFlags_0(buffer){
  this.unsynchronisation = (buffer[5] & 128) != 0;
  this.extendedHeader = (buffer[5] & 64) != 0;
}
;
var Lpeergos_shared_user_fs_Mp3CoverImage$ID3v23Tag_2_classLit = createForClass('peergos.shared.user.fs', 'Mp3CoverImage/ID3v23Tag', 1051);
function Mp3CoverImage$ID3v24Tag(buffer){
  Mp3CoverImage$AbstractID3v2Tag.call(this, buffer);
}

defineClass(1052, 319, {}, Mp3CoverImage$ID3v24Tag);
_.unpackFlags = function unpackFlags_1(buffer){
  this.unsynchronisation = (buffer[5] & 128) != 0;
  this.extendedHeader = (buffer[5] & 64) != 0;
  this.footer = (buffer[5] & 16) != 0;
}
;
_.useFrameUnsynchronisation = function useFrameUnsynchronisation_0(){
  return this.unsynchronisation;
}
;
var Lpeergos_shared_user_fs_Mp3CoverImage$ID3v24Tag_2_classLit = createForClass('peergos.shared.user.fs', 'Mp3CoverImage/ID3v24Tag', 1052);
function $sanityCheckUnpackedHeader(this$static){
  var i;
  for (i = 0; i < this$static.id_0.length; i++) {
    if (!($charAt(this$static.id_0, i) >= 65 && $charAt(this$static.id_0, i) <= 90 || $charAt(this$static.id_0, i) >= 48 && $charAt(this$static.id_0, i) <= 57)) {
      throw toJs(new Mp3CoverImage$InvalidDataException('Not a valid frame - invalid tag ' + this$static.id_0));
    }
  }
}

function Mp3CoverImage$ID3v2Frame(buffer, offset){
  var dataOffset;
  dataOffset = this.unpackHeader(buffer, offset);
  $sanityCheckUnpackedHeader(this);
  this.data_0 = copyOfRange(buffer, dataOffset, dataOffset + this.dataLength);
}

defineClass(320, 1, {320:1}, Mp3CoverImage$ID3v2Frame);
_.getLength = function getLength(){
  return this.dataLength + 10;
}
;
_.unpackDataLength = function unpackDataLength(buffer, offset){
  this.dataLength = unpackInteger(buffer[offset + 4], buffer[offset + 4 + 1], buffer[offset + 4 + 2], buffer[offset + 4 + 3]);
}
;
_.unpackHeader = function unpackHeader(buffer, offset){
  this.id_0 = byteBufferToStringIgnoringEncodingIssues(buffer, offset, 4);
  this.unpackDataLength(buffer, offset);
  return offset + 10;
}
;
_.data_0 = null;
_.dataLength = 0;
var Lpeergos_shared_user_fs_Mp3CoverImage$ID3v2Frame_2_classLit = createForClass('peergos.shared.user.fs', 'Mp3CoverImage/ID3v2Frame', 320);
function Mp3CoverImage$ID3v2FrameSet(id_0){
  this.id_0 = id_0;
  this.frames_0 = new ArrayList;
}

defineClass(367, 1, {367:1}, Mp3CoverImage$ID3v2FrameSet);
_.toString_0 = function toString_87(){
  return this.id_0 + ': ' + this.frames_0.array.length;
}
;
var Lpeergos_shared_user_fs_Mp3CoverImage$ID3v2FrameSet_2_classLit = createForClass('peergos.shared.user.fs', 'Mp3CoverImage/ID3v2FrameSet', 367);
function Mp3CoverImage$ID3v2ObseleteFrame(buffer, offset){
  Mp3CoverImage$ID3v2Frame.call(this, buffer, offset);
}

defineClass(1055, 320, {320:1}, Mp3CoverImage$ID3v2ObseleteFrame);
_.getLength = function getLength_0(){
  return this.dataLength + 6;
}
;
_.unpackDataLength = function unpackDataLength_0(buffer, offset){
  this.dataLength = unpackInteger(0, buffer[offset + 3], buffer[offset + 3 + 1], buffer[offset + 3 + 2]);
}
;
_.unpackHeader = function unpackHeader_0(buffer, offset){
  this.id_0 = byteBufferToStringIgnoringEncodingIssues(buffer, offset, 3);
  this.dataLength = unpackInteger(0, buffer[offset + 3], buffer[offset + 3 + 1], buffer[offset + 3 + 2]);
  return offset + 6;
}
;
var Lpeergos_shared_user_fs_Mp3CoverImage$ID3v2ObseleteFrame_2_classLit = createForClass('peergos.shared.user.fs', 'Mp3CoverImage/ID3v2ObseleteFrame', 1055);
function Mp3CoverImage$ID3v2PictureFrameData(unsynchronisation, bytes){
  this.unsynchronisation = unsynchronisation;
  $synchroniseAndUnpackFrameData(this, bytes);
}

defineClass(509, 1053, {}, Mp3CoverImage$ID3v2PictureFrameData);
_.unpackFrameData = function unpackFrameData(bytes){
  var marker, marker2;
  marker = indexOfTerminator(bytes, 1, 1);
  if (marker >= 0) {
    try {
      this.mimeType = byteBufferToString(bytes, 1, marker - 1);
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 136)) {
        this.mimeType = 'image/unknown';
      }
       else 
        throw toJs($e0);
    }
  }
   else {
    this.mimeType = 'image/unknown';
  }
  marker += 2;
  marker2 = indexOfTerminatorForEncoding(bytes, marker, bytes[0]);
  if (marker2 >= 0) {
    this.description = new Mp3CoverImage$EncodedText_0(bytes[0], (checkCopyOfRange(bytes, marker, marker2) , copyPrimitiveByteArray(bytes, initUnidimensionalArray(B_classLit, $intern_28, 8, marker2 - marker, 15, 1), marker, marker2)));
    marker2 += $getTerminator(this.description).length;
  }
   else {
    this.description = new Mp3CoverImage$EncodedText(bytes[0]);
    marker2 = marker;
  }
  this.imageData = copyOfRange(bytes, marker2, bytes.length);
}
;
var Lpeergos_shared_user_fs_Mp3CoverImage$ID3v2PictureFrameData_2_classLit = createForClass('peergos.shared.user.fs', 'Mp3CoverImage/ID3v2PictureFrameData', 509);
function Mp3CoverImage$ID3v2ObseletePictureFrameData(unsynchronisation, bytes){
  Mp3CoverImage$ID3v2PictureFrameData.call(this, unsynchronisation, bytes);
}

defineClass(1054, 509, {}, Mp3CoverImage$ID3v2ObseletePictureFrameData);
_.unpackFrameData = function unpackFrameData_0(bytes){
  var filetype, marker;
  try {
    filetype = byteBufferToString(bytes, 1, 3);
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 136)) {
      filetype = 'unknown';
    }
     else 
      throw toJs($e0);
  }
  this.mimeType = 'image/' + filetype.toLowerCase();
  marker = indexOfTerminatorForEncoding(bytes, 5, bytes[0]);
  if (marker >= 0) {
    this.description = new Mp3CoverImage$EncodedText_0(bytes[0], (checkCopyOfRange(bytes, 5, marker) , copyPrimitiveByteArray(bytes, initUnidimensionalArray(B_classLit, $intern_28, 8, marker - 5, 15, 1), 5, marker)));
    marker += $getTerminator(this.description).length;
  }
   else {
    this.description = new Mp3CoverImage$EncodedText(bytes[0]);
    marker = 1;
  }
  this.imageData = copyOfRange(bytes, marker, bytes.length);
}
;
var Lpeergos_shared_user_fs_Mp3CoverImage$ID3v2ObseletePictureFrameData_2_classLit = createForClass('peergos.shared.user.fs', 'Mp3CoverImage/ID3v2ObseletePictureFrameData', 1054);
function Mp3CoverImage$InvalidDataException(msg){
  Exception_0.call(this, msg);
}

function Mp3CoverImage$InvalidDataException_0(cause){
  Exception_1.call(this, 'Premature end of tag', cause);
}

defineClass(253, 51, {4:1, 51:1, 33:1, 253:1}, Mp3CoverImage$InvalidDataException, Mp3CoverImage$InvalidDataException_0);
var Lpeergos_shared_user_fs_Mp3CoverImage$InvalidDataException_2_classLit = createForClass('peergos.shared.user.fs', 'Mp3CoverImage/InvalidDataException', 253);
function Mp3CoverImage$NoSuchTagException(){
  Exception.call(this);
}

function Mp3CoverImage$NoSuchTagException_0(){
  Exception_0.call(this, 'Buffer too short');
}

defineClass(507, 51, $intern_6, Mp3CoverImage$NoSuchTagException, Mp3CoverImage$NoSuchTagException_0);
var Lpeergos_shared_user_fs_Mp3CoverImage$NoSuchTagException_2_classLit = createForClass('peergos.shared.user.fs', 'Mp3CoverImage/NoSuchTagException', 507);
function Mp3CoverImage$UnsupportedTagException(msg){
  Exception_0.call(this, msg);
}

defineClass(365, 51, $intern_6, Mp3CoverImage$UnsupportedTagException);
var Lpeergos_shared_user_fs_Mp3CoverImage$UnsupportedTagException_2_classLit = createForClass('peergos.shared.user.fs', 'Mp3CoverImage/UnsupportedTagException', 365);
function $toCbor_96(this$static){
  var cbor;
  cbor = $toCbor_91(this$static.cap);
  if ($containsKey_0(cbor.values_0, new CborObject$CborString('n')))
    throw toJs(new IllegalStateException_0('Incompatible cbor'));
  $put_9(cbor, new CborObject$CborString(this$static.name_0.name_0));
  return cbor;
}

function NamedAbsoluteCapability(name_0, cap){
  this.name_0 = new PathElement(name_0);
  this.cap = cap;
}

function NamedAbsoluteCapability_0(name_0, cap){
  this.name_0 = name_0;
  this.cap = cap;
}

defineClass(151, 1, {7:1, 151:1}, NamedAbsoluteCapability, NamedAbsoluteCapability_0);
_.serialize = function serialize_128(){
  return $toByteArray_2($toCbor_96(this));
}
;
_.equals_0 = function equals_99(o){
  var that;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_user_fs_NamedAbsoluteCapability_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 151);
  return equals_28(this.name_0, that.name_0) && equals_28(this.cap, that.cap);
}
;
_.hashCode_1 = function hashCode_96(){
  return hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.name_0, this.cap]));
}
;
_.toCbor = function toCbor_126(){
  return $toCbor_96(this);
}
;
_.toString_0 = function toString_88(){
  return this.name_0 + '/' + this.cap;
}
;
var Lpeergos_shared_user_fs_NamedAbsoluteCapability_2_classLit = createForClass('peergos.shared.user.fs', 'NamedAbsoluteCapability', 151);
function $toCbor_97(this$static){
  var cbor;
  cbor = $toCbor_98(this$static.cap);
  if ($containsKey_0(cbor.values_0, new CborObject$CborString('n')))
    throw toJs(new IllegalStateException_0('Incompatible cbor'));
  $put_9(cbor, new CborObject$CborString(this$static.name_0.name_0));
  return cbor;
}

function NamedRelativeCapability(name_0, cap){
  this.name_0 = new PathElement(name_0);
  this.cap = cap;
}

function NamedRelativeCapability_0(name_0, cap){
  this.name_0 = name_0;
  this.cap = cap;
}

function fromCbor_104(cbor){
  var cap, map_0, name_0;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Invalid cbor'));
  map_0 = castTo(cbor, 18);
  name_0 = castTo(castTo($get_0(map_0.values_0, new CborObject$CborString('n')), 7), 13).value_0;
  cap = fromCbor_105(cbor);
  return new NamedRelativeCapability_0(new PathElement(name_0), cap);
}

defineClass(150, 1, {7:1, 150:1}, NamedRelativeCapability, NamedRelativeCapability_0);
_.serialize = function serialize_129(){
  return $toByteArray_2($toCbor_97(this));
}
;
_.toCbor = function toCbor_127(){
  return $toCbor_97(this);
}
;
var Lpeergos_shared_user_fs_NamedRelativeCapability_2_classLit = createForClass('peergos.shared.user.fs', 'NamedRelativeCapability', 150);
function $getLocation_1(this$static, owner, writer){
  return new Location_0(owner, castTo($orElse(this$static.writer, writer), 55), this$static.mapKey);
}

function $getMapKey_1(this$static){
  return copyOf(this$static.mapKey, this$static.mapKey.length);
}

function $lambda$0_34(this$static, w_0){
  return $map(this$static.wBaseKeyLink, makeLambdaFunction(RelativeCapability$lambda$1$Type.prototype.apply_0, RelativeCapability$lambda$1$Type, [w_0]));
}

function $toAbsolute(this$static, source){
  var wBaseKey, writer;
  wBaseKey = $flatMap(source.wBaseKey, makeLambdaFunction(RelativeCapability$lambda$0$Type.prototype.apply_0, RelativeCapability$lambda$0$Type, [this$static]));
  writer = castTo($orElse(this$static.writer, source.writer), 55);
  if (wBaseKey.ref != null)
    return new WritableAbsoluteCapability(source.owner, writer, this$static.mapKey, this$static.bat, this$static.rBaseKey, (checkCriticalElement(wBaseKey.ref != null) , castTo(wBaseKey.ref, 88)));
  return new AbsoluteCapability_0(source.owner, writer, this$static.mapKey, this$static.bat, this$static.rBaseKey, wBaseKey);
}

function $toCbor_98(this$static){
  var cbor, transformed;
  cbor = new TreeMap;
  $ifPresent(this$static.writer, new RelativeCapability$lambda$2$Type(cbor));
  $put_6(cbor, 'm', new CborObject$CborByteArray(this$static.mapKey));
  $ifPresent(this$static.bat, new RelativeCapability$lambda$3$Type(cbor));
  $put_6(cbor, 'k', $toCbor_15(this$static.rBaseKey));
  $ifPresent(this$static.wBaseKeyLink, new RelativeCapability$lambda$4$Type(cbor));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(cbor), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function $withWritingKey(this$static, writingKey){
  return new RelativeCapability(writingKey, this$static.mapKey, this$static.bat, this$static.rBaseKey, this$static.wBaseKeyLink);
}

function RelativeCapability(writer, mapKey, bat, rBaseKey, wBaseKeyLink){
  this.writer = writer;
  if (mapKey.length != 32)
    throw toJs(new IllegalStateException_0('Invalid map key length: ' + mapKey.length));
  this.mapKey = mapKey;
  this.bat = bat;
  this.rBaseKey = rBaseKey;
  this.wBaseKeyLink = wBaseKeyLink;
}

function buildSubsequentChunk(mapkey, bat, baseKey){
  return new RelativeCapability(($clinit_Optional() , $clinit_Optional() , EMPTY), mapkey, bat, baseKey, (null , EMPTY));
}

function fromCbor_105(cbor){
  var baseKey, bat, map_0, mapKey, writer, writerLink;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Incorrect cbor for RelativeCapability: ' + cbor));
  map_0 = castTo(cbor, 18);
  writer = $map(ofNullable(castTo($get_0(map_0.values_0, new CborObject$CborString('w')), 7)), makeLambdaFunction(RelativeCapability$0methodref$fromCbor$Type.prototype.apply_0, RelativeCapability$0methodref$fromCbor$Type, []));
  mapKey = castTo(castTo($get_0(map_0.values_0, new CborObject$CborString('m')), 7), 27).value_0;
  bat = $getOptional(map_0, 'a', makeLambdaFunction(RelativeCapability$1methodref$fromCbor$Type.prototype.apply_0, RelativeCapability$1methodref$fromCbor$Type, []));
  baseKey = fromCbor_24(castTo($get_0(map_0.values_0, new CborObject$CborString('k')), 7));
  writerLink = $map(ofNullable(castTo($get_0(map_0.values_0, new CborObject$CborString('l')), 7)), makeLambdaFunction(RelativeCapability$2methodref$fromCbor$Type.prototype.apply_0, RelativeCapability$2methodref$fromCbor$Type, []));
  return new RelativeCapability(writer, mapKey, bat, baseKey, writerLink);
}

function lambda$1_20(w_0, link_1){
  return castTo($decrypt_0(link_1.cipherText, w_0, makeLambdaFunction(SymmetricLink$0methodref$fromCbor$Type.prototype.apply_0, SymmetricLink$0methodref$fromCbor$Type, [])), 88);
}

defineClass(102, 1, {7:1, 102:1}, RelativeCapability);
_.serialize = function serialize_130(){
  return $toByteArray_2($toCbor_98(this));
}
;
_.toCbor = function toCbor_128(){
  return $toCbor_98(this);
}
;
_.equals_0 = function equals_100(o){
  var that;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_user_fs_RelativeCapability_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  that = castTo(o, 102);
  return equals_28(this.writer, that.writer) && equals_16(this.mapKey, that.mapKey) && equals_28(this.rBaseKey, that.rBaseKey);
}
;
_.getMapKey = function getMapKey_1(){
  return $getMapKey_1(this);
}
;
_.hashCode_1 = function hashCode_97(){
  var result;
  result = hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.writer, this.rBaseKey]));
  result = 31 * result + hashCode_17(this.mapKey);
  return result;
}
;
_.toString_0 = function toString_89(){
  return bytesToHex(copyOf(this.mapKey, this.mapKey.length));
}
;
var Lpeergos_shared_user_fs_RelativeCapability_2_classLit = createForClass('peergos.shared.user.fs', 'RelativeCapability', 102);
function RelativeCapability$0methodref$fromCbor$Type(){
}

defineClass(2628, $wnd.Function, $intern_22, RelativeCapability$0methodref$fromCbor$Type);
_.apply_0 = function apply_2282(arg0){
  return fromCbor_23(castTo(arg0, 7));
}
;
function RelativeCapability$1methodref$fromCbor$Type(){
}

defineClass(2629, $wnd.Function, $intern_22, RelativeCapability$1methodref$fromCbor$Type);
_.apply_0 = function apply_2283(arg0){
  return fromCbor_75(castTo(arg0, 7));
}
;
function RelativeCapability$2methodref$fromCbor$Type(){
}

defineClass(2630, $wnd.Function, $intern_22, RelativeCapability$2methodref$fromCbor$Type);
_.apply_0 = function apply_2284(arg0){
  return new SymmetricLink(fromCbor_9(castTo(arg0, 7)));
}
;
function RelativeCapability$lambda$0$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2627, $wnd.Function, $intern_22, RelativeCapability$lambda$0$Type);
_.apply_0 = function apply_2285(arg0){
  return $lambda$0_34(this.$$outer_0, arg0);
}
;
function RelativeCapability$lambda$1$Type(w_0){
  this.w_0 = w_0;
}

defineClass(2631, $wnd.Function, $intern_22, RelativeCapability$lambda$1$Type);
_.apply_0 = function apply_2286(arg0){
  return lambda$1_20(this.w_0, arg0);
}
;
function RelativeCapability$lambda$2$Type(cbor_0){
  this.cbor_0 = cbor_0;
}

defineClass(856, 1, $intern_32, RelativeCapability$lambda$2$Type);
_.accept = function accept_180(arg0){
  $put_6(this.cbor_0, 'w', new CborObject$CborMerkleLink(castTo(arg0, 55).target));
}
;
_.andThen = function andThen_91(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_fs_RelativeCapability$lambda$2$Type_2_classLit = createForClass('peergos.shared.user.fs', 'RelativeCapability/lambda$2$Type', 856);
function RelativeCapability$lambda$3$Type(cbor_0){
  this.cbor_0 = cbor_0;
}

defineClass(857, 1, $intern_32, RelativeCapability$lambda$3$Type);
_.accept = function accept_181(arg0){
  $put_6(this.cbor_0, 'a', castTo(arg0, 61));
}
;
_.andThen = function andThen_92(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_fs_RelativeCapability$lambda$3$Type_2_classLit = createForClass('peergos.shared.user.fs', 'RelativeCapability/lambda$3$Type', 857);
function RelativeCapability$lambda$4$Type(cbor_0){
  this.cbor_0 = cbor_0;
}

defineClass(858, 1, $intern_32, RelativeCapability$lambda$4$Type);
_.accept = function accept_182(arg0){
  $put_6(this.cbor_0, 'l', $toCbor_5(castTo(arg0, 306).cipherText));
}
;
_.andThen = function andThen_93(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_fs_RelativeCapability$lambda$4$Type_2_classLit = createForClass('peergos.shared.user.fs', 'RelativeCapability/lambda$4$Type', 858);
function $getParentCap(this$static){
  return castTo($get_6($getParentCapability(this$static.fileAccess, this$static.capability.rBaseKey)), 102);
}

function $getParentKey(this$static){
  return getParentKey(this$static.fileAccess, this$static.capability.rBaseKey);
}

function $getParentParentKey(this$static){
  return castTo($get_6($getParentCapability(this$static.fileAccess, this$static.capability.rBaseKey)), 102).rBaseKey;
}

function RetrievedCapability(capability, fileAccess){
  if (!fileAccess)
    throw toJs(new IllegalStateException_0('Null FileAccess!'));
  this.capability = capability;
  this.fileAccess = fileAccess;
}

function getParentKey(node, baseKey){
  if (node.isDirectory_0)
    try {
      return $getParentKey_0(node, baseKey);
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (!instanceOf($e0, 51))
        throw toJs($e0);
    }
  return baseKey;
}

defineClass(83, 1, {83:1}, RetrievedCapability);
var Lpeergos_shared_user_fs_RetrievedCapability_2_classLit = createForClass('peergos.shared.user.fs', 'RetrievedCapability', 83);
function $toCbor_99(){
  var res, transformed;
  res = new HashMap;
  $putStringValue(res, 't', new CborObject$CborLong(($clinit_Fragmenter$Type() , SIMPLE).val_0));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new AbstractHashMap$EntrySet(res), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function SplitFragmenter(){
}

defineClass(513, 1, $intern_67, SplitFragmenter);
_.serialize = function serialize_131(){
  return $toByteArray_2($toCbor_99());
}
;
_.equals_0 = function equals_101(o){
  if (this === o)
    return true;
  return !(o == null || Lpeergos_shared_user_fs_SplitFragmenter_2_classLit != getClass__Ljava_lang_Class___devirtual$(o));
}
;
_.hashCode_1 = function hashCode_98(){
  return 0;
}
;
_.recombine = function recombine_1(encoded, startOffset, truncateTo){
  var b, copyLength, i, i0, length_0, output, pos;
  length_0 = 0;
  for (i0 = 0; i0 < encoded.length; i0++)
    length_0 += encoded[i0].length;
  output = initUnidimensionalArray(B_classLit, $intern_28, 8, startOffset + length_0, 15, 1);
  pos = 0;
  for (i = 0; i < encoded.length && pos < truncateTo; i++) {
    b = encoded[i];
    copyLength = $wnd.Math.max(0, $wnd.Math.min(b.length, truncateTo - pos));
    arraycopy(b, 0, output, startOffset + pos, copyLength);
    pos += copyLength;
  }
  return output;
}
;
_.split = function split_5(input_0){
  var b, end, i, len, length_0, mod, nFragments, padding, split_0, start_0;
  padding = 0;
  mod = input_0.length % 256;
  (mod != 0 || input_0.length == 0) && (padding = 256 - mod);
  len = input_0.length + padding;
  nFragments = len / $intern_11 | 0;
  len % $intern_11 > 0 && ++nFragments;
  split_0 = initUnidimensionalArray(B_classLit, $intern_0, 11, nFragments, 0, 2);
  for (i = 0; i < nFragments; ++i) {
    start_0 = $intern_11 * i;
    end = $wnd.Math.min(input_0.length, start_0 + $intern_11);
    length_0 = end - start_0;
    b = initUnidimensionalArray(B_classLit, $intern_28, 8, length_0, 15, 1);
    arraycopy(input_0, start_0, b, 0, length_0);
    split_0[i] = b;
  }
  return split_0;
}
;
_.storageIncreaseFactor = function storageIncreaseFactor_0(){
  return 1;
}
;
_.toCbor = function toCbor_129(){
  return $toCbor_99();
}
;
var Lpeergos_shared_user_fs_SplitFragmenter_2_classLit = createForClass('peergos.shared.user.fs', 'SplitFragmenter', 513);
function Thumbnail(mimeType, data_0){
  if (data_0.length > 102400)
    throw toJs(new IllegalStateException_0('Image thumbnails must be < 100 KiB!'));
  this.mimeType = mimeType;
  this.data_0 = data_0;
}

defineClass(245, 1, {245:1}, Thumbnail);
var Lpeergos_shared_user_fs_Thumbnail_2_classLit = createForClass('peergos.shared.user.fs', 'Thumbnail', 245);
function get_165(){
  throw toJs(new IllegalStateException_0("Thumbnail generator hasn't been set!"));
}

function $lambda$0_35(this$static, dWrite_0){
  return $equals_14(dWrite_0, $get_6(this$static.wBaseKey))?($clinit_Optional() , $clinit_Optional() , EMPTY):($clinit_Optional() , new Optional(checkCriticalNotNull(new SymmetricLink(build_2(castTo($get_6(this$static.wBaseKey), 88), dWrite_0)))));
}

function $relativise(this$static, descendant){
  var writerLink, writerOpt;
  if (!equals_28(this$static.owner, descendant.owner))
    throw toJs(new IllegalStateException_0("Files with different owners can't be descendant of each other!"));
  writerLink = $flatMap(descendant.wBaseKey, makeLambdaFunction(WritableAbsoluteCapability$lambda$0$Type.prototype.apply_0, WritableAbsoluteCapability$lambda$0$Type, [this$static]));
  writerOpt = equals_28(this$static.writer, descendant.writer)?($clinit_Optional() , $clinit_Optional() , EMPTY):($clinit_Optional() , new Optional(checkCriticalNotNull(descendant.writer)));
  return new RelativeCapability(writerOpt, copyOf(descendant.mapKey, descendant.mapKey.length), descendant.bat, descendant.rBaseKey, writerLink);
}

function $withBaseKey(this$static, newBaseKey){
  return new WritableAbsoluteCapability(this$static.owner, this$static.writer, copyOf(this$static.mapKey, this$static.mapKey.length), this$static.bat, newBaseKey, castTo($get_6(this$static.wBaseKey), 88));
}

function $withBaseWriteKey(this$static, newBaseWriteKey){
  return new WritableAbsoluteCapability(this$static.owner, this$static.writer, copyOf(this$static.mapKey, this$static.mapKey.length), this$static.bat, this$static.rBaseKey, newBaseWriteKey);
}

function $withMapKey_1(this$static, newMapKey, newBat){
  return new WritableAbsoluteCapability(this$static.owner, this$static.writer, newMapKey, newBat, this$static.rBaseKey, castTo($get_6(this$static.wBaseKey), 88));
}

function WritableAbsoluteCapability(owner, writer, mapKey, bat, baseKey, wBaseKey){
  AbsoluteCapability_0.call(this, owner, writer, mapKey, bat, baseKey, ($clinit_Optional() , new Optional(checkCriticalNotNull(wBaseKey))));
}

defineClass(74, 71, {7:1, 71:1, 74:1}, WritableAbsoluteCapability);
_.withMapKey = function withMapKey_0(newMapKey, newBat){
  return new WritableAbsoluteCapability(this.owner, this.writer, newMapKey, newBat, this.rBaseKey, castTo($get_6(this.wBaseKey), 88));
}
;
_.toLink_0 = function toLink_1(){
  var encodedBaseKey, encodedMapKeyAndBat, encodedOwnerKey, encodedWBaseKey, encodedWriterKey;
  encodedOwnerKey = encode_4($toByteArray_2(new CborObject$CborMerkleLink(this.owner.target)));
  encodedWriterKey = encode_4($toByteArray_2(new CborObject$CborMerkleLink(this.writer.target)));
  encodedMapKeyAndBat = encode_4(concat_0(copyOf(this.mapKey, this.mapKey.length), castTo($orElse($map(this.bat, makeLambdaFunction(WritableAbsoluteCapability$0methodref$serialize$Type.prototype.apply_0, WritableAbsoluteCapability$0methodref$serialize$Type, [])), initUnidimensionalArray(B_classLit, $intern_28, 8, 0, 15, 1)), 11)));
  encodedBaseKey = encode_4($toByteArray_2($toCbor_15(this.rBaseKey)));
  encodedWBaseKey = encode_4(castTo($get_6(this.wBaseKey), 88).serialize());
  return castToString($collect_0(of_5(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [encodedOwnerKey, encodedWriterKey, encodedMapKeyAndBat, encodedBaseKey, encodedWBaseKey])), of_3(new Collectors$lambda$15$Type('/', '#'), new Collectors$9methodref$add$Type, new Collectors$10methodref$merge$Type, makeLambdaFunction(Collectors$11methodref$toString$Type.prototype.apply_0, Collectors$11methodref$toString$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, []))));
}
;
_.toString_0 = function toString_90(){
  return this.writer + '.' + bytesToHex(copyOf(this.mapKey, this.mapKey.length));
}
;
_.withOwner_0 = function withOwner_1(owner){
  return new WritableAbsoluteCapability(owner, this.writer, copyOf(this.mapKey, this.mapKey.length), this.bat, this.rBaseKey, castTo($get_6(this.wBaseKey), 88));
}
;
var Lpeergos_shared_user_fs_WritableAbsoluteCapability_2_classLit = createForClass('peergos.shared.user.fs', 'WritableAbsoluteCapability', 74);
function WritableAbsoluteCapability$0methodref$serialize$Type(){
}

defineClass(2599, $wnd.Function, $intern_22, WritableAbsoluteCapability$0methodref$serialize$Type);
_.apply_0 = function apply_2287(arg0){
  return castTo(arg0, 7).serialize();
}
;
function WritableAbsoluteCapability$lambda$0$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2598, $wnd.Function, $intern_22, WritableAbsoluteCapability$lambda$0$Type);
_.apply_0 = function apply_2288(arg0){
  return $lambda$0_35(this.$$outer_0, arg0);
}
;
function $addChildrenAndCommit(this$static, current, committer, targetCAPs, us, signer, mirrorBat, network, crypto_0){
  if (targetCAPs.isEmpty())
    return new CompletableFuture_0(current);
  return $thenCompose($getDirectChildren_0(this$static, us, current, network), makeLambdaFunction(CryptreeNode$lambda$89$Type.prototype.apply_0, CryptreeNode$lambda$89$Type, [this$static, committer, signer, mirrorBat, network, crypto_0, us, current, targetCAPs]));
}

function $cleanAndCommit(this$static, current, committer, cap, newCap, streamSecret, newStreamSecret, writer, newDataKey, parentLocation, parentBat, parentParentKey, network, crypto_0){
  var finalNewSecret, props, updatedFileProperties;
  props = $getParentBlock(this$static, cap.rBaseKey).properties;
  finalNewSecret = $map(streamSecret, makeLambdaFunction(CryptreeNode$lambda$75$Type.prototype.apply_0, CryptreeNode$lambda$75$Type, [newStreamSecret, crypto_0]));
  updatedFileProperties = castTo($orElse($map(finalNewSecret, makeLambdaFunction(CryptreeNode$lambda$77$Type.prototype.apply_0, CryptreeNode$lambda$77$Type, [props])), props), 96);
  return $thenCompose($getNextChunkLocation(this$static, cap.rBaseKey, streamSecret, copyOf(cap.mapKey, cap.mapKey.length), cap.bat, crypto_0.hasher), makeLambdaFunction(CryptreeNode$lambda$78$Type.prototype.apply_0, CryptreeNode$lambda$78$Type, [this$static, cap, newCap, newDataKey, current, committer, writer, updatedFileProperties, parentLocation, parentBat, parentParentKey, crypto_0, network, props, streamSecret, finalNewSecret]));
}

function $commit_4(this$static, current, committer, us, signer, network, tid){
  return $uploadChunk(network, current, committer, this$static, us.owner, copyOf(us.mapKey, us.mapKey.length), signer, tid);
}

function $generateNewChildCap(currentChild, currentParent, newParent, rotateSigner, network, crypto_0, version, committer){
  var baseRead, baseWrite, newBat, newChildCap, newMapKey, newSignerPair;
  baseRead = ($clinit_SymmetricKey() , random_10(castTo($get(PROVIDERS_1, ($clinit_SymmetricKey$Type() , TweetNaCl)), 91), castTo($get(RNG_PROVIDERS_0, TweetNaCl), 86)));
  baseWrite = random_10(castTo($get(PROVIDERS_1, TweetNaCl), 91), castTo($get(RNG_PROVIDERS_0, TweetNaCl), 86));
  newMapKey = $randomBytes(crypto_0.random, 32);
  newBat = ($clinit_Optional() , new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(crypto_0.random, 32))))));
  if ($equals_13(currentChild.cap.writer, currentParent.cap.writer)) {
    newChildCap = new WritableAbsoluteCapability(currentChild.cap.owner, newParent.cap.writer, newMapKey, newBat, baseRead, baseWrite);
    return new CompletableFuture_0(new Pair(version, new CryptreeNode$CapAndSigner(newChildCap, newParent.signer)));
  }
  if (!rotateSigner) {
    newChildCap = new WritableAbsoluteCapability(currentChild.cap.owner, currentChild.cap.writer, newMapKey, newBat, baseRead, baseWrite);
    return new CompletableFuture_0(new Pair(version, new CryptreeNode$CapAndSigner(newChildCap, currentChild.signer)));
  }
  newSignerPair = random_3(crypto_0.random, crypto_0.signer);
  return $thenApply(initAndAuthoriseSigner(currentChild.cap.owner, newParent.signer, newSignerPair, network, version, committer), makeLambdaFunction(CryptreeNode$lambda$46$Type.prototype.apply_0, CryptreeNode$lambda$46$Type, [currentChild, newMapKey, newBat, baseRead, baseWrite]));
}

function $getAllChildrenCapabilities(this$static, inVersion, us, hasher, network){
  return $thenCompose($withWriter(inVersion, us.owner, us.writer, network), makeLambdaFunction(CryptreeNode$lambda$16$Type.prototype.apply_0, CryptreeNode$lambda$16$Type, [this$static, hasher, network, us]));
}

function $getChild_4(this$static, name_0, us, version, hasher, network){
  return $thenCompose($thenCompose($thenApply($getDirectChildren_0(this$static, us, version, network), makeLambdaFunction(CryptreeNode$lambda$14$Type.prototype.apply_0, CryptreeNode$lambda$14$Type, [us])), makeLambdaFunction(CryptreeNode$lambda$24$Type.prototype.apply_0, CryptreeNode$lambda$24$Type, [name_0, network, version])), makeLambdaFunction(CryptreeNode$lambda$30$Type.prototype.apply_0, CryptreeNode$lambda$30$Type, [this$static, name_0, version, hasher, network, us]));
}

function $getDataKey(this$static, baseKey){
  if (this$static.isDirectory_0)
    throw toJs(new IllegalStateException_0("Directories don't have a data key!"));
  return castTo($decrypt_3(this$static.fromBaseKey, baseKey, makeLambdaFunction(CryptreeNode$9methodref$fromCbor$Type.prototype.apply_0, CryptreeNode$9methodref$fromCbor$Type, [])), 158).parentOrData;
}

function $getDirectChildren(this$static, network, us, version){
  return $thenCompose($thenApply($getDirectChildren_0(this$static, us, version, network), makeLambdaFunction(CryptreeNode$lambda$14$Type.prototype.apply_0, CryptreeNode$lambda$14$Type, [us])), makeLambdaFunction(CryptreeNode$lambda$21$Type.prototype.apply_0, CryptreeNode$lambda$21$Type, [network, version]));
}

function $getDirectChildren_0(this$static, us, version, network){
  if (!this$static.isDirectory_0)
    return new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_LIST));
  return $thenCompose($getLinkedData(this$static, us.owner, us.rBaseKey, makeLambdaFunction(CryptreeNode$11methodref$fromCbor$Type.prototype.apply_0, CryptreeNode$11methodref$fromCbor$Type, []), network.hasher, network, makeLambdaFunction(CryptreeNode$lambda$7$Type.prototype.accept_5, CryptreeNode$lambda$7$Type, [])), makeLambdaFunction(CryptreeNode$lambda$8$Type.prototype.apply_0, CryptreeNode$lambda$8$Type, [network, us, version]));
}

function $getDirectChildrenCapabilities(this$static, us, version, network){
  return $thenApply($getDirectChildren_0(this$static, us, version, network), makeLambdaFunction(CryptreeNode$lambda$14$Type.prototype.apply_0, CryptreeNode$lambda$14$Type, [us]));
}

function $getLinkedData(this$static, owner, baseOrDataKey, fromCbor, h, network, progress){
  return $getAndDecrypt(this$static.childrenOrData, owner, baseOrDataKey, fromCbor, h, network, progress);
}

function $getNextChunk(this$static, version, us, network, streamSecret, hasher){
  return $thenCompose($getNextChunkLocation(this$static, us.rBaseKey, streamSecret, copyOf(us.mapKey, us.mapKey.length), us.bat, hasher), makeLambdaFunction(CryptreeNode$lambda$43$Type.prototype.apply_0, CryptreeNode$lambda$43$Type, [us, version, network]));
}

function $getNextChunkLocation(this$static, rBaseKey, streamSecret, currentMapKey, currentBat, hasher){
  var nextChunk;
  if (streamSecret.ref != null)
    return calculateNextMapKey((checkCriticalElement(streamSecret.ref != null) , castTo(streamSecret.ref, 11)), currentMapKey, currentBat, hasher);
  nextChunk = castTo($decrypt_3(this$static.fromBaseKey, rBaseKey, makeLambdaFunction(CryptreeNode$9methodref$fromCbor$Type.prototype.apply_0, CryptreeNode$9methodref$fromCbor$Type, [])), 158).nextChunk;
  return new CompletableFuture_0(new Pair(copyOf(nextChunk.mapKey, nextChunk.mapKey.length), nextChunk.bat));
}

function $getParent_0(this$static, owner, writer, baseKey, network, version){
  var parentKey, parentLink, relCap;
  parentKey = $getParentKey_0(this$static, baseKey);
  parentLink = castTo($decrypt_3(this$static.fromParentKey, parentKey, makeLambdaFunction(CryptreeNode$10methodref$fromCbor$Type.prototype.apply_0, CryptreeNode$10methodref$fromCbor$Type, [])), 159).parentLink;
  if (parentLink.ref == null)
    return new CompletableFuture_0(null);
  relCap = (checkCriticalElement(parentLink.ref != null) , castTo(parentLink.ref, 102));
  return $thenApply($retrieveMetadata(network, new AbsoluteCapability_0(owner, castTo($orElse(relCap.writer, writer), 55), copyOf(relCap.mapKey, relCap.mapKey.length), relCap.bat, relCap.rBaseKey, ($clinit_Optional() , $clinit_Optional() , EMPTY)), version), makeLambdaFunction(CryptreeNode$lambda$126$Type.prototype.apply_0, CryptreeNode$lambda$126$Type, []));
}

function $getParentBlock(this$static, parentKey){
  return castTo($decrypt_3(this$static.fromParentKey, parentKey, makeLambdaFunction(CryptreeNode$10methodref$fromCbor$Type.prototype.apply_0, CryptreeNode$10methodref$fromCbor$Type, [])), 159);
}

function $getParentCapability(this$static, baseKey){
  var parentKey;
  parentKey = $getParentKey_0(this$static, baseKey);
  return castTo($decrypt_3(this$static.fromParentKey, parentKey, makeLambdaFunction(CryptreeNode$10methodref$fromCbor$Type.prototype.apply_0, CryptreeNode$10methodref$fromCbor$Type, [])), 159).parentLink;
}

function $getParentKey_0(this$static, baseKey){
  if (this$static.isDirectory_0)
    try {
      return castTo($decrypt_3(this$static.fromBaseKey, baseKey, makeLambdaFunction(CryptreeNode$9methodref$fromCbor$Type.prototype.apply_0, CryptreeNode$9methodref$fromCbor$Type, [])), 158).parentOrData;
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (!instanceOf($e0, 51))
        throw toJs($e0);
    }
  return baseKey;
}

function $getProperties(this$static, parentKey){
  return castTo($decrypt_3(this$static.fromParentKey, parentKey, makeLambdaFunction(CryptreeNode$10methodref$fromCbor$Type.prototype.apply_0, CryptreeNode$10methodref$fromCbor$Type, [])), 159).properties;
}

function $getSigner(this$static, rBaseKey, wBaseKey, entrySigner){
  return castTo($orElseGet($map(castTo($decrypt_3(this$static.fromBaseKey, rBaseKey, makeLambdaFunction(CryptreeNode$9methodref$fromCbor$Type.prototype.apply_0, CryptreeNode$9methodref$fromCbor$Type, [])), 158).signer, makeLambdaFunction(CryptreeNode$lambda$2$Type.prototype.apply_0, CryptreeNode$lambda$2$Type, [wBaseKey])), new CryptreeNode$lambda$3$Type(entrySigner)), 105);
}

function $getWriterLink(this$static, baseKey){
  return castTo($decrypt_3(this$static.fromBaseKey, baseKey, makeLambdaFunction(CryptreeNode$9methodref$fromCbor$Type.prototype.apply_0, CryptreeNode$9methodref$fromCbor$Type, [])), 158).signer;
}

function $hasParentLink(this$static, baseKey){
  var parentKey;
  parentKey = $getParentKey_0(this$static, baseKey);
  return castTo($decrypt_3(this$static.fromParentKey, parentKey, makeLambdaFunction(CryptreeNode$10methodref$fromCbor$Type.prototype.apply_0, CryptreeNode$10methodref$fromCbor$Type, [])), 159).parentLink.ref != null;
}

function $isDirty(this$static, baseKey){
  if (this$static.isDirectory_0)
    return false;
  return castTo($decrypt_3(this$static.fromBaseKey, baseKey, makeLambdaFunction(CryptreeNode$9methodref$fromCbor$Type.prototype.apply_0, CryptreeNode$9methodref$fromCbor$Type, [])), 158).parentOrData.isDirty_0;
}

function $isReadable(this$static, baseKey){
  try {
    castTo($decrypt_3(this$static.fromBaseKey, baseKey, makeLambdaFunction(CryptreeNode$9methodref$fromCbor$Type.prototype.apply_0, CryptreeNode$9methodref$fromCbor$Type, [])), 158);
    return true;
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (!instanceOf($e0, 51))
      throw toJs($e0);
  }
  return false;
}

function $lambda$103(this$static, base_1, committer_2, childCap_3, entryWriter_4, network_5, dirMapKey_6, dirBat_7, dirReadKey_8, name_9, us_10, mirrorBat_11, crypto_12, dirWriteKey_13, child_13){
  var toChildWriteKey;
  toChildWriteKey = new SymmetricLink(build_2(castTo($get_6(us_10.wBaseKey), 88), dirWriteKey_13));
  return $thenCompose(call_2(us_10.owner, makeLambdaFunction(CryptreeNode$lambda$104$Type.prototype.apply_0, CryptreeNode$lambda$104$Type, [child_13, base_1, committer_2, childCap_3, entryWriter_4, network_5]), network_5.dhtClient), makeLambdaFunction(CryptreeNode$lambda$105$Type.prototype.apply_0, CryptreeNode$lambda$105$Type, [this$static, dirMapKey_6, dirBat_7, dirReadKey_8, toChildWriteKey, name_9, us_10, entryWriter_4, committer_2, mirrorBat_11, network_5, crypto_12]));
}

function $lambda$105(this$static, dirMapKey_1, dirBat_2, dirReadKey_3, toChildWriteKey_4, name_5, us_6, entryWriter_7, committer_8, mirrorBat_9, network_10, crypto_11, updatedBase_11){
  var cap, signer, subdirPointer;
  cap = new RelativeCapability(($clinit_Optional() , $clinit_Optional() , EMPTY), dirMapKey_1, dirBat_2, dirReadKey_3, new Optional(checkCriticalNotNull(toChildWriteKey_4)));
  subdirPointer = new NamedRelativeCapability_0(new PathElement(name_5), cap);
  signer = $getSigner(this$static, us_6.rBaseKey, castTo($get_6(us_6.wBaseKey), 88), entryWriter_7);
  return $addChildrenAndCommit(this$static, updatedBase_11, committer_8, new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_user_fs_NamedRelativeCapability_2_classLit, 1), $intern_0, 150, 0, [subdirPointer])), us_6, signer, mirrorBat_9, network_10, crypto_11);
}

function $lambda$106_0(this$static, ourPointer_1, base_2, committer_3, signer_4, network_5, random_6, hasher_7, childCasPairs_8, children_8){
  var existingChildLocs, oldToNew, remaining, unchanged, updatedLinks;
  existingChildLocs = castTo($collect_0($map_0(children_8.stream(), makeLambdaFunction(CryptreeNode$lambda$107$Type.prototype.apply_0, CryptreeNode$lambda$107$Type, [])), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47);
  oldToNew = castTo($collect_0(childCasPairs_8.stream(), toMap(makeLambdaFunction(CryptreeNode$lambda$108$Type.prototype.apply_0, CryptreeNode$lambda$108$Type, []), makeLambdaFunction(CryptreeNode$lambda$109$Type.prototype.apply_0, CryptreeNode$lambda$109$Type, []), new Collectors$lambda$44$Type, new Collectors$22methodref$ctor$Type)), 68);
  unchanged = castTo($collect_0($map_0($filter(children_8.stream(), new CryptreeNode$lambda$110$Type(oldToNew)), makeLambdaFunction(CryptreeNode$lambda$111$Type.prototype.apply_0, CryptreeNode$lambda$111$Type, [ourPointer_1])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [IDENTITY_FINISH]))), 17);
  updatedLinks = castTo($collect_0($map_0($filter(children_8.stream(), new CryptreeNode$lambda$112$Type(oldToNew)), makeLambdaFunction(CryptreeNode$lambda$113$Type.prototype.apply_0, CryptreeNode$lambda$113$Type, [oldToNew, ourPointer_1])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [IDENTITY_FINISH]))), 17);
  remaining = castTo($collect_0($filter(childCasPairs_8.stream(), new CryptreeNode$lambda$114$Type(existingChildLocs)), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [UNORDERED, IDENTITY_FINISH]))), 54);
  return $thenCompose(updatedLinks.isEmpty()?new CompletableFuture_0(base_2):call_2(ourPointer_1.owner, makeLambdaFunction(CryptreeNode$lambda$115$Type.prototype.apply_0, CryptreeNode$lambda$115$Type, [this$static, base_2, committer_3, ourPointer_1, signer_4, network_5, unchanged, updatedLinks, random_6, hasher_7]), network_5.dhtClient), makeLambdaFunction(CryptreeNode$lambda$117$Type.prototype.apply_0, CryptreeNode$lambda$117$Type, [this$static, ourPointer_1, committer_3, signer_4, remaining, network_5, random_6, hasher_7, base_2]));
}

function $lambda$115_0(this$static, base_1, committer_2, ourPointer_3, signer_4, network_5, unchanged_6, updatedLinks_7, random_8, hasher_9, tid_9){
  return $thenCompose($withChildren(this$static, ourPointer_3.rBaseKey, new CryptreeNode$ChildrenLinks(castTo(concat(unchanged_6.stream(), updatedLinks_7.stream()).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17)), random_8, hasher_9), makeLambdaFunction(CryptreeNode$lambda$116$Type.prototype.apply_0, CryptreeNode$lambda$116$Type, [base_1, committer_2, ourPointer_3, signer_4, network_5, tid_9]));
}

function $lambda$117_0(this$static, ourPointer_1, committer_2, signer_3, remaining_4, network_5, random_6, hasher_7, base_8, updated_8){
  return remaining_4.isEmpty()?new CompletableFuture_0(updated_8):$thenCompose($getNextChunk(this$static, base_8, ourPointer_1, network_5, ($clinit_Optional() , $clinit_Optional() , EMPTY), hasher_7), makeLambdaFunction(CryptreeNode$lambda$118$Type.prototype.apply_0, CryptreeNode$lambda$118$Type, [this$static, ourPointer_1, updated_8, committer_2, signer_3, remaining_4, network_5, random_6, hasher_7]));
}

function $lambda$118(this$static, ourPointer_1, updated_2, committer_3, signer_4, remaining_5, network_6, random_7, hasher_8, nextOpt_8){
  return $thenCompose($getNextChunkLocation(this$static, ourPointer_1.rBaseKey, ($clinit_Optional() , $clinit_Optional() , EMPTY), copyOf(ourPointer_1.mapKey, ourPointer_1.mapKey.length), ourPointer_1.bat, hasher_8), makeLambdaFunction(CryptreeNode$lambda$119$Type.prototype.apply_0, CryptreeNode$lambda$119$Type, [ourPointer_1, nextOpt_8, updated_2, committer_3, signer_4, remaining_5, network_6, random_7, hasher_8]));
}

function $lambda$121(this$static, ourPointer_1, current_2, committer_3, entryWriter_4, network_5, random_6, hasher_7, locsToRemove_8, children_8){
  var withRemoval;
  withRemoval = castTo($collect_0($map_0($filter(children_8.stream(), new CryptreeNode$lambda$122$Type(locsToRemove_8)), makeLambdaFunction(CryptreeNode$lambda$123$Type.prototype.apply_0, CryptreeNode$lambda$123$Type, [ourPointer_1])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  return call_2(ourPointer_1.owner, makeLambdaFunction(CryptreeNode$lambda$124$Type.prototype.apply_0, CryptreeNode$lambda$124$Type, [this$static, current_2, committer_3, ourPointer_1, entryWriter_4, network_5, withRemoval, random_6, hasher_7]), network_5.dhtClient);
}

function $lambda$124_0(this$static, current_1, committer_2, ourPointer_3, entryWriter_4, network_5, withRemoval_6, random_7, hasher_8, tid_8){
  return $thenCompose($withChildren(this$static, ourPointer_3.rBaseKey, new CryptreeNode$ChildrenLinks(withRemoval_6), random_7, hasher_8), makeLambdaFunction(CryptreeNode$lambda$125$Type.prototype.apply_0, CryptreeNode$lambda$125$Type, [current_1, committer_2, ourPointer_3, entryWriter_4, network_5, tid_8]));
}

function $lambda$16_11(this$static, hasher_1, network_2, us_3, version_3){
  var childrenFuture, moreChildrenFuture;
  childrenFuture = $thenApply($getDirectChildren_0(this$static, us_3, version_3, network_2), makeLambdaFunction(CryptreeNode$lambda$14$Type.prototype.apply_0, CryptreeNode$lambda$14$Type, [us_3]));
  moreChildrenFuture = $getNextChunk(this$static, version_3, us_3, network_2, ($clinit_Optional() , $clinit_Optional() , EMPTY), hasher_1);
  return $thenCompose(childrenFuture, makeLambdaFunction(CryptreeNode$lambda$17$Type.prototype.apply_0, CryptreeNode$lambda$17$Type, [version_3, hasher_1, network_2, moreChildrenFuture]));
}

function $lambda$30_8(this$static, name_1, version_2, hasher_3, network_4, us_5, directOpt_5){
  if (directOpt_5.ref != null)
    return new CompletableFuture_0(directOpt_5);
  return $thenCompose($getNextChunk(this$static, version_2, us_5, network_4, ($clinit_Optional() , $clinit_Optional() , EMPTY), hasher_3), makeLambdaFunction(CryptreeNode$lambda$31$Type.prototype.apply_0, CryptreeNode$lambda$31$Type, [name_1, version_2, hasher_3, network_4]));
}

function $lambda$32_4(this$static, network_1, base_2, committer_3, updated_4, us_5, entryWriter_6, tid_6){
  return $uploadChunk(network_1, base_2, committer_3, updated_4, us_5.owner, copyOf(us_5.mapKey, us_5.mapKey.length), $getSigner(this$static, us_5.rBaseKey, castTo($get_6(us_5.wBaseKey), 88), entryWriter_6), tid_6);
}

function $lambda$42_5(this$static, encryptedChildren_0){
  var cryptreeNode;
  cryptreeNode = new CryptreeNode(this$static.lastCommittedHash, this$static.isDirectory_0, this$static.bats, this$static.fromBaseKey, castTo(encryptedChildren_0.left, 229), this$static.fromParentKey);
  return new CryptreeNode$DirAndChildren(cryptreeNode, castTo(encryptedChildren_0.right, 17));
}

function $lambda$43_4(us_1, version_2, network_3, mapkeyAndBat_3){
  var nextChunkCap;
  nextChunkCap = us_1.withMapKey(castTo(mapkeyAndBat_3.left, 11), castTo(mapkeyAndBat_3.right, 12));
  return $thenApply(network_3.getMetadata($get_32(version_2, nextChunkCap.writer).props, nextChunkCap), makeLambdaFunction(CryptreeNode$lambda$44$Type.prototype.apply_0, CryptreeNode$lambda$44$Type, [nextChunkCap]));
}

function $lambda$5_19(this$static, baseKey_1, nextChunkLocation_1){
  return new EncryptedChunkRetriever(this$static.childrenOrData, castTo(nextChunkLocation_1.left, 11), castTo(nextChunkLocation_1.right, 12), $getDataKey(this$static, baseKey_1));
}

function $lambda$55_3(this$static, newUs_1, crypto_2, newParent_3, us_4, parent_5, mirrorBat_6, rotateSigner_7, network_8, committer_9, isFirstChunk_10, props_11, fileStreamSecret_12, firstChunkOrParentCap_13, version_14, nextMapKeyAndBat_14){
  var newNextChunkMapKeyFut, nextChunkCap, streamSecret;
  nextChunkCap = $withMapKey_1(us_4.cap, castTo(nextMapKeyAndBat_14.left, 11), castTo(nextMapKeyAndBat_14.right, 12));
  streamSecret = isFirstChunk_10?this$static.isDirectory_0?($clinit_Optional() , $clinit_Optional() , EMPTY):($clinit_Optional() , new Optional(checkCriticalNotNull($randomBytes(crypto_2.random, 32)))):fileStreamSecret_12;
  newNextChunkMapKeyFut = castTo($orElseGet($map(streamSecret, makeLambdaFunction(CryptreeNode$lambda$56$Type.prototype.apply_0, CryptreeNode$lambda$56$Type, [newUs_1, crypto_2])), new CryptreeNode$lambda$57$Type(crypto_2)), 6);
  return $thenCompose(newNextChunkMapKeyFut, makeLambdaFunction(CryptreeNode$lambda$58$Type.prototype.apply_0, CryptreeNode$lambda$58$Type, [this$static, newParent_3, newUs_1, us_4, nextChunkCap, parent_5, streamSecret, mirrorBat_6, rotateSigner_7, network_8, crypto_2, committer_9, isFirstChunk_10, props_11, firstChunkOrParentCap_13, version_14]));
}

function $lambda$58_2(this$static, newParent_1, newUs_2, us_3, nextChunkCap_4, parent_5, streamSecret_6, mirrorBat_7, rotateSigner_8, network_9, crypto_10, committer_11, isFirstChunk_12, props_13, firstChunkOrParentCap_14, version_15, newNextChunkMapKeyAndBat_15){
  var childCapToUs, newNextChunkCap, newParentCap, newParentKey;
  newNextChunkCap = $withMapKey_1(newUs_2.cap, castTo(newNextChunkMapKeyAndBat_15.left, 11), castTo(newNextChunkMapKeyAndBat_15.right, 12));
  newParentKey = isFirstChunk_12?($clinit_SymmetricKey() , random_10(castTo($get(PROVIDERS_1, ($clinit_SymmetricKey$Type() , TweetNaCl)), 91), castTo($get(RNG_PROVIDERS_0, TweetNaCl), 86))):(checkCriticalElement(firstChunkOrParentCap_14.ref != null) , castTo(firstChunkOrParentCap_14.ref, 102)).rBaseKey;
  newParentCap = isFirstChunk_12?$map(firstChunkOrParentCap_14, makeLambdaFunction(CryptreeNode$lambda$59$Type.prototype.apply_0, CryptreeNode$lambda$59$Type, [newParent_1, newUs_2])):($clinit_Optional() , $clinit_Optional() , EMPTY);
  childCapToUs = isFirstChunk_12?($clinit_Optional() , new Optional(checkCriticalNotNull(new RelativeCapability((null , EMPTY), $getMapKey(newUs_2.cap), newUs_2.cap.bat, newParentKey, (null , EMPTY))))):firstChunkOrParentCap_14;
  return $thenApply($thenCompose($thenCompose($withWriter(version_15, us_3.cap.owner, us_3.cap.writer, network_9), makeLambdaFunction(CryptreeNode$lambda$60$Type.prototype.apply_0, CryptreeNode$lambda$60$Type, [newNextChunkCap, us_3, nextChunkCap_4, newUs_2, parent_5, newParent_1, childCapToUs, streamSecret_6, mirrorBat_7, rotateSigner_8, network_9, crypto_10, committer_11])), makeLambdaFunction(CryptreeNode$lambda$62$Type.prototype.apply_0, CryptreeNode$lambda$62$Type, [this$static, us_3, newUs_2, childCapToUs, mirrorBat_7, rotateSigner_8, network_9, crypto_10, committer_11, isFirstChunk_12, newParent_1, props_13, newParentCap, newParentKey, version_15, streamSecret_6])), makeLambdaFunction(CryptreeNode$lambda$74$Type.prototype.apply_0, CryptreeNode$lambda$74$Type, [newUs_2]));
}

function $lambda$60_2(newNextChunkCap_1, us_2, nextChunkCap_3, newUs_4, parent_5, newParent_6, childCapToUs_7, streamSecret_8, mirrorBat_9, rotateSigner_10, network_11, crypto_12, committer_13, s_13){
  return $thenCompose($thenApply(network_11.getMetadata($get_32(s_13, nextChunkCap_3.writer).props, nextChunkCap_3), makeLambdaFunction(CryptreeNode$lambda$44$Type.prototype.apply_0, CryptreeNode$lambda$44$Type, [nextChunkCap_3])), makeLambdaFunction(CryptreeNode$lambda$61$Type.prototype.apply_0, CryptreeNode$lambda$61$Type, [s_13, newNextChunkCap_1, us_2, nextChunkCap_3, newUs_4, parent_5, newParent_6, childCapToUs_7, streamSecret_8, mirrorBat_9, rotateSigner_10, network_11, crypto_12, committer_13]));
}

function $lambda$62_0(this$static, us_1, newUs_2, childCapToUs_3, mirrorBat_4, rotateSigner_5, network_6, crypto_7, committer_8, isFirstChunk_9, newParent_10, props_11, newParentCap_12, newParentKey_13, version_14, streamSecret_15, nextChunk_15){
  var dataKey, empty, newFileChunk, signerLink;
  if (this$static.isDirectory_0) {
    empty = ($clinit_Collections() , $clinit_Collections() , EMPTY_SET);
    return $thenCompose($thenCompose($getDirectChildren(this$static, network_6, us_1.cap, version_14), makeLambdaFunction(CryptreeNode$lambda$63$Type.prototype.apply_0, CryptreeNode$lambda$63$Type, [us_1, newUs_2, childCapToUs_3, mirrorBat_4, rotateSigner_5, network_6, crypto_7, committer_8, nextChunk_15, empty])), makeLambdaFunction(CryptreeNode$lambda$68$Type.prototype.apply_0, CryptreeNode$lambda$68$Type, [newUs_2, committer_8, network_6, us_1, isFirstChunk_9, newParent_10, nextChunk_15, props_11, newParentCap_12, newParentKey_13, mirrorBat_4, crypto_7]));
  }
   else {
    signerLink = !isFirstChunk_9 | $equals_13(newUs_2.cap.writer, newParent_10.cap.writer)?($clinit_Optional() , $clinit_Optional() , EMPTY):($clinit_Optional() , new Optional(checkCriticalNotNull(new SymmetricLinkToSigner(build_2(castTo($get_6(newUs_2.cap.wBaseKey), 88), newUs_2.signer)))));
    dataKey = $makeDirty($getDataKey(this$static, us_1.cap.rBaseKey));
    newFileChunk = createFile(($clinit_MaybeMultihash() , $clinit_MaybeMultihash() , EMPTY_0), signerLink, newUs_2.cap.rBaseKey, dataKey, castTo($orElse($map(streamSecret_15, makeLambdaFunction(CryptreeNode$14methodref$withNewStreamSecret$Type.prototype.apply_0, CryptreeNode$14methodref$withNewStreamSecret$Type, [props_11])), props_11), 96), this$static.childrenOrData, newParentCap_12, buildSubsequentChunk($getMapKey(castTo(nextChunk_15.right, 74)), castTo(nextChunk_15.right, 74).bat, castTo(nextChunk_15.right, 74).rBaseKey), newUs_2.cap.bat, mirrorBat_4);
    return call_2(us_1.cap.owner, makeLambdaFunction(CryptreeNode$lambda$73$Type.prototype.apply_0, CryptreeNode$lambda$73$Type, [newFileChunk, nextChunk_15, committer_8, newUs_2, network_6]), network_6.dhtClient);
  }
}

function $lambda$63_1(us_1, newUs_2, childCapToUs_3, mirrorBat_4, rotateSigner_5, network_6, crypto_7, committer_8, nextChunk_9, empty_10, children_10){
  return reduceAll(children_10, new Pair(castTo(nextChunk_9.left, 43), empty_10), new CryptreeNode$lambda$64$Type(us_1, newUs_2, childCapToUs_3, mirrorBat_4, rotateSigner_5, network_6, crypto_7, committer_8), new CryptreeNode$lambda$65$Type);
}

function $lambda$64_3(us_1, newUs_2, childCapToUs_3, mirrorBat_4, rotateSigner_5, network_6, crypto_7, committer_8, p_8, c_9){
  var child, childSigner;
  childSigner = $getSigner(c_9.fileAccess, c_9.capability.rBaseKey, castTo($get_6(c_9.capability.wBaseKey), 88), ($clinit_Optional() , new Optional(checkCriticalNotNull(us_1.signer))));
  child = new CryptreeNode$CapAndSigner(castTo(c_9.capability, 74), childSigner);
  return $thenCompose($generateNewChildCap(child, us_1, newUs_2, rotateSigner_5, network_6, crypto_7, castTo(p_8.left, 43), committer_8), makeLambdaFunction(CryptreeNode$lambda$66$Type.prototype.apply_0, CryptreeNode$lambda$66$Type, [p_8, c_9, child, us_1, newUs_2, childCapToUs_3, mirrorBat_4, rotateSigner_5, network_6, crypto_7, committer_8]));
}

function $lambda$78_0(this$static, cap_1, newCap_2, newDataKey_3, current_4, committer_5, writer_6, updatedFileProperties_7, parentLocation_8, parentBat_9, parentParentKey_10, crypto_11, network_12, props_13, streamSecret_14, finalNewSecret_15, nextMapKey_15){
  var nextCap;
  nextCap = $withMapKey_1(cap_1, castTo(nextMapKey_15.left, 11), castTo(nextMapKey_15.right, 12));
  return $thenCompose($getNextChunkLocation(this$static, cap_1.rBaseKey, finalNewSecret_15, copyOf(newCap_2.mapKey, newCap_2.mapKey.length), newCap_2.bat, crypto_11.hasher), makeLambdaFunction(CryptreeNode$lambda$79$Type.prototype.apply_0, CryptreeNode$lambda$79$Type, [this$static, cap_1, newCap_2, newDataKey_3, current_4, committer_5, writer_6, updatedFileProperties_7, parentLocation_8, parentBat_9, parentParentKey_10, crypto_11, network_12, props_13, nextCap, streamSecret_14]));
}

function $lambda$79_2(this$static, cap_1, newCap_2, newDataKey_3, current_4, committer_5, writer_6, updatedFileProperties_7, parentLocation_8, parentBat_9, parentParentKey_10, crypto_11, network_12, props_13, nextCap_14, streamSecret_15, newNextMapKey_15){
  var newNextCap;
  newNextCap = $withMapKey_1(cap_1, castTo(newNextMapKey_15.left, 11), castTo(newNextMapKey_15.right, 12));
  return $thenCompose($retriever(this$static, cap_1.rBaseKey, streamSecret_15, copyOf(cap_1.mapKey, cap_1.mapKey.length), cap_1.bat, crypto_11.hasher), makeLambdaFunction(CryptreeNode$lambda$80$Type.prototype.apply_0, CryptreeNode$lambda$80$Type, [this$static, cap_1, newCap_2, newDataKey_3, current_4, committer_5, writer_6, updatedFileProperties_7, parentLocation_8, parentBat_9, parentParentKey_10, newNextCap, crypto_11, network_12, props_13, nextCap_14, streamSecret_15]));
}

function $lambda$80(this$static, cap_1, newCap_2, newDataKey_3, current_4, committer_5, writer_6, updatedFileProperties_7, parentLocation_8, parentBat_9, parentParentKey_10, newNextCap_11, crypto_12, network_13, props_14, nextCap_15, streamSecret_16, retriever_16){
  return $thenCompose($thenCompose($getFile_2(retriever_16, $get_31(current_4, writer_6).props, network_13, crypto_12, cap_1, streamSecret_16, props_14.size_0, this$static.lastCommittedHash, 1, makeLambdaFunction(CryptreeNode$lambda$81$Type.prototype.accept_5, CryptreeNode$lambda$81$Type, [])), makeLambdaFunction(CryptreeNode$lambda$82$Type.prototype.apply_0, CryptreeNode$lambda$82$Type, [this$static, cap_1, newCap_2, newDataKey_3, current_4, committer_5, writer_6, updatedFileProperties_7, parentLocation_8, parentBat_9, parentParentKey_10, newNextCap_11, crypto_12, network_13, props_14])), makeLambdaFunction(CryptreeNode$lambda$85$Type.prototype.apply_0, CryptreeNode$lambda$85$Type, [network_13, committer_5, cap_1, nextCap_15, writer_6, newNextCap_11, streamSecret_16, updatedFileProperties_7, newDataKey_3, parentLocation_8, parentBat_9, parentParentKey_10, crypto_12]));
}

function $lambda$82_1(this$static, cap_1, newCap_2, newDataKey_3, current_4, committer_5, writer_6, updatedFileProperties_7, parentLocation_8, parentBat_9, parentParentKey_10, newNextCap_11, crypto_12, network_13, props_14, data_14){
  var chunkData, chunkSize;
  chunkSize = toInt_0(min_1(props_14.size_0, $intern_70));
  chunkData = initUnidimensionalArray(B_classLit, $intern_28, 8, chunkSize, 15, 1);
  return $thenCompose(data_14.readIntoArray(chunkData, 0, chunkSize), makeLambdaFunction(CryptreeNode$lambda$83$Type.prototype.apply_0, CryptreeNode$lambda$83$Type, [this$static, cap_1, newCap_2, chunkData, newDataKey_3, current_4, committer_5, writer_6, updatedFileProperties_7, parentLocation_8, parentBat_9, parentParentKey_10, newNextCap_11, crypto_12, network_13]));
}

function $lambda$83(this$static, cap_1, newCap_2, chunkData_3, newDataKey_4, current_5, committer_6, writer_7, updatedFileProperties_8, parentLocation_9, parentBat_10, parentParentKey_11, newNextCap_12, crypto_13, network_14){
  var chunk, locatedChunk, mapKey;
  $createNonce_0(cap_1.rBaseKey);
  mapKey = copyOf(newCap_2.mapKey, newCap_2.mapKey.length);
  chunk = new Chunk(chunkData_3, newDataKey_4, mapKey);
  locatedChunk = new LocatedChunk(new Location_0(newCap_2.owner, newCap_2.writer, newCap_2.mapKey), newCap_2.bat, this$static.lastCommittedHash, chunk);
  return uploadChunk(current_5, committer_6, writer_7, updatedFileProperties_8, parentLocation_9, parentBat_10, parentParentKey_11, cap_1.rBaseKey, locatedChunk, new Location_0(newNextCap_12.owner, newNextCap_12.writer, newNextCap_12.mapKey), newNextCap_12.bat, $getWriterLink(this$static, cap_1.rBaseKey), $mirrorBatId(this$static), crypto_13.random, crypto_13.hasher, network_14, makeLambdaFunction(CryptreeNode$lambda$84$Type.prototype.accept_5, CryptreeNode$lambda$84$Type, []));
}

function $lambda$89_1(this$static, committer_1, signer_2, mirrorBat_3, network_4, crypto_5, us_6, current_7, targetCAPs_8, children_8){
  var newFiles;
  if (children_8.size() + targetCAPs_8.size() > MAX_CHILD_LINKS_PER_BLOB) {
    return $thenCompose($getNextChunk(this$static, current_7, us_6, network_4, ($clinit_Optional() , $clinit_Optional() , EMPTY), crypto_5.hasher), makeLambdaFunction(CryptreeNode$lambda$90$Type.prototype.apply_0, CryptreeNode$lambda$90$Type, [this$static, committer_1, signer_2, mirrorBat_3, network_4, crypto_5, us_6, current_7, targetCAPs_8, children_8]));
  }
   else {
    newFiles = new ArrayList_1(children_8);
    $addAll_0(newFiles, targetCAPs_8);
    return call_2(us_6.owner, makeLambdaFunction(CryptreeNode$lambda$97$Type.prototype.apply_0, CryptreeNode$lambda$97$Type, [this$static, current_7, committer_1, us_6, signer_2, network_4, newFiles, crypto_5]), network_4.dhtClient);
  }
}

function $lambda$90_1(this$static, committer_1, signer_2, mirrorBat_3, network_4, crypto_5, us_6, current_7, targetCAPs_8, children_9, nextMetablob_9){
  var addToNext, addToUs, freeSlots, nextBlob, nextPointer;
  if (nextMetablob_9.ref != null) {
    nextPointer = (checkCriticalElement(nextMetablob_9.ref != null) , castTo(nextMetablob_9.ref, 83)).capability;
    nextBlob = (checkCriticalElement(nextMetablob_9.ref != null) , castTo(nextMetablob_9.ref, 83)).fileAccess;
    return $addChildrenAndCommit(nextBlob, current_7, committer_1, targetCAPs_8, $toWritable(nextPointer, castTo($get_6(us_6.wBaseKey), 88)), signer_2, mirrorBat_3, network_4, crypto_5);
  }
   else {
    freeSlots = MAX_CHILD_LINKS_PER_BLOB - children_9.size();
    addToUs = targetCAPs_8.subList(0, freeSlots);
    addToNext = targetCAPs_8.subList(freeSlots, targetCAPs_8.size());
    return $thenCompose(addToUs.isEmpty()?new CompletableFuture_0(current_7):$addChildrenAndCommit(this$static, current_7, committer_1, addToUs, us_6, signer_2, mirrorBat_3, network_4, crypto_5), makeLambdaFunction(CryptreeNode$lambda$91$Type.prototype.apply_0, CryptreeNode$lambda$91$Type, [this$static, committer_1, signer_2, mirrorBat_3, network_4, crypto_5, us_6, addToNext]));
  }
}

function $lambda$91(this$static, committer_1, signer_2, mirrorBat_3, network_4, crypto_5, us_6, addToNext_7, newBase_7){
  var addToNextChunk, nextChunk, nextSubfoldersKey, ourParentKey, parentCap, remaining;
  nextSubfoldersKey = us_6.rBaseKey;
  ourParentKey = $getParentKey_0(this$static, us_6.rBaseKey);
  parentCap = castTo($decrypt_3(this$static.fromParentKey, ourParentKey, makeLambdaFunction(CryptreeNode$10methodref$fromCbor$Type.prototype.apply_0, CryptreeNode$10methodref$fromCbor$Type, [])), 159).parentLink;
  nextChunk = buildSubsequentChunk($randomBytes(crypto_5.random, 32), ($clinit_Optional() , new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(crypto_5.random, 32)))))), nextSubfoldersKey);
  addToNextChunk = castTo($collect_0($limit(addToNext_7.stream(), MAX_CHILD_LINKS_PER_BLOB), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  remaining = castTo($collect_0($skip_0(addToNext_7.stream(), MAX_CHILD_LINKS_PER_BLOB), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [IDENTITY_FINISH]))), 17);
  return $thenCompose($getNextChunkLocation(this$static, us_6.rBaseKey, (null , EMPTY), null, (null , EMPTY), null), makeLambdaFunction(CryptreeNode$lambda$92$Type.prototype.apply_0, CryptreeNode$lambda$92$Type, [committer_1, remaining, signer_2, mirrorBat_3, network_4, crypto_5, newBase_7, us_6, nextSubfoldersKey, parentCap, ourParentKey, nextChunk, addToNextChunk]));
}

function $lambda$97(this$static, current_1, committer_2, us_3, signer_4, network_5, newFiles_6, crypto_7, tid_7){
  return $thenCompose($withChildren(this$static, us_3.rBaseKey, new CryptreeNode$ChildrenLinks(newFiles_6), crypto_7.random, crypto_7.hasher), makeLambdaFunction(CryptreeNode$lambda$98$Type.prototype.apply_0, CryptreeNode$lambda$98$Type, [current_1, committer_2, us_3, signer_4, network_5, tid_7]));
}

function $mirrorBatId(this$static){
  if (this$static.bats.size() < 2)
    return $clinit_Optional() , $clinit_Optional() , EMPTY;
  return $clinit_Optional() , new Optional(checkCriticalNotNull(castTo(this$static.bats.getAtIndex(this$static.bats.size() - 1), 167)));
}

function $mkdir_2(this$static, base, committer, name_0, network, us, entryWriter, optionalBaseKey, optionalBaseWriteKey, desiredMapKey, desiredBat, isSystemFolder, mirrorBat, crypto_0){
  var childCap, dirBat, dirMapKey, dirReadKey, dirWriteKey, nextChunk, ourCap, ourParentKey, timestamp;
  dirReadKey = castTo($orElseGet(optionalBaseKey, new CryptreeNode$15methodref$random$Type), 88);
  dirWriteKey = castTo($orElseGet(optionalBaseWriteKey, new CryptreeNode$16methodref$random$Type), 88);
  dirMapKey = castTo($orElseGet(desiredMapKey, new CryptreeNode$lambda$101$Type(crypto_0)), 11);
  dirBat = ($clinit_Optional() , new Optional(checkCriticalNotNull(castTo($orElseGet(desiredBat, new CryptreeNode$lambda$102$Type(crypto_0)), 61))));
  ourParentKey = $getParentKey_0(this$static, us.rBaseKey);
  ourCap = new RelativeCapability((null , EMPTY), copyOf(us.mapKey, us.mapKey.length), us.bat, ourParentKey, (null , EMPTY));
  nextChunk = new RelativeCapability((null , EMPTY), $randomBytes(crypto_0.random, 32), new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(crypto_0.random, 32))))), dirReadKey, (null , EMPTY));
  childCap = $withMapKey_1($withBaseWriteKey(new WritableAbsoluteCapability(us.owner, us.writer, copyOf(us.mapKey, us.mapKey.length), us.bat, dirReadKey, castTo($get_6(us.wBaseKey), 88)), dirWriteKey), dirMapKey, dirBat);
  timestamp = ($clinit_LocalDateTime() , now_4());
  return $thenCompose(createEmptyDir(($clinit_MaybeMultihash() , $clinit_MaybeMultihash() , EMPTY_0), dirReadKey, dirWriteKey, (null , EMPTY), new FileProperties_0(name_0, true, false, '', 0, timestamp, timestamp, isSystemFolder, (null , EMPTY), (null , EMPTY)), new Optional(checkCriticalNotNull(ourCap)), ($clinit_SymmetricKey() , random_10(castTo($get(PROVIDERS_1, ($clinit_SymmetricKey$Type() , TweetNaCl)), 91), castTo($get(RNG_PROVIDERS_0, TweetNaCl), 86))), nextChunk, dirBat, mirrorBat, crypto_0.random, crypto_0.hasher), makeLambdaFunction(CryptreeNode$lambda$103$Type.prototype.apply_0, CryptreeNode$lambda$103$Type, [this$static, base, committer, childCap, entryWriter, network, dirMapKey, dirBat, dirReadKey, name_0, us, mirrorBat, crypto_0, dirWriteKey]));
}

function $removeChildren(this$static, current, committer, childrenToRemove, ourPointer, entryWriter, network, random, hasher){
  var locsToRemove;
  locsToRemove = castTo($collect_0($map_0(childrenToRemove.stream(), makeLambdaFunction(CryptreeNode$lambda$120$Type.prototype.apply_0, CryptreeNode$lambda$120$Type, [])), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47);
  return $thenCompose($thenCompose($thenApply($getDirectChildren_0(this$static, ourPointer, current, network), makeLambdaFunction(CryptreeNode$lambda$14$Type.prototype.apply_0, CryptreeNode$lambda$14$Type, [ourPointer])), makeLambdaFunction(CryptreeNode$lambda$21$Type.prototype.apply_0, CryptreeNode$lambda$21$Type, [network, current])), makeLambdaFunction(CryptreeNode$lambda$121$Type.prototype.apply_0, CryptreeNode$lambda$121$Type, [this$static, ourPointer, current, committer, entryWriter, network, random, hasher, locsToRemove]));
}

function $retriever(this$static, baseKey, streamSecret, currentMapKey, currentBat, hasher){
  return $thenApply($getNextChunkLocation(this$static, baseKey, streamSecret, currentMapKey, currentBat, hasher), makeLambdaFunction(CryptreeNode$lambda$5$Type.prototype.apply_0, CryptreeNode$lambda$5$Type, [this$static, baseKey]));
}

function $rotateAllKeys_0(this$static, isFirstChunk, us, newUs, parent_0, newParent, firstChunkOrParentCap, fileStreamSecret, mirrorBat, rotateSigner, network, crypto_0, version, committer){
  var props;
  props = $getProperties(this$static, $getParentKey_0(this$static, us.cap.rBaseKey));
  return $thenCompose($getNextChunkLocation(this$static, us.cap.rBaseKey, props.streamSecret, $getMapKey(us.cap), us.cap.bat, crypto_0.hasher), makeLambdaFunction(CryptreeNode$lambda$55$Type.prototype.apply_0, CryptreeNode$lambda$55$Type, [this$static, newUs, crypto_0, newParent, us, parent_0, mirrorBat, rotateSigner, network, committer, isFirstChunk, props, fileStreamSecret, firstChunkOrParentCap, version]));
}

function $toCbor_100(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'v', new CborObject$CborLong(1));
  this$static.bats.isEmpty() || $put_6(state, 'bats', new CborObject$CborList(this$static.bats));
  $put_6(state, 'b', this$static.fromBaseKey);
  $put_6(state, 'p', this$static.fromParentKey);
  $put_6(state, 'd', this$static.childrenOrData);
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function $updateChildLink(this$static, base, committer, ourPointer, signer, originalCap, modifiedCap, network, random, hasher){
  return $updateChildLinks_0(this$static, base, committer, ourPointer, signer, new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_util_Pair_2_classLit, 1), $intern_0, 20, 0, [new Pair(originalCap, modifiedCap)])), network, random, hasher);
}

function $updateChildLinks_0(this$static, base, committer, ourPointer, signer, childCasPairs, network, random, hasher){
  return $thenCompose($thenCompose($thenApply($getDirectChildren_0(this$static, ourPointer, base, network), makeLambdaFunction(CryptreeNode$lambda$14$Type.prototype.apply_0, CryptreeNode$lambda$14$Type, [ourPointer])), makeLambdaFunction(CryptreeNode$lambda$21$Type.prototype.apply_0, CryptreeNode$lambda$21$Type, [network, base])), makeLambdaFunction(CryptreeNode$lambda$106$Type.prototype.apply_0, CryptreeNode$lambda$106$Type, [this$static, ourPointer, base, committer, signer, network, random, hasher, childCasPairs]));
}

function $updateProperties_0(this$static, base, committer, us, entryWriter, newProps, network){
  var newParentBlock, parentBlock, parentKey, updated;
  parentKey = $getParentKey_0(this$static, us.rBaseKey);
  parentBlock = castTo($decrypt_3(this$static.fromParentKey, parentKey, makeLambdaFunction(CryptreeNode$10methodref$fromCbor$Type.prototype.apply_0, CryptreeNode$10methodref$fromCbor$Type, [])), 159);
  newParentBlock = new CryptreeNode$FromParent(parentBlock.parentLink, newProps);
  updated = new CryptreeNode(this$static.lastCommittedHash, this$static.isDirectory_0, this$static.bats, this$static.fromBaseKey, this$static.childrenOrData, build_6(parentKey, newParentBlock, 16));
  return call_2(us.owner, makeLambdaFunction(CryptreeNode$lambda$32$Type.prototype.apply_0, CryptreeNode$lambda$32$Type, [this$static, network, base, committer, updated, us, entryWriter]), network.dhtClient);
}

function $withChildren(this$static, baseKey, children, random, hasher){
  return $thenApply(buildChildren(children, baseKey, $mirrorBatId(this$static), random, hasher), makeLambdaFunction(CryptreeNode$lambda$42$Type.prototype.apply_0, CryptreeNode$lambda$42$Type, [this$static]));
}

function $withWriterLink(this$static, baseKey, newWriterLink){
  var baseBlock, encryptedBaseBlock, newBaseBlock;
  baseBlock = castTo($decrypt_3(this$static.fromBaseKey, baseKey, makeLambdaFunction(CryptreeNode$9methodref$fromCbor$Type.prototype.apply_0, CryptreeNode$9methodref$fromCbor$Type, [])), 158);
  newBaseBlock = new CryptreeNode$FromBase(baseBlock.parentOrData, newWriterLink, baseBlock.nextChunk);
  encryptedBaseBlock = build_6(baseKey, newBaseBlock, 64);
  return new CryptreeNode(this$static.lastCommittedHash, this$static.isDirectory_0, this$static.bats, encryptedBaseBlock, this$static.childrenOrData, this$static.fromParentKey);
}

function CryptreeNode(lastCommittedHash, isDirectory, bats, fromBaseKey, childrenOrData, fromParentKey){
  this.lastCommittedHash = lastCommittedHash;
  this.isDirectory_0 = isDirectory;
  this.bats = bats;
  this.fromBaseKey = fromBaseKey;
  this.childrenOrData = childrenOrData;
  this.fromParentKey = fromParentKey;
}

function buildChildren(children, rBaseKey, mirrorBat, random, hasher){
  return build_3(rBaseKey, children, mirrorBat, random, hasher, false);
}

function createAndCommitLink(parent_0, target, targetProps, linkCap, parentKey, mirrorBat, crypto_0, network, startVersion, committer){
  var toTarget, nextChunk, parentParentKey, parentCap, toParent, empty;
  return $thenCompose((toTarget = $relativise(linkCap, target) , nextChunk = buildSubsequentChunk($randomBytes(crypto_0.random, 32), ($clinit_Optional() , new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(crypto_0.random, 32)))))), linkCap.rBaseKey) , parentParentKey = $getParentKey(parent_0.pointer) , parentCap = $writableFilePointer(parent_0) , toParent = new RelativeCapability((null , EMPTY), copyOf(parentCap.mapKey, parentCap.mapKey.length), parentCap.bat, parentParentKey, (null , EMPTY)) , empty = (null , EMPTY) , createDir(($clinit_MaybeMultihash() , $clinit_MaybeMultihash() , EMPTY_0), linkCap.rBaseKey, castTo($get_6(linkCap.wBaseKey), 88), empty, new FileProperties_0(targetProps.name, targetProps.isDirectory, true, targetProps.mimeType, targetProps.size_0, targetProps.modified, targetProps.created, targetProps.isHidden, targetProps.thumbnail, targetProps.streamSecret), new Optional(checkCriticalNotNull(toParent)), parentKey, nextChunk, new CryptreeNode$ChildrenLinks(($clinit_Collections() , new Collections$SingletonList(new NamedRelativeCapability_0(new PathElement(targetProps.name), toTarget)))), linkCap.bat, mirrorBat, crypto_0.random, crypto_0.hasher)), makeLambdaFunction(CryptreeNode$lambda$129$Type.prototype.apply_0, CryptreeNode$lambda$129$Type, [startVersion, committer, linkCap, parent_0, network]));
}

function createDir(lastCommittedHash, rBaseKey, wBaseKey, signingPair, props, parentCap, parentKey, nextChunk, children, inlineBat, mirrorBat, random, hasher){
  var bats, encryptedBaseBlock, encryptedParentBlock, fromBase, fromParent, writerLink;
  if ($equals_14(rBaseKey, parentKey))
    throw toJs(new IllegalStateException_0("A directory's base key and parent key must be different!"));
  writerLink = $map(signingPair, makeLambdaFunction(CryptreeNode$lambda$131$Type.prototype.apply_0, CryptreeNode$lambda$131$Type, [wBaseKey]));
  fromBase = new CryptreeNode$FromBase(parentKey, writerLink, nextChunk);
  fromParent = new CryptreeNode$FromParent(parentCap, props);
  encryptedBaseBlock = build_6(rBaseKey, fromBase, 64);
  encryptedParentBlock = build_6(parentKey, fromParent, 16);
  bats = castTo(concat((inlineBat.ref != null?new StreamImpl(null, new Spliterators$IteratorSpliterator(singleton(inlineBat.ref), 1)):new StreamImpl$Empty(null)).map_1(makeLambdaFunction(CryptreeNode$18methodref$inline$Type.prototype.apply_0, CryptreeNode$18methodref$inline$Type, [])), mirrorBat.ref != null?new StreamImpl(null, new Spliterators$IteratorSpliterator(singleton(mirrorBat.ref), 1)):new StreamImpl$Empty(null)).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  return $thenApply(build_3(rBaseKey, children, mirrorBat, random, hasher, false), makeLambdaFunction(CryptreeNode$lambda$133$Type.prototype.apply_0, CryptreeNode$lambda$133$Type, [lastCommittedHash, bats, encryptedBaseBlock, encryptedParentBlock]));
}

function createEmptyDir(lastCommittedHash, rBaseKey, wBaseKey, signingPair, props, parentCap, parentKey, nextChunk, inlineBat, mirrorBat, random, hasher){
  return createDir(lastCommittedHash, rBaseKey, wBaseKey, signingPair, props, parentCap, parentKey, nextChunk, new CryptreeNode$ChildrenLinks_0(new Either(null, ($clinit_Collections() , $clinit_Collections() , EMPTY_LIST))), inlineBat, mirrorBat, random, hasher);
}

function createFile(existingHash, signerLink, parentKey, dataKey, props, data_0, toParentDir, nextChunk, inlineBat, mirrorBat){
  var bats, encryptedBaseBlock, encryptedParentBlock, fromBase, fromParent;
  if ($equals_14(parentKey, dataKey))
    throw toJs(new IllegalStateException_0("A file's base key and data key must be different!"));
  fromBase = new CryptreeNode$FromBase(dataKey, signerLink, nextChunk);
  fromParent = new CryptreeNode$FromParent(toParentDir, props);
  bats = inlineBat.ref == null?($clinit_Collections() , $clinit_Collections() , EMPTY_LIST):castTo(concat((inlineBat.ref != null?new StreamImpl(null, new Spliterators$IteratorSpliterator(singleton(inlineBat.ref), 1)):new StreamImpl$Empty(null)).map_1(makeLambdaFunction(CryptreeNode$17methodref$inline$Type.prototype.apply_0, CryptreeNode$17methodref$inline$Type, [])), mirrorBat.ref != null?new StreamImpl(null, new Spliterators$IteratorSpliterator(singleton(mirrorBat.ref), 1)):new StreamImpl$Empty(null)).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  encryptedBaseBlock = build_6(parentKey, fromBase, 64);
  encryptedParentBlock = build_6(parentKey, fromParent, 16);
  return new CryptreeNode(existingHash, false, bats, encryptedBaseBlock, data_0, encryptedParentBlock);
}

function createFile_0(existingHash, signerLink, parentKey, dataKey, props, data_0, toParentDir, nextChunk, inlineBat, mirrorBat){
  return createFile(existingHash, signerLink, parentKey, dataKey, props, data_0, ($clinit_Optional() , new Optional(checkCriticalNotNull(toParentDir))), nextChunk, inlineBat, mirrorBat);
}

function createFile_1(existingHash, ourWriter, parentKey, dataKey, props, chunkData, parentLocation, parentBat, parentparentKey, nextChunk, inlineBat, mirrorBat, random, hasher, allowArrayCache){
  return $thenApply(build_3(dataKey, new CborObject$CborByteArray(chunkData), mirrorBat, random, hasher, allowArrayCache), makeLambdaFunction(CryptreeNode$lambda$127$Type.prototype.apply_0, CryptreeNode$lambda$127$Type, [parentLocation, ourWriter, parentBat, parentparentKey, existingHash, parentKey, dataKey, props, nextChunk, inlineBat, mirrorBat]));
}

function deAuthoriseSigner(owner, parentSigner, signer, network, version, committer){
  var cwd, parentWriter;
  parentWriter = parentSigner.publicKeyHash;
  cwd = $get_31(version, parentSigner);
  return $thenApply(call_2(owner, makeLambdaFunction(CryptreeNode$lambda$52$Type.prototype.apply_0, CryptreeNode$lambda$52$Type, [committer, owner, parentSigner, cwd, signer, network]), network.dhtClient), makeLambdaFunction(CryptreeNode$lambda$54$Type.prototype.apply_0, CryptreeNode$lambda$54$Type, [version, parentWriter]));
}

function fromCbor_106(cbor, base, hash){
  var bats, childrenOrData, fromBaseKey, fromParentKey, isDirectory, m, version;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Incorrect cbor for CryptreeNode: ' + cbor));
  m = castTo(cbor, 18);
  version = toInt_0(castTo(castTo($get_0(m.values_0, new CborObject$CborString('v')), 7), 29).value_0);
  if (version != 1)
    throw toJs(new IllegalStateException_0('Unknown cryptree version: ' + version));
  bats = $getList(m, 'bats', makeLambdaFunction(CryptreeNode$19methodref$fromCbor$Type.prototype.apply_0, CryptreeNode$19methodref$fromCbor$Type, []));
  fromBaseKey = castTo($get_13(m, 'b', makeLambdaFunction(CryptreeNode$20methodref$fromCbor$Type.prototype.apply_0, CryptreeNode$20methodref$fromCbor$Type, [])), 186);
  fromParentKey = castTo($get_13(m, 'p', makeLambdaFunction(CryptreeNode$21methodref$fromCbor$Type.prototype.apply_0, CryptreeNode$21methodref$fromCbor$Type, [])), 186);
  childrenOrData = castTo($get_13(m, 'd', makeLambdaFunction(CryptreeNode$22methodref$fromCbor$Type.prototype.apply_0, CryptreeNode$22methodref$fromCbor$Type, [])), 229);
  try {
    isDirectory = castTo($decrypt_3(fromParentKey, base, makeLambdaFunction(CryptreeNode$23methodref$fromCbor$Type.prototype.apply_0, CryptreeNode$23methodref$fromCbor$Type, [])), 159).properties.isDirectory;
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 33)) {
      isDirectory = true;
    }
     else 
      throw toJs($e0);
  }
  return new CryptreeNode(($clinit_MaybeMultihash() , new MaybeMultihash(hash)), isDirectory, bats, fromBaseKey, childrenOrData, fromParentKey);
}

function initAndAuthoriseSigner(owner, parentSigner, newSignerPair, network, version, committer){
  var signature;
  signature = $signMessage(parentSigner.secret, $toByteArray_2($toCbor_13(newSignerPair.publicSigningKey)));
  return call_2(owner, makeLambdaFunction(CryptreeNode$lambda$47$Type.prototype.apply_0, CryptreeNode$lambda$47$Type, [committer, owner, version, network, newSignerPair, parentSigner, signature]), network.dhtClient);
}

function lambda$10_11(r_0, opt_1){
  return $map(opt_1, makeLambdaFunction(CryptreeNode$lambda$11$Type.prototype.apply_0, CryptreeNode$lambda$11$Type, [r_0]));
}

function lambda$102_1(crypto_0){
  return $clinit_Bat() , new Bat($randomBytes(crypto_0.random, 32));
}

function lambda$11_9(r_0, ret_1){
  return new NamedRelativeCapability_0(new PathElement($getParentBlock(ret_1.fileAccess, getParentKey(ret_1.fileAccess, ret_1.capability.rBaseKey)).properties.name), r_0);
}

function lambda$111(ourPointer_0, c_1){
  return new NamedRelativeCapability($getParentBlock(c_1.fileAccess, getParentKey(c_1.fileAccess, c_1.capability.rBaseKey)).properties.name, $relativise(ourPointer_0, c_1.capability));
}

function lambda$113_0(oldToNew_0, ourPointer_1, c_2){
  var newTarget;
  newTarget = castTo(oldToNew_0.get($getLocation(c_2.capability)), 151);
  return new NamedRelativeCapability_0(newTarget.name_0, $relativise(ourPointer_1, newTarget.cap));
}

function lambda$116(base_0, committer_1, ourPointer_2, signer_3, network_4, tid_5, d_6){
  var frags;
  return $thenCompose((frags = castTo($collect_0($map_0($filter(d_6.childData.stream(), new CryptreeNode$DirAndChildren$lambda$1$Type), makeLambdaFunction(CryptreeNode$DirAndChildren$lambda$2$Type.prototype.apply_0, CryptreeNode$DirAndChildren$lambda$2$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17) , $uploadFragments(network_4, frags, ourPointer_2.owner, signer_3, makeLambdaFunction(CryptreeNode$DirAndChildren$lambda$3$Type.prototype.accept_5, CryptreeNode$DirAndChildren$lambda$3$Type, []), tid_5)), makeLambdaFunction(CryptreeNode$DirAndChildren$lambda$0$Type.prototype.apply_0, CryptreeNode$DirAndChildren$lambda$0$Type, [d_6, base_0, committer_1, ourPointer_2, signer_3, network_4, tid_5]));
}

function lambda$119_1(ourPointer_0, nextOpt_1, updated_2, committer_3, signer_4, remaining_5, network_6, random_7, hasher_8, nextChunkLocationAndBat_9){
  var nextChunkCap, writableNextPointer;
  nextChunkCap = $withMapKey_1(ourPointer_0, castTo(nextChunkLocationAndBat_9.left, 11), castTo(nextChunkLocationAndBat_9.right, 12));
  writableNextPointer = $toWritable(nextChunkCap, castTo($get_6(ourPointer_0.wBaseKey), 88));
  if (nextOpt_1.ref == null)
    throw toJs(new IllegalStateException_0('Child link not present!'));
  return $updateChildLinks_0((checkCriticalElement(nextOpt_1.ref != null) , castTo(nextOpt_1.ref, 83)).fileAccess, updated_2, committer_3, writableNextPointer, signer_4, remaining_5, network_6, random_7, hasher_8);
}

function lambda$123(ourPointer_0, c_1){
  return new NamedRelativeCapability_0(new PathElement($getParentBlock(c_1.fileAccess, getParentKey(c_1.fileAccess, c_1.capability.rBaseKey)).properties.name), $relativise(ourPointer_0, c_1.capability));
}

function lambda$125(current_0, committer_1, ourPointer_2, entryWriter_3, network_4, tid_5, d_6){
  var frags, signer;
  return signer = $getSigner(d_6.dir_0, ourPointer_2.rBaseKey, castTo($get_6(ourPointer_2.wBaseKey), 88), entryWriter_3) , $thenCompose((frags = castTo($collect_0($map_0($filter(d_6.childData.stream(), new CryptreeNode$DirAndChildren$lambda$1$Type), makeLambdaFunction(CryptreeNode$DirAndChildren$lambda$2$Type.prototype.apply_0, CryptreeNode$DirAndChildren$lambda$2$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17) , $uploadFragments(network_4, frags, ourPointer_2.owner, signer, makeLambdaFunction(CryptreeNode$DirAndChildren$lambda$3$Type.prototype.accept_5, CryptreeNode$DirAndChildren$lambda$3$Type, []), tid_5)), makeLambdaFunction(CryptreeNode$DirAndChildren$lambda$0$Type.prototype.apply_0, CryptreeNode$DirAndChildren$lambda$0$Type, [d_6, current_0, committer_1, ourPointer_2, signer, network_4, tid_5]));
}

function lambda$127(parentLocation_0, ourWriter_1, parentBat_2, parentparentKey_3, existingHash_4, parentKey_5, dataKey_6, props_7, nextChunk_8, inlineBat_9, mirrorBat_10, linksAndData_12){
  var cryptree, toParent;
  toParent = new RelativeCapability($equals_13(parentLocation_0.writer, ourWriter_1)?($clinit_Optional() , $clinit_Optional() , EMPTY):($clinit_Optional() , new Optional(checkCriticalNotNull(parentLocation_0.writer))), copyOf(parentLocation_0.mapKey, parentLocation_0.mapKey.length), parentBat_2, parentparentKey_3, ($clinit_Optional() , $clinit_Optional() , EMPTY));
  cryptree = createFile_0(existingHash_4, (null , EMPTY), parentKey_5, dataKey_6, props_7, castTo(linksAndData_12.left, 229), toParent, nextChunk_8, inlineBat_9, mirrorBat_10);
  return new Pair(cryptree, castTo(linksAndData_12.right, 17));
}

function lambda$129(startVersion_0, committer_1, linkCap_2, parent_3, network_4, link_5){
  return call_2($owner(parent_3), makeLambdaFunction(CryptreeNode$lambda$130$Type.prototype.apply_0, CryptreeNode$lambda$130$Type, [link_5, startVersion_0, committer_1, linkCap_2, parent_3, network_4]), network_4.dhtClient);
}

function lambda$130(link_0, startVersion_1, committer_2, linkCap_3, parent_4, network_5, tid_6){
  return $commit_6(link_0, startVersion_1, committer_2, linkCap_3, $signingPair(parent_4), network_5, tid_6);
}

function lambda$133(lastCommittedHash_0, bats_1, encryptedBaseBlock_2, encryptedParentBlock_3, linksAndData_4){
  var metadata;
  metadata = new CryptreeNode(lastCommittedHash_0, true, bats_1, encryptedBaseBlock_2, castTo(linksAndData_4.left, 229), encryptedParentBlock_3);
  return new CryptreeNode$DirAndChildren(metadata, castTo(linksAndData_4.right, 17));
}

function lambda$14_10(us_0, c_1){
  return castTo($collect_0($map_0(c_1.stream(), makeLambdaFunction(CryptreeNode$lambda$15$Type.prototype.apply_0, CryptreeNode$lambda$15$Type, [us_0])), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47);
}

function lambda$15_6(us_0, cap_1){
  return new NamedAbsoluteCapability_0(cap_1.name_0, $toAbsolute(cap_1.cap, us_0));
}

function lambda$17_5(version_0, hasher_1, network_2, moreChildrenFuture_3, children_4){
  return $thenCompose(moreChildrenFuture_3, makeLambdaFunction(CryptreeNode$lambda$18$Type.prototype.apply_0, CryptreeNode$lambda$18$Type, [version_0, hasher_1, network_2, children_4]));
}

function lambda$18_7(version_0, hasher_1, network_2, children_3, moreChildrenSource_4){
  var moreChildren;
  moreChildren = castTo($orElse($map(moreChildrenSource_4, makeLambdaFunction(CryptreeNode$lambda$19$Type.prototype.apply_0, CryptreeNode$lambda$19$Type, [version_0, hasher_1, network_2])), new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_SET))), 6);
  return $thenApply(moreChildren, makeLambdaFunction(CryptreeNode$lambda$20$Type.prototype.apply_0, CryptreeNode$lambda$20$Type, [children_3]));
}

function lambda$19_10(version_0, hasher_1, network_2, d_3){
  return $getAllChildrenCapabilities(d_3.fileAccess, version_0, d_3.capability, hasher_1, network_2);
}

function lambda$2_15(wBaseKey_0, link_1){
  return castTo($decrypt_0(link_1.cipherText, wBaseKey_0, makeLambdaFunction(SymmetricLinkToSigner$0methodref$fromCbor$Type.prototype.apply_0, SymmetricLinkToSigner$0methodref$fromCbor$Type, [])), 105);
}

function lambda$20_7(children_0, moreRetrievedChildren_1){
  var results;
  results = castTo(concat(children_0.stream(), moreRetrievedChildren_1.stream()).collect_0(of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47);
  return results;
}

function lambda$21_7(network_0, version_1, c_2){
  return $thenApply($retrieveAllMetadata(network_0, castTo($collect_0($map_0(c_2.stream(), makeLambdaFunction(CryptreeNode$lambda$22$Type.prototype.apply_0, CryptreeNode$lambda$22$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17), version_1), makeLambdaFunction(CryptreeNode$13methodref$ctor$Type.prototype.apply_0, CryptreeNode$13methodref$ctor$Type, []));
}

function lambda$24_4(name_0, network_1, version_2, c_3){
  var matching;
  matching = $findFirst($filter(c_3.stream(), new CryptreeNode$lambda$25$Type(name_0)));
  if (matching.ref == null)
    return new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY));
  return $retrieveMetadata(network_1, (checkCriticalElement(matching.ref != null) , castTo(matching.ref, 151)).cap, version_2);
}

function lambda$25_7(name_0, n_1){
  return $equals_0(n_1.name_0.name_0, name_0);
}

function lambda$31_5(name_0, version_1, hasher_2, network_3, nextOpt_4){
  if (nextOpt_4.ref != null)
    return $getChild_4((checkCriticalElement(nextOpt_4.ref != null) , castTo(nextOpt_4.ref, 83)).fileAccess, name_0, (checkCriticalElement(nextOpt_4.ref != null) , castTo(nextOpt_4.ref, 83)).capability, version_1, hasher_2, network_3);
  return new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY));
}

function lambda$44_3(nextChunkCap_0, faOpt_1){
  return $map(faOpt_1, makeLambdaFunction(CryptreeNode$lambda$45$Type.prototype.apply_0, CryptreeNode$lambda$45$Type, [nextChunkCap_0]));
}

function lambda$46_5(currentChild_0, newMapKey_1, newBat_2, baseRead_3, baseWrite_4, p_5){
  return new Pair(castTo(p_5.left, 43), new CryptreeNode$CapAndSigner(new WritableAbsoluteCapability(currentChild_0.cap.owner, castTo(p_5.right, 105).publicKeyHash, newMapKey_1, newBat_2, baseRead_3, baseWrite_4), castTo(p_5.right, 105)));
}

function lambda$47_3(committer_0, owner_1, version_2, network_3, newSignerPair_4, parentSigner_5, signature_6, tid_7){
  return $thenCompose(network_3.dhtClient.putSigningKey_0(signature_6, owner_1, parentSigner_5.publicKeyHash, newSignerPair_4.publicSigningKey, tid_7), makeLambdaFunction(CryptreeNode$lambda$48$Type.prototype.apply_0, CryptreeNode$lambda$48$Type, [committer_0, owner_1, tid_7, version_2, network_3, newSignerPair_4, parentSigner_5]));
}

function lambda$48_2(committer_0, owner_1, tid_2, version_3, network_4, newSignerPair_5, parentSigner_6, newSignerHash_7){
  var cwd, newSigner, proof;
  newSigner = new SigningPrivateKeyAndPublicHash(newSignerHash_7, newSignerPair_5.secretSigningKey);
  cwd = $get_31(version_3, parentSigner_6);
  proof = build_4(newSigner, parentSigner_6.publicKeyHash);
  return $thenCompose($addOwnedKeyAndCommit(cwd.props, owner_1, parentSigner_6, proof, cwd.hash_0, cwd.sequence, network_4, committer_0, tid_2), makeLambdaFunction(CryptreeNode$lambda$49$Type.prototype.apply_0, CryptreeNode$lambda$49$Type, [committer_0, owner_1, newSigner, tid_2, version_3, network_4]));
}

function lambda$49_2(committer_0, owner_1, newSigner_2, tid_3, version_4, network_5, v_6){
  return $thenApply($thenCompose(createEmpty_1(owner_1, newSigner_2, network_5.dhtClient, network_5.hasher, tid_3), makeLambdaFunction(CryptreeNode$lambda$50$Type.prototype.apply_0, CryptreeNode$lambda$50$Type, [committer_0, owner_1, newSigner_2, tid_3])), makeLambdaFunction(CryptreeNode$lambda$51$Type.prototype.apply_0, CryptreeNode$lambda$51$Type, [version_4, v_6, newSigner_2]));
}

function lambda$50_3(committer_0, owner_1, newSigner_2, tid_3, wd_4){
  return committer_0.commit_1(owner_1, newSigner_2, wd_4, new CommittedWriterData(($clinit_MaybeMultihash() , $clinit_MaybeMultihash() , EMPTY_0), null, ($clinit_Optional() , $clinit_Optional() , EMPTY)), tid_3);
}

function lambda$51_3(version_0, v_1, newSigner_2, s_3){
  return new Pair($mergeAndOverwriteWith($mergeAndOverwriteWith(version_0, v_1), s_3), newSigner_2);
}

function lambda$52_4(committer_0, owner_1, parentSigner_2, cwd_3, signer_4, network_5, tid_6){
  return $thenCompose($removeOwnedKey(cwd_3.props, owner_1, parentSigner_2, signer_4, network_5.dhtClient, network_5.hasher), makeLambdaFunction(CryptreeNode$lambda$53$Type.prototype.apply_0, CryptreeNode$lambda$53$Type, [committer_0, owner_1, parentSigner_2, cwd_3, tid_6]));
}

function lambda$53_4(committer_0, owner_1, parentSigner_2, cwd_3, tid_4, wd_5){
  return committer_0.commit_1(owner_1, parentSigner_2, wd_5, cwd_3, tid_4);
}

function lambda$54_2(version_0, parentWriter_1, committed_2){
  return $withVersion(version_0, parentWriter_1, $get_32(committed_2, parentWriter_1));
}

function lambda$56_4(newUs_0, crypto_1, stream_2){
  return calculateNextMapKey(stream_2, $getMapKey(newUs_0.cap), newUs_0.cap.bat, crypto_1.hasher);
}

function lambda$57_2(crypto_0){
  return new CompletableFuture_0(new Pair($randomBytes(crypto_0.random, 32), ($clinit_Optional() , new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(crypto_0.random, 32))))))));
}

function lambda$59_2(newParent_0, newUs_1, cap_2){
  return $withWritingKey(cap_2, $equals_13(newParent_0.cap.writer, newUs_1.cap.writer)?($clinit_Optional() , $clinit_Optional() , EMPTY):($clinit_Optional() , new Optional(checkCriticalNotNull(newParent_0.cap.writer))));
}

function lambda$61_3(s_0, newNextChunkCap_1, us_2, nextChunkCap_3, newUs_4, parent_5, newParent_6, childCapToUs_7, streamSecret_8, mirrorBat_9, rotateSigner_10, network_11, crypto_12, committer_13, opt_14){
  if (opt_14.ref == null)
    return new CompletableFuture_0(new Pair(s_0, newNextChunkCap_1));
  return $rotateAllKeys_0((checkCriticalElement(opt_14.ref != null) , castTo(opt_14.ref, 83)).fileAccess, false, new CryptreeNode$CapAndSigner(nextChunkCap_3, us_2.signer), new CryptreeNode$CapAndSigner(newNextChunkCap_1, newUs_4.signer), parent_5, newParent_6, childCapToUs_7, streamSecret_8, mirrorBat_9, rotateSigner_10, network_11, crypto_12, s_0, committer_13);
}

function lambda$66_4(p_0, c_1, child_2, us_3, newUs_4, childCapToUs_5, mirrorBat_6, rotateSigner_7, network_8, crypto_9, committer_10, newChild_11){
  return $thenApply($rotateAllKeys_0(c_1.fileAccess, true, child_2, castTo(newChild_11.right, 166), us_3, newUs_4, childCapToUs_5, ($clinit_Optional() , $clinit_Optional() , EMPTY), mirrorBat_6, rotateSigner_7, network_8, crypto_9, castTo(newChild_11.left, 43), committer_10), makeLambdaFunction(CryptreeNode$lambda$67$Type.prototype.apply_0, CryptreeNode$lambda$67$Type, [p_0, c_1]));
}

function lambda$67_1(p_0, c_1, updatedChild_2){
  return new Pair(castTo(updatedChild_2.left, 43), castTo(concat(castTo(p_0.right, 47).stream(), new StreamImpl(null, new Spliterators$IteratorSpliterator(singleton(new NamedAbsoluteCapability($getParentBlock(c_1.fileAccess, getParentKey(c_1.fileAccess, c_1.capability.rBaseKey)).properties.name, castTo(updatedChild_2.right, 71))), 1))).collect_0(of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47));
}

function lambda$68_0(newUs_0, committer_1, network_2, us_3, isFirstChunk_4, newParent_5, nextChunk_6, props_7, newParentCap_8, newParentKey_9, mirrorBat_10, crypto_11, newChildCaps_12){
  var nextChunkRel, relativeChildLinks, signer;
  signer = !isFirstChunk_4 | $equals_13(newUs_0.cap.writer, newParent_5.cap.writer)?($clinit_Optional() , $clinit_Optional() , EMPTY):($clinit_Optional() , new Optional(checkCriticalNotNull(newUs_0.signer)));
  nextChunkRel = buildSubsequentChunk($getMapKey(castTo(nextChunk_6.right, 74)), castTo(nextChunk_6.right, 74).bat, newUs_0.cap.rBaseKey);
  relativeChildLinks = castTo($collect_0($map_0(castTo(newChildCaps_12.right, 47).stream(), makeLambdaFunction(CryptreeNode$lambda$69$Type.prototype.apply_0, CryptreeNode$lambda$69$Type, [newUs_0])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  return $thenCompose(createDir(($clinit_MaybeMultihash() , $clinit_MaybeMultihash() , EMPTY_0), newUs_0.cap.rBaseKey, castTo($get_6(newUs_0.cap.wBaseKey), 88), signer, props_7, newParentCap_8, newParentKey_9, nextChunkRel, new CryptreeNode$ChildrenLinks(relativeChildLinks), newUs_0.cap.bat, mirrorBat_10, crypto_11.random, crypto_11.hasher), makeLambdaFunction(CryptreeNode$lambda$70$Type.prototype.apply_0, CryptreeNode$lambda$70$Type, [newChildCaps_12, committer_1, newUs_0, network_2, us_3]));
}

function lambda$69(newUs_0, n_1){
  return new NamedRelativeCapability_0(n_1.name_0, $relativise(newUs_0.cap, n_1.cap));
}

function lambda$70_0(newChildCaps_0, committer_1, newUs_2, network_3, us_4, newUsDir_5){
  return call_2(us_4.cap.owner, makeLambdaFunction(CryptreeNode$lambda$71$Type.prototype.apply_0, CryptreeNode$lambda$71$Type, [newUsDir_5, newChildCaps_0, committer_1, newUs_2, network_3]), network_3.dhtClient);
}

function lambda$71_0(newUsDir_0, newChildCaps_1, committer_2, newUs_3, network_4, tid_5){
  return $commit_6(newUsDir_0, castTo(newChildCaps_1.left, 43), committer_2, newUs_3.cap, newUs_3.signer, network_4, tid_5);
}

function lambda$73_1(newFileChunk_0, nextChunk_1, committer_2, newUs_3, network_4, tid_5){
  return $commit_4(newFileChunk_0, castTo(nextChunk_1.left, 43), committer_2, newUs_3.cap, newUs_3.signer, network_4, tid_5);
}

function lambda$74_0(newUs_0, v_1){
  return new Pair(v_1, newUs_0.cap);
}

function lambda$77_2(props_0, ns_1){
  return new FileProperties_0(props_0.name, props_0.isDirectory, props_0.isLink, props_0.mimeType, props_0.size_0, props_0.modified, props_0.created, props_0.isHidden, props_0.thumbnail, ($clinit_Optional() , new Optional(checkCriticalNotNull(ns_1))));
}

function lambda$8_9(network_0, us_1, version_2, c_3){
  if (c_3.children.b_0 != null)
    return new CompletableFuture_0(castTo($b(c_3.children), 17));
  return $thenApply(combineAllInOrder(castTo($collect_0($map_0(castTo($a(c_3.children), 17).stream(), makeLambdaFunction(CryptreeNode$lambda$9$Type.prototype.apply_0, CryptreeNode$lambda$9$Type, [network_0, us_1, version_2])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 54)), makeLambdaFunction(CryptreeNode$lambda$12$Type.prototype.apply_0, CryptreeNode$lambda$12$Type, []));
}

function lambda$85_1(network_0, committer_1, cap_2, nextCap_3, writer_4, newNextCap_5, streamSecret_6, updatedFileProperties_7, newDataKey_8, parentLocation_9, parentBat_10, parentParentKey_11, crypto_12, updated_13){
  return $thenCompose(network_0.getMetadata($get_32(updated_13, nextCap_3.writer).props, nextCap_3), makeLambdaFunction(CryptreeNode$lambda$86$Type.prototype.apply_0, CryptreeNode$lambda$86$Type, [network_0, committer_1, cap_2, nextCap_3, writer_4, updated_13, newNextCap_5, streamSecret_6, updatedFileProperties_7, newDataKey_8, parentLocation_9, parentBat_10, parentParentKey_11, crypto_12]));
}

function lambda$86_0(network_0, committer_1, cap_2, nextCap_3, writer_4, updated_5, newNextCap_6, streamSecret_7, updatedFileProperties_8, newDataKey_9, parentLocation_10, parentBat_11, parentParentKey_12, crypto_13, mOpt_14){
  if (mOpt_14.ref == null)
    return new CompletableFuture_0(updated_5);
  return $thenCompose($cleanAndCommit((checkCriticalElement(mOpt_14.ref != null) , castTo(mOpt_14.ref, 115)), updated_5, committer_1, nextCap_3, newNextCap_6, streamSecret_7, updatedFileProperties_8.streamSecret, writer_4, newDataKey_9, parentLocation_10, parentBat_11, parentParentKey_12, network_0, crypto_13), makeLambdaFunction(CryptreeNode$lambda$87$Type.prototype.apply_0, CryptreeNode$lambda$87$Type, [network_0, committer_1, mOpt_14, cap_2, nextCap_3, writer_4]));
}

function lambda$87_1(network_0, committer_1, mOpt_2, cap_3, nextCap_4, writer_5, snapshot_6){
  return call_2(cap_3.owner, makeLambdaFunction(CryptreeNode$lambda$88$Type.prototype.apply_0, CryptreeNode$lambda$88$Type, [network_0, snapshot_6, committer_1, mOpt_2, cap_3, nextCap_4, writer_5]), network_0.dhtClient);
}

function lambda$88_1(network_0, snapshot_1, committer_2, mOpt_3, cap_4, nextCap_5, writer_6, tid_7){
  return $deleteChunk(network_0, snapshot_1, committer_2, (checkCriticalElement(mOpt_3.ref != null) , castTo(mOpt_3.ref, 115)), cap_4.owner, copyOf(nextCap_5.mapKey, nextCap_5.mapKey.length), writer_6, tid_7);
}

function lambda$9_9(network_0, us_1, version_2, r_3){
  return $thenApply($retrieveMetadata(network_0, $toAbsolute(r_3, us_1), version_2), makeLambdaFunction(CryptreeNode$lambda$10$Type.prototype.apply_0, CryptreeNode$lambda$10$Type, [r_3]));
}

function lambda$92_0(committer_0, remaining_1, signer_2, mirrorBat_3, network_4, crypto_5, newBase_6, us_7, nextSubfoldersKey_8, parentCap_9, ourParentKey_10, nextChunk_11, addToNextChunk_12, nextMapKeyAndBat_13){
  return $thenCompose(createDir(($clinit_MaybeMultihash() , $clinit_MaybeMultihash() , EMPTY_0), nextSubfoldersKey_8, null, ($clinit_Optional() , $clinit_Optional() , EMPTY), ($clinit_FileProperties() , EMPTY_2), parentCap_9, ourParentKey_10, nextChunk_11, new CryptreeNode$ChildrenLinks(addToNextChunk_12), castTo(nextMapKeyAndBat_13.right, 12), mirrorBat_3, crypto_5.random, crypto_5.hasher), makeLambdaFunction(CryptreeNode$lambda$93$Type.prototype.apply_0, CryptreeNode$lambda$93$Type, [committer_0, remaining_1, signer_2, mirrorBat_3, network_4, crypto_5, newBase_6, us_7, nextMapKeyAndBat_13, nextSubfoldersKey_8]));
}

function lambda$93_1(committer_0, remaining_1, signer_2, mirrorBat_3, network_4, crypto_5, newBase_6, us_7, nextMapKeyAndBat_8, nextSubfoldersKey_9, next_10){
  var nextPointer;
  nextPointer = new WritableAbsoluteCapability(us_7.owner, us_7.writer, castTo(nextMapKeyAndBat_8.left, 11), castTo(nextMapKeyAndBat_8.right, 12), nextSubfoldersKey_9, castTo($get_6(us_7.wBaseKey), 88));
  return call_2(us_7.owner, makeLambdaFunction(CryptreeNode$lambda$94$Type.prototype.apply_0, CryptreeNode$lambda$94$Type, [committer_0, remaining_1, nextPointer, signer_2, mirrorBat_3, network_4, crypto_5, next_10, newBase_6]), network_4.dhtClient);
}

function lambda$94_3(committer_0, remaining_1, nextPointer_2, signer_3, mirrorBat_4, network_5, crypto_6, next_7, newBase_8, tid_9){
  var frags;
  return $thenCompose($thenCompose((frags = castTo($collect_0($map_0($filter(next_7.childData.stream(), new CryptreeNode$DirAndChildren$lambda$1$Type), makeLambdaFunction(CryptreeNode$DirAndChildren$lambda$2$Type.prototype.apply_0, CryptreeNode$DirAndChildren$lambda$2$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17) , $uploadFragments(network_5, frags, nextPointer_2.owner, signer_3, makeLambdaFunction(CryptreeNode$DirAndChildren$lambda$3$Type.prototype.accept_5, CryptreeNode$DirAndChildren$lambda$3$Type, []), tid_9)), makeLambdaFunction(CryptreeNode$DirAndChildren$lambda$0$Type.prototype.apply_0, CryptreeNode$DirAndChildren$lambda$0$Type, [next_7, newBase_8, committer_0, nextPointer_2, signer_3, network_5, tid_9])), makeLambdaFunction(CryptreeNode$lambda$95$Type.prototype.apply_0, CryptreeNode$lambda$95$Type, [committer_0, remaining_1, nextPointer_2, signer_3, mirrorBat_4, network_5, crypto_6]));
}

function lambda$95_4(committer_0, remaining_1, nextPointer_2, signer_3, mirrorBat_4, network_5, crypto_6, updatedBase_7){
  return $thenCompose(network_5.getMetadata($get_32(updatedBase_7, nextPointer_2.writer).props, nextPointer_2), makeLambdaFunction(CryptreeNode$lambda$96$Type.prototype.apply_0, CryptreeNode$lambda$96$Type, [updatedBase_7, committer_0, remaining_1, nextPointer_2, signer_3, mirrorBat_4, network_5, crypto_6]));
}

function lambda$96_4(updatedBase_0, committer_1, remaining_2, nextPointer_3, signer_4, mirrorBat_5, network_6, crypto_7, nextOpt_8){
  return $addChildrenAndCommit((checkCriticalElement(nextOpt_8.ref != null) , castTo(nextOpt_8.ref, 115)), updatedBase_0, committer_1, remaining_2, nextPointer_3, signer_4, mirrorBat_5, network_6, crypto_7);
}

function lambda$98_1(current_0, committer_1, us_2, signer_3, network_4, tid_5, d_6){
  var frags;
  return $thenCompose((frags = castTo($collect_0($map_0($filter(d_6.childData.stream(), new CryptreeNode$DirAndChildren$lambda$1$Type), makeLambdaFunction(CryptreeNode$DirAndChildren$lambda$2$Type.prototype.apply_0, CryptreeNode$DirAndChildren$lambda$2$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17) , $uploadFragments(network_4, frags, us_2.owner, signer_3, makeLambdaFunction(CryptreeNode$DirAndChildren$lambda$3$Type.prototype.accept_5, CryptreeNode$DirAndChildren$lambda$3$Type, []), tid_5)), makeLambdaFunction(CryptreeNode$DirAndChildren$lambda$0$Type.prototype.apply_0, CryptreeNode$DirAndChildren$lambda$0$Type, [d_6, current_0, committer_1, us_2, signer_3, network_4, tid_5]));
}

defineClass(115, 1, {7:1, 115:1}, CryptreeNode);
_.serialize = function serialize_132(){
  return $toByteArray_2($toCbor_100(this));
}
;
_.toCbor = function toCbor_130(){
  return $toCbor_100(this);
}
;
_.isDirectory_0 = false;
var MAX_CHILD_LINKS_PER_BLOB = 500;
var Lpeergos_shared_user_fs_cryptree_CryptreeNode_2_classLit = createForClass('peergos.shared.user.fs.cryptree', 'CryptreeNode', 115);
function CryptreeNode$10methodref$fromCbor$Type(){
}

defineClass(333, $wnd.Function, $intern_22, CryptreeNode$10methodref$fromCbor$Type);
_.apply_0 = function apply_2289(arg0){
  return fromCbor_109(castTo(arg0, 48));
}
;
function CryptreeNode$11methodref$fromCbor$Type(){
}

defineClass(1570, $wnd.Function, $intern_22, CryptreeNode$11methodref$fromCbor$Type);
_.apply_0 = function apply_2290(arg0){
  return fromCbor_107(castTo(arg0, 48));
}
;
function CryptreeNode$12methodref$stream$Type(){
}

defineClass(1683, $wnd.Function, $intern_22, CryptreeNode$12methodref$stream$Type);
_.apply_0 = function apply_2291(arg0){
  return $stream(castTo(arg0, 12));
}
;
function CryptreeNode$13methodref$ctor$Type(){
}

defineClass(1615, $wnd.Function, $intern_22, CryptreeNode$13methodref$ctor$Type);
_.apply_0 = function apply_2292(arg0){
  return new HashSet_1(castTo(arg0, 54));
}
;
function CryptreeNode$14methodref$withNewStreamSecret$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1632, $wnd.Function, $intern_22, CryptreeNode$14methodref$withNewStreamSecret$Type);
_.apply_0 = function apply_2293(arg0){
  return $withNewStreamSecret(this.$$outer_0, castTo(arg0, 11));
}
;
function CryptreeNode$15methodref$random$Type(){
}

defineClass(634, 1, {}, CryptreeNode$15methodref$random$Type);
_.get_0 = function get_166(){
  return $clinit_SymmetricKey() , random_10(castTo($get(PROVIDERS_1, ($clinit_SymmetricKey$Type() , TweetNaCl)), 91), castTo($get(RNG_PROVIDERS_0, TweetNaCl), 86));
}
;
var Lpeergos_shared_user_fs_cryptree_CryptreeNode$15methodref$random$Type_2_classLit = createForClass('peergos.shared.user.fs.cryptree', 'CryptreeNode/15methodref$random$Type', 634);
function CryptreeNode$16methodref$random$Type(){
}

defineClass(635, 1, {}, CryptreeNode$16methodref$random$Type);
_.get_0 = function get_167(){
  return $clinit_SymmetricKey() , random_10(castTo($get(PROVIDERS_1, ($clinit_SymmetricKey$Type() , TweetNaCl)), 91), castTo($get(RNG_PROVIDERS_0, TweetNaCl), 86));
}
;
var Lpeergos_shared_user_fs_cryptree_CryptreeNode$16methodref$random$Type_2_classLit = createForClass('peergos.shared.user.fs.cryptree', 'CryptreeNode/16methodref$random$Type', 635);
function CryptreeNode$17methodref$inline$Type(){
}

defineClass(1594, $wnd.Function, $intern_22, CryptreeNode$17methodref$inline$Type);
_.apply_0 = function apply_2294(arg0){
  return inline(castTo(arg0, 61));
}
;
function CryptreeNode$18methodref$inline$Type(){
}

defineClass(1597, $wnd.Function, $intern_22, CryptreeNode$18methodref$inline$Type);
_.apply_0 = function apply_2295(arg0){
  return inline(castTo(arg0, 61));
}
;
function CryptreeNode$19methodref$fromCbor$Type(){
}

defineClass(1599, $wnd.Function, $intern_22, CryptreeNode$19methodref$fromCbor$Type);
_.apply_0 = function apply_2296(arg0){
  return fromCbor_76(castTo(arg0, 7));
}
;
function CryptreeNode$20methodref$fromCbor$Type(){
}

defineClass(1600, $wnd.Function, $intern_22, CryptreeNode$20methodref$fromCbor$Type);
_.apply_0 = function apply_2297(arg0){
  return new PaddedCipherText(fromCbor_9(castTo(arg0, 7)));
}
;
function CryptreeNode$21methodref$fromCbor$Type(){
}

defineClass(1601, $wnd.Function, $intern_22, CryptreeNode$21methodref$fromCbor$Type);
_.apply_0 = function apply_2298(arg0){
  return new PaddedCipherText(fromCbor_9(castTo(arg0, 7)));
}
;
function CryptreeNode$22methodref$fromCbor$Type(){
}

defineClass(1602, $wnd.Function, $intern_22, CryptreeNode$22methodref$fromCbor$Type);
_.apply_0 = function apply_2299(arg0){
  return fromCbor_10(castTo(arg0, 7));
}
;
function CryptreeNode$23methodref$fromCbor$Type(){
}

defineClass(1603, $wnd.Function, $intern_22, CryptreeNode$23methodref$fromCbor$Type);
_.apply_0 = function apply_2300(arg0){
  return fromCbor_109(castTo(arg0, 48));
}
;
function CryptreeNode$9methodref$fromCbor$Type(){
}

defineClass(289, $wnd.Function, $intern_22, CryptreeNode$9methodref$fromCbor$Type);
_.apply_0 = function apply_2301(arg0){
  return fromCbor_108(castTo(arg0, 48));
}
;
function CryptreeNode$CapAndSigner(cap, signer){
  if (!$equals_13(cap.writer, signer.publicKeyHash))
    throw toJs(new IllegalStateException_0("Signer doesn't match writer!"));
  this.cap = cap;
  this.signer = signer;
}

defineClass(166, 1, {166:1}, CryptreeNode$CapAndSigner);
var Lpeergos_shared_user_fs_cryptree_CryptreeNode$CapAndSigner_2_classLit = createForClass('peergos.shared.user.fs.cryptree', 'CryptreeNode/CapAndSigner', 166);
function CryptreeNode$ChildrenLinks(children){
  this.children = new Either(null, children);
}

function CryptreeNode$ChildrenLinks_0(children){
  this.children = children;
}

function fromCbor_107(cbor){
  var cborList, firstMap;
  if (!instanceOf(cbor, 21))
    throw toJs(new IllegalStateException_0('Incorrect cbor for ChildrenLinks: ' + cbor));
  cborList = castTo(cbor, 21).value_0;
  if (cborList.isEmpty())
    return new CryptreeNode$ChildrenLinks_0(new Either(null, ($clinit_Collections() , $clinit_Collections() , EMPTY_LIST)));
  firstMap = castTo(cborList.getAtIndex(0), 18);
  if ($containsKey_0(firstMap.values_0, new CborObject$CborString('n')))
    return new CryptreeNode$ChildrenLinks_0(new Either(null, castTo($collect_0($map_0(cborList.stream(), makeLambdaFunction(CryptreeNode$ChildrenLinks$7methodref$fromCbor$Type.prototype.apply_0, CryptreeNode$ChildrenLinks$7methodref$fromCbor$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17)));
  return new CryptreeNode$ChildrenLinks_0(new Either(castTo($collect_0($map_0(cborList.stream(), makeLambdaFunction(CryptreeNode$ChildrenLinks$8methodref$fromCbor$Type.prototype.apply_0, CryptreeNode$ChildrenLinks$8methodref$fromCbor$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17), null));
}

defineClass(184, 1, $intern_67, CryptreeNode$ChildrenLinks, CryptreeNode$ChildrenLinks_0);
_.serialize = function serialize_133(){
  var mapped;
  return $toByteArray_2((mapped = castTo($map_3(this.children, makeLambdaFunction(CryptreeNode$ChildrenLinks$lambda$0$Type.prototype.apply_0, CryptreeNode$ChildrenLinks$lambda$0$Type, []), makeLambdaFunction(CryptreeNode$ChildrenLinks$lambda$1$Type.prototype.apply_0, CryptreeNode$ChildrenLinks$lambda$1$Type, [])), 17) , new CborObject$CborList(mapped)));
}
;
_.toCbor = function toCbor_131(){
  var mapped;
  return mapped = castTo($map_3(this.children, makeLambdaFunction(CryptreeNode$ChildrenLinks$lambda$0$Type.prototype.apply_0, CryptreeNode$ChildrenLinks$lambda$0$Type, []), makeLambdaFunction(CryptreeNode$ChildrenLinks$lambda$1$Type.prototype.apply_0, CryptreeNode$ChildrenLinks$lambda$1$Type, [])), 17) , new CborObject$CborList(mapped);
}
;
var Lpeergos_shared_user_fs_cryptree_CryptreeNode$ChildrenLinks_2_classLit = createForClass('peergos.shared.user.fs.cryptree', 'CryptreeNode/ChildrenLinks', 184);
function CryptreeNode$ChildrenLinks$5methodref$toCbor$Type(){
}

defineClass(1681, $wnd.Function, $intern_22, CryptreeNode$ChildrenLinks$5methodref$toCbor$Type);
_.apply_0 = function apply_2302(arg0){
  return castTo(arg0, 7).toCbor();
}
;
function CryptreeNode$ChildrenLinks$6methodref$toCbor$Type(){
}

defineClass(1682, $wnd.Function, $intern_22, CryptreeNode$ChildrenLinks$6methodref$toCbor$Type);
_.apply_0 = function apply_2303(arg0){
  return castTo(arg0, 7).toCbor();
}
;
function CryptreeNode$ChildrenLinks$7methodref$fromCbor$Type(){
}

defineClass(1679, $wnd.Function, $intern_22, CryptreeNode$ChildrenLinks$7methodref$fromCbor$Type);
_.apply_0 = function apply_2304(arg0){
  return fromCbor_104(castTo(arg0, 7));
}
;
function CryptreeNode$ChildrenLinks$8methodref$fromCbor$Type(){
}

defineClass(1680, $wnd.Function, $intern_22, CryptreeNode$ChildrenLinks$8methodref$fromCbor$Type);
_.apply_0 = function apply_2305(arg0){
  return fromCbor_105(castTo(arg0, 7));
}
;
function CryptreeNode$ChildrenLinks$lambda$0$Type(){
}

defineClass(1260, $wnd.Function, $intern_22, CryptreeNode$ChildrenLinks$lambda$0$Type);
_.apply_0 = function apply_2306(arg0){
  return castTo($collect_0($map_0(castTo(arg0, 17).stream(), makeLambdaFunction(CryptreeNode$ChildrenLinks$5methodref$toCbor$Type.prototype.apply_0, CryptreeNode$ChildrenLinks$5methodref$toCbor$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
}
;
function CryptreeNode$ChildrenLinks$lambda$1$Type(){
}

defineClass(1261, $wnd.Function, $intern_22, CryptreeNode$ChildrenLinks$lambda$1$Type);
_.apply_0 = function apply_2307(arg0){
  return castTo($collect_0($map_0(castTo(arg0, 17).stream(), makeLambdaFunction(CryptreeNode$ChildrenLinks$6methodref$toCbor$Type.prototype.apply_0, CryptreeNode$ChildrenLinks$6methodref$toCbor$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
}
;
function $commit_5(this$static, current, committer, us, entryWriter, network, tid){
  var frags, signer;
  signer = $getSigner(this$static.dir_0, us.rBaseKey, castTo($get_6(us.wBaseKey), 88), entryWriter);
  return $thenCompose((frags = castTo($collect_0($map_0($filter(this$static.childData.stream(), new CryptreeNode$DirAndChildren$lambda$1$Type), makeLambdaFunction(CryptreeNode$DirAndChildren$lambda$2$Type.prototype.apply_0, CryptreeNode$DirAndChildren$lambda$2$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17) , $uploadFragments(network, frags, us.owner, signer, makeLambdaFunction(CryptreeNode$DirAndChildren$lambda$3$Type.prototype.accept_5, CryptreeNode$DirAndChildren$lambda$3$Type, []), tid)), makeLambdaFunction(CryptreeNode$DirAndChildren$lambda$0$Type.prototype.apply_0, CryptreeNode$DirAndChildren$lambda$0$Type, [this$static, current, committer, us, signer, network, tid]));
}

function $commit_6(this$static, current, committer, us, signer, network, tid){
  var frags;
  return $thenCompose((frags = castTo($collect_0($map_0($filter(this$static.childData.stream(), new CryptreeNode$DirAndChildren$lambda$1$Type), makeLambdaFunction(CryptreeNode$DirAndChildren$lambda$2$Type.prototype.apply_0, CryptreeNode$DirAndChildren$lambda$2$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17) , $uploadFragments(network, frags, us.owner, signer, makeLambdaFunction(CryptreeNode$DirAndChildren$lambda$3$Type.prototype.accept_5, CryptreeNode$DirAndChildren$lambda$3$Type, []), tid)), makeLambdaFunction(CryptreeNode$DirAndChildren$lambda$0$Type.prototype.apply_0, CryptreeNode$DirAndChildren$lambda$0$Type, [this$static, current, committer, us, signer, network, tid]));
}

function $lambda$0_36(this$static, current_1, committer_2, us_3, signer_4, network_5, tid_6){
  return $commit_4(this$static.dir_0, current_1, committer_2, us_3, signer_4, network_5, tid_6);
}

function CryptreeNode$DirAndChildren(dir_0, childData){
  this.dir_0 = dir_0;
  this.childData = childData;
}

defineClass(462, 1, {}, CryptreeNode$DirAndChildren);
var Lpeergos_shared_user_fs_cryptree_CryptreeNode$DirAndChildren_2_classLit = createForClass('peergos.shared.user.fs.cryptree', 'CryptreeNode/DirAndChildren', 462);
function CryptreeNode$DirAndChildren$lambda$0$Type($$outer_0, current_1, committer_2, us_3, signer_4, network_5, tid_6){
  this.$$outer_0 = $$outer_0;
  this.current_1 = current_1;
  this.committer_2 = committer_2;
  this.us_3 = us_3;
  this.signer_4 = signer_4;
  this.network_5 = network_5;
  this.tid_6 = tid_6;
}

defineClass(380, $wnd.Function, $intern_22, CryptreeNode$DirAndChildren$lambda$0$Type);
_.apply_0 = function apply_2308(arg0){
  return $lambda$0_36(this.$$outer_0, this.current_1, this.committer_2, this.us_3, this.signer_4, this.network_5, this.tid_6);
}
;
function CryptreeNode$DirAndChildren$lambda$1$Type(){
}

defineClass(268, 1, {}, CryptreeNode$DirAndChildren$lambda$1$Type);
_.test_0 = function test_52(arg0){
  return castTo(arg0, 131).hash_0.ref != null;
}
;
var Lpeergos_shared_user_fs_cryptree_CryptreeNode$DirAndChildren$lambda$1$Type_2_classLit = createForClass('peergos.shared.user.fs.cryptree', 'CryptreeNode/DirAndChildren/lambda$1$Type', 268);
function CryptreeNode$DirAndChildren$lambda$2$Type(){
}

defineClass(378, $wnd.Function, $intern_22, CryptreeNode$DirAndChildren$lambda$2$Type);
_.apply_0 = function apply_2309(arg0){
  return castTo(arg0, 131).fragment;
}
;
function CryptreeNode$DirAndChildren$lambda$3$Type(){
}

defineClass(379, $wnd.Function, {}, CryptreeNode$DirAndChildren$lambda$3$Type);
_.accept_5 = function accept_183(arg0){
}
;
function $toCbor_101(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'k', this$static.parentOrData);
  $ifPresent(this$static.signer, new CryptreeNode$FromBase$lambda$0$Type(state));
  $put_6(state, 'n', this$static.nextChunk);
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function CryptreeNode$FromBase(parentOrData, signer, nextChunk){
  this.parentOrData = parentOrData;
  this.signer = signer;
  this.nextChunk = nextChunk;
}

function fromCbor_108(cbor){
  var k, m, nextChunk, w;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Incorrect cbor for FromBase: ' + cbor));
  m = castTo(cbor, 18);
  k = castTo($get_13(m, 'k', makeLambdaFunction(CryptreeNode$FromBase$0methodref$fromCbor$Type.prototype.apply_0, CryptreeNode$FromBase$0methodref$fromCbor$Type, [])), 88);
  w = $getOptional(m, 'w', makeLambdaFunction(CryptreeNode$FromBase$1methodref$fromCbor$Type.prototype.apply_0, CryptreeNode$FromBase$1methodref$fromCbor$Type, []));
  nextChunk = castTo($get_13(m, 'n', makeLambdaFunction(CryptreeNode$FromBase$2methodref$fromCbor$Type.prototype.apply_0, CryptreeNode$FromBase$2methodref$fromCbor$Type, [])), 102);
  return new CryptreeNode$FromBase(k, w, nextChunk);
}

defineClass(158, 1, {7:1, 158:1}, CryptreeNode$FromBase);
_.serialize = function serialize_134(){
  return $toByteArray_2($toCbor_101(this));
}
;
_.toCbor = function toCbor_132(){
  return $toCbor_101(this);
}
;
var Lpeergos_shared_user_fs_cryptree_CryptreeNode$FromBase_2_classLit = createForClass('peergos.shared.user.fs.cryptree', 'CryptreeNode/FromBase', 158);
function CryptreeNode$FromBase$0methodref$fromCbor$Type(){
}

defineClass(1674, $wnd.Function, $intern_22, CryptreeNode$FromBase$0methodref$fromCbor$Type);
_.apply_0 = function apply_2310(arg0){
  return fromCbor_24(castTo(arg0, 7));
}
;
function CryptreeNode$FromBase$1methodref$fromCbor$Type(){
}

defineClass(1675, $wnd.Function, $intern_22, CryptreeNode$FromBase$1methodref$fromCbor$Type);
_.apply_0 = function apply_2311(arg0){
  return new SymmetricLinkToSigner(fromCbor_9(castTo(arg0, 7)));
}
;
function CryptreeNode$FromBase$2methodref$fromCbor$Type(){
}

defineClass(1676, $wnd.Function, $intern_22, CryptreeNode$FromBase$2methodref$fromCbor$Type);
_.apply_0 = function apply_2312(arg0){
  return fromCbor_105(castTo(arg0, 7));
}
;
function CryptreeNode$FromBase$lambda$0$Type(state_0){
  this.state_0 = state_0;
}

defineClass(625, 1, $intern_32, CryptreeNode$FromBase$lambda$0$Type);
_.accept = function accept_184(arg0){
  $put_6(this.state_0, 'w', castTo(arg0, 316));
}
;
_.andThen = function andThen_94(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_fs_cryptree_CryptreeNode$FromBase$lambda$0$Type_2_classLit = createForClass('peergos.shared.user.fs.cryptree', 'CryptreeNode/FromBase/lambda$0$Type', 625);
function $toCbor_102(this$static){
  var state, transformed;
  state = new TreeMap;
  $ifPresent(this$static.parentLink, new CryptreeNode$FromParent$lambda$0$Type(state));
  $put_6(state, 's', this$static.properties);
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function CryptreeNode$FromParent(parentLink, properties){
  this.parentLink = parentLink;
  this.properties = properties;
}

function fromCbor_109(cbor){
  var m, parentLink, properties;
  if (!instanceOf(cbor, 18))
    throw toJs(new IllegalStateException_0('Incorrect cbor for FromParent: ' + cbor));
  m = castTo(cbor, 18);
  parentLink = $getOptional(m, 'p', makeLambdaFunction(CryptreeNode$FromParent$3methodref$fromCbor$Type.prototype.apply_0, CryptreeNode$FromParent$3methodref$fromCbor$Type, []));
  properties = castTo($get_13(m, 's', makeLambdaFunction(CryptreeNode$FromParent$4methodref$fromCbor$Type.prototype.apply_0, CryptreeNode$FromParent$4methodref$fromCbor$Type, [])), 96);
  return new CryptreeNode$FromParent(parentLink, properties);
}

defineClass(159, 1, {7:1, 159:1}, CryptreeNode$FromParent);
_.serialize = function serialize_135(){
  return $toByteArray_2($toCbor_102(this));
}
;
_.toCbor = function toCbor_133(){
  return $toCbor_102(this);
}
;
var Lpeergos_shared_user_fs_cryptree_CryptreeNode$FromParent_2_classLit = createForClass('peergos.shared.user.fs.cryptree', 'CryptreeNode/FromParent', 159);
function CryptreeNode$FromParent$3methodref$fromCbor$Type(){
}

defineClass(1677, $wnd.Function, $intern_22, CryptreeNode$FromParent$3methodref$fromCbor$Type);
_.apply_0 = function apply_2313(arg0){
  return fromCbor_105(castTo(arg0, 7));
}
;
function CryptreeNode$FromParent$4methodref$fromCbor$Type(){
}

defineClass(1678, $wnd.Function, $intern_22, CryptreeNode$FromParent$4methodref$fromCbor$Type);
_.apply_0 = function apply_2314(arg0){
  return fromCbor_102(castTo(arg0, 7));
}
;
function CryptreeNode$FromParent$lambda$0$Type(state_0){
  this.state_0 = state_0;
}

defineClass(626, 1, $intern_32, CryptreeNode$FromParent$lambda$0$Type);
_.accept = function accept_185(arg0){
  $put_6(this.state_0, 'p', castTo(arg0, 102));
}
;
_.andThen = function andThen_95(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_fs_cryptree_CryptreeNode$FromParent$lambda$0$Type_2_classLit = createForClass('peergos.shared.user.fs.cryptree', 'CryptreeNode/FromParent/lambda$0$Type', 626);
function CryptreeNode$lambda$10$Type(r_0){
  this.r_0 = r_0;
}

defineClass(1607, $wnd.Function, $intern_22, CryptreeNode$lambda$10$Type);
_.apply_0 = function apply_2315(arg0){
  return lambda$10_11(this.r_0, arg0);
}
;
function CryptreeNode$lambda$101$Type(crypto_0){
  this.crypto_0 = crypto_0;
}

defineClass(636, 1, {}, CryptreeNode$lambda$101$Type);
_.get_0 = function get_168(){
  return $randomBytes(this.crypto_0.random, 32);
}
;
var Lpeergos_shared_user_fs_cryptree_CryptreeNode$lambda$101$Type_2_classLit = createForClass('peergos.shared.user.fs.cryptree', 'CryptreeNode/lambda$101$Type', 636);
function CryptreeNode$lambda$102$Type(crypto_0){
  this.crypto_0 = crypto_0;
}

defineClass(637, 1, {}, CryptreeNode$lambda$102$Type);
_.get_0 = function get_169(){
  return lambda$102_1(this.crypto_0);
}
;
var Lpeergos_shared_user_fs_cryptree_CryptreeNode$lambda$102$Type_2_classLit = createForClass('peergos.shared.user.fs.cryptree', 'CryptreeNode/lambda$102$Type', 637);
function CryptreeNode$lambda$103$Type($$outer_0, base_1, committer_2, childCap_3, entryWriter_4, network_5, dirMapKey_6, dirBat_7, dirReadKey_8, name_9, us_10, mirrorBat_11, crypto_12, dirWriteKey_13){
  this.$$outer_0 = $$outer_0;
  this.base_1 = base_1;
  this.committer_2 = committer_2;
  this.childCap_3 = childCap_3;
  this.entryWriter_4 = entryWriter_4;
  this.network_5 = network_5;
  this.dirMapKey_6 = dirMapKey_6;
  this.dirBat_7 = dirBat_7;
  this.dirReadKey_8 = dirReadKey_8;
  this.name_9 = name_9;
  this.us_10 = us_10;
  this.mirrorBat_11 = mirrorBat_11;
  this.crypto_12 = crypto_12;
  this.dirWriteKey_13 = dirWriteKey_13;
}

defineClass(1588, $wnd.Function, $intern_22, CryptreeNode$lambda$103$Type);
_.apply_0 = function apply_2316(arg0){
  return $lambda$103(this.$$outer_0, this.base_1, this.committer_2, this.childCap_3, this.entryWriter_4, this.network_5, this.dirMapKey_6, this.dirBat_7, this.dirReadKey_8, this.name_9, this.us_10, this.mirrorBat_11, this.crypto_12, this.dirWriteKey_13, arg0);
}
;
function CryptreeNode$lambda$104$Type(child_0, base_1, committer_2, childCap_3, entryWriter_4, network_5){
  this.child_0 = child_0;
  this.base_1 = base_1;
  this.committer_2 = committer_2;
  this.childCap_3 = childCap_3;
  this.entryWriter_4 = entryWriter_4;
  this.network_5 = network_5;
}

defineClass(1658, $wnd.Function, $intern_22, CryptreeNode$lambda$104$Type);
_.apply_0 = function apply_2317(arg0){
  return $commit_5(this.child_0, this.base_1, this.committer_2, this.childCap_3, this.entryWriter_4, this.network_5, castTo(arg0, 239));
}
;
function CryptreeNode$lambda$105$Type($$outer_0, dirMapKey_1, dirBat_2, dirReadKey_3, toChildWriteKey_4, name_5, us_6, entryWriter_7, committer_8, mirrorBat_9, network_10, crypto_11){
  this.$$outer_0 = $$outer_0;
  this.dirMapKey_1 = dirMapKey_1;
  this.dirBat_2 = dirBat_2;
  this.dirReadKey_3 = dirReadKey_3;
  this.toChildWriteKey_4 = toChildWriteKey_4;
  this.name_5 = name_5;
  this.us_6 = us_6;
  this.entryWriter_7 = entryWriter_7;
  this.committer_8 = committer_8;
  this.mirrorBat_9 = mirrorBat_9;
  this.network_10 = network_10;
  this.crypto_11 = crypto_11;
}

defineClass(1659, $wnd.Function, $intern_22, CryptreeNode$lambda$105$Type);
_.apply_0 = function apply_2318(arg0){
  return $lambda$105(this.$$outer_0, this.dirMapKey_1, this.dirBat_2, this.dirReadKey_3, this.toChildWriteKey_4, this.name_5, this.us_6, this.entryWriter_7, this.committer_8, this.mirrorBat_9, this.network_10, this.crypto_11, arg0);
}
;
function CryptreeNode$lambda$106$Type($$outer_0, ourPointer_1, base_2, committer_3, signer_4, network_5, random_6, hasher_7, childCasPairs_8){
  this.$$outer_0 = $$outer_0;
  this.ourPointer_1 = ourPointer_1;
  this.base_2 = base_2;
  this.committer_3 = committer_3;
  this.signer_4 = signer_4;
  this.network_5 = network_5;
  this.random_6 = random_6;
  this.hasher_7 = hasher_7;
  this.childCasPairs_8 = childCasPairs_8;
}

defineClass(1589, $wnd.Function, $intern_22, CryptreeNode$lambda$106$Type);
_.apply_0 = function apply_2319(arg0){
  return $lambda$106_0(this.$$outer_0, this.ourPointer_1, this.base_2, this.committer_3, this.signer_4, this.network_5, this.random_6, this.hasher_7, this.childCasPairs_8, arg0);
}
;
function CryptreeNode$lambda$107$Type(){
}

defineClass(1660, $wnd.Function, $intern_22, CryptreeNode$lambda$107$Type);
_.apply_0 = function apply_2320(arg0){
  return $getLocation(castTo(arg0, 83).capability);
}
;
function CryptreeNode$lambda$108$Type(){
}

defineClass(1661, $wnd.Function, $intern_22, CryptreeNode$lambda$108$Type);
_.apply_0 = function apply_2321(arg0){
  return $getLocation(castTo(castTo(arg0, 20).left, 71));
}
;
function CryptreeNode$lambda$109$Type(){
}

defineClass(1662, $wnd.Function, $intern_22, CryptreeNode$lambda$109$Type);
_.apply_0 = function apply_2322(arg0){
  return castTo(castTo(arg0, 20).right, 151);
}
;
function CryptreeNode$lambda$11$Type(r_0){
  this.r_0 = r_0;
}

defineClass(1608, $wnd.Function, $intern_22, CryptreeNode$lambda$11$Type);
_.apply_0 = function apply_2323(arg0){
  return lambda$11_9(this.r_0, arg0);
}
;
function CryptreeNode$lambda$110$Type(oldToNew_0){
  this.oldToNew_0 = oldToNew_0;
}

defineClass(638, 1, {}, CryptreeNode$lambda$110$Type);
_.test_0 = function test_53(arg0){
  return !this.oldToNew_0.containsKey($getLocation(castTo(arg0, 83).capability));
}
;
var Lpeergos_shared_user_fs_cryptree_CryptreeNode$lambda$110$Type_2_classLit = createForClass('peergos.shared.user.fs.cryptree', 'CryptreeNode/lambda$110$Type', 638);
function CryptreeNode$lambda$111$Type(ourPointer_0){
  this.ourPointer_0 = ourPointer_0;
}

defineClass(1663, $wnd.Function, $intern_22, CryptreeNode$lambda$111$Type);
_.apply_0 = function apply_2324(arg0){
  return lambda$111(this.ourPointer_0, arg0);
}
;
function CryptreeNode$lambda$112$Type(oldToNew_0){
  this.oldToNew_0 = oldToNew_0;
}

defineClass(639, 1, {}, CryptreeNode$lambda$112$Type);
_.test_0 = function test_54(arg0){
  return this.oldToNew_0.containsKey($getLocation(castTo(arg0, 83).capability));
}
;
var Lpeergos_shared_user_fs_cryptree_CryptreeNode$lambda$112$Type_2_classLit = createForClass('peergos.shared.user.fs.cryptree', 'CryptreeNode/lambda$112$Type', 639);
function CryptreeNode$lambda$113$Type(oldToNew_0, ourPointer_1){
  this.oldToNew_0 = oldToNew_0;
  this.ourPointer_1 = ourPointer_1;
}

defineClass(1664, $wnd.Function, $intern_22, CryptreeNode$lambda$113$Type);
_.apply_0 = function apply_2325(arg0){
  return lambda$113_0(this.oldToNew_0, this.ourPointer_1, arg0);
}
;
function CryptreeNode$lambda$114$Type(existingChildLocs_0){
  this.existingChildLocs_0 = existingChildLocs_0;
}

defineClass(640, 1, {}, CryptreeNode$lambda$114$Type);
_.test_0 = function test_55(arg0){
  return !this.existingChildLocs_0.contains($getLocation(castTo(castTo(arg0, 20).left, 71)));
}
;
var Lpeergos_shared_user_fs_cryptree_CryptreeNode$lambda$114$Type_2_classLit = createForClass('peergos.shared.user.fs.cryptree', 'CryptreeNode/lambda$114$Type', 640);
function CryptreeNode$lambda$115$Type($$outer_0, base_1, committer_2, ourPointer_3, signer_4, network_5, unchanged_6, updatedLinks_7, random_8, hasher_9){
  this.$$outer_0 = $$outer_0;
  this.base_1 = base_1;
  this.committer_2 = committer_2;
  this.ourPointer_3 = ourPointer_3;
  this.signer_4 = signer_4;
  this.network_5 = network_5;
  this.unchanged_6 = unchanged_6;
  this.updatedLinks_7 = updatedLinks_7;
  this.random_8 = random_8;
  this.hasher_9 = hasher_9;
}

defineClass(1665, $wnd.Function, $intern_22, CryptreeNode$lambda$115$Type);
_.apply_0 = function apply_2326(arg0){
  return $lambda$115_0(this.$$outer_0, this.base_1, this.committer_2, this.ourPointer_3, this.signer_4, this.network_5, this.unchanged_6, this.updatedLinks_7, this.random_8, this.hasher_9, arg0);
}
;
function CryptreeNode$lambda$116$Type(base_0, committer_1, ourPointer_2, signer_3, network_4, tid_5){
  this.base_0 = base_0;
  this.committer_1 = committer_1;
  this.ourPointer_2 = ourPointer_2;
  this.signer_3 = signer_3;
  this.network_4 = network_4;
  this.tid_5 = tid_5;
}

defineClass(1667, $wnd.Function, $intern_22, CryptreeNode$lambda$116$Type);
_.apply_0 = function apply_2327(arg0){
  return lambda$116(this.base_0, this.committer_1, this.ourPointer_2, this.signer_3, this.network_4, this.tid_5, arg0);
}
;
function CryptreeNode$lambda$117$Type($$outer_0, ourPointer_1, committer_2, signer_3, remaining_4, network_5, random_6, hasher_7, base_8){
  this.$$outer_0 = $$outer_0;
  this.ourPointer_1 = ourPointer_1;
  this.committer_2 = committer_2;
  this.signer_3 = signer_3;
  this.remaining_4 = remaining_4;
  this.network_5 = network_5;
  this.random_6 = random_6;
  this.hasher_7 = hasher_7;
  this.base_8 = base_8;
}

defineClass(1666, $wnd.Function, $intern_22, CryptreeNode$lambda$117$Type);
_.apply_0 = function apply_2328(arg0){
  return $lambda$117_0(this.$$outer_0, this.ourPointer_1, this.committer_2, this.signer_3, this.remaining_4, this.network_5, this.random_6, this.hasher_7, this.base_8, arg0);
}
;
function CryptreeNode$lambda$118$Type($$outer_0, ourPointer_1, updated_2, committer_3, signer_4, remaining_5, network_6, random_7, hasher_8){
  this.$$outer_0 = $$outer_0;
  this.ourPointer_1 = ourPointer_1;
  this.updated_2 = updated_2;
  this.committer_3 = committer_3;
  this.signer_4 = signer_4;
  this.remaining_5 = remaining_5;
  this.network_6 = network_6;
  this.random_7 = random_7;
  this.hasher_8 = hasher_8;
}

defineClass(1668, $wnd.Function, $intern_22, CryptreeNode$lambda$118$Type);
_.apply_0 = function apply_2329(arg0){
  return $lambda$118(this.$$outer_0, this.ourPointer_1, this.updated_2, this.committer_3, this.signer_4, this.remaining_5, this.network_6, this.random_7, this.hasher_8, arg0);
}
;
function CryptreeNode$lambda$119$Type(ourPointer_0, nextOpt_1, updated_2, committer_3, signer_4, remaining_5, network_6, random_7, hasher_8){
  this.ourPointer_0 = ourPointer_0;
  this.nextOpt_1 = nextOpt_1;
  this.updated_2 = updated_2;
  this.committer_3 = committer_3;
  this.signer_4 = signer_4;
  this.remaining_5 = remaining_5;
  this.network_6 = network_6;
  this.random_7 = random_7;
  this.hasher_8 = hasher_8;
}

defineClass(1669, $wnd.Function, $intern_22, CryptreeNode$lambda$119$Type);
_.apply_0 = function apply_2330(arg0){
  return lambda$119_1(this.ourPointer_0, this.nextOpt_1, this.updated_2, this.committer_3, this.signer_4, this.remaining_5, this.network_6, this.random_7, this.hasher_8, arg0);
}
;
function CryptreeNode$lambda$12$Type(){
}

defineClass(1606, $wnd.Function, $intern_22, CryptreeNode$lambda$12$Type);
_.apply_0 = function apply_2331(arg0){
  return castTo($collect_0($flatMap_0(castTo(arg0, 17).stream(), makeLambdaFunction(CryptreeNode$12methodref$stream$Type.prototype.apply_0, CryptreeNode$12methodref$stream$Type, [])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
}
;
function CryptreeNode$lambda$120$Type(){
}

defineClass(1590, $wnd.Function, $intern_22, CryptreeNode$lambda$120$Type);
_.apply_0 = function apply_2332(arg0){
  return new Location_0(castTo(arg0, 71).owner, castTo(arg0, 71).writer, castTo(arg0, 71).mapKey);
}
;
function CryptreeNode$lambda$121$Type($$outer_0, ourPointer_1, current_2, committer_3, entryWriter_4, network_5, random_6, hasher_7, locsToRemove_8){
  this.$$outer_0 = $$outer_0;
  this.ourPointer_1 = ourPointer_1;
  this.current_2 = current_2;
  this.committer_3 = committer_3;
  this.entryWriter_4 = entryWriter_4;
  this.network_5 = network_5;
  this.random_6 = random_6;
  this.hasher_7 = hasher_7;
  this.locsToRemove_8 = locsToRemove_8;
}

defineClass(1591, $wnd.Function, $intern_22, CryptreeNode$lambda$121$Type);
_.apply_0 = function apply_2333(arg0){
  return $lambda$121(this.$$outer_0, this.ourPointer_1, this.current_2, this.committer_3, this.entryWriter_4, this.network_5, this.random_6, this.hasher_7, this.locsToRemove_8, arg0);
}
;
function CryptreeNode$lambda$122$Type(locsToRemove_0){
  this.locsToRemove_0 = locsToRemove_0;
}

defineClass(641, 1, {}, CryptreeNode$lambda$122$Type);
_.test_0 = function test_56(arg0){
  return !this.locsToRemove_0.contains($getLocation(castTo(arg0, 83).capability));
}
;
var Lpeergos_shared_user_fs_cryptree_CryptreeNode$lambda$122$Type_2_classLit = createForClass('peergos.shared.user.fs.cryptree', 'CryptreeNode/lambda$122$Type', 641);
function CryptreeNode$lambda$123$Type(ourPointer_0){
  this.ourPointer_0 = ourPointer_0;
}

defineClass(1670, $wnd.Function, $intern_22, CryptreeNode$lambda$123$Type);
_.apply_0 = function apply_2334(arg0){
  return lambda$123(this.ourPointer_0, arg0);
}
;
function CryptreeNode$lambda$124$Type($$outer_0, current_1, committer_2, ourPointer_3, entryWriter_4, network_5, withRemoval_6, random_7, hasher_8){
  this.$$outer_0 = $$outer_0;
  this.current_1 = current_1;
  this.committer_2 = committer_2;
  this.ourPointer_3 = ourPointer_3;
  this.entryWriter_4 = entryWriter_4;
  this.network_5 = network_5;
  this.withRemoval_6 = withRemoval_6;
  this.random_7 = random_7;
  this.hasher_8 = hasher_8;
}

defineClass(1671, $wnd.Function, $intern_22, CryptreeNode$lambda$124$Type);
_.apply_0 = function apply_2335(arg0){
  return $lambda$124_0(this.$$outer_0, this.current_1, this.committer_2, this.ourPointer_3, this.entryWriter_4, this.network_5, this.withRemoval_6, this.random_7, this.hasher_8, arg0);
}
;
function CryptreeNode$lambda$125$Type(current_0, committer_1, ourPointer_2, entryWriter_3, network_4, tid_5){
  this.current_0 = current_0;
  this.committer_1 = committer_1;
  this.ourPointer_2 = ourPointer_2;
  this.entryWriter_3 = entryWriter_3;
  this.network_4 = network_4;
  this.tid_5 = tid_5;
}

defineClass(1672, $wnd.Function, $intern_22, CryptreeNode$lambda$125$Type);
_.apply_0 = function apply_2336(arg0){
  return lambda$125(this.current_0, this.committer_1, this.ourPointer_2, this.entryWriter_3, this.network_4, this.tid_5, arg0);
}
;
function CryptreeNode$lambda$126$Type(){
}

defineClass(1592, $wnd.Function, $intern_22, CryptreeNode$lambda$126$Type);
_.apply_0 = function apply_2337(arg0){
  return checkCriticalElement(arg0.ref != null) , castTo(arg0.ref, 83);
}
;
function CryptreeNode$lambda$127$Type(parentLocation_0, ourWriter_1, parentBat_2, parentparentKey_3, existingHash_4, parentKey_5, dataKey_6, props_7, nextChunk_8, inlineBat_9, mirrorBat_10){
  this.parentLocation_0 = parentLocation_0;
  this.ourWriter_1 = ourWriter_1;
  this.parentBat_2 = parentBat_2;
  this.parentparentKey_3 = parentparentKey_3;
  this.existingHash_4 = existingHash_4;
  this.parentKey_5 = parentKey_5;
  this.dataKey_6 = dataKey_6;
  this.props_7 = props_7;
  this.nextChunk_8 = nextChunk_8;
  this.inlineBat_9 = inlineBat_9;
  this.mirrorBat_10 = mirrorBat_10;
}

defineClass(1593, $wnd.Function, $intern_22, CryptreeNode$lambda$127$Type);
_.apply_0 = function apply_2338(arg0){
  return lambda$127(this.parentLocation_0, this.ourWriter_1, this.parentBat_2, this.parentparentKey_3, this.existingHash_4, this.parentKey_5, this.dataKey_6, this.props_7, this.nextChunk_8, this.inlineBat_9, this.mirrorBat_10, arg0);
}
;
function CryptreeNode$lambda$129$Type(startVersion_0, committer_1, linkCap_2, parent_3, network_4){
  this.startVersion_0 = startVersion_0;
  this.committer_1 = committer_1;
  this.linkCap_2 = linkCap_2;
  this.parent_3 = parent_3;
  this.network_4 = network_4;
}

defineClass(1595, $wnd.Function, $intern_22, CryptreeNode$lambda$129$Type);
_.apply_0 = function apply_2339(arg0){
  return lambda$129(this.startVersion_0, this.committer_1, this.linkCap_2, this.parent_3, this.network_4, arg0);
}
;
function CryptreeNode$lambda$130$Type(link_0, startVersion_1, committer_2, linkCap_3, parent_4, network_5){
  this.link_0 = link_0;
  this.startVersion_1 = startVersion_1;
  this.committer_2 = committer_2;
  this.linkCap_3 = linkCap_3;
  this.parent_4 = parent_4;
  this.network_5 = network_5;
}

defineClass(1673, $wnd.Function, $intern_22, CryptreeNode$lambda$130$Type);
_.apply_0 = function apply_2340(arg0){
  return lambda$130(this.link_0, this.startVersion_1, this.committer_2, this.linkCap_3, this.parent_4, this.network_5, arg0);
}
;
function CryptreeNode$lambda$131$Type(wBaseKey_0){
  this.wBaseKey_0 = wBaseKey_0;
}

defineClass(1596, $wnd.Function, $intern_22, CryptreeNode$lambda$131$Type);
_.apply_0 = function apply_2341(arg0){
  return new SymmetricLinkToSigner(build_2(this.wBaseKey_0, castTo(arg0, 105)));
}
;
function CryptreeNode$lambda$133$Type(lastCommittedHash_0, bats_1, encryptedBaseBlock_2, encryptedParentBlock_3){
  this.lastCommittedHash_0 = lastCommittedHash_0;
  this.bats_1 = bats_1;
  this.encryptedBaseBlock_2 = encryptedBaseBlock_2;
  this.encryptedParentBlock_3 = encryptedParentBlock_3;
}

defineClass(1598, $wnd.Function, $intern_22, CryptreeNode$lambda$133$Type);
_.apply_0 = function apply_2342(arg0){
  return lambda$133(this.lastCommittedHash_0, this.bats_1, this.encryptedBaseBlock_2, this.encryptedParentBlock_3, arg0);
}
;
function CryptreeNode$lambda$14$Type(us_0){
  this.us_0 = us_0;
}

defineClass(334, $wnd.Function, $intern_22, CryptreeNode$lambda$14$Type);
_.apply_0 = function apply_2343(arg0){
  return lambda$14_10(this.us_0, arg0);
}
;
function CryptreeNode$lambda$15$Type(us_0){
  this.us_0 = us_0;
}

defineClass(1609, $wnd.Function, $intern_22, CryptreeNode$lambda$15$Type);
_.apply_0 = function apply_2344(arg0){
  return lambda$15_6(this.us_0, arg0);
}
;
function CryptreeNode$lambda$16$Type($$outer_0, hasher_1, network_2, us_3){
  this.$$outer_0 = $$outer_0;
  this.hasher_1 = hasher_1;
  this.network_2 = network_2;
  this.us_3 = us_3;
}

defineClass(1573, $wnd.Function, $intern_22, CryptreeNode$lambda$16$Type);
_.apply_0 = function apply_2345(arg0){
  return $lambda$16_11(this.$$outer_0, this.hasher_1, this.network_2, this.us_3, arg0);
}
;
function CryptreeNode$lambda$17$Type(version_0, hasher_1, network_2, moreChildrenFuture_3){
  this.version_0 = version_0;
  this.hasher_1 = hasher_1;
  this.network_2 = network_2;
  this.moreChildrenFuture_3 = moreChildrenFuture_3;
}

defineClass(1610, $wnd.Function, $intern_22, CryptreeNode$lambda$17$Type);
_.apply_0 = function apply_2346(arg0){
  return lambda$17_5(this.version_0, this.hasher_1, this.network_2, this.moreChildrenFuture_3, arg0);
}
;
function CryptreeNode$lambda$18$Type(version_0, hasher_1, network_2, children_3){
  this.version_0 = version_0;
  this.hasher_1 = hasher_1;
  this.network_2 = network_2;
  this.children_3 = children_3;
}

defineClass(1611, $wnd.Function, $intern_22, CryptreeNode$lambda$18$Type);
_.apply_0 = function apply_2347(arg0){
  return lambda$18_7(this.version_0, this.hasher_1, this.network_2, this.children_3, arg0);
}
;
function CryptreeNode$lambda$19$Type(version_0, hasher_1, network_2){
  this.version_0 = version_0;
  this.hasher_1 = hasher_1;
  this.network_2 = network_2;
}

defineClass(1612, $wnd.Function, $intern_22, CryptreeNode$lambda$19$Type);
_.apply_0 = function apply_2348(arg0){
  return lambda$19_10(this.version_0, this.hasher_1, this.network_2, arg0);
}
;
function CryptreeNode$lambda$2$Type(wBaseKey_0){
  this.wBaseKey_0 = wBaseKey_0;
}

defineClass(1568, $wnd.Function, $intern_22, CryptreeNode$lambda$2$Type);
_.apply_0 = function apply_2349(arg0){
  return lambda$2_15(this.wBaseKey_0, arg0);
}
;
function CryptreeNode$lambda$20$Type(children_0){
  this.children_0 = children_0;
}

defineClass(1613, $wnd.Function, $intern_22, CryptreeNode$lambda$20$Type);
_.apply_0 = function apply_2350(arg0){
  return lambda$20_7(this.children_0, arg0);
}
;
function CryptreeNode$lambda$21$Type(network_0, version_1){
  this.network_0 = network_0;
  this.version_1 = version_1;
}

defineClass(1193, $wnd.Function, $intern_22, CryptreeNode$lambda$21$Type);
_.apply_0 = function apply_2351(arg0){
  return lambda$21_7(this.network_0, this.version_1, arg0);
}
;
function CryptreeNode$lambda$22$Type(){
}

defineClass(1614, $wnd.Function, $intern_22, CryptreeNode$lambda$22$Type);
_.apply_0 = function apply_2352(arg0){
  return castTo(arg0, 151).cap;
}
;
function CryptreeNode$lambda$24$Type(name_0, network_1, version_2){
  this.name_0 = name_0;
  this.network_1 = network_1;
  this.version_2 = version_2;
}

defineClass(1574, $wnd.Function, $intern_22, CryptreeNode$lambda$24$Type);
_.apply_0 = function apply_2353(arg0){
  return lambda$24_4(this.name_0, this.network_1, this.version_2, arg0);
}
;
function CryptreeNode$lambda$25$Type(name_0){
  this.name_0 = name_0;
}

defineClass(629, 1, {}, CryptreeNode$lambda$25$Type);
_.test_0 = function test_57(arg0){
  return lambda$25_7(this.name_0, arg0);
}
;
var Lpeergos_shared_user_fs_cryptree_CryptreeNode$lambda$25$Type_2_classLit = createForClass('peergos.shared.user.fs.cryptree', 'CryptreeNode/lambda$25$Type', 629);
function CryptreeNode$lambda$3$Type(entrySigner_0){
  this.entrySigner_0 = entrySigner_0;
}

defineClass(628, 1, {}, CryptreeNode$lambda$3$Type);
_.get_0 = function get_170(){
  return castTo($orElseThrow(this.entrySigner_0, new CryptreeNode$lambda$4$Type), 105);
}
;
var Lpeergos_shared_user_fs_cryptree_CryptreeNode$lambda$3$Type_2_classLit = createForClass('peergos.shared.user.fs.cryptree', 'CryptreeNode/lambda$3$Type', 628);
function CryptreeNode$lambda$30$Type($$outer_0, name_1, version_2, hasher_3, network_4, us_5){
  this.$$outer_0 = $$outer_0;
  this.name_1 = name_1;
  this.version_2 = version_2;
  this.hasher_3 = hasher_3;
  this.network_4 = network_4;
  this.us_5 = us_5;
}

defineClass(1575, $wnd.Function, $intern_22, CryptreeNode$lambda$30$Type);
_.apply_0 = function apply_2354(arg0){
  return $lambda$30_8(this.$$outer_0, this.name_1, this.version_2, this.hasher_3, this.network_4, this.us_5, arg0);
}
;
function CryptreeNode$lambda$31$Type(name_0, version_1, hasher_2, network_3){
  this.name_0 = name_0;
  this.version_1 = version_1;
  this.hasher_2 = hasher_2;
  this.network_3 = network_3;
}

defineClass(1616, $wnd.Function, $intern_22, CryptreeNode$lambda$31$Type);
_.apply_0 = function apply_2355(arg0){
  return lambda$31_5(this.name_0, this.version_1, this.hasher_2, this.network_3, arg0);
}
;
function CryptreeNode$lambda$32$Type($$outer_0, network_1, base_2, committer_3, updated_4, us_5, entryWriter_6){
  this.$$outer_0 = $$outer_0;
  this.network_1 = network_1;
  this.base_2 = base_2;
  this.committer_3 = committer_3;
  this.updated_4 = updated_4;
  this.us_5 = us_5;
  this.entryWriter_6 = entryWriter_6;
}

defineClass(1576, $wnd.Function, $intern_22, CryptreeNode$lambda$32$Type);
_.apply_0 = function apply_2356(arg0){
  return $lambda$32_4(this.$$outer_0, this.network_1, this.base_2, this.committer_3, this.updated_4, this.us_5, this.entryWriter_6, arg0);
}
;
function CryptreeNode$lambda$4$Type(){
}

defineClass(627, 1, {}, CryptreeNode$lambda$4$Type);
_.get_0 = function get_171(){
  return new IllegalStateException_0('No link to private signing key present on directory!');
}
;
var Lpeergos_shared_user_fs_cryptree_CryptreeNode$lambda$4$Type_2_classLit = createForClass('peergos.shared.user.fs.cryptree', 'CryptreeNode/lambda$4$Type', 627);
function CryptreeNode$lambda$42$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1577, $wnd.Function, $intern_22, CryptreeNode$lambda$42$Type);
_.apply_0 = function apply_2357(arg0){
  return $lambda$42_5(this.$$outer_0, arg0);
}
;
function CryptreeNode$lambda$43$Type(us_1, version_2, network_3){
  this.us_1 = us_1;
  this.version_2 = version_2;
  this.network_3 = network_3;
}

defineClass(1578, $wnd.Function, $intern_22, CryptreeNode$lambda$43$Type);
_.apply_0 = function apply_2358(arg0){
  return $lambda$43_4(this.us_1, this.version_2, this.network_3, arg0);
}
;
function CryptreeNode$lambda$44$Type(nextChunkCap_0){
  this.nextChunkCap_0 = nextChunkCap_0;
}

defineClass(1259, $wnd.Function, $intern_22, CryptreeNode$lambda$44$Type);
_.apply_0 = function apply_2359(arg0){
  return lambda$44_3(this.nextChunkCap_0, arg0);
}
;
function CryptreeNode$lambda$45$Type(nextChunkCap_0){
  this.nextChunkCap_0 = nextChunkCap_0;
}

defineClass(1617, $wnd.Function, $intern_22, CryptreeNode$lambda$45$Type);
_.apply_0 = function apply_2360(arg0){
  return new RetrievedCapability(this.nextChunkCap_0, castTo(arg0, 115));
}
;
function CryptreeNode$lambda$46$Type(currentChild_0, newMapKey_1, newBat_2, baseRead_3, baseWrite_4){
  this.currentChild_0 = currentChild_0;
  this.newMapKey_1 = newMapKey_1;
  this.newBat_2 = newBat_2;
  this.baseRead_3 = baseRead_3;
  this.baseWrite_4 = baseWrite_4;
}

defineClass(1579, $wnd.Function, $intern_22, CryptreeNode$lambda$46$Type);
_.apply_0 = function apply_2361(arg0){
  return lambda$46_5(this.currentChild_0, this.newMapKey_1, this.newBat_2, this.baseRead_3, this.baseWrite_4, arg0);
}
;
function CryptreeNode$lambda$47$Type(committer_0, owner_1, version_2, network_3, newSignerPair_4, parentSigner_5, signature_6){
  this.committer_0 = committer_0;
  this.owner_1 = owner_1;
  this.version_2 = version_2;
  this.network_3 = network_3;
  this.newSignerPair_4 = newSignerPair_4;
  this.parentSigner_5 = parentSigner_5;
  this.signature_6 = signature_6;
}

defineClass(1580, $wnd.Function, $intern_22, CryptreeNode$lambda$47$Type);
_.apply_0 = function apply_2362(arg0){
  return lambda$47_3(this.committer_0, this.owner_1, this.version_2, this.network_3, this.newSignerPair_4, this.parentSigner_5, this.signature_6, arg0);
}
;
function CryptreeNode$lambda$48$Type(committer_0, owner_1, tid_2, version_3, network_4, newSignerPair_5, parentSigner_6){
  this.committer_0 = committer_0;
  this.owner_1 = owner_1;
  this.tid_2 = tid_2;
  this.version_3 = version_3;
  this.network_4 = network_4;
  this.newSignerPair_5 = newSignerPair_5;
  this.parentSigner_6 = parentSigner_6;
}

defineClass(1618, $wnd.Function, $intern_22, CryptreeNode$lambda$48$Type);
_.apply_0 = function apply_2363(arg0){
  return lambda$48_2(this.committer_0, this.owner_1, this.tid_2, this.version_3, this.network_4, this.newSignerPair_5, this.parentSigner_6, arg0);
}
;
function CryptreeNode$lambda$49$Type(committer_0, owner_1, newSigner_2, tid_3, version_4, network_5){
  this.committer_0 = committer_0;
  this.owner_1 = owner_1;
  this.newSigner_2 = newSigner_2;
  this.tid_3 = tid_3;
  this.version_4 = version_4;
  this.network_5 = network_5;
}

defineClass(1619, $wnd.Function, $intern_22, CryptreeNode$lambda$49$Type);
_.apply_0 = function apply_2364(arg0){
  return lambda$49_2(this.committer_0, this.owner_1, this.newSigner_2, this.tid_3, this.version_4, this.network_5, arg0);
}
;
function CryptreeNode$lambda$5$Type($$outer_0, baseKey_1){
  this.$$outer_0 = $$outer_0;
  this.baseKey_1 = baseKey_1;
}

defineClass(1569, $wnd.Function, $intern_22, CryptreeNode$lambda$5$Type);
_.apply_0 = function apply_2365(arg0){
  return $lambda$5_19(this.$$outer_0, this.baseKey_1, arg0);
}
;
function CryptreeNode$lambda$50$Type(committer_0, owner_1, newSigner_2, tid_3){
  this.committer_0 = committer_0;
  this.owner_1 = owner_1;
  this.newSigner_2 = newSigner_2;
  this.tid_3 = tid_3;
}

defineClass(1620, $wnd.Function, $intern_22, CryptreeNode$lambda$50$Type);
_.apply_0 = function apply_2366(arg0){
  return lambda$50_3(this.committer_0, this.owner_1, this.newSigner_2, this.tid_3, arg0);
}
;
function CryptreeNode$lambda$51$Type(version_0, v_1, newSigner_2){
  this.version_0 = version_0;
  this.v_1 = v_1;
  this.newSigner_2 = newSigner_2;
}

defineClass(1621, $wnd.Function, $intern_22, CryptreeNode$lambda$51$Type);
_.apply_0 = function apply_2367(arg0){
  return lambda$51_3(this.version_0, this.v_1, this.newSigner_2, arg0);
}
;
function CryptreeNode$lambda$52$Type(committer_0, owner_1, parentSigner_2, cwd_3, signer_4, network_5){
  this.committer_0 = committer_0;
  this.owner_1 = owner_1;
  this.parentSigner_2 = parentSigner_2;
  this.cwd_3 = cwd_3;
  this.signer_4 = signer_4;
  this.network_5 = network_5;
}

defineClass(1581, $wnd.Function, $intern_22, CryptreeNode$lambda$52$Type);
_.apply_0 = function apply_2368(arg0){
  return lambda$52_4(this.committer_0, this.owner_1, this.parentSigner_2, this.cwd_3, this.signer_4, this.network_5, arg0);
}
;
function CryptreeNode$lambda$53$Type(committer_0, owner_1, parentSigner_2, cwd_3, tid_4){
  this.committer_0 = committer_0;
  this.owner_1 = owner_1;
  this.parentSigner_2 = parentSigner_2;
  this.cwd_3 = cwd_3;
  this.tid_4 = tid_4;
}

defineClass(1622, $wnd.Function, $intern_22, CryptreeNode$lambda$53$Type);
_.apply_0 = function apply_2369(arg0){
  return lambda$53_4(this.committer_0, this.owner_1, this.parentSigner_2, this.cwd_3, this.tid_4, arg0);
}
;
function CryptreeNode$lambda$54$Type(version_0, parentWriter_1){
  this.version_0 = version_0;
  this.parentWriter_1 = parentWriter_1;
}

defineClass(1582, $wnd.Function, $intern_22, CryptreeNode$lambda$54$Type);
_.apply_0 = function apply_2370(arg0){
  return lambda$54_2(this.version_0, this.parentWriter_1, arg0);
}
;
function CryptreeNode$lambda$55$Type($$outer_0, newUs_1, crypto_2, newParent_3, us_4, parent_5, mirrorBat_6, rotateSigner_7, network_8, committer_9, isFirstChunk_10, props_11, fileStreamSecret_12, firstChunkOrParentCap_13, version_14){
  this.$$outer_0 = $$outer_0;
  this.newUs_1 = newUs_1;
  this.crypto_2 = crypto_2;
  this.newParent_3 = newParent_3;
  this.us_4 = us_4;
  this.parent_5 = parent_5;
  this.mirrorBat_6 = mirrorBat_6;
  this.rotateSigner_7 = rotateSigner_7;
  this.network_8 = network_8;
  this.committer_9 = committer_9;
  this.isFirstChunk_10 = isFirstChunk_10;
  this.props_11 = props_11;
  this.fileStreamSecret_12 = fileStreamSecret_12;
  this.firstChunkOrParentCap_13 = firstChunkOrParentCap_13;
  this.version_14 = version_14;
}

defineClass(1583, $wnd.Function, $intern_22, CryptreeNode$lambda$55$Type);
_.apply_0 = function apply_2371(arg0){
  return $lambda$55_3(this.$$outer_0, this.newUs_1, this.crypto_2, this.newParent_3, this.us_4, this.parent_5, this.mirrorBat_6, this.rotateSigner_7, this.network_8, this.committer_9, this.isFirstChunk_10, this.props_11, this.fileStreamSecret_12, this.firstChunkOrParentCap_13, this.version_14, arg0);
}
;
_.isFirstChunk_10 = false;
_.rotateSigner_7 = false;
function CryptreeNode$lambda$56$Type(newUs_0, crypto_1){
  this.newUs_0 = newUs_0;
  this.crypto_1 = crypto_1;
}

defineClass(1623, $wnd.Function, $intern_22, CryptreeNode$lambda$56$Type);
_.apply_0 = function apply_2372(arg0){
  return lambda$56_4(this.newUs_0, this.crypto_1, arg0);
}
;
function CryptreeNode$lambda$57$Type(crypto_0){
  this.crypto_0 = crypto_0;
}

defineClass(630, 1, {}, CryptreeNode$lambda$57$Type);
_.get_0 = function get_172(){
  return lambda$57_2(this.crypto_0);
}
;
var Lpeergos_shared_user_fs_cryptree_CryptreeNode$lambda$57$Type_2_classLit = createForClass('peergos.shared.user.fs.cryptree', 'CryptreeNode/lambda$57$Type', 630);
function CryptreeNode$lambda$58$Type($$outer_0, newParent_1, newUs_2, us_3, nextChunkCap_4, parent_5, streamSecret_6, mirrorBat_7, rotateSigner_8, network_9, crypto_10, committer_11, isFirstChunk_12, props_13, firstChunkOrParentCap_14, version_15){
  this.$$outer_0 = $$outer_0;
  this.newParent_1 = newParent_1;
  this.newUs_2 = newUs_2;
  this.us_3 = us_3;
  this.nextChunkCap_4 = nextChunkCap_4;
  this.parent_5 = parent_5;
  this.streamSecret_6 = streamSecret_6;
  this.mirrorBat_7 = mirrorBat_7;
  this.rotateSigner_8 = rotateSigner_8;
  this.network_9 = network_9;
  this.crypto_10 = crypto_10;
  this.committer_11 = committer_11;
  this.isFirstChunk_12 = isFirstChunk_12;
  this.props_13 = props_13;
  this.firstChunkOrParentCap_14 = firstChunkOrParentCap_14;
  this.version_15 = version_15;
}

defineClass(1624, $wnd.Function, $intern_22, CryptreeNode$lambda$58$Type);
_.apply_0 = function apply_2373(arg0){
  return $lambda$58_2(this.$$outer_0, this.newParent_1, this.newUs_2, this.us_3, this.nextChunkCap_4, this.parent_5, this.streamSecret_6, this.mirrorBat_7, this.rotateSigner_8, this.network_9, this.crypto_10, this.committer_11, this.isFirstChunk_12, this.props_13, this.firstChunkOrParentCap_14, this.version_15, arg0);
}
;
_.isFirstChunk_12 = false;
_.rotateSigner_8 = false;
function CryptreeNode$lambda$59$Type(newParent_0, newUs_1){
  this.newParent_0 = newParent_0;
  this.newUs_1 = newUs_1;
}

defineClass(1625, $wnd.Function, $intern_22, CryptreeNode$lambda$59$Type);
_.apply_0 = function apply_2374(arg0){
  return lambda$59_2(this.newParent_0, this.newUs_1, arg0);
}
;
function CryptreeNode$lambda$60$Type(newNextChunkCap_1, us_2, nextChunkCap_3, newUs_4, parent_5, newParent_6, childCapToUs_7, streamSecret_8, mirrorBat_9, rotateSigner_10, network_11, crypto_12, committer_13){
  this.newNextChunkCap_1 = newNextChunkCap_1;
  this.us_2 = us_2;
  this.nextChunkCap_3 = nextChunkCap_3;
  this.newUs_4 = newUs_4;
  this.parent_5 = parent_5;
  this.newParent_6 = newParent_6;
  this.childCapToUs_7 = childCapToUs_7;
  this.streamSecret_8 = streamSecret_8;
  this.mirrorBat_9 = mirrorBat_9;
  this.rotateSigner_10 = rotateSigner_10;
  this.network_11 = network_11;
  this.crypto_12 = crypto_12;
  this.committer_13 = committer_13;
}

defineClass(1626, $wnd.Function, $intern_22, CryptreeNode$lambda$60$Type);
_.apply_0 = function apply_2375(arg0){
  return $lambda$60_2(this.newNextChunkCap_1, this.us_2, this.nextChunkCap_3, this.newUs_4, this.parent_5, this.newParent_6, this.childCapToUs_7, this.streamSecret_8, this.mirrorBat_9, this.rotateSigner_10, this.network_11, this.crypto_12, this.committer_13, arg0);
}
;
_.rotateSigner_10 = false;
function CryptreeNode$lambda$61$Type(s_0, newNextChunkCap_1, us_2, nextChunkCap_3, newUs_4, parent_5, newParent_6, childCapToUs_7, streamSecret_8, mirrorBat_9, rotateSigner_10, network_11, crypto_12, committer_13){
  this.s_0 = s_0;
  this.newNextChunkCap_1 = newNextChunkCap_1;
  this.us_2 = us_2;
  this.nextChunkCap_3 = nextChunkCap_3;
  this.newUs_4 = newUs_4;
  this.parent_5 = parent_5;
  this.newParent_6 = newParent_6;
  this.childCapToUs_7 = childCapToUs_7;
  this.streamSecret_8 = streamSecret_8;
  this.mirrorBat_9 = mirrorBat_9;
  this.rotateSigner_10 = rotateSigner_10;
  this.network_11 = network_11;
  this.crypto_12 = crypto_12;
  this.committer_13 = committer_13;
}

defineClass(1629, $wnd.Function, $intern_22, CryptreeNode$lambda$61$Type);
_.apply_0 = function apply_2376(arg0){
  return lambda$61_3(this.s_0, this.newNextChunkCap_1, this.us_2, this.nextChunkCap_3, this.newUs_4, this.parent_5, this.newParent_6, this.childCapToUs_7, this.streamSecret_8, this.mirrorBat_9, this.rotateSigner_10, this.network_11, this.crypto_12, this.committer_13, arg0);
}
;
_.rotateSigner_10 = false;
function CryptreeNode$lambda$62$Type($$outer_0, us_1, newUs_2, childCapToUs_3, mirrorBat_4, rotateSigner_5, network_6, crypto_7, committer_8, isFirstChunk_9, newParent_10, props_11, newParentCap_12, newParentKey_13, version_14, streamSecret_15){
  this.$$outer_0 = $$outer_0;
  this.us_1 = us_1;
  this.newUs_2 = newUs_2;
  this.childCapToUs_3 = childCapToUs_3;
  this.mirrorBat_4 = mirrorBat_4;
  this.rotateSigner_5 = rotateSigner_5;
  this.network_6 = network_6;
  this.crypto_7 = crypto_7;
  this.committer_8 = committer_8;
  this.isFirstChunk_9 = isFirstChunk_9;
  this.newParent_10 = newParent_10;
  this.props_11 = props_11;
  this.newParentCap_12 = newParentCap_12;
  this.newParentKey_13 = newParentKey_13;
  this.version_14 = version_14;
  this.streamSecret_15 = streamSecret_15;
}

defineClass(1627, $wnd.Function, $intern_22, CryptreeNode$lambda$62$Type);
_.apply_0 = function apply_2377(arg0){
  return $lambda$62_0(this.$$outer_0, this.us_1, this.newUs_2, this.childCapToUs_3, this.mirrorBat_4, this.rotateSigner_5, this.network_6, this.crypto_7, this.committer_8, this.isFirstChunk_9, this.newParent_10, this.props_11, this.newParentCap_12, this.newParentKey_13, this.version_14, this.streamSecret_15, arg0);
}
;
_.isFirstChunk_9 = false;
_.rotateSigner_5 = false;
function CryptreeNode$lambda$63$Type(us_1, newUs_2, childCapToUs_3, mirrorBat_4, rotateSigner_5, network_6, crypto_7, committer_8, nextChunk_9, empty_10){
  this.us_1 = us_1;
  this.newUs_2 = newUs_2;
  this.childCapToUs_3 = childCapToUs_3;
  this.mirrorBat_4 = mirrorBat_4;
  this.rotateSigner_5 = rotateSigner_5;
  this.network_6 = network_6;
  this.crypto_7 = crypto_7;
  this.committer_8 = committer_8;
  this.nextChunk_9 = nextChunk_9;
  this.empty_10 = empty_10;
}

defineClass(1630, $wnd.Function, $intern_22, CryptreeNode$lambda$63$Type);
_.apply_0 = function apply_2378(arg0){
  return $lambda$63_1(this.us_1, this.newUs_2, this.childCapToUs_3, this.mirrorBat_4, this.rotateSigner_5, this.network_6, this.crypto_7, this.committer_8, this.nextChunk_9, this.empty_10, arg0);
}
;
_.rotateSigner_5 = false;
function CryptreeNode$lambda$64$Type(us_1, newUs_2, childCapToUs_3, mirrorBat_4, rotateSigner_5, network_6, crypto_7, committer_8){
  this.us_1 = us_1;
  this.newUs_2 = newUs_2;
  this.childCapToUs_3 = childCapToUs_3;
  this.mirrorBat_4 = mirrorBat_4;
  this.rotateSigner_5 = rotateSigner_5;
  this.network_6 = network_6;
  this.crypto_7 = crypto_7;
  this.committer_8 = committer_8;
}

defineClass(631, 1, $intern_34, CryptreeNode$lambda$64$Type);
_.apply_1 = function apply_2379(arg0, arg1){
  return $lambda$64_3(this.us_1, this.newUs_2, this.childCapToUs_3, this.mirrorBat_4, this.rotateSigner_5, this.network_6, this.crypto_7, this.committer_8, arg0, arg1);
}
;
_.rotateSigner_5 = false;
var Lpeergos_shared_user_fs_cryptree_CryptreeNode$lambda$64$Type_2_classLit = createForClass('peergos.shared.user.fs.cryptree', 'CryptreeNode/lambda$64$Type', 631);
function CryptreeNode$lambda$65$Type(){
}

defineClass(632, 1, $intern_34, CryptreeNode$lambda$65$Type);
_.apply_1 = function apply_2380(arg0, arg1){
  return new Pair($merge_3(castTo(castTo(arg0, 20).left, 43), castTo(castTo(arg1, 20).left, 43)), castTo(concat(castTo(castTo(arg0, 20).right, 47).stream(), castTo(castTo(arg1, 20).right, 47).stream()).collect_0(of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47));
}
;
var Lpeergos_shared_user_fs_cryptree_CryptreeNode$lambda$65$Type_2_classLit = createForClass('peergos.shared.user.fs.cryptree', 'CryptreeNode/lambda$65$Type', 632);
function CryptreeNode$lambda$66$Type(p_0, c_1, child_2, us_3, newUs_4, childCapToUs_5, mirrorBat_6, rotateSigner_7, network_8, crypto_9, committer_10){
  this.p_0 = p_0;
  this.c_1 = c_1;
  this.child_2 = child_2;
  this.us_3 = us_3;
  this.newUs_4 = newUs_4;
  this.childCapToUs_5 = childCapToUs_5;
  this.mirrorBat_6 = mirrorBat_6;
  this.rotateSigner_7 = rotateSigner_7;
  this.network_8 = network_8;
  this.crypto_9 = crypto_9;
  this.committer_10 = committer_10;
}

defineClass(1634, $wnd.Function, $intern_22, CryptreeNode$lambda$66$Type);
_.apply_0 = function apply_2381(arg0){
  return lambda$66_4(this.p_0, this.c_1, this.child_2, this.us_3, this.newUs_4, this.childCapToUs_5, this.mirrorBat_6, this.rotateSigner_7, this.network_8, this.crypto_9, this.committer_10, arg0);
}
;
_.rotateSigner_7 = false;
function CryptreeNode$lambda$67$Type(p_0, c_1){
  this.p_0 = p_0;
  this.c_1 = c_1;
}

defineClass(1635, $wnd.Function, $intern_22, CryptreeNode$lambda$67$Type);
_.apply_0 = function apply_2382(arg0){
  return lambda$67_1(this.p_0, this.c_1, arg0);
}
;
function CryptreeNode$lambda$68$Type(newUs_0, committer_1, network_2, us_3, isFirstChunk_4, newParent_5, nextChunk_6, props_7, newParentCap_8, newParentKey_9, mirrorBat_10, crypto_11){
  this.newUs_0 = newUs_0;
  this.committer_1 = committer_1;
  this.network_2 = network_2;
  this.us_3 = us_3;
  this.isFirstChunk_4 = isFirstChunk_4;
  this.newParent_5 = newParent_5;
  this.nextChunk_6 = nextChunk_6;
  this.props_7 = props_7;
  this.newParentCap_8 = newParentCap_8;
  this.newParentKey_9 = newParentKey_9;
  this.mirrorBat_10 = mirrorBat_10;
  this.crypto_11 = crypto_11;
}

defineClass(1631, $wnd.Function, $intern_22, CryptreeNode$lambda$68$Type);
_.apply_0 = function apply_2383(arg0){
  return lambda$68_0(this.newUs_0, this.committer_1, this.network_2, this.us_3, this.isFirstChunk_4, this.newParent_5, this.nextChunk_6, this.props_7, this.newParentCap_8, this.newParentKey_9, this.mirrorBat_10, this.crypto_11, arg0);
}
;
_.isFirstChunk_4 = false;
function CryptreeNode$lambda$69$Type(newUs_0){
  this.newUs_0 = newUs_0;
}

defineClass(1636, $wnd.Function, $intern_22, CryptreeNode$lambda$69$Type);
_.apply_0 = function apply_2384(arg0){
  return lambda$69(this.newUs_0, arg0);
}
;
function CryptreeNode$lambda$7$Type(){
}

defineClass(1571, $wnd.Function, {}, CryptreeNode$lambda$7$Type);
_.accept_5 = function accept_186(arg0){
}
;
function CryptreeNode$lambda$70$Type(newChildCaps_0, committer_1, newUs_2, network_3, us_4){
  this.newChildCaps_0 = newChildCaps_0;
  this.committer_1 = committer_1;
  this.newUs_2 = newUs_2;
  this.network_3 = network_3;
  this.us_4 = us_4;
}

defineClass(1637, $wnd.Function, $intern_22, CryptreeNode$lambda$70$Type);
_.apply_0 = function apply_2385(arg0){
  return lambda$70_0(this.newChildCaps_0, this.committer_1, this.newUs_2, this.network_3, this.us_4, arg0);
}
;
function CryptreeNode$lambda$71$Type(newUsDir_0, newChildCaps_1, committer_2, newUs_3, network_4){
  this.newUsDir_0 = newUsDir_0;
  this.newChildCaps_1 = newChildCaps_1;
  this.committer_2 = committer_2;
  this.newUs_3 = newUs_3;
  this.network_4 = network_4;
}

defineClass(1638, $wnd.Function, $intern_22, CryptreeNode$lambda$71$Type);
_.apply_0 = function apply_2386(arg0){
  return lambda$71_0(this.newUsDir_0, this.newChildCaps_1, this.committer_2, this.newUs_3, this.network_4, arg0);
}
;
function CryptreeNode$lambda$73$Type(newFileChunk_0, nextChunk_1, committer_2, newUs_3, network_4){
  this.newFileChunk_0 = newFileChunk_0;
  this.nextChunk_1 = nextChunk_1;
  this.committer_2 = committer_2;
  this.newUs_3 = newUs_3;
  this.network_4 = network_4;
}

defineClass(1633, $wnd.Function, $intern_22, CryptreeNode$lambda$73$Type);
_.apply_0 = function apply_2387(arg0){
  return lambda$73_1(this.newFileChunk_0, this.nextChunk_1, this.committer_2, this.newUs_3, this.network_4, arg0);
}
;
function CryptreeNode$lambda$74$Type(newUs_0){
  this.newUs_0 = newUs_0;
}

defineClass(1628, $wnd.Function, $intern_22, CryptreeNode$lambda$74$Type);
_.apply_0 = function apply_2388(arg0){
  return lambda$74_0(this.newUs_0, arg0);
}
;
function CryptreeNode$lambda$75$Type(newStreamSecret_0, crypto_1){
  this.newStreamSecret_0 = newStreamSecret_0;
  this.crypto_1 = crypto_1;
}

defineClass(1584, $wnd.Function, $intern_22, CryptreeNode$lambda$75$Type);
_.apply_0 = function apply_2389(arg0){
  return castTo($orElseGet(this.newStreamSecret_0, new CryptreeNode$lambda$76$Type(this.crypto_1)), 11);
}
;
function CryptreeNode$lambda$76$Type(crypto_0){
  this.crypto_0 = crypto_0;
}

defineClass(633, 1, {}, CryptreeNode$lambda$76$Type);
_.get_0 = function get_173(){
  return $randomBytes(this.crypto_0.random, 32);
}
;
var Lpeergos_shared_user_fs_cryptree_CryptreeNode$lambda$76$Type_2_classLit = createForClass('peergos.shared.user.fs.cryptree', 'CryptreeNode/lambda$76$Type', 633);
function CryptreeNode$lambda$77$Type(props_0){
  this.props_0 = props_0;
}

defineClass(1585, $wnd.Function, $intern_22, CryptreeNode$lambda$77$Type);
_.apply_0 = function apply_2390(arg0){
  return lambda$77_2(this.props_0, arg0);
}
;
function CryptreeNode$lambda$78$Type($$outer_0, cap_1, newCap_2, newDataKey_3, current_4, committer_5, writer_6, updatedFileProperties_7, parentLocation_8, parentBat_9, parentParentKey_10, crypto_11, network_12, props_13, streamSecret_14, finalNewSecret_15){
  this.$$outer_0 = $$outer_0;
  this.cap_1 = cap_1;
  this.newCap_2 = newCap_2;
  this.newDataKey_3 = newDataKey_3;
  this.current_4 = current_4;
  this.committer_5 = committer_5;
  this.writer_6 = writer_6;
  this.updatedFileProperties_7 = updatedFileProperties_7;
  this.parentLocation_8 = parentLocation_8;
  this.parentBat_9 = parentBat_9;
  this.parentParentKey_10 = parentParentKey_10;
  this.crypto_11 = crypto_11;
  this.network_12 = network_12;
  this.props_13 = props_13;
  this.streamSecret_14 = streamSecret_14;
  this.finalNewSecret_15 = finalNewSecret_15;
}

defineClass(1586, $wnd.Function, $intern_22, CryptreeNode$lambda$78$Type);
_.apply_0 = function apply_2391(arg0){
  return $lambda$78_0(this.$$outer_0, this.cap_1, this.newCap_2, this.newDataKey_3, this.current_4, this.committer_5, this.writer_6, this.updatedFileProperties_7, this.parentLocation_8, this.parentBat_9, this.parentParentKey_10, this.crypto_11, this.network_12, this.props_13, this.streamSecret_14, this.finalNewSecret_15, arg0);
}
;
function CryptreeNode$lambda$79$Type($$outer_0, cap_1, newCap_2, newDataKey_3, current_4, committer_5, writer_6, updatedFileProperties_7, parentLocation_8, parentBat_9, parentParentKey_10, crypto_11, network_12, props_13, nextCap_14, streamSecret_15){
  this.$$outer_0 = $$outer_0;
  this.cap_1 = cap_1;
  this.newCap_2 = newCap_2;
  this.newDataKey_3 = newDataKey_3;
  this.current_4 = current_4;
  this.committer_5 = committer_5;
  this.writer_6 = writer_6;
  this.updatedFileProperties_7 = updatedFileProperties_7;
  this.parentLocation_8 = parentLocation_8;
  this.parentBat_9 = parentBat_9;
  this.parentParentKey_10 = parentParentKey_10;
  this.crypto_11 = crypto_11;
  this.network_12 = network_12;
  this.props_13 = props_13;
  this.nextCap_14 = nextCap_14;
  this.streamSecret_15 = streamSecret_15;
}

defineClass(1639, $wnd.Function, $intern_22, CryptreeNode$lambda$79$Type);
_.apply_0 = function apply_2392(arg0){
  return $lambda$79_2(this.$$outer_0, this.cap_1, this.newCap_2, this.newDataKey_3, this.current_4, this.committer_5, this.writer_6, this.updatedFileProperties_7, this.parentLocation_8, this.parentBat_9, this.parentParentKey_10, this.crypto_11, this.network_12, this.props_13, this.nextCap_14, this.streamSecret_15, arg0);
}
;
function CryptreeNode$lambda$8$Type(network_0, us_1, version_2){
  this.network_0 = network_0;
  this.us_1 = us_1;
  this.version_2 = version_2;
}

defineClass(1572, $wnd.Function, $intern_22, CryptreeNode$lambda$8$Type);
_.apply_0 = function apply_2393(arg0){
  return lambda$8_9(this.network_0, this.us_1, this.version_2, arg0);
}
;
function CryptreeNode$lambda$80$Type($$outer_0, cap_1, newCap_2, newDataKey_3, current_4, committer_5, writer_6, updatedFileProperties_7, parentLocation_8, parentBat_9, parentParentKey_10, newNextCap_11, crypto_12, network_13, props_14, nextCap_15, streamSecret_16){
  this.$$outer_0 = $$outer_0;
  this.cap_1 = cap_1;
  this.newCap_2 = newCap_2;
  this.newDataKey_3 = newDataKey_3;
  this.current_4 = current_4;
  this.committer_5 = committer_5;
  this.writer_6 = writer_6;
  this.updatedFileProperties_7 = updatedFileProperties_7;
  this.parentLocation_8 = parentLocation_8;
  this.parentBat_9 = parentBat_9;
  this.parentParentKey_10 = parentParentKey_10;
  this.newNextCap_11 = newNextCap_11;
  this.crypto_12 = crypto_12;
  this.network_13 = network_13;
  this.props_14 = props_14;
  this.nextCap_15 = nextCap_15;
  this.streamSecret_16 = streamSecret_16;
}

defineClass(1640, $wnd.Function, $intern_22, CryptreeNode$lambda$80$Type);
_.apply_0 = function apply_2394(arg0){
  return $lambda$80(this.$$outer_0, this.cap_1, this.newCap_2, this.newDataKey_3, this.current_4, this.committer_5, this.writer_6, this.updatedFileProperties_7, this.parentLocation_8, this.parentBat_9, this.parentParentKey_10, this.newNextCap_11, this.crypto_12, this.network_13, this.props_14, this.nextCap_15, this.streamSecret_16, arg0);
}
;
function CryptreeNode$lambda$81$Type(){
}

defineClass(1641, $wnd.Function, {}, CryptreeNode$lambda$81$Type);
_.accept_5 = function accept_187(arg0){
}
;
function CryptreeNode$lambda$82$Type($$outer_0, cap_1, newCap_2, newDataKey_3, current_4, committer_5, writer_6, updatedFileProperties_7, parentLocation_8, parentBat_9, parentParentKey_10, newNextCap_11, crypto_12, network_13, props_14){
  this.$$outer_0 = $$outer_0;
  this.cap_1 = cap_1;
  this.newCap_2 = newCap_2;
  this.newDataKey_3 = newDataKey_3;
  this.current_4 = current_4;
  this.committer_5 = committer_5;
  this.writer_6 = writer_6;
  this.updatedFileProperties_7 = updatedFileProperties_7;
  this.parentLocation_8 = parentLocation_8;
  this.parentBat_9 = parentBat_9;
  this.parentParentKey_10 = parentParentKey_10;
  this.newNextCap_11 = newNextCap_11;
  this.crypto_12 = crypto_12;
  this.network_13 = network_13;
  this.props_14 = props_14;
}

defineClass(1642, $wnd.Function, $intern_22, CryptreeNode$lambda$82$Type);
_.apply_0 = function apply_2395(arg0){
  return $lambda$82_1(this.$$outer_0, this.cap_1, this.newCap_2, this.newDataKey_3, this.current_4, this.committer_5, this.writer_6, this.updatedFileProperties_7, this.parentLocation_8, this.parentBat_9, this.parentParentKey_10, this.newNextCap_11, this.crypto_12, this.network_13, this.props_14, arg0);
}
;
function CryptreeNode$lambda$83$Type($$outer_0, cap_1, newCap_2, chunkData_3, newDataKey_4, current_5, committer_6, writer_7, updatedFileProperties_8, parentLocation_9, parentBat_10, parentParentKey_11, newNextCap_12, crypto_13, network_14){
  this.$$outer_0 = $$outer_0;
  this.cap_1 = cap_1;
  this.newCap_2 = newCap_2;
  this.chunkData_3 = chunkData_3;
  this.newDataKey_4 = newDataKey_4;
  this.current_5 = current_5;
  this.committer_6 = committer_6;
  this.writer_7 = writer_7;
  this.updatedFileProperties_8 = updatedFileProperties_8;
  this.parentLocation_9 = parentLocation_9;
  this.parentBat_10 = parentBat_10;
  this.parentParentKey_11 = parentParentKey_11;
  this.newNextCap_12 = newNextCap_12;
  this.crypto_13 = crypto_13;
  this.network_14 = network_14;
}

defineClass(1644, $wnd.Function, $intern_22, CryptreeNode$lambda$83$Type);
_.apply_0 = function apply_2396(arg0){
  return $lambda$83(this.$$outer_0, this.cap_1, this.newCap_2, this.chunkData_3, this.newDataKey_4, this.current_5, this.committer_6, this.writer_7, this.updatedFileProperties_8, this.parentLocation_9, this.parentBat_10, this.parentParentKey_11, this.newNextCap_12, this.crypto_13, this.network_14);
}
;
function CryptreeNode$lambda$84$Type(){
}

defineClass(1645, $wnd.Function, {}, CryptreeNode$lambda$84$Type);
_.accept_5 = function accept_188(arg0){
}
;
function CryptreeNode$lambda$85$Type(network_0, committer_1, cap_2, nextCap_3, writer_4, newNextCap_5, streamSecret_6, updatedFileProperties_7, newDataKey_8, parentLocation_9, parentBat_10, parentParentKey_11, crypto_12){
  this.network_0 = network_0;
  this.committer_1 = committer_1;
  this.cap_2 = cap_2;
  this.nextCap_3 = nextCap_3;
  this.writer_4 = writer_4;
  this.newNextCap_5 = newNextCap_5;
  this.streamSecret_6 = streamSecret_6;
  this.updatedFileProperties_7 = updatedFileProperties_7;
  this.newDataKey_8 = newDataKey_8;
  this.parentLocation_9 = parentLocation_9;
  this.parentBat_10 = parentBat_10;
  this.parentParentKey_11 = parentParentKey_11;
  this.crypto_12 = crypto_12;
}

defineClass(1643, $wnd.Function, $intern_22, CryptreeNode$lambda$85$Type);
_.apply_0 = function apply_2397(arg0){
  return lambda$85_1(this.network_0, this.committer_1, this.cap_2, this.nextCap_3, this.writer_4, this.newNextCap_5, this.streamSecret_6, this.updatedFileProperties_7, this.newDataKey_8, this.parentLocation_9, this.parentBat_10, this.parentParentKey_11, this.crypto_12, arg0);
}
;
function CryptreeNode$lambda$86$Type(network_0, committer_1, cap_2, nextCap_3, writer_4, updated_5, newNextCap_6, streamSecret_7, updatedFileProperties_8, newDataKey_9, parentLocation_10, parentBat_11, parentParentKey_12, crypto_13){
  this.network_0 = network_0;
  this.committer_1 = committer_1;
  this.cap_2 = cap_2;
  this.nextCap_3 = nextCap_3;
  this.writer_4 = writer_4;
  this.updated_5 = updated_5;
  this.newNextCap_6 = newNextCap_6;
  this.streamSecret_7 = streamSecret_7;
  this.updatedFileProperties_8 = updatedFileProperties_8;
  this.newDataKey_9 = newDataKey_9;
  this.parentLocation_10 = parentLocation_10;
  this.parentBat_11 = parentBat_11;
  this.parentParentKey_12 = parentParentKey_12;
  this.crypto_13 = crypto_13;
}

defineClass(1646, $wnd.Function, $intern_22, CryptreeNode$lambda$86$Type);
_.apply_0 = function apply_2398(arg0){
  return lambda$86_0(this.network_0, this.committer_1, this.cap_2, this.nextCap_3, this.writer_4, this.updated_5, this.newNextCap_6, this.streamSecret_7, this.updatedFileProperties_8, this.newDataKey_9, this.parentLocation_10, this.parentBat_11, this.parentParentKey_12, this.crypto_13, arg0);
}
;
function CryptreeNode$lambda$87$Type(network_0, committer_1, mOpt_2, cap_3, nextCap_4, writer_5){
  this.network_0 = network_0;
  this.committer_1 = committer_1;
  this.mOpt_2 = mOpt_2;
  this.cap_3 = cap_3;
  this.nextCap_4 = nextCap_4;
  this.writer_5 = writer_5;
}

defineClass(1647, $wnd.Function, $intern_22, CryptreeNode$lambda$87$Type);
_.apply_0 = function apply_2399(arg0){
  return lambda$87_1(this.network_0, this.committer_1, this.mOpt_2, this.cap_3, this.nextCap_4, this.writer_5, arg0);
}
;
function CryptreeNode$lambda$88$Type(network_0, snapshot_1, committer_2, mOpt_3, cap_4, nextCap_5, writer_6){
  this.network_0 = network_0;
  this.snapshot_1 = snapshot_1;
  this.committer_2 = committer_2;
  this.mOpt_3 = mOpt_3;
  this.cap_4 = cap_4;
  this.nextCap_5 = nextCap_5;
  this.writer_6 = writer_6;
}

defineClass(1648, $wnd.Function, $intern_22, CryptreeNode$lambda$88$Type);
_.apply_0 = function apply_2400(arg0){
  return lambda$88_1(this.network_0, this.snapshot_1, this.committer_2, this.mOpt_3, this.cap_4, this.nextCap_5, this.writer_6, arg0);
}
;
function CryptreeNode$lambda$89$Type($$outer_0, committer_1, signer_2, mirrorBat_3, network_4, crypto_5, us_6, current_7, targetCAPs_8){
  this.$$outer_0 = $$outer_0;
  this.committer_1 = committer_1;
  this.signer_2 = signer_2;
  this.mirrorBat_3 = mirrorBat_3;
  this.network_4 = network_4;
  this.crypto_5 = crypto_5;
  this.us_6 = us_6;
  this.current_7 = current_7;
  this.targetCAPs_8 = targetCAPs_8;
}

defineClass(1587, $wnd.Function, $intern_22, CryptreeNode$lambda$89$Type);
_.apply_0 = function apply_2401(arg0){
  return $lambda$89_1(this.$$outer_0, this.committer_1, this.signer_2, this.mirrorBat_3, this.network_4, this.crypto_5, this.us_6, this.current_7, this.targetCAPs_8, arg0);
}
;
function CryptreeNode$lambda$9$Type(network_0, us_1, version_2){
  this.network_0 = network_0;
  this.us_1 = us_1;
  this.version_2 = version_2;
}

defineClass(1605, $wnd.Function, $intern_22, CryptreeNode$lambda$9$Type);
_.apply_0 = function apply_2402(arg0){
  return lambda$9_9(this.network_0, this.us_1, this.version_2, arg0);
}
;
function CryptreeNode$lambda$90$Type($$outer_0, committer_1, signer_2, mirrorBat_3, network_4, crypto_5, us_6, current_7, targetCAPs_8, children_9){
  this.$$outer_0 = $$outer_0;
  this.committer_1 = committer_1;
  this.signer_2 = signer_2;
  this.mirrorBat_3 = mirrorBat_3;
  this.network_4 = network_4;
  this.crypto_5 = crypto_5;
  this.us_6 = us_6;
  this.current_7 = current_7;
  this.targetCAPs_8 = targetCAPs_8;
  this.children_9 = children_9;
}

defineClass(1649, $wnd.Function, $intern_22, CryptreeNode$lambda$90$Type);
_.apply_0 = function apply_2403(arg0){
  return $lambda$90_1(this.$$outer_0, this.committer_1, this.signer_2, this.mirrorBat_3, this.network_4, this.crypto_5, this.us_6, this.current_7, this.targetCAPs_8, this.children_9, arg0);
}
;
function CryptreeNode$lambda$91$Type($$outer_0, committer_1, signer_2, mirrorBat_3, network_4, crypto_5, us_6, addToNext_7){
  this.$$outer_0 = $$outer_0;
  this.committer_1 = committer_1;
  this.signer_2 = signer_2;
  this.mirrorBat_3 = mirrorBat_3;
  this.network_4 = network_4;
  this.crypto_5 = crypto_5;
  this.us_6 = us_6;
  this.addToNext_7 = addToNext_7;
}

defineClass(1651, $wnd.Function, $intern_22, CryptreeNode$lambda$91$Type);
_.apply_0 = function apply_2404(arg0){
  return $lambda$91(this.$$outer_0, this.committer_1, this.signer_2, this.mirrorBat_3, this.network_4, this.crypto_5, this.us_6, this.addToNext_7, arg0);
}
;
function CryptreeNode$lambda$92$Type(committer_0, remaining_1, signer_2, mirrorBat_3, network_4, crypto_5, newBase_6, us_7, nextSubfoldersKey_8, parentCap_9, ourParentKey_10, nextChunk_11, addToNextChunk_12){
  this.committer_0 = committer_0;
  this.remaining_1 = remaining_1;
  this.signer_2 = signer_2;
  this.mirrorBat_3 = mirrorBat_3;
  this.network_4 = network_4;
  this.crypto_5 = crypto_5;
  this.newBase_6 = newBase_6;
  this.us_7 = us_7;
  this.nextSubfoldersKey_8 = nextSubfoldersKey_8;
  this.parentCap_9 = parentCap_9;
  this.ourParentKey_10 = ourParentKey_10;
  this.nextChunk_11 = nextChunk_11;
  this.addToNextChunk_12 = addToNextChunk_12;
}

defineClass(1652, $wnd.Function, $intern_22, CryptreeNode$lambda$92$Type);
_.apply_0 = function apply_2405(arg0){
  return lambda$92_0(this.committer_0, this.remaining_1, this.signer_2, this.mirrorBat_3, this.network_4, this.crypto_5, this.newBase_6, this.us_7, this.nextSubfoldersKey_8, this.parentCap_9, this.ourParentKey_10, this.nextChunk_11, this.addToNextChunk_12, arg0);
}
;
function CryptreeNode$lambda$93$Type(committer_0, remaining_1, signer_2, mirrorBat_3, network_4, crypto_5, newBase_6, us_7, nextMapKeyAndBat_8, nextSubfoldersKey_9){
  this.committer_0 = committer_0;
  this.remaining_1 = remaining_1;
  this.signer_2 = signer_2;
  this.mirrorBat_3 = mirrorBat_3;
  this.network_4 = network_4;
  this.crypto_5 = crypto_5;
  this.newBase_6 = newBase_6;
  this.us_7 = us_7;
  this.nextMapKeyAndBat_8 = nextMapKeyAndBat_8;
  this.nextSubfoldersKey_9 = nextSubfoldersKey_9;
}

defineClass(1653, $wnd.Function, $intern_22, CryptreeNode$lambda$93$Type);
_.apply_0 = function apply_2406(arg0){
  return lambda$93_1(this.committer_0, this.remaining_1, this.signer_2, this.mirrorBat_3, this.network_4, this.crypto_5, this.newBase_6, this.us_7, this.nextMapKeyAndBat_8, this.nextSubfoldersKey_9, arg0);
}
;
function CryptreeNode$lambda$94$Type(committer_0, remaining_1, nextPointer_2, signer_3, mirrorBat_4, network_5, crypto_6, next_7, newBase_8){
  this.committer_0 = committer_0;
  this.remaining_1 = remaining_1;
  this.nextPointer_2 = nextPointer_2;
  this.signer_3 = signer_3;
  this.mirrorBat_4 = mirrorBat_4;
  this.network_5 = network_5;
  this.crypto_6 = crypto_6;
  this.next_7 = next_7;
  this.newBase_8 = newBase_8;
}

defineClass(1654, $wnd.Function, $intern_22, CryptreeNode$lambda$94$Type);
_.apply_0 = function apply_2407(arg0){
  return lambda$94_3(this.committer_0, this.remaining_1, this.nextPointer_2, this.signer_3, this.mirrorBat_4, this.network_5, this.crypto_6, this.next_7, this.newBase_8, arg0);
}
;
function CryptreeNode$lambda$95$Type(committer_0, remaining_1, nextPointer_2, signer_3, mirrorBat_4, network_5, crypto_6){
  this.committer_0 = committer_0;
  this.remaining_1 = remaining_1;
  this.nextPointer_2 = nextPointer_2;
  this.signer_3 = signer_3;
  this.mirrorBat_4 = mirrorBat_4;
  this.network_5 = network_5;
  this.crypto_6 = crypto_6;
}

defineClass(1655, $wnd.Function, $intern_22, CryptreeNode$lambda$95$Type);
_.apply_0 = function apply_2408(arg0){
  return lambda$95_4(this.committer_0, this.remaining_1, this.nextPointer_2, this.signer_3, this.mirrorBat_4, this.network_5, this.crypto_6, arg0);
}
;
function CryptreeNode$lambda$96$Type(updatedBase_0, committer_1, remaining_2, nextPointer_3, signer_4, mirrorBat_5, network_6, crypto_7){
  this.updatedBase_0 = updatedBase_0;
  this.committer_1 = committer_1;
  this.remaining_2 = remaining_2;
  this.nextPointer_3 = nextPointer_3;
  this.signer_4 = signer_4;
  this.mirrorBat_5 = mirrorBat_5;
  this.network_6 = network_6;
  this.crypto_7 = crypto_7;
}

defineClass(1656, $wnd.Function, $intern_22, CryptreeNode$lambda$96$Type);
_.apply_0 = function apply_2409(arg0){
  return lambda$96_4(this.updatedBase_0, this.committer_1, this.remaining_2, this.nextPointer_3, this.signer_4, this.mirrorBat_5, this.network_6, this.crypto_7, arg0);
}
;
function CryptreeNode$lambda$97$Type($$outer_0, current_1, committer_2, us_3, signer_4, network_5, newFiles_6, crypto_7){
  this.$$outer_0 = $$outer_0;
  this.current_1 = current_1;
  this.committer_2 = committer_2;
  this.us_3 = us_3;
  this.signer_4 = signer_4;
  this.network_5 = network_5;
  this.newFiles_6 = newFiles_6;
  this.crypto_7 = crypto_7;
}

defineClass(1650, $wnd.Function, $intern_22, CryptreeNode$lambda$97$Type);
_.apply_0 = function apply_2410(arg0){
  return $lambda$97(this.$$outer_0, this.current_1, this.committer_2, this.us_3, this.signer_4, this.network_5, this.newFiles_6, this.crypto_7, arg0);
}
;
function CryptreeNode$lambda$98$Type(current_0, committer_1, us_2, signer_3, network_4, tid_5){
  this.current_0 = current_0;
  this.committer_1 = committer_1;
  this.us_2 = us_2;
  this.signer_3 = signer_3;
  this.network_4 = network_4;
  this.tid_5 = tid_5;
}

defineClass(1657, $wnd.Function, $intern_22, CryptreeNode$lambda$98$Type);
_.apply_0 = function apply_2411(arg0){
  return lambda$98_1(this.current_0, this.committer_1, this.us_2, this.signer_3, this.network_4, this.tid_5, arg0);
}
;
function $clinit_Erasure(){
  $clinit_Erasure = emptyMethod;
  LOG_8 = ($clinit_Logger() , getLogger());
}

function convert_0(in_0){
  var i, res;
  res = initUnidimensionalArray(I_classLit, $intern_29, 8, in_0.length, 15, 1);
  for (i = 0; i < in_0.length; i++)
    res[i] = 255 & in_0[i];
  return res;
}

function convert_1(in_0){
  var i, res;
  res = initUnidimensionalArray(B_classLit, $intern_28, 8, in_0.length, 15, 1);
  for (i = 0; i < in_0.length; i++)
    res[i] = in_0[i] << 24 >> 24;
  return res;
}

function recombine_2(f, encoded, truncateTo, originalBlobs, allowedFailures){
  var bout, decodedInts, encodeSize, i, i0, inputSize, j, k, n, nec, raw, res, res0, symbolSize, t1, t2, tbSize;
  t1 = ($clinit_System() , fromDouble_0(Date.now()));
  try {
    n = originalBlobs + allowedFailures * 2;
    encodeSize = (256 / n | 0) * n;
    inputSize = encodeSize * originalBlobs / n | 0;
    nec = encodeSize - inputSize;
    symbolSize = inputSize / originalBlobs | 0;
    if (encoded.length == 0)
      return initUnidimensionalArray(B_classLit, $intern_28, 8, 0, 15, 1);
    tbSize = encoded[0].length;
    for (k = 0; k < originalBlobs; k++) {
      if (encoded[k] == null || encoded[k].length == 0)
        break;
      if (k == originalBlobs - 1) {
        res0 = new ByteArrayOutputStream;
        for (i0 = 0; i0 < tbSize; i0 += symbolSize) {
          for (j = 0; j < originalBlobs; j++)
            $write_2(res0, encoded[j], i0, symbolSize);
        }
        return copyOfRange($toByteArray(res0), 0, truncateTo);
      }
    }
    res = new ByteArrayOutputStream;
    for (i = 0; i < tbSize; i += symbolSize) {
      bout = new ByteArrayOutputStream;
      for (j = 0; j < n; j++)
        $write_2(bout, encoded[j], i, symbolSize);
      decodedInts = decode_9(convert_0($toByteArray(bout)), nec, f);
      raw = convert_1(decodedInts);
      $write_2(res, raw, 0, inputSize);
    }
    return copyOfRange($toByteArray(res), 0, truncateTo);
  }
   finally {
    t2 = fromDouble_0(Date.now());
    $info(LOG_8, 'Erasure decoding took ' + toString_4(sub_1(t2, t1)) + ' mS');
  }
}

function recombine_3(encoded, truncateTo, originalBlobs, allowedFailures){
  $clinit_Erasure();
  return recombine_2(new GaloisField256, encoded, truncateTo, originalBlobs, allowedFailures);
}

function split_6(input_0, originalBlobs, allowedFailures){
  $clinit_Erasure();
  return split_7(input_0, new GaloisField256, originalBlobs, allowedFailures);
}

function split_7(input_0, f, originalBlobs, allowedFailures){
  var bouts, copy, encodeSize, encoded, i, i0, i1, inputSize, ints, j, n, nec, res, symbolSize, t1, t2;
  t1 = ($clinit_System() , fromDouble_0(Date.now()));
  ints = convert_0(input_0);
  n = originalBlobs + allowedFailures * 2;
  bouts = initUnidimensionalArray(Ljava_io_ByteArrayOutputStream_2_classLit, $intern_0, 101, n, 0, 1);
  for (i0 = 0; i0 < bouts.length; i0++)
    bouts[i0] = new ByteArrayOutputStream;
  encodeSize = (256 / n | 0) * n;
  inputSize = encodeSize * originalBlobs / n | 0;
  nec = encodeSize - inputSize;
  symbolSize = inputSize / originalBlobs | 0;
  if (symbolSize * originalBlobs != inputSize)
    throw toJs(new IllegalStateException_0('Bad alignment of bytes in chunking. ' + inputSize + ' != ' + symbolSize + ' * ' + originalBlobs));
  for (i1 = 0; i1 < ints.length; i1 += inputSize) {
    copy = copyOfRange_1(ints, i1, i1 + inputSize);
    encoded = convert_1(encode_13(copy, nec, f));
    for (j = 0; j < n; j++) {
      $write_2(bouts[j], encoded, j * symbolSize, symbolSize);
    }
  }
  res = initUnidimensionalArray(B_classLit, $intern_0, 11, n, 0, 2);
  for (i = 0; i < n; i++)
    res[i] = $toByteArray(bouts[i]);
  t2 = fromDouble_0(Date.now());
  $info(LOG_8, 'Erasure encoding took ' + toString_4(sub_1(t2, t1)) + ' mS');
  return res;
}

var LOG_8;
defineClass(1242, 1, {});
var Lpeergos_shared_user_fs_erasure_GaloisField_2_classLit = createForClass('peergos.shared.user.fs.erasure', 'GaloisField', 1242);
function $clinit_GaloisField256(){
  $clinit_GaloisField256 = emptyMethod;
  var i, i0, i1, x_0;
  exp_1 = initUnidimensionalArray(I_classLit, $intern_29, 8, 512, 15, 1);
  log_0 = initUnidimensionalArray(I_classLit, $intern_29, 8, 256, 15, 1);
  exp_1[0] = 1;
  x_0 = 1;
  for (i0 = 1; i0 < 255; i0++) {
    x_0 <<= 1;
    (x_0 & 256) != 0 && (x_0 ^= 285);
    exp_1[i0] = x_0;
    log_0[x_0] = i0;
  }
  for (i1 = 255; i1 < 512; i1++)
    exp_1[i1] = exp_1[i1 - 255];
  for (i = 0; i < 255; i++) {
    if (log_0[exp_1[i]] != i)
      throw toJs(new IllegalStateException_0('log[exp[' + i + ']] != ' + i + ', exp[' + i + '] = ' + exp_1[i] + ', log[' + exp_1[i] + '] = ' + log_0[exp_1[i]]));
    if (i > 0 && exp_1[log_0[i]] != i)
      throw toJs(new IllegalStateException_0('exp[log[' + i + ']] != ' + i));
  }
}

function $div(x_0, y_0){
  if (y_0 == 0)
    throw toJs(new IllegalStateException_0('Divided by zero! Blackhole created.. '));
  if (x_0 == 0)
    return 0;
  return exp_1[log_0[x_0] + 255 - log_0[y_0]];
}

function $exp(y_0){
  return exp_1[y_0];
}

function $mul(x_0, y_0){
  if (x_0 == 0 || y_0 == 0)
    return 0;
  return exp_1[log_0[x_0] + log_0[y_0]];
}

function GaloisField256(){
  $clinit_GaloisField256();
}

defineClass(529, 1242, {}, GaloisField256);
var exp_1, log_0;
var Lpeergos_shared_user_fs_erasure_GaloisField256_2_classLit = createForClass('peergos.shared.user.fs.erasure', 'GaloisField256', 529);
function $clinit_GaloisPolynomial(){
  $clinit_GaloisPolynomial = emptyMethod;
  memoized = new HashMap;
}

function $add_8(this$static, other){
  var i, i0, res;
  res = initUnidimensionalArray(I_classLit, $intern_29, 8, $wnd.Math.max(this$static.coefficients.length, other.coefficients.length), 15, 1);
  for (i0 = 0; i0 < this$static.coefficients.length; i0++)
    res[i0 + res.length - this$static.coefficients.length] = this$static.coefficients[i0];
  for (i = 0; i < other.coefficients.length; i++)
    res[i + res.length - other.coefficients.length] ^= other.coefficients[i];
  return new GaloisPolynomial(res, this$static.f);
}

function $eval(this$static, x_0){
  var i, y_0;
  y_0 = this$static.coefficients[0];
  for (i = 1; i < this$static.coefficients.length; i++)
    y_0 = $mul(y_0, x_0) ^ this$static.coefficients[i];
  return y_0;
}

function $mul_0(this$static, other){
  var i, j, res;
  res = initUnidimensionalArray(I_classLit, $intern_29, 8, this$static.coefficients.length + other.coefficients.length - 1, 15, 1);
  for (i = 0; i < this$static.coefficients.length; i++)
    for (j = 0; j < other.coefficients.length; j++)
      res[i + j] ^= $mul(this$static.coefficients[i], other.coefficients[j]);
  return new GaloisPolynomial(res, this$static.f);
}

function $scale(this$static, x_0){
  var i, res;
  res = initUnidimensionalArray(I_classLit, $intern_29, 8, this$static.coefficients.length, 15, 1);
  for (i = 0; i < res.length; i++)
    res[i] = $mul(x_0, this$static.coefficients[i]);
  return new GaloisPolynomial(res, this$static.f);
}

function GaloisPolynomial(coefficients, f){
  if (coefficients.length > 256)
    throw toJs(new IllegalStateException_0('Polynomial order must be less than or equal to the degree of the Galois field.'));
  this.coefficients = coefficients;
  this.f = f;
}

function correctErrata(input_0, synd, pos, f){
  var i, i$iterator, i$iterator0, i0, i1, i2, p, q, qprime, t, x_0, y_0, z_0;
  if (pos.size_0 == 0)
    return;
  q = new GaloisPolynomial(stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [1]), f);
  for (i$iterator0 = $listIterator(pos, 0); i$iterator0.currentNode != i$iterator0.this$01.tail;) {
    i0 = castTo($next_4(i$iterator0), 100).value_0;
    x_0 = $exp(input_0.length - 1 - i0);
    q = $mul_0(q, new GaloisPolynomial(stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [x_0, 1]), f));
  }
  t = initUnidimensionalArray(I_classLit, $intern_29, 8, pos.size_0, 15, 1);
  for (i1 = 0; i1 < t.length; i1++)
    t[i1] = synd[t.length - 1 - i1];
  p = $mul_0(new GaloisPolynomial(t, f), q);
  t = initUnidimensionalArray(I_classLit, $intern_29, 8, pos.size_0, 15, 1);
  arraycopy(p.coefficients, p.coefficients.length - t.length, t, 0, t.length);
  p = new GaloisPolynomial(t, f);
  t = initUnidimensionalArray(I_classLit, $intern_29, 8, (q.coefficients.length - (q.coefficients.length & 1)) / 2 | 0, 15, 1);
  for (i2 = q.coefficients.length & 1; i2 < q.coefficients.length; i2 += 2)
    t[i2 / 2 | 0] = q.coefficients[i2];
  qprime = new GaloisPolynomial(t, f);
  for (i$iterator = $listIterator(pos, 0); i$iterator.currentNode != i$iterator.this$01.tail;) {
    i = castTo($next_4(i$iterator), 100).value_0;
    x_0 = $exp(i + 256 - input_0.length);
    y_0 = $eval(p, x_0);
    z_0 = $eval(qprime, $mul(x_0, x_0));
    input_0[i] ^= $div(y_0, $mul(x_0, z_0));
  }
}

function decode_9(message, nec, f){
  $clinit_GaloisPolynomial();
  var errPos, i, i$array, i$index, i$max, max_0, out, synd;
  out = copyOf_0(message, message.length);
  synd = syndromes(out, nec, f);
  max_0 = 0;
  for (i$array = synd , i$index = 0 , i$max = i$array.length; i$index < i$max; ++i$index) {
    i = i$array[i$index];
    i > max_0 && (max_0 = i);
  }
  if (max_0 == 0)
    return out;
  errPos = findErrors(synd, out.length, f);
  correctErrata(out, synd, errPos, f);
  return out;
}

function encode_13(input_0, nEC, f){
  $clinit_GaloisPolynomial();
  var c, gen, i, j, res;
  gen = generator_0(nEC, f);
  res = initUnidimensionalArray(I_classLit, $intern_29, 8, input_0.length + nEC, 15, 1);
  arraycopy(input_0, 0, res, 0, input_0.length);
  for (i = 0; i < input_0.length; i++) {
    c = res[i];
    if (c != 0)
      for (j = 0; j < gen.coefficients.length; j++)
        res[i + j] ^= $mul(gen.coefficients[j], c);
  }
  arraycopy(input_0, 0, res, 0, input_0.length);
  return res;
}

function findErrors(synd, nmess, f){
  var delta, errPoly, errorPos, errs, i, i0, j, newPoly, oldPoly, res;
  errPoly = new GaloisPolynomial(stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [1]), f);
  oldPoly = new GaloisPolynomial(stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [1]), f);
  for (i0 = 0; i0 < synd.length; i0++) {
    oldPoly = (res = initUnidimensionalArray(I_classLit, $intern_29, 8, oldPoly.coefficients.length + 1, 15, 1) , arraycopy(oldPoly.coefficients, 0, res, 0, oldPoly.coefficients.length) , res[res.length - 1] = 0 , new GaloisPolynomial(res, oldPoly.f));
    delta = synd[i0];
    for (j = 1; j < errPoly.coefficients.length; j++)
      delta ^= $mul(errPoly.coefficients[errPoly.coefficients.length - 1 - j], synd[i0 - j]);
    if (delta != 0) {
      if (oldPoly.coefficients.length > errPoly.coefficients.length) {
        newPoly = $scale(oldPoly, delta);
        oldPoly = $scale(errPoly, $div(1, delta));
        errPoly = newPoly;
      }
      errPoly = $add_8(errPoly, $scale(oldPoly, delta));
    }
  }
  errs = errPoly.coefficients.length - 1;
  if (2 * errs > synd.length)
    throw toJs(new IllegalStateException_0('Too many errors to correct! (' + errs + ')'));
  errorPos = new LinkedList;
  for (i = 0; i < nmess; i++)
    $eval(errPoly, ($clinit_GaloisField256() , exp_1)[255 - i]) == 0 && $add_2(errorPos, valueOf_1(nmess - 1 - i));
  if (errorPos.size_0 != errs)
    throw toJs(new IllegalStateException_0("couldn't find error positions! (" + errorPos.size_0 + '!=' + errs + ') ( missing fragments)'));
  return errorPos;
}

function generator_0(nECSymbols, f){
  var g, i;
  if ($containsKey(memoized, valueOf_1(nECSymbols)))
    return castTo($get(memoized, valueOf_1(nECSymbols)), 139);
  g = new GaloisPolynomial(stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [1]), f);
  for (i = 0; i < nECSymbols; i++)
    g = $mul_0(g, new GaloisPolynomial(stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [1, ($clinit_GaloisField256() , exp_1)[i]]), f));
  $put(memoized, valueOf_1(nECSymbols), g);
  return g;
}

function syndromes(input_0, nEC, f){
  var i, poly, res;
  res = initUnidimensionalArray(I_classLit, $intern_29, 8, nEC, 15, 1);
  poly = new GaloisPolynomial(input_0, f);
  for (i = 0; i < nEC; i++)
    res[i] = $eval(poly, ($clinit_GaloisField256() , exp_1)[i]);
  return res;
}

defineClass(139, 1, {139:1}, GaloisPolynomial);
var memoized;
var Lpeergos_shared_user_fs_erasure_GaloisPolynomial_2_classLit = createForClass('peergos.shared.user.fs.erasure', 'GaloisPolynomial', 139);
function buildFileUploadTransaction(path, fileSize, props, streamSecret, baseKey, dataKey, writeKey, writer, firstChunkLocation, firstBat, h){
  return $thenApply($hash(h, $getBytes(path, ($clinit_EmulatedCharset() , UTF_8_0)), true), makeLambdaFunction(Transaction$lambda$0$Type.prototype.apply_0, Transaction$lambda$0$Type, [path, props, writer, firstChunkLocation, firstBat, fileSize, baseKey, dataKey, writeKey, streamSecret]));
}

function deserialize_1(data_0, filename){
  var cborObject, map_0, type_0;
  cborObject = deserialize(new CborDecoder(new ByteArrayInputStream(data_0)), data_0.length);
  map_0 = castTo(cborObject, 18);
  type_0 = valueOf_17(castTo(castTo($get_0(map_0.values_0, new CborObject$CborString('type')), 7), 13).value_0);
  switch (type_0.ordinal_0) {
    case 0:
      return fromCbor_110(map_0, filename);
    default:throw toJs(new IllegalStateException_0('Unimplemented type ' + type_0));
  }
}

function lambda$0_31(path_0, props_1, writer_2, firstChunkLocation_3, firstBat_4, fileSize_5, baseKey_7, dataKey_8, writeKey_9, streamSecret_10, cid_10){
  return new FileUploadTransaction(($clinit_System() , fromDouble_0(Date.now())), path_0, cid_10.toString(), props_1, writer_2, firstChunkLocation_3, firstBat_4, fileSize_5, baseKey_7, dataKey_8, writeKey_9, streamSecret_10);
}

function $clear_7(this$static, version, committer, network, h){
  return $thenApply(reduceAll_0(range_1(div(sub_1(add_1(this$static.size_0, $intern_70), 1), $intern_70)).boxed(), new Pair(version, this$static.firstChunk), new FileUploadTransaction$lambda$1$Type(this$static, h, committer, network), new FileUploadTransaction$lambda$2$Type), makeLambdaFunction(FileUploadTransaction$lambda$5$Type.prototype.apply_0, FileUploadTransaction$lambda$5$Type, []));
}

function $clear_8(this$static, version, committer, networkAccess, location_0){
  return call_2(this$static.owner, makeLambdaFunction(FileUploadTransaction$lambda$0$Type.prototype.apply_0, FileUploadTransaction$lambda$0$Type, [this$static, networkAccess, version, committer, location_0]), networkAccess.dhtClient);
}

function $lambda$0_37(this$static, networkAccess_1, version_2, committer_3, location_4, tid_4){
  return $deleteChunkIfPresent(networkAccess_1, version_2, committer_3, location_4.owner, this$static.writer, copyOf(location_4.mapKey, location_4.mapKey.length), tid_4);
}

function $lambda$1_28(this$static, h_1, committer_2, network_3, p_3){
  return $thenCompose($clear_8(this$static, castTo(p_3.left, 43), committer_2, network_3, castTo(p_3.right, 92)), makeLambdaFunction(FileUploadTransaction$lambda$3$Type.prototype.apply_0, FileUploadTransaction$lambda$3$Type, [this$static, p_3, h_1]));
}

function $lambda$3_27(this$static, p_1, h_2, s_2){
  return $thenApply(calculateNextMapKey(this$static.streamSecret, $getMapKey_0(castTo(p_1.right, 92)), ($clinit_Optional() , $clinit_Optional() , EMPTY), h_2), makeLambdaFunction(FileUploadTransaction$lambda$4$Type.prototype.apply_0, FileUploadTransaction$lambda$4$Type, [this$static, s_2]));
}

function $lambda$4_20(this$static, s_1, mapKey_1){
  return new Pair(s_1, $withMapKey_0(this$static.firstChunk, castTo(mapKey_1.left, 11)));
}

function $startTime(this$static){
  return ofEpochSecond(div(this$static.startTimeEpochMillis, $intern_49), toInt_0(mod_0(this$static.startTimeEpochMillis, $intern_49)) * $intern_50, ($clinit_ZoneOffset() , UTC_0));
}

function $toCbor_103(this$static){
  var map_0, transformed;
  map_0 = new HashMap;
  $putStringValue(map_0, 'type', new CborObject$CborString($name(($clinit_Transaction$Type() , FILE_UPLOAD))));
  $putStringValue(map_0, 'path', new CborObject$CborString(this$static.path));
  $putStringValue(map_0, 'startTimeEpochMs', new CborObject$CborLong(this$static.startTimeEpochMillis));
  $putStringValue(map_0, 'owner', this$static.owner);
  $putStringValue(map_0, 'writer', this$static.writer);
  $putStringValue(map_0, 'baseKey', this$static.baseKey);
  $putStringValue(map_0, 'dataKey', this$static.dataKey);
  $putStringValue(map_0, 'writeKey', this$static.writeKey);
  $putStringValue(map_0, 'props', this$static.props);
  $ifPresent(this$static.firstBat, new FileUploadTransaction$lambda$6$Type(map_0));
  $putStringValue(map_0, 'mapKey', new CborObject$CborByteArray($getMapKey_0(this$static.firstChunk)));
  $putStringValue(map_0, 'streamSecret', new CborObject$CborByteArray(this$static.streamSecret));
  $putStringValue(map_0, 'size', new CborObject$CborLong(this$static.size_0));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new AbstractHashMap$EntrySet(map_0), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function $writeCap(this$static){
  return new WritableAbsoluteCapability(this$static.owner, this$static.writer.publicKeyHash, $getMapKey_0(this$static.firstChunk), this$static.firstBat, this$static.baseKey, this$static.writeKey);
}

function FileUploadTransaction(startTimeEpochMillis, path, name_0, props, writer, firstChunk, firstBat, size_0, baseKey, dataKey, writeKey, streamSecret){
  this.startTimeEpochMillis = startTimeEpochMillis;
  this.path = path;
  this.name_0 = name_0;
  this.props = props;
  this.writer = writer;
  this.firstChunk = firstChunk;
  this.firstBat = firstBat;
  this.size_0 = size_0;
  this.baseKey = baseKey;
  this.dataKey = dataKey;
  this.writeKey = writeKey;
  this.streamSecret = streamSecret;
  this.owner = firstChunk.owner;
}

function fromCbor_110(map_0, filename){
  var isFileUpload, owner, path, size_0, startTimeEpochMs, streamSecrets, type_0, writer;
  type_0 = valueOf_17(castTo(castTo($get_0(map_0.values_0, new CborObject$CborString('type')), 7), 13).value_0);
  isFileUpload = type_0 == ($clinit_Transaction$Type() , FILE_UPLOAD);
  if (!isFileUpload)
    throw toJs(new IllegalStateException_0('Cannot parse transaction: wrong type ' + type_0));
  owner = castTo($getObject(map_0, 'owner', makeLambdaFunction(FileUploadTransaction$0methodref$fromCbor$Type.prototype.apply_0, FileUploadTransaction$0methodref$fromCbor$Type, [])), 55);
  writer = castTo($getObject(map_0, 'writer', makeLambdaFunction(FileUploadTransaction$1methodref$fromCbor$Type.prototype.apply_0, FileUploadTransaction$1methodref$fromCbor$Type, [])), 105);
  if (!$containsKey_0(map_0.values_0, new CborObject$CborString('streamSecret')))
    throw toJs(new IllegalStateException_0('Invalid upload transaction'));
  startTimeEpochMs = castTo(castTo($get_0(map_0.values_0, new CborObject$CborString('startTimeEpochMs')), 7), 29).value_0;
  path = castTo(castTo($get_0(map_0.values_0, new CborObject$CborString('path')), 7), 13).value_0;
  size_0 = castTo(castTo($get_0(map_0.values_0, new CborObject$CborString('size')), 7), 29).value_0;
  streamSecrets = castTo(castTo($get_0(map_0.values_0, new CborObject$CborString('streamSecret')), 7), 27).value_0;
  if (!$containsKey_0(map_0.values_0, new CborObject$CborString('props')))
    return new FileUploadTransaction(startTimeEpochMs, path, filename, null, writer, new Location_0(owner, writer.publicKeyHash, castTo(castTo($get_0(map_0.values_0, new CborObject$CborString('mapKey')), 7), 27).value_0), null, size_0, null, null, null, streamSecrets);
  return new FileUploadTransaction(startTimeEpochMs, path, filename, castTo($get_13(map_0, 'props', makeLambdaFunction(FileUploadTransaction$2methodref$fromCbor$Type.prototype.apply_0, FileUploadTransaction$2methodref$fromCbor$Type, [])), 96), writer, new Location_0(owner, writer.publicKeyHash, castTo(castTo($get_0(map_0.values_0, new CborObject$CborString('mapKey')), 7), 27).value_0), $getOptional(map_0, 'firstBat', makeLambdaFunction(FileUploadTransaction$3methodref$fromCbor$Type.prototype.apply_0, FileUploadTransaction$3methodref$fromCbor$Type, [])), size_0, castTo($getObject(map_0, 'baseKey', makeLambdaFunction(FileUploadTransaction$4methodref$fromCbor$Type.prototype.apply_0, FileUploadTransaction$4methodref$fromCbor$Type, [])), 88), castTo($getObject(map_0, 'dataKey', makeLambdaFunction(FileUploadTransaction$5methodref$fromCbor$Type.prototype.apply_0, FileUploadTransaction$5methodref$fromCbor$Type, [])), 88), castTo($getObject(map_0, 'writeKey', makeLambdaFunction(FileUploadTransaction$6methodref$fromCbor$Type.prototype.apply_0, FileUploadTransaction$6methodref$fromCbor$Type, [])), 88), streamSecrets);
}

defineClass(144, 1, {7:1, 144:1, 1267:1}, FileUploadTransaction);
_.serialize = function serialize_136(){
  return $toByteArray_2($toCbor_103(this));
}
;
_.getPath = function getPath(){
  return this.path;
}
;
_.targetFilename = function targetFilename(){
  var path;
  return path = get_176(this.path, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, [])) , $getFileName(path).pathString;
}
;
_.toCbor = function toCbor_134(){
  return $toCbor_103(this);
}
;
_.size_0 = 0;
_.startTimeEpochMillis = 0;
var Lpeergos_shared_user_fs_transaction_FileUploadTransaction_2_classLit = createForClass('peergos.shared.user.fs.transaction', 'FileUploadTransaction', 144);
function FileUploadTransaction$0methodref$fromCbor$Type(){
}

defineClass(2618, $wnd.Function, $intern_22, FileUploadTransaction$0methodref$fromCbor$Type);
_.apply_0 = function apply_2412(arg0){
  return fromCbor_23(castTo(arg0, 7));
}
;
function FileUploadTransaction$1methodref$fromCbor$Type(){
}

defineClass(2619, $wnd.Function, $intern_22, FileUploadTransaction$1methodref$fromCbor$Type);
_.apply_0 = function apply_2413(arg0){
  return fromCbor_13(castTo(arg0, 7));
}
;
function FileUploadTransaction$2methodref$fromCbor$Type(){
}

defineClass(2620, $wnd.Function, $intern_22, FileUploadTransaction$2methodref$fromCbor$Type);
_.apply_0 = function apply_2414(arg0){
  return fromCbor_102(castTo(arg0, 7));
}
;
function FileUploadTransaction$3methodref$fromCbor$Type(){
}

defineClass(2621, $wnd.Function, $intern_22, FileUploadTransaction$3methodref$fromCbor$Type);
_.apply_0 = function apply_2415(arg0){
  return fromCbor_75(castTo(arg0, 7));
}
;
function FileUploadTransaction$4methodref$fromCbor$Type(){
}

defineClass(2622, $wnd.Function, $intern_22, FileUploadTransaction$4methodref$fromCbor$Type);
_.apply_0 = function apply_2416(arg0){
  return fromCbor_24(castTo(arg0, 7));
}
;
function FileUploadTransaction$5methodref$fromCbor$Type(){
}

defineClass(2623, $wnd.Function, $intern_22, FileUploadTransaction$5methodref$fromCbor$Type);
_.apply_0 = function apply_2417(arg0){
  return fromCbor_24(castTo(arg0, 7));
}
;
function FileUploadTransaction$6methodref$fromCbor$Type(){
}

defineClass(2624, $wnd.Function, $intern_22, FileUploadTransaction$6methodref$fromCbor$Type);
_.apply_0 = function apply_2418(arg0){
  return fromCbor_24(castTo(arg0, 7));
}
;
function FileUploadTransaction$lambda$0$Type($$outer_0, networkAccess_1, version_2, committer_3, location_4){
  this.$$outer_0 = $$outer_0;
  this.networkAccess_1 = networkAccess_1;
  this.version_2 = version_2;
  this.committer_3 = committer_3;
  this.location_4 = location_4;
}

defineClass(2616, $wnd.Function, $intern_22, FileUploadTransaction$lambda$0$Type);
_.apply_0 = function apply_2419(arg0){
  return $lambda$0_37(this.$$outer_0, this.networkAccess_1, this.version_2, this.committer_3, this.location_4, arg0);
}
;
function FileUploadTransaction$lambda$1$Type($$outer_0, h_1, committer_2, network_3){
  this.$$outer_0 = $$outer_0;
  this.h_1 = h_1;
  this.committer_2 = committer_2;
  this.network_3 = network_3;
}

defineClass(853, 1, $intern_34, FileUploadTransaction$lambda$1$Type);
_.apply_1 = function apply_2420(arg0, arg1){
  return $lambda$1_28(this.$$outer_0, this.h_1, this.committer_2, this.network_3, arg0);
}
;
var Lpeergos_shared_user_fs_transaction_FileUploadTransaction$lambda$1$Type_2_classLit = createForClass('peergos.shared.user.fs.transaction', 'FileUploadTransaction/lambda$1$Type', 853);
function FileUploadTransaction$lambda$2$Type(){
}

defineClass(854, 1, $intern_34, FileUploadTransaction$lambda$2$Type);
_.apply_1 = function apply_2421(arg0, arg1){
  return castTo(arg1, 20);
}
;
var Lpeergos_shared_user_fs_transaction_FileUploadTransaction$lambda$2$Type_2_classLit = createForClass('peergos.shared.user.fs.transaction', 'FileUploadTransaction/lambda$2$Type', 854);
function FileUploadTransaction$lambda$3$Type($$outer_0, p_1, h_2){
  this.$$outer_0 = $$outer_0;
  this.p_1 = p_1;
  this.h_2 = h_2;
}

defineClass(2625, $wnd.Function, $intern_22, FileUploadTransaction$lambda$3$Type);
_.apply_0 = function apply_2422(arg0){
  return $lambda$3_27(this.$$outer_0, this.p_1, this.h_2, arg0);
}
;
function FileUploadTransaction$lambda$4$Type($$outer_0, s_1){
  this.$$outer_0 = $$outer_0;
  this.s_1 = s_1;
}

defineClass(2626, $wnd.Function, $intern_22, FileUploadTransaction$lambda$4$Type);
_.apply_0 = function apply_2423(arg0){
  return $lambda$4_20(this.$$outer_0, this.s_1, arg0);
}
;
function FileUploadTransaction$lambda$5$Type(){
}

defineClass(2617, $wnd.Function, $intern_22, FileUploadTransaction$lambda$5$Type);
_.apply_0 = function apply_2424(arg0){
  return castTo(castTo(arg0, 20).left, 43);
}
;
function FileUploadTransaction$lambda$6$Type(map_0){
  this.map_0 = map_0;
}

defineClass(855, 1, $intern_32, FileUploadTransaction$lambda$6$Type);
_.accept = function accept_189(arg0){
  $putStringValue(this.map_0, 'firstBat', castTo(arg0, 61));
}
;
_.andThen = function andThen_96(after){
  return requireNonNull(after) , new Consumer$lambda$0$Type(this, after);
}
;
var Lpeergos_shared_user_fs_transaction_FileUploadTransaction$lambda$6$Type_2_classLit = createForClass('peergos.shared.user.fs.transaction', 'FileUploadTransaction/lambda$6$Type', 855);
function $clinit_Transaction$Type(){
  $clinit_Transaction$Type = emptyMethod;
  FILE_UPLOAD = new Transaction$Type;
}

function Transaction$Type(){
  Enum.call(this, 'FILE_UPLOAD', 0);
}

function valueOf_17(name_0){
  $clinit_Transaction$Type();
  return valueOf_0(($clinit_Transaction$Type$Map() , $MAP_8), name_0);
}

function values_21(){
  $clinit_Transaction$Type();
  return stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_user_fs_transaction_Transaction$Type_2_classLit, 1), $intern_33, 349, 0, [FILE_UPLOAD]);
}

defineClass(349, 52, {4:1, 57:1, 52:1, 349:1}, Transaction$Type);
var FILE_UPLOAD;
var Lpeergos_shared_user_fs_transaction_Transaction$Type_2_classLit = createForEnum('peergos.shared.user.fs.transaction', 'Transaction/Type', 349, values_21);
function $clinit_Transaction$Type$Map(){
  $clinit_Transaction$Type$Map = emptyMethod;
  $MAP_8 = createValueOfMap(($clinit_Transaction$Type() , stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_user_fs_transaction_Transaction$Type_2_classLit, 1), $intern_33, 349, 0, [FILE_UPLOAD])));
}

var $MAP_8;
function Transaction$lambda$0$Type(path_0, props_1, writer_2, firstChunkLocation_3, firstBat_4, fileSize_5, baseKey_7, dataKey_8, writeKey_9, streamSecret_10){
  this.path_0 = path_0;
  this.props_1 = props_1;
  this.writer_2 = writer_2;
  this.firstChunkLocation_3 = firstChunkLocation_3;
  this.firstBat_4 = firstBat_4;
  this.fileSize_5 = fileSize_5;
  this.baseKey_7 = baseKey_7;
  this.dataKey_8 = dataKey_8;
  this.writeKey_9 = writeKey_9;
  this.streamSecret_10 = streamSecret_10;
}

defineClass(2609, $wnd.Function, $intern_22, Transaction$lambda$0$Type);
_.apply_0 = function apply_2425(arg0){
  return lambda$0_31(this.path_0, this.props_1, this.writer_2, this.firstChunkLocation_3, this.firstBat_4, this.fileSize_5, this.baseKey_7, this.dataKey_8, this.writeKey_9, this.streamSecret_10, arg0);
}
;
_.fileSize_5 = 0;
function $lambda$0_38(this$static, committer_1, transaction_2, s_2){
  return $thenCompose($getUpdated_0(this$static.transactionsDir, s_2, this$static.networkAccess), makeLambdaFunction(TransactionServiceImpl$lambda$8$Type.prototype.apply_0, TransactionServiceImpl$lambda$8$Type, [this$static, committer_1, s_2, transaction_2]));
}

function $lambda$1_29(this$static, committer_1, filter_2, version_3, openTransactions_3){
  var toClose;
  toClose = castTo($collect_0($filter(openTransactions_3.stream(), filter_2), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  ($clinit_System() , out_0).println_0('Open file upload transactions: ' + openTransactions_3.size());
  out_0.println_0('Stale file upload transactions: ' + toClose.size());
  return reduceAll(toClose, version_3, new TransactionService$lambda$2$Type(this$static, committer_1), new TransactionService$lambda$3$Type);
}

function $lambda$2_28(this$static, committer_1, s_1, t_2){
  return $thenCompose($clear_7(t_2, s_1, committer_1, this$static.networkAccess, this$static.crypto_0.hasher), makeLambdaFunction(TransactionService$lambda$0$Type.prototype.apply_0, TransactionService$lambda$0$Type, [this$static, committer_1, t_2]));
}

function TransactionService$lambda$0$Type($$outer_0, committer_1, transaction_2){
  this.$$outer_0 = $$outer_0;
  this.committer_1 = committer_1;
  this.transaction_2 = transaction_2;
}

defineClass(1894, $wnd.Function, $intern_22, TransactionService$lambda$0$Type);
_.apply_0 = function apply_2426(arg0){
  return $lambda$0_38(this.$$outer_0, this.committer_1, this.transaction_2, arg0);
}
;
function TransactionService$lambda$1$Type($$outer_0, committer_1, filter_2, version_3){
  this.$$outer_0 = $$outer_0;
  this.committer_1 = committer_1;
  this.filter_2 = filter_2;
  this.version_3 = version_3;
}

defineClass(1895, $wnd.Function, $intern_22, TransactionService$lambda$1$Type);
_.apply_0 = function apply_2427(arg0){
  return $lambda$1_29(this.$$outer_0, this.committer_1, this.filter_2, this.version_3, arg0);
}
;
function TransactionService$lambda$2$Type($$outer_0, committer_1){
  this.$$outer_0 = $$outer_0;
  this.committer_1 = committer_1;
}

defineClass(703, 1, $intern_34, TransactionService$lambda$2$Type);
_.apply_1 = function apply_2428(arg0, arg1){
  return $lambda$2_28(this.$$outer_0, this.committer_1, arg0, arg1);
}
;
var Lpeergos_shared_user_fs_transaction_TransactionService$lambda$2$Type_2_classLit = createForClass('peergos.shared.user.fs.transaction', 'TransactionService/lambda$2$Type', 703);
function TransactionService$lambda$3$Type(){
}

defineClass(704, 1, $intern_34, TransactionService$lambda$3$Type);
_.apply_1 = function apply_2429(arg0, arg1){
  return castTo(arg1, 43);
}
;
var Lpeergos_shared_user_fs_transaction_TransactionService$lambda$3$Type_2_classLit = createForClass('peergos.shared.user.fs.transaction', 'TransactionService/lambda$3$Type', 704);
function $clinit_TransactionServiceImpl(){
  $clinit_TransactionServiceImpl = emptyMethod;
  VOID_PROGRESS = makeLambdaFunction(TransactionServiceImpl$lambda$0$Type.prototype.accept_5, TransactionServiceImpl$lambda$0$Type, []);
}

function $close_0(this$static, version, committer, transaction){
  return $thenCompose($getUpdated_0(this$static.transactionsDir, version, this$static.networkAccess), makeLambdaFunction(TransactionServiceImpl$lambda$8$Type.prototype.apply_0, TransactionServiceImpl$lambda$8$Type, [this$static, committer, version, transaction]));
}

function $lambda$1_30(this$static, version_1, committer_2, transaction_3, asyncReader_4, data_5, dir_5){
  return asyncExceptionally(new TransactionServiceImpl$lambda$2$Type(this$static, dir_5, version_1, committer_2, transaction_3, asyncReader_4, data_5), makeLambdaFunction(TransactionServiceImpl$lambda$3$Type.prototype.apply_0, TransactionServiceImpl$lambda$3$Type, [this$static, version_1, dir_5, transaction_3]));
}

function $lambda$10_11(this$static, child_1, committer_2, v_2){
  return call_2($owner(child_1), makeLambdaFunction(TransactionServiceImpl$lambda$11$Type.prototype.apply_0, TransactionServiceImpl$lambda$11$Type, [this$static, child_1, v_2, committer_2]), this$static.networkAccess.dhtClient);
}

function $lambda$11_10(this$static, child_1, v_2, committer_3, tid_3){
  return deleteAllChunks($writableFilePointer(child_1), $signingPair(child_1), tid_3, this$static.crypto_0.hasher, this$static.networkAccess, v_2, committer_3);
}

function $lambda$15_10(this$static, version_1, dir_1){
  return $thenCompose($getChildren_4(dir_1, this$static.crypto_0.hasher, this$static.networkAccess), makeLambdaFunction(TransactionServiceImpl$lambda$16$Type.prototype.apply_0, TransactionServiceImpl$lambda$16$Type, [this$static, version_1]));
}

function $lambda$16_12(this$static, version_1, children_1){
  var collect, identity;
  collect = castTo($collect_0($map_0(children_1.stream(), makeLambdaFunction(TransactionServiceImpl$lambda$17$Type.prototype.apply_0, TransactionServiceImpl$lambda$17$Type, [this$static, version_1])), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
  return $thenApply((identity = new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_SET)) , castTo($reduce(collect.stream(), identity, new Futures$lambda$0$Type), 6)), makeLambdaFunction(TransactionServiceImpl$lambda$18$Type.prototype.apply_0, TransactionServiceImpl$lambda$18$Type, []));
}

function $lambda$2_29(this$static, dir_1, version_2, committer_3, transaction_4, asyncReader_5, data_6){
  return $thenApply($uploadFileSection_1(dir_1, version_2, committer_3, transaction_4.name_0, asyncReader_5, false, 0, data_6.length, ($clinit_Optional() , $clinit_Optional() , EMPTY), false, false, this$static.networkAccess, this$static.crypto_0, VOID_PROGRESS, $randomBytes(this$static.crypto_0.random, 32), (null , EMPTY), new Optional(checkCriticalNotNull(($clinit_Bat() , new Bat($randomBytes(this$static.crypto_0.random, 32))))), $mirrorBatId(dir_1.pointer.fileAccess)), makeLambdaFunction(TransactionServiceImpl$0methodref$a$Type.prototype.apply_0, TransactionServiceImpl$0methodref$a$Type, []));
}

function $lambda$3_28(this$static, version_1, dir_2, transaction_3, t_3){
  if (!instanceOf(getRootCause(t_3), 421))
    throw toJs(new RuntimeException_2(t_3));
  return $thenApply($thenApply($thenCompose($getChild_2(dir_2, transaction_3.name_0, this$static.networkAccess), makeLambdaFunction(TransactionServiceImpl$lambda$5$Type.prototype.apply_0, TransactionServiceImpl$lambda$5$Type, [this$static, version_1])), makeLambdaFunction(TransactionServiceImpl$1methodref$get$Type.prototype.apply_0, TransactionServiceImpl$1methodref$get$Type, [])), makeLambdaFunction(TransactionServiceImpl$lambda$7$Type.prototype.apply_0, TransactionServiceImpl$lambda$7$Type, [t_3]));
}

function $lambda$5_20(this$static, version_1, fopt_1){
  return $read_3(this$static, version_1, (checkCriticalElement(fopt_1.ref != null) , castTo(fopt_1.ref, 19)));
}

function $lambda$8_12(this$static, committer_1, version_2, transaction_3, dir_3){
  return $thenCompose($getChild_2(dir_3, transaction_3.name_0, this$static.networkAccess), makeLambdaFunction(TransactionServiceImpl$lambda$9$Type.prototype.apply_0, TransactionServiceImpl$lambda$9$Type, [this$static, committer_1, version_2, dir_3]));
}

function $lambda$9_16(this$static, committer_1, version_2, dir_3, fileOpt_3){
  var child, hasChild;
  hasChild = fileOpt_3.ref != null;
  if (!hasChild)
    return new CompletableFuture_0(version_2);
  child = (checkCriticalElement(fileOpt_3.ref != null) , castTo(fileOpt_3.ref, 19));
  return $thenCompose($removeChild_0(dir_3, version_2, committer_1, child, this$static.networkAccess, this$static.crypto_0.random, this$static.crypto_0.hasher), makeLambdaFunction(TransactionServiceImpl$lambda$10$Type.prototype.apply_0, TransactionServiceImpl$lambda$10$Type, [this$static, child, committer_1]));
}

function $open(this$static, version, committer, transaction){
  var asyncReader, data_0;
  data_0 = $toByteArray_2($toCbor_103(transaction));
  asyncReader = new AsyncReader$ArrayBacked(data_0);
  return $thenCompose($getUpdated_0(this$static.transactionsDir, version, this$static.networkAccess), makeLambdaFunction(TransactionServiceImpl$lambda$1$Type.prototype.apply_0, TransactionServiceImpl$lambda$1$Type, [this$static, version, committer, transaction, asyncReader, data_0]));
}

function $read_3(this$static, version, txnFile){
  var cwd, data_0, props, size_0;
  props = ($ensureUnmodified(txnFile) , txnFile.props);
  size_0 = toInt_0(props.size_0);
  data_0 = initUnidimensionalArray(B_classLit, $intern_28, 8, size_0, 15, 1);
  cwd = $get_32(version, txnFile.pointer.capability.writer);
  return $exceptionally($thenApply($thenApply($getInputStream_2(txnFile, cwd.props, this$static.networkAccess, this$static.crypto_0, VOID_PROGRESS), makeLambdaFunction(TransactionServiceImpl$lambda$12$Type.prototype.apply_0, TransactionServiceImpl$lambda$12$Type, [data_0])), makeLambdaFunction(TransactionServiceImpl$lambda$13$Type.prototype.apply_0, TransactionServiceImpl$lambda$13$Type, [data_0, txnFile])), makeLambdaFunction(TransactionServiceImpl$lambda$14$Type.prototype.apply_0, TransactionServiceImpl$lambda$14$Type, []));
}

function TransactionServiceImpl(networkAccess, crypto_0, transactionsDir){
  $clinit_TransactionServiceImpl();
  this.transactionsDir = transactionsDir;
  this.signer = $signingPair(transactionsDir);
  this.networkAccess = networkAccess;
  this.crypto_0 = crypto_0;
}

function lambda$12_8(data_0, reader_1){
  $clinit_TransactionServiceImpl();
  return $thenApply(reader_1.readIntoArray(data_0, 0, data_0.length), makeLambdaFunction(Serialize$lambda$7$Type.prototype.apply_0, Serialize$lambda$7$Type, []));
}

function lambda$13_5(data_0, txnFile_1){
  $clinit_TransactionServiceImpl();
  return $clinit_Optional() , new Optional(checkCriticalNotNull(deserialize_1(data_0, ($ensureUnmodified(txnFile_1) , txnFile_1.props).name)));
}

function lambda$7_9(t_0, txn_1){
  $clinit_TransactionServiceImpl();
  if (txn_1) {
    return new Either(null, txn_1);
  }
  throw toJs(new RuntimeException_2(getRootCause(t_0)));
}

defineClass($intern_65, 1, {}, TransactionServiceImpl);
_.close = function close_10(version, committer, transaction){
  return $close_0(this, version, committer, transaction);
}
;
_.open = function open_0(version, committer, transaction){
  return $open(this, version, committer, transaction);
}
;
var VOID_PROGRESS;
var Lpeergos_shared_user_fs_transaction_TransactionServiceImpl_2_classLit = createForClass('peergos.shared.user.fs.transaction', 'TransactionServiceImpl', $intern_65);
function TransactionServiceImpl$0methodref$a$Type(){
}

defineClass(3258, $wnd.Function, $intern_22, TransactionServiceImpl$0methodref$a$Type);
_.apply_0 = function apply_2430(arg0){
  return new Either(castTo(arg0, 43), null);
}
;
function TransactionServiceImpl$1methodref$get$Type(){
}

defineClass(3260, $wnd.Function, $intern_22, TransactionServiceImpl$1methodref$get$Type);
_.apply_0 = function apply_2431(arg0){
  return $get_6(castTo(arg0, 12));
}
;
function TransactionServiceImpl$2methodref$stream$Type(){
}

defineClass(3268, $wnd.Function, $intern_22, TransactionServiceImpl$2methodref$stream$Type);
_.apply_0 = function apply_2432(arg0){
  return $stream(castTo(arg0, 12));
}
;
function TransactionServiceImpl$lambda$0$Type(){
}

defineClass(3252, $wnd.Function, {}, TransactionServiceImpl$lambda$0$Type);
_.accept_5 = function accept_190(arg0){
  $clinit_TransactionServiceImpl();
}
;
function TransactionServiceImpl$lambda$1$Type($$outer_0, version_1, committer_2, transaction_3, asyncReader_4, data_5){
  this.$$outer_0 = $$outer_0;
  this.version_1 = version_1;
  this.committer_2 = committer_2;
  this.transaction_3 = transaction_3;
  this.asyncReader_4 = asyncReader_4;
  this.data_5 = data_5;
}

defineClass(3253, $wnd.Function, $intern_22, TransactionServiceImpl$lambda$1$Type);
_.apply_0 = function apply_2433(arg0){
  return $lambda$1_30(this.$$outer_0, this.version_1, this.committer_2, this.transaction_3, this.asyncReader_4, this.data_5, arg0);
}
;
function TransactionServiceImpl$lambda$10$Type($$outer_0, child_1, committer_2){
  this.$$outer_0 = $$outer_0;
  this.child_1 = child_1;
  this.committer_2 = committer_2;
}

defineClass(3263, $wnd.Function, $intern_22, TransactionServiceImpl$lambda$10$Type);
_.apply_0 = function apply_2434(arg0){
  return $lambda$10_11(this.$$outer_0, this.child_1, this.committer_2, arg0);
}
;
function TransactionServiceImpl$lambda$11$Type($$outer_0, child_1, v_2, committer_3){
  this.$$outer_0 = $$outer_0;
  this.child_1 = child_1;
  this.v_2 = v_2;
  this.committer_3 = committer_3;
}

defineClass(3264, $wnd.Function, $intern_22, TransactionServiceImpl$lambda$11$Type);
_.apply_0 = function apply_2435(arg0){
  return $lambda$11_10(this.$$outer_0, this.child_1, this.v_2, this.committer_3, arg0);
}
;
function TransactionServiceImpl$lambda$12$Type(data_0){
  this.data_0 = data_0;
}

defineClass(3254, $wnd.Function, $intern_22, TransactionServiceImpl$lambda$12$Type);
_.apply_0 = function apply_2436(arg0){
  return lambda$12_8(this.data_0, arg0);
}
;
function TransactionServiceImpl$lambda$13$Type(data_0, txnFile_1){
  this.data_0 = data_0;
  this.txnFile_1 = txnFile_1;
}

defineClass(3255, $wnd.Function, $intern_22, TransactionServiceImpl$lambda$13$Type);
_.apply_0 = function apply_2437(arg0){
  return lambda$13_5(this.data_0, this.txnFile_1);
}
;
function TransactionServiceImpl$lambda$14$Type(){
}

defineClass(3256, $wnd.Function, $intern_22, TransactionServiceImpl$lambda$14$Type);
_.apply_0 = function apply_2438(arg0){
  return $clinit_TransactionServiceImpl() , $clinit_Optional() , $clinit_Optional() , EMPTY;
}
;
function TransactionServiceImpl$lambda$15$Type($$outer_0, version_1){
  this.$$outer_0 = $$outer_0;
  this.version_1 = version_1;
}

defineClass(2281, $wnd.Function, $intern_22, TransactionServiceImpl$lambda$15$Type);
_.apply_0 = function apply_2439(arg0){
  return $lambda$15_10(this.$$outer_0, this.version_1, arg0);
}
;
function TransactionServiceImpl$lambda$16$Type($$outer_0, version_1){
  this.$$outer_0 = $$outer_0;
  this.version_1 = version_1;
}

defineClass(3265, $wnd.Function, $intern_22, TransactionServiceImpl$lambda$16$Type);
_.apply_0 = function apply_2440(arg0){
  return $lambda$16_12(this.$$outer_0, this.version_1, arg0);
}
;
function TransactionServiceImpl$lambda$17$Type($$outer_0, version_1){
  this.$$outer_0 = $$outer_0;
  this.version_1 = version_1;
}

defineClass(3266, $wnd.Function, $intern_22, TransactionServiceImpl$lambda$17$Type);
_.apply_0 = function apply_2441(arg0){
  return $read_3(this.$$outer_0, this.version_1, castTo(arg0, 19));
}
;
function TransactionServiceImpl$lambda$18$Type(){
}

defineClass(3267, $wnd.Function, $intern_22, TransactionServiceImpl$lambda$18$Type);
_.apply_0 = function apply_2442(arg0){
  return $clinit_TransactionServiceImpl() , castTo($collect_0($flatMap_0(castTo(arg0, 47).stream(), makeLambdaFunction(TransactionServiceImpl$2methodref$stream$Type.prototype.apply_0, TransactionServiceImpl$2methodref$stream$Type, [])), of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47);
}
;
function TransactionServiceImpl$lambda$2$Type($$outer_0, dir_1, version_2, committer_3, transaction_4, asyncReader_5, data_6){
  this.$$outer_0 = $$outer_0;
  this.dir_1 = dir_1;
  this.version_2 = version_2;
  this.committer_3 = committer_3;
  this.transaction_4 = transaction_4;
  this.asyncReader_5 = asyncReader_5;
  this.data_6 = data_6;
}

defineClass(1025, 1, {}, TransactionServiceImpl$lambda$2$Type);
_.get_0 = function get_174(){
  return $lambda$2_29(this.$$outer_0, this.dir_1, this.version_2, this.committer_3, this.transaction_4, this.asyncReader_5, this.data_6);
}
;
var Lpeergos_shared_user_fs_transaction_TransactionServiceImpl$lambda$2$Type_2_classLit = createForClass('peergos.shared.user.fs.transaction', 'TransactionServiceImpl/lambda$2$Type', 1025);
function TransactionServiceImpl$lambda$3$Type($$outer_0, version_1, dir_2, transaction_3){
  this.$$outer_0 = $$outer_0;
  this.version_1 = version_1;
  this.dir_2 = dir_2;
  this.transaction_3 = transaction_3;
}

defineClass(3257, $wnd.Function, $intern_22, TransactionServiceImpl$lambda$3$Type);
_.apply_0 = function apply_2443(arg0){
  return $lambda$3_28(this.$$outer_0, this.version_1, this.dir_2, this.transaction_3, arg0);
}
;
function TransactionServiceImpl$lambda$5$Type($$outer_0, version_1){
  this.$$outer_0 = $$outer_0;
  this.version_1 = version_1;
}

defineClass(3259, $wnd.Function, $intern_22, TransactionServiceImpl$lambda$5$Type);
_.apply_0 = function apply_2444(arg0){
  return $lambda$5_20(this.$$outer_0, this.version_1, arg0);
}
;
function TransactionServiceImpl$lambda$7$Type(t_0){
  this.t_0 = t_0;
}

defineClass(3261, $wnd.Function, $intern_22, TransactionServiceImpl$lambda$7$Type);
_.apply_0 = function apply_2445(arg0){
  return lambda$7_9(this.t_0, arg0);
}
;
function TransactionServiceImpl$lambda$8$Type($$outer_0, committer_1, version_2, transaction_3){
  this.$$outer_0 = $$outer_0;
  this.committer_1 = committer_1;
  this.version_2 = version_2;
  this.transaction_3 = transaction_3;
}

defineClass(1195, $wnd.Function, $intern_22, TransactionServiceImpl$lambda$8$Type);
_.apply_0 = function apply_2446(arg0){
  return $lambda$8_12(this.$$outer_0, this.committer_1, this.version_2, this.transaction_3, arg0);
}
;
function TransactionServiceImpl$lambda$9$Type($$outer_0, committer_1, version_2, dir_3){
  this.$$outer_0 = $$outer_0;
  this.committer_1 = committer_1;
  this.version_2 = version_2;
  this.dir_3 = dir_3;
}

defineClass(3262, $wnd.Function, $intern_22, TransactionServiceImpl$lambda$9$Type);
_.apply_0 = function apply_2447(arg0){
  return $lambda$9_16(this.$$outer_0, this.committer_1, this.version_2, this.dir_3, arg0);
}
;
function $clinit_ArrayOps(){
  $clinit_ArrayOps = emptyMethod;
  var i;
  HEX_DIGITS = stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f']);
  HEX = initUnidimensionalArray(Ljava_lang_String_2_classLit, $intern_17, 2, 256, 6, 1);
  for (i = 0; i < 256; i++)
    HEX[i] = HEX_DIGITS[i >> 4 & 15] + ('' + HEX_DIGITS[i & 15]);
}

function bytesToHex(data_0){
  $clinit_ArrayOps();
  var b, b$array, b$index, b$max, s;
  s = new StringBuilder;
  for (b$array = data_0 , b$index = 0 , b$max = b$array.length; b$index < b$max; ++b$index) {
    b = b$array[b$index];
    $append_4(s, HEX[b & 255]);
  }
  return s.string;
}

function concat_0(one, two){
  $clinit_ArrayOps();
  var res;
  res = initUnidimensionalArray(B_classLit, $intern_28, 8, one.length + two.length, 15, 1);
  arraycopy(one, 0, res, 0, one.length);
  arraycopy(two, 0, res, one.length, two.length);
  return res;
}

function copyOfRange_1(original, from, to){
  $clinit_ArrayOps();
  var copy, length_0;
  length_0 = to - from;
  if (length_0 < 0) {
    throw toJs(new IllegalArgumentException_0(from + ' > ' + to));
  }
  copy = initUnidimensionalArray(I_classLit, $intern_29, 8, length_0, 15, 1);
  arraycopy(original, from, copy, 0, $wnd.Math.min(original.length - from, length_0));
  return copy;
}

function equalArrays_0(a, aEnd, b, bEnd){
  $clinit_ArrayOps();
  var i, len;
  len = aEnd;
  if (len != bEnd)
    return false;
  for (i = 0; i < len; i++) {
    if (a[i] != b[i])
      return false;
  }
  return true;
}

function hexToBytes(hex){
  $clinit_ArrayOps();
  var i, res;
  res = initUnidimensionalArray(B_classLit, $intern_28, 8, hex.length / 2 | 0, 15, 1);
  for (i = 0; i < res.length; i++)
    res[i] = __parseAndValidateInt(hex.substr(2 * i, 2 * i + 2 - 2 * i), 16) << 24 >> 24;
  return res;
}

function lambda$0_32(x_0, maxGroupSize_1, i_2){
  $clinit_ArrayOps();
  return castTo($collect_0($limit($skip_0(x_0.stream(), maxGroupSize_1 * i_2), maxGroupSize_1), of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
}

var HEX, HEX_DIGITS;
function ArrayOps$lambda$0$Type(x_0, maxGroupSize_1){
  this.x_0 = x_0;
  this.maxGroupSize_1 = maxGroupSize_1;
}

defineClass(360, 1, {}, ArrayOps$lambda$0$Type);
_.apply_2 = function apply_2448(arg0){
  return lambda$0_32(this.x_0, this.maxGroupSize_1, arg0);
}
;
_.maxGroupSize_1 = 0;
var Lpeergos_shared_util_ArrayOps$lambda$0$Type_2_classLit = createForClass('peergos.shared.util', 'ArrayOps/lambda$0$Type', 360);
function $runWithLock(this$static, processor){
  return $runWithLock_0(this$static, processor, new AsyncLock$lambda$0$Type(this$static));
}

function $runWithLock_0(this$static, processor, updater){
  var existing, newHead, result;
  existing = this$static.queueHead;
  newHead = new CompletableFuture;
  this$static.queueHead = newHead;
  result = new CompletableFuture;
  $exceptionally($thenCompose(existing, makeLambdaFunction(AsyncLock$lambda$1$Type.prototype.apply_0, AsyncLock$lambda$1$Type, [newHead, result, processor, updater])), makeLambdaFunction(AsyncLock$lambda$6$Type.prototype.apply_0, AsyncLock$lambda$6$Type, [result, newHead]));
  return result;
}

function AsyncLock(initialValue){
  this.queueHead = initialValue;
}

function lambda$1_21(newHead_0, result_1, processor_2, updater_3, current_4){
  return $exceptionally($thenApply(castTo(processor_2(current_4), 87), makeLambdaFunction(AsyncLock$lambda$2$Type.prototype.apply_0, AsyncLock$lambda$2$Type, [newHead_0, result_1])), makeLambdaFunction(AsyncLock$lambda$3$Type.prototype.apply_0, AsyncLock$lambda$3$Type, [newHead_0, result_1, updater_3, current_4]));
}

function lambda$2_16(newHead_0, result_1, res_2){
  return $clinit_Boolean() , $complete(newHead_0, res_2) && $complete(result_1, res_2)?true:false;
}

function lambda$3_9(newHead_0, result_1, updater_2, current_3, t_4){
  $exceptionally($thenApply(castTo(updater_2.get_0(), 6), makeLambdaFunction(AsyncLock$lambda$4$Type.prototype.apply_0, AsyncLock$lambda$4$Type, [newHead_0, result_1, t_4])), makeLambdaFunction(AsyncLock$lambda$5$Type.prototype.apply_0, AsyncLock$lambda$5$Type, [newHead_0, current_3, result_1]));
  $printStackTraceImpl(t_4, ($clinit_System() , err_0), '', '');
  return $clinit_Boolean() , true;
}

function lambda$4_12(newHead_0, result_1, t_2, res_3){
  return $clinit_Boolean() , $complete(newHead_0, res_3) && $completeExceptionally(result_1, t_2)?true:false;
}

function lambda$5_10(newHead_0, current_1, result_2, e_3){
  return $clinit_Boolean() , $complete(newHead_0, current_1) && $completeExceptionally(result_2, e_3)?true:false;
}

function lambda$6_6(result_0, newHead_1, t_2){
  $completeExceptionally(result_0, t_2);
  $completeExceptionally(newHead_1, t_2);
  return $clinit_Boolean() , true;
}

defineClass(154, 1, {154:1}, AsyncLock);
_.toString_0 = function toString_91(){
  return $toString(this.queueHead);
}
;
var Lpeergos_shared_util_AsyncLock_2_classLit = createForClass('peergos.shared.util', 'AsyncLock', 154);
function AsyncLock$lambda$0$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(1083, 1, {}, AsyncLock$lambda$0$Type);
_.get_0 = function get_175(){
  return this.$$outer_0.queueHead;
}
;
var Lpeergos_shared_util_AsyncLock$lambda$0$Type_2_classLit = createForClass('peergos.shared.util', 'AsyncLock/lambda$0$Type', 1083);
function AsyncLock$lambda$1$Type(newHead_0, result_1, processor_2, updater_3){
  this.newHead_0 = newHead_0;
  this.result_1 = result_1;
  this.processor_2 = processor_2;
  this.updater_3 = updater_3;
}

defineClass(3404, $wnd.Function, $intern_22, AsyncLock$lambda$1$Type);
_.apply_0 = function apply_2449(arg0){
  return lambda$1_21(this.newHead_0, this.result_1, this.processor_2, this.updater_3, arg0);
}
;
function AsyncLock$lambda$2$Type(newHead_0, result_1){
  this.newHead_0 = newHead_0;
  this.result_1 = result_1;
}

defineClass(3406, $wnd.Function, $intern_22, AsyncLock$lambda$2$Type);
_.apply_0 = function apply_2450(arg0){
  return lambda$2_16(this.newHead_0, this.result_1, arg0);
}
;
function AsyncLock$lambda$3$Type(newHead_0, result_1, updater_2, current_3){
  this.newHead_0 = newHead_0;
  this.result_1 = result_1;
  this.updater_2 = updater_2;
  this.current_3 = current_3;
}

defineClass(3407, $wnd.Function, $intern_22, AsyncLock$lambda$3$Type);
_.apply_0 = function apply_2451(arg0){
  return lambda$3_9(this.newHead_0, this.result_1, this.updater_2, this.current_3, arg0);
}
;
function AsyncLock$lambda$4$Type(newHead_0, result_1, t_2){
  this.newHead_0 = newHead_0;
  this.result_1 = result_1;
  this.t_2 = t_2;
}

defineClass(3408, $wnd.Function, $intern_22, AsyncLock$lambda$4$Type);
_.apply_0 = function apply_2452(arg0){
  return lambda$4_12(this.newHead_0, this.result_1, this.t_2, arg0);
}
;
function AsyncLock$lambda$5$Type(newHead_0, current_1, result_2){
  this.newHead_0 = newHead_0;
  this.current_1 = current_1;
  this.result_2 = result_2;
}

defineClass(3409, $wnd.Function, $intern_22, AsyncLock$lambda$5$Type);
_.apply_0 = function apply_2453(arg0){
  return lambda$5_10(this.newHead_0, this.current_1, this.result_2, arg0);
}
;
function AsyncLock$lambda$6$Type(result_0, newHead_1){
  this.result_0 = result_0;
  this.newHead_1 = newHead_1;
}

defineClass(3405, $wnd.Function, $intern_22, AsyncLock$lambda$6$Type);
_.apply_0 = function apply_2454(arg0){
  return lambda$6_6(this.result_0, this.newHead_1, arg0);
}
;
function $compareTo_20(this$static, o){
  var i;
  if (this$static.data_0.length < o.data_0.length)
    return -1;
  if (this$static.data_0.length > o.data_0.length)
    return 1;
  for (i = 0; i < this$static.data_0.length; i++)
    if (this$static.data_0[i] != o.data_0[i])
      return (255 & this$static.data_0[i]) - (255 & o.data_0[i]);
  return 0;
}

function $equals_25(this$static, obj){
  var other;
  if (maskUndefined(this$static) === maskUndefined(obj))
    return true;
  if (obj == null)
    return false;
  if (Lpeergos_shared_util_ByteArrayWrapper_2_classLit != getClass__Ljava_lang_Class___devirtual$(obj))
    return false;
  other = castTo(obj, 80);
  if (!equals_16(this$static.data_0, other.data_0))
    return false;
  return true;
}

function ByteArrayWrapper(data_0){
  this.data_0 = data_0;
}

defineClass(80, 1, {57:1, 80:1}, ByteArrayWrapper);
_.compareTo_0 = function compareTo_22(o){
  return $compareTo_20(this, castTo(o, 80));
}
;
_.equals_0 = function equals_102(obj){
  return $equals_25(this, obj);
}
;
_.hashCode_1 = function hashCode_99(){
  return hashCode_17(this.data_0);
}
;
_.toString_0 = function toString_92(){
  return bytesToHex(this.data_0);
}
;
var Lpeergos_shared_util_ByteArrayWrapper_2_classLit = createForClass('peergos.shared.util', 'ByteArrayWrapper', 80);
function $accept_4(this$static, delta){
  var diff, startValue;
  startValue = this$static.currentCount;
  this$static.currentCount += toInt_0(delta.value_0);
  this$static.currentCount = $wnd.Math.min(this$static.currentCount, this$static.maxLength);
  diff = this$static.currentCount - startValue;
  this$static.consumer.call(null, valueOf_2(diff));
}

function CappedProgressConsumer(consumer, maxLength){
  this.consumer = consumer;
  this.maxLength = maxLength;
  this.currentCount = 0;
}

defineClass(1334, $wnd.Function, {}, CappedProgressConsumer);
_.accept_5 = function accept_191(delta){
  $accept_4(this, castTo(delta, 69));
}
;
_.currentCount = 0;
_.maxLength = 0;
function $a(this$static){
  if (this$static.a_0 == null)
    throw toJs(new IllegalStateException_0('Absent value!'));
  return this$static.a_0;
}

function $b(this$static){
  if (this$static.b_0 == null)
    throw toJs(new IllegalStateException_0('Absent value!'));
  return this$static.b_0;
}

function $equals_26(this$static, o){
  var either;
  if (maskUndefined(this$static) === maskUndefined(o))
    return true;
  if (o == null || Lpeergos_shared_util_Either_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  either = castTo(o, 81);
  return equals_28(this$static.a_0, either.a_0) && equals_28(this$static.b_0, either.b_0);
}

function $map_3(this$static, aMap, bmap){
  if (this$static.a_0 != null)
    return aMap(this$static.a_0);
  return bmap(this$static.b_0);
}

function Either(a, b){
  this.a_0 = a;
  this.b_0 = b;
}

function a_4(a){
  return new Either(a, null);
}

function b_6(b){
  return new Either(null, b);
}

defineClass(81, 1, {81:1}, Either);
_.a = function a_3(){
  return $a(this);
}
;
_.b = function b_4(){
  return $b(this);
}
;
_.equals = function equals_103(o){
  return $equals_26(this, o);
}
;
_.equals_0 = function(o){
  return this.equals(o);
}
;
_.hashCode = function hashCode_100(){
  return hashCode_19(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_0, 1, 5, [this.a_0, this.b_0]));
}
;
_.hashCode_1 = function(){
  return this.hashCode();
}
;
_.isA = function isA_0(){
  return this.a_0 != null;
}
;
_.isB = function isB(){
  return this.b_0 != null;
}
;
_.map = function map_5(aMap, bmap){
  return $map_3(this, aMap, bmap);
}
;
_.toString = function toString_93(){
  return this.a_0 != null?toString_5(this.a_0):toString_5(this.b_0);
}
;
_.toString_0 = function(){
  return this.toString();
}
;
var Lpeergos_shared_util_Either_2_classLit = createForClass('peergos.shared.util', 'Either', 81);
function getRootCause(t){
  var cause;
  cause = t.cause_0;
  if (instanceOf(t, 35) && !!cause && cause != t)
    return getRootCause(cause);
  return t;
}

function getOrCreateObject(context, file, generator, initializer, parser){
  var pathString;
  return $thenCompose((pathString = castToString(range_0(0, $getNameCount(file)).mapToObj(new UserContext$30methodref$getName$Type(file)).map_1(makeLambdaFunction(UserContext$31methodref$toString$Type.prototype.apply_0, UserContext$31methodref$toString$Type, [])).collect_0(of_3(new Collectors$lambda$15$Type('/', ''), new Collectors$9methodref$add$Type, new Collectors$10methodref$merge$Type, makeLambdaFunction(Collectors$11methodref$toString$Type.prototype.apply_0, Collectors$11methodref$toString$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [])))) , $getByPath_4(context, pathString)), makeLambdaFunction(FileUtils$lambda$0$Type.prototype.apply_0, FileUtils$lambda$0$Type, [context, file, parser, generator, initializer]));
}

function lambda$0_33(context_0, file_1, parser_2, generator_3, initializer_4, opt_5){
  var filename, raw, reader, val;
  if (opt_5.ref != null)
    return $thenApply($thenCompose($getInputStream_0((checkCriticalElement(opt_5.ref != null) , castTo(opt_5.ref, 19)), context_0.network, context_0.crypto, makeLambdaFunction(FileUtils$lambda$1$Type.prototype.accept_5, FileUtils$lambda$1$Type, [])), makeLambdaFunction(FileUtils$lambda$2$Type.prototype.apply_0, FileUtils$lambda$2$Type, [opt_5])), parser_2);
  val = generate_0(generator_3.$$outer_0.crypto.random);
  raw = $toByteArray_2($toCbor_73(val));
  filename = $getFileName(file_1).pathString;
  reader = new AsyncReader$ArrayBacked(raw);
  return $thenApply($thenCompose($thenCompose($initialiseGroups(initializer_4.$$outer_0, val), makeLambdaFunction(FileUtils$lambda$3$Type.prototype.apply_0, FileUtils$lambda$3$Type, [context_0, file_1])), makeLambdaFunction(FileUtils$lambda$4$Type.prototype.apply_0, FileUtils$lambda$4$Type, [filename, reader, raw, context_0])), makeLambdaFunction(FileUtils$lambda$5$Type.prototype.apply_0, FileUtils$lambda$5$Type, [val]));
}

function lambda$2_17(opt_0, in_1){
  return readFully(in_1, $getSize((checkCriticalElement(opt_0.ref != null) , castTo(opt_0.ref, 19))));
}

function lambda$4_13(filename_0, reader_1, raw_2, context_3, dopt_4){
  return $uploadAndReturnFile((checkCriticalElement(dopt_4.ref != null) , castTo(dopt_4.ref, 19)), filename_0, reader_1, raw_2.length, false, $mirrorBatId((checkCriticalElement(dopt_4.ref != null) , castTo(dopt_4.ref, 19)).pointer.fileAccess), context_3.network, context_3.crypto);
}

function FileUtils$lambda$0$Type(context_0, file_1, parser_2, generator_3, initializer_4){
  this.context_0 = context_0;
  this.file_1 = file_1;
  this.parser_2 = parser_2;
  this.generator_3 = generator_3;
  this.initializer_4 = initializer_4;
}

defineClass(3246, $wnd.Function, $intern_22, FileUtils$lambda$0$Type);
_.apply_0 = function apply_2455(arg0){
  return lambda$0_33(this.context_0, this.file_1, this.parser_2, this.generator_3, this.initializer_4, arg0);
}
;
function FileUtils$lambda$1$Type(){
}

defineClass(3247, $wnd.Function, {}, FileUtils$lambda$1$Type);
_.accept_5 = function accept_192(arg0){
}
;
function FileUtils$lambda$2$Type(opt_0){
  this.opt_0 = opt_0;
}

defineClass(3248, $wnd.Function, $intern_22, FileUtils$lambda$2$Type);
_.apply_0 = function apply_2456(arg0){
  return lambda$2_17(this.opt_0, arg0);
}
;
function FileUtils$lambda$3$Type(context_0, file_1){
  this.context_0 = context_0;
  this.file_1 = file_1;
}

defineClass(3249, $wnd.Function, $intern_22, FileUtils$lambda$3$Type);
_.apply_0 = function apply_2457(arg0){
  return $getByPath_6(this.context_0, $getParent(this.file_1));
}
;
function FileUtils$lambda$4$Type(filename_0, reader_1, raw_2, context_3){
  this.filename_0 = filename_0;
  this.reader_1 = reader_1;
  this.raw_2 = raw_2;
  this.context_3 = context_3;
}

defineClass(3250, $wnd.Function, $intern_22, FileUtils$lambda$4$Type);
_.apply_0 = function apply_2458(arg0){
  return lambda$4_13(this.filename_0, this.reader_1, this.raw_2, this.context_3, arg0);
}
;
function FileUtils$lambda$5$Type(val_0){
  this.val_0 = val_0;
}

defineClass(3251, $wnd.Function, $intern_22, FileUtils$lambda$5$Type);
_.apply_0 = function apply_2459(arg0){
  return this.val_0;
}
;
function asyncExceptionally(normal, exceptional){
  var result;
  result = new CompletableFuture;
  $exceptionally($thenApply(castTo(normal.get_0(), 6), makeLambdaFunction(Futures$2methodref$complete$Type.prototype.apply_0, Futures$2methodref$complete$Type, [result])), makeLambdaFunction(Futures$lambda$22$Type.prototype.apply_0, Futures$lambda$22$Type, [exceptional, result]));
  return result;
}

function combineAll(futures){
  var identity;
  identity = new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_SET));
  return castTo($reduce(futures.stream(), identity, new Futures$lambda$0$Type), 6);
}

function combineAllInOrder(futures){
  var identity;
  identity = new CompletableFuture_0(($clinit_Collections() , $clinit_Collections() , EMPTY_LIST));
  return castTo($reduce(futures.stream(), identity, new Futures$lambda$6$Type), 6);
}

function errored(t){
  var err;
  err = new CompletableFuture;
  $completeExceptionally(err, t);
  return err;
}

function findFirst(input_0, producer){
  var inList;
  if (input_0.isEmpty())
    return new CompletableFuture_0(($clinit_Optional() , $clinit_Optional() , EMPTY));
  inList = new ArrayList_1(input_0);
  return $thenCompose(castTo(producer((checkCriticalElementIndex(0, inList.array.length) , inList.array[0])), 6), makeLambdaFunction(Futures$lambda$17$Type.prototype.apply_0, Futures$lambda$17$Type, [inList, producer]));
}

function incomplete(){
  return new CompletableFuture;
}

function lambda$11_10(setb_0, seta_1){
  return castTo(concat(seta_1.stream(), setb_0.stream()).collect_0(of_4(new Collectors$21methodref$ctor$Type, new Collectors$20methodref$add$Type, new Collectors$lambda$42$Type, stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , IDENTITY_FINISH)]))), 17);
}

function lambda$12_9(composer_0, a_1, b_2){
  return $thenCompose(a_1, makeLambdaFunction(Futures$lambda$14$Type.prototype.apply_0, Futures$lambda$14$Type, [composer_0, b_2]));
}

function lambda$13_6(combiner_0, a_1, b_2){
  return $thenCompose(a_1, makeLambdaFunction(Futures$lambda$15$Type.prototype.apply_0, Futures$lambda$15$Type, [combiner_0, b_2]));
}

function lambda$14_11(composer_0, b_1, res_2){
  return castTo(composer_0.apply_1(res_2, b_1), 87);
}

function lambda$15_7(combiner_0, b_1, x_2){
  return $thenApply(b_1, makeLambdaFunction(Futures$lambda$16$Type.prototype.apply_0, Futures$lambda$16$Type, [combiner_0, x_2]));
}

function lambda$17_6(inList_0, producer_1, optRes_2){
  if (optRes_2.ref != null)
    return new CompletableFuture_0(optRes_2);
  return findFirst(new AbstractList$SubList(inList_0, 1, inList_0.array.length), producer_1);
}

function lambda$18_8(work_0, res_1){
  var t;
  try {
    $exceptionally($thenApply(castTo(work_0.get_0(), 6), makeLambdaFunction(Futures$0methodref$complete$Type.prototype.apply_0, Futures$0methodref$complete$Type, [res_1])), makeLambdaFunction(Futures$1methodref$completeExceptionally$Type.prototype.apply_0, Futures$1methodref$completeExceptionally$Type, [res_1]));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 33)) {
      t = $e0;
      $completeExceptionally(res_1, t);
    }
     else 
      throw toJs($e0);
  }
}

function lambda$22_4(exceptional_0, result_1, t_2){
  $exceptionally($thenApply(castTo(exceptional_0(t_2), 6), makeLambdaFunction(Futures$3methodref$complete$Type.prototype.apply_0, Futures$3methodref$complete$Type, [result_1])), makeLambdaFunction(Futures$4methodref$completeExceptionally$Type.prototype.apply_0, Futures$4methodref$completeExceptionally$Type, [result_1]));
  return $clinit_Boolean() , true;
}

function lambda$3_10(opt_0, set_1){
  return castTo(concat(set_1.stream(), new StreamImpl(null, new Spliterators$IteratorSpliterator(singleton(opt_0), 1))).collect_0(of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47);
}

function lambda$5_11(setb_0, seta_1){
  return castTo(concat(seta_1.stream(), setb_0.stream()).collect_0(of_3(new Collectors$23methodref$ctor$Type, new Collectors$24methodref$add$Type, new Collectors$lambda$50$Type, makeLambdaFunction(Collectors$lambda$51$Type.prototype.apply_0, Collectors$lambda$51$Type, []), stampJavaTypeInfo(getClassLiteralForArray(Ljava_util_stream_Collector$Characteristics_2_classLit, 1), $intern_33, 16, 0, [($clinit_Collector$Characteristics() , UNORDERED), IDENTITY_FINISH]))), 47);
}

function lambda$9_10(opt_0, set_1){
  var combined;
  combined = new ArrayList_0(set_1.size() + 1);
  $addAll_0(combined, set_1);
  combined.array[combined.array.length] = opt_0;
  return combined;
}

function logAndReturn(t, result){
  $printStackTraceImpl(t, ($clinit_System() , err_0), '', '');
  return result;
}

function logAndThrow(t, message){
  message.ref != null && ($clinit_System() , out_0);
  $printStackTraceImpl(t, ($clinit_System() , err_0), '', '');
  throw toJs(new RuntimeException_1(t.getMessage(), t));
}

function of_7(val){
  return new CompletableFuture_0(val);
}

function reduceAll(input_0, identity, composer, combiner){
  return reduceAll_0(input_0.stream(), identity, composer, combiner);
}

function reduceAll_0(input_0, identity, composer, combiner){
  var identityFut;
  identityFut = new CompletableFuture_0(identity);
  return castTo(input_0.reduce(identityFut, new Futures$lambda$12$Type(composer), new Futures$lambda$13$Type(combiner)), 6);
}

function runAsync(work, pool){
  var res;
  res = new CompletableFuture;
  $execute(pool, new Futures$lambda$18$Type(work, res));
  return res;
}

defineClass(1232, 1, {});
var Lpeergos_shared_util_Futures_2_classLit = createForClass('peergos.shared.util', 'Futures', 1232);
function Futures$0methodref$complete$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3000, $wnd.Function, $intern_22, Futures$0methodref$complete$Type);
_.apply_0 = function apply_2460(arg0){
  return $clinit_Boolean() , $complete(this.$$outer_0, arg0)?true:false;
}
;
function Futures$1methodref$completeExceptionally$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3001, $wnd.Function, $intern_22, Futures$1methodref$completeExceptionally$Type);
_.apply_0 = function apply_2461(arg0){
  return $clinit_Boolean() , $completeExceptionally(this.$$outer_0, castTo(arg0, 33))?true:false;
}
;
function Futures$2methodref$complete$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(2995, $wnd.Function, $intern_22, Futures$2methodref$complete$Type);
_.apply_0 = function apply_2462(arg0){
  return $clinit_Boolean() , $complete(this.$$outer_0, arg0)?true:false;
}
;
function Futures$3methodref$complete$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3002, $wnd.Function, $intern_22, Futures$3methodref$complete$Type);
_.apply_0 = function apply_2463(arg0){
  return $clinit_Boolean() , $complete(this.$$outer_0, arg0)?true:false;
}
;
function Futures$4methodref$completeExceptionally$Type($$outer_0){
  this.$$outer_0 = $$outer_0;
}

defineClass(3003, $wnd.Function, $intern_22, Futures$4methodref$completeExceptionally$Type);
_.apply_0 = function apply_2464(arg0){
  return $clinit_Boolean() , $completeExceptionally(this.$$outer_0, castTo(arg0, 33))?true:false;
}
;
function Futures$lambda$0$Type(){
}

defineClass(206, 1, $intern_34, Futures$lambda$0$Type);
_.apply_1 = function apply_2465(arg0, arg1){
  return $thenCompose(castTo(arg1, 6), makeLambdaFunction(Futures$lambda$2$Type.prototype.apply_0, Futures$lambda$2$Type, [castTo(arg0, 6)]));
}
;
var Lpeergos_shared_util_Futures$lambda$0$Type_2_classLit = createForClass('peergos.shared.util', 'Futures/lambda$0$Type', 206);
defineClass(207, 1, $intern_34);
_.apply_1 = function apply_2466(arg0, arg1){
  return $thenCompose(castTo(arg1, 6), makeLambdaFunction(Futures$lambda$4$Type.prototype.apply_0, Futures$lambda$4$Type, [castTo(arg0, 6)]));
}
;
var Lpeergos_shared_util_Futures$lambda$1$Type_2_classLit = createForClass('peergos.shared.util', 'Futures/lambda$1$Type', 207);
function Futures$lambda$10$Type(a_0){
  this.a_0 = a_0;
}

defineClass(3011, $wnd.Function, $intern_22, Futures$lambda$10$Type);
_.apply_0 = function apply_2467(arg0){
  return $thenApply(this.a_0, makeLambdaFunction(Futures$lambda$11$Type.prototype.apply_0, Futures$lambda$11$Type, [castTo(arg0, 17)]));
}
;
function Futures$lambda$11$Type(setb_0){
  this.setb_0 = setb_0;
}

defineClass(3010, $wnd.Function, $intern_22, Futures$lambda$11$Type);
_.apply_0 = function apply_2468(arg0){
  return lambda$11_10(this.setb_0, arg0);
}
;
function Futures$lambda$12$Type(composer_0){
  this.composer_0 = composer_0;
}

defineClass(919, 1, $intern_34, Futures$lambda$12$Type);
_.apply_1 = function apply_2469(arg0, arg1){
  return lambda$12_9(this.composer_0, arg0, arg1);
}
;
var Lpeergos_shared_util_Futures$lambda$12$Type_2_classLit = createForClass('peergos.shared.util', 'Futures/lambda$12$Type', 919);
function Futures$lambda$13$Type(combiner_0){
  this.combiner_0 = combiner_0;
}

defineClass(920, 1, $intern_34, Futures$lambda$13$Type);
_.apply_1 = function apply_2470(arg0, arg1){
  return lambda$13_6(this.combiner_0, arg0, arg1);
}
;
var Lpeergos_shared_util_Futures$lambda$13$Type_2_classLit = createForClass('peergos.shared.util', 'Futures/lambda$13$Type', 920);
function Futures$lambda$14$Type(composer_0, b_1){
  this.composer_0 = composer_0;
  this.b_1 = b_1;
}

defineClass(2997, $wnd.Function, $intern_22, Futures$lambda$14$Type);
_.apply_0 = function apply_2471(arg0){
  return lambda$14_11(this.composer_0, this.b_1, arg0);
}
;
function Futures$lambda$15$Type(combiner_0, b_1){
  this.combiner_0 = combiner_0;
  this.b_1 = b_1;
}

defineClass(2998, $wnd.Function, $intern_22, Futures$lambda$15$Type);
_.apply_0 = function apply_2472(arg0){
  return lambda$15_7(this.combiner_0, this.b_1, arg0);
}
;
function Futures$lambda$16$Type(combiner_0, x_1){
  this.combiner_0 = combiner_0;
  this.x_1 = x_1;
}

defineClass(2999, $wnd.Function, $intern_22, Futures$lambda$16$Type);
_.apply_0 = function apply_2473(arg0){
  return this.combiner_0.apply_1(this.x_1, arg0);
}
;
function Futures$lambda$17$Type(inList_0, producer_1){
  this.inList_0 = inList_0;
  this.producer_1 = producer_1;
}

defineClass(2994, $wnd.Function, $intern_22, Futures$lambda$17$Type);
_.apply_0 = function apply_2474(arg0){
  return lambda$17_6(this.inList_0, this.producer_1, arg0);
}
;
function Futures$lambda$18$Type(work_0, res_1){
  this.work_0 = work_0;
  this.res_1 = res_1;
}

defineClass(921, 1, {}, Futures$lambda$18$Type);
_.run = function run_6(){
  lambda$18_8(this.work_0, this.res_1);
}
;
var Lpeergos_shared_util_Futures$lambda$18$Type_2_classLit = createForClass('peergos.shared.util', 'Futures/lambda$18$Type', 921);
function Futures$lambda$2$Type(a_0){
  this.a_0 = a_0;
}

defineClass(3005, $wnd.Function, $intern_22, Futures$lambda$2$Type);
_.apply_0 = function apply_2475(arg0){
  return $thenApply(this.a_0, makeLambdaFunction(Futures$lambda$3$Type.prototype.apply_0, Futures$lambda$3$Type, [arg0]));
}
;
function Futures$lambda$22$Type(exceptional_0, result_1){
  this.exceptional_0 = exceptional_0;
  this.result_1 = result_1;
}

defineClass(2996, $wnd.Function, $intern_22, Futures$lambda$22$Type);
_.apply_0 = function apply_2476(arg0){
  return lambda$22_4(this.exceptional_0, this.result_1, arg0);
}
;
function Futures$lambda$3$Type(opt_0){
  this.opt_0 = opt_0;
}

defineClass(3004, $wnd.Function, $intern_22, Futures$lambda$3$Type);
_.apply_0 = function apply_2477(arg0){
  return lambda$3_10(this.opt_0, arg0);
}
;
function Futures$lambda$4$Type(a_0){
  this.a_0 = a_0;
}

defineClass(3007, $wnd.Function, $intern_22, Futures$lambda$4$Type);
_.apply_0 = function apply_2478(arg0){
  return $thenApply(this.a_0, makeLambdaFunction(Futures$lambda$5$Type.prototype.apply_0, Futures$lambda$5$Type, [castTo(arg0, 47)]));
}
;
function Futures$lambda$5$Type(setb_0){
  this.setb_0 = setb_0;
}

defineClass(3006, $wnd.Function, $intern_22, Futures$lambda$5$Type);
_.apply_0 = function apply_2479(arg0){
  return lambda$5_11(this.setb_0, arg0);
}
;
function Futures$lambda$6$Type(){
}

defineClass(170, 1, $intern_34, Futures$lambda$6$Type);
_.apply_1 = function apply_2480(arg0, arg1){
  return $thenCompose(castTo(arg1, 6), makeLambdaFunction(Futures$lambda$8$Type.prototype.apply_0, Futures$lambda$8$Type, [castTo(arg0, 6)]));
}
;
var Lpeergos_shared_util_Futures$lambda$6$Type_2_classLit = createForClass('peergos.shared.util', 'Futures/lambda$6$Type', 170);
defineClass(171, 1, $intern_34);
_.apply_1 = function apply_2481(arg0, arg1){
  return $thenCompose(castTo(arg1, 6), makeLambdaFunction(Futures$lambda$10$Type.prototype.apply_0, Futures$lambda$10$Type, [castTo(arg0, 6)]));
}
;
var Lpeergos_shared_util_Futures$lambda$7$Type_2_classLit = createForClass('peergos.shared.util', 'Futures/lambda$7$Type', 171);
function Futures$lambda$8$Type(a_0){
  this.a_0 = a_0;
}

defineClass(3009, $wnd.Function, $intern_22, Futures$lambda$8$Type);
_.apply_0 = function apply_2482(arg0){
  return $thenApply(this.a_0, makeLambdaFunction(Futures$lambda$9$Type.prototype.apply_0, Futures$lambda$9$Type, [arg0]));
}
;
function Futures$lambda$9$Type(opt_0){
  this.opt_0 = opt_0;
}

defineClass(3008, $wnd.Function, $intern_22, Futures$lambda$9$Type);
_.apply_0 = function apply_2483(arg0){
  return lambda$9_10(this.opt_0, arg0);
}
;
function LRUCache(cacheSize){
  AbstractHashMap.call(this, 16, 0.75);
  $$init_1(this);
  this.accessOrder = true;
  this.head.prev = this.head;
  this.head.next_0 = this.head;
  this.cacheSize = cacheSize;
}

defineClass(195, 273, $intern_30, LRUCache);
_.removeEldestEntry = function removeEldestEntry_0(eldest){
  return $size(this.map_0) >= this.cacheSize;
}
;
_.cacheSize = 0;
var Lpeergos_shared_util_LRUCache_2_classLit = createForClass('peergos.shared.util', 'LRUCache', 195);
function box(in_0){
  return valueOf_2(in_0);
}

defineClass(1233, 1, {});
var Lpeergos_shared_util_LongUtil_2_classLit = createForClass('peergos.shared.util', 'LongUtil', 1233);
function Pair(left, right){
  this.left = left;
  this.right = right;
}

defineClass(20, 1, {20:1}, Pair);
_.equals_0 = function equals_104(o){
  var pair;
  if (this === o)
    return true;
  if (o == null || Lpeergos_shared_util_Pair_2_classLit != getClass__Ljava_lang_Class___devirtual$(o))
    return false;
  pair = castTo(o, 20);
  if (this.left != null?!equals_Ljava_lang_Object__Z__devirtual$(this.left, pair.left):pair.left != null)
    return false;
  return this.right != null?equals_Ljava_lang_Object__Z__devirtual$(this.right, pair.right):pair.right == null;
}
;
_.hashCode_1 = function hashCode_101(){
  var result;
  result = this.left != null?hashCode__I__devirtual$(this.left):0;
  result = 31 * result + (this.right != null?hashCode__I__devirtual$(this.right):0);
  return result;
}
;
_.toString_0 = function toString_94(){
  return '(' + toString_5(this.left) + ', ' + toString_5(this.right) + ')';
}
;
var Lpeergos_shared_util_Pair_2_classLit = createForClass('peergos.shared.util', 'Pair', 20);
function components(p){
  var i, res;
  res = new ArrayList;
  for (i = 0; i < $getNameCount(p); i++)
    $add(res, $getName_0(p, i).pathString);
  return res;
}

function get_176(in_0, rest){
  var result, split_0, suffixlength;
  in_0 = $replaceAll($trim(in_0), '\\\\', '/');
  $equals_0(in_0.substr(0, 1), '/') && (in_0 = in_0.substr(1));
  suffixlength = '/'.length;
  $equals_0(in_0.substr(in_0.length - suffixlength, suffixlength), '/') && (in_0 = $substring_0(in_0, 0, in_0.length - 1));
  split_0 = $split(in_0, '/');
  if (split_0.length == 0 && rest.length == 0)
    return new Path_0('');
  if (split_0.length == 1 && rest.length == 0)
    return new Path_0(split_0[0]);
  result = of_1(split_0[0], castTo(copyOfRange_0(split_0, 1, split_0.length), 30));
  if (rest.length == 0)
    return result;
  return $resolve(result, get_176(rest[0], castTo(copyOfRange_0(rest, 1, rest.length), 30)).pathString);
}

function deserializeByteArray(din, maxLength){
  var b, l;
  l = $readInt(din);
  if (l == 0)
    return initUnidimensionalArray(B_classLit, $intern_28, 8, 0, 15, 1);
  b = getByteArray(l, maxLength);
  $readFully(din, b, 0, b.length);
  return b;
}

function deserializeString(din, len){
  var b, l;
  l = $readInt(din);
  if (l > len)
    throw toJs(new IOException('String size ' + l + ' too long.'));
  b = initUnidimensionalArray(B_classLit, $intern_28, 8, l, 15, 1);
  $readFully(din, b, 0, b.length);
  return $create_0(b, 0, b.length, ($clinit_EmulatedCharset() , UTF_8_0));
}

function getByteArray(len, maxLength){
  if (len > maxLength)
    throw toJs(new IOException('byte array of size ' + len + ' too big.'));
  return initUnidimensionalArray(B_classLit, $intern_28, 8, len, 15, 1);
}

function lambda$1_22(size_0, stream_1){
  var res;
  return res = initUnidimensionalArray(B_classLit, $intern_28, 8, toInt_0(size_0), 15, 1) , $thenApply(stream_1.readIntoArray(res, 0, toInt_0(size_0)), makeLambdaFunction(Serialize$lambda$2$Type.prototype.apply_0, Serialize$lambda$2$Type, [res]));
}

function lambda$4_14(res_0, f_1, reader_2){
  return reader_2.readIntoArray(res_0, 0, toInt_0(($ensureUnmodified(f_1) , f_1.props).size_0));
}

function lambda$5_12(parser_0, res_1){
  return $apply_3(makeLambdaFunction(Cborable$lambda$0$Type.prototype.apply_0, Cborable$lambda$0$Type, [parser_0]), res_1);
}

function lambda$6_7(parser_0, res_1){
  return $apply_3(makeLambdaFunction(Cborable$lambda$0$Type.prototype.apply_0, Cborable$lambda$0$Type, [parser_0]), res_1);
}

function newByteArray(len){
  return initUnidimensionalArray(B_classLit, $intern_28, 8, len, 15, 1);
}

function parse_6(in_0, size_0, parser){
  var res;
  res = initUnidimensionalArray(B_classLit, $intern_28, 8, toInt_0(size_0), 15, 1);
  return $thenApply(in_0.readIntoArray(res, 0, toInt_0(size_0)), makeLambdaFunction(Serialize$lambda$6$Type.prototype.apply_0, Serialize$lambda$6$Type, [parser, res]));
}

function parse_7(f, parser, network, crypto_0){
  var res;
  res = initUnidimensionalArray(B_classLit, $intern_28, 8, toInt_0(($ensureUnmodified(f) , f.props).size_0), 15, 1);
  return $thenApply($thenCompose($getInputStream_2(f, $get_32(f.version, f.pointer.capability.writer).props, network, crypto_0, makeLambdaFunction(Serialize$lambda$3$Type.prototype.accept_5, Serialize$lambda$3$Type, [])), makeLambdaFunction(Serialize$lambda$4$Type.prototype.apply_0, Serialize$lambda$4$Type, [res, f])), makeLambdaFunction(Serialize$lambda$5$Type.prototype.apply_0, Serialize$lambda$5$Type, [parser, res]));
}

function parse_8(in_0, parser){
  return $apply_3(makeLambdaFunction(Cborable$lambda$0$Type.prototype.apply_0, Cborable$lambda$0$Type, [parser]), in_0);
}

function readFully(in_0, size_0){
  var res;
  res = initUnidimensionalArray(B_classLit, $intern_28, 8, toInt_0(size_0), 15, 1);
  return $thenApply(in_0.readIntoArray(res, 0, toInt_0(size_0)), makeLambdaFunction(Serialize$lambda$2$Type.prototype.apply_0, Serialize$lambda$2$Type, [res]));
}

function readFully_0(f, crypto_0, network){
  var size_0;
  size_0 = ($ensureUnmodified(f) , f.props).size_0;
  return $thenCompose($getInputStream_2(f, $get_32(f.version, f.pointer.capability.writer).props, network, crypto_0, makeLambdaFunction(Serialize$lambda$0$Type.prototype.accept_5, Serialize$lambda$0$Type, [])), makeLambdaFunction(Serialize$lambda$1$Type.prototype.apply_0, Serialize$lambda$1$Type, [size_0]));
}

function serialize_137(s, dout){
  $writeInt(dout, s.length);
  $write_3(dout, $getBytes(s, ($clinit_EmulatedCharset() , UTF_8_0)));
}

function serialize_138(b, dout){
  $writeInt(dout, b.length);
  b.length > 0 && (checkCriticalNotNull(b) , $write_0(dout, b, 0, b.length));
}

defineClass(1234, 1, {});
var Lpeergos_shared_util_Serialize_2_classLit = createForClass('peergos.shared.util', 'Serialize', 1234);
function Serialize$lambda$0$Type(){
}

defineClass(3013, $wnd.Function, {}, Serialize$lambda$0$Type);
_.accept_5 = function accept_193(arg0){
}
;
function Serialize$lambda$1$Type(size_0){
  this.size_0 = size_0;
}

defineClass(3014, $wnd.Function, $intern_22, Serialize$lambda$1$Type);
_.apply_0 = function apply_2484(arg0){
  return lambda$1_22(this.size_0, arg0);
}
;
_.size_0 = 0;
function Serialize$lambda$2$Type(res_0){
  this.res_0 = res_0;
}

defineClass(1207, $wnd.Function, $intern_22, Serialize$lambda$2$Type);
_.apply_0 = function apply_2485(arg0){
  return this.res_0;
}
;
function Serialize$lambda$3$Type(){
}

defineClass(3015, $wnd.Function, {}, Serialize$lambda$3$Type);
_.accept_5 = function accept_194(arg0){
}
;
function Serialize$lambda$4$Type(res_0, f_1){
  this.res_0 = res_0;
  this.f_1 = f_1;
}

defineClass(3016, $wnd.Function, $intern_22, Serialize$lambda$4$Type);
_.apply_0 = function apply_2486(arg0){
  return lambda$4_14(this.res_0, this.f_1, arg0);
}
;
function Serialize$lambda$5$Type(parser_0, res_1){
  this.parser_0 = parser_0;
  this.res_1 = res_1;
}

defineClass(3017, $wnd.Function, $intern_22, Serialize$lambda$5$Type);
_.apply_0 = function apply_2487(arg0){
  return lambda$5_12(this.parser_0, this.res_1);
}
;
function Serialize$lambda$6$Type(parser_0, res_1){
  this.parser_0 = parser_0;
  this.res_1 = res_1;
}

defineClass(3018, $wnd.Function, $intern_22, Serialize$lambda$6$Type);
_.apply_0 = function apply_2488(arg0){
  return lambda$6_7(this.parser_0, this.res_1);
}
;
function Serialize$lambda$7$Type(){
}

defineClass(3019, $wnd.Function, $intern_22, Serialize$lambda$7$Type);
_.apply_0 = function apply_2489(arg0){
  return $clinit_Boolean() , true;
}
;
function signNow(signer){
  var time;
  time = $toByteArray_2(new CborObject$CborLong(($clinit_System() , fromDouble_0(Date.now()))));
  return $crypto_sign(signer.implementation, time, signer.secretKey);
}

function $sign(this$static, signer){
  return $signMessage(signer, $toByteArray_2($toCbor_104(this$static)));
}

function $toCbor_104(this$static){
  var state, transformed;
  state = new TreeMap;
  $put_6(state, 'p', new CborObject$CborString(this$static.path));
  $put_6(state, 't', new CborObject$CborLong(this$static.createdEpochMillis));
  return transformed = castTo($collect_0(new StreamImpl(null, new Spliterators$IteratorSpliterator(new TreeMap$EntrySet(state), 1)), toMap(makeLambdaFunction(CborObject$CborMap$lambda$0$Type.prototype.apply_0, CborObject$CborMap$lambda$0$Type, []), makeLambdaFunction(CborObject$CborMap$lambda$1$Type.prototype.apply_0, CborObject$CborMap$lambda$1$Type, []), new CborObject$CborMap$lambda$2$Type, new CborObject$CborMap$0methodref$ctor$Type)), 39) , new CborObject$CborMap(transformed);
}

function TimeLimitedClient$SignedRequest(path, createdEpochMillis){
  this.path = path;
  this.createdEpochMillis = createdEpochMillis;
}

defineClass(209, 1, $intern_67, TimeLimitedClient$SignedRequest);
_.serialize = function serialize_139(){
  return $toByteArray_2($toCbor_104(this));
}
;
_.toCbor = function toCbor_135(){
  return $toCbor_104(this);
}
;
_.createdEpochMillis = 0;
var Lpeergos_shared_util_TimeLimitedClient$SignedRequest_2_classLit = createForClass('peergos.shared.util', 'TimeLimitedClient/SignedRequest', 209);
function $compareTo_21(this$static, other){
  var major, minor, patch;
  major = compare_4(this$static.major, other.major);
  if (major != 0)
    return major;
  minor = compare_4(this$static.minor, other.minor);
  if (minor != 0)
    return minor;
  patch = compare_4(this$static.patch, other.patch);
  if (patch != 0)
    return patch;
  if (this$static.suffix.length == 0 || other.suffix.length == 0)
    return other.suffix.length - this$static.suffix.length;
  return $compareTo_5(this$static.suffix, other.suffix);
}

function Version(major, minor, patch, suffix){
  this.major = major;
  this.minor = minor;
  this.patch = patch;
  this.suffix = suffix;
}

function parse_9(version){
  var first, major, minor, patch, second, suffix, third;
  first = version.indexOf('.');
  second = version.indexOf('.', first + 1);
  third = version.indexOf('-') != -1?version.indexOf('-'):version.length;
  major = __parseAndValidateInt(version.substr(0, first), 10);
  minor = __parseAndValidateInt(version.substr(first + 1, second - (first + 1)), 10);
  patch = __parseAndValidateInt(version.substr(second + 1, third - (second + 1)), 10);
  suffix = third < version.length?version.substr(third + 1):'';
  return new Version(major, minor, patch, suffix);
}

defineClass(410, 1, {57:1, 410:1}, Version);
_.compareTo_0 = function compareTo_23(other){
  return $compareTo_21(this, castTo(other, 410));
}
;
_.compareTo = function compareTo_24(other){
  return $compareTo_21(this, other);
}
;
_.isBefore = function isBefore(other){
  return $compareTo_21(this, other) < 0;
}
;
_.toString = function toString_95(){
  return this.major + '.' + this.minor + '.' + this.patch + (this.suffix.length > 0?'-' + this.suffix:'');
}
;
_.toString_0 = function(){
  return this.toString();
}
;
_.major = 0;
_.minor = 0;
_.patch = 0;
var Lpeergos_shared_util_Version_2_classLit = createForClass('peergos.shared.util', 'Version', 410);
function $clinit_BarcodeFormat(){
  $clinit_BarcodeFormat = emptyMethod;
  AZTEC = new BarcodeFormat('AZTEC', 0);
  CODABAR = new BarcodeFormat('CODABAR', 1);
  CODE_39 = new BarcodeFormat('CODE_39', 2);
  CODE_93 = new BarcodeFormat('CODE_93', 3);
  CODE_128 = new BarcodeFormat('CODE_128', 4);
  DATA_MATRIX = new BarcodeFormat('DATA_MATRIX', 5);
  EAN_8 = new BarcodeFormat('EAN_8', 6);
  EAN_13 = new BarcodeFormat('EAN_13', 7);
  ITF = new BarcodeFormat('ITF', 8);
  MAXICODE = new BarcodeFormat('MAXICODE', 9);
  PDF_417 = new BarcodeFormat('PDF_417', 10);
  QR_CODE = new BarcodeFormat('QR_CODE', 11);
  RSS_14 = new BarcodeFormat('RSS_14', 12);
  RSS_EXPANDED = new BarcodeFormat('RSS_EXPANDED', 13);
  UPC_A = new BarcodeFormat('UPC_A', 14);
  UPC_E = new BarcodeFormat('UPC_E', 15);
  UPC_EAN_EXTENSION = new BarcodeFormat('UPC_EAN_EXTENSION', 16);
}

function BarcodeFormat(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_22(){
  $clinit_BarcodeFormat();
  return stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_BarcodeFormat_2_classLit, 1), $intern_33, 128, 0, [AZTEC, CODABAR, CODE_39, CODE_93, CODE_128, DATA_MATRIX, EAN_8, EAN_13, ITF, MAXICODE, PDF_417, QR_CODE, RSS_14, RSS_EXPANDED, UPC_A, UPC_E, UPC_EAN_EXTENSION]);
}

defineClass(128, 52, {4:1, 57:1, 52:1, 128:1}, BarcodeFormat);
var AZTEC, CODABAR, CODE_128, CODE_39, CODE_93, DATA_MATRIX, EAN_13, EAN_8, ITF, MAXICODE, PDF_417, QR_CODE, RSS_14, RSS_EXPANDED, UPC_A, UPC_E, UPC_EAN_EXTENSION;
var Lpeergos_shared_zxing_BarcodeFormat_2_classLit = createForEnum('peergos.shared.zxing', 'BarcodeFormat', 128, values_22);
defineClass(1060, 1, {});
var Lpeergos_shared_zxing_Binarizer_2_classLit = createForClass('peergos.shared.zxing', 'Binarizer', 1060);
function BinaryBitmap(binarizer){
  this.binarizer = binarizer;
}

defineClass(1058, 1, {}, BinaryBitmap);
_.toString_0 = function toString_96(){
  try {
    return $buildToString((!this.matrix && (this.matrix = $getBlackMatrix_0(this.binarizer)) , this.matrix));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 368)) {
      return '';
    }
     else 
      throw toJs($e0);
  }
}
;
var Lpeergos_shared_zxing_BinaryBitmap_2_classLit = createForClass('peergos.shared.zxing', 'BinaryBitmap', 1058);
function $clinit_ReaderException(){
  $clinit_ReaderException = emptyMethod;
  NO_TRACE = initUnidimensionalArray(Ljava_lang_StackTraceElement_2_classLit, $intern_0, 164, 0, 0, 1);
}

function ReaderException(){
  $clinit_ReaderException();
  Exception.call(this);
}

defineClass(423, 51, $intern_6);
_.fillInStackTrace = function fillInStackTrace_0(){
  return null;
}
;
var NO_TRACE;
var Lpeergos_shared_zxing_ReaderException_2_classLit = createForClass('peergos.shared.zxing', 'ReaderException', 423);
function $clinit_ChecksumException(){
  $clinit_ChecksumException = emptyMethod;
  $clinit_ReaderException();
  INSTANCE_2 = new ChecksumException;
  $setStackTrace(INSTANCE_2, NO_TRACE);
}

function ChecksumException(){
  $clinit_ChecksumException();
  ReaderException.call(this);
}

defineClass(321, 423, {4:1, 51:1, 33:1, 321:1}, ChecksumException);
var INSTANCE_2;
var Lpeergos_shared_zxing_ChecksumException_2_classLit = createForClass('peergos.shared.zxing', 'ChecksumException', 321);
function $clinit_FormatException(){
  $clinit_FormatException = emptyMethod;
  $clinit_ReaderException();
  INSTANCE_3 = new FormatException;
  $setStackTrace(INSTANCE_3, NO_TRACE);
}

function FormatException(){
  $clinit_FormatException();
  ReaderException.call(this);
}

defineClass(90, 423, {4:1, 51:1, 33:1, 90:1}, FormatException);
var INSTANCE_3;
var Lpeergos_shared_zxing_FormatException_2_classLit = createForClass('peergos.shared.zxing', 'FormatException', 90);
defineClass(1056, 1, {});
_.toString_0 = function toString_97(){
  var c, luminance, result, row, x_0, y_0;
  row = initUnidimensionalArray(B_classLit, $intern_28, 8, this.width_0, 15, 1);
  result = new StringBuilder_0;
  for (y_0 = 0; y_0 < this.height; y_0++) {
    row = $getRow(this, y_0, row);
    for (x_0 = 0; x_0 < this.width_0; x_0++) {
      luminance = row[x_0] & 255;
      luminance < 64?(c = 35):luminance < 128?(c = 43):luminance < 192?(c = 46):(c = 32);
      result.string += String.fromCharCode(c);
    }
    result.string += '\n';
  }
  return result.string;
}
;
_.height = 0;
_.width_0 = 0;
var Lpeergos_shared_zxing_LuminanceSource_2_classLit = createForClass('peergos.shared.zxing', 'LuminanceSource', 1056);
function $clinit_NotFoundException(){
  $clinit_NotFoundException = emptyMethod;
  $clinit_ReaderException();
  INSTANCE_4 = new NotFoundException;
  $setStackTrace(INSTANCE_4, NO_TRACE);
}

function NotFoundException(){
  ReaderException.call(this);
}

defineClass(368, 423, {4:1, 51:1, 33:1, 368:1}, NotFoundException);
var INSTANCE_4;
var Lpeergos_shared_zxing_NotFoundException_2_classLit = createForClass('peergos.shared.zxing', 'NotFoundException', 368);
function $getMatrix(this$static){
  var area, height, inputOffset, matrix, outputOffset, width_0, y_0;
  width_0 = this$static.width_0;
  height = this$static.height;
  if (width_0 == this$static.dataWidth && height == this$static.dataHeight) {
    return this$static.luminances;
  }
  area = width_0 * height;
  matrix = initUnidimensionalArray(B_classLit, $intern_28, 8, area, 15, 1);
  inputOffset = this$static.top_0 * this$static.dataWidth + this$static.left;
  if (width_0 == this$static.dataWidth) {
    arraycopy(this$static.luminances, inputOffset, matrix, 0, area);
    return matrix;
  }
  for (y_0 = 0; y_0 < height; y_0++) {
    outputOffset = y_0 * width_0;
    arraycopy(this$static.luminances, inputOffset, matrix, outputOffset, width_0);
    inputOffset += this$static.dataWidth;
  }
  return matrix;
}

function $getRow(this$static, y_0, row){
  var offset, width_0;
  if (y_0 < 0 || y_0 >= this$static.height) {
    throw toJs(new IllegalArgumentException_0('Requested row is outside the image: ' + y_0));
  }
  width_0 = this$static.width_0;
  (row == null || row.length < width_0) && (row = initUnidimensionalArray(B_classLit, $intern_28, 8, width_0, 15, 1));
  offset = (y_0 + this$static.top_0) * this$static.dataWidth + this$static.left;
  arraycopy(this$static.luminances, offset, row, 0, width_0);
  return row;
}

function RGBLuminanceSource(width_0, height, pixels){
  var b, g2, offset, pixel, r, size_0;
  this.width_0 = width_0;
  this.height = height;
  this.dataWidth = width_0;
  this.dataHeight = height;
  this.left = 0;
  this.top_0 = 0;
  size_0 = width_0 * height;
  this.luminances = initUnidimensionalArray(B_classLit, $intern_28, 8, size_0, 15, 1);
  for (offset = 0; offset < size_0; offset++) {
    pixel = pixels[offset];
    r = pixel >> 16 & 255;
    g2 = pixel >> 7 & 510;
    b = pixel & 255;
    this.luminances[offset] = ((r + g2 + b) / 4 | 0) << 24 >> 24;
  }
}

defineClass(1057, 1056, {}, RGBLuminanceSource);
_.dataHeight = 0;
_.dataWidth = 0;
_.left = 0;
_.top_0 = 0;
var Lpeergos_shared_zxing_RGBLuminanceSource_2_classLit = createForClass('peergos.shared.zxing', 'RGBLuminanceSource', 1057);
function $putMetadata(this$static, type_0, value_0){
  !this$static.resultMetadata && (this$static.resultMetadata = new EnumMap(Lpeergos_shared_zxing_ResultMetadataType_2_classLit));
  $put_2(this$static.resultMetadata, type_0, value_0);
}

function Result(text_0){
  var lastArg;
  Result_0.call(this, (lastArg = text_0 , $clinit_System() , fromDouble_0(Date.now()) , lastArg));
}

function Result_0(text_0){
  this.text_0 = text_0;
  this.resultMetadata = null;
}

defineClass(422, 1, {}, Result);
_.toString_0 = function toString_98(){
  return this.text_0;
}
;
var Lpeergos_shared_zxing_Result_2_classLit = createForClass('peergos.shared.zxing', 'Result', 422);
function $clinit_ResultMetadataType(){
  $clinit_ResultMetadataType = emptyMethod;
  OTHER = new ResultMetadataType('OTHER', 0);
  ORIENTATION = new ResultMetadataType('ORIENTATION', 1);
  BYTE_SEGMENTS = new ResultMetadataType('BYTE_SEGMENTS', 2);
  ERROR_CORRECTION_LEVEL = new ResultMetadataType('ERROR_CORRECTION_LEVEL', 3);
  ISSUE_NUMBER = new ResultMetadataType('ISSUE_NUMBER', 4);
  SUGGESTED_PRICE = new ResultMetadataType('SUGGESTED_PRICE', 5);
  POSSIBLE_COUNTRY = new ResultMetadataType('POSSIBLE_COUNTRY', 6);
  UPC_EAN_EXTENSION_0 = new ResultMetadataType('UPC_EAN_EXTENSION', 7);
  PDF417_EXTRA_METADATA = new ResultMetadataType('PDF417_EXTRA_METADATA', 8);
  STRUCTURED_APPEND_SEQUENCE = new ResultMetadataType('STRUCTURED_APPEND_SEQUENCE', 9);
  STRUCTURED_APPEND_PARITY = new ResultMetadataType('STRUCTURED_APPEND_PARITY', 10);
}

function ResultMetadataType(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_23(){
  $clinit_ResultMetadataType();
  return stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_ResultMetadataType_2_classLit, 1), $intern_33, 162, 0, [OTHER, ORIENTATION, BYTE_SEGMENTS, ERROR_CORRECTION_LEVEL, ISSUE_NUMBER, SUGGESTED_PRICE, POSSIBLE_COUNTRY, UPC_EAN_EXTENSION_0, PDF417_EXTRA_METADATA, STRUCTURED_APPEND_SEQUENCE, STRUCTURED_APPEND_PARITY]);
}

defineClass(162, 52, {4:1, 57:1, 52:1, 162:1}, ResultMetadataType);
var BYTE_SEGMENTS, ERROR_CORRECTION_LEVEL, ISSUE_NUMBER, ORIENTATION, OTHER, PDF417_EXTRA_METADATA, POSSIBLE_COUNTRY, STRUCTURED_APPEND_PARITY, STRUCTURED_APPEND_SEQUENCE, SUGGESTED_PRICE, UPC_EAN_EXTENSION_0;
var Lpeergos_shared_zxing_ResultMetadataType_2_classLit = createForEnum('peergos.shared.zxing', 'ResultMetadataType', 162, values_23);
function ResultPoint(x_0, y_0){
  this.x_0 = x_0;
  this.y_0 = y_0;
}

function distance_0(pattern1, pattern2){
  return distance_1(pattern1.x_0, pattern1.y_0, pattern2.x_0, pattern2.y_0);
}

function orderBestPatterns(patterns){
  var oneTwoDistance, pointA, pointB, pointC, temp, zeroOneDistance, zeroTwoDistance, bX, bY;
  zeroOneDistance = distance_0(patterns[0], patterns[1]);
  oneTwoDistance = distance_0(patterns[1], patterns[2]);
  zeroTwoDistance = distance_0(patterns[0], patterns[2]);
  if (oneTwoDistance >= zeroOneDistance && oneTwoDistance >= zeroTwoDistance) {
    pointB = patterns[0];
    pointA = patterns[1];
    pointC = patterns[2];
  }
   else if (zeroTwoDistance >= oneTwoDistance && zeroTwoDistance >= zeroOneDistance) {
    pointB = patterns[1];
    pointA = patterns[0];
    pointC = patterns[2];
  }
   else {
    pointB = patterns[2];
    pointA = patterns[0];
    pointC = patterns[1];
  }
  if ((bX = pointB.x_0 , bY = pointB.y_0 , (pointC.x_0 - bX) * (pointA.y_0 - bY) - (pointC.y_0 - bY) * (pointA.x_0 - bX)) < 0) {
    temp = pointA;
    pointA = pointC;
    pointC = temp;
  }
  setCheck(patterns, 0, pointA);
  patterns[1] = pointB;
  setCheck(patterns, 2, pointC);
}

defineClass(210, 1, {210:1});
_.equals_0 = function equals_105(other){
  var otherPoint;
  if (instanceOf(other, 210)) {
    otherPoint = castTo(other, 210);
    return this.x_0 == otherPoint.x_0 && this.y_0 == otherPoint.y_0;
  }
  return false;
}
;
_.hashCode_1 = function hashCode_102(){
  return 31 * floatToIntBits(this.x_0) + floatToIntBits(this.y_0);
}
;
_.toString_0 = function toString_99(){
  return '(' + this.x_0 + ',' + this.y_0 + ')';
}
;
_.x_0 = 0;
_.y_0 = 0;
var Lpeergos_shared_zxing_ResultPoint_2_classLit = createForClass('peergos.shared.zxing', 'ResultPoint', 210);
function WriterException(){
  Exception.call(this);
}

function WriterException_0(message){
  Exception_0.call(this, message);
}

function WriterException_1(cause){
  Exception_2.call(this, cause);
}

defineClass(97, 51, {4:1, 51:1, 33:1, 97:1}, WriterException, WriterException_0, WriterException_1);
var Lpeergos_shared_zxing_WriterException_2_classLit = createForClass('peergos.shared.zxing', 'WriterException', 97);
function $appendBit(this$static, bit){
  $ensureCapacity(this$static, this$static.size_0 + 1);
  bit && (this$static.bits[this$static.size_0 / 32 | 0] |= 1 << (this$static.size_0 & 31));
  ++this$static.size_0;
}

function $appendBitArray(this$static, other){
  var i, otherSize;
  otherSize = other.size_0;
  $ensureCapacity(this$static, this$static.size_0 + otherSize);
  for (i = 0; i < otherSize; i++) {
    $appendBit(this$static, (other.bits[i / 32 | 0] & 1 << (i & 31)) != 0);
  }
}

function $appendBits(this$static, value_0, numBits){
  var numBitsLeft;
  if (numBits < 0 || numBits > 32) {
    throw toJs(new IllegalArgumentException_0('Num bits must be between 0 and 32'));
  }
  $ensureCapacity(this$static, this$static.size_0 + numBits);
  for (numBitsLeft = numBits; numBitsLeft > 0; numBitsLeft--) {
    $appendBit(this$static, (value_0 >> numBitsLeft - 1 & 1) == 1);
  }
}

function $ensureCapacity(this$static, size_0){
  var newBits;
  if (size_0 > this$static.bits.length * 32) {
    newBits = initUnidimensionalArray(I_classLit, $intern_29, 8, (size_0 + 31) / 32 | 0, 15, 1);
    arraycopy(this$static.bits, 0, newBits, 0, this$static.bits.length);
    this$static.bits = newBits;
  }
}

function $get_34(this$static, i){
  return (this$static.bits[i / 32 | 0] & 1 << (i & 31)) != 0;
}

function $toBytes_0(this$static, bitOffset, array, numBytes){
  var i, j, theByte;
  for (i = 0; i < numBytes; i++) {
    theByte = 0;
    for (j = 0; j < 8; j++) {
      (this$static.bits[bitOffset / 32 | 0] & 1 << (bitOffset & 31)) != 0 && (theByte |= 1 << 7 - j);
      ++bitOffset;
    }
    array[i] = theByte << 24 >> 24;
  }
}

function $xor(this$static, other){
  var i;
  if (this$static.size_0 != other.size_0) {
    throw toJs(new IllegalArgumentException_0("Sizes don't match"));
  }
  for (i = 0; i < this$static.bits.length; i++) {
    this$static.bits[i] ^= other.bits[i];
  }
}

function BitArray(){
  this.size_0 = 0;
  this.bits = initUnidimensionalArray(I_classLit, $intern_29, 8, 1, 15, 1);
}

defineClass(198, 1, {198:1}, BitArray);
_.equals_0 = function equals_106(o){
  var other;
  if (!instanceOf(o, 198)) {
    return false;
  }
  other = castTo(o, 198);
  return this.size_0 == other.size_0 && equals_17(this.bits, other.bits);
}
;
_.hashCode_1 = function hashCode_103(){
  return 31 * this.size_0 + hashCode_18(this.bits);
}
;
_.toString_0 = function toString_100(){
  var i, result;
  result = new StringBuilder_0;
  for (i = 0; i < this.size_0; i++) {
    (i & 7) == 0 && (result.string += ' ' , result);
    $append(result, (this.bits[i / 32 | 0] & 1 << (i & 31)) != 0?88:46);
  }
  return result.string;
}
;
_.size_0 = 0;
var Lpeergos_shared_zxing_common_BitArray_2_classLit = createForClass('peergos.shared.zxing.common', 'BitArray', 198);
function $buildToString(this$static){
  var offset, result, x_0, y_0;
  result = new StringBuilder_0;
  for (y_0 = 0; y_0 < this$static.height; y_0++) {
    for (x_0 = 0; x_0 < this$static.width_0; x_0++) {
      $append_4(result, (offset = y_0 * this$static.rowSize + (x_0 / 32 | 0) , (this$static.bits[offset] >>> (x_0 & 31) & 1) != 0?'X ':'  '));
    }
    result.string += '\n';
  }
  return result.string;
}

function $flip(this$static, x_0, y_0){
  var offset;
  offset = y_0 * this$static.rowSize + (x_0 / 32 | 0);
  this$static.bits[offset] ^= 1 << (x_0 & 31);
}

function $get_35(this$static, x_0, y_0){
  var offset;
  offset = y_0 * this$static.rowSize + (x_0 / 32 | 0);
  return (this$static.bits[offset] >>> (x_0 & 31) & 1) != 0;
}

function $setRegion(this$static, left, top_0, width_0, height){
  var bottom, offset, right, x_0, y_0;
  if (top_0 < 0 || left < 0) {
    throw toJs(new IllegalArgumentException_0('Left and top must be nonnegative'));
  }
  if (height < 1 || width_0 < 1) {
    throw toJs(new IllegalArgumentException_0('Height and width must be at least 1'));
  }
  right = left + width_0;
  bottom = top_0 + height;
  if (bottom > this$static.height || right > this$static.width_0) {
    throw toJs(new IllegalArgumentException_0('The region must fit inside the matrix'));
  }
  for (y_0 = top_0; y_0 < bottom; y_0++) {
    offset = y_0 * this$static.rowSize;
    for (x_0 = left; x_0 < right; x_0++) {
      this$static.bits[offset + (x_0 / 32 | 0)] |= 1 << (x_0 & 31);
    }
  }
}

function BitMatrix(dimension){
  BitMatrix_0.call(this, dimension, dimension);
}

function BitMatrix_0(width_0, height){
  if (width_0 < 1 || height < 1) {
    throw toJs(new IllegalArgumentException_0('Both dimensions must be greater than 0'));
  }
  this.width_0 = width_0;
  this.height = height;
  this.rowSize = (width_0 + 31) / 32 | 0;
  this.bits = initUnidimensionalArray(I_classLit, $intern_29, 8, this.rowSize * height, 15, 1);
}

defineClass(204, 1, {204:1}, BitMatrix, BitMatrix_0);
_.equals_0 = function equals_107(o){
  var other;
  if (!instanceOf(o, 204)) {
    return false;
  }
  other = castTo(o, 204);
  return this.width_0 == other.width_0 && this.height == other.height && this.rowSize == other.rowSize && equals_17(this.bits, other.bits);
}
;
_.hashCode_1 = function hashCode_104(){
  var hash;
  hash = this.width_0;
  hash = 31 * hash + this.width_0;
  hash = 31 * hash + this.height;
  hash = 31 * hash + this.rowSize;
  hash = 31 * hash + hashCode_18(this.bits);
  return hash;
}
;
_.toString_0 = function toString_101(){
  return $buildToString(this);
}
;
_.height = 0;
_.rowSize = 0;
_.width_0 = 0;
var Lpeergos_shared_zxing_common_BitMatrix_2_classLit = createForClass('peergos.shared.zxing.common', 'BitMatrix', 204);
function $readBits(this$static, numBits){
  var bitsLeft, bitsToNotRead, mask, result, toRead;
  if (numBits < 1 || numBits > 32 || numBits > 8 * (this$static.bytes.length - this$static.byteOffset) - this$static.bitOffset) {
    throw toJs(new IllegalArgumentException_0('' + numBits));
  }
  result = 0;
  if (this$static.bitOffset > 0) {
    bitsLeft = 8 - this$static.bitOffset;
    toRead = numBits < bitsLeft?numBits:bitsLeft;
    bitsToNotRead = bitsLeft - toRead;
    mask = 255 >> 8 - toRead << bitsToNotRead;
    result = (this$static.bytes[this$static.byteOffset] & mask) >> bitsToNotRead;
    numBits -= toRead;
    this$static.bitOffset += toRead;
    if (this$static.bitOffset == 8) {
      this$static.bitOffset = 0;
      ++this$static.byteOffset;
    }
  }
  if (numBits > 0) {
    while (numBits >= 8) {
      result = result << 8 | this$static.bytes[this$static.byteOffset] & 255;
      ++this$static.byteOffset;
      numBits -= 8;
    }
    if (numBits > 0) {
      bitsToNotRead = 8 - numBits;
      mask = 255 >> bitsToNotRead << bitsToNotRead;
      result = result << numBits | (this$static.bytes[this$static.byteOffset] & mask) >> bitsToNotRead;
      this$static.bitOffset += numBits;
    }
  }
  return result;
}

function BitSource(bytes){
  this.bytes = bytes;
}

defineClass(1155, 1, {}, BitSource);
_.bitOffset = 0;
_.byteOffset = 0;
var Lpeergos_shared_zxing_common_BitSource_2_classLit = createForClass('peergos.shared.zxing.common', 'BitSource', 1155);
function $clinit_CharacterSetECI(){
  $clinit_CharacterSetECI = emptyMethod;
  var eci, eci$array, eci$index, eci$max, name_0, name$array, name$index, name$max, value_0, value$array, value$index, value$max;
  Cp437 = new CharacterSetECI_1('Cp437', 0, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [0, 2]), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, []));
  ISO8859_1 = new CharacterSetECI_1('ISO8859_1', 1, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [1, 3]), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['ISO-8859-1']));
  ISO8859_2 = new CharacterSetECI_0('ISO8859_2', 2, 4, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['ISO-8859-2']));
  ISO8859_3 = new CharacterSetECI_0('ISO8859_3', 3, 5, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['ISO-8859-3']));
  ISO8859_4 = new CharacterSetECI_0('ISO8859_4', 4, 6, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['ISO-8859-4']));
  ISO8859_5 = new CharacterSetECI_0('ISO8859_5', 5, 7, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['ISO-8859-5']));
  ISO8859_6 = new CharacterSetECI_0('ISO8859_6', 6, 8, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['ISO-8859-6']));
  ISO8859_7 = new CharacterSetECI_0('ISO8859_7', 7, 9, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['ISO-8859-7']));
  ISO8859_8 = new CharacterSetECI_0('ISO8859_8', 8, 10, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['ISO-8859-8']));
  ISO8859_9 = new CharacterSetECI_0('ISO8859_9', 9, 11, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['ISO-8859-9']));
  ISO8859_10 = new CharacterSetECI_0('ISO8859_10', 10, 12, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['ISO-8859-10']));
  ISO8859_11 = new CharacterSetECI_0('ISO8859_11', 11, 13, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['ISO-8859-11']));
  ISO8859_13 = new CharacterSetECI_0('ISO8859_13', 12, 15, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['ISO-8859-13']));
  ISO8859_14 = new CharacterSetECI_0('ISO8859_14', 13, 16, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['ISO-8859-14']));
  ISO8859_15 = new CharacterSetECI_0('ISO8859_15', 14, 17, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['ISO-8859-15']));
  ISO8859_16 = new CharacterSetECI_0('ISO8859_16', 15, 18, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['ISO-8859-16']));
  SJIS = new CharacterSetECI_0('SJIS', 16, 20, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['Shift_JIS']));
  Cp1250 = new CharacterSetECI_0('Cp1250', 17, 21, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['windows-1250']));
  Cp1251 = new CharacterSetECI_0('Cp1251', 18, 22, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['windows-1251']));
  Cp1252 = new CharacterSetECI_0('Cp1252', 19, 23, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['windows-1252']));
  Cp1256 = new CharacterSetECI_0('Cp1256', 20, 24, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['windows-1256']));
  UnicodeBigUnmarked = new CharacterSetECI_0('UnicodeBigUnmarked', 21, 25, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['UTF-16BE', 'UnicodeBig']));
  UTF8 = new CharacterSetECI_0('UTF8', 22, 26, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['UTF-8']));
  ASCII = new CharacterSetECI_1('ASCII', 23, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [27, 170]), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['US-ASCII']));
  Big5 = new CharacterSetECI;
  GB18030 = new CharacterSetECI_0('GB18030', 25, 29, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['GB2312', 'EUC_CN', 'GBK']));
  EUC_KR = new CharacterSetECI_0('EUC_KR', 26, 30, stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, ['EUC-KR']));
  VALUE_TO_ECI = new HashMap;
  NAME_TO_ECI = new HashMap;
  for (eci$array = values_24() , eci$index = 0 , eci$max = eci$array.length; eci$index < eci$max; ++eci$index) {
    eci = eci$array[eci$index];
    for (value$array = eci.values_0 , value$index = 0 , value$max = value$array.length; value$index < value$max; ++value$index) {
      value_0 = value$array[value$index];
      $put(VALUE_TO_ECI, valueOf_1(value_0), eci);
    }
    $putStringValue(NAME_TO_ECI, eci.name_0 != null?eci.name_0:'' + eci.ordinal_0, eci);
    for (name$array = eci.otherEncodingNames , name$index = 0 , name$max = name$array.length; name$index < name$max; ++name$index) {
      name_0 = name$array[name$index];
      $putStringValue(NAME_TO_ECI, name_0, eci);
    }
  }
}

function CharacterSetECI(){
  CharacterSetECI_1.call(this, 'Big5', 24, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [28]), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_17, 2, 6, []));
}

function CharacterSetECI_0(enum$name, enum$ordinal, value_0, otherEncodingNames){
  Enum.call(this, enum$name, enum$ordinal);
  this.values_0 = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [value_0]);
  this.otherEncodingNames = otherEncodingNames;
}

function CharacterSetECI_1(enum$name, enum$ordinal, values, otherEncodingNames){
  Enum.call(this, enum$name, enum$ordinal);
  this.values_0 = values;
  this.otherEncodingNames = otherEncodingNames;
}

function getCharacterSetECIByValue(value_0){
  $clinit_CharacterSetECI();
  if (value_0 < 0 || value_0 >= 900) {
    throw toJs(($clinit_FormatException() , new FormatException));
  }
  return castTo($get(VALUE_TO_ECI, valueOf_1(value_0)), 85);
}

function values_24(){
  $clinit_CharacterSetECI();
  return stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_common_CharacterSetECI_2_classLit, 1), $intern_33, 85, 0, [Cp437, ISO8859_1, ISO8859_2, ISO8859_3, ISO8859_4, ISO8859_5, ISO8859_6, ISO8859_7, ISO8859_8, ISO8859_9, ISO8859_10, ISO8859_11, ISO8859_13, ISO8859_14, ISO8859_15, ISO8859_16, SJIS, Cp1250, Cp1251, Cp1252, Cp1256, UnicodeBigUnmarked, UTF8, ASCII, Big5, GB18030, EUC_KR]);
}

defineClass(85, 52, {4:1, 57:1, 52:1, 85:1}, CharacterSetECI, CharacterSetECI_0, CharacterSetECI_1);
var ASCII, Big5, Cp1250, Cp1251, Cp1252, Cp1256, Cp437, EUC_KR, GB18030, ISO8859_1, ISO8859_10, ISO8859_11, ISO8859_13, ISO8859_14, ISO8859_15, ISO8859_16, ISO8859_2, ISO8859_3, ISO8859_4, ISO8859_5, ISO8859_6, ISO8859_7, ISO8859_8, ISO8859_9, NAME_TO_ECI, SJIS, UTF8, UnicodeBigUnmarked, VALUE_TO_ECI;
var Lpeergos_shared_zxing_common_CharacterSetECI_2_classLit = createForEnum('peergos.shared.zxing.common', 'CharacterSetECI', 85, values_24);
function $setOther(this$static, other){
  this$static.other = other;
}

function DecoderResult(text_0, byteSegments, ecLevel, saSequence, saParity){
  this.text_0 = text_0;
  this.byteSegments = byteSegments;
  this.ecLevel = ecLevel;
  this.structuredAppendParity = saParity;
  this.structuredAppendSequenceNumber = saSequence;
}

defineClass(1111, 1, {}, DecoderResult);
_.structuredAppendParity = 0;
_.structuredAppendSequenceNumber = 0;
var Lpeergos_shared_zxing_common_DecoderResult_2_classLit = createForClass('peergos.shared.zxing.common', 'DecoderResult', 1111);
function checkAndNudgePoints(image, points){
  var height, maxOffset, nudged, offset, offset0, width_0, x_0, y_0;
  width_0 = image.width_0;
  height = image.height;
  nudged = true;
  maxOffset = points.length - 1;
  for (offset0 = 0; offset0 < maxOffset && nudged; offset0 += 2) {
    x_0 = round_int(points[offset0]);
    y_0 = round_int(points[offset0 + 1]);
    if (x_0 < -1 || x_0 > width_0 || y_0 < -1 || y_0 > height) {
      throw toJs(($clinit_NotFoundException() , $clinit_NotFoundException() , INSTANCE_4));
    }
    nudged = false;
    if (x_0 == -1) {
      points[offset0] = 0;
      nudged = true;
    }
     else if (x_0 == width_0) {
      points[offset0] = width_0 - 1;
      nudged = true;
    }
    if (y_0 == -1) {
      points[offset0 + 1] = 0;
      nudged = true;
    }
     else if (y_0 == height) {
      points[offset0 + 1] = height - 1;
      nudged = true;
    }
  }
  nudged = true;
  for (offset = points.length - 2; offset >= 0 && nudged; offset -= 2) {
    x_0 = round_int(points[offset]);
    y_0 = round_int(points[offset + 1]);
    if (x_0 < -1 || x_0 > width_0 || y_0 < -1 || y_0 > height) {
      throw toJs(($clinit_NotFoundException() , $clinit_NotFoundException() , INSTANCE_4));
    }
    nudged = false;
    if (x_0 == -1) {
      points[offset] = 0;
      nudged = true;
    }
     else if (x_0 == width_0) {
      points[offset] = width_0 - 1;
      nudged = true;
    }
    if (y_0 == -1) {
      points[offset + 1] = 0;
      nudged = true;
    }
     else if (y_0 == height) {
      points[offset + 1] = height - 1;
      nudged = true;
    }
  }
}

function $sampleGrid(image, dimensionX, dimensionY, transform){
  var bits, iValue, max_0, offset, points, x_0, x0, y_0;
  if (dimensionX <= 0 || dimensionY <= 0) {
    throw toJs(($clinit_NotFoundException() , $clinit_NotFoundException() , INSTANCE_4));
  }
  bits = new BitMatrix_0(dimensionX, dimensionY);
  points = initUnidimensionalArray(F_classLit, $intern_18, 8, 2 * dimensionX, 15, 1);
  for (y_0 = 0; y_0 < dimensionY; y_0++) {
    max_0 = points.length;
    iValue = y_0 + 0.5;
    for (x0 = 0; x0 < max_0; x0 += 2) {
      points[x0] = (x0 / 2 | 0) + 0.5;
      points[x0 + 1] = iValue;
    }
    $transformPoints(transform, points);
    checkAndNudgePoints(image, points);
    try {
      for (x_0 = 0; x_0 < max_0; x_0 += 2) {
        $get_35(image, round_int(points[x_0]), round_int(points[x_0 + 1])) && (offset = y_0 * bits.rowSize + ((x_0 / 2 | 0) / 32 | 0) , bits.bits[offset] |= 1 << ((x_0 / 2 | 0) & 31));
      }
    }
     catch ($e0) {
      $e0 = toJava($e0);
      if (instanceOf($e0, 235)) {
        throw toJs(($clinit_NotFoundException() , $clinit_NotFoundException() , INSTANCE_4));
      }
       else 
        throw toJs($e0);
    }
  }
  return bits;
}

function DetectorResult(bits, points){
  this.bits = bits;
  this.points = points;
}

defineClass(1112, 1, {}, DetectorResult);
var Lpeergos_shared_zxing_common_DetectorResult_2_classLit = createForClass('peergos.shared.zxing.common', 'DetectorResult', 1112);
function $clinit_GlobalHistogramBinarizer(){
  $clinit_GlobalHistogramBinarizer = emptyMethod;
  EMPTY_3 = initUnidimensionalArray(B_classLit, $intern_28, 8, 0, 15, 1);
}

function $getBlackMatrix(this$static){
  var blackPoint, height, localBuckets, localLuminances, localLuminances0, matrix, offset, offset0, pixel, right, row, source, width_0, x_0, y_0, y0;
  source = this$static.source;
  width_0 = source.width_0;
  height = source.height;
  matrix = new BitMatrix_0(width_0, height);
  $initArrays(this$static, width_0);
  localBuckets = this$static.buckets;
  for (y0 = 1; y0 < 5; y0++) {
    row = height * y0 / 5 | 0;
    localLuminances0 = $getRow(source, row, this$static.luminances);
    right = width_0 * 4 / 5 | 0;
    for (x_0 = width_0 / 5 | 0; x_0 < right; x_0++) {
      pixel = localLuminances0[x_0] & 255;
      ++localBuckets[pixel >> 3];
    }
  }
  blackPoint = estimateBlackPoint(localBuckets);
  localLuminances = $getMatrix(source);
  for (y_0 = 0; y_0 < height; y_0++) {
    offset0 = y_0 * width_0;
    for (x_0 = 0; x_0 < width_0; x_0++) {
      pixel = localLuminances[offset0 + x_0] & 255;
      pixel < blackPoint && (offset = y_0 * matrix.rowSize + (x_0 / 32 | 0) , matrix.bits[offset] |= 1 << (x_0 & 31));
    }
  }
  return matrix;
}

function $initArrays(this$static, luminanceSize){
  var x_0;
  this$static.luminances.length < luminanceSize && (this$static.luminances = initUnidimensionalArray(B_classLit, $intern_28, 8, luminanceSize, 15, 1));
  for (x_0 = 0; x_0 < 32; x_0++) {
    this$static.buckets[x_0] = 0;
  }
}

function estimateBlackPoint(buckets){
  var bestValley, bestValleyScore, distanceToBiggest, firstPeak, firstPeakSize, fromFirst, maxBucketCount, numBuckets, score, secondPeak, secondPeakScore, temp, x_0, x0, x1;
  numBuckets = buckets.length;
  maxBucketCount = 0;
  firstPeak = 0;
  firstPeakSize = 0;
  for (x0 = 0; x0 < numBuckets; x0++) {
    if (buckets[x0] > firstPeakSize) {
      firstPeak = x0;
      firstPeakSize = buckets[x0];
    }
    buckets[x0] > maxBucketCount && (maxBucketCount = buckets[x0]);
  }
  secondPeak = 0;
  secondPeakScore = 0;
  for (x1 = 0; x1 < numBuckets; x1++) {
    distanceToBiggest = x1 - firstPeak;
    score = buckets[x1] * distanceToBiggest * distanceToBiggest;
    if (score > secondPeakScore) {
      secondPeak = x1;
      secondPeakScore = score;
    }
  }
  if (firstPeak > secondPeak) {
    temp = firstPeak;
    firstPeak = secondPeak;
    secondPeak = temp;
  }
  if (secondPeak - firstPeak <= (numBuckets / 16 | 0)) {
    throw toJs(($clinit_NotFoundException() , $clinit_NotFoundException() , INSTANCE_4));
  }
  bestValley = secondPeak - 1;
  bestValleyScore = -1;
  for (x_0 = secondPeak - 1; x_0 > firstPeak; x_0--) {
    fromFirst = x_0 - firstPeak;
    score = fromFirst * fromFirst * (secondPeak - x_0) * (maxBucketCount - buckets[x_0]);
    if (score > bestValleyScore) {
      bestValley = x_0;
      bestValleyScore = score;
    }
  }
  return bestValley << 3;
}

defineClass(1061, 1060, {});
var EMPTY_3;
var Lpeergos_shared_zxing_common_GlobalHistogramBinarizer_2_classLit = createForClass('peergos.shared.zxing.common', 'GlobalHistogramBinarizer', 1061);
function $getBlackMatrix_0(this$static){
  var blackPoints, height, luminances, newMatrix, source, subHeight, subWidth, width_0;
  if (this$static.matrix) {
    return this$static.matrix;
  }
  source = this$static.source;
  width_0 = source.width_0;
  height = source.height;
  if (width_0 >= 40 && height >= 40) {
    luminances = $getMatrix(source);
    subWidth = width_0 >> 3;
    (width_0 & 7) != 0 && ++subWidth;
    subHeight = height >> 3;
    (height & 7) != 0 && ++subHeight;
    blackPoints = calculateBlackPoints(luminances, subWidth, subHeight, width_0, height);
    newMatrix = new BitMatrix_0(width_0, height);
    calculateThresholdForBlock(luminances, subWidth, subHeight, width_0, height, blackPoints, newMatrix);
    this$static.matrix = newMatrix;
  }
   else {
    this$static.matrix = $getBlackMatrix(this$static);
  }
  return this$static.matrix;
}

function HybridBinarizer(source){
  $clinit_GlobalHistogramBinarizer();
  this.source = source;
  this.luminances = EMPTY_3;
  this.buckets = initUnidimensionalArray(I_classLit, $intern_29, 8, 32, 15, 1);
}

function calculateBlackPoints(luminances, subWidth, subHeight, width_0, height){
  var average, averageNeighborBlackPoint, blackPoints, max_0, maxXOffset, maxYOffset, min_0, offset, pixel, sum, x_0, xoffset, xx, xx0, y_0, yoffset, yy;
  maxYOffset = height - 8;
  maxXOffset = width_0 - 8;
  blackPoints = initMultidimensionalArray(I_classLit, [$intern_0, $intern_29], [15, 8], 15, [subHeight, subWidth], 2);
  for (y_0 = 0; y_0 < subHeight; y_0++) {
    yoffset = y_0 << 3;
    yoffset > maxYOffset && (yoffset = maxYOffset);
    for (x_0 = 0; x_0 < subWidth; x_0++) {
      xoffset = x_0 << 3;
      xoffset > maxXOffset && (xoffset = maxXOffset);
      sum = 0;
      min_0 = 255;
      max_0 = 0;
      for (yy = 0 , offset = yoffset * width_0 + xoffset; yy < 8; ++yy , offset += width_0) {
        for (xx0 = 0; xx0 < 8; xx0++) {
          pixel = luminances[offset + xx0] & 255;
          sum += pixel;
          pixel < min_0 && (min_0 = pixel);
          pixel > max_0 && (max_0 = pixel);
        }
        if (max_0 - min_0 > 24) {
          for (++yy , offset += width_0; yy < 8; ++yy , offset += width_0) {
            for (xx = 0; xx < 8; xx++) {
              sum += luminances[offset + xx] & 255;
            }
          }
        }
      }
      average = sum >> 6;
      if (max_0 - min_0 <= 24) {
        average = min_0 / 2 | 0;
        if (y_0 > 0 && x_0 > 0) {
          averageNeighborBlackPoint = (blackPoints[y_0 - 1][x_0] + 2 * blackPoints[y_0][x_0 - 1] + blackPoints[y_0 - 1][x_0 - 1]) / 4 | 0;
          min_0 < averageNeighborBlackPoint && (average = averageNeighborBlackPoint);
        }
      }
      blackPoints[y_0][x_0] = average;
    }
  }
  return blackPoints;
}

function calculateThresholdForBlock(luminances, subWidth, subHeight, width_0, height, blackPoints, matrix){
  var average, blackRow, left, maxXOffset, maxYOffset, sum, top_0, x_0, xoffset, y_0, yoffset, z_0;
  maxYOffset = height - 8;
  maxXOffset = width_0 - 8;
  for (y_0 = 0; y_0 < subHeight; y_0++) {
    yoffset = y_0 << 3;
    yoffset > maxYOffset && (yoffset = maxYOffset);
    top_0 = y_0 < 2?2:y_0 > subHeight - 3?subHeight - 3:y_0;
    for (x_0 = 0; x_0 < subWidth; x_0++) {
      xoffset = x_0 << 3;
      xoffset > maxXOffset && (xoffset = maxXOffset);
      left = x_0 < 2?2:x_0 > subWidth - 3?subWidth - 3:x_0;
      sum = 0;
      for (z_0 = -2; z_0 <= 2; z_0++) {
        blackRow = blackPoints[top_0 + z_0];
        sum += blackRow[left - 2] + blackRow[left - 1] + blackRow[left] + blackRow[left + 1] + blackRow[left + 2];
      }
      average = sum / 25 | 0;
      thresholdBlock(luminances, xoffset, yoffset, average, width_0, matrix);
    }
  }
}

function thresholdBlock(luminances, xoffset, yoffset, threshold, stride, matrix){
  var offset, offset0, x_0, y_0;
  for (y_0 = 0 , offset0 = yoffset * stride + xoffset; y_0 < 8; ++y_0 , offset0 += stride) {
    for (x_0 = 0; x_0 < 8; x_0++) {
      (luminances[offset0 + x_0] & 255) <= threshold && (offset = (yoffset + y_0) * matrix.rowSize + ((xoffset + x_0) / 32 | 0) , matrix.bits[offset] |= 1 << (xoffset + x_0 & 31));
    }
  }
}

defineClass(1062, 1061, {}, HybridBinarizer);
var Lpeergos_shared_zxing_common_HybridBinarizer_2_classLit = createForClass('peergos.shared.zxing.common', 'HybridBinarizer', 1062);
function $buildAdjoint(this$static){
  return new PerspectiveTransform(this$static.a22 * this$static.a33 - this$static.a23 * this$static.a32, this$static.a23 * this$static.a31 - this$static.a21 * this$static.a33, this$static.a21 * this$static.a32 - this$static.a22 * this$static.a31, this$static.a13 * this$static.a32 - this$static.a12 * this$static.a33, this$static.a11 * this$static.a33 - this$static.a13 * this$static.a31, this$static.a12 * this$static.a31 - this$static.a11 * this$static.a32, this$static.a12 * this$static.a23 - this$static.a13 * this$static.a22, this$static.a13 * this$static.a21 - this$static.a11 * this$static.a23, this$static.a11 * this$static.a22 - this$static.a12 * this$static.a21);
}

function $transformPoints(this$static, points){
  var a11, a12, a13, a21, a22, a23, a31, a32, a33, denominator, i, maxI, x_0, y_0;
  a11 = this$static.a11;
  a12 = this$static.a12;
  a13 = this$static.a13;
  a21 = this$static.a21;
  a22 = this$static.a22;
  a23 = this$static.a23;
  a31 = this$static.a31;
  a32 = this$static.a32;
  a33 = this$static.a33;
  maxI = points.length - 1;
  for (i = 0; i < maxI; i += 2) {
    x_0 = points[i];
    y_0 = points[i + 1];
    denominator = a13 * x_0 + a23 * y_0 + a33;
    points[i] = (a11 * x_0 + a21 * y_0 + a31) / denominator;
    points[i + 1] = (a12 * x_0 + a22 * y_0 + a32) / denominator;
  }
}

function PerspectiveTransform(a11, a21, a31, a12, a22, a32, a13, a23, a33){
  this.a11 = a11;
  this.a12 = a12;
  this.a13 = a13;
  this.a21 = a21;
  this.a22 = a22;
  this.a23 = a23;
  this.a31 = a31;
  this.a32 = a32;
  this.a33 = a33;
}

function quadrilateralToQuadrilateral(x1, x2, y2, y3, x0p, y0p, x1p, y1p, x2p, y2p, x3p, y3p){
  var qToS, sToQ;
  qToS = $buildAdjoint(squareToQuadrilateral(3.5, 3.5, x1, 3.5, x2, y2, 3.5, y3));
  sToQ = squareToQuadrilateral(x0p, y0p, x1p, y1p, x2p, y2p, x3p, y3p);
  return new PerspectiveTransform(sToQ.a11 * qToS.a11 + sToQ.a21 * qToS.a12 + sToQ.a31 * qToS.a13, sToQ.a11 * qToS.a21 + sToQ.a21 * qToS.a22 + sToQ.a31 * qToS.a23, sToQ.a11 * qToS.a31 + sToQ.a21 * qToS.a32 + sToQ.a31 * qToS.a33, sToQ.a12 * qToS.a11 + sToQ.a22 * qToS.a12 + sToQ.a32 * qToS.a13, sToQ.a12 * qToS.a21 + sToQ.a22 * qToS.a22 + sToQ.a32 * qToS.a23, sToQ.a12 * qToS.a31 + sToQ.a22 * qToS.a32 + sToQ.a32 * qToS.a33, sToQ.a13 * qToS.a11 + sToQ.a23 * qToS.a12 + sToQ.a33 * qToS.a13, sToQ.a13 * qToS.a21 + sToQ.a23 * qToS.a22 + sToQ.a33 * qToS.a23, sToQ.a13 * qToS.a31 + sToQ.a23 * qToS.a32 + sToQ.a33 * qToS.a33);
}

function squareToQuadrilateral(x0, y0, x1, y1, x2, y2, x3, y3){
  var a13, a23, denominator, dx1, dx2, dx3, dy1, dy2, dy3;
  dx3 = x0 - x1 + x2 - x3;
  dy3 = y0 - y1 + y2 - y3;
  if (dx3 == 0 && dy3 == 0) {
    return new PerspectiveTransform(x1 - x0, x2 - x1, x0, y1 - y0, y2 - y1, y0, 0, 0, 1);
  }
   else {
    dx1 = x1 - x2;
    dx2 = x3 - x2;
    dy1 = y1 - y2;
    dy2 = y3 - y2;
    denominator = dx1 * dy2 - dx2 * dy1;
    a13 = (dx3 * dy2 - dx2 * dy3) / denominator;
    a23 = (dx1 * dy3 - dx3 * dy1) / denominator;
    return new PerspectiveTransform(x1 - x0 + a13 * x1, x3 - x0 + a23 * x3, x0, y1 - y0 + a13 * y1, y3 - y0 + a23 * y3, y0, a13, a23, 1);
  }
}

defineClass(371, 1, {}, PerspectiveTransform);
_.a11 = 0;
_.a12 = 0;
_.a13 = 0;
_.a21 = 0;
_.a22 = 0;
_.a23 = 0;
_.a31 = 0;
_.a32 = 0;
_.a33 = 0;
var Lpeergos_shared_zxing_common_PerspectiveTransform_2_classLit = createForClass('peergos.shared.zxing.common', 'PerspectiveTransform', 371);
function distance_1(aX, aY, bX, bY){
  var xDiff, yDiff;
  xDiff = aX - bX;
  yDiff = aY - bY;
  return $wnd.Math.sqrt(xDiff * xDiff + yDiff * yDiff);
}

function distance_2(aX, aY, bX, bY){
  var xDiff, yDiff;
  xDiff = aX - bX;
  yDiff = aY - bY;
  return $wnd.Math.sqrt(xDiff * xDiff + yDiff * yDiff);
}

function round_0(d){
  return round_int(d + (d < 0?-0.5:0.5));
}

function $clinit_GenericGF(){
  $clinit_GenericGF = emptyMethod;
  new GenericGF(4201, $intern_15, 1);
  new GenericGF(1033, $intern_65, 1);
  new GenericGF(67, 64, 1);
  new GenericGF(19, 16, 1);
  QR_CODE_FIELD_256 = new GenericGF(285, 256, 0);
  new GenericGF(301, 256, 1);
}

function $buildMonomial(this$static, degree, coefficient){
  var coefficients;
  if (degree < 0) {
    throw toJs(new IllegalArgumentException);
  }
  if (coefficient == 0) {
    return this$static.zero;
  }
  coefficients = initUnidimensionalArray(I_classLit, $intern_29, 8, degree + 1, 15, 1);
  coefficients[0] = coefficient;
  return new GenericGFPoly(this$static, coefficients);
}

function $exp_0(this$static, a){
  return this$static.expTable[a];
}

function $inverse(this$static, a){
  if (a == 0) {
    throw toJs(new ArithmeticException);
  }
  return this$static.expTable[this$static.size_0 - this$static.logTable[a] - 1];
}

function $log_2(this$static, a){
  if (a == 0) {
    throw toJs(new IllegalArgumentException);
  }
  return this$static.logTable[a];
}

function $multiply_0(this$static, a, b){
  if (a == 0 || b == 0) {
    return 0;
  }
  return this$static.expTable[(this$static.logTable[a] + this$static.logTable[b]) % (this$static.size_0 - 1)];
}

function GenericGF(primitive, size_0, b){
  var i, i0, x_0;
  this.primitive = primitive;
  this.size_0 = size_0;
  this.generatorBase = b;
  this.expTable = initUnidimensionalArray(I_classLit, $intern_29, 8, size_0, 15, 1);
  this.logTable = initUnidimensionalArray(I_classLit, $intern_29, 8, size_0, 15, 1);
  x_0 = 1;
  for (i0 = 0; i0 < size_0; i0++) {
    this.expTable[i0] = x_0;
    x_0 *= 2;
    if (x_0 >= size_0) {
      x_0 ^= primitive;
      x_0 &= size_0 - 1;
    }
  }
  for (i = 0; i < size_0 - 1; i++) {
    this.logTable[this.expTable[i]] = i;
  }
  this.zero = new GenericGFPoly(this, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [0]));
  this.one = new GenericGFPoly(this, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [1]));
}

defineClass(285, 1, {}, GenericGF);
_.toString_0 = function toString_102(){
  var number;
  return number = this.primitive >>> 0 , 'GF(0x' + number.toString(16) + ',' + this.size_0 + ')';
}
;
_.generatorBase = 0;
_.primitive = 0;
_.size_0 = 0;
var QR_CODE_FIELD_256;
var Lpeergos_shared_zxing_common_reedsolomon_GenericGF_2_classLit = createForClass('peergos.shared.zxing.common.reedsolomon', 'GenericGF', 285);
function $addOrSubtract(this$static, other){
  var i, largerCoefficients, lengthDiff, smallerCoefficients, sumDiff, temp;
  if (this$static.field != other.field) {
    throw toJs(new IllegalArgumentException_0('GenericGFPolys do not have same GenericGF field'));
  }
  if (this$static.coefficients[0] == 0) {
    return other;
  }
  if (other.coefficients[0] == 0) {
    return this$static;
  }
  smallerCoefficients = this$static.coefficients;
  largerCoefficients = other.coefficients;
  if (smallerCoefficients.length > largerCoefficients.length) {
    temp = smallerCoefficients;
    smallerCoefficients = largerCoefficients;
    largerCoefficients = temp;
  }
  sumDiff = initUnidimensionalArray(I_classLit, $intern_29, 8, largerCoefficients.length, 15, 1);
  lengthDiff = largerCoefficients.length - smallerCoefficients.length;
  arraycopy(largerCoefficients, 0, sumDiff, 0, lengthDiff);
  for (i = lengthDiff; i < largerCoefficients.length; i++) {
    sumDiff[i] = ($clinit_GenericGF() , smallerCoefficients[i - lengthDiff] ^ largerCoefficients[i]);
  }
  return new GenericGFPoly(this$static.field, sumDiff);
}

function $divide(this$static, other){
  var degreeDifference, denominatorLeadingTerm, inverseDenominatorLeadingTerm, iterationQuotient, quotient, remainder, scale, term;
  if (this$static.field != other.field) {
    throw toJs(new IllegalArgumentException_0('GenericGFPolys do not have same GenericGF field'));
  }
  if (other.coefficients[0] == 0) {
    throw toJs(new IllegalArgumentException_0('Divide by 0'));
  }
  quotient = this$static.field.zero;
  remainder = this$static;
  denominatorLeadingTerm = $getCoefficient(other, other.coefficients.length - 1);
  inverseDenominatorLeadingTerm = $inverse(this$static.field, denominatorLeadingTerm);
  while (remainder.coefficients.length - 1 >= other.coefficients.length - 1 && remainder.coefficients[0] != 0) {
    degreeDifference = remainder.coefficients.length - 1 - (other.coefficients.length - 1);
    scale = $multiply_0(this$static.field, $getCoefficient(remainder, remainder.coefficients.length - 1), inverseDenominatorLeadingTerm);
    term = $multiplyByMonomial(other, degreeDifference, scale);
    iterationQuotient = $buildMonomial(this$static.field, degreeDifference, scale);
    quotient = $addOrSubtract(quotient, iterationQuotient);
    remainder = $addOrSubtract(remainder, term);
  }
  return stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_common_reedsolomon_GenericGFPoly_2_classLit, 1), $intern_0, 134, 0, [quotient, remainder]);
}

function $evaluateAt(this$static, a){
  var coefficient, coefficient$array, coefficient$index, coefficient$max, i, result, result0, size_0;
  if (a == 0) {
    return this$static.coefficients[this$static.coefficients.length - 1];
  }
  if (a == 1) {
    result0 = 0;
    for (coefficient$array = this$static.coefficients , coefficient$index = 0 , coefficient$max = coefficient$array.length; coefficient$index < coefficient$max; ++coefficient$index) {
      coefficient = coefficient$array[coefficient$index];
      result0 = ($clinit_GenericGF() , result0 ^ coefficient);
    }
    return result0;
  }
  result = this$static.coefficients[0];
  size_0 = this$static.coefficients.length;
  for (i = 1; i < size_0; i++) {
    result = ($clinit_GenericGF() , $multiply_0(this$static.field, a, result) ^ this$static.coefficients[i]);
  }
  return result;
}

function $getCoefficient(this$static, degree){
  return this$static.coefficients[this$static.coefficients.length - 1 - degree];
}

function $multiply_1(this$static, scalar){
  var i, product, size_0;
  if (scalar == 0) {
    return this$static.field.zero;
  }
  if (scalar == 1) {
    return this$static;
  }
  size_0 = this$static.coefficients.length;
  product = initUnidimensionalArray(I_classLit, $intern_29, 8, size_0, 15, 1);
  for (i = 0; i < size_0; i++) {
    product[i] = $multiply_0(this$static.field, this$static.coefficients[i], scalar);
  }
  return new GenericGFPoly(this$static.field, product);
}

function $multiply_2(this$static, other){
  var aCoeff, aCoefficients, aLength, bCoefficients, bLength, i, j, product;
  if (this$static.field != other.field) {
    throw toJs(new IllegalArgumentException_0('GenericGFPolys do not have same GenericGF field'));
  }
  if (this$static.coefficients[0] == 0 || other.coefficients[0] == 0) {
    return this$static.field.zero;
  }
  aCoefficients = this$static.coefficients;
  aLength = aCoefficients.length;
  bCoefficients = other.coefficients;
  bLength = bCoefficients.length;
  product = initUnidimensionalArray(I_classLit, $intern_29, 8, aLength + bLength - 1, 15, 1);
  for (i = 0; i < aLength; i++) {
    aCoeff = aCoefficients[i];
    for (j = 0; j < bLength; j++) {
      product[i + j] = ($clinit_GenericGF() , product[i + j] ^ $multiply_0(this$static.field, aCoeff, bCoefficients[j]));
    }
  }
  return new GenericGFPoly(this$static.field, product);
}

function $multiplyByMonomial(this$static, degree, coefficient){
  var i, product, size_0;
  if (degree < 0) {
    throw toJs(new IllegalArgumentException);
  }
  if (coefficient == 0) {
    return this$static.field.zero;
  }
  size_0 = this$static.coefficients.length;
  product = initUnidimensionalArray(I_classLit, $intern_29, 8, size_0 + degree, 15, 1);
  for (i = 0; i < size_0; i++) {
    product[i] = $multiply_0(this$static.field, this$static.coefficients[i], coefficient);
  }
  return new GenericGFPoly(this$static.field, product);
}

function GenericGFPoly(field, coefficients){
  var coefficientsLength, firstNonZero;
  if (coefficients.length == 0) {
    throw toJs(new IllegalArgumentException);
  }
  this.field = field;
  coefficientsLength = coefficients.length;
  if (coefficientsLength > 1 && coefficients[0] == 0) {
    firstNonZero = 1;
    while (firstNonZero < coefficientsLength && coefficients[firstNonZero] == 0) {
      ++firstNonZero;
    }
    if (firstNonZero == coefficientsLength) {
      this.coefficients = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [0]);
    }
     else {
      this.coefficients = initUnidimensionalArray(I_classLit, $intern_29, 8, coefficientsLength - firstNonZero, 15, 1);
      arraycopy(coefficients, firstNonZero, this.coefficients, 0, this.coefficients.length);
    }
  }
   else {
    this.coefficients = coefficients;
  }
}

defineClass(134, 1, {134:1}, GenericGFPoly);
_.toString_0 = function toString_103(){
  var alphaPower, coefficient, degree, result;
  if (this.coefficients[0] == 0) {
    return '0';
  }
  result = new StringBuilder_0;
  for (degree = this.coefficients.length - 1; degree >= 0; degree--) {
    coefficient = this.coefficients[this.coefficients.length - 1 - degree];
    if (coefficient != 0) {
      if (coefficient < 0) {
        degree == this.coefficients.length - 1?(result.string += '-' , result):(result.string += ' - ' , result);
        coefficient = -coefficient;
      }
       else {
        result.string.length > 0 && (result.string += ' + ' , result);
      }
      if (degree == 0 || coefficient != 1) {
        alphaPower = $log_2(this.field, coefficient);
        if (alphaPower == 0) {
          result.string += '1';
        }
         else if (alphaPower == 1) {
          result.string += 'a';
        }
         else {
          result.string += 'a^';
          result.string += alphaPower;
        }
      }
      if (degree != 0) {
        if (degree == 1) {
          result.string += 'x';
        }
         else {
          result.string += 'x^';
          result.string += degree;
        }
      }
    }
  }
  return result.string;
}
;
var Lpeergos_shared_zxing_common_reedsolomon_GenericGFPoly_2_classLit = createForClass('peergos.shared.zxing.common.reedsolomon', 'GenericGFPoly', 134);
function $decode_0(this$static, received, twoS){
  var errorLocations, errorMagnitudes, eval_0, i, i0, noError, omega, poly, position, sigma, sigmaOmega, syndrome, syndromeCoefficients;
  poly = new GenericGFPoly(this$static.field, received);
  syndromeCoefficients = initUnidimensionalArray(I_classLit, $intern_29, 8, twoS, 15, 1);
  noError = true;
  for (i0 = 0; i0 < twoS; i0++) {
    eval_0 = $evaluateAt(poly, $exp_0(this$static.field, i0 + this$static.field.generatorBase));
    syndromeCoefficients[syndromeCoefficients.length - 1 - i0] = eval_0;
    eval_0 != 0 && (noError = false);
  }
  if (noError) {
    return;
  }
  syndrome = new GenericGFPoly(this$static.field, syndromeCoefficients);
  sigmaOmega = $runEuclideanAlgorithm(this$static, $buildMonomial(this$static.field, twoS, 1), syndrome, twoS);
  sigma = sigmaOmega[0];
  omega = sigmaOmega[1];
  errorLocations = $findErrorLocations(this$static, sigma);
  errorMagnitudes = $findErrorMagnitudes(this$static, omega, errorLocations);
  for (i = 0; i < errorLocations.length; i++) {
    position = received.length - 1 - $log_2(this$static.field, errorLocations[i]);
    if (position < 0) {
      throw toJs(new ReedSolomonException('Bad error location'));
    }
    received[position] = ($clinit_GenericGF() , received[position] ^ errorMagnitudes[i]);
  }
}

function $findErrorLocations(this$static, errorLocator){
  var e, i, numErrors, result;
  numErrors = errorLocator.coefficients.length - 1;
  if (numErrors == 1) {
    return stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [errorLocator.coefficients[errorLocator.coefficients.length - 1 - 1]]);
  }
  result = initUnidimensionalArray(I_classLit, $intern_29, 8, numErrors, 15, 1);
  e = 0;
  for (i = 1; i < this$static.field.size_0 && e < numErrors; i++) {
    if ($evaluateAt(errorLocator, i) == 0) {
      result[e] = $inverse(this$static.field, i);
      ++e;
    }
  }
  if (e != numErrors) {
    throw toJs(new ReedSolomonException('Error locator degree does not match number of roots'));
  }
  return result;
}

function $findErrorMagnitudes(this$static, errorEvaluator, errorLocations){
  var denominator, i, j, result, s, term, termPlus1, xiInverse;
  s = errorLocations.length;
  result = initUnidimensionalArray(I_classLit, $intern_29, 8, s, 15, 1);
  for (i = 0; i < s; i++) {
    xiInverse = $inverse(this$static.field, errorLocations[i]);
    denominator = 1;
    for (j = 0; j < s; j++) {
      if (i != j) {
        term = $multiply_0(this$static.field, errorLocations[j], xiInverse);
        termPlus1 = (term & 1) == 0?term | 1:term & -2;
        denominator = $multiply_0(this$static.field, denominator, termPlus1);
      }
    }
    result[i] = $multiply_0(this$static.field, $evaluateAt(errorEvaluator, xiInverse), $inverse(this$static.field, denominator));
    this$static.field.generatorBase != 0 && (result[i] = $multiply_0(this$static.field, result[i], xiInverse));
  }
  return result;
}

function $runEuclideanAlgorithm(this$static, a, b, R){
  var degreeDiff, denominatorLeadingTerm, dltInverse, inverse, omega, q, r, rLast, rLastLast, scale, sigma, sigmaTildeAtZero, t, tLast, tLastLast, temp;
  if (a.coefficients.length - 1 < b.coefficients.length - 1) {
    temp = a;
    a = b;
    b = temp;
  }
  rLast = a;
  r = b;
  tLast = this$static.field.zero;
  t = this$static.field.one;
  while (r.coefficients.length - 1 >= (R / 2 | 0)) {
    rLastLast = rLast;
    tLastLast = tLast;
    rLast = r;
    tLast = t;
    if (rLast.coefficients[0] == 0) {
      throw toJs(new ReedSolomonException('r_{i-1} was zero'));
    }
    r = rLastLast;
    q = this$static.field.zero;
    denominatorLeadingTerm = $getCoefficient(rLast, rLast.coefficients.length - 1);
    dltInverse = $inverse(this$static.field, denominatorLeadingTerm);
    while (r.coefficients.length - 1 >= rLast.coefficients.length - 1 && r.coefficients[0] != 0) {
      degreeDiff = r.coefficients.length - 1 - (rLast.coefficients.length - 1);
      scale = $multiply_0(this$static.field, $getCoefficient(r, r.coefficients.length - 1), dltInverse);
      q = $addOrSubtract(q, $buildMonomial(this$static.field, degreeDiff, scale));
      r = $addOrSubtract(r, $multiplyByMonomial(rLast, degreeDiff, scale));
    }
    t = $addOrSubtract($multiply_2(q, tLast), tLastLast);
    if (r.coefficients.length - 1 >= rLast.coefficients.length - 1) {
      throw toJs(new IllegalStateException_0('Division algorithm failed to reduce polynomial?'));
    }
  }
  sigmaTildeAtZero = t.coefficients[t.coefficients.length - 1];
  if (sigmaTildeAtZero == 0) {
    throw toJs(new ReedSolomonException('sigmaTilde(0) was zero'));
  }
  inverse = $inverse(this$static.field, sigmaTildeAtZero);
  sigma = $multiply_1(t, inverse);
  omega = $multiply_1(r, inverse);
  return stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_common_reedsolomon_GenericGFPoly_2_classLit, 1), $intern_0, 134, 0, [sigma, omega]);
}

function ReedSolomonDecoder(field){
  this.field = field;
}

defineClass(1126, 1, {}, ReedSolomonDecoder);
var Lpeergos_shared_zxing_common_reedsolomon_ReedSolomonDecoder_2_classLit = createForClass('peergos.shared.zxing.common.reedsolomon', 'ReedSolomonDecoder', 1126);
function $buildGenerator(this$static, degree){
  var d, lastGenerator, nextGenerator;
  if (degree >= this$static.cachedGenerators.array.length) {
    lastGenerator = castTo($get_1(this$static.cachedGenerators, this$static.cachedGenerators.array.length - 1), 134);
    for (d = this$static.cachedGenerators.array.length; d <= degree; d++) {
      nextGenerator = $multiply_2(lastGenerator, new GenericGFPoly(this$static.field, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [1, $exp_0(this$static.field, d - 1 + this$static.field.generatorBase)])));
      $add(this$static.cachedGenerators, nextGenerator);
      lastGenerator = nextGenerator;
    }
  }
  return castTo($get_1(this$static.cachedGenerators, degree), 134);
}

function $encode_2(this$static, toEncode, ecBytes){
  var coefficients, dataBytes, generator, i, info, infoCoefficients, numZeroCoefficients, remainder;
  if (ecBytes == 0) {
    throw toJs(new IllegalArgumentException_0('No error correction bytes'));
  }
  dataBytes = toEncode.length - ecBytes;
  if (dataBytes <= 0) {
    throw toJs(new IllegalArgumentException_0('No data bytes provided'));
  }
  generator = $buildGenerator(this$static, ecBytes);
  infoCoefficients = initUnidimensionalArray(I_classLit, $intern_29, 8, dataBytes, 15, 1);
  arraycopy(toEncode, 0, infoCoefficients, 0, dataBytes);
  info = new GenericGFPoly(this$static.field, infoCoefficients);
  info = $multiplyByMonomial(info, ecBytes, 1);
  remainder = $divide(info, generator)[1];
  coefficients = remainder.coefficients;
  numZeroCoefficients = ecBytes - coefficients.length;
  for (i = 0; i < numZeroCoefficients; i++) {
    toEncode[dataBytes + i] = 0;
  }
  arraycopy(coefficients, 0, toEncode, dataBytes + numZeroCoefficients, coefficients.length);
}

function ReedSolomonEncoder(field){
  this.field = field;
  this.cachedGenerators = new ArrayList;
  $add(this.cachedGenerators, new GenericGFPoly(field, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [1])));
}

defineClass(1158, 1, {}, ReedSolomonEncoder);
var Lpeergos_shared_zxing_common_reedsolomon_ReedSolomonEncoder_2_classLit = createForClass('peergos.shared.zxing.common.reedsolomon', 'ReedSolomonEncoder', 1158);
function ReedSolomonException(message){
  Exception_0.call(this, message);
}

defineClass(286, 51, {4:1, 51:1, 33:1, 286:1}, ReedSolomonException);
var Lpeergos_shared_zxing_common_reedsolomon_ReedSolomonException_2_classLit = createForClass('peergos.shared.zxing.common.reedsolomon', 'ReedSolomonException', 286);
function $decode_1(this$static, image){
  var byteSegments, decoderResult, detectorResult, ecLevel, lastArg, points, result;
  detectorResult = $detect(new Detector((!image.matrix && (image.matrix = $getBlackMatrix_0(image.binarizer)) , image.matrix)));
  decoderResult = $decode_2(this$static.decoder, detectorResult.bits);
  points = detectorResult.points;
  !!decoderResult.other && $applyMirroredCorrection(decoderResult.other, points);
  result = new Result((lastArg = decoderResult.text_0 , $clinit_BarcodeFormat() , lastArg));
  byteSegments = decoderResult.byteSegments;
  !!byteSegments && $putMetadata(result, ($clinit_ResultMetadataType() , BYTE_SEGMENTS), byteSegments);
  ecLevel = decoderResult.ecLevel;
  ecLevel != null && $putMetadata(result, ($clinit_ResultMetadataType() , ERROR_CORRECTION_LEVEL), ecLevel);
  if (decoderResult.structuredAppendParity >= 0 && decoderResult.structuredAppendSequenceNumber >= 0) {
    $putMetadata(result, ($clinit_ResultMetadataType() , STRUCTURED_APPEND_SEQUENCE), valueOf_1(decoderResult.structuredAppendSequenceNumber));
    $putMetadata(result, STRUCTURED_APPEND_PARITY, valueOf_1(decoderResult.structuredAppendParity));
  }
  return result;
}

function QRCodeReader(){
  this.decoder = new Decoder;
}

defineClass(1059, 1, {}, QRCodeReader);
var Lpeergos_shared_zxing_qrcode_QRCodeReader_2_classLit = createForClass('peergos.shared.zxing.qrcode', 'QRCodeReader', 1059);
function $encode_3(contents, format){
  var code_0, errorCorrectionLevel;
  if (contents.length == 0) {
    throw toJs(new IllegalArgumentException_0('Found empty contents'));
  }
  if (format != ($clinit_BarcodeFormat() , QR_CODE)) {
    throw toJs(new IllegalArgumentException_0('Can only encode QR_CODE, but got ' + format));
  }
  errorCorrectionLevel = ($clinit_ErrorCorrectionLevel() , L);
  code_0 = encode_14(contents, errorCorrectionLevel);
  return renderResult(code_0);
}

function renderResult(code_0){
  var input_0, inputHeight, inputWidth, inputX, inputY, leftPadding, multiple, output, outputHeight, outputWidth, outputX, outputY, qrHeight, qrWidth, topPadding;
  input_0 = code_0.matrix;
  if (!input_0) {
    throw toJs(new IllegalStateException);
  }
  inputWidth = input_0.width_0;
  inputHeight = input_0.height;
  qrWidth = inputWidth + 8;
  qrHeight = inputHeight + 8;
  outputWidth = $wnd.Math.max(512, qrWidth);
  outputHeight = $wnd.Math.max(512, qrHeight);
  multiple = $wnd.Math.min(outputWidth / qrWidth | 0, outputHeight / qrHeight | 0);
  leftPadding = (outputWidth - inputWidth * multiple) / 2 | 0;
  topPadding = (outputHeight - inputHeight * multiple) / 2 | 0;
  output = new BitMatrix_0(outputWidth, outputHeight);
  for (inputY = 0 , outputY = topPadding; inputY < inputHeight; ++inputY , outputY += multiple) {
    for (inputX = 0 , outputX = leftPadding; inputX < inputWidth; ++inputX , outputX += multiple) {
      input_0.bytes[inputY][inputX] == 1 && $setRegion(output, outputX, outputY, multiple, multiple);
    }
  }
  return output;
}

function $mirror(this$static){
  var x_0, y_0;
  for (x_0 = 0; x_0 < this$static.bitMatrix.width_0; x_0++) {
    for (y_0 = x_0 + 1; y_0 < this$static.bitMatrix.height; y_0++) {
      if ($get_35(this$static.bitMatrix, x_0, y_0) != $get_35(this$static.bitMatrix, y_0, x_0)) {
        $flip(this$static.bitMatrix, y_0, x_0);
        $flip(this$static.bitMatrix, x_0, y_0);
      }
    }
  }
}

function $readCodewords(this$static){
  var bitsRead, col, count, currentByte, dataMask, dimension, formatInfo, functionPattern, i, j, offset, readingUp, result, resultOffset, version;
  formatInfo = $readFormatInformation(this$static);
  version = $readVersion(this$static);
  dataMask = ($clinit_DataMask() , stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_DataMask_2_classLit, 1), $intern_33, 120, 0, [DATA_MASK_000, DATA_MASK_001, DATA_MASK_010, DATA_MASK_011, DATA_MASK_100, DATA_MASK_101, DATA_MASK_110, DATA_MASK_111]))[formatInfo.dataMask];
  dimension = this$static.bitMatrix.height;
  $unmaskBitMatrix(dataMask, this$static.bitMatrix, dimension);
  functionPattern = $buildFunctionPattern(version);
  readingUp = true;
  result = initUnidimensionalArray(B_classLit, $intern_28, 8, version.totalCodewords, 15, 1);
  resultOffset = 0;
  currentByte = 0;
  bitsRead = 0;
  for (j = dimension - 1; j > 0; j -= 2) {
    j == 6 && --j;
    for (count = 0; count < dimension; count++) {
      i = readingUp?dimension - 1 - count:count;
      for (col = 0; col < 2; col++) {
        offset = i * functionPattern.rowSize + ((j - col) / 32 | 0);
        if ((functionPattern.bits[offset] >>> (j - col & 31) & 1) == 0) {
          ++bitsRead;
          currentByte <<= 1;
          $get_35(this$static.bitMatrix, j - col, i) && (currentByte |= 1);
          if (bitsRead == 8) {
            result[resultOffset++] = currentByte << 24 >> 24;
            bitsRead = 0;
            currentByte = 0;
          }
        }
      }
    }
    readingUp = readingUp ^ true;
  }
  if (resultOffset != version.totalCodewords) {
    throw toJs(($clinit_FormatException() , new FormatException));
  }
  return result;
}

function $readFormatInformation(this$static){
  var bit, bit0, bit1, bit2, bit3, dimension, formatInfoBits1, formatInfoBits2, i, i0, j, j0, jMin;
  if (this$static.parsedFormatInfo) {
    return this$static.parsedFormatInfo;
  }
  formatInfoBits1 = 0;
  for (i0 = 0; i0 < 6; i0++) {
    formatInfoBits1 = (bit0 = this$static.mirror?$get_35(this$static.bitMatrix, 8, i0):$get_35(this$static.bitMatrix, i0, 8) , bit0?formatInfoBits1 << 1 | 1:formatInfoBits1 << 1);
  }
  formatInfoBits1 = (bit1 = this$static.mirror?$get_35(this$static.bitMatrix, 8, 7):$get_35(this$static.bitMatrix, 7, 8) , bit1?formatInfoBits1 << 1 | 1:formatInfoBits1 << 1);
  formatInfoBits1 = (bit2 = this$static.mirror?$get_35(this$static.bitMatrix, 8, 8):$get_35(this$static.bitMatrix, 8, 8) , bit2?formatInfoBits1 << 1 | 1:formatInfoBits1 << 1);
  formatInfoBits1 = (bit3 = this$static.mirror?$get_35(this$static.bitMatrix, 7, 8):$get_35(this$static.bitMatrix, 8, 7) , bit3?formatInfoBits1 << 1 | 1:formatInfoBits1 << 1);
  for (j0 = 5; j0 >= 0; j0--) {
    formatInfoBits1 = (bit = this$static.mirror?$get_35(this$static.bitMatrix, j0, 8):$get_35(this$static.bitMatrix, 8, j0) , bit?formatInfoBits1 << 1 | 1:formatInfoBits1 << 1);
  }
  dimension = this$static.bitMatrix.height;
  formatInfoBits2 = 0;
  jMin = dimension - 7;
  for (j = dimension - 1; j >= jMin; j--) {
    formatInfoBits2 = (bit = this$static.mirror?$get_35(this$static.bitMatrix, j, 8):$get_35(this$static.bitMatrix, 8, j) , bit?formatInfoBits2 << 1 | 1:formatInfoBits2 << 1);
  }
  for (i = dimension - 8; i < dimension; i++) {
    formatInfoBits2 = (bit = this$static.mirror?$get_35(this$static.bitMatrix, 8, i):$get_35(this$static.bitMatrix, i, 8) , bit?formatInfoBits2 << 1 | 1:formatInfoBits2 << 1);
  }
  this$static.parsedFormatInfo = decodeFormatInformation(formatInfoBits1, formatInfoBits2);
  if (this$static.parsedFormatInfo) {
    return this$static.parsedFormatInfo;
  }
  throw toJs(($clinit_FormatException() , new FormatException));
}

function $readVersion(this$static){
  var bit, dimension, i, i0, ijMin, j, j0, provisionalVersion, theParsedVersion, versionBits;
  if (this$static.parsedVersion) {
    return this$static.parsedVersion;
  }
  dimension = this$static.bitMatrix.height;
  provisionalVersion = (dimension - 17) / 4 | 0;
  if (provisionalVersion <= 6) {
    return getVersionForNumber(provisionalVersion);
  }
  versionBits = 0;
  ijMin = dimension - 11;
  for (j0 = 5; j0 >= 0; j0--) {
    for (i0 = dimension - 9; i0 >= ijMin; i0--) {
      versionBits = (bit = this$static.mirror?$get_35(this$static.bitMatrix, j0, i0):$get_35(this$static.bitMatrix, i0, j0) , bit?versionBits << 1 | 1:versionBits << 1);
    }
  }
  theParsedVersion = decodeVersionInformation(versionBits);
  if (!!theParsedVersion && 17 + 4 * theParsedVersion.versionNumber == dimension) {
    this$static.parsedVersion = theParsedVersion;
    return theParsedVersion;
  }
  versionBits = 0;
  for (i = 5; i >= 0; i--) {
    for (j = dimension - 9; j >= ijMin; j--) {
      versionBits = (bit = this$static.mirror?$get_35(this$static.bitMatrix, j, i):$get_35(this$static.bitMatrix, i, j) , bit?versionBits << 1 | 1:versionBits << 1);
    }
  }
  theParsedVersion = decodeVersionInformation(versionBits);
  if (!!theParsedVersion && 17 + 4 * theParsedVersion.versionNumber == dimension) {
    this$static.parsedVersion = theParsedVersion;
    return theParsedVersion;
  }
  throw toJs(($clinit_FormatException() , new FormatException));
}

function $remask(this$static){
  var dataMask, dimension;
  if (!this$static.parsedFormatInfo) {
    return;
  }
  dataMask = ($clinit_DataMask() , stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_DataMask_2_classLit, 1), $intern_33, 120, 0, [DATA_MASK_000, DATA_MASK_001, DATA_MASK_010, DATA_MASK_011, DATA_MASK_100, DATA_MASK_101, DATA_MASK_110, DATA_MASK_111]))[this$static.parsedFormatInfo.dataMask];
  dimension = this$static.bitMatrix.height;
  $unmaskBitMatrix(dataMask, this$static.bitMatrix, dimension);
}

function BitMatrixParser(bitMatrix){
  var dimension;
  dimension = bitMatrix.height;
  if (dimension < 21 || (dimension & 3) != 1) {
    throw toJs(($clinit_FormatException() , new FormatException));
  }
  this.bitMatrix = bitMatrix;
}

defineClass(1127, 1, {}, BitMatrixParser);
_.mirror = false;
var Lpeergos_shared_zxing_qrcode_decoder_BitMatrixParser_2_classLit = createForClass('peergos.shared.zxing.qrcode.decoder', 'BitMatrixParser', 1127);
function DataBlock(numDataCodewords, codewords){
  this.numDataCodewords = numDataCodewords;
  this.codewords = codewords;
}

function getDataBlocks(rawCodewords, version, ecLevel){
  var ecBlock, ecBlock$array, ecBlock$array0, ecBlock$index, ecBlock$index0, ecBlock$max, ecBlock$max0, ecBlockArray, ecBlocks, i, i0, i1, iOffset, j, j0, j1, longerBlocksStartAt, max_0, numBlockCodewords, numCodewords, numDataCodewords, numResultBlocks, rawCodewordsOffset, result, shorterBlocksNumDataCodewords, shorterBlocksTotalCodewords, totalBlocks;
  if (rawCodewords.length != version.totalCodewords) {
    throw toJs(new IllegalArgumentException);
  }
  ecBlocks = version.ecBlocks[ecLevel.ordinal_0];
  totalBlocks = 0;
  ecBlockArray = ecBlocks.ecBlocks;
  for (ecBlock$array0 = ecBlockArray , ecBlock$index0 = 0 , ecBlock$max0 = ecBlock$array0.length; ecBlock$index0 < ecBlock$max0; ++ecBlock$index0) {
    ecBlock = ecBlock$array0[ecBlock$index0];
    totalBlocks += ecBlock.count;
  }
  result = initUnidimensionalArray(Lpeergos_shared_zxing_qrcode_decoder_DataBlock_2_classLit, $intern_0, 434, totalBlocks, 0, 1);
  numResultBlocks = 0;
  for (ecBlock$array = ecBlockArray , ecBlock$index = 0 , ecBlock$max = ecBlock$array.length; ecBlock$index < ecBlock$max; ++ecBlock$index) {
    ecBlock = ecBlock$array[ecBlock$index];
    for (i0 = 0; i0 < ecBlock.count; i0++) {
      numDataCodewords = ecBlock.dataCodewords;
      numBlockCodewords = ecBlocks.ecCodewordsPerBlock + numDataCodewords;
      result[numResultBlocks++] = new DataBlock(numDataCodewords, initUnidimensionalArray(B_classLit, $intern_28, 8, numBlockCodewords, 15, 1));
    }
  }
  shorterBlocksTotalCodewords = result[0].codewords.length;
  longerBlocksStartAt = result.length - 1;
  while (longerBlocksStartAt >= 0) {
    numCodewords = result[longerBlocksStartAt].codewords.length;
    if (numCodewords == shorterBlocksTotalCodewords) {
      break;
    }
    --longerBlocksStartAt;
  }
  ++longerBlocksStartAt;
  shorterBlocksNumDataCodewords = shorterBlocksTotalCodewords - ecBlocks.ecCodewordsPerBlock;
  rawCodewordsOffset = 0;
  for (i1 = 0; i1 < shorterBlocksNumDataCodewords; i1++) {
    for (j0 = 0; j0 < numResultBlocks; j0++) {
      result[j0].codewords[i1] = rawCodewords[rawCodewordsOffset++];
    }
  }
  for (j1 = longerBlocksStartAt; j1 < numResultBlocks; j1++) {
    result[j1].codewords[shorterBlocksNumDataCodewords] = rawCodewords[rawCodewordsOffset++];
  }
  max_0 = result[0].codewords.length;
  for (i = shorterBlocksNumDataCodewords; i < max_0; i++) {
    for (j = 0; j < numResultBlocks; j++) {
      iOffset = j < longerBlocksStartAt?i:i + 1;
      result[j].codewords[iOffset] = rawCodewords[rawCodewordsOffset++];
    }
  }
  return result;
}

defineClass(434, 1, {434:1}, DataBlock);
_.numDataCodewords = 0;
var Lpeergos_shared_zxing_qrcode_decoder_DataBlock_2_classLit = createForClass('peergos.shared.zxing.qrcode.decoder', 'DataBlock', 434);
function $clinit_DataMask(){
  $clinit_DataMask = emptyMethod;
  DATA_MASK_000 = new DataMask$1;
  DATA_MASK_001 = new DataMask$2;
  DATA_MASK_010 = new DataMask$3;
  DATA_MASK_011 = new DataMask$4;
  DATA_MASK_100 = new DataMask$5;
  DATA_MASK_101 = new DataMask$6;
  DATA_MASK_110 = new DataMask$7;
  DATA_MASK_111 = new DataMask$8;
}

function $unmaskBitMatrix(this$static, bits, dimension){
  var i, j, offset;
  for (i = 0; i < dimension; i++) {
    for (j = 0; j < dimension; j++) {
      this$static.isMasked(i, j) && (offset = i * bits.rowSize + (j / 32 | 0) , bits.bits[offset] ^= 1 << (j & 31));
    }
  }
}

function DataMask(enum$name, enum$ordinal){
  Enum.call(this, enum$name, enum$ordinal);
}

function values_25(){
  $clinit_DataMask();
  return stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_DataMask_2_classLit, 1), $intern_33, 120, 0, [DATA_MASK_000, DATA_MASK_001, DATA_MASK_010, DATA_MASK_011, DATA_MASK_100, DATA_MASK_101, DATA_MASK_110, DATA_MASK_111]);
}

defineClass(120, 52, $intern_71);
var DATA_MASK_000, DATA_MASK_001, DATA_MASK_010, DATA_MASK_011, DATA_MASK_100, DATA_MASK_101, DATA_MASK_110, DATA_MASK_111;
var Lpeergos_shared_zxing_qrcode_decoder_DataMask_2_classLit = createForEnum('peergos.shared.zxing.qrcode.decoder', 'DataMask', 120, values_25);
function DataMask$1(){
  DataMask.call(this, 'DATA_MASK_000', 0);
}

defineClass(1142, 120, $intern_71, DataMask$1);
_.isMasked = function isMasked(i, j){
  return (i + j & 1) == 0;
}
;
var Lpeergos_shared_zxing_qrcode_decoder_DataMask$1_2_classLit = createForEnum('peergos.shared.zxing.qrcode.decoder', 'DataMask/1', 1142, null);
function DataMask$2(){
  DataMask.call(this, 'DATA_MASK_001', 1);
}

defineClass(1143, 120, $intern_71, DataMask$2);
_.isMasked = function isMasked_0(i, j){
  return (i & 1) == 0;
}
;
var Lpeergos_shared_zxing_qrcode_decoder_DataMask$2_2_classLit = createForEnum('peergos.shared.zxing.qrcode.decoder', 'DataMask/2', 1143, null);
function DataMask$3(){
  DataMask.call(this, 'DATA_MASK_010', 2);
}

defineClass(1144, 120, $intern_71, DataMask$3);
_.isMasked = function isMasked_1(i, j){
  return j % 3 == 0;
}
;
var Lpeergos_shared_zxing_qrcode_decoder_DataMask$3_2_classLit = createForEnum('peergos.shared.zxing.qrcode.decoder', 'DataMask/3', 1144, null);
function DataMask$4(){
  DataMask.call(this, 'DATA_MASK_011', 3);
}

defineClass(1145, 120, $intern_71, DataMask$4);
_.isMasked = function isMasked_2(i, j){
  return (i + j) % 3 == 0;
}
;
var Lpeergos_shared_zxing_qrcode_decoder_DataMask$4_2_classLit = createForEnum('peergos.shared.zxing.qrcode.decoder', 'DataMask/4', 1145, null);
function DataMask$5(){
  DataMask.call(this, 'DATA_MASK_100', 4);
}

defineClass(1146, 120, $intern_71, DataMask$5);
_.isMasked = function isMasked_3(i, j){
  return ((i / 2 | 0) + (j / 3 | 0) & 1) == 0;
}
;
var Lpeergos_shared_zxing_qrcode_decoder_DataMask$5_2_classLit = createForEnum('peergos.shared.zxing.qrcode.decoder', 'DataMask/5', 1146, null);
function DataMask$6(){
  DataMask.call(this, 'DATA_MASK_101', 5);
}

defineClass(1147, 120, $intern_71, DataMask$6);
_.isMasked = function isMasked_4(i, j){
  return i * j % 6 == 0;
}
;
var Lpeergos_shared_zxing_qrcode_decoder_DataMask$6_2_classLit = createForEnum('peergos.shared.zxing.qrcode.decoder', 'DataMask/6', 1147, null);
function DataMask$7(){
  DataMask.call(this, 'DATA_MASK_110', 6);
}

defineClass(1148, 120, $intern_71, DataMask$7);
_.isMasked = function isMasked_5(i, j){
  return i * j % 6 < 3;
}
;
var Lpeergos_shared_zxing_qrcode_decoder_DataMask$7_2_classLit = createForEnum('peergos.shared.zxing.qrcode.decoder', 'DataMask/7', 1148, null);
function DataMask$8(){
  DataMask.call(this, 'DATA_MASK_111', 7);
}

defineClass(1149, 120, $intern_71, DataMask$8);
_.isMasked = function isMasked_6(i, j){
  return (i + j + i * j % 3 & 1) == 0;
}
;
var Lpeergos_shared_zxing_qrcode_decoder_DataMask$8_2_classLit = createForEnum('peergos.shared.zxing.qrcode.decoder', 'DataMask/8', 1149, null);
function $clinit_DecodedBitStreamParser(){
  $clinit_DecodedBitStreamParser = emptyMethod;
  ALPHANUMERIC_CHARS = $toCharArray('0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:');
}

function decode_10(bytes, version, ecLevel){
  $clinit_DecodedBitStreamParser();
  var bits, byteSegments, count, countHanzi, currentCharacterSetECI, fc1InEffect, mode, parityData, result, subset, symbolSequence, value_0;
  bits = new BitSource(bytes);
  result = new StringBuilder_0;
  byteSegments = new ArrayList_0(1);
  symbolSequence = -1;
  parityData = -1;
  try {
    currentCharacterSetECI = null;
    fc1InEffect = false;
    do {
      8 * (bits.bytes.length - bits.byteOffset) - bits.bitOffset < 4?(mode = ($clinit_Mode() , TERMINATOR)):(mode = forBits_0($readBits(bits, 4)));
      switch (mode.ordinal_0) {
        case 0:
          break;
        case 7:
        case 8:
          fc1InEffect = true;
          break;
        case 3:
          if (8 * (bits.bytes.length - bits.byteOffset) - bits.bitOffset < 16) {
            throw toJs(($clinit_FormatException() , new FormatException));
          }

          symbolSequence = $readBits(bits, 8);
          parityData = $readBits(bits, 8);
          break;
        case 5:
          value_0 = parseECIValue(bits);
          currentCharacterSetECI = getCharacterSetECIByValue(value_0);
          if (!currentCharacterSetECI) {
            throw toJs(($clinit_FormatException() , new FormatException));
          }

          break;
        case 9:
          subset = $readBits(bits, 4);
          countHanzi = $readBits(bits, $getCharacterCountBits(mode, version));
          subset == 1 && decodeHanziSegment(bits, result, countHanzi);
          break;
        default:count = $readBits(bits, $getCharacterCountBits(mode, version));
          switch (mode.ordinal_0) {
            case 1:
              decodeNumericSegment(bits, result, count);
              break;
            case 2:
              decodeAlphanumericSegment(bits, result, count, fc1InEffect);
              break;
            case 4:
              decodeByteSegment(bits, result, count, byteSegments);
              break;
            case 6:
              decodeKanjiSegment(bits, result, count);
              break;
            default:throw toJs(($clinit_FormatException() , new FormatException));
          }

      }
    }
     while (mode != ($clinit_Mode() , TERMINATOR));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 56)) {
      throw toJs(($clinit_FormatException() , new FormatException));
    }
     else 
      throw toJs($e0);
  }
  return new DecoderResult(result.string, byteSegments.array.length == 0?null:byteSegments, !ecLevel?null:ecLevel.name_0 != null?ecLevel.name_0:'' + ecLevel.ordinal_0, symbolSequence, parityData);
}

function decodeAlphanumericSegment(bits, result, count, fc1InEffect){
  var i, nextTwoCharsBits, start_0;
  start_0 = result.string.length;
  while (count > 1) {
    if (8 * (bits.bytes.length - bits.byteOffset) - bits.bitOffset < 11) {
      throw toJs(($clinit_FormatException() , new FormatException));
    }
    nextTwoCharsBits = $readBits(bits, 11);
    $append(result, toAlphaNumericChar(nextTwoCharsBits / 45 | 0));
    $append(result, toAlphaNumericChar(nextTwoCharsBits % 45));
    count -= 2;
  }
  if (count == 1) {
    if (8 * (bits.bytes.length - bits.byteOffset) - bits.bitOffset < 6) {
      throw toJs(($clinit_FormatException() , new FormatException));
    }
    $append(result, toAlphaNumericChar($readBits(bits, 6)));
  }
  if (fc1InEffect) {
    for (i = start_0; i < result.string.length; i++) {
      $charAt(result.string, i) == 37 && (i < result.string.length - 1 && $charAt(result.string, i + 1) == 37?(result.string = $substring_0(result.string, 0, i + 1) + '' + $substring(result.string, i + 1 + 1) , result):$replace0(result, i, i + 1, String.fromCharCode(29)));
    }
  }
}

function decodeByteSegment(bits, result, count, byteSegments){
  var i, readBytes;
  if (8 * count > 8 * (bits.bytes.length - bits.byteOffset) - bits.bitOffset) {
    throw toJs(($clinit_FormatException() , new FormatException));
  }
  readBytes = initUnidimensionalArray(B_classLit, $intern_28, 8, count, 15, 1);
  for (i = 0; i < count; i++) {
    readBytes[i] = $readBits(bits, 8) << 24 >> 24;
  }
  try {
    $append_4(result, $create_0(readBytes, 0, readBytes.length, getCharset('UTF-8')));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 136)) {
      throw toJs(($clinit_FormatException() , new FormatException));
    }
     else 
      throw toJs($e0);
  }
  byteSegments.array[byteSegments.array.length] = readBytes;
}

function decodeHanziSegment(bits, result, count){
  var assembledTwoBytes, buffer, offset, twoBytes;
  if (count * 13 > 8 * (bits.bytes.length - bits.byteOffset) - bits.bitOffset) {
    throw toJs(($clinit_FormatException() , new FormatException));
  }
  buffer = initUnidimensionalArray(B_classLit, $intern_28, 8, 2 * count, 15, 1);
  offset = 0;
  while (count > 0) {
    twoBytes = $readBits(bits, 13);
    assembledTwoBytes = (twoBytes / 96 | 0) << 8 | twoBytes % 96;
    assembledTwoBytes < 2560?(assembledTwoBytes += 41377):(assembledTwoBytes += 42657);
    buffer[offset] = (assembledTwoBytes >> 8 & 255) << 24 >> 24;
    buffer[offset + 1] = (assembledTwoBytes & 255) << 24 >> 24;
    offset += 2;
    --count;
  }
  try {
    $append_4(result, $create_0(buffer, 0, buffer.length, getCharset('GB2312')));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 136)) {
      throw toJs(($clinit_FormatException() , new FormatException));
    }
     else 
      throw toJs($e0);
  }
}

function decodeKanjiSegment(bits, result, count){
  var assembledTwoBytes, buffer, offset, twoBytes;
  if (count * 13 > 8 * (bits.bytes.length - bits.byteOffset) - bits.bitOffset) {
    throw toJs(($clinit_FormatException() , new FormatException));
  }
  buffer = initUnidimensionalArray(B_classLit, $intern_28, 8, 2 * count, 15, 1);
  offset = 0;
  while (count > 0) {
    twoBytes = $readBits(bits, 13);
    assembledTwoBytes = (twoBytes / 192 | 0) << 8 | twoBytes % 192;
    assembledTwoBytes < 7936?(assembledTwoBytes += 33088):(assembledTwoBytes += 49472);
    buffer[offset] = assembledTwoBytes >> 8 << 24 >> 24;
    buffer[offset + 1] = assembledTwoBytes << 24 >> 24;
    offset += 2;
    --count;
  }
  try {
    $append_4(result, $create_0(buffer, 0, buffer.length, getCharset('SJIS')));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 136)) {
      throw toJs(($clinit_FormatException() , new FormatException));
    }
     else 
      throw toJs($e0);
  }
}

function decodeNumericSegment(bits, result, count){
  var digitBits, threeDigitsBits, twoDigitsBits;
  while (count >= 3) {
    if (8 * (bits.bytes.length - bits.byteOffset) - bits.bitOffset < 10) {
      throw toJs(($clinit_FormatException() , new FormatException));
    }
    threeDigitsBits = $readBits(bits, 10);
    if (threeDigitsBits >= $intern_49) {
      throw toJs(($clinit_FormatException() , new FormatException));
    }
    $append(result, toAlphaNumericChar(threeDigitsBits / 100 | 0));
    $append(result, toAlphaNumericChar((threeDigitsBits / 10 | 0) % 10));
    $append(result, toAlphaNumericChar(threeDigitsBits % 10));
    count -= 3;
  }
  if (count == 2) {
    if (8 * (bits.bytes.length - bits.byteOffset) - bits.bitOffset < 7) {
      throw toJs(($clinit_FormatException() , new FormatException));
    }
    twoDigitsBits = $readBits(bits, 7);
    if (twoDigitsBits >= 100) {
      throw toJs(($clinit_FormatException() , new FormatException));
    }
    $append(result, toAlphaNumericChar(twoDigitsBits / 10 | 0));
    $append(result, toAlphaNumericChar(twoDigitsBits % 10));
  }
   else if (count == 1) {
    if (8 * (bits.bytes.length - bits.byteOffset) - bits.bitOffset < 4) {
      throw toJs(($clinit_FormatException() , new FormatException));
    }
    digitBits = $readBits(bits, 4);
    if (digitBits >= 10) {
      throw toJs(($clinit_FormatException() , new FormatException));
    }
    $append(result, toAlphaNumericChar(digitBits));
  }
}

function parseECIValue(bits){
  var firstByte, secondByte, secondThirdBytes;
  firstByte = $readBits(bits, 8);
  if ((firstByte & 128) == 0) {
    return firstByte & 127;
  }
  if ((firstByte & 192) == 128) {
    secondByte = $readBits(bits, 8);
    return (firstByte & 63) << 8 | secondByte;
  }
  if ((firstByte & 224) == 192) {
    secondThirdBytes = $readBits(bits, 16);
    return (firstByte & 31) << 16 | secondThirdBytes;
  }
  throw toJs(($clinit_FormatException() , new FormatException));
}

function toAlphaNumericChar(value_0){
  if (value_0 >= ALPHANUMERIC_CHARS.length) {
    throw toJs(($clinit_FormatException() , new FormatException));
  }
  return ALPHANUMERIC_CHARS[value_0];
}

var ALPHANUMERIC_CHARS;
function $correctErrors(this$static, codewordBytes, numDataCodewords){
  var codewordsInts, i, i0, numCodewords;
  numCodewords = codewordBytes.length;
  codewordsInts = initUnidimensionalArray(I_classLit, $intern_29, 8, numCodewords, 15, 1);
  for (i0 = 0; i0 < numCodewords; i0++) {
    codewordsInts[i0] = codewordBytes[i0] & 255;
  }
  try {
    $decode_0(this$static.rsDecoder, codewordsInts, codewordBytes.length - numDataCodewords);
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 286)) {
      throw toJs(($clinit_ChecksumException() , new ChecksumException));
    }
     else 
      throw toJs($e0);
  }
  for (i = 0; i < numDataCodewords; i++) {
    codewordBytes[i] = codewordsInts[i] << 24 >> 24;
  }
}

function $decode_2(this$static, bits){
  var ce, e, fe, parser, result;
  parser = new BitMatrixParser(bits);
  fe = null;
  ce = null;
  try {
    return $decode_3(this$static, parser);
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 90)) {
      e = $e0;
      fe = e;
    }
     else if (instanceOf($e0, 321)) {
      e = $e0;
      ce = e;
    }
     else 
      throw toJs($e0);
  }
  try {
    $remask(parser);
    parser.parsedVersion = null;
    parser.parsedFormatInfo = null;
    parser.mirror = true;
    $readVersion(parser);
    $readFormatInformation(parser);
    $mirror(parser);
    result = $decode_3(this$static, parser);
    $setOther(result, new QRCodeDecoderMetaData);
    return result;
  }
   catch ($e1) {
    $e1 = toJava($e1);
    if (instanceOf($e1, 90) || instanceOf($e1, 321)) {
      if (fe) {
        throw toJs(fe);
      }
      throw toJs(ce);
    }
     else 
      throw toJs($e1);
  }
}

function $decode_3(this$static, parser){
  var codewordBytes, codewords, dataBlock, dataBlock$array, dataBlock$array0, dataBlock$index, dataBlock$index0, dataBlock$max, dataBlock$max0, dataBlocks, ecLevel, i, numDataCodewords, resultBytes, resultOffset, totalBytes, version;
  version = $readVersion(parser);
  ecLevel = $readFormatInformation(parser).errorCorrectionLevel;
  codewords = $readCodewords(parser);
  dataBlocks = getDataBlocks(codewords, version, ecLevel);
  totalBytes = 0;
  for (dataBlock$array0 = dataBlocks , dataBlock$index0 = 0 , dataBlock$max0 = dataBlock$array0.length; dataBlock$index0 < dataBlock$max0; ++dataBlock$index0) {
    dataBlock = dataBlock$array0[dataBlock$index0];
    totalBytes += dataBlock.numDataCodewords;
  }
  resultBytes = initUnidimensionalArray(B_classLit, $intern_28, 8, totalBytes, 15, 1);
  resultOffset = 0;
  for (dataBlock$array = dataBlocks , dataBlock$index = 0 , dataBlock$max = dataBlock$array.length; dataBlock$index < dataBlock$max; ++dataBlock$index) {
    dataBlock = dataBlock$array[dataBlock$index];
    codewordBytes = dataBlock.codewords;
    numDataCodewords = dataBlock.numDataCodewords;
    $correctErrors(this$static, codewordBytes, numDataCodewords);
    for (i = 0; i < numDataCodewords; i++) {
      resultBytes[resultOffset++] = codewordBytes[i];
    }
  }
  return decode_10(resultBytes, version, ecLevel);
}

function Decoder(){
  this.rsDecoder = new ReedSolomonDecoder(($clinit_GenericGF() , QR_CODE_FIELD_256));
}

defineClass(1110, 1, {}, Decoder);
var Lpeergos_shared_zxing_qrcode_decoder_Decoder_2_classLit = createForClass('peergos.shared.zxing.qrcode.decoder', 'Decoder', 1110);
function $clinit_ErrorCorrectionLevel(){
  $clinit_ErrorCorrectionLevel = emptyMethod;
  L = new ErrorCorrectionLevel('L', 0, 1);
  M = new ErrorCorrectionLevel('M', 1, 0);
  Q = new ErrorCorrectionLevel('Q', 2, 3);
  H_0 = new ErrorCorrectionLevel('H', 3, 2);
  FOR_BITS = stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_ErrorCorrectionLevel_2_classLit, 1), $intern_33, 256, 0, [M, L, H_0, Q]);
}

function ErrorCorrectionLevel(enum$name, enum$ordinal, bits){
  Enum.call(this, enum$name, enum$ordinal);
  this.bits = bits;
}

function forBits(bits){
  $clinit_ErrorCorrectionLevel();
  if (bits < 0 || bits >= FOR_BITS.length) {
    throw toJs(new IllegalArgumentException);
  }
  return FOR_BITS[bits];
}

function values_26(){
  $clinit_ErrorCorrectionLevel();
  return stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_ErrorCorrectionLevel_2_classLit, 1), $intern_33, 256, 0, [L, M, Q, H_0]);
}

defineClass(256, 52, {4:1, 57:1, 52:1, 256:1}, ErrorCorrectionLevel);
_.bits = 0;
var FOR_BITS, H_0, L, M, Q;
var Lpeergos_shared_zxing_qrcode_decoder_ErrorCorrectionLevel_2_classLit = createForEnum('peergos.shared.zxing.qrcode.decoder', 'ErrorCorrectionLevel', 256, values_26);
function $clinit_FormatInformation(){
  $clinit_FormatInformation = emptyMethod;
  FORMAT_INFO_DECODE_LOOKUP = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 2), $intern_0, 15, 0, [stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [21522, 0]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [20773, 1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [24188, 2]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [23371, 3]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [17913, 4]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [16590, 5]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [20375, 6]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [19104, 7]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [30660, 8]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [29427, 9]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [32170, 10]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [30877, 11]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [26159, 12]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [25368, 13]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [27713, 14]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [26998, 15]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [5769, 16]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [5054, 17]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [7399, 18]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6608, 19]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [1890, 20]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [597, 21]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [3340, 22]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [2107, 23]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [13663, 24]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [12392, 25]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [16177, 26]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [14854, 27]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [9396, 28]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [8579, 29]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [11994, 30]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [11245, 31])]);
}

function FormatInformation(formatInfo){
  this.errorCorrectionLevel = forBits(formatInfo >> 3 & 3);
  this.dataMask = (formatInfo & 7) << 24 >> 24;
}

function decodeFormatInformation(maskedFormatInfo1, maskedFormatInfo2){
  $clinit_FormatInformation();
  var formatInfo;
  formatInfo = doDecodeFormatInformation(maskedFormatInfo1, maskedFormatInfo2);
  if (formatInfo) {
    return formatInfo;
  }
  return doDecodeFormatInformation(maskedFormatInfo1 ^ 21522, maskedFormatInfo2 ^ 21522);
}

function doDecodeFormatInformation(maskedFormatInfo1, maskedFormatInfo2){
  var bestDifference, bestFormatInfo, bitsDifference, decodeInfo, decodeInfo$array, decodeInfo$index, decodeInfo$max, targetInfo;
  bestDifference = $intern_1;
  bestFormatInfo = 0;
  for (decodeInfo$array = FORMAT_INFO_DECODE_LOOKUP , decodeInfo$index = 0 , decodeInfo$max = decodeInfo$array.length; decodeInfo$index < decodeInfo$max; ++decodeInfo$index) {
    decodeInfo = decodeInfo$array[decodeInfo$index];
    targetInfo = decodeInfo[0];
    if (targetInfo == maskedFormatInfo1 || targetInfo == maskedFormatInfo2) {
      return new FormatInformation(decodeInfo[1]);
    }
    bitsDifference = bitCount(maskedFormatInfo1 ^ targetInfo);
    if (bitsDifference < bestDifference) {
      bestFormatInfo = decodeInfo[1];
      bestDifference = bitsDifference;
    }
    if (maskedFormatInfo1 != maskedFormatInfo2) {
      bitsDifference = bitCount(maskedFormatInfo2 ^ targetInfo);
      if (bitsDifference < bestDifference) {
        bestFormatInfo = decodeInfo[1];
        bestDifference = bitsDifference;
      }
    }
  }
  if (bestDifference <= 3) {
    return new FormatInformation(bestFormatInfo);
  }
  return null;
}

defineClass(326, 1, {326:1}, FormatInformation);
_.equals_0 = function equals_108(o){
  var other;
  if (!instanceOf(o, 326)) {
    return false;
  }
  other = castTo(o, 326);
  return this.errorCorrectionLevel == other.errorCorrectionLevel && this.dataMask == other.dataMask;
}
;
_.hashCode_1 = function hashCode_105(){
  return this.errorCorrectionLevel.ordinal_0 << 3 | this.dataMask;
}
;
_.dataMask = 0;
var FORMAT_INFO_DECODE_LOOKUP;
var Lpeergos_shared_zxing_qrcode_decoder_FormatInformation_2_classLit = createForClass('peergos.shared.zxing.qrcode.decoder', 'FormatInformation', 326);
function $clinit_Mode(){
  $clinit_Mode = emptyMethod;
  TERMINATOR = new Mode('TERMINATOR', 0, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [0, 0, 0]), 0);
  NUMERIC = new Mode('NUMERIC', 1, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [10, 12, 14]), 1);
  ALPHANUMERIC = new Mode('ALPHANUMERIC', 2, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [9, 11, 13]), 2);
  STRUCTURED_APPEND = new Mode('STRUCTURED_APPEND', 3, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [0, 0, 0]), 3);
  BYTE = new Mode('BYTE', 4, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [8, 16, 16]), 4);
  ECI = new Mode('ECI', 5, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [0, 0, 0]), 7);
  KANJI = new Mode('KANJI', 6, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [8, 10, 12]), 8);
  FNC1_FIRST_POSITION = new Mode('FNC1_FIRST_POSITION', 7, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [0, 0, 0]), 5);
  FNC1_SECOND_POSITION = new Mode('FNC1_SECOND_POSITION', 8, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [0, 0, 0]), 9);
  HANZI = new Mode('HANZI', 9, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [8, 10, 12]), 13);
}

function $getCharacterCountBits(this$static, version){
  var number, offset;
  number = version.versionNumber;
  number <= 9?(offset = 0):number <= 26?(offset = 1):(offset = 2);
  return this$static.characterCountBitsForVersions[offset];
}

function Mode(enum$name, enum$ordinal, characterCountBitsForVersions, bits){
  Enum.call(this, enum$name, enum$ordinal);
  this.characterCountBitsForVersions = characterCountBitsForVersions;
  this.bits = bits;
}

function forBits_0(bits){
  $clinit_Mode();
  switch (bits) {
    case 0:
      return TERMINATOR;
    case 1:
      return NUMERIC;
    case 2:
      return ALPHANUMERIC;
    case 3:
      return STRUCTURED_APPEND;
    case 4:
      return BYTE;
    case 5:
      return FNC1_FIRST_POSITION;
    case 7:
      return ECI;
    case 8:
      return KANJI;
    case 9:
      return FNC1_SECOND_POSITION;
    case 13:
      return HANZI;
    default:throw toJs(new IllegalArgumentException);
  }
}

function values_27(){
  $clinit_Mode();
  return stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Mode_2_classLit, 1), $intern_33, 172, 0, [TERMINATOR, NUMERIC, ALPHANUMERIC, STRUCTURED_APPEND, BYTE, ECI, KANJI, FNC1_FIRST_POSITION, FNC1_SECOND_POSITION, HANZI]);
}

defineClass(172, 52, {4:1, 57:1, 52:1, 172:1}, Mode);
_.bits = 0;
var ALPHANUMERIC, BYTE, ECI, FNC1_FIRST_POSITION, FNC1_SECOND_POSITION, HANZI, KANJI, NUMERIC, STRUCTURED_APPEND, TERMINATOR;
var Lpeergos_shared_zxing_qrcode_decoder_Mode_2_classLit = createForEnum('peergos.shared.zxing.qrcode.decoder', 'Mode', 172, values_27);
function $applyMirroredCorrection(this$static, points){
  var bottomLeft;
  if (!this$static.mirrored || points == null || points.length < 3) {
    return;
  }
  bottomLeft = points[0];
  points[0] = points[2];
  points[2] = bottomLeft;
}

function QRCodeDecoderMetaData(){
  this.mirrored = true;
}

defineClass(1114, 1, {}, QRCodeDecoderMetaData);
_.mirrored = false;
var Lpeergos_shared_zxing_qrcode_decoder_QRCodeDecoderMetaData_2_classLit = createForClass('peergos.shared.zxing.qrcode.decoder', 'QRCodeDecoderMetaData', 1114);
function $clinit_Version(){
  $clinit_Version = emptyMethod;
  VERSION_DECODE_INFO = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [31892, 34236, 39577, 42195, 48118, 51042, 55367, 58893, 63784, 68472, 70749, 76311, 79154, 84390, 87683, 92361, 96236, 102084, 102881, 110507, 110734, 117786, 119615, 126325, 127568, 133589, 136944, 141498, 145311, 150283, 152622, 158308, 161089, 167017]);
  VERSIONS = stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version_2_classLit, 1), $intern_0, 75, 0, [new Version_0(1, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, []), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(7, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(1, 19)])), new Version$ECBlocks(10, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(1, 16)])), new Version$ECBlocks(13, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(1, 13)])), new Version$ECBlocks(17, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(1, 9)]))])), new Version_0(2, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 18]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(10, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(1, 34)])), new Version$ECBlocks(16, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(1, 28)])), new Version$ECBlocks(22, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(1, 22)])), new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(1, 16)]))])), new Version_0(3, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 22]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(15, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(1, 55)])), new Version$ECBlocks(26, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(1, 44)])), new Version$ECBlocks(18, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(2, 17)])), new Version$ECBlocks(22, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(2, 13)]))])), new Version_0(4, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 26]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(20, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(1, 80)])), new Version$ECBlocks(18, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(2, 32)])), new Version$ECBlocks(26, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(2, 24)])), new Version$ECBlocks(16, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(4, 9)]))])), new Version_0(5, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 30]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(26, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(1, 108)])), new Version$ECBlocks(24, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(2, 43)])), new Version$ECBlocks(18, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(2, 15), new Version$ECB(2, 16)])), new Version$ECBlocks(22, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(2, 11), new Version$ECB(2, 12)]))])), new Version_0(6, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 34]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(18, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(2, 68)])), new Version$ECBlocks(16, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(4, 27)])), new Version$ECBlocks(24, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(4, 19)])), new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(4, 15)]))])), new Version_0(7, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 22, 38]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(20, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(2, 78)])), new Version$ECBlocks(18, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(4, 31)])), new Version$ECBlocks(18, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(2, 14), new Version$ECB(4, 15)])), new Version$ECBlocks(26, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(4, 13), new Version$ECB(1, 14)]))])), new Version_0(8, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 24, 42]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(24, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(2, 97)])), new Version$ECBlocks(22, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(2, 38), new Version$ECB(2, 39)])), new Version$ECBlocks(22, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(4, 18), new Version$ECB(2, 19)])), new Version$ECBlocks(26, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(4, 14), new Version$ECB(2, 15)]))])), new Version_0(9, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 26, 46]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(2, 116)])), new Version$ECBlocks(22, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(3, 36), new Version$ECB(2, 37)])), new Version$ECBlocks(20, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(4, 16), new Version$ECB(4, 17)])), new Version$ECBlocks(24, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(4, 12), new Version$ECB(4, 13)]))])), new Version_0(10, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 28, 50]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(18, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(2, 68), new Version$ECB(2, 69)])), new Version$ECBlocks(26, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(4, 43), new Version$ECB(1, 44)])), new Version$ECBlocks(24, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(6, 19), new Version$ECB(2, 20)])), new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(6, 15), new Version$ECB(2, 16)]))])), new Version_0(11, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 30, 54]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(20, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(4, 81)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(1, 50), new Version$ECB(4, 51)])), new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(4, 22), new Version$ECB(4, 23)])), new Version$ECBlocks(24, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(3, 12), new Version$ECB(8, 13)]))])), new Version_0(12, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 32, 58]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(24, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(2, 92), new Version$ECB(2, 93)])), new Version$ECBlocks(22, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(6, 36), new Version$ECB(2, 37)])), new Version$ECBlocks(26, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(4, 20), new Version$ECB(6, 21)])), new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(7, 14), new Version$ECB(4, 15)]))])), new Version_0(13, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 34, 62]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(26, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(4, 107)])), new Version$ECBlocks(22, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(8, 37), new Version$ECB(1, 38)])), new Version$ECBlocks(24, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(8, 20), new Version$ECB(4, 21)])), new Version$ECBlocks(22, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(12, 11), new Version$ECB(4, 12)]))])), new Version_0(14, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 26, 46, 66]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(3, 115), new Version$ECB(1, 116)])), new Version$ECBlocks(24, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(4, 40), new Version$ECB(5, 41)])), new Version$ECBlocks(20, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(11, 16), new Version$ECB(5, 17)])), new Version$ECBlocks(24, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(11, 12), new Version$ECB(5, 13)]))])), new Version_0(15, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 26, 48, 70]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(22, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(5, 87), new Version$ECB(1, 88)])), new Version$ECBlocks(24, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(5, 41), new Version$ECB(5, 42)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(5, 24), new Version$ECB(7, 25)])), new Version$ECBlocks(24, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(11, 12), new Version$ECB(7, 13)]))])), new Version_0(16, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 26, 50, 74]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(24, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(5, 98), new Version$ECB(1, 99)])), new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(7, 45), new Version$ECB(3, 46)])), new Version$ECBlocks(24, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(15, 19), new Version$ECB(2, 20)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(3, 15), new Version$ECB(13, 16)]))])), new Version_0(17, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 30, 54, 78]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(1, 107), new Version$ECB(5, 108)])), new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(10, 46), new Version$ECB(1, 47)])), new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(1, 22), new Version$ECB(15, 23)])), new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(2, 14), new Version$ECB(17, 15)]))])), new Version_0(18, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 30, 56, 82]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(5, 120), new Version$ECB(1, 121)])), new Version$ECBlocks(26, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(9, 43), new Version$ECB(4, 44)])), new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(17, 22), new Version$ECB(1, 23)])), new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(2, 14), new Version$ECB(19, 15)]))])), new Version_0(19, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 30, 58, 86]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(3, 113), new Version$ECB(4, 114)])), new Version$ECBlocks(26, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(3, 44), new Version$ECB(11, 45)])), new Version$ECBlocks(26, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(17, 21), new Version$ECB(4, 22)])), new Version$ECBlocks(26, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(9, 13), new Version$ECB(16, 14)]))])), new Version_0(20, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 34, 62, 90]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(3, 107), new Version$ECB(5, 108)])), new Version$ECBlocks(26, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(3, 41), new Version$ECB(13, 42)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(15, 24), new Version$ECB(5, 25)])), new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(15, 15), new Version$ECB(10, 16)]))])), new Version_0(21, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 28, 50, 72, 94]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(4, 116), new Version$ECB(4, 117)])), new Version$ECBlocks(26, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(17, 42)])), new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(17, 22), new Version$ECB(6, 23)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(19, 16), new Version$ECB(6, 17)]))])), new Version_0(22, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 26, 50, 74, 98]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(2, 111), new Version$ECB(7, 112)])), new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(17, 46)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(7, 24), new Version$ECB(16, 25)])), new Version$ECBlocks(24, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(34, 13)]))])), new Version_0(23, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 30, 54, 78, 102]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(4, 121), new Version$ECB(5, 122)])), new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(4, 47), new Version$ECB(14, 48)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(11, 24), new Version$ECB(14, 25)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(16, 15), new Version$ECB(14, 16)]))])), new Version_0(24, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 28, 54, 80, 106]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(6, 117), new Version$ECB(4, 118)])), new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(6, 45), new Version$ECB(14, 46)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(11, 24), new Version$ECB(16, 25)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(30, 16), new Version$ECB(2, 17)]))])), new Version_0(25, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 32, 58, 84, 110]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(26, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(8, 106), new Version$ECB(4, 107)])), new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(8, 47), new Version$ECB(13, 48)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(7, 24), new Version$ECB(22, 25)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(22, 15), new Version$ECB(13, 16)]))])), new Version_0(26, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 30, 58, 86, 114]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(10, 114), new Version$ECB(2, 115)])), new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(19, 46), new Version$ECB(4, 47)])), new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(28, 22), new Version$ECB(6, 23)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(33, 16), new Version$ECB(4, 17)]))])), new Version_0(27, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 34, 62, 90, 118]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(8, 122), new Version$ECB(4, 123)])), new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(22, 45), new Version$ECB(3, 46)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(8, 23), new Version$ECB(26, 24)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(12, 15), new Version$ECB(28, 16)]))])), new Version_0(28, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 26, 50, 74, 98, 122]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(3, 117), new Version$ECB(10, 118)])), new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(3, 45), new Version$ECB(23, 46)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(4, 24), new Version$ECB(31, 25)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(11, 15), new Version$ECB(31, 16)]))])), new Version_0(29, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 30, 54, 78, 102, 126]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(7, 116), new Version$ECB(7, 117)])), new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(21, 45), new Version$ECB(7, 46)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(1, 23), new Version$ECB(37, 24)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(19, 15), new Version$ECB(26, 16)]))])), new Version_0(30, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 26, 52, 78, 104, 130]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(5, 115), new Version$ECB(10, 116)])), new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(19, 47), new Version$ECB(10, 48)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(15, 24), new Version$ECB(25, 25)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(23, 15), new Version$ECB(25, 16)]))])), new Version_0(31, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 30, 56, 82, 108, 134]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(13, 115), new Version$ECB(3, 116)])), new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(2, 46), new Version$ECB(29, 47)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(42, 24), new Version$ECB(1, 25)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(23, 15), new Version$ECB(28, 16)]))])), new Version_0(32, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 34, 60, 86, 112, 138]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(17, 115)])), new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(10, 46), new Version$ECB(23, 47)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(10, 24), new Version$ECB(35, 25)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(19, 15), new Version$ECB(35, 16)]))])), new Version_0(33, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 30, 58, 86, 114, 142]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(17, 115), new Version$ECB(1, 116)])), new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(14, 46), new Version$ECB(21, 47)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(29, 24), new Version$ECB(19, 25)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(11, 15), new Version$ECB(46, 16)]))])), new Version_0(34, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 34, 62, 90, 118, 146]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(13, 115), new Version$ECB(6, 116)])), new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(14, 46), new Version$ECB(23, 47)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(44, 24), new Version$ECB(7, 25)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(59, 16), new Version$ECB(1, 17)]))])), new Version_0(35, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 30, 54, 78, 102, 126, 150]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(12, 121), new Version$ECB(7, 122)])), new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(12, 47), new Version$ECB(26, 48)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(39, 24), new Version$ECB(14, 25)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(22, 15), new Version$ECB(41, 16)]))])), new Version_0(36, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 24, 50, 76, 102, 128, 154]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(6, 121), new Version$ECB(14, 122)])), new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(6, 47), new Version$ECB(34, 48)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(46, 24), new Version$ECB(10, 25)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(2, 15), new Version$ECB(64, 16)]))])), new Version_0(37, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 28, 54, 80, 106, 132, 158]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(17, 122), new Version$ECB(4, 123)])), new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(29, 46), new Version$ECB(14, 47)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(49, 24), new Version$ECB(10, 25)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(24, 15), new Version$ECB(46, 16)]))])), new Version_0(38, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 32, 58, 84, 110, 136, 162]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(4, 122), new Version$ECB(18, 123)])), new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(13, 46), new Version$ECB(32, 47)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(48, 24), new Version$ECB(14, 25)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(42, 15), new Version$ECB(32, 16)]))])), new Version_0(39, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 26, 54, 82, 110, 138, 166]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(20, 117), new Version$ECB(4, 118)])), new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(40, 47), new Version$ECB(7, 48)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(43, 24), new Version$ECB(22, 25)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(10, 15), new Version$ECB(67, 16)]))])), new Version_0(40, stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 30, 58, 86, 114, 142, 170]), stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit, 1), $intern_0, 25, 0, [new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(19, 118), new Version$ECB(6, 119)])), new Version$ECBlocks(28, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(18, 47), new Version$ECB(31, 48)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(34, 24), new Version$ECB(34, 25)])), new Version$ECBlocks(30, stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit, 1), $intern_0, 9, 0, [new Version$ECB(20, 15), new Version$ECB(61, 16)]))]))]);
}

function $buildFunctionPattern(this$static){
  var bitMatrix, dimension, i, max_0, x_0, y_0;
  dimension = 17 + 4 * this$static.versionNumber;
  bitMatrix = new BitMatrix(dimension);
  $setRegion(bitMatrix, 0, 0, 9, 9);
  $setRegion(bitMatrix, dimension - 8, 0, 8, 9);
  $setRegion(bitMatrix, 0, dimension - 8, 9, 8);
  max_0 = this$static.alignmentPatternCenters.length;
  for (x_0 = 0; x_0 < max_0; x_0++) {
    i = this$static.alignmentPatternCenters[x_0] - 2;
    for (y_0 = 0; y_0 < max_0; y_0++) {
      (x_0 != 0 || y_0 != 0 && y_0 != max_0 - 1) && (x_0 != max_0 - 1 || y_0 != 0) && $setRegion(bitMatrix, this$static.alignmentPatternCenters[y_0] - 2, i, 5, 5);
    }
  }
  $setRegion(bitMatrix, 6, 9, 1, dimension - 17);
  $setRegion(bitMatrix, 9, 6, dimension - 17, 1);
  if (this$static.versionNumber > 6) {
    $setRegion(bitMatrix, dimension - 11, 0, 3, 6);
    $setRegion(bitMatrix, 0, dimension - 11, 6, 3);
  }
  return bitMatrix;
}

function Version_0(versionNumber, alignmentPatternCenters, ecBlocks){
  var ecBlock, ecBlock$array, ecBlock$index, ecBlock$max, ecCodewords, ecbArray, total;
  this.versionNumber = versionNumber;
  this.alignmentPatternCenters = alignmentPatternCenters;
  this.ecBlocks = ecBlocks;
  total = 0;
  ecCodewords = ecBlocks[0].ecCodewordsPerBlock;
  ecbArray = ecBlocks[0].ecBlocks;
  for (ecBlock$array = ecbArray , ecBlock$index = 0 , ecBlock$max = ecBlock$array.length; ecBlock$index < ecBlock$max; ++ecBlock$index) {
    ecBlock = ecBlock$array[ecBlock$index];
    total += ecBlock.count * (ecBlock.dataCodewords + ecCodewords);
  }
  this.totalCodewords = total;
}

function decodeVersionInformation(versionBits){
  $clinit_Version();
  var bestDifference, bestVersion, bitsDifference, i, targetVersion;
  bestDifference = $intern_1;
  bestVersion = 0;
  for (i = 0; i < VERSION_DECODE_INFO.length; i++) {
    targetVersion = VERSION_DECODE_INFO[i];
    if (targetVersion == versionBits) {
      return getVersionForNumber(i + 7);
    }
    bitsDifference = ($clinit_FormatInformation() , bitCount(versionBits ^ targetVersion));
    if (bitsDifference < bestDifference) {
      bestVersion = i + 7;
      bestDifference = bitsDifference;
    }
  }
  if (bestDifference <= 3) {
    return getVersionForNumber(bestVersion);
  }
  return null;
}

function getProvisionalVersionForDimension(dimension){
  $clinit_Version();
  if (dimension % 4 != 1) {
    throw toJs(($clinit_FormatException() , new FormatException));
  }
  try {
    return getVersionForNumber((dimension - 17) / 4 | 0);
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 56)) {
      throw toJs(($clinit_FormatException() , new FormatException));
    }
     else 
      throw toJs($e0);
  }
}

function getVersionForNumber(versionNumber){
  $clinit_Version();
  if (versionNumber < 1 || versionNumber > 40) {
    throw toJs(new IllegalArgumentException);
  }
  return VERSIONS[versionNumber - 1];
}

defineClass(75, 1, {75:1}, Version_0);
_.toString_0 = function toString_104(){
  return '' + this.versionNumber;
}
;
_.totalCodewords = 0;
_.versionNumber = 0;
var VERSIONS, VERSION_DECODE_INFO;
var Lpeergos_shared_zxing_qrcode_decoder_Version_2_classLit = createForClass('peergos.shared.zxing.qrcode.decoder', 'Version', 75);
function Version$ECB(count, dataCodewords){
  this.count = count;
  this.dataCodewords = dataCodewords;
}

defineClass(9, 1, {9:1}, Version$ECB);
_.count = 0;
_.dataCodewords = 0;
var Lpeergos_shared_zxing_qrcode_decoder_Version$ECB_2_classLit = createForClass('peergos.shared.zxing.qrcode.decoder', 'Version/ECB', 9);
function $getNumBlocks(this$static){
  var ecBlock, ecBlock$array, ecBlock$index, ecBlock$max, total;
  total = 0;
  for (ecBlock$array = this$static.ecBlocks , ecBlock$index = 0 , ecBlock$max = ecBlock$array.length; ecBlock$index < ecBlock$max; ++ecBlock$index) {
    ecBlock = ecBlock$array[ecBlock$index];
    total += ecBlock.count;
  }
  return total;
}

function Version$ECBlocks(ecCodewordsPerBlock, ecBlocks){
  this.ecCodewordsPerBlock = ecCodewordsPerBlock;
  this.ecBlocks = ecBlocks;
}

defineClass(25, 1, {25:1}, Version$ECBlocks);
_.ecCodewordsPerBlock = 0;
var Lpeergos_shared_zxing_qrcode_decoder_Version$ECBlocks_2_classLit = createForClass('peergos.shared.zxing.qrcode.decoder', 'Version/ECBlocks', 25);
function $aboutEquals(this$static, moduleSize, i, j){
  var moduleSizeDiff;
  if ($wnd.Math.abs(i - this$static.y_0) <= moduleSize && $wnd.Math.abs(j - this$static.x_0) <= moduleSize) {
    moduleSizeDiff = $wnd.Math.abs(moduleSize - this$static.estimatedModuleSize);
    return moduleSizeDiff <= 1 || moduleSizeDiff <= this$static.estimatedModuleSize;
  }
  return false;
}

function AlignmentPattern(posX, posY, estimatedModuleSize){
  ResultPoint.call(this, posX, posY);
  this.estimatedModuleSize = estimatedModuleSize;
}

defineClass(327, 210, {210:1, 327:1}, AlignmentPattern);
_.estimatedModuleSize = 0;
var Lpeergos_shared_zxing_qrcode_detector_AlignmentPattern_2_classLit = createForClass('peergos.shared.zxing.qrcode.detector', 'AlignmentPattern', 327);
function $crossCheckVertical(this$static, startI, centerJ, maxCount, originalStateCountTotal){
  var i, image, maxI, offset, offset0, offset1, offset2, stateCount, stateCountTotal;
  image = this$static.image;
  maxI = image.height;
  stateCount = this$static.crossCheckStateCount;
  stateCount[0] = 0;
  stateCount[1] = 0;
  stateCount[2] = 0;
  i = startI;
  while (i >= 0 && (offset0 = i * image.rowSize + (centerJ / 32 | 0) , (image.bits[offset0] >>> (centerJ & 31) & 1) != 0) && stateCount[1] <= maxCount) {
    ++stateCount[1];
    --i;
  }
  if (i < 0 || stateCount[1] > maxCount) {
    return NaN;
  }
  while (i >= 0 && (offset1 = i * image.rowSize + (centerJ / 32 | 0) , (image.bits[offset1] >>> (centerJ & 31) & 1) == 0) && stateCount[0] <= maxCount) {
    ++stateCount[0];
    --i;
  }
  if (stateCount[0] > maxCount) {
    return NaN;
  }
  i = startI + 1;
  while (i < maxI && (offset2 = i * image.rowSize + (centerJ / 32 | 0) , (image.bits[offset2] >>> (centerJ & 31) & 1) != 0) && stateCount[1] <= maxCount) {
    ++stateCount[1];
    ++i;
  }
  if (i == maxI || stateCount[1] > maxCount) {
    return NaN;
  }
  while (i < maxI && (offset = i * image.rowSize + (centerJ / 32 | 0) , (image.bits[offset] >>> (centerJ & 31) & 1) == 0) && stateCount[2] <= maxCount) {
    ++stateCount[2];
    ++i;
  }
  if (stateCount[2] > maxCount) {
    return NaN;
  }
  stateCountTotal = stateCount[0] + stateCount[1] + stateCount[2];
  if (5 * $wnd.Math.abs(stateCountTotal - originalStateCountTotal) >= 2 * originalStateCountTotal) {
    return NaN;
  }
  return $foundPatternCross(this$static, stateCount)?i - stateCount[2] - stateCount[1] / 2:NaN;
}

function $find(this$static){
  var confirmed, currentState, height, i, iGen, j, maxJ, middleI, startX, stateCount;
  startX = this$static.startX;
  height = this$static.height;
  maxJ = startX + this$static.width_0;
  middleI = this$static.startY + (height / 2 | 0);
  stateCount = initUnidimensionalArray(I_classLit, $intern_29, 8, 3, 15, 1);
  for (iGen = 0; iGen < height; iGen++) {
    i = middleI + ((iGen & 1) == 0?(iGen + 1) / 2 | 0:-((iGen + 1) / 2 | 0));
    stateCount[0] = 0;
    stateCount[1] = 0;
    stateCount[2] = 0;
    j = startX;
    while (j < maxJ && !$get_35(this$static.image, j, i)) {
      ++j;
    }
    currentState = 0;
    while (j < maxJ) {
      if ($get_35(this$static.image, j, i)) {
        if (currentState == 1) {
          ++stateCount[1];
        }
         else {
          if (currentState == 2) {
            if ($foundPatternCross(this$static, stateCount)) {
              confirmed = $handlePossibleCenter(this$static, stateCount, i, j);
              if (confirmed) {
                return confirmed;
              }
            }
            stateCount[0] = stateCount[2];
            stateCount[1] = 1;
            stateCount[2] = 0;
            currentState = 1;
          }
           else {
            ++stateCount[++currentState];
          }
        }
      }
       else {
        currentState == 1 && ++currentState;
        ++stateCount[currentState];
      }
      ++j;
    }
    if ($foundPatternCross(this$static, stateCount)) {
      confirmed = $handlePossibleCenter(this$static, stateCount, i, maxJ);
      if (confirmed) {
        return confirmed;
      }
    }
  }
  if (this$static.possibleCenters.array.length != 0) {
    return castTo($get_1(this$static.possibleCenters, 0), 327);
  }
  throw toJs(($clinit_NotFoundException() , $clinit_NotFoundException() , INSTANCE_4));
}

function $foundPatternCross(this$static, stateCount){
  var i, maxVariance, moduleSize;
  moduleSize = this$static.moduleSize;
  maxVariance = moduleSize / 2;
  for (i = 0; i < 3; i++) {
    if ($wnd.Math.abs(moduleSize - stateCount[i]) >= maxVariance) {
      return false;
    }
  }
  return true;
}

function $handlePossibleCenter(this$static, stateCount, i, j){
  var center, center$iterator, centerI, centerJ, estimatedModuleSize, point, stateCountTotal, combinedX, combinedY, combinedModuleSize;
  stateCountTotal = stateCount[0] + stateCount[1] + stateCount[2];
  centerJ = j - stateCount[2] - stateCount[1] / 2;
  centerI = $crossCheckVertical(this$static, i, round_int(centerJ), 2 * stateCount[1], stateCountTotal);
  if (!isNaN(centerI)) {
    estimatedModuleSize = (stateCount[0] + stateCount[1] + stateCount[2]) / 3;
    for (center$iterator = new ArrayList$1(this$static.possibleCenters); center$iterator.i < center$iterator.this$01.array.length;) {
      center = castTo($next_0(center$iterator), 327);
      if ($aboutEquals(center, estimatedModuleSize, centerI, centerJ)) {
        return combinedX = (center.x_0 + centerJ) / 2 , combinedY = (center.y_0 + centerI) / 2 , combinedModuleSize = (center.estimatedModuleSize + estimatedModuleSize) / 2 , new AlignmentPattern(combinedX, combinedY, combinedModuleSize);
      }
    }
    point = new AlignmentPattern(centerJ, centerI, estimatedModuleSize);
    $add(this$static.possibleCenters, point);
  }
  return null;
}

function AlignmentPatternFinder(image, startX, startY, width_0, height, moduleSize){
  this.image = image;
  this.possibleCenters = new ArrayList_0(5);
  this.startX = startX;
  this.startY = startY;
  this.width_0 = width_0;
  this.height = height;
  this.moduleSize = moduleSize;
  this.crossCheckStateCount = initUnidimensionalArray(I_classLit, $intern_29, 8, 3, 15, 1);
}

defineClass(1156, 1, {}, AlignmentPatternFinder);
_.height = 0;
_.moduleSize = 0;
_.startX = 0;
_.startY = 0;
_.width_0 = 0;
var Lpeergos_shared_zxing_qrcode_detector_AlignmentPatternFinder_2_classLit = createForClass('peergos.shared.zxing.qrcode.detector', 'AlignmentPatternFinder', 1156);
function $calculateModuleSizeOneWay(this$static, pattern, otherPattern){
  var moduleSizeEst1, moduleSizeEst2;
  moduleSizeEst1 = $sizeOfBlackWhiteBlackRunBothWays(this$static, round_int(pattern.x_0), round_int(pattern.y_0), round_int(otherPattern.x_0), round_int(otherPattern.y_0));
  moduleSizeEst2 = $sizeOfBlackWhiteBlackRunBothWays(this$static, round_int(otherPattern.x_0), round_int(otherPattern.y_0), round_int(pattern.x_0), round_int(pattern.y_0));
  if (isNaN(moduleSizeEst1)) {
    return moduleSizeEst2 / 7;
  }
  if (isNaN(moduleSizeEst2)) {
    return moduleSizeEst1 / 7;
  }
  return (moduleSizeEst1 + moduleSizeEst2) / 14;
}

function $detect(this$static){
  var finder, info;
  finder = new FinderPatternFinder(this$static.image);
  info = $find_0(finder);
  return $processFinderPatternInfo(this$static, info);
}

function $findAlignmentInRegion(this$static, overallEstModuleSize, estAlignmentX, estAlignmentY, allowanceFactor){
  var alignmentAreaBottomY, alignmentAreaLeftX, alignmentAreaRightX, alignmentAreaTopY, alignmentFinder, allowance;
  allowance = round_int(allowanceFactor * overallEstModuleSize);
  alignmentAreaLeftX = $wnd.Math.max(0, estAlignmentX - allowance);
  alignmentAreaRightX = $wnd.Math.min(this$static.image.width_0 - 1, estAlignmentX + allowance);
  if (alignmentAreaRightX - alignmentAreaLeftX < overallEstModuleSize * 3) {
    throw toJs(($clinit_NotFoundException() , $clinit_NotFoundException() , INSTANCE_4));
  }
  alignmentAreaTopY = $wnd.Math.max(0, estAlignmentY - allowance);
  alignmentAreaBottomY = $wnd.Math.min(this$static.image.height - 1, estAlignmentY + allowance);
  if (alignmentAreaBottomY - alignmentAreaTopY < overallEstModuleSize * 3) {
    throw toJs(($clinit_NotFoundException() , $clinit_NotFoundException() , INSTANCE_4));
  }
  alignmentFinder = new AlignmentPatternFinder(this$static.image, alignmentAreaLeftX, alignmentAreaTopY, alignmentAreaRightX - alignmentAreaLeftX, alignmentAreaBottomY - alignmentAreaTopY, overallEstModuleSize);
  return $find(alignmentFinder);
}

function $processFinderPatternInfo(this$static, info){
  var alignmentPattern, bits, bottomLeft, bottomRightX, bottomRightY, correctionToTopLeft, dimension, estAlignmentX, estAlignmentY, i, moduleSize, modulesBetweenFPCenters, points, provisionalVersion, topLeft, topRight, transform;
  topLeft = info.topLeft;
  topRight = info.topRight;
  bottomLeft = info.bottomLeft;
  moduleSize = ($calculateModuleSizeOneWay(this$static, topLeft, topRight) + $calculateModuleSizeOneWay(this$static, topLeft, bottomLeft)) / 2;
  if (moduleSize < 1) {
    throw toJs(($clinit_NotFoundException() , $clinit_NotFoundException() , INSTANCE_4));
  }
  dimension = computeDimension(topLeft, topRight, bottomLeft, moduleSize);
  provisionalVersion = getProvisionalVersionForDimension(dimension);
  modulesBetweenFPCenters = 17 + 4 * provisionalVersion.versionNumber - 7;
  alignmentPattern = null;
  if (provisionalVersion.alignmentPatternCenters.length > 0) {
    bottomRightX = topRight.x_0 - topLeft.x_0 + bottomLeft.x_0;
    bottomRightY = topRight.y_0 - topLeft.y_0 + bottomLeft.y_0;
    correctionToTopLeft = 1 - 3 / modulesBetweenFPCenters;
    estAlignmentX = round_int(topLeft.x_0 + correctionToTopLeft * (bottomRightX - topLeft.x_0));
    estAlignmentY = round_int(topLeft.y_0 + correctionToTopLeft * (bottomRightY - topLeft.y_0));
    for (i = 4; i <= 16; i <<= 1) {
      try {
        alignmentPattern = $findAlignmentInRegion(this$static, moduleSize, estAlignmentX, estAlignmentY, i);
        break;
      }
       catch ($e0) {
        $e0 = toJava($e0);
        if (!instanceOf($e0, 368))
          throw toJs($e0);
      }
    }
  }
  transform = createTransform(topLeft, topRight, bottomLeft, alignmentPattern, dimension);
  bits = sampleGrid(this$static.image, transform, dimension);
  !alignmentPattern?(points = stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_ResultPoint_2_classLit, 1), $intern_0, 210, 0, [bottomLeft, topLeft, topRight])):(points = stampJavaTypeInfo(getClassLiteralForArray(Lpeergos_shared_zxing_ResultPoint_2_classLit, 1), $intern_0, 210, 0, [bottomLeft, topLeft, topRight, alignmentPattern]));
  return new DetectorResult(bits, points);
}

function $sizeOfBlackWhiteBlackRun(this$static, fromX, fromY, toX, toY){
  var dx, dy, error, realX, realY, state, steep, temp, x_0, xLimit, xstep, y_0, ystep;
  steep = $wnd.Math.abs(toY - fromY) > $wnd.Math.abs(toX - fromX);
  if (steep) {
    temp = fromX;
    fromX = fromY;
    fromY = temp;
    temp = toX;
    toX = toY;
    toY = temp;
  }
  dx = $wnd.Math.abs(toX - fromX);
  dy = $wnd.Math.abs(toY - fromY);
  error = -dx / 2 | 0;
  xstep = fromX < toX?1:-1;
  ystep = fromY < toY?1:-1;
  state = 0;
  xLimit = toX + xstep;
  for (x_0 = fromX , y_0 = fromY; x_0 != xLimit; x_0 += xstep) {
    realX = steep?y_0:x_0;
    realY = steep?x_0:y_0;
    if (state == 1 == $get_35(this$static.image, realX, realY)) {
      if (state == 2) {
        return distance_2(x_0, y_0, fromX, fromY);
      }
      ++state;
    }
    error += dy;
    if (error > 0) {
      if (y_0 == toY) {
        break;
      }
      y_0 += ystep;
      error -= dx;
    }
  }
  if (state == 2) {
    return distance_2(toX + xstep, toY, fromX, fromY);
  }
  return NaN;
}

function $sizeOfBlackWhiteBlackRunBothWays(this$static, fromX, fromY, toX, toY){
  var otherToX, otherToY, result, scale;
  result = $sizeOfBlackWhiteBlackRun(this$static, fromX, fromY, toX, toY);
  scale = 1;
  otherToX = fromX - (toX - fromX);
  if (otherToX < 0) {
    scale = fromX / (fromX - otherToX);
    otherToX = 0;
  }
   else if (otherToX >= this$static.image.width_0) {
    scale = (this$static.image.width_0 - 1 - fromX) / (otherToX - fromX);
    otherToX = this$static.image.width_0 - 1;
  }
  otherToY = round_int(fromY - (toY - fromY) * scale);
  scale = 1;
  if (otherToY < 0) {
    scale = fromY / (fromY - otherToY);
    otherToY = 0;
  }
   else if (otherToY >= this$static.image.height) {
    scale = (this$static.image.height - 1 - fromY) / (otherToY - fromY);
    otherToY = this$static.image.height - 1;
  }
  otherToX = round_int(fromX + (otherToX - fromX) * scale);
  result += $sizeOfBlackWhiteBlackRun(this$static, fromX, fromY, otherToX, otherToY);
  return result - 1;
}

function Detector(image){
  this.image = image;
}

function computeDimension(topLeft, topRight, bottomLeft, moduleSize){
  var dimension, tlblCentersDimension, tltrCentersDimension;
  tltrCentersDimension = round_0(distance_1(topLeft.x_0, topLeft.y_0, topRight.x_0, topRight.y_0) / moduleSize);
  tlblCentersDimension = round_0(distance_1(topLeft.x_0, topLeft.y_0, bottomLeft.x_0, bottomLeft.y_0) / moduleSize);
  dimension = ((tltrCentersDimension + tlblCentersDimension) / 2 | 0) + 7;
  switch (dimension & 3) {
    case 0:
      ++dimension;
      break;
    case 2:
      --dimension;
      break;
    case 3:
      throw toJs(($clinit_NotFoundException() , $clinit_NotFoundException() , INSTANCE_4));
  }
  return dimension;
}

function createTransform(topLeft, topRight, bottomLeft, alignmentPattern, dimension){
  var bottomRightX, bottomRightY, dimMinusThree, sourceBottomRightX, sourceBottomRightY;
  dimMinusThree = dimension - 3.5;
  if (alignmentPattern) {
    bottomRightX = alignmentPattern.x_0;
    bottomRightY = alignmentPattern.y_0;
    sourceBottomRightX = dimMinusThree - 3;
    sourceBottomRightY = sourceBottomRightX;
  }
   else {
    bottomRightX = topRight.x_0 - topLeft.x_0 + bottomLeft.x_0;
    bottomRightY = topRight.y_0 - topLeft.y_0 + bottomLeft.y_0;
    sourceBottomRightX = dimMinusThree;
    sourceBottomRightY = dimMinusThree;
  }
  return quadrilateralToQuadrilateral(dimMinusThree, sourceBottomRightX, sourceBottomRightY, dimMinusThree, topLeft.x_0, topLeft.y_0, topRight.x_0, topRight.y_0, bottomRightX, bottomRightY, bottomLeft.x_0, bottomLeft.y_0);
}

function sampleGrid(image, transform, dimension){
  return $sampleGrid(image, dimension, dimension, transform);
}

defineClass(1113, 1, {}, Detector);
var Lpeergos_shared_zxing_qrcode_detector_Detector_2_classLit = createForClass('peergos.shared.zxing.qrcode.detector', 'Detector', 1113);
function $aboutEquals_0(this$static, moduleSize, i, j){
  var moduleSizeDiff;
  if ($wnd.Math.abs(i - this$static.y_0) <= moduleSize && $wnd.Math.abs(j - this$static.x_0) <= moduleSize) {
    moduleSizeDiff = $wnd.Math.abs(moduleSize - this$static.estimatedModuleSize);
    return moduleSizeDiff <= 1 || moduleSizeDiff <= this$static.estimatedModuleSize;
  }
  return false;
}

function FinderPattern(posX, posY, estimatedModuleSize){
  FinderPattern_0.call(this, posX, posY, estimatedModuleSize, 1);
}

function FinderPattern_0(posX, posY, estimatedModuleSize, count){
  ResultPoint.call(this, posX, posY);
  this.estimatedModuleSize = estimatedModuleSize;
  this.count = count;
}

defineClass(157, 210, {210:1, 157:1}, FinderPattern, FinderPattern_0);
_.count = 0;
_.estimatedModuleSize = 0;
var Lpeergos_shared_zxing_qrcode_detector_FinderPattern_2_classLit = createForClass('peergos.shared.zxing.qrcode.detector', 'FinderPattern', 157);
function $clinit_FinderPatternFinder(){
  $clinit_FinderPatternFinder = emptyMethod;
  moduleComparator = new FinderPatternFinder$EstimatedModuleComparator;
}

function $clearCounts(counts){
  var x_0;
  for (x_0 = 0; x_0 < counts.length; x_0++) {
    counts[x_0] = 0;
  }
}

function $crossCheckDiagonal(this$static, centerI, centerJ){
  var i, maxI, maxJ, stateCount;
  stateCount = ($clearCounts(this$static.crossCheckStateCount) , this$static.crossCheckStateCount);
  i = 0;
  while (centerI >= i && centerJ >= i && $get_35(this$static.image, centerJ - i, centerI - i)) {
    ++stateCount[2];
    ++i;
  }
  if (stateCount[2] == 0) {
    return false;
  }
  while (centerI >= i && centerJ >= i && !$get_35(this$static.image, centerJ - i, centerI - i)) {
    ++stateCount[1];
    ++i;
  }
  if (stateCount[1] == 0) {
    return false;
  }
  while (centerI >= i && centerJ >= i && $get_35(this$static.image, centerJ - i, centerI - i)) {
    ++stateCount[0];
    ++i;
  }
  if (stateCount[0] == 0) {
    return false;
  }
  maxI = this$static.image.height;
  maxJ = this$static.image.width_0;
  i = 1;
  while (centerI + i < maxI && centerJ + i < maxJ && $get_35(this$static.image, centerJ + i, centerI + i)) {
    ++stateCount[2];
    ++i;
  }
  while (centerI + i < maxI && centerJ + i < maxJ && !$get_35(this$static.image, centerJ + i, centerI + i)) {
    ++stateCount[3];
    ++i;
  }
  if (stateCount[3] == 0) {
    return false;
  }
  while (centerI + i < maxI && centerJ + i < maxJ && $get_35(this$static.image, centerJ + i, centerI + i)) {
    ++stateCount[4];
    ++i;
  }
  if (stateCount[4] == 0) {
    return false;
  }
  return foundPatternDiagonal(stateCount);
}

function $crossCheckHorizontal(this$static, startJ, centerI, maxCount, originalStateCountTotal){
  var image, j, maxJ, offset, offset0, offset1, offset2, offset3, offset4, stateCount, stateCountTotal;
  image = this$static.image;
  maxJ = image.width_0;
  stateCount = ($clearCounts(this$static.crossCheckStateCount) , this$static.crossCheckStateCount);
  j = startJ;
  while (j >= 0 && (offset0 = centerI * image.rowSize + (j / 32 | 0) , (image.bits[offset0] >>> (j & 31) & 1) != 0)) {
    ++stateCount[2];
    --j;
  }
  if (j < 0) {
    return NaN;
  }
  while (j >= 0 && (offset1 = centerI * image.rowSize + (j / 32 | 0) , (image.bits[offset1] >>> (j & 31) & 1) == 0) && stateCount[1] <= maxCount) {
    ++stateCount[1];
    --j;
  }
  if (j < 0 || stateCount[1] > maxCount) {
    return NaN;
  }
  while (j >= 0 && (offset2 = centerI * image.rowSize + (j / 32 | 0) , (image.bits[offset2] >>> (j & 31) & 1) != 0) && stateCount[0] <= maxCount) {
    ++stateCount[0];
    --j;
  }
  if (stateCount[0] > maxCount) {
    return NaN;
  }
  j = startJ + 1;
  while (j < maxJ && (offset3 = centerI * image.rowSize + (j / 32 | 0) , (image.bits[offset3] >>> (j & 31) & 1) != 0)) {
    ++stateCount[2];
    ++j;
  }
  if (j == maxJ) {
    return NaN;
  }
  while (j < maxJ && (offset4 = centerI * image.rowSize + (j / 32 | 0) , (image.bits[offset4] >>> (j & 31) & 1) == 0) && stateCount[3] < maxCount) {
    ++stateCount[3];
    ++j;
  }
  if (j == maxJ || stateCount[3] >= maxCount) {
    return NaN;
  }
  while (j < maxJ && (offset = centerI * image.rowSize + (j / 32 | 0) , (image.bits[offset] >>> (j & 31) & 1) != 0) && stateCount[4] < maxCount) {
    ++stateCount[4];
    ++j;
  }
  if (stateCount[4] >= maxCount) {
    return NaN;
  }
  stateCountTotal = stateCount[0] + stateCount[1] + stateCount[2] + stateCount[3] + stateCount[4];
  if (5 * $wnd.Math.abs(stateCountTotal - originalStateCountTotal) >= originalStateCountTotal) {
    return NaN;
  }
  return foundPatternCross(stateCount)?j - stateCount[4] - stateCount[3] - stateCount[2] / 2:NaN;
}

function $crossCheckVertical_0(this$static, startI, centerJ, maxCount, originalStateCountTotal){
  var i, image, maxI, offset, offset0, offset1, offset2, offset3, offset4, stateCount, stateCountTotal;
  image = this$static.image;
  maxI = image.height;
  stateCount = ($clearCounts(this$static.crossCheckStateCount) , this$static.crossCheckStateCount);
  i = startI;
  while (i >= 0 && (offset0 = i * image.rowSize + (centerJ / 32 | 0) , (image.bits[offset0] >>> (centerJ & 31) & 1) != 0)) {
    ++stateCount[2];
    --i;
  }
  if (i < 0) {
    return NaN;
  }
  while (i >= 0 && (offset1 = i * image.rowSize + (centerJ / 32 | 0) , (image.bits[offset1] >>> (centerJ & 31) & 1) == 0) && stateCount[1] <= maxCount) {
    ++stateCount[1];
    --i;
  }
  if (i < 0 || stateCount[1] > maxCount) {
    return NaN;
  }
  while (i >= 0 && (offset2 = i * image.rowSize + (centerJ / 32 | 0) , (image.bits[offset2] >>> (centerJ & 31) & 1) != 0) && stateCount[0] <= maxCount) {
    ++stateCount[0];
    --i;
  }
  if (stateCount[0] > maxCount) {
    return NaN;
  }
  i = startI + 1;
  while (i < maxI && (offset3 = i * image.rowSize + (centerJ / 32 | 0) , (image.bits[offset3] >>> (centerJ & 31) & 1) != 0)) {
    ++stateCount[2];
    ++i;
  }
  if (i == maxI) {
    return NaN;
  }
  while (i < maxI && (offset4 = i * image.rowSize + (centerJ / 32 | 0) , (image.bits[offset4] >>> (centerJ & 31) & 1) == 0) && stateCount[3] < maxCount) {
    ++stateCount[3];
    ++i;
  }
  if (i == maxI || stateCount[3] >= maxCount) {
    return NaN;
  }
  while (i < maxI && (offset = i * image.rowSize + (centerJ / 32 | 0) , (image.bits[offset] >>> (centerJ & 31) & 1) != 0) && stateCount[4] < maxCount) {
    ++stateCount[4];
    ++i;
  }
  if (stateCount[4] >= maxCount) {
    return NaN;
  }
  stateCountTotal = stateCount[0] + stateCount[1] + stateCount[2] + stateCount[3] + stateCount[4];
  if (5 * $wnd.Math.abs(stateCountTotal - originalStateCountTotal) >= 2 * originalStateCountTotal) {
    return NaN;
  }
  return foundPatternCross(stateCount)?i - stateCount[4] - stateCount[3] - stateCount[2] / 2:NaN;
}

function $find_0(this$static){
  var confirmed, currentState, done, i, iSkip, j, maxI, maxJ, patternInfo, rowSkip, stateCount;
  maxI = this$static.image.height;
  maxJ = this$static.image.width_0;
  iSkip = 3 * maxI / 388 | 0;
  iSkip < 3 && (iSkip = 3);
  done = false;
  stateCount = initUnidimensionalArray(I_classLit, $intern_29, 8, 5, 15, 1);
  for (i = iSkip - 1; i < maxI && !done; i += iSkip) {
    $clearCounts(stateCount);
    currentState = 0;
    for (j = 0; j < maxJ; j++) {
      if ($get_35(this$static.image, j, i)) {
        (currentState & 1) == 1 && ++currentState;
        ++stateCount[currentState];
      }
       else {
        if ((currentState & 1) == 0) {
          if (currentState == 4) {
            if (foundPatternCross(stateCount)) {
              confirmed = $handlePossibleCenter_0(this$static, stateCount, i, j);
              if (confirmed) {
                iSkip = 2;
                if (this$static.hasSkipped) {
                  done = $haveMultiplyConfirmedCenters(this$static);
                }
                 else {
                  rowSkip = $findRowSkip(this$static);
                  if (rowSkip > stateCount[2]) {
                    i += rowSkip - stateCount[2] - iSkip;
                    j = maxJ - 1;
                  }
                }
              }
               else {
                $shiftCounts2(stateCount);
                currentState = 3;
                continue;
              }
              currentState = 0;
              $clearCounts(stateCount);
            }
             else {
              $shiftCounts2(stateCount);
              currentState = 3;
            }
          }
           else {
            ++stateCount[++currentState];
          }
        }
         else {
          ++stateCount[currentState];
        }
      }
    }
    if (foundPatternCross(stateCount)) {
      confirmed = $handlePossibleCenter_0(this$static, stateCount, i, maxJ);
      if (confirmed) {
        iSkip = stateCount[0];
        this$static.hasSkipped && (done = $haveMultiplyConfirmedCenters(this$static));
      }
    }
  }
  patternInfo = $selectBestPatterns(this$static);
  orderBestPatterns(patternInfo);
  return new FinderPatternInfo(patternInfo);
}

function $findRowSkip(this$static){
  var center, center$iterator, firstConfirmedCenter, max_0;
  max_0 = this$static.possibleCenters.array.length;
  if (max_0 <= 1) {
    return 0;
  }
  firstConfirmedCenter = null;
  for (center$iterator = new ArrayList$1(this$static.possibleCenters); center$iterator.i < center$iterator.this$01.array.length;) {
    center = castTo($next_0(center$iterator), 157);
    if (center.count >= 2) {
      if (!firstConfirmedCenter) {
        firstConfirmedCenter = center;
      }
       else {
        this$static.hasSkipped = true;
        return round_int($wnd.Math.abs(firstConfirmedCenter.x_0 - center.x_0) - $wnd.Math.abs(firstConfirmedCenter.y_0 - center.y_0)) / 2 | 0;
      }
    }
  }
  return 0;
}

function $handlePossibleCenter_0(this$static, stateCount, i, j){
  var center, centerI, centerJ, estimatedModuleSize, found, index_0, point, stateCountTotal, combinedCount, combinedX, combinedY, combinedModuleSize;
  stateCountTotal = stateCount[0] + stateCount[1] + stateCount[2] + stateCount[3] + stateCount[4];
  centerJ = j - stateCount[4] - stateCount[3] - stateCount[2] / 2;
  centerI = $crossCheckVertical_0(this$static, i, round_int(centerJ), stateCount[2], stateCountTotal);
  if (!isNaN(centerI)) {
    centerJ = $crossCheckHorizontal(this$static, round_int(centerJ), round_int(centerI), stateCount[2], stateCountTotal);
    if (!isNaN(centerJ) && $crossCheckDiagonal(this$static, round_int(centerI), round_int(centerJ))) {
      estimatedModuleSize = stateCountTotal / 7;
      found = false;
      for (index_0 = 0; index_0 < this$static.possibleCenters.array.length; index_0++) {
        center = castTo($get_1(this$static.possibleCenters, index_0), 157);
        if ($aboutEquals_0(center, estimatedModuleSize, centerI, centerJ)) {
          $set_0(this$static.possibleCenters, index_0, (combinedCount = center.count + 1 , combinedX = (center.count * center.x_0 + centerJ) / combinedCount , combinedY = (center.count * center.y_0 + centerI) / combinedCount , combinedModuleSize = (center.count * center.estimatedModuleSize + estimatedModuleSize) / combinedCount , new FinderPattern_0(combinedX, combinedY, combinedModuleSize, combinedCount)));
          found = true;
          break;
        }
      }
      if (!found) {
        point = new FinderPattern(centerJ, centerI, estimatedModuleSize);
        $add(this$static.possibleCenters, point);
      }
      return true;
    }
  }
  return false;
}

function $haveMultiplyConfirmedCenters(this$static){
  var average, confirmedCount, max_0, pattern, pattern$iterator, pattern$iterator0, totalDeviation, totalModuleSize;
  confirmedCount = 0;
  totalModuleSize = 0;
  max_0 = this$static.possibleCenters.array.length;
  for (pattern$iterator0 = new ArrayList$1(this$static.possibleCenters); pattern$iterator0.i < pattern$iterator0.this$01.array.length;) {
    pattern = castTo($next_0(pattern$iterator0), 157);
    if (pattern.count >= 2) {
      ++confirmedCount;
      totalModuleSize += pattern.estimatedModuleSize;
    }
  }
  if (confirmedCount < 3) {
    return false;
  }
  average = totalModuleSize / max_0;
  totalDeviation = 0;
  for (pattern$iterator = new ArrayList$1(this$static.possibleCenters); pattern$iterator.i < pattern$iterator.this$01.array.length;) {
    pattern = castTo($next_0(pattern$iterator), 157);
    totalDeviation += $wnd.Math.abs(pattern.estimatedModuleSize - average);
  }
  return totalDeviation <= 0.05000000074505806 * totalModuleSize;
}

function $selectBestPatterns(this$static){
  var bestPatterns, d, distortion, fpi, fpj, fpk, i, j, k, maxModuleSize, minModuleSize, squares, squares0, startSize;
  startSize = this$static.possibleCenters.array.length;
  if (startSize < 3) {
    throw toJs(($clinit_NotFoundException() , $clinit_NotFoundException() , INSTANCE_4));
  }
  $sort(this$static.possibleCenters, moduleComparator);
  distortion = $intern_72;
  squares = initUnidimensionalArray(D_classLit, $intern_18, 8, 3, 15, 1);
  bestPatterns = initUnidimensionalArray(Lpeergos_shared_zxing_qrcode_detector_FinderPattern_2_classLit, $intern_0, 157, 3, 0, 1);
  for (i = 0; i < this$static.possibleCenters.array.length - 2; i++) {
    fpi = castTo($get_1(this$static.possibleCenters, i), 157);
    minModuleSize = fpi.estimatedModuleSize;
    for (j = i + 1; j < this$static.possibleCenters.array.length - 1; j++) {
      fpj = castTo($get_1(this$static.possibleCenters, j), 157);
      squares0 = squaredDistance(fpi, fpj);
      for (k = j + 1; k < this$static.possibleCenters.array.length; k++) {
        fpk = castTo($get_1(this$static.possibleCenters, k), 157);
        maxModuleSize = fpk.estimatedModuleSize;
        if (maxModuleSize > minModuleSize * 1.399999976158142) {
          continue;
        }
        squares[0] = squares0;
        squares[1] = squaredDistance(fpj, fpk);
        squares[2] = squaredDistance(fpi, fpk);
        squares.sort(makeLambdaFunction(Arrays$0methodref$compare$Type.prototype.compare, Arrays$0methodref$compare$Type, []));
        d = $wnd.Math.abs(squares[2] - 2 * squares[1]) + $wnd.Math.abs(squares[2] - 2 * squares[0]);
        if (d < distortion) {
          distortion = d;
          bestPatterns[0] = fpi;
          bestPatterns[1] = fpj;
          bestPatterns[2] = fpk;
        }
      }
    }
  }
  if (distortion == $intern_72) {
    throw toJs(($clinit_NotFoundException() , $clinit_NotFoundException() , INSTANCE_4));
  }
  return bestPatterns;
}

function $shiftCounts2(stateCount){
  stateCount[0] = stateCount[2];
  stateCount[1] = stateCount[3];
  stateCount[2] = stateCount[4];
  stateCount[3] = 1;
  stateCount[4] = 0;
}

function FinderPatternFinder(image){
  $clinit_FinderPatternFinder();
  this.image = image;
  this.possibleCenters = new ArrayList;
  this.crossCheckStateCount = initUnidimensionalArray(I_classLit, $intern_29, 8, 5, 15, 1);
}

function foundPatternCross(stateCount){
  var count, i, maxVariance, moduleSize, totalModuleSize;
  totalModuleSize = 0;
  for (i = 0; i < 5; i++) {
    count = stateCount[i];
    if (count == 0) {
      return false;
    }
    totalModuleSize += count;
  }
  if (totalModuleSize < 7) {
    return false;
  }
  moduleSize = totalModuleSize / 7;
  maxVariance = moduleSize / 2;
  return $wnd.Math.abs(moduleSize - stateCount[0]) < maxVariance && $wnd.Math.abs(moduleSize - stateCount[1]) < maxVariance && $wnd.Math.abs(3 * moduleSize - stateCount[2]) < 3 * maxVariance && $wnd.Math.abs(moduleSize - stateCount[3]) < maxVariance && $wnd.Math.abs(moduleSize - stateCount[4]) < maxVariance;
}

function foundPatternDiagonal(stateCount){
  var count, i, maxVariance, moduleSize, totalModuleSize;
  totalModuleSize = 0;
  for (i = 0; i < 5; i++) {
    count = stateCount[i];
    if (count == 0) {
      return false;
    }
    totalModuleSize += count;
  }
  if (totalModuleSize < 7) {
    return false;
  }
  moduleSize = totalModuleSize / 7;
  maxVariance = moduleSize / 1.3329999446868896;
  return $wnd.Math.abs(moduleSize - stateCount[0]) < maxVariance && $wnd.Math.abs(moduleSize - stateCount[1]) < maxVariance && $wnd.Math.abs(3 * moduleSize - stateCount[2]) < 3 * maxVariance && $wnd.Math.abs(moduleSize - stateCount[3]) < maxVariance && $wnd.Math.abs(moduleSize - stateCount[4]) < maxVariance;
}

function squaredDistance(a, b){
  var x_0, y_0;
  x_0 = a.x_0 - b.x_0;
  y_0 = a.y_0 - b.y_0;
  return x_0 * x_0 + y_0 * y_0;
}

defineClass(1128, 1, {}, FinderPatternFinder);
_.hasSkipped = false;
var moduleComparator;
var Lpeergos_shared_zxing_qrcode_detector_FinderPatternFinder_2_classLit = createForClass('peergos.shared.zxing.qrcode.detector', 'FinderPatternFinder', 1128);
function $compare_1(center1, center2){
  return compare_3(center1.estimatedModuleSize, center2.estimatedModuleSize);
}

function FinderPatternFinder$EstimatedModuleComparator(){
}

defineClass(1129, 1, $intern_18, FinderPatternFinder$EstimatedModuleComparator);
_.compare_0 = function compare_14(center1, center2){
  return $compare_1(castTo(center1, 157), castTo(center2, 157));
}
;
_.equals_0 = function equals_109(other){
  return this === other;
}
;
var Lpeergos_shared_zxing_qrcode_detector_FinderPatternFinder$EstimatedModuleComparator_2_classLit = createForClass('peergos.shared.zxing.qrcode.detector', 'FinderPatternFinder/EstimatedModuleComparator', 1129);
function FinderPatternInfo(patternCenters){
  this.bottomLeft = patternCenters[0];
  this.topLeft = patternCenters[1];
  this.topRight = patternCenters[2];
}

defineClass(1130, 1, {}, FinderPatternInfo);
var Lpeergos_shared_zxing_qrcode_detector_FinderPatternInfo_2_classLit = createForClass('peergos.shared.zxing.qrcode.detector', 'FinderPatternInfo', 1130);
function BlockPair(data_0, errorCorrection){
  this.dataBytes = data_0;
  this.errorCorrectionBytes = errorCorrection;
}

defineClass(372, 1, {372:1}, BlockPair);
var Lpeergos_shared_zxing_qrcode_encoder_BlockPair_2_classLit = createForClass('peergos.shared.zxing.qrcode.encoder', 'BlockPair', 372);
function $clear_9(this$static){
  var aByte, aByte$array, aByte$index, aByte$max;
  for (aByte$array = this$static.bytes , aByte$index = 0 , aByte$max = aByte$array.length; aByte$index < aByte$max; ++aByte$index) {
    aByte = aByte$array[aByte$index];
    fill0(aByte, aByte.length, -1);
  }
}

function $get_36(this$static, y_0){
  return this$static.bytes[y_0][8];
}

function $set_4(this$static, x_0, y_0, value_0){
  this$static.bytes[y_0][x_0] = value_0 << 24 >> 24;
}

function $set_5(this$static, x_0, y_0, value_0){
  this$static.bytes[y_0][x_0] = (value_0?1:0) << 24 >> 24;
}

function ByteMatrix(width_0, height){
  this.bytes = initMultidimensionalArray(B_classLit, [$intern_0, $intern_28], [11, 8], 15, [height, width_0], 2);
  this.width_0 = width_0;
  this.height = height;
}

defineClass(1135, 1, {}, ByteMatrix);
_.toString_0 = function toString_105(){
  var bytesY, result, x_0, y_0;
  result = new StringBuilder_0;
  for (y_0 = 0; y_0 < this.height; ++y_0) {
    bytesY = this.bytes[y_0];
    for (x_0 = 0; x_0 < this.width_0; ++x_0) {
      switch (bytesY[x_0]) {
        case 0:
          result.string += ' 0';
          break;
        case 1:
          result.string += ' 1';
          break;
        default:result.string += '  ';
      }
    }
    result.string += '\n';
  }
  return result.string;
}
;
_.height = 0;
_.width_0 = 0;
var Lpeergos_shared_zxing_qrcode_encoder_ByteMatrix_2_classLit = createForClass('peergos.shared.zxing.qrcode.encoder', 'ByteMatrix', 1135);
function $clinit_Encoder(){
  $clinit_Encoder = emptyMethod;
  ALPHANUMERIC_TABLE = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 36, -1, -1, -1, 37, 38, -1, -1, -1, -1, 39, 40, -1, 41, 42, 43, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 44, -1, -1, -1, -1, -1, -1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, -1, -1, -1, -1, -1]);
}

function append8BitBytes(content_0, bits){
  var b, b$array, b$index, b$max, bytes, uee;
  try {
    bytes = $getBytes(content_0, getCharset('ISO-8859-1'));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 136)) {
      uee = $e0;
      throw toJs(new WriterException_1(uee));
    }
     else 
      throw toJs($e0);
  }
  for (b$array = bytes , b$index = 0 , b$max = b$array.length; b$index < b$max; ++b$index) {
    b = b$array[b$index];
    $appendBits(bits, b, 8);
  }
}

function appendAlphanumericBytes(content_0, bits){
  var code1, code2, i, length_0;
  length_0 = content_0.length;
  i = 0;
  while (i < length_0) {
    code1 = getAlphanumericCode((checkCriticalStringElementIndex(i, content_0.length) , content_0.charCodeAt(i)));
    if (code1 == -1) {
      throw toJs(new WriterException);
    }
    if (i + 1 < length_0) {
      code2 = getAlphanumericCode((checkCriticalStringElementIndex(i + 1, content_0.length) , content_0.charCodeAt(i + 1)));
      if (code2 == -1) {
        throw toJs(new WriterException);
      }
      $appendBits(bits, code1 * 45 + code2, 11);
      i += 2;
    }
     else {
      $appendBits(bits, code1, 6);
      ++i;
    }
  }
}

function appendBytes(content_0, mode, bits){
  switch (mode.ordinal_0) {
    case 1:
      appendNumericBytes(content_0, bits);
      break;
    case 2:
      appendAlphanumericBytes(content_0, bits);
      break;
    case 4:
      append8BitBytes(content_0, bits);
      break;
    case 6:
      appendKanjiBytes(content_0, bits);
      break;
    default:throw toJs(new WriterException_0('Invalid mode: ' + mode));
  }
}

function appendKanjiBytes(content_0, bits){
  var byte1, byte2, bytes, code_0, encoded, i, maxI, subtracted, uee;
  try {
    bytes = $getBytes(content_0, getCharset('Shift_JIS'));
  }
   catch ($e0) {
    $e0 = toJava($e0);
    if (instanceOf($e0, 136)) {
      uee = $e0;
      throw toJs(new WriterException_1(uee));
    }
     else 
      throw toJs($e0);
  }
  if (bytes.length % 2 != 0) {
    throw toJs(new WriterException_0('Kanji byte size not even'));
  }
  maxI = bytes.length - 1;
  for (i = 0; i < maxI; i += 2) {
    byte1 = bytes[i] & 255;
    byte2 = bytes[i + 1] & 255;
    code_0 = byte1 << 8 | byte2;
    subtracted = -1;
    code_0 >= 33088 && code_0 <= 40956?(subtracted = code_0 - 33088):code_0 >= 57408 && code_0 <= 60351 && (subtracted = code_0 - 49472);
    if (subtracted == -1) {
      throw toJs(new WriterException_0('Invalid byte sequence'));
    }
    encoded = (subtracted >> 8) * 192 + (subtracted & 255);
    $appendBits(bits, encoded, 13);
  }
}

function appendLengthInfo(numLetters, version, mode, bits){
  var numBits;
  numBits = $getCharacterCountBits(mode, version);
  if (numLetters >= 1 << numBits) {
    throw toJs(new WriterException_0(numLetters + ' is bigger than ' + ((1 << numBits) - 1)));
  }
  $appendBits(bits, numLetters, numBits);
}

function appendNumericBytes(content_0, bits){
  var i, length_0, num1, num2, num3;
  length_0 = content_0.length;
  i = 0;
  while (i < length_0) {
    num1 = (checkCriticalStringElementIndex(i, content_0.length) , content_0.charCodeAt(i) - 48);
    if (i + 2 < length_0) {
      num2 = (checkCriticalStringElementIndex(i + 1, content_0.length) , content_0.charCodeAt(i + 1) - 48);
      num3 = (checkCriticalStringElementIndex(i + 2, content_0.length) , content_0.charCodeAt(i + 2) - 48);
      $appendBits(bits, num1 * 100 + num2 * 10 + num3, 10);
      i += 3;
    }
     else if (i + 1 < length_0) {
      num2 = (checkCriticalStringElementIndex(i + 1, content_0.length) , content_0.charCodeAt(i + 1) - 48);
      $appendBits(bits, num1 * 10 + num2, 7);
      i += 2;
    }
     else {
      $appendBits(bits, num1, 4);
      ++i;
    }
  }
}

function calculateBitsNeeded(mode, headerBits, dataBits, version){
  return headerBits.size_0 + $getCharacterCountBits(mode, version) + dataBits.size_0;
}

function chooseMaskPattern(bits, ecLevel, version, matrix){
  var bestMaskPattern, maskPattern, minPenalty, penalty;
  minPenalty = $intern_1;
  bestMaskPattern = -1;
  for (maskPattern = 0; maskPattern < 8; maskPattern++) {
    buildMatrix(bits, ecLevel, version, maskPattern, matrix);
    penalty = applyMaskPenaltyRule1Internal(matrix, true) + applyMaskPenaltyRule1Internal(matrix, false) + applyMaskPenaltyRule2(matrix) + applyMaskPenaltyRule3(matrix) + applyMaskPenaltyRule4(matrix);
    if (penalty < minPenalty) {
      minPenalty = penalty;
      bestMaskPattern = maskPattern;
    }
  }
  return bestMaskPattern;
}

function chooseMode(content_0){
  var c, hasAlphanumeric, hasNumeric, i;
  hasNumeric = false;
  hasAlphanumeric = false;
  for (i = 0; i < content_0.length; ++i) {
    c = (checkCriticalStringElementIndex(i, content_0.length) , content_0.charCodeAt(i));
    if (c >= 48 && c <= 57) {
      hasNumeric = true;
    }
     else if (getAlphanumericCode(c) != -1) {
      hasAlphanumeric = true;
    }
     else {
      return $clinit_Mode() , BYTE;
    }
  }
  if (hasAlphanumeric) {
    return $clinit_Mode() , ALPHANUMERIC;
  }
  if (hasNumeric) {
    return $clinit_Mode() , NUMERIC;
  }
  return $clinit_Mode() , BYTE;
}

function chooseVersion(numInputBits, ecLevel){
  var version, versionNum, numBytes, ecBlocks, numEcBytes, numDataBytes, totalInputBytes;
  for (versionNum = 1; versionNum <= 40; versionNum++) {
    version = getVersionForNumber(versionNum);
    if (numBytes = version.totalCodewords , ecBlocks = version.ecBlocks[ecLevel.ordinal_0] , numEcBytes = ecBlocks.ecCodewordsPerBlock * $getNumBlocks(ecBlocks) , numDataBytes = numBytes - numEcBytes , totalInputBytes = (numInputBits + 7) / 8 | 0 , numDataBytes >= totalInputBytes) {
      return version;
    }
  }
  throw toJs(new WriterException_0('Data too big'));
}

function encode_14(content_0, ecLevel){
  var provisionalBitsNeeded, provisionalVersion, bitsNeeded;
  $clinit_Encoder();
  var dataBits, dimension, ecBlocks, eci, finalBits, headerAndDataBits, headerBits, maskPattern, matrix, mode, numDataBytes, numLetters, qrCode, version;
  mode = chooseMode(content_0);
  headerBits = new BitArray;
  if (mode == ($clinit_Mode() , BYTE) && false) {
    eci = ($clinit_CharacterSetECI() , castTo($getStringValue(NAME_TO_ECI, 'ISO-8859-1'), 85));
    !!eci && ($appendBits(headerBits, ECI.bits, 4) , $appendBits(headerBits, eci.values_0[0], 8));
  }
  $appendBits(headerBits, mode.bits, 4);
  dataBits = new BitArray;
  appendBytes(content_0, mode, dataBits);
  version = (provisionalBitsNeeded = calculateBitsNeeded(mode, headerBits, dataBits, getVersionForNumber(1)) , provisionalVersion = chooseVersion(provisionalBitsNeeded, ecLevel) , bitsNeeded = headerBits.size_0 + $getCharacterCountBits(mode, provisionalVersion) + dataBits.size_0 , chooseVersion(bitsNeeded, ecLevel));
  headerAndDataBits = new BitArray;
  $appendBitArray(headerAndDataBits, headerBits);
  numLetters = mode == BYTE?(dataBits.size_0 + 7) / 8 | 0:content_0.length;
  appendLengthInfo(numLetters, version, mode, headerAndDataBits);
  $appendBitArray(headerAndDataBits, dataBits);
  ecBlocks = version.ecBlocks[ecLevel.ordinal_0];
  numDataBytes = version.totalCodewords - ecBlocks.ecCodewordsPerBlock * $getNumBlocks(ecBlocks);
  terminateBits(numDataBytes, headerAndDataBits);
  finalBits = interleaveWithECBytes(headerAndDataBits, version.totalCodewords, numDataBytes, $getNumBlocks(ecBlocks));
  qrCode = new QRCode;
  qrCode.ecLevel = ecLevel;
  qrCode.mode = mode;
  qrCode.version = version;
  dimension = 17 + 4 * version.versionNumber;
  matrix = new ByteMatrix(dimension, dimension);
  maskPattern = -1;
  maskPattern == -1 && (maskPattern = chooseMaskPattern(finalBits, ecLevel, version, matrix));
  qrCode.maskPattern = maskPattern;
  buildMatrix(finalBits, ecLevel, version, maskPattern, matrix);
  qrCode.matrix = matrix;
  return qrCode;
}

function generateECBytes(dataBytes, numEcBytesInBlock){
  var ecBytes, i, i0, numDataBytes, toEncode;
  numDataBytes = dataBytes.length;
  toEncode = initUnidimensionalArray(I_classLit, $intern_29, 8, numDataBytes + numEcBytesInBlock, 15, 1);
  for (i0 = 0; i0 < numDataBytes; i0++) {
    toEncode[i0] = dataBytes[i0] & 255;
  }
  $encode_2(new ReedSolomonEncoder(($clinit_GenericGF() , QR_CODE_FIELD_256)), toEncode, numEcBytesInBlock);
  ecBytes = initUnidimensionalArray(B_classLit, $intern_28, 8, numEcBytesInBlock, 15, 1);
  for (i = 0; i < numEcBytesInBlock; i++) {
    ecBytes[i] = toEncode[numDataBytes + i] << 24 >> 24;
  }
  return ecBytes;
}

function getAlphanumericCode(code_0){
  if (code_0 < ALPHANUMERIC_TABLE.length) {
    return ALPHANUMERIC_TABLE[code_0];
  }
  return -1;
}

function getNumDataBytesAndNumECBytesForBlockID(numTotalBytes, numDataBytes, numRSBlocks, blockID, numDataBytesInBlock, numECBytesInBlock){
  var numDataBytesInGroup1, numDataBytesInGroup2, numEcBytesInGroup1, numEcBytesInGroup2, numRsBlocksInGroup1, numRsBlocksInGroup2, numTotalBytesInGroup1, numTotalBytesInGroup2;
  if (blockID >= numRSBlocks) {
    throw toJs(new WriterException_0('Block ID too large'));
  }
  numRsBlocksInGroup2 = numTotalBytes % numRSBlocks;
  numRsBlocksInGroup1 = numRSBlocks - numRsBlocksInGroup2;
  numTotalBytesInGroup1 = numTotalBytes / numRSBlocks | 0;
  numTotalBytesInGroup2 = numTotalBytesInGroup1 + 1;
  numDataBytesInGroup1 = numDataBytes / numRSBlocks | 0;
  numDataBytesInGroup2 = numDataBytesInGroup1 + 1;
  numEcBytesInGroup1 = numTotalBytesInGroup1 - numDataBytesInGroup1;
  numEcBytesInGroup2 = numTotalBytesInGroup2 - numDataBytesInGroup2;
  if (numEcBytesInGroup1 != numEcBytesInGroup2) {
    throw toJs(new WriterException_0('EC bytes mismatch'));
  }
  if (numRSBlocks != numRsBlocksInGroup1 + numRsBlocksInGroup2) {
    throw toJs(new WriterException_0('RS blocks mismatch'));
  }
  if (numTotalBytes != (numDataBytesInGroup1 + numEcBytesInGroup1) * numRsBlocksInGroup1 + (numDataBytesInGroup2 + numEcBytesInGroup2) * numRsBlocksInGroup2) {
    throw toJs(new WriterException_0('Total bytes mismatch'));
  }
  if (blockID < numRsBlocksInGroup1) {
    numDataBytesInBlock[0] = numDataBytesInGroup1;
    numECBytesInBlock[0] = numEcBytesInGroup1;
  }
   else {
    numDataBytesInBlock[0] = numDataBytesInGroup2;
    numECBytesInBlock[0] = numEcBytesInGroup2;
  }
}

function interleaveWithECBytes(bits, numTotalBytes, numDataBytes, numRSBlocks){
  var block, block$iterator, blocks, dataBytes, dataBytesOffset, ecBytes, i, i0, i1, maxNumDataBytes, maxNumEcBytes, numDataBytesInBlock, numEcBytesInBlock, result, size_0;
  if (((bits.size_0 + 7) / 8 | 0) != numDataBytes) {
    throw toJs(new WriterException_0('Number of bits and data bytes does not match'));
  }
  dataBytesOffset = 0;
  maxNumDataBytes = 0;
  maxNumEcBytes = 0;
  blocks = new ArrayList_0(numRSBlocks);
  for (i0 = 0; i0 < numRSBlocks; ++i0) {
    numDataBytesInBlock = initUnidimensionalArray(I_classLit, $intern_29, 8, 1, 15, 1);
    numEcBytesInBlock = initUnidimensionalArray(I_classLit, $intern_29, 8, 1, 15, 1);
    getNumDataBytesAndNumECBytesForBlockID(numTotalBytes, numDataBytes, numRSBlocks, i0, numDataBytesInBlock, numEcBytesInBlock);
    size_0 = numDataBytesInBlock[0];
    dataBytes = initUnidimensionalArray(B_classLit, $intern_28, 8, size_0, 15, 1);
    $toBytes_0(bits, 8 * dataBytesOffset, dataBytes, size_0);
    ecBytes = generateECBytes(dataBytes, numEcBytesInBlock[0]);
    $add(blocks, new BlockPair(dataBytes, ecBytes));
    maxNumDataBytes = $wnd.Math.max(maxNumDataBytes, size_0);
    maxNumEcBytes = $wnd.Math.max(maxNumEcBytes, ecBytes.length);
    dataBytesOffset += numDataBytesInBlock[0];
  }
  if (numDataBytes != dataBytesOffset) {
    throw toJs(new WriterException_0('Data bytes does not match offset'));
  }
  result = new BitArray;
  for (i1 = 0; i1 < maxNumDataBytes; ++i1) {
    for (block$iterator = new ArrayList$1(blocks); block$iterator.i < block$iterator.this$01.array.length;) {
      block = castTo($next_0(block$iterator), 372);
      dataBytes = block.dataBytes;
      i1 < dataBytes.length && $appendBits(result, dataBytes[i1], 8);
    }
  }
  for (i = 0; i < maxNumEcBytes; ++i) {
    for (block$iterator = new ArrayList$1(blocks); block$iterator.i < block$iterator.this$01.array.length;) {
      block = castTo($next_0(block$iterator), 372);
      ecBytes = block.errorCorrectionBytes;
      i < ecBytes.length && $appendBits(result, ecBytes[i], 8);
    }
  }
  if (numTotalBytes != ((result.size_0 + 7) / 8 | 0)) {
    throw toJs(new WriterException_0('Interleaving error: ' + numTotalBytes + ' and ' + ((result.size_0 + 7) / 8 | 0) + ' differ.'));
  }
  return result;
}

function terminateBits(numDataBytes, bits){
  var capacity, i, i0, i1, numBitsInLastByte, numPaddingBytes;
  capacity = numDataBytes * 8;
  if (bits.size_0 > capacity) {
    throw toJs(new WriterException_0('data bits cannot fit in the QR Code' + bits.size_0 + ' > ' + capacity));
  }
  for (i0 = 0; i0 < 4 && bits.size_0 < capacity; ++i0) {
    $appendBit(bits, false);
  }
  numBitsInLastByte = bits.size_0 & 7;
  if (numBitsInLastByte > 0) {
    for (i1 = numBitsInLastByte; i1 < 8; i1++) {
      $appendBit(bits, false);
    }
  }
  numPaddingBytes = numDataBytes - ((bits.size_0 + 7) / 8 | 0);
  for (i = 0; i < numPaddingBytes; ++i) {
    $appendBits(bits, (i & 1) == 0?236:17, 8);
  }
  if (bits.size_0 != capacity) {
    throw toJs(new WriterException_0('Bits size does not equal capacity'));
  }
}

var ALPHANUMERIC_TABLE;
function applyMaskPenaltyRule1Internal(matrix, isHorizontal){
  var array, bit, i, iLimit, j, jLimit, numSameBitCells, penalty, prevBit;
  penalty = 0;
  iLimit = isHorizontal?matrix.height:matrix.width_0;
  jLimit = isHorizontal?matrix.width_0:matrix.height;
  array = matrix.bytes;
  for (i = 0; i < iLimit; i++) {
    numSameBitCells = 0;
    prevBit = -1;
    for (j = 0; j < jLimit; j++) {
      bit = isHorizontal?array[i][j]:array[j][i];
      if (bit == prevBit) {
        ++numSameBitCells;
      }
       else {
        numSameBitCells >= 5 && (penalty += 3 + (numSameBitCells - 5));
        numSameBitCells = 1;
        prevBit = bit;
      }
    }
    numSameBitCells >= 5 && (penalty += 3 + (numSameBitCells - 5));
  }
  return penalty;
}

function applyMaskPenaltyRule2(matrix){
  var array, arrayY, height, penalty, value_0, width_0, x_0, y_0;
  penalty = 0;
  array = matrix.bytes;
  width_0 = matrix.width_0;
  height = matrix.height;
  for (y_0 = 0; y_0 < height - 1; y_0++) {
    arrayY = array[y_0];
    for (x_0 = 0; x_0 < width_0 - 1; x_0++) {
      value_0 = arrayY[x_0];
      value_0 == arrayY[x_0 + 1] && value_0 == array[y_0 + 1][x_0] && value_0 == array[y_0 + 1][x_0 + 1] && ++penalty;
    }
  }
  return 3 * penalty;
}

function applyMaskPenaltyRule3(matrix){
  var array, arrayY, height, numPenalties, width_0, x_0, y_0;
  numPenalties = 0;
  array = matrix.bytes;
  width_0 = matrix.width_0;
  height = matrix.height;
  for (y_0 = 0; y_0 < height; y_0++) {
    for (x_0 = 0; x_0 < width_0; x_0++) {
      arrayY = array[y_0];
      x_0 + 6 < width_0 && arrayY[x_0] == 1 && arrayY[x_0 + 1] == 0 && arrayY[x_0 + 2] == 1 && arrayY[x_0 + 3] == 1 && arrayY[x_0 + 4] == 1 && arrayY[x_0 + 5] == 0 && arrayY[x_0 + 6] == 1 && (isWhiteHorizontal(arrayY, x_0 - 4, x_0) || isWhiteHorizontal(arrayY, x_0 + 7, x_0 + 11)) && ++numPenalties;
      y_0 + 6 < height && array[y_0][x_0] == 1 && array[y_0 + 1][x_0] == 0 && array[y_0 + 2][x_0] == 1 && array[y_0 + 3][x_0] == 1 && array[y_0 + 4][x_0] == 1 && array[y_0 + 5][x_0] == 0 && array[y_0 + 6][x_0] == 1 && (isWhiteVertical(array, x_0, y_0 - 4, y_0) || isWhiteVertical(array, x_0, y_0 + 7, y_0 + 11)) && ++numPenalties;
    }
  }
  return numPenalties * 40;
}

function applyMaskPenaltyRule4(matrix){
  var array, arrayY, fivePercentVariances, height, numDarkCells, numTotalCells, width_0, x_0, y_0;
  numDarkCells = 0;
  array = matrix.bytes;
  width_0 = matrix.width_0;
  height = matrix.height;
  for (y_0 = 0; y_0 < height; y_0++) {
    arrayY = array[y_0];
    for (x_0 = 0; x_0 < width_0; x_0++) {
      arrayY[x_0] == 1 && ++numDarkCells;
    }
  }
  numTotalCells = matrix.height * matrix.width_0;
  fivePercentVariances = $wnd.Math.abs(numDarkCells * 2 - numTotalCells) * 10 / numTotalCells | 0;
  return fivePercentVariances * 10;
}

function getDataMaskBit(maskPattern, x_0, y_0){
  var intermediate, temp;
  switch (maskPattern) {
    case 0:
      intermediate = y_0 + x_0 & 1;
      break;
    case 1:
      intermediate = y_0 & 1;
      break;
    case 2:
      intermediate = x_0 % 3;
      break;
    case 3:
      intermediate = (y_0 + x_0) % 3;
      break;
    case 4:
      intermediate = (y_0 / 2 | 0) + (x_0 / 3 | 0) & 1;
      break;
    case 5:
      temp = y_0 * x_0;
      intermediate = (temp & 1) + temp % 3;
      break;
    case 6:
      temp = y_0 * x_0;
      intermediate = (temp & 1) + temp % 3 & 1;
      break;
    case 7:
      temp = y_0 * x_0;
      intermediate = temp % 3 + (y_0 + x_0 & 1) & 1;
      break;
    default:throw toJs(new IllegalArgumentException_0('Invalid mask pattern: ' + maskPattern));
  }
  return intermediate == 0;
}

function isWhiteHorizontal(rowArray, from, to){
  var i;
  from = $wnd.Math.max(from, 0);
  to = $wnd.Math.min(to, rowArray.length);
  for (i = from; i < to; i++) {
    if (rowArray[i] == 1) {
      return false;
    }
  }
  return true;
}

function isWhiteVertical(array, col, from, to){
  var i;
  from = $wnd.Math.max(from, 0);
  to = $wnd.Math.min(to, array.length);
  for (i = from; i < to; i++) {
    if (array[i][col] == 1) {
      return false;
    }
  }
  return true;
}

function $clinit_MatrixUtil(){
  $clinit_MatrixUtil = emptyMethod;
  POSITION_DETECTION_PATTERN = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 2), $intern_0, 15, 0, [stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [1, 1, 1, 1, 1, 1, 1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [1, 0, 0, 0, 0, 0, 1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [1, 0, 1, 1, 1, 0, 1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [1, 0, 1, 1, 1, 0, 1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [1, 0, 1, 1, 1, 0, 1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [1, 0, 0, 0, 0, 0, 1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [1, 1, 1, 1, 1, 1, 1])]);
  POSITION_ADJUSTMENT_PATTERN = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 2), $intern_0, 15, 0, [stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [1, 1, 1, 1, 1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [1, 0, 0, 0, 1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [1, 0, 1, 0, 1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [1, 0, 0, 0, 1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [1, 1, 1, 1, 1])]);
  POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 2), $intern_0, 15, 0, [stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [-1, -1, -1, -1, -1, -1, -1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 18, -1, -1, -1, -1, -1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 22, -1, -1, -1, -1, -1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 26, -1, -1, -1, -1, -1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 30, -1, -1, -1, -1, -1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 34, -1, -1, -1, -1, -1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 22, 38, -1, -1, -1, -1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 24, 42, -1, -1, -1, -1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 26, 46, -1, -1, -1, -1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 28, 50, -1, -1, -1, -1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 30, 54, -1, -1, -1, -1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 32, 58, -1, -1, -1, -1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 34, 62, -1, -1, -1, -1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 26, 46, 66, -1, -1, -1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 26, 48, 70, -1, -1, -1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 26, 50, 74, -1, -1, -1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 30, 54, 78, -1, -1, -1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 30, 56, 82, -1, -1, -1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 30, 58, 86, -1, -1, -1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 34, 62, 90, -1, -1, -1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 28, 50, 72, 94, -1, -1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 26, 50, 74, 98, -1, -1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 30, 54, 78, 102, -1, -1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 28, 54, 80, 106, -1, -1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 32, 58, 84, 110, -1, -1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 30, 58, 86, 114, -1, -1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 34, 62, 90, 118, -1, -1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 26, 50, 74, 98, 122, -1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 30, 54, 78, 102, 126, -1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 26, 52, 78, 104, 130, -1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 30, 56, 82, 108, 134, -1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 34, 60, 86, 112, 138, -1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 30, 58, 86, 114, 142, -1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 34, 62, 90, 118, 146, -1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 30, 54, 78, 102, 126, 150]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 24, 50, 76, 102, 128, 154]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 28, 54, 80, 106, 132, 158]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 32, 58, 84, 110, 136, 162]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 26, 54, 82, 110, 138, 166]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [6, 30, 58, 86, 114, 142, 170])]);
  TYPE_INFO_COORDINATES = stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 2), $intern_0, 15, 0, [stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [8, 0]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [8, 1]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [8, 2]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [8, 3]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [8, 4]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [8, 5]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [8, 7]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [8, 8]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [7, 8]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [5, 8]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [4, 8]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [3, 8]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [2, 8]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [1, 8]), stampJavaTypeInfo(getClassLiteralForArray(I_classLit, 1), $intern_29, 8, 15, [0, 8])]);
}

function buildMatrix(dataBits, ecLevel, version, maskPattern, matrix){
  var pdpWidth;
  $clinit_MatrixUtil();
  $clear_9(matrix);
  pdpWidth = POSITION_DETECTION_PATTERN[0].length;
  embedPositionDetectionPattern(0, 0, matrix);
  embedPositionDetectionPattern(matrix.width_0 - pdpWidth, 0, matrix);
  embedPositionDetectionPattern(0, matrix.width_0 - pdpWidth, matrix);
  embedHorizontalSeparationPattern(0, 7, matrix);
  embedHorizontalSeparationPattern(matrix.width_0 - 8, 7, matrix);
  embedHorizontalSeparationPattern(0, matrix.width_0 - 8, matrix);
  embedVerticalSeparationPattern(7, 0, matrix);
  embedVerticalSeparationPattern(matrix.height - 7 - 1, 0, matrix);
  embedVerticalSeparationPattern(7, matrix.height - 7, matrix);
  embedDarkDotAtLeftBottomCorner(matrix);
  maybeEmbedPositionAdjustmentPatterns(version, matrix);
  embedTimingPatterns(matrix);
  embedTypeInfo(ecLevel, maskPattern, matrix);
  maybeEmbedVersionInfo(version, matrix);
  embedDataBits(dataBits, maskPattern, matrix);
}

function calculateBCHCode(value_0, poly){
  var msbSetInPoly;
  if (poly == 0) {
    throw toJs(new IllegalArgumentException_0('0 polynomial'));
  }
  msbSetInPoly = 32 - numberOfLeadingZeros_0(poly);
  value_0 <<= msbSetInPoly - 1;
  while (32 - numberOfLeadingZeros_0(value_0) >= msbSetInPoly) {
    value_0 ^= poly << 32 - numberOfLeadingZeros_0(value_0) - msbSetInPoly;
  }
  return value_0;
}

function embedDarkDotAtLeftBottomCorner(matrix){
  if ($get_36(matrix, matrix.height - 8) == 0) {
    throw toJs(new WriterException);
  }
  $set_4(matrix, 8, matrix.height - 8, 1);
}

function embedDataBits(dataBits, maskPattern, matrix){
  var bit, bitIndex, direction, i, x_0, xx, y_0;
  bitIndex = 0;
  direction = -1;
  x_0 = matrix.width_0 - 1;
  y_0 = matrix.height - 1;
  while (x_0 > 0) {
    x_0 == 6 && (x_0 -= 1);
    while (y_0 >= 0 && y_0 < matrix.height) {
      for (i = 0; i < 2; ++i) {
        xx = x_0 - i;
        if (matrix.bytes[y_0][xx] != -1) {
          continue;
        }
        if (bitIndex < dataBits.size_0) {
          bit = (dataBits.bits[bitIndex / 32 | 0] & 1 << (bitIndex & 31)) != 0;
          ++bitIndex;
        }
         else {
          bit = false;
        }
        maskPattern != -1 && getDataMaskBit(maskPattern, xx, y_0) && (bit = !bit);
        matrix.bytes[y_0][xx] = (bit?1:0) << 24 >> 24;
      }
      y_0 += direction;
    }
    direction = -direction;
    y_0 += direction;
    x_0 -= 2;
  }
  if (bitIndex != dataBits.size_0) {
    throw toJs(new WriterException_0('Not all bits consumed: ' + bitIndex + '/' + dataBits.size_0));
  }
}

function embedHorizontalSeparationPattern(xStart, yStart, matrix){
  var x_0;
  for (x_0 = 0; x_0 < 8; ++x_0) {
    if (matrix.bytes[yStart][xStart + x_0] != -1) {
      throw toJs(new WriterException);
    }
    matrix.bytes[yStart][xStart + x_0] = 0;
  }
}

function embedPositionAdjustmentPattern(xStart, yStart, matrix){
  var patternY, x_0, y_0;
  for (y_0 = 0; y_0 < 5; ++y_0) {
    patternY = POSITION_ADJUSTMENT_PATTERN[y_0];
    for (x_0 = 0; x_0 < 5; ++x_0) {
      $set_4(matrix, xStart + x_0, yStart + y_0, patternY[x_0]);
    }
  }
}

function embedPositionDetectionPattern(xStart, yStart, matrix){
  var patternY, x_0, y_0;
  for (y_0 = 0; y_0 < 7; ++y_0) {
    patternY = POSITION_DETECTION_PATTERN[y_0];
    for (x_0 = 0; x_0 < 7; ++x_0) {
      $set_4(matrix, xStart + x_0, yStart + y_0, patternY[x_0]);
    }
  }
}

function embedTimingPatterns(matrix){
  var bit, i;
  for (i = 8; i < matrix.width_0 - 8; ++i) {
    bit = (i + 1) % 2;
    matrix.bytes[6][i] == -1 && (matrix.bytes[6][i] = bit << 24 >> 24);
    matrix.bytes[i][6] == -1 && (matrix.bytes[i][6] = bit << 24 >> 24);
  }
}

function embedTypeInfo(ecLevel, maskPattern, matrix){
  var bit, coordinates, i, typeInfoBits, x1, x2, y1, y2;
  typeInfoBits = new BitArray;
  makeTypeInfoBits(ecLevel, maskPattern, typeInfoBits);
  for (i = 0; i < typeInfoBits.size_0; ++i) {
    bit = $get_34(typeInfoBits, typeInfoBits.size_0 - 1 - i);
    coordinates = TYPE_INFO_COORDINATES[i];
    x1 = coordinates[0];
    y1 = coordinates[1];
    matrix.bytes[y1][x1] = (bit?1:0) << 24 >> 24;
    if (i < 8) {
      x2 = matrix.width_0 - i - 1;
      matrix.bytes[8][x2] = (bit?1:0) << 24 >> 24;
    }
     else {
      y2 = matrix.height - 7 + (i - 8);
      matrix.bytes[y2][8] = (bit?1:0) << 24 >> 24;
    }
  }
}

function embedVerticalSeparationPattern(xStart, yStart, matrix){
  var y_0;
  for (y_0 = 0; y_0 < 7; ++y_0) {
    if (matrix.bytes[yStart + y_0][xStart] != -1) {
      throw toJs(new WriterException);
    }
    matrix.bytes[yStart + y_0][xStart] = 0;
  }
}

function makeTypeInfoBits(ecLevel, maskPattern, bits){
  var bchCode, maskBits, typeInfo;
  if (!(maskPattern >= 0 && maskPattern < 8)) {
    throw toJs(new WriterException_0('Invalid mask pattern'));
  }
  typeInfo = ecLevel.bits << 3 | maskPattern;
  $appendBits(bits, typeInfo, 5);
  bchCode = calculateBCHCode(typeInfo, 1335);
  $appendBits(bits, bchCode, 10);
  maskBits = new BitArray;
  $appendBits(maskBits, 21522, 15);
  $xor(bits, maskBits);
  if (bits.size_0 != 15) {
    throw toJs(new WriterException_0('should not happen but we got: ' + bits.size_0));
  }
}

function makeVersionInfoBits(version, bits){
  var bchCode;
  $appendBits(bits, version.versionNumber, 6);
  bchCode = calculateBCHCode(version.versionNumber, 7973);
  $appendBits(bits, bchCode, 12);
  if (bits.size_0 != 18) {
    throw toJs(new WriterException_0('should not happen but we got: ' + bits.size_0));
  }
}

function maybeEmbedPositionAdjustmentPatterns(version, matrix){
  var coordinates, index_0, x_0, x$array, x$index, x$max, y_0, y$array, y$index, y$max;
  if (version.versionNumber < 2) {
    return;
  }
  index_0 = version.versionNumber - 1;
  coordinates = POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE[index_0];
  for (y$array = coordinates , y$index = 0 , y$max = y$array.length; y$index < y$max; ++y$index) {
    y_0 = y$array[y$index];
    if (y_0 >= 0) {
      for (x$array = coordinates , x$index = 0 , x$max = x$array.length; x$index < x$max; ++x$index) {
        x_0 = x$array[x$index];
        x_0 >= 0 && matrix.bytes[y_0][x_0] == -1 && embedPositionAdjustmentPattern(x_0 - 2, y_0 - 2, matrix);
      }
    }
  }
}

function maybeEmbedVersionInfo(version, matrix){
  var bit, bitIndex, i, j, versionInfoBits;
  if (version.versionNumber < 7) {
    return;
  }
  versionInfoBits = new BitArray;
  makeVersionInfoBits(version, versionInfoBits);
  bitIndex = 17;
  for (i = 0; i < 6; ++i) {
    for (j = 0; j < 3; ++j) {
      bit = (versionInfoBits.bits[bitIndex / 32 | 0] & 1 << (bitIndex & 31)) != 0;
      --bitIndex;
      $set_5(matrix, i, matrix.height - 11 + j, bit);
      $set_5(matrix, matrix.height - 11 + j, i, bit);
    }
  }
}

var POSITION_ADJUSTMENT_PATTERN, POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE, POSITION_DETECTION_PATTERN, TYPE_INFO_COORDINATES;
function QRCode(){
  this.maskPattern = -1;
}

defineClass(1115, 1, {}, QRCode);
_.toString_0 = function toString_106(){
  var result;
  result = new StringBuilder_0;
  result.string += '<<\n';
  result.string += ' mode: ';
  $append_3(result, this.mode);
  result.string += '\n ecLevel: ';
  $append_3(result, this.ecLevel);
  result.string += '\n version: ';
  $append_3(result, this.version);
  result.string += '\n maskPattern: ';
  $append_0(result, this.maskPattern);
  if (!this.matrix) {
    result.string += '\n matrix: null\n';
  }
   else {
    result.string += '\n matrix:\n';
    $append_3(result, this.matrix);
  }
  result.string += '>>\n';
  return result.string;
}
;
_.maskPattern = 0;
var Lpeergos_shared_zxing_qrcode_encoder_QRCode_2_classLit = createForClass('peergos.shared.zxing.qrcode.encoder', 'QRCode', 1115);
var C_classLit = createForPrimitive('char', 'C');
var I_classLit = createForPrimitive('int', 'I');
var J_classLit = createForPrimitive('long', 'J');
var B_classLit = createForPrimitive('byte', 'B');
var D_classLit = createForPrimitive('double', 'D');
var F_classLit = createForPrimitive('float', 'F');
var S_classLit = createForPrimitive('short', 'S');
_ = provide('java.io.Serializable');
_.$isInstance = $isInstance;
$clinit_Boolean();
_ = provide('java.lang.Boolean');
_.$isInstance = $isInstance_0;
_ = provide('java.lang.CharSequence');
_.$isInstance = $isInstance_1;
_ = provide('java.lang.Cloneable');
_.$isInstance = $isInstance_2;
_ = provide('java.lang.Comparable');
_.$isInstance = $isInstance_3;
_ = provide('java.lang.Double');
_.$isInstance = $isInstance_5;
_ = provide('java.lang.Number');
_.$isInstance = $isInstance_4;
_ = provide('java.lang.String');
_.$isInstance = $isInstance_6;
_ = provide('java.lang.Throwable');
_.of = of_0;
_ = provide('java.net.ConnectException', ConnectException);
_ = provide('java.nio.file.Paths');
_.get = get_0;
$clinit_Optional();
_ = provide('java.util.Optional');
_.empty = empty_2;
_.of = of_2;
_ = provide('peergos.client.JsUtil');
_.asList = asList;
_.asMap = asMap;
_.asSet = asSet;
_.decodeBase64 = decodeBase64;
_.emptyList = emptyList;
_.emptyOptional = emptyOptional;
_.encodeBase64 = encodeBase64;
_.generateAuthResponse = generateAuthResponse;
_.generateWebAuthnResponse = generateWebAuthnResponse;
_.now = now_5;
_.optionalOf = optionalOf;
_ = provide('peergos.client.PathUtils');
_.directoryToPath = directoryToPath;
_.getFileName = getFileName;
_.getNameCount = getNameCount;
_.getParent = getParent;
_.subpath = subpath;
_.toPath = toPath;
_ = provide('peergos.shared.Crypto');
_.initJS = initJS;
$clinit_NetworkAccess();
_ = provide('peergos.shared.NetworkAccess');
_.buildJS = buildJS;
_ = provide('peergos.shared.cbor.Cborable');
_.parser = parser_3;
_ = provide('peergos.shared.corenode.Usernames');
_.REGEX = REGEX;
_ = provide('peergos.shared.crypto.ProofOfWork');
_.buildSha256 = buildSha256;
_.satisfiesDifficulty = satisfiesDifficulty;
_ = provide('peergos.shared.crypto.SigningPrivateKeyAndPublicHash', SigningPrivateKeyAndPublicHash);
_.fromCbor = fromCbor_13;
$clinit_PublicBoxingKey();
_ = provide('peergos.shared.crypto.asymmetric.PublicBoxingKey');
_.fromByteArray = fromByteArray_0;
$clinit_PublicSigningKey$Type();
_ = provide('peergos.shared.crypto.asymmetric.PublicSigningKey.Type');
_.Ed25519 = Ed25519;
_.byValue = byValue_2;
_.valueOf = valueOf_8;
_.values = values_8;
$clinit_PublicSigningKey();
_ = provide('peergos.shared.crypto.asymmetric.PublicSigningKey');
_.fromByteArray = fromByteArray_1;
_ = provide('peergos.shared.crypto.asymmetric.SecretSigningKey');
_.fromCbor = fromCbor_18;
$clinit_Hasher();
_ = provide('peergos.shared.crypto.hash.Hasher');
_.hmacInfo = hmacInfo;
$clinit_PublicKeyHash();
_ = provide('peergos.shared.crypto.hash.PublicKeyHash', PublicKeyHash);
_.MAX_KEY_HASH_SIZE = MAX_KEY_HASH_SIZE;
_.NULL = NULL;
_.decode = decode_3;
_.fromCbor = fromCbor_23;
_.fromString = fromString_0;
_.isSafe = isSafe;
$clinit_SymmetricKey();
_ = provide('peergos.shared.crypto.symmetric.SymmetricKey');
_.fromByteArray = fromByteArray_2;
_.random = random_9;
_ = provide('peergos.shared.display.FileRef', FileRef);
_.fromCbor = fromCbor_27;
_ = provide('peergos.shared.display.Reference', Reference);
_ = provide('peergos.shared.display.Text', Text_0);
_ = provide('peergos.shared.email.Attachment', Attachment);
_.fromCbor = fromCbor_28;
_ = provide('peergos.shared.email.EmailClient');
_.load = load_0;
_ = provide('peergos.shared.email.EmailMessage', EmailMessage);
_.fromCbor = fromCbor_29;
$clinit_FingerPrint();
_ = provide('peergos.shared.fingerprint.FingerPrint');
_.decodeFromPixels = decodeFromPixels;
_ = provide('peergos.shared.io.ipfs.Multihash', Multihash);
_.LEGACY_MAX_IDENTITY_HASH_SIZE = LEGACY_MAX_IDENTITY_HASH_SIZE;
_.MAX_IDENTITY_HASH_SIZE = MAX_IDENTITY_HASH_SIZE;
$clinit_Multihash$Type();
_ = provide('peergos.shared.io.ipfs.Multihash.Type');
_.blake2b = blake2b_0;
_.blake2s = blake2s;
_.id = id_3;
_.lookup = lookup_3;
_.sha2_256 = sha2_256;
_.sha2_512 = sha2_512;
_.sha3 = sha3;
_.valueOf = valueOf_9;
_.values = values_11;
_ = provide('peergos.shared.io.ipfs.Multihash');
_.decode = decode_1;
_.deserializeObj = deserializeObj;
_.fromBase58 = fromBase58;
$clinit_MultiFactorAuthMethod();
_ = provide('peergos.shared.login.mfa.MultiFactorAuthMethod', MultiFactorAuthMethod);
$clinit_MultiFactorAuthMethod$Type();
_ = provide('peergos.shared.login.mfa.MultiFactorAuthMethod.Type');
_.TOTP = TOTP;
_.WEBAUTHN = WEBAUTHN;
_.byValue = byValue_6;
_.valueOf = valueOf_10;
_.values = values_13;
_ = provide('peergos.shared.login.mfa.MultiFactorAuthMethod');
_.fromCbor = fromCbor_36;
_ = provide('peergos.shared.login.mfa.MultiFactorAuthRequest', MultiFactorAuthRequest);
_.fromCbor = fromCbor_37;
_ = provide('peergos.shared.login.mfa.MultiFactorAuthResponse', MultiFactorAuthResponse);
_.fromCbor = fromCbor_38;
_ = provide('peergos.shared.login.mfa.TotpKey', TotpKey);
_.ALGORITHM = ALGORITHM;
_.fromString = fromString_1;
_ = provide('peergos.shared.login.mfa.WebauthnResponse', WebauthnResponse);
_.fromCbor = fromCbor_39;
_ = provide('peergos.shared.messaging.Attachment', Attachment_0);
_.fromCbor = fromCbor_40;
_ = provide('peergos.shared.messaging.AttachmentRequest', AttachmentRequest);
_.fromCbor = fromCbor_41;
_ = provide('peergos.shared.messaging.MessageEnvelope', MessageEnvelope);
_.fromCbor = fromCbor_46;
_ = provide('peergos.shared.messaging.MessagePair', MessagePair);
_.fromCbor = fromCbor_47;
_ = provide('peergos.shared.messaging.MessageRef', MessageRef);
_.fromCbor = fromCbor_48;
_ = provide('peergos.shared.messaging.Messenger', Messenger);
_ = provide('peergos.shared.messaging.ReadMessagesResponse', ReadMessagesResponse);
_.fromCbor = fromCbor_50;
_ = provide('peergos.shared.messaging.SendMessageRequest', SendMessageRequest);
_.fromCbor = fromCbor_51;
_ = provide('peergos.shared.messaging.messages.ApplicationMessage', ApplicationMessage);
_.attachment = attachment_0;
_.fromCbor = fromCbor_54;
_.text = text_1;
_ = provide('peergos.shared.messaging.messages.DeleteMessage', DeleteMessage);
_.build = build_9;
_.fromCbor = fromCbor_55;
_ = provide('peergos.shared.messaging.messages.EditMessage', EditMessage);
_.build = build_10;
_.fromCbor = fromCbor_56;
$clinit_Message$Type();
_ = provide('peergos.shared.messaging.messages.Message.Type');
_.Application = Application;
_.Delete = Delete;
_.Edit = Edit;
_.GroupState = GroupState;
_.Invite = Invite_0;
_.Join = Join_0;
_.RemoveMember = RemoveMember;
_.ReplyTo = ReplyTo;
_.byValue = byValue_8;
_.valueOf = valueOf_11;
_.values = values_14;
$clinit_Message();
_ = provide('peergos.shared.messaging.messages.Message');
_.byValue = byValue_7;
_.fromCbor = fromCbor_59;
_ = provide('peergos.shared.messaging.messages.RemoveMember', RemoveMember_0);
_.fromCbor = fromCbor_60;
_ = provide('peergos.shared.messaging.messages.ReplyTo', ReplyTo_0);
_.build = build_11;
_.fromCbor = fromCbor_61;
_ = provide('peergos.shared.messaging.messages.SetGroupState', SetGroupState);
_.fromCbor = fromCbor_62;
_ = provide('peergos.shared.social.FollowRequest', FollowRequest);
_.fromCbor = fromCbor_65;
_ = provide('peergos.shared.social.SharedItem', SharedItem);
_.fromCbor = fromCbor_67;
_ = provide('peergos.shared.social.SocialPost', SocialPost);
_ = provide('peergos.shared.social.SocialPost.MutableRef', SocialPost$MutableRef);
$clinit_SocialPost$Resharing();
_ = provide('peergos.shared.social.SocialPost.Resharing');
_.Author = Author;
_.Followers = Followers;
_.Friends = Friends;
_.Public = Public;
_.valueOf = valueOf_12;
_.values = values_15;
_ = provide('peergos.shared.social.SocialPost');
_.createComment = createComment;
_.createInitialPost = createInitialPost;
_.fromCbor = fromCbor_69;
_ = provide('peergos.shared.storage.CasException', CasException_0);
_ = provide('peergos.shared.storage.DecodedSpaceRequest', DecodedSpaceRequest);
_.decodeSpaceRequests = decodeSpaceRequests;
_ = provide('peergos.shared.storage.HttpFileNotFoundException', HttpFileNotFoundException);
_ = provide('peergos.shared.storage.RateLimitException', RateLimitException);
_ = provide('peergos.shared.storage.StorageQuotaExceededException', StorageQuotaExceededException);
_ = provide('peergos.shared.storage.controller.AllowedSignups', AllowedSignups);
_.fromCbor = fromCbor_79;
_ = provide('peergos.shared.user.App');
_.getAppSubdomain = getAppSubdomain;
_.getAppSubdomainWithAnonymityClass = getAppSubdomainWithAnonymityClass;
_.init = init_2;
_ = provide('peergos.shared.user.EntryPoint', EntryPoint);
_.fromCbor = fromCbor_80;
$clinit_FileSharedWithState();
_ = provide('peergos.shared.user.FileSharedWithState', FileSharedWithState);
_.EMPTY = EMPTY_1;
_ = provide('peergos.shared.user.FriendAnnotation', FriendAnnotation);
$clinit_IdentityLink$KnownService();
_ = provide('peergos.shared.user.IdentityLink.KnownService');
_.Facebook = Facebook;
_.Github = Github;
_.HackerNews = HackerNews;
_.LinkedIn = LinkedIn;
_.Lobsters = Lobsters;
_.Mastodon = Mastodon;
_.Matrix = Matrix;
_.Peergos = Peergos;
_.Reddit = Reddit;
_.Twitter = Twitter;
_.Website = Website;
_.byCode = byCode;
_.byName = byName;
_.valueOf = valueOf_13;
_.values = values_16;
_ = provide('peergos.shared.user.IdentityLinkProof');
_.buildAndSign = buildAndSign;
_.fromCbor = fromCbor_86;
_.parse = parse_4;
_ = provide('peergos.shared.user.JavaScriptPoster');
_.convertToBytes = convertToBytes;
_.emptyArray = emptyArray;
_ = provide('peergos.shared.user.Profile', Profile);
$clinit_ProfilePaths();
_ = provide('peergos.shared.user.ProfilePaths');
_.getBio = getBio;
_.getEmail = getEmail;
_.getFirstName = getFirstName;
_.getHighResProfilePhoto = getHighResProfilePhoto;
_.getLastName = getLastName;
_.getPhone = getPhone;
_.getProfile = getProfile;
_.getProfilePhoto = getProfilePhoto;
_.getStatus = getStatus;
_.getWebRoot = getWebRoot;
_.publishWebroot = publishWebroot;
_.setBio = setBio;
_.setEmail = setEmail;
_.setFirstName = setFirstName;
_.setHighResProfilePhoto = setHighResProfilePhoto;
_.setLastName = setLastName;
_.setPhone = setPhone;
_.setProfilePhoto = setProfilePhoto;
_.setStatus = setStatus;
_.setWebRoot = setWebRoot;
_.unpublishWebRoot = unpublishWebRoot;
$clinit_SecretGenerationAlgorithm$Type();
_ = provide('peergos.shared.user.SecretGenerationAlgorithm.Type');
_.Random = Random_1;
_.Scrypt = Scrypt;
_.byValue = byValue_10;
_.valueOf = valueOf_14;
_.values = values_17;
$clinit_ServerMessage();
_ = provide('peergos.shared.user.ServerMessage', ServerMessage);
_.MAX_CONTENT_SIZE = MAX_CONTENT_SIZE;
$clinit_ServerMessage$Type();
_ = provide('peergos.shared.user.ServerMessage.Type');
_.Dismiss = Dismiss;
_.FromServer = FromServer;
_.FromUser = FromUser;
_.byValue = byValue_12;
_.valueOf = valueOf_15;
_.values = values_18;
_ = provide('peergos.shared.user.ServerMessage');
_.buildUserMessage = buildUserMessage;
_.fromCbor = fromCbor_91;
$clinit_SharedWithCache$Access();
_ = provide('peergos.shared.user.SharedWithCache.Access');
_.READ = READ;
_.WRITE = WRITE;
_.valueOf = valueOf_16;
_.values = values_19;
_ = provide('peergos.shared.user.SocialState', SocialState);
_.FOLLOWERS_GROUP_NAME = FOLLOWERS_GROUP_NAME;
_.FRIENDS_GROUP_NAME = FRIENDS_GROUP_NAME;
_ = provide('peergos.shared.user.TodoBoard');
_.build = build_15;
_.buildFromJs = buildFromJs;
_.fromByteArray = fromByteArray_3;
_ = provide('peergos.shared.user.TodoList');
_.build = build_16;
_.buildFromJs = buildFromJs_0;
_.fromCbor = fromCbor_94;
_ = provide('peergos.shared.user.TodoListItem', TodoListItem);
_.build = build_17;
_.fromCbor = fromCbor_95;
_ = provide('peergos.shared.user.TrieNode');
_.canonicalise = canonicalise_0;
$clinit_TrieNodeImpl();
_ = provide('peergos.shared.user.TrieNodeImpl', TrieNodeImpl);
_.empty = empty_6;
_ = provide('peergos.shared.user.UserContext.EncryptedURL', UserContext$EncryptedURL);
_.PAD_TO_SIZE = PAD_TO_SIZE;
$clinit_UserContext();
_ = provide('peergos.shared.user.UserContext');
_.fromSecretLink = fromSecretLink;
_.restoreContext = restoreContext;
_.signIn = signIn;
_.signUp = signUp;
$clinit_UserStaticData();
_ = provide('peergos.shared.user.UserStaticData');
_.fromByteArray = fromByteArray_4;
_ = provide('peergos.shared.user.fs.AsyncReader.ArrayBacked', AsyncReader$ArrayBacked);
_ = provide('peergos.shared.user.fs.AsyncReader');
_.build = build_18;
_ = provide('peergos.shared.user.fs.BrowserFileReader', BrowserFileReader);
$clinit_FileProperties();
_ = provide('peergos.shared.user.fs.FileProperties', FileProperties);
_.EMPTY = EMPTY_2;
_.MAX_FILE_NAME_SIZE = MAX_FILE_NAME_SIZE;
_.MAX_PATH_SIZE = MAX_PATH_SIZE;
_.calculateMapKey = calculateMapKey;
_.calculateNextMapKey = calculateNextMapKey;
_.calculateSubsequentMapKeys = calculateSubsequentMapKeys;
_.ensureValidParsedPath = ensureValidParsedPath;
_.ensureValidPath = ensureValidPath;
_.fromCbor = fromCbor_102;
_ = provide('peergos.shared.user.fs.FileWrapper.FileUploadProperties', FileWrapper$FileUploadProperties);
_ = provide('peergos.shared.user.fs.FileWrapper.FolderUploadProperties', FileWrapper$FolderUploadProperties);
$clinit_FileWrapper();
_ = provide('peergos.shared.user.fs.FileWrapper');
_.deleteChildren = deleteChildren;
_ = provide('peergos.shared.user.fs.Fragmenter');
_.fromCbor = fromCbor_103;
_.getInstance = getInstance;
_ = provide('peergos.shared.user.fs.RelativeCapability', RelativeCapability);
_ = provide('peergos.shared.user.fs.Thumbnail', Thumbnail);
_ = provide('peergos.shared.util.Either');
_.a = a_4;
_.b = b_6;
_ = provide('peergos.shared.util.Futures');
_.incomplete = incomplete;
_.of = of_7;
_ = provide('peergos.shared.util.LongUtil');
_.box = box;
_ = provide('peergos.shared.util.Serialize');
_.newByteArray = newByteArray;
_.parse = parse_8;
_ = provide('peergos.shared.util.Version', Version);
_.parse = parse_9;
var $entry = ($clinit_Impl() , entry_7);
var gwtOnLoad = gwtOnLoad = gwtOnLoad_0;
addInitFunctions(init);
setGwtProperty('permProps', [[['user.agent', 'safari']]]);
if (peergoslib) peergoslib.onScriptLoad(gwtOnLoad);})();